Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (x <> y)
 -- (mem x (insort y z) = mem x z)

----------------------------------
Goal: ((eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : bool = (eqb x y)
gv0 : bool = (eqb x y || (eqb x n || mem x z))%bool
gv4 : bool = (mem x z)
gv3 : bool = (eqb x n)
gv2 : bool = (eqb x n || mem x z)%bool


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 40.994 seconds

Label: Generalization #0
Assumptions: 
 -- (x <> y)

----------------------------------
Goal: ((eqb x y || gv2)%bool = gv2)
Case: 3

Label: Generalization #1
Assumptions: 
 -- (x <> y)

----------------------------------
Goal: ((eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)
Case: 3

Label: Generalization #2
Assumptions: 
 -- (x <> y)

----------------------------------
Goal: ((eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)
Case: 3

Label: Generalization #3
Assumptions: 
 -- (x <> y)
 -- ((eqb x y || (eqb x n || mem x z))%bool = gv0)

----------------------------------
Goal: (gv0 = (eqb x n || mem x z)%bool)
Case: 3

Label: Generalization #4
Assumptions: 
 -- (x <> y)
 -- (eqb x y = gv1)

----------------------------------
Goal: ((gv1 || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)
Case: 3

Label: Generalization #5
Assumptions: 
 -- (x <> y)

----------------------------------
Goal: ((eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 42.16 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
Nat : Set
Lst : Set
less : (Nat -> Nat -> bool)
eqb : (Nat -> Nat -> bool)
mem : (Nat -> Lst -> bool)
insort : (Nat -> Lst -> Lst)
sort : (Lst -> Lst)

Label: 0 (0)
Abducted Assumption: (x <> y)
Positive Examples:
   [gv2 := false; n := zero; x := (succ (succ zero)); y := zero; z := (cons (succ (succ (succ zero))) nil)]
   [gv2 := true; n := (succ (succ (succ zero))); x := (succ (succ (succ (succ zero)))); y := zero; z := nil]
   [gv2 := true; n := zero; x := zero; y := (succ (succ zero)); z := (cons (succ zero) (cons zero (cons (succ (succ zero)) (cons zero nil))))]
   [gv2 := false; n := zero; x := (succ (succ zero)); y := (succ (succ (succ zero))); z := (cons (succ zero) (cons zero (cons (succ zero) nil)))]
   [gv2 := true; n := (succ (succ (succ (succ zero)))); x := (succ (succ (succ (succ (succ (succ zero)))))); y := (succ zero); z := (cons (succ zero) nil)]
   [gv2 := true; n := (succ (succ (succ (succ (succ zero))))); x := (succ (succ (succ zero))); y := zero; z := (cons zero nil)]
   [gv2 := true; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ zero); z := (cons zero (cons (succ (succ zero)) (cons (succ zero) nil)))]
   [gv2 := false; n := (succ (succ (succ zero))); x := (succ (succ (succ zero))); y := (succ zero); z := (cons zero nil)]
   [gv2 := true; n := (succ zero); x := (succ (succ (succ (succ (succ zero))))); y := (succ zero); z := (cons zero (cons zero nil))]
   [gv2 := false; n := (succ (succ (succ (succ zero)))); x := zero; y := (succ (succ zero)); z := (cons zero (cons zero (cons (succ (succ zero)) (cons zero (cons zero nil)))))]
   etc ...

Negative Examples:
   [gv2 := false; n := (succ zero); x := (succ (succ zero)); y := (succ (succ zero)); z := (cons zero (cons (succ (succ zero)) nil))]
   [gv2 := false; n := (succ (succ (succ (succ (succ (succ zero)))))); x := zero; y := zero; z := (cons zero (cons zero nil))]
   [gv2 := false; n := zero; x := zero; y := zero; z := (cons zero
   (cons (succ (succ zero)) (cons (succ (succ zero)) (cons zero nil))))]
   [gv2 := false; n := zero; x := (succ zero); y := (succ zero); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv2 := false; n := (succ (succ (succ zero))); x := (succ (succ (succ zero))); y := (succ (succ (succ zero))); z := (cons (succ (succ zero)) (cons zero (cons (succ zero) nil)))]
   [gv2 := false; n := (succ (succ (succ (succ zero)))); x := zero; y := zero; z := (cons (succ zero) nil)]
   [gv2 := false; n := (succ zero); x := zero; y := zero; z := (cons zero
   (cons zero
      (cons zero (cons zero (cons (succ zero) (cons (succ (succ zero)) nil))))))]
   [gv2 := false; n := zero; x := zero; y := zero; z := (cons (succ (succ (succ (succ (succ (succ zero)))))) nil)]
   [gv2 := false; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ zero); z := nil]
   [gv2 := false; n := (succ zero); x := (succ zero); y := (succ zero); z := (cons (succ (succ zero))
   (cons zero (cons (succ (succ zero)) (cons zero nil))))]
   etc ...


Label: 1 (1)
Abducted Assumption: (x <> y)
Positive Examples:
   [gv3 := false; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ (succ zero)); z := (cons zero nil)]
   [gv3 := false; n := (succ (succ zero)); x := (succ (succ (succ (succ (succ zero))))); y := (succ zero); z := nil]
   [gv3 := true; n := (succ zero); x := (succ (succ (succ zero))); y := zero; z := (cons (succ (succ zero)) nil)]
   [gv3 := false; n := (succ (succ (succ (succ zero)))); x := (succ (succ (succ (succ zero)))); y := zero; z := (cons (succ zero)
   (cons (succ (succ zero))
      (cons (succ (succ zero)) (cons (succ zero) (cons zero nil)))))]
   [gv3 := true; n := (succ zero); x := (succ (succ (succ (succ zero)))); y := (succ (succ zero)); z := (cons zero (cons (succ zero) nil))]
   [gv3 := true; n := (succ (succ zero)); x := zero; y := (succ (succ (succ (succ zero)))); z := nil]
   [gv3 := false; n := (succ zero); x := (succ zero); y := zero; z := (cons (succ (succ zero)) (cons (succ zero) nil))]
   [gv3 := true; n := (succ (succ (succ (succ zero)))); x := zero; y := (succ (succ (succ (succ zero)))); z := (cons (succ zero) nil)]
   [gv3 := false; n := zero; x := zero; y := (succ zero); z := (cons (succ zero) (cons (succ zero) nil))]
   [gv3 := false; n := zero; x := zero; y := (succ (succ (succ zero))); z := (cons (succ zero) (cons (succ (succ (succ zero))) nil))]
   etc ...

Negative Examples:
   [gv3 := false; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ (succ zero)); z := (cons zero (cons zero nil))]
   [gv3 := false; n := (succ zero); x := zero; y := zero; z := (cons (succ (succ (succ zero))) nil)]
   [gv3 := false; n := zero; x := zero; y := zero; z := (cons (succ (succ zero)) (cons (succ (succ zero)) nil))]
   [gv3 := false; n := zero; x := (succ zero); y := (succ zero); z := (cons (succ (succ (succ zero))) (cons (succ (succ zero)) nil))]
   [gv3 := false; n := zero; x := (succ (succ zero)); y := (succ (succ zero)); z := (cons zero (cons (succ zero) nil))]
   [gv3 := false; n := (succ zero); x := (succ zero); y := (succ zero); z := (cons (succ (succ (succ (succ (succ zero))))) (cons zero nil))]
   [gv3 := false; n := zero; x := (succ (succ (succ zero))); y := (succ (succ (succ zero))); z := (cons (succ zero) (cons zero (cons (succ zero) nil)))]
   [gv3 := false; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ (succ zero)); z := (cons (succ zero) (cons (succ zero) nil))]
   [gv3 := false; n := (succ zero); x := zero; y := zero; z := (cons (succ (succ (succ zero))) (cons (succ (succ zero)) nil))]
   [gv3 := false; n := zero; x := (succ (succ (succ (succ zero)))); y := (succ (succ (succ (succ zero)))); z := nil]
   etc ...


Label: 2 (2)
Abducted Assumption: (x <> y)
Positive Examples:
   [gv4 := false; n := zero; x := (succ zero); y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv4 := true; n := (succ zero); x := (succ (succ zero)); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ zero)) nil))]
   [gv4 := false; n := (succ (succ (succ zero))); x := zero; y := (succ (succ zero)); z := (cons (succ zero) nil)]
   [gv4 := true; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ (succ zero)); z := (cons zero nil)]
   [gv4 := true; n := zero; x := zero; y := (succ zero); z := (cons (succ (succ (succ zero))) (cons (succ zero) nil))]
   [gv4 := true; n := zero; x := zero; y := (succ (succ (succ zero))); z := (cons zero (cons (succ (succ (succ zero))) (cons zero nil)))]
   [gv4 := false; n := (succ zero); x := zero; y := (succ zero); z := (cons (succ zero) (cons (succ (succ zero)) nil))]
   [gv4 := true; n := zero; x := zero; y := (succ (succ zero)); z := (cons zero (cons zero (cons (succ (succ zero)) nil)))]
   [gv4 := false; n := (succ (succ (succ zero))); x := (succ zero); y := zero; z := (cons zero (cons (succ (succ zero)) (cons (succ zero) nil)))]
   [gv4 := false; n := (succ zero); x := (succ zero); y := (succ (succ (succ zero))); z := (cons (succ (succ (succ zero))) nil)]
   etc ...

Negative Examples:
   [gv4 := false; n := (succ zero); x := zero; y := zero; z := (cons (succ (succ (succ (succ (succ zero)))))
   (cons (succ zero)
      (cons (succ (succ (succ (succ (succ zero)))))
         (cons (succ (succ (succ zero))) (cons zero nil)))))]
   [gv4 := false; n := (succ (succ zero)); x := zero; y := zero; z := (cons zero (cons (succ zero) (cons zero nil)))]
   [gv4 := false; n := zero; x := (succ (succ (succ zero))); y := (succ (succ (succ zero))); z := (cons zero (cons zero nil))]
   [gv4 := false; n := (succ zero); x := zero; y := zero; z := (cons zero
   (cons zero (cons (succ (succ (succ (succ zero)))) (cons (succ zero) nil))))]
   [gv4 := false; n := (succ (succ zero)); x := zero; y := zero; z := (cons zero
   (cons (succ zero) (cons (succ (succ zero)) (cons (succ (succ zero)) nil))))]
   [gv4 := false; n := (succ (succ zero)); x := (succ zero); y := (succ zero); z := (cons zero (cons zero nil))]
   [gv4 := false; n := zero; x := (succ zero); y := (succ zero); z := (cons zero (cons (succ zero) (cons zero (cons zero nil))))]
   [gv4 := false; n := (succ (succ (succ zero))); x := (succ zero); y := (succ zero); z := (cons (succ (succ zero)) (cons (succ zero) (cons (succ (succ zero)) nil)))]
   [gv4 := false; n := (succ zero); x := zero; y := zero; z := (cons (succ zero)
   (cons (succ zero) (cons zero (cons (succ (succ zero)) nil))))]
   [gv4 := false; n := (succ (succ zero)); x := zero; y := zero; z := (cons (succ zero) (cons zero (cons (succ (succ zero)) nil)))]
   etc ...


Label: 3 (3)
Abducted Assumption: (x <> y)
Positive Examples:
   [gv0 := true; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ (succ (succ zero))); z := (cons (succ (succ zero)) nil)]
   [gv0 := true; n := (succ (succ zero)); x := (succ (succ zero)); y := zero; z := (cons zero (cons zero (cons zero (cons zero nil))))]
   [gv0 := true; n := (succ zero); x := (succ zero); y := zero; z := (cons zero (cons (succ (succ (succ zero))) nil))]
   [gv0 := true; n := (succ zero); x := (succ zero); y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv0 := false; n := (succ (succ zero)); x := (succ zero); y := zero; z := (cons (succ (succ (succ (succ (succ zero))))) nil)]
   [gv0 := false; n := zero; x := (succ (succ (succ (succ zero)))); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ (succ zero))) nil))]
   [gv0 := true; n := (succ (succ (succ zero))); x := zero; y := (succ zero); z := (cons (succ zero) (cons zero (cons (succ zero) nil)))]
   [gv0 := true; n := zero; x := (succ (succ zero)); y := (succ zero); z := (cons (succ (succ zero)) (cons (succ (succ (succ (succ zero)))) nil))]
   [gv0 := true; n := (succ (succ (succ zero))); x := zero; y := (succ zero); z := (cons zero (cons zero (cons zero nil)))]
   [gv0 := false; n := (succ (succ (succ (succ (succ (succ zero)))))); x := zero; y := (succ zero); z := (cons (succ zero) nil)]
   etc ...

Negative Examples:
   [gv0 := true; n := zero; x := (succ zero); y := (succ zero); z := (cons zero (cons (succ (succ zero)) (cons zero (cons zero nil))))]
   [gv0 := true; n := zero; x := (succ zero); y := (succ zero); z := (cons zero (cons zero (cons zero nil)))]
   [gv0 := true; n := zero; x := (succ zero); y := (succ zero); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv0 := true; n := (succ (succ (succ (succ (succ zero))))); x := zero; y := zero; z := (cons (succ zero) nil)]
   [gv0 := true; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ zero); z := (cons zero nil)]
   [gv0 := true; n := (succ zero); x := zero; y := zero; z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv0 := true; n := zero; x := (succ (succ (succ zero))); y := (succ (succ (succ zero))); z := (cons zero (cons zero nil))]
   [gv0 := true; n := (succ (succ (succ (succ zero)))); x := zero; y := zero; z := (cons (succ zero)
   (cons (succ (succ zero))
      (cons (succ zero)
         (cons (succ (succ (succ zero))) (cons (succ (succ (succ zero))) nil)))))]
   [gv0 := true; n := (succ (succ zero)); x := zero; y := zero; z := (cons (succ (succ zero)) nil)]
   [gv0 := true; n := (succ zero); x := (succ (succ (succ (succ zero)))); y := (succ (succ (succ (succ zero)))); z := (cons zero (cons zero nil))]
   etc ...


Label: 3 (4)
Abducted Assumption: ((eqb x y || (eqb x n || mem x z))%bool = gv0)
Positive Examples:
   [gv0 := true; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ (succ (succ zero))); z := (cons (succ (succ zero)) nil)]
   [gv0 := true; n := (succ (succ zero)); x := (succ (succ zero)); y := zero; z := (cons zero (cons zero (cons zero (cons zero nil))))]
   [gv0 := true; n := (succ zero); x := (succ zero); y := zero; z := (cons zero (cons (succ (succ (succ zero))) nil))]
   [gv0 := true; n := (succ zero); x := (succ zero); y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv0 := false; n := (succ (succ zero)); x := (succ zero); y := zero; z := (cons (succ (succ (succ (succ (succ zero))))) nil)]
   [gv0 := false; n := zero; x := (succ (succ (succ (succ zero)))); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ (succ zero))) nil))]
   [gv0 := true; n := (succ (succ (succ zero))); x := zero; y := (succ zero); z := (cons (succ zero) (cons zero (cons (succ zero) nil)))]
   [gv0 := true; n := zero; x := (succ (succ zero)); y := (succ zero); z := (cons (succ (succ zero)) (cons (succ (succ (succ (succ zero)))) nil))]
   [gv0 := true; n := (succ (succ (succ zero))); x := zero; y := (succ zero); z := (cons zero (cons zero (cons zero nil)))]
   [gv0 := false; n := (succ (succ (succ (succ (succ (succ zero)))))); x := zero; y := (succ zero); z := (cons (succ zero) nil)]
   etc ...

Negative Examples:
   [gv0 := false; n := (succ zero); x := zero; y := (succ (succ (succ zero))); z := (cons zero (cons (succ (succ (succ zero))) (cons (succ zero) nil)))]
   [gv0 := false; n := zero; x := zero; y := (succ (succ zero)); z := (cons zero (cons zero (cons (succ (succ (succ (succ zero)))) nil)))]
   [gv0 := true; n := zero; x := (succ (succ zero)); y := zero; z := (cons zero (cons (succ zero) (cons (succ zero) nil)))]
   [gv0 := false; n := zero; x := zero; y := (succ zero); z := (cons (succ (succ zero)) (cons zero (cons zero nil)))]
   [gv0 := true; n := (succ (succ (succ (succ zero)))); x := (succ (succ (succ zero))); y := zero; z := (cons (succ (succ zero)) nil)]
   [gv0 := false; n := zero; x := zero; y := (succ (succ (succ zero))); z := (cons (succ (succ zero)) nil)]
   [gv0 := true; n := (succ (succ (succ zero))); x := (succ (succ zero)); y := (succ zero); z := (cons (succ (succ (succ zero))) nil)]
   [gv0 := true; n := zero; x := (succ zero); y := zero; z := (cons zero (cons (succ (succ zero)) (cons zero nil)))]
   [gv0 := false; n := (succ (succ (succ (succ (succ zero))))); x := (succ (succ (succ (succ (succ zero))))); y := zero; z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv0 := false; n := zero; x := zero; y := (succ (succ (succ zero))); z := (cons zero (cons (succ (succ (succ (succ zero)))) (cons (succ zero) nil)))]
   etc ...


Label: 4 (5)
Abducted Assumption: (x <> y)
Positive Examples:
   [gv1 := false; n := zero; x := (succ (succ (succ (succ zero)))); y := zero; z := (cons (succ zero) nil)]
   [gv1 := false; n := zero; x := (succ zero); y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv1 := false; n := (succ zero); x := (succ zero); y := zero; z := (cons (succ (succ (succ (succ (succ (succ zero))))))
   (cons (succ (succ (succ zero))) (cons zero (cons zero (cons zero nil)))))]
   [gv1 := false; n := (succ (succ zero)); x := (succ zero); y := (succ (succ zero)); z := (cons (succ (succ zero)) nil)]
   [gv1 := false; n := (succ (succ zero)); x := (succ zero); y := (succ (succ zero)); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv1 := false; n := zero; x := zero; y := (succ (succ zero)); z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv1 := false; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ (succ zero)); z := (cons zero nil)]
   [gv1 := false; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ zero); z := (cons (succ zero) (cons zero nil))]
   [gv1 := false; n := (succ (succ (succ zero))); x := (succ (succ (succ zero))); y := zero; z := (cons zero (cons (succ zero) (cons zero nil)))]
   [gv1 := false; n := (succ (succ zero)); x := zero; y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ (succ (succ zero)))) nil)]
   etc ...

Negative Examples:
   [gv1 := true; n := (succ (succ (succ (succ zero)))); x := zero; y := zero; z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv1 := true; n := zero; x := (succ zero); y := (succ zero); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv1 := true; n := (succ (succ (succ zero))); x := zero; y := zero; z := (cons (succ (succ (succ zero))) (cons (succ (succ (succ zero))) nil))]
   [gv1 := true; n := (succ (succ zero)); x := (succ zero); y := (succ zero); z := (cons zero (cons zero (cons zero (cons (succ (succ (succ zero))) nil))))]
   [gv1 := true; n := (succ (succ zero)); x := zero; y := zero; z := (cons (succ (succ (succ (succ zero)))) (cons (succ zero) nil))]
   [gv1 := true; n := zero; x := (succ (succ (succ (succ zero)))); y := (succ (succ (succ (succ zero)))); z := nil]
   [gv1 := true; n := (succ zero); x := zero; y := zero; z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv1 := true; n := (succ (succ zero)); x := zero; y := zero; z := (cons (succ (succ zero)) (cons (succ zero) (cons (succ zero) nil)))]
   [gv1 := true; n := (succ (succ zero)); x := (succ (succ (succ zero))); y := (succ (succ (succ zero))); z := (cons zero (cons zero nil))]
   [gv1 := true; n := (succ (succ (succ (succ (succ (succ zero)))))); x := zero; y := zero; z := nil]
   etc ...


Label: 4 (6)
Abducted Assumption: (eqb x y = gv1)
Positive Examples:
   [gv1 := false; n := zero; x := (succ (succ (succ (succ zero)))); y := zero; z := (cons (succ zero) nil)]
   [gv1 := false; n := zero; x := (succ zero); y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv1 := false; n := (succ zero); x := (succ zero); y := zero; z := (cons (succ (succ (succ (succ (succ (succ zero))))))
   (cons (succ (succ (succ zero))) (cons zero (cons zero (cons zero nil)))))]
   [gv1 := false; n := (succ (succ zero)); x := (succ zero); y := (succ (succ zero)); z := (cons (succ (succ zero)) nil)]
   [gv1 := false; n := (succ (succ zero)); x := (succ zero); y := (succ (succ zero)); z := (cons (succ (succ zero)) (cons zero nil))]
   [gv1 := false; n := zero; x := zero; y := (succ (succ zero)); z := (cons (succ (succ (succ (succ zero)))) nil)]
   [gv1 := false; n := (succ (succ (succ (succ zero)))); x := (succ zero); y := (succ (succ zero)); z := (cons zero nil)]
   [gv1 := false; n := (succ (succ zero)); x := (succ (succ zero)); y := (succ zero); z := (cons (succ zero) (cons zero nil))]
   [gv1 := false; n := (succ (succ (succ zero))); x := (succ (succ (succ zero))); y := zero; z := (cons zero (cons (succ zero) (cons zero nil)))]
   [gv1 := false; n := (succ (succ zero)); x := zero; y := (succ (succ (succ (succ zero)))); z := (cons (succ (succ (succ (succ zero)))) nil)]
   etc ...

Negative Examples:
   [gv1 := true; n := zero; x := (succ (succ (succ (succ (succ zero))))); y := (succ zero); z := (cons zero (cons zero (cons (succ (succ zero)) nil)))]
   [gv1 := true; n := (succ zero); x := zero; y := (succ (succ zero)); z := (cons (succ (succ zero)) (cons (succ (succ zero)) nil))]
   [gv1 := true; n := zero; x := (succ (succ zero)); y := (succ zero); z := (cons (succ zero)
   (cons (succ (succ (succ zero)))
      (cons zero (cons (succ zero) (cons zero nil)))))]
   [gv1 := true; n := (succ zero); x := (succ (succ (succ (succ (succ zero))))); y := (succ (succ (succ zero))); z := (cons (succ (succ zero)) nil)]
   [gv1 := true; n := (succ (succ (succ zero))); x := (succ (succ (succ (succ (succ zero))))); y := (succ (succ zero)); z := (cons (succ (succ (succ zero))) nil)]
   [gv1 := true; n := (succ (succ zero)); x := (succ zero); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ zero)) nil))]
   [gv1 := true; n := zero; x := (succ (succ (succ zero))); y := (succ (succ (succ (succ zero)))); z := (cons zero (cons (succ zero) (cons zero nil)))]
   [gv1 := true; n := zero; x := (succ (succ (succ (succ zero)))); y := (succ (succ zero)); z := (cons zero (cons zero nil))]
   [gv1 := true; n := (succ zero); x := zero; y := (succ (succ zero)); z := (cons (succ zero) (cons (succ (succ (succ zero))) (cons (succ zero) nil)))]
   [gv1 := true; n := (succ (succ (succ zero))); x := zero; y := (succ (succ zero)); z := (cons (succ (succ zero))
   (cons (succ (succ zero))
      (cons (succ (succ (succ (succ (succ zero))))) nil)))]
   etc ...


Label: 5 (7)
Abducted Assumption: (x <> y)
Positive Examples:
   [n := (succ zero); x := zero; y := (succ zero); z := (cons (succ (succ (succ zero))) (cons zero nil))]
   [n := zero; x := (succ (succ (succ zero))); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ (succ zero))) nil))]
   [n := (succ (succ (succ (succ zero)))); x := (succ (succ (succ zero))); y := (succ zero); z := nil]
   [n := (succ (succ (succ (succ zero)))); x := (succ (succ (succ zero))); y := (succ zero); z := (cons zero (cons (succ zero) (cons (succ zero) (cons zero nil))))]
   [n := (succ (succ zero)); x := (succ (succ (succ zero))); y := zero; z := (cons (succ (succ zero)) (cons (succ (succ (succ zero))) nil))]
   [n := (succ (succ (succ (succ (succ (succ zero)))))); x := (succ zero); y := zero; z := (cons (succ (succ zero)) (cons (succ zero) (cons zero nil)))]
   [n := zero; x := zero; y := (succ (succ (succ zero))); z := (cons (succ (succ (succ zero))) (cons (succ zero) nil))]
   [n := (succ zero); x := (succ zero); y := (succ (succ zero)); z := (cons (succ zero) nil)]
   [n := (succ (succ (succ (succ zero)))); x := zero; y := (succ (succ zero)); z := (cons zero (cons (succ (succ zero)) nil))]
   [n := zero; x := (succ zero); y := (succ (succ zero)); z := (cons zero (cons (succ (succ (succ (succ zero)))) nil))]
   etc ...

Negative Examples:
   [n := zero; x := (succ (succ zero)); y := (succ (succ zero)); z := (cons zero (cons zero (cons zero (cons zero nil))))]
   [n := (succ zero); x := (succ (succ zero)); y := (succ (succ zero)); z := (cons (succ (succ (succ (succ (succ zero))))) nil)]
   [n := (succ (succ zero)); x := (succ zero); y := (succ zero); z := (cons (succ (succ zero)) (cons zero nil))]
   [n := (succ (succ zero)); x := zero; y := zero; z := (cons (succ zero) (cons (succ zero) (cons (succ (succ zero)) nil)))]
   [n := (succ (succ zero)); x := (succ zero); y := (succ zero); z := (cons (succ (succ (succ (succ zero))))
   (cons (succ (succ (succ zero)))
      (cons (succ (succ (succ (succ zero)))) nil)))]
   [n := (succ zero); x := zero; y := zero; z := (cons (succ zero) (cons (succ zero) (cons (succ zero) nil)))]
   [n := (succ (succ (succ (succ (succ zero))))); x := (succ zero); y := (succ zero); z := nil]
   [n := (succ zero); x := zero; y := zero; z := (cons (succ zero) (cons (succ zero) (cons (succ (succ (succ zero))) nil)))]
   [n := (succ (succ (succ zero))); x := (succ zero); y := (succ zero); z := (cons zero (cons (succ (succ (succ zero))) nil))]
   [n := zero; x := (succ (succ zero)); y := (succ (succ zero)); z := (cons (succ (succ (succ (succ zero)))) nil)]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 44.405 seconds


Label: 0 (0)
(false = gv2), (true = gv2), (gv2 = gv2), (y = y), (y = x), (x = y), (x = x), (false = eqb y y), (false = eqb y x), (false = eqb x y)
(false = eqb x x), (false = less y y), (false = less y x), (false = less x y), (false = less x x), (true = eqb y y), (true = eqb y x), (true = eqb x y), (true = eqb x x), (true = less y y)
(true = less y x), (true = less x y), (true = less x x), (false <> gv2), (true <> gv2), (gv2 <> gv2), (y <> y), (y <> x), (x <> y), (x <> x)
(None = Some y), (None = Some x), (eqb y y = gv2), (eqb y x = gv2), (eqb x y = gv2), (eqb x x = gv2), (less y y = gv2), (less y y = eqb y y), (less y y = eqb y x), (less y y = eqb x y)
(less y y = eqb x x), (less y x = gv2), (less y x = eqb y y), (less y x = eqb y x), (less y x = eqb x y), (less y x = eqb x x), (less x y = gv2), (less x y = eqb y y), (less x y = eqb y x), (less x y = eqb x y)
(less x y = eqb x x), (less x x = gv2), (less x x = eqb y y), (less x x = eqb y x), (less x x = eqb x y), (less x x = eqb x x), (None = Some gv2)

Label: 1 (1)
(false = gv3), (true = gv3), (z = z), (gv3 = gv3), (y = y), (y = x), (x = y), (x = x), (false = mem y z), (false = mem x z)
(false = eqb y y), (false = eqb y x), (false = eqb x y), (false = eqb x x), (false = less y y), (false = less y x), (false = less x y), (false = less x x), (true = mem y z), (true = mem x z)
(true = eqb y y), (true = eqb y x), (true = eqb x y), (true = eqb x x), (true = less y y), (true = less y x), (true = less x y), (true = less x x), (false <> gv3), (true <> gv3)
(z <> z), (gv3 <> gv3), (y <> y), (y <> x), (x <> y), (x <> x), (sort z = z), (sort z = insort y z), (sort z = insort x z), (insort y z = z)
(insort x z = z), (None = Some gv3), (None = Some z), (None = Some y), (None = Some x), (mem y z = gv3), (mem y z = eqb y y), (mem y z = eqb y x), (mem y z = eqb x y), (mem y z = eqb x x)
(mem y z = less y y), (mem y z = less y x), (mem y z = less x y), (mem y z = less x x), (mem x z = gv3), (mem x z = eqb y y), (mem x z = eqb y x), (mem x z = eqb x y), (mem x z = eqb x x), (mem x z = less y y)
(mem x z = less y x), (mem x z = less x y), (mem x z = less x x), (eqb y y = gv3), (eqb y x = gv3), (eqb x y = gv3), (eqb x x = gv3), (less y y = gv3), (less y y = eqb y y), (less y y = eqb y x)
(less y y = eqb x y), (less y y = eqb x x), (less y x = gv3), (less y x = eqb y y), (less y x = eqb y x), (less y x = eqb x y), (less y x = eqb x x), (less x y = gv3), (less x y = eqb y y), (less x y = eqb y x)
(less x y = eqb x y), (less x y = eqb x x), (less x x = gv3), (less x x = eqb y y), (less x x = eqb y x), (less x x = eqb x y), (less x x = eqb x x)

Label: 2 (2)
(false = gv4), (true = gv4), (gv4 = gv4), (n = n), (n = y), (n = x), (y = n), (y = y), (y = x), (x = n)
(x = y), (x = x), (false = eqb n n), (false = eqb n y), (false = eqb n x), (false = eqb y n), (false = eqb y y), (false = eqb y x), (false = eqb x n), (false = eqb x y)
(false = eqb x x), (false = less n n), (false = less n y), (false = less n x), (false = less y n), (false = less y y), (false = less y x), (false = less x n), (false = less x y), (false = less x x)
(true = eqb n n), (true = eqb n y), (true = eqb n x), (true = eqb y n), (true = eqb y y), (true = eqb y x), (true = eqb x n), (true = eqb x y), (true = eqb x x), (true = less n n)
(true = less n y), (true = less n x), (true = less y n), (true = less y y), (true = less y x), (true = less x n), (true = less x y), (true = less x x), (false <> gv4), (true <> gv4)
(gv4 <> gv4), (n <> n), (n <> y), (n <> x), (y <> n), (y <> y), (y <> x), (x <> n), (x <> y), (x <> x)
(None = Some n), (None = Some y), (None = Some x), (eqb n n = gv4), (eqb n y = gv4), (eqb n x = gv4), (eqb y n = gv4), (eqb y y = gv4), (eqb y x = gv4), (eqb x n = gv4)
(eqb x y = gv4), (eqb x x = gv4), (less n n = gv4), (less n n = eqb n n), (less n n = eqb n y), (less n n = eqb n x), (less n n = eqb y n), (less n n = eqb y y), (less n n = eqb y x), (less n n = eqb x n)
(less n n = eqb x y), (less n n = eqb x x), (less n y = gv4), (less n y = eqb n n), (less n y = eqb n y), (less n y = eqb n x), (less n y = eqb y n), (less n y = eqb y y), (less n y = eqb y x), (less n y = eqb x n)
(less n y = eqb x y), (less n y = eqb x x), (less n x = gv4), (less n x = eqb n n), (less n x = eqb n y), (less n x = eqb n x), (less n x = eqb y n), (less n x = eqb y y), (less n x = eqb y x), (less n x = eqb x n)
(less n x = eqb x y), (less n x = eqb x x), (less y n = gv4), (less y n = eqb n n), (less y n = eqb n y), (less y n = eqb n x), (less y n = eqb y n), (less y n = eqb y y), (less y n = eqb y x), (less y n = eqb x n)
(less y n = eqb x y), (less y n = eqb x x), (less y y = gv4), (less y y = eqb n n), (less y y = eqb n y), (less y y = eqb n x), (less y y = eqb y n), (less y y = eqb y y), (less y y = eqb y x), (less y y = eqb x n)
(less y y = eqb x y), (less y y = eqb x x), (less y x = gv4), (less y x = eqb n n), (less y x = eqb n y), (less y x = eqb n x), (less y x = eqb y n), (less y x = eqb y y), (less y x = eqb y x), (less y x = eqb x n)
(less y x = eqb x y), (less y x = eqb x x), (less x n = gv4), (less x n = eqb n n), (less x n = eqb n y), (less x n = eqb n x), (less x n = eqb y n), (less x n = eqb y y), (less x n = eqb y x), (less x n = eqb x n)
(less x n = eqb x y), (less x n = eqb x x), (less x y = gv4), (less x y = eqb n n), (less x y = eqb n y), (less x y = eqb n x), (less x y = eqb y n), (less x y = eqb y y), (less x y = eqb y x), (less x y = eqb x n)
(less x y = eqb x y), (less x y = eqb x x), (less x x = gv4), (less x x = eqb n n), (less x x = eqb n y), (less x x = eqb n x), (less x x = eqb y n), (less x x = eqb y y), (less x x = eqb y x), (less x x = eqb x n)
(less x x = eqb x y), (less x x = eqb x x), (None = Some gv4)

Label: 3 (3)
(false = gv0), (true = gv0), (z = z), (y = y), (y = n), (y = x), (n = y), (n = n), (n = x), (x = y)
(x = n), (x = x), (gv0 = gv0), (false = mem y z), (false = mem n z), (false = mem x z), (false = eqb y y), (false = eqb y n), (false = eqb y x), (false = eqb n y)
(false = eqb n n), (false = eqb n x), (false = eqb x y), (false = eqb x n), (false = eqb x x), (false = less y y), (false = less y n), (false = less y x), (false = less n y), (false = less n n)
(false = less n x), (false = less x y), (false = less x n), (false = less x x), (true = mem y z), (true = mem n z), (true = mem x z), (true = eqb y y), (true = eqb y n), (true = eqb y x)
(true = eqb n y), (true = eqb n n), (true = eqb n x), (true = eqb x y), (true = eqb x n), (true = eqb x x), (true = less y y), (true = less y n), (true = less y x), (true = less n y)
(true = less n n), (true = less n x), (true = less x y), (true = less x n), (true = less x x), (false <> gv0), (true <> gv0), (z <> z), (y <> y), (y <> n)
(y <> x), (n <> y), (n <> n), (n <> x), (x <> y), (x <> n), (x <> x), (gv0 <> gv0), (sort z = z), (sort z = insort y z)
(sort z = insort n z), (sort z = insort x z), (insort y z = z), (insort n z = z), (insort x z = z), (None = Some gv0), (None = Some z), (None = Some y), (None = Some n), (None = Some x)
(mem y z = gv0), (mem y z = eqb y y), (mem y z = eqb y n), (mem y z = eqb y x), (mem y z = eqb n y), (mem y z = eqb n n), (mem y z = eqb n x), (mem y z = eqb x y), (mem y z = eqb x n), (mem y z = eqb x x)
(mem y z = less y y), (mem y z = less y n), (mem y z = less y x), (mem y z = less n y), (mem y z = less n n), (mem y z = less n x), (mem y z = less x y), (mem y z = less x n), (mem y z = less x x), (mem n z = gv0)
(mem n z = eqb y y), (mem n z = eqb y n), (mem n z = eqb y x), (mem n z = eqb n y), (mem n z = eqb n n), (mem n z = eqb n x), (mem n z = eqb x y), (mem n z = eqb x n), (mem n z = eqb x x), (mem n z = less y y)
(mem n z = less y n), (mem n z = less y x), (mem n z = less n y), (mem n z = less n n), (mem n z = less n x), (mem n z = less x y), (mem n z = less x n), (mem n z = less x x), (mem x z = gv0), (mem x z = eqb y y)
(mem x z = eqb y n), (mem x z = eqb y x), (mem x z = eqb n y), (mem x z = eqb n n), (mem x z = eqb n x), (mem x z = eqb x y), (mem x z = eqb x n), (mem x z = eqb x x), (mem x z = less y y), (mem x z = less y n)
(mem x z = less y x), (mem x z = less n y), (mem x z = less n n), (mem x z = less n x), (mem x z = less x y), (mem x z = less x n), (mem x z = less x x), (eqb y y = gv0), (eqb y n = gv0), (eqb y x = gv0)
(eqb n y = gv0), (eqb n n = gv0), (eqb n x = gv0), (eqb x y = gv0), (eqb x n = gv0), (eqb x x = gv0), (less y y = gv0), (less y y = eqb y y), (less y y = eqb y n), (less y y = eqb y x)
(less y y = eqb n y), (less y y = eqb n n), (less y y = eqb n x), (less y y = eqb x y), (less y y = eqb x n), (less y y = eqb x x), (less y n = gv0), (less y n = eqb y y), (less y n = eqb y n), (less y n = eqb y x)
(less y n = eqb n y), (less y n = eqb n n), (less y n = eqb n x), (less y n = eqb x y), (less y n = eqb x n), (less y n = eqb x x), (less y x = gv0), (less y x = eqb y y), (less y x = eqb y n), (less y x = eqb y x)
(less y x = eqb n y), (less y x = eqb n n), (less y x = eqb n x), (less y x = eqb x y), (less y x = eqb x n), (less y x = eqb x x), (less n y = gv0), (less n y = eqb y y), (less n y = eqb y n), (less n y = eqb y x)
(less n y = eqb n y), (less n y = eqb n n), (less n y = eqb n x), (less n y = eqb x y), (less n y = eqb x n), (less n y = eqb x x), (less n n = gv0), (less n n = eqb y y), (less n n = eqb y n), (less n n = eqb y x)
(less n n = eqb n y), (less n n = eqb n n), (less n n = eqb n x), (less n n = eqb x y), (less n n = eqb x n), (less n n = eqb x x), (less n x = gv0), (less n x = eqb y y), (less n x = eqb y n), (less n x = eqb y x)
(less n x = eqb n y), (less n x = eqb n n), (less n x = eqb n x), (less n x = eqb x y), (less n x = eqb x n), (less n x = eqb x x), (less x y = gv0), (less x y = eqb y y), (less x y = eqb y n), (less x y = eqb y x)
(less x y = eqb n y), (less x y = eqb n n), (less x y = eqb n x), (less x y = eqb x y), (less x y = eqb x n), (less x y = eqb x x), (less x n = gv0), (less x n = eqb y y), (less x n = eqb y n), (less x n = eqb y x)
(less x n = eqb n y), (less x n = eqb n n), (less x n = eqb n x), (less x n = eqb x y), (less x n = eqb x n), (less x n = eqb x x), (less x x = gv0), (less x x = eqb y y), (less x x = eqb y n), (less x x = eqb y x)
(less x x = eqb n y), (less x x = eqb n n), (less x x = eqb n x), (less x x = eqb x y), (less x x = eqb x n), (less x x = eqb x x)

Label: 3 (4)
(false = gv0), (true = gv0), (z = z), (y = y), (y = n), (y = x), (n = y), (n = n), (n = x), (x = y)
(x = n), (x = x), (gv0 = gv0), (false = mem y z), (false = mem n z), (false = mem x z), (false = eqb y y), (false = eqb y n), (false = eqb y x), (false = eqb n y)
(false = eqb n n), (false = eqb n x), (false = eqb x y), (false = eqb x n), (false = eqb x x), (false = less y y), (false = less y n), (false = less y x), (false = less n y), (false = less n n)
(false = less n x), (false = less x y), (false = less x n), (false = less x x), (true = mem y z), (true = mem n z), (true = mem x z), (true = eqb y y), (true = eqb y n), (true = eqb y x)
(true = eqb n y), (true = eqb n n), (true = eqb n x), (true = eqb x y), (true = eqb x n), (true = eqb x x), (true = less y y), (true = less y n), (true = less y x), (true = less n y)
(true = less n n), (true = less n x), (true = less x y), (true = less x n), (true = less x x), (false <> gv0), (true <> gv0), (z <> z), (y <> y), (y <> n)
(y <> x), (n <> y), (n <> n), (n <> x), (x <> y), (x <> n), (x <> x), (gv0 <> gv0), (sort z = z), (sort z = insort y z)
(sort z = insort n z), (sort z = insort x z), (insort y z = z), (insort n z = z), (insort x z = z), (None = Some gv0), (None = Some z), (None = Some y), (None = Some n), (None = Some x)
(mem y z = gv0), (mem y z = eqb y y), (mem y z = eqb y n), (mem y z = eqb y x), (mem y z = eqb n y), (mem y z = eqb n n), (mem y z = eqb n x), (mem y z = eqb x y), (mem y z = eqb x n), (mem y z = eqb x x)
(mem y z = less y y), (mem y z = less y n), (mem y z = less y x), (mem y z = less n y), (mem y z = less n n), (mem y z = less n x), (mem y z = less x y), (mem y z = less x n), (mem y z = less x x), (mem n z = gv0)
(mem n z = eqb y y), (mem n z = eqb y n), (mem n z = eqb y x), (mem n z = eqb n y), (mem n z = eqb n n), (mem n z = eqb n x), (mem n z = eqb x y), (mem n z = eqb x n), (mem n z = eqb x x), (mem n z = less y y)
(mem n z = less y n), (mem n z = less y x), (mem n z = less n y), (mem n z = less n n), (mem n z = less n x), (mem n z = less x y), (mem n z = less x n), (mem n z = less x x), (mem x z = gv0), (mem x z = eqb y y)
(mem x z = eqb y n), (mem x z = eqb y x), (mem x z = eqb n y), (mem x z = eqb n n), (mem x z = eqb n x), (mem x z = eqb x y), (mem x z = eqb x n), (mem x z = eqb x x), (mem x z = less y y), (mem x z = less y n)
(mem x z = less y x), (mem x z = less n y), (mem x z = less n n), (mem x z = less n x), (mem x z = less x y), (mem x z = less x n), (mem x z = less x x), (eqb y y = gv0), (eqb y n = gv0), (eqb y x = gv0)
(eqb n y = gv0), (eqb n n = gv0), (eqb n x = gv0), (eqb x y = gv0), (eqb x n = gv0), (eqb x x = gv0), (less y y = gv0), (less y y = eqb y y), (less y y = eqb y n), (less y y = eqb y x)
(less y y = eqb n y), (less y y = eqb n n), (less y y = eqb n x), (less y y = eqb x y), (less y y = eqb x n), (less y y = eqb x x), (less y n = gv0), (less y n = eqb y y), (less y n = eqb y n), (less y n = eqb y x)
(less y n = eqb n y), (less y n = eqb n n), (less y n = eqb n x), (less y n = eqb x y), (less y n = eqb x n), (less y n = eqb x x), (less y x = gv0), (less y x = eqb y y), (less y x = eqb y n), (less y x = eqb y x)
(less y x = eqb n y), (less y x = eqb n n), (less y x = eqb n x), (less y x = eqb x y), (less y x = eqb x n), (less y x = eqb x x), (less n y = gv0), (less n y = eqb y y), (less n y = eqb y n), (less n y = eqb y x)
(less n y = eqb n y), (less n y = eqb n n), (less n y = eqb n x), (less n y = eqb x y), (less n y = eqb x n), (less n y = eqb x x), (less n n = gv0), (less n n = eqb y y), (less n n = eqb y n), (less n n = eqb y x)
(less n n = eqb n y), (less n n = eqb n n), (less n n = eqb n x), (less n n = eqb x y), (less n n = eqb x n), (less n n = eqb x x), (less n x = gv0), (less n x = eqb y y), (less n x = eqb y n), (less n x = eqb y x)
(less n x = eqb n y), (less n x = eqb n n), (less n x = eqb n x), (less n x = eqb x y), (less n x = eqb x n), (less n x = eqb x x), (less x y = gv0), (less x y = eqb y y), (less x y = eqb y n), (less x y = eqb y x)
(less x y = eqb n y), (less x y = eqb n n), (less x y = eqb n x), (less x y = eqb x y), (less x y = eqb x n), (less x y = eqb x x), (less x n = gv0), (less x n = eqb y y), (less x n = eqb y n), (less x n = eqb y x)
(less x n = eqb n y), (less x n = eqb n n), (less x n = eqb n x), (less x n = eqb x y), (less x n = eqb x n), (less x n = eqb x x), (less x x = gv0), (less x x = eqb y y), (less x x = eqb y n), (less x x = eqb y x)
(less x x = eqb n y), (less x x = eqb n n), (less x x = eqb n x), (less x x = eqb x y), (less x x = eqb x n), (less x x = eqb x x)

Label: 4 (5)
(false = gv1), (true = gv1), (z = z), (y = y), (y = n), (y = x), (n = y), (n = n), (n = x), (x = y)
(x = n), (x = x), (gv1 = gv1), (false = mem y z), (false = mem n z), (false = mem x z), (false = eqb y y), (false = eqb y n), (false = eqb y x), (false = eqb n y)
(false = eqb n n), (false = eqb n x), (false = eqb x y), (false = eqb x n), (false = eqb x x), (false = less y y), (false = less y n), (false = less y x), (false = less n y), (false = less n n)
(false = less n x), (false = less x y), (false = less x n), (false = less x x), (true = mem y z), (true = mem n z), (true = mem x z), (true = eqb y y), (true = eqb y n), (true = eqb y x)
(true = eqb n y), (true = eqb n n), (true = eqb n x), (true = eqb x y), (true = eqb x n), (true = eqb x x), (true = less y y), (true = less y n), (true = less y x), (true = less n y)
(true = less n n), (true = less n x), (true = less x y), (true = less x n), (true = less x x), (false <> gv1), (true <> gv1), (z <> z), (y <> y), (y <> n)
(y <> x), (n <> y), (n <> n), (n <> x), (x <> y), (x <> n), (x <> x), (gv1 <> gv1), (sort z = z), (sort z = insort y z)
(sort z = insort n z), (sort z = insort x z), (insort y z = z), (insort n z = z), (insort x z = z), (None = Some gv1), (None = Some z), (None = Some y), (None = Some n), (None = Some x)
(mem y z = gv1), (mem y z = eqb y y), (mem y z = eqb y n), (mem y z = eqb y x), (mem y z = eqb n y), (mem y z = eqb n n), (mem y z = eqb n x), (mem y z = eqb x y), (mem y z = eqb x n), (mem y z = eqb x x)
(mem y z = less y y), (mem y z = less y n), (mem y z = less y x), (mem y z = less n y), (mem y z = less n n), (mem y z = less n x), (mem y z = less x y), (mem y z = less x n), (mem y z = less x x), (mem n z = gv1)
(mem n z = eqb y y), (mem n z = eqb y n), (mem n z = eqb y x), (mem n z = eqb n y), (mem n z = eqb n n), (mem n z = eqb n x), (mem n z = eqb x y), (mem n z = eqb x n), (mem n z = eqb x x), (mem n z = less y y)
(mem n z = less y n), (mem n z = less y x), (mem n z = less n y), (mem n z = less n n), (mem n z = less n x), (mem n z = less x y), (mem n z = less x n), (mem n z = less x x), (mem x z = gv1), (mem x z = eqb y y)
(mem x z = eqb y n), (mem x z = eqb y x), (mem x z = eqb n y), (mem x z = eqb n n), (mem x z = eqb n x), (mem x z = eqb x y), (mem x z = eqb x n), (mem x z = eqb x x), (mem x z = less y y), (mem x z = less y n)
(mem x z = less y x), (mem x z = less n y), (mem x z = less n n), (mem x z = less n x), (mem x z = less x y), (mem x z = less x n), (mem x z = less x x), (eqb y y = gv1), (eqb y n = gv1), (eqb y x = gv1)
(eqb n y = gv1), (eqb n n = gv1), (eqb n x = gv1), (eqb x y = gv1), (eqb x n = gv1), (eqb x x = gv1), (less y y = gv1), (less y y = eqb y y), (less y y = eqb y n), (less y y = eqb y x)
(less y y = eqb n y), (less y y = eqb n n), (less y y = eqb n x), (less y y = eqb x y), (less y y = eqb x n), (less y y = eqb x x), (less y n = gv1), (less y n = eqb y y), (less y n = eqb y n), (less y n = eqb y x)
(less y n = eqb n y), (less y n = eqb n n), (less y n = eqb n x), (less y n = eqb x y), (less y n = eqb x n), (less y n = eqb x x), (less y x = gv1), (less y x = eqb y y), (less y x = eqb y n), (less y x = eqb y x)
(less y x = eqb n y), (less y x = eqb n n), (less y x = eqb n x), (less y x = eqb x y), (less y x = eqb x n), (less y x = eqb x x), (less n y = gv1), (less n y = eqb y y), (less n y = eqb y n), (less n y = eqb y x)
(less n y = eqb n y), (less n y = eqb n n), (less n y = eqb n x), (less n y = eqb x y), (less n y = eqb x n), (less n y = eqb x x), (less n n = gv1), (less n n = eqb y y), (less n n = eqb y n), (less n n = eqb y x)
(less n n = eqb n y), (less n n = eqb n n), (less n n = eqb n x), (less n n = eqb x y), (less n n = eqb x n), (less n n = eqb x x), (less n x = gv1), (less n x = eqb y y), (less n x = eqb y n), (less n x = eqb y x)
(less n x = eqb n y), (less n x = eqb n n), (less n x = eqb n x), (less n x = eqb x y), (less n x = eqb x n), (less n x = eqb x x), (less x y = gv1), (less x y = eqb y y), (less x y = eqb y n), (less x y = eqb y x)
(less x y = eqb n y), (less x y = eqb n n), (less x y = eqb n x), (less x y = eqb x y), (less x y = eqb x n), (less x y = eqb x x), (less x n = gv1), (less x n = eqb y y), (less x n = eqb y n), (less x n = eqb y x)
(less x n = eqb n y), (less x n = eqb n n), (less x n = eqb n x), (less x n = eqb x y), (less x n = eqb x n), (less x n = eqb x x), (less x x = gv1), (less x x = eqb y y), (less x x = eqb y n), (less x x = eqb y x)
(less x x = eqb n y), (less x x = eqb n n), (less x x = eqb n x), (less x x = eqb x y), (less x x = eqb x n), (less x x = eqb x x)

Label: 4 (6)
(false = gv1), (true = gv1), (z = z), (y = y), (y = n), (y = x), (n = y), (n = n), (n = x), (x = y)
(x = n), (x = x), (gv1 = gv1), (false = mem y z), (false = mem n z), (false = mem x z), (false = eqb y y), (false = eqb y n), (false = eqb y x), (false = eqb n y)
(false = eqb n n), (false = eqb n x), (false = eqb x y), (false = eqb x n), (false = eqb x x), (false = less y y), (false = less y n), (false = less y x), (false = less n y), (false = less n n)
(false = less n x), (false = less x y), (false = less x n), (false = less x x), (true = mem y z), (true = mem n z), (true = mem x z), (true = eqb y y), (true = eqb y n), (true = eqb y x)
(true = eqb n y), (true = eqb n n), (true = eqb n x), (true = eqb x y), (true = eqb x n), (true = eqb x x), (true = less y y), (true = less y n), (true = less y x), (true = less n y)
(true = less n n), (true = less n x), (true = less x y), (true = less x n), (true = less x x), (false <> gv1), (true <> gv1), (z <> z), (y <> y), (y <> n)
(y <> x), (n <> y), (n <> n), (n <> x), (x <> y), (x <> n), (x <> x), (gv1 <> gv1), (sort z = z), (sort z = insort y z)
(sort z = insort n z), (sort z = insort x z), (insort y z = z), (insort n z = z), (insort x z = z), (None = Some gv1), (None = Some z), (None = Some y), (None = Some n), (None = Some x)
(mem y z = gv1), (mem y z = eqb y y), (mem y z = eqb y n), (mem y z = eqb y x), (mem y z = eqb n y), (mem y z = eqb n n), (mem y z = eqb n x), (mem y z = eqb x y), (mem y z = eqb x n), (mem y z = eqb x x)
(mem y z = less y y), (mem y z = less y n), (mem y z = less y x), (mem y z = less n y), (mem y z = less n n), (mem y z = less n x), (mem y z = less x y), (mem y z = less x n), (mem y z = less x x), (mem n z = gv1)
(mem n z = eqb y y), (mem n z = eqb y n), (mem n z = eqb y x), (mem n z = eqb n y), (mem n z = eqb n n), (mem n z = eqb n x), (mem n z = eqb x y), (mem n z = eqb x n), (mem n z = eqb x x), (mem n z = less y y)
(mem n z = less y n), (mem n z = less y x), (mem n z = less n y), (mem n z = less n n), (mem n z = less n x), (mem n z = less x y), (mem n z = less x n), (mem n z = less x x), (mem x z = gv1), (mem x z = eqb y y)
(mem x z = eqb y n), (mem x z = eqb y x), (mem x z = eqb n y), (mem x z = eqb n n), (mem x z = eqb n x), (mem x z = eqb x y), (mem x z = eqb x n), (mem x z = eqb x x), (mem x z = less y y), (mem x z = less y n)
(mem x z = less y x), (mem x z = less n y), (mem x z = less n n), (mem x z = less n x), (mem x z = less x y), (mem x z = less x n), (mem x z = less x x), (eqb y y = gv1), (eqb y n = gv1), (eqb y x = gv1)
(eqb n y = gv1), (eqb n n = gv1), (eqb n x = gv1), (eqb x y = gv1), (eqb x n = gv1), (eqb x x = gv1), (less y y = gv1), (less y y = eqb y y), (less y y = eqb y n), (less y y = eqb y x)
(less y y = eqb n y), (less y y = eqb n n), (less y y = eqb n x), (less y y = eqb x y), (less y y = eqb x n), (less y y = eqb x x), (less y n = gv1), (less y n = eqb y y), (less y n = eqb y n), (less y n = eqb y x)
(less y n = eqb n y), (less y n = eqb n n), (less y n = eqb n x), (less y n = eqb x y), (less y n = eqb x n), (less y n = eqb x x), (less y x = gv1), (less y x = eqb y y), (less y x = eqb y n), (less y x = eqb y x)
(less y x = eqb n y), (less y x = eqb n n), (less y x = eqb n x), (less y x = eqb x y), (less y x = eqb x n), (less y x = eqb x x), (less n y = gv1), (less n y = eqb y y), (less n y = eqb y n), (less n y = eqb y x)
(less n y = eqb n y), (less n y = eqb n n), (less n y = eqb n x), (less n y = eqb x y), (less n y = eqb x n), (less n y = eqb x x), (less n n = gv1), (less n n = eqb y y), (less n n = eqb y n), (less n n = eqb y x)
(less n n = eqb n y), (less n n = eqb n n), (less n n = eqb n x), (less n n = eqb x y), (less n n = eqb x n), (less n n = eqb x x), (less n x = gv1), (less n x = eqb y y), (less n x = eqb y n), (less n x = eqb y x)
(less n x = eqb n y), (less n x = eqb n n), (less n x = eqb n x), (less n x = eqb x y), (less n x = eqb x n), (less n x = eqb x x), (less x y = gv1), (less x y = eqb y y), (less x y = eqb y n), (less x y = eqb y x)
(less x y = eqb n y), (less x y = eqb n n), (less x y = eqb n x), (less x y = eqb x y), (less x y = eqb x n), (less x y = eqb x x), (less x n = gv1), (less x n = eqb y y), (less x n = eqb y n), (less x n = eqb y x)
(less x n = eqb n y), (less x n = eqb n n), (less x n = eqb n x), (less x n = eqb x y), (less x n = eqb x n), (less x n = eqb x x), (less x x = gv1), (less x x = eqb y y), (less x x = eqb y n), (less x x = eqb y x)
(less x x = eqb n y), (less x x = eqb n n), (less x x = eqb n x), (less x x = eqb x y), (less x x = eqb x n), (less x x = eqb x x)

Label: 5 (7)
(z = z), (n = n), (n = y), (n = x), (y = n), (y = y), (y = x), (x = n), (x = y), (x = x)
(false = mem n z), (false = mem y z), (false = mem x z), (false = eqb n n), (false = eqb n y), (false = eqb n x), (false = eqb y n), (false = eqb y y), (false = eqb y x), (false = eqb x n)
(false = eqb x y), (false = eqb x x), (false = less n n), (false = less n y), (false = less n x), (false = less y n), (false = less y y), (false = less y x), (false = less x n), (false = less x y)
(false = less x x), (true = mem n z), (true = mem y z), (true = mem x z), (true = eqb n n), (true = eqb n y), (true = eqb n x), (true = eqb y n), (true = eqb y y), (true = eqb y x)
(true = eqb x n), (true = eqb x y), (true = eqb x x), (true = less n n), (true = less n y), (true = less n x), (true = less y n), (true = less y y), (true = less y x), (true = less x n)
(true = less x y), (true = less x x), (z <> z), (n <> n), (n <> y), (n <> x), (y <> n), (y <> y), (y <> x), (x <> n)
(x <> y), (x <> x), (None = Some n), (None = Some y), (None = Some x), (sort z = z), (sort z = insort n z), (sort z = insort y z), (sort z = insort x z), (insort n z = z)
(insort y z = z), (insort x z = z), (mem n z = eqb n n), (mem n z = eqb n y), (mem n z = eqb n x), (mem n z = eqb y n), (mem n z = eqb y y), (mem n z = eqb y x), (mem n z = eqb x n), (mem n z = eqb x y)
(mem n z = eqb x x), (mem n z = less n n), (mem n z = less n y), (mem n z = less n x), (mem n z = less y n), (mem n z = less y y), (mem n z = less y x), (mem n z = less x n), (mem n z = less x y), (mem n z = less x x)
(mem y z = eqb n n), (mem y z = eqb n y), (mem y z = eqb n x), (mem y z = eqb y n), (mem y z = eqb y y), (mem y z = eqb y x), (mem y z = eqb x n), (mem y z = eqb x y), (mem y z = eqb x x), (mem y z = less n n)
(mem y z = less n y), (mem y z = less n x), (mem y z = less y n), (mem y z = less y y), (mem y z = less y x), (mem y z = less x n), (mem y z = less x y), (mem y z = less x x), (mem x z = eqb n n), (mem x z = eqb n y)
(mem x z = eqb n x), (mem x z = eqb y n), (mem x z = eqb y y), (mem x z = eqb y x), (mem x z = eqb x n), (mem x z = eqb x y), (mem x z = eqb x x), (mem x z = less n n), (mem x z = less n y), (mem x z = less n x)
(mem x z = less y n), (mem x z = less y y), (mem x z = less y x), (mem x z = less x n), (mem x z = less x y), (mem x z = less x x), (less n n = eqb n n), (less n n = eqb n y), (less n n = eqb n x), (less n n = eqb y n)
(less n n = eqb y y), (less n n = eqb y x), (less n n = eqb x n), (less n n = eqb x y), (less n n = eqb x x), (less n y = eqb n n), (less n y = eqb n y), (less n y = eqb n x), (less n y = eqb y n), (less n y = eqb y y)
(less n y = eqb y x), (less n y = eqb x n), (less n y = eqb x y), (less n y = eqb x x), (less n x = eqb n n), (less n x = eqb n y), (less n x = eqb n x), (less n x = eqb y n), (less n x = eqb y y), (less n x = eqb y x)
(less n x = eqb x n), (less n x = eqb x y), (less n x = eqb x x), (less y n = eqb n n), (less y n = eqb n y), (less y n = eqb n x), (less y n = eqb y n), (less y n = eqb y y), (less y n = eqb y x), (less y n = eqb x n)
(less y n = eqb x y), (less y n = eqb x x), (less y y = eqb n n), (less y y = eqb n y), (less y y = eqb n x), (less y y = eqb y n), (less y y = eqb y y), (less y y = eqb y x), (less y y = eqb x n), (less y y = eqb x y)
(less y y = eqb x x), (less y x = eqb n n), (less y x = eqb n y), (less y x = eqb n x), (less y x = eqb y n), (less y x = eqb y y), (less y x = eqb y x), (less y x = eqb x n), (less y x = eqb x y), (less y x = eqb x x)
(less x n = eqb n n), (less x n = eqb n y), (less x n = eqb n x), (less x n = eqb y n), (less x n = eqb y y), (less x n = eqb y x), (less x n = eqb x n), (less x n = eqb x y), (less x n = eqb x x), (less x y = eqb n n)
(less x y = eqb n y), (less x y = eqb n x), (less x y = eqb y n), (less x y = eqb y y), (less x y = eqb y x), (less x y = eqb x n), (less x y = eqb x y), (less x y = eqb x x), (less x x = eqb n n), (less x x = eqb n y)
(less x x = eqb n x), (less x x = eqb y n), (less x x = eqb y y), (less x x = eqb y x), (less x x = eqb x n), (less x x = eqb x y), (less x x = eqb x x), (None = Some z)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 455.07 seconds


Label: 0 (0)
(false = eqb y x), (false = eqb x y), (y <> x), (x <> y), (less y y = eqb y x), (less y y = eqb x y), (less x x = eqb y x), (less x x = eqb x y)

Label: 1 (1)
(false = eqb y x), (false = eqb x y), (y <> x), (x <> y), (less y y = eqb y x), (less y y = eqb x y), (less x x = eqb y x), (less x x = eqb x y)

Label: 2 (2)
(false = eqb y x), (false = eqb x y), (y <> x), (x <> y), (less n n = eqb y x), (less n n = eqb x y), (less y y = eqb y x), (less y y = eqb x y), (less x x = eqb y x), (less x x = eqb x y)

Label: 3 (3)
(false = eqb y x), (false = eqb x y), (y <> x), (x <> y), (less y y = eqb y x), (less y y = eqb x y), (less n n = eqb y x), (less n n = eqb x y), (less x x = eqb y x), (less x x = eqb x y)

Label: 3 (4)

Label: 4 (5)
(false = gv1), (false = eqb y x), (false = eqb x y), (true <> gv1), (y <> x), (x <> y), (less y y = gv1), (less y y = eqb y x), (less y y = eqb x y), (less n n = gv1)
(less n n = eqb y x), (less n n = eqb x y), (less x x = gv1), (less x x = eqb y x), (less x x = eqb x y)

Label: 4 (6)
(false = gv1), (true <> gv1), (eqb y x = gv1), (eqb x y = gv1), (less y y = gv1), (less n n = gv1), (less x x = gv1)

Label: 5 (7)
(false = eqb y x), (false = eqb x y), (y <> x), (x <> y), (less n n = eqb y x), (less n n = eqb x y), (less y y = eqb y x), (less y y = eqb x y), (less x x = eqb y x), (less x x = eqb x y)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 622.406 seconds


(x <> y)
 - (x <> y)
 - (false = eqb y x)
 - (false = eqb x y)
 - (y <> x)
 - (less n n = eqb y x)
 - (less n n = eqb x y)
 - (less y y = eqb y x)
 - (less y y = eqb x y)
 - (less x x = eqb y x)
 - (less x x = eqb x y)

((eqb x y || (eqb x n || mem x z))%bool = gv0)
 - ((eqb x y || (eqb x n || mem x z))%bool = gv0)

(eqb x y = gv1)
 - (eqb x y = gv1)
 - (false = gv1)
 - (true <> gv1)
 - (eqb y x = gv1)
 - (less y y = gv1)
 - (less n n = gv1)
 - (less x x = gv1)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 622.407 seconds

Number of Result Pairs Returned: 41

(x <> y -> (eqb x y || gv2)%bool = gv2)

(x <> y -> false = eqb y x)
(false = eqb y x -> (eqb x y || gv2)%bool = gv2)

(x <> y -> false = eqb x y)
(false = eqb x y -> (eqb x y || gv2)%bool = gv2)

(x <> y -> y <> x)
(y <> x -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less n n = eqb y x)
(less n n = eqb y x -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less n n = eqb x y)
(less n n = eqb x y -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less y y = eqb y x)
(less y y = eqb y x -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less y y = eqb x y)
(less y y = eqb x y -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less x x = eqb y x)
(less x x = eqb y x -> (eqb x y || gv2)%bool = gv2)

(x <> y -> less x x = eqb x y)
(less x x = eqb x y -> (eqb x y || gv2)%bool = gv2)

(x <> y -> (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> false = eqb y x)
(false = eqb y x ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> false = eqb x y)
(false = eqb x y ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> y <> x)
(y <> x -> (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less n n = eqb y x)
(less n n = eqb y x ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less n n = eqb x y)
(less n n = eqb x y ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less y y = eqb y x)
(less y y = eqb y x ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less y y = eqb x y)
(less y y = eqb x y ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less x x = eqb y x)
(less x x = eqb y x ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> less x x = eqb x y)
(less x x = eqb x y ->  (eqb x y || (gv3 || mem x z))%bool = (gv3 || mem x z)%bool)

(x <> y -> (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> false = eqb y x)
(false = eqb y x ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> false = eqb x y)
(false = eqb x y ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> y <> x)
(y <> x -> (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less n n = eqb y x)
(less n n = eqb y x ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less n n = eqb x y)
(less n n = eqb x y ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less y y = eqb y x)
(less y y = eqb y x ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less y y = eqb x y)
(less y y = eqb x y ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less x x = eqb y x)
(less x x = eqb y x ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(x <> y -> less x x = eqb x y)
(less x x = eqb x y ->  (eqb x y || (eqb x n || gv4))%bool = (eqb x n || gv4)%bool)

(eqb x y = gv1 -> eqb y x = gv1)
(eqb y x = gv1 ->  x <> y -> (gv1 || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> false = eqb y x)
(false = eqb y x ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> false = eqb x y)
(false = eqb x y ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> y <> x)
(y <> x -> (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less n n = eqb y x)
(less n n = eqb y x ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less n n = eqb x y)
(less n n = eqb x y ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less y y = eqb y x)
(less y y = eqb y x ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less y y = eqb x y)
(less y y = eqb x y ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less x x = eqb y x)
(less x x = eqb y x ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)

(x <> y -> less x x = eqb x y)
(less x x = eqb x y ->  (eqb x y || (eqb x n || mem x z))%bool = (eqb x n || mem x z)%bool)
