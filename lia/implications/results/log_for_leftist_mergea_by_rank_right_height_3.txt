Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property l = true)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 true)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv6 : nat = (right_height r)
gv7 : nat = (right_height l)
gv1 : bool = (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l))
gv5 : bool = (right_height r <=? right_height l)
gv0 : bool = (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1))
gv13 : nat = (right_height r + 1)
gv12 : nat = 0
gv4 : bool = (has_leftist_property r)
gv14 : bool = true
gv11 : nat = 1
gv10 : nat = (rank r)
gv8 : bool = (rank r + 1 =? right_height r + 1)
gv3 : bool = (has_leftist_property l)
gv9 : nat = (rank r + 1)
gv2 : bool = (has_leftist_property l && has_leftist_property r)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 356.446 seconds

Label: Generalization #0
Assumptions: 
 -- (has_leftist_property l && has_leftist_property r = gv2)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (gv2 && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #1
Assumptions: 
 -- (rank r + 1 = gv9)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (gv9 =? right_height r + 1) = true)
Case: 3

Label: Generalization #2
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (gv3 = true)

----------------------------------
Goal: (gv3 && has_leftist_property r && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #3
Assumptions: 
 -- ((rank r + 1 =? right_height r + 1) = gv8)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && gv8 = true)
Case: 3

Label: Generalization #4
Assumptions: 
 -- (rank r = gv10)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (gv10 + 1 =? right_height r + 1) =
 true)
Case: 3

Label: Generalization #5
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + gv11 =? right_height r + gv11) = true)
Case: 3

Label: Generalization #6
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = gv14)
 -- (has_leftist_property l = gv14)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv14)
Case: 3

Label: Generalization #7
Assumptions: 
 -- (has_leftist_property r = gv4)
 -- (right_height r <= right_height l)
 -- (gv4 = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && gv4 && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #8
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + S gv12 =? right_height r + S gv12) = true)
Case: 3

Label: Generalization #9
Assumptions: 
 -- (right_height r + 1 = gv13)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? gv13) = true)
Case: 3

Label: Generalization #10
Assumptions: 
 -- (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv0)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (gv0 = true)
Case: 3

Label: Generalization #11
Assumptions: 
 -- ((right_height r <=? right_height l) = gv5)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r && gv5 &&
 (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #12
Assumptions: 
 -- (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) = gv1)
 -- (right_height r <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (gv1 && (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #13
Assumptions: 
 -- (right_height r <= gv7)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r && (right_height r <=? gv7) &&
 (rank r + 1 =? right_height r + 1) = true)
Case: 3

Label: Generalization #14
Assumptions: 
 -- (right_height r = gv6)
 -- (gv6 <= right_height l)
 -- (has_leftist_property r = true)
 -- (has_leftist_property l = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r && (gv6 <=? right_height l) &&
 (rank r + 1 =? gv6 + 1) = true)
Case: 3

Label: Generalization #15
Assumptions: 
 -- (right_height r <= right_height l)
 -- (has_leftist_property l = true)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 true)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 359.723 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
lst : Set
lst_rect : (forall P : lst -> Type,
 (forall (n : nat) (l : lst), P l -> P (Cons n l)) ->
 P Nil -> forall l : lst, P l)
lst_rec : (forall P : lst -> Set,
 (forall (n : nat) (l : lst), P l -> P (Cons n l)) ->
 P Nil -> forall l : lst, P l)
heap : Set
heap_rect : (forall P : heap -> Type,
 P Hleaf ->
 (forall (n n0 : nat) (h : heap),
  P h -> forall h0 : heap, P h0 -> P (Heap n n0 h h0)) ->
 forall h : heap, P h)
heap_rec : (forall P : heap -> Set,
 P Hleaf ->
 (forall (n n0 : nat) (h : heap),
  P h -> forall h0 : heap, P h0 -> P (Heap n n0 h h0)) ->
 forall h : heap, P h)
right_height : (heap -> nat)
rank : (heap -> nat)
has_leftist_property : (heap -> bool)
hsize : (heap -> nat)
mergea : (nat -> heap -> heap -> heap)
merge : (heap -> heap -> heap)
hinsert : (heap -> nat -> heap)
hinsert_all : (lst -> heap -> heap)
show_lst : (Show.Show lst)
show_heap : (Show.Show heap)

Label: 0 (0)
Abducted Assumption: (has_leftist_property l && has_leftist_property r = gv2)
Positive Examples:
   [gv2 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv2 := false; l := (Heap 1 3 (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 2 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...


Label: 0 (1)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv2 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv2 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) (Heap 1 3 Hleaf Hleaf))]
   [gv2 := true; l := Hleaf; r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv2 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv2 := true; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]
   etc ...


Label: 0 (2)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv2 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv2 := false; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 3 4 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 1 (Heap 0 1 Hleaf Hleaf) Hleaf)]
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 4 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 3 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 3 (Heap 3 2 (Heap 3 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv2 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 3 0 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 6
   (Heap 1 3 Hleaf
      (Heap 6 0
         (Heap 6 3 Hleaf
            (Heap 4 1 (Heap 4 1 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf))) Hleaf))
   Hleaf)]
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 1
   (Heap 4 4 (Heap 1 1 (Heap 3 4 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)) Hleaf)
   Hleaf)]
   etc ...


Label: 0 (3)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv2 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv2 := false; l := (Heap 3 5 (Heap 0 6 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 2 2 (Heap 3 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 2 0 (Heap 2 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 2 2 (Heap 1 0 (Heap 2 0 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 0 0 Hleaf (Heap 2 0 (Heap 2 3 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))); r := Hleaf]
   [gv2 := false; l := (Heap 0 5 (Heap 2 2 Hleaf (Heap 2 2 Hleaf Hleaf))
   (Heap 0 0 (Heap 4 1 (Heap 5 2 Hleaf Hleaf) Hleaf) Hleaf)); r := Hleaf]
   [gv2 := false; l := (Heap 3 2 (Heap 0 1 (Heap 4 3 Hleaf Hleaf) Hleaf)
   (Heap 1 2 Hleaf (Heap 0 4 (Heap 3 2 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)))); r := Hleaf]
   [gv2 := false; l := (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)); r := (Heap 1 2 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 3 2 (Heap 3 0 Hleaf (Heap 3 2 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 2 0 Hleaf
   (Heap 2 2 (Heap 1 3 Hleaf Hleaf)
      (Heap 2 3 Hleaf (Heap 2 1 (Heap 5 4 Hleaf Hleaf) Hleaf)))); r := Hleaf]
   etc ...


Label: 1 (4)
Abducted Assumption: (rank r + 1 = gv9)
Positive Examples:
   [gv9 := 1; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv9 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv9 := 2; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 6; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 5; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 4; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 5; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv9 := 5; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...


Label: 1 (5)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv9 := 1; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv9 := 2; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv9 := 2; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]


Label: 1 (6)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv9 := 1; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv9 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   [gv9 := 3; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 3 Hleaf Hleaf)]
   [gv9 := 3; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 1 2 Hleaf (Heap 4 0 (Heap 0 3 Hleaf Hleaf) Hleaf)) Hleaf)]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := (Heap 0 2 (Heap 2 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv9 := 3; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]


Label: 1 (7)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv9 := 1; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv9 := 1; l := (Heap 4 1 (Heap 5 3 Hleaf (Heap 1 5 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 5 4
   (Heap 4 4 (Heap 3 3 Hleaf Hleaf)
      (Heap 2 2 (Heap 4 5 Hleaf Hleaf) (Heap 1 4 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 3 2
   (Heap 6 5 (Heap 3 1 Hleaf Hleaf)
      (Heap 1 5 (Heap 3 3 Hleaf Hleaf)
         (Heap 6 5 Hleaf
            (Heap 6 5 (Heap 0 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf))))) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) (Heap 1 1 Hleaf (Heap 0 3 Hleaf Hleaf))); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf (Heap 4 5 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 0 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 0 3 (Heap 2 1 (Heap 2 4 (Heap 4 4 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 4 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 2 5
   (Heap 4 5 (Heap 0 1 Hleaf Hleaf) (Heap 0 1 Hleaf (Heap 3 5 Hleaf Hleaf)))
   Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 0 4 (Heap 5 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...


Label: 2 (8)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv3 := true; l := (Heap 2 5
   (Heap 3 0
      (Heap 3 2 Hleaf
         (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf)))
      (Heap 5 0 Hleaf Hleaf))
   (Heap 4 0
      (Heap 2 5 (Heap 5 1 Hleaf (Heap 4 0 Hleaf Hleaf))
         (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))) Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 0 1
   (Heap 4 4 (Heap 3 4 (Heap 0 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf))
      (Heap 4 0 (Heap 2 3 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)))
   (Heap 2 3 (Heap 0 2 (Heap 2 4 Hleaf Hleaf) Hleaf) Hleaf)); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 2 Hleaf
   (Heap 0 3 Hleaf (Heap 1 3 (Heap 2 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)))); r := Hleaf]
   [gv3 := true; l := (Heap 2 4
   (Heap 5 1
      (Heap 0 3 (Heap 4 4 (Heap 0 0 Hleaf Hleaf) (Heap 5 5 Hleaf Hleaf))
         Hleaf) (Heap 0 2 (Heap 4 5 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))
   (Heap 5 2
      (Heap 0 0 (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
         Hleaf) (Heap 2 4 (Heap 3 5 Hleaf Hleaf) Hleaf))); r := Hleaf]
   [gv3 := true; l := (Heap 2 3
   (Heap 3 2 (Heap 2 4 Hleaf Hleaf)
      (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv3 := true; l := (Heap 2 2 (Heap 4 2 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 3 (Heap 4 1 (Heap 4 4 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)) Hleaf); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv3 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv3 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv3 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv3 := true; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]


Label: 2 (9)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv3 := true; l := (Heap 2 5
   (Heap 3 0
      (Heap 3 2 Hleaf
         (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf)))
      (Heap 5 0 Hleaf Hleaf))
   (Heap 4 0
      (Heap 2 5 (Heap 5 1 Hleaf (Heap 4 0 Hleaf Hleaf))
         (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))) Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 0 1
   (Heap 4 4 (Heap 3 4 (Heap 0 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf))
      (Heap 4 0 (Heap 2 3 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)))
   (Heap 2 3 (Heap 0 2 (Heap 2 4 Hleaf Hleaf) Hleaf) Hleaf)); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 2 Hleaf
   (Heap 0 3 Hleaf (Heap 1 3 (Heap 2 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)))); r := Hleaf]
   [gv3 := true; l := (Heap 2 4
   (Heap 5 1
      (Heap 0 3 (Heap 4 4 (Heap 0 0 Hleaf Hleaf) (Heap 5 5 Hleaf Hleaf))
         Hleaf) (Heap 0 2 (Heap 4 5 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))
   (Heap 5 2
      (Heap 0 0 (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
         Hleaf) (Heap 2 4 (Heap 3 5 Hleaf Hleaf) Hleaf))); r := Hleaf]
   [gv3 := true; l := (Heap 2 3
   (Heap 3 2 (Heap 2 4 Hleaf Hleaf)
      (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv3 := true; l := (Heap 2 2 (Heap 4 2 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 3 (Heap 4 1 (Heap 4 4 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)) Hleaf); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv3 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 3 0 Hleaf Hleaf)); r := (Heap 2 2 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 3 2
   (Heap 5 4
      (Heap 5 3 Hleaf
         (Heap 2 0 (Heap 1 0 Hleaf (Heap 5 5 Hleaf Hleaf))
            (Heap 6 3 (Heap 2 6 Hleaf Hleaf) (Heap 0 6 Hleaf Hleaf))))
      (Heap 0 4 (Heap 2 6 Hleaf (Heap 3 5 Hleaf (Heap 6 6 Hleaf Hleaf)))
         Hleaf)) (Heap 6 5 Hleaf (Heap 3 2 Hleaf Hleaf))); r := (Heap 1 1 Hleaf (Heap 6 6 (Heap 4 6 Hleaf Hleaf) Hleaf))]
   [gv3 := true; l := (Heap 3 2 Hleaf (Heap 1 1 (Heap 2 1 Hleaf Hleaf) (Heap 2 3 Hleaf Hleaf))); r := (Heap 0 1 Hleaf (Heap 0 2 (Heap 0 3 Hleaf Hleaf) Hleaf))]
   [gv3 := true; l := (Heap 2 2 (Heap 1 3 (Heap 3 0 Hleaf Hleaf) Hleaf) (Heap 1 2 Hleaf Hleaf)); r := (Heap 2 1 Hleaf (Heap 3 1 Hleaf Hleaf))]
   [gv3 := true; l := (Heap 2 3 Hleaf (Heap 2 1 Hleaf (Heap 4 0 (Heap 3 2 Hleaf Hleaf) Hleaf))); r := (Heap 2 1
   (Heap 2 3 (Heap 1 2 Hleaf (Heap 0 3 Hleaf Hleaf))
      (Heap 4 1 (Heap 1 4 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)))
   (Heap 0 0 (Heap 2 3 Hleaf Hleaf) Hleaf))]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 0 1 Hleaf Hleaf)); r := (Heap 3 2 (Heap 3 1 Hleaf Hleaf) Hleaf)]
   [gv3 := true; l := (Heap 0 5 Hleaf Hleaf); r := (Heap 4 5
   (Heap 3 1 Hleaf
      (Heap 4 0
         (Heap 5 5 Hleaf
            (Heap 1 5 (Heap 3 0 Hleaf Hleaf) (Heap 4 2 Hleaf Hleaf))) Hleaf))
   Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 (Heap 2 2 Hleaf Hleaf) Hleaf)]
   [gv3 := true; l := (Heap 1 1 (Heap 2 1 Hleaf Hleaf)
   (Heap 5 4 (Heap 0 3 Hleaf (Heap 3 3 Hleaf Hleaf)) (Heap 1 0 Hleaf Hleaf))); r := (Heap 3 4 (Heap 3 5 Hleaf Hleaf)
   (Heap 0 5
      (Heap 5 0 (Heap 2 2 (Heap 2 0 Hleaf Hleaf) (Heap 4 1 Hleaf Hleaf))
         Hleaf) (Heap 1 3 Hleaf Hleaf)))]
   etc ...


Label: 2 (10)
Abducted Assumption: (gv3 = true)
Positive Examples:
   [gv3 := true; l := (Heap 2 5
   (Heap 3 0
      (Heap 3 2 Hleaf
         (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf)))
      (Heap 5 0 Hleaf Hleaf))
   (Heap 4 0
      (Heap 2 5 (Heap 5 1 Hleaf (Heap 4 0 Hleaf Hleaf))
         (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))) Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 0 1
   (Heap 4 4 (Heap 3 4 (Heap 0 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf))
      (Heap 4 0 (Heap 2 3 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)))
   (Heap 2 3 (Heap 0 2 (Heap 2 4 Hleaf Hleaf) Hleaf) Hleaf)); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 2 Hleaf
   (Heap 0 3 Hleaf (Heap 1 3 (Heap 2 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)))); r := Hleaf]
   [gv3 := true; l := (Heap 2 4
   (Heap 5 1
      (Heap 0 3 (Heap 4 4 (Heap 0 0 Hleaf Hleaf) (Heap 5 5 Hleaf Hleaf))
         Hleaf) (Heap 0 2 (Heap 4 5 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))
   (Heap 5 2
      (Heap 0 0 (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
         Hleaf) (Heap 2 4 (Heap 3 5 Hleaf Hleaf) Hleaf))); r := Hleaf]
   [gv3 := true; l := (Heap 2 3
   (Heap 3 2 (Heap 2 4 Hleaf Hleaf)
      (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv3 := true; l := (Heap 2 2 (Heap 4 2 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 3 (Heap 4 1 (Heap 4 4 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)) Hleaf); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv3 := false; l := (Heap 4 4
   (Heap 3 3 Hleaf
      (Heap 0 3 (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf)
         (Heap 1 0 Hleaf (Heap 5 4 Hleaf Hleaf)))) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 2 3 Hleaf
   (Heap 1 3
      (Heap 2 4 (Heap 3 0 (Heap 1 5 Hleaf Hleaf) Hleaf)
         (Heap 2 0 (Heap 4 0 Hleaf Hleaf) (Heap 5 1 Hleaf Hleaf)))
      (Heap 2 5 (Heap 3 5 Hleaf (Heap 1 4 Hleaf Hleaf)) Hleaf))); r := Hleaf]
   [gv3 := false; l := (Heap 3 0 (Heap 2 3 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf))
   (Heap 0 3 Hleaf Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 2 0 Hleaf
   (Heap 6 4
      (Heap 4 3 (Heap 4 3 Hleaf Hleaf)
         (Heap 6 2 Hleaf (Heap 3 5 Hleaf (Heap 3 6 Hleaf Hleaf)))) Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 4 0
   (Heap 2 5 (Heap 5 4 Hleaf (Heap 2 0 Hleaf (Heap 3 3 Hleaf Hleaf)))
      (Heap 5 4 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 4 2 Hleaf
   (Heap 0 2
      (Heap 0 1 (Heap 6 1 Hleaf Hleaf)
         (Heap 4 1 (Heap 6 6 Hleaf Hleaf) Hleaf)) Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 4 1 (Heap 1 2 Hleaf (Heap 1 4 Hleaf Hleaf)) (Heap 0 4 Hleaf Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 2 4
   (Heap 0 3 (Heap 0 4 Hleaf Hleaf) (Heap 4 0 (Heap 1 3 Hleaf Hleaf) Hleaf))
   Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 0 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 1 5 Hleaf
   (Heap 1 5 (Heap 4 2 Hleaf Hleaf)
      (Heap 3 4 Hleaf
         (Heap 3 0 (Heap 2 1 (Heap 5 4 Hleaf Hleaf) Hleaf)
            (Heap 0 3 Hleaf Hleaf))))); r := Hleaf]
   etc ...


Label: 3 (11)
Abducted Assumption: ((rank r + 1 =? right_height r + 1) = gv8)
Positive Examples:
   [gv8 := true; l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := false; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...


Label: 3 (12)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv8 := true; l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv8 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv8 := true; l := Hleaf; r := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv8 := true; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv8 := true; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   etc ...


Label: 3 (13)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv8 := true; l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv8 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 2 2 (Heap 3 1 (Heap 3 5 (Heap 2 4 Hleaf Hleaf) Hleaf) Hleaf) Hleaf)]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 0 (Heap 3 0 Hleaf Hleaf) Hleaf)]
   [gv8 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 2 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 0 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv8 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 5 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 3 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 2 0 Hleaf Hleaf)]
   etc ...


Label: 3 (14)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv8 := true; l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv8 := true; l := (Heap 1 3 (Heap 3 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1
   (Heap 3 4 (Heap 1 1 Hleaf Hleaf)
      (Heap 0 1 Hleaf (Heap 5 4 (Heap 2 4 Hleaf Hleaf) Hleaf))) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 2 1 Hleaf (Heap 1 0 Hleaf (Heap 3 3 Hleaf Hleaf))); r := Hleaf]
   [gv8 := true; l := (Heap 2 0
   (Heap 1 1 (Heap 1 2 Hleaf Hleaf) (Heap 0 4 Hleaf (Heap 2 3 Hleaf Hleaf)))
   (Heap 4 3 Hleaf (Heap 0 2 Hleaf Hleaf))); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 0 3 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 4 0 Hleaf
   (Heap 0 0 (Heap 1 1 (Heap 2 4 Hleaf Hleaf) Hleaf)
      (Heap 6 4 (Heap 6 5 (Heap 0 1 Hleaf (Heap 3 5 Hleaf Hleaf)) Hleaf)
         Hleaf))); r := Hleaf]
   [gv8 := true; l := (Heap 3 2 Hleaf
   (Heap 4 0 (Heap 2 0 (Heap 2 4 Hleaf Hleaf) (Heap 3 2 Hleaf Hleaf))
      (Heap 3 3 Hleaf Hleaf))); r := Hleaf]
   [gv8 := true; l := (Heap 0 0
   (Heap 0 2 Hleaf (Heap 3 2 Hleaf (Heap 4 3 (Heap 2 0 Hleaf Hleaf) Hleaf)))
   Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 0 0 Hleaf
   (Heap 1 0 (Heap 0 4 Hleaf (Heap 3 0 Hleaf Hleaf)) (Heap 1 2 Hleaf Hleaf))); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf); r := Hleaf]
   etc ...


Label: 4 (15)
Abducted Assumption: (rank r = gv10)
Positive Examples:
   [gv10 := 0; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv10 := 5; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv10 := 3; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 4; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv10 := 3; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv10 := 3; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 4; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...


Label: 4 (16)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv10 := 0; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv10 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv10 := 1; l := Hleaf; r := (Heap 1 1 (Heap 1 5 Hleaf Hleaf) Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv10 := 1; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv10 := 2; l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   [gv10 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 4 (17)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv10 := 0; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv10 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 1 (Heap 4 4 (Heap 4 5 Hleaf (Heap 5 5 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv10 := 3; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 3 1 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 2 (Heap 3 0 (Heap 3 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) Hleaf)]
   [gv10 := 2; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := (Heap 2 1 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv10 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv10 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 1 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   etc ...


Label: 4 (18)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv10 := 0; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv10 := 0; l := (Heap 4 1
   (Heap 5 3
      (Heap 2 3 Hleaf
         (Heap 5 3 (Heap 3 2 Hleaf (Heap 3 6 Hleaf Hleaf)) Hleaf)) Hleaf)
   (Heap 1 6 (Heap 6 4 (Heap 0 2 Hleaf Hleaf) Hleaf)
      (Heap 4 4 Hleaf (Heap 6 2 Hleaf Hleaf)))); r := Hleaf]
   [gv10 := 0; l := (Heap 2 3 (Heap 3 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 0 5
   (Heap 2 3 (Heap 4 4 Hleaf Hleaf)
      (Heap 2 5 (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf))
         (Heap 0 5 (Heap 1 0 Hleaf Hleaf) (Heap 5 1 Hleaf Hleaf))))
   (Heap 4 4 (Heap 3 2 Hleaf Hleaf) Hleaf)); r := Hleaf]
   [gv10 := 0; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 2 2 (Heap 0 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 2 2 (Heap 0 2 Hleaf Hleaf)
   (Heap 1 3 (Heap 1 2 Hleaf Hleaf) (Heap 2 3 Hleaf Hleaf))); r := Hleaf]
   [gv10 := 0; l := (Heap 1 0 Hleaf (Heap 0 2 Hleaf Hleaf)); r := Hleaf]
   [gv10 := 0; l := (Heap 1 0 (Heap 1 1 Hleaf (Heap 0 3 Hleaf Hleaf)) (Heap 0 2 Hleaf Hleaf)); r := Hleaf]
   [gv10 := 0; l := (Heap 3 0 Hleaf (Heap 0 3 Hleaf (Heap 3 2 Hleaf Hleaf))); r := Hleaf]
   [gv10 := 0; l := (Heap 0 3 Hleaf (Heap 1 2 Hleaf (Heap 3 0 Hleaf Hleaf))); r := Hleaf]
   etc ...


Label: 5 (19)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv11 := 2; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 3; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 4; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 3; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv11 := 0; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv11 := 2; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv11 := 2; l := Hleaf; r := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv11 := 5; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv11 := 1; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv11 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv11 := 2; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv11 := 2; l := Hleaf; r := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv11 := 1; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv11 := 1; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv11 := 1; l := Hleaf; r := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   etc ...


Label: 5 (20)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv11 := 2; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 3; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 4; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 3; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv11 := 0; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv11 := 0; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 2 3
   (Heap 3 2 Hleaf
      (Heap 6 6 (Heap 4 4 (Heap 6 4 Hleaf (Heap 1 1 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv11 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 5 2
   (Heap 3 4 Hleaf (Heap 4 5 (Heap 4 1 (Heap 4 5 Hleaf Hleaf) Hleaf) Hleaf))
   Hleaf)]
   [gv11 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2
   (Heap 0 1 (Heap 0 3 Hleaf (Heap 3 0 Hleaf Hleaf)) (Heap 2 3 Hleaf Hleaf))
   Hleaf)]
   [gv11 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv11 := 4; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 3 0
   (Heap 4 0
      (Heap 2 2 (Heap 2 5 (Heap 3 5 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf))
         Hleaf) Hleaf) Hleaf)]
   [gv11 := 4; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2 (Heap 4 1 (Heap 1 1 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv11 := 3; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv11 := 2; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 0 2 Hleaf Hleaf)]
   [gv11 := 2; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 5 1
   (Heap 1 1
      (Heap 3 5 (Heap 3 2 (Heap 1 0 Hleaf Hleaf) Hleaf)
         (Heap 3 2 Hleaf (Heap 5 2 Hleaf Hleaf))) Hleaf) Hleaf)]
   [gv11 := 6; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 0
   (Heap 0 2 (Heap 5 0 Hleaf (Heap 0 2 (Heap 4 3 Hleaf Hleaf) Hleaf))
      (Heap 6 3 (Heap 0 0 (Heap 5 4 Hleaf Hleaf) Hleaf) Hleaf)) Hleaf)]
   etc ...


Label: 5 (21)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv11 := 2; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 3; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 1; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv11 := 4; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 3; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv11 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv11 := 0; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv11 := 1; l := (Heap 2 2 (Heap 0 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv11 := 2; l := (Heap 2 1 (Heap 0 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv11 := 5; l := (Heap 5 5 Hleaf Hleaf); r := Hleaf]
   [gv11 := 2; l := (Heap 2 1 (Heap 0 0 (Heap 1 1 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv11 := 0; l := (Heap 1 0 Hleaf (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv11 := 2; l := (Heap 3 4
   (Heap 2 4 (Heap 2 3 (Heap 0 0 Hleaf Hleaf) Hleaf)
      (Heap 0 1 Hleaf (Heap 4 3 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv11 := 1; l := (Heap 2 3 Hleaf (Heap 0 2 Hleaf (Heap 0 3 Hleaf Hleaf))); r := Hleaf]
   [gv11 := 1; l := (Heap 0 4 Hleaf Hleaf); r := Hleaf]
   [gv11 := 0; l := (Heap 2 4 (Heap 4 3 Hleaf Hleaf)
   (Heap 4 5 Hleaf
      (Heap 5 2 (Heap 4 2 (Heap 1 6 (Heap 3 5 Hleaf Hleaf) Hleaf) Hleaf)
         Hleaf))); r := Hleaf]
   [gv11 := 2; l := (Heap 5 1 Hleaf
   (Heap 1 1 (Heap 4 3 Hleaf (Heap 1 0 Hleaf (Heap 3 5 Hleaf Hleaf)))
      (Heap 0 0 (Heap 5 1 (Heap 5 5 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))
         (Heap 2 2 Hleaf (Heap 2 4 Hleaf Hleaf))))); r := Hleaf]
   etc ...


Label: 6 (22)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv14 := false; l := (Heap 4 4 Hleaf
   (Heap 3 3 Hleaf
      (Heap 5 2 (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
         (Heap 3 5 (Heap 2 2 Hleaf Hleaf) Hleaf)))); r := (Heap 4 0
   (Heap 5 1 Hleaf
      (Heap 2 5 Hleaf
         (Heap 4 5 (Heap 5 5 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv14 := false; l := (Heap 3 3 (Heap 2 3 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 3 3 (Heap 0 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv14 := false; l := (Heap 2 0 Hleaf
   (Heap 4 2 (Heap 0 2 Hleaf (Heap 2 4 Hleaf Hleaf))
      (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); r := (Heap 1 3 Hleaf (Heap 3 2 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 5 (Heap 1 4 Hleaf (Heap 5 6 Hleaf Hleaf)) Hleaf); r := (Heap 5 3
   (Heap 4 3
      (Heap 6 0
         (Heap 1 3 (Heap 3 4 (Heap 3 2 Hleaf Hleaf) Hleaf)
            (Heap 1 5 (Heap 0 4 Hleaf Hleaf) Hleaf))
         (Heap 0 1 Hleaf (Heap 1 0 (Heap 3 2 Hleaf Hleaf) Hleaf)))
      (Heap 1 2 (Heap 0 2 (Heap 1 3 Hleaf (Heap 6 0 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv14 := false; l := (Heap 4 4
   (Heap 0 4
      (Heap 0 3 (Heap 5 3 Hleaf Hleaf)
         (Heap 0 1 (Heap 0 4 (Heap 5 3 Hleaf Hleaf) Hleaf)
            (Heap 3 0 (Heap 2 6 Hleaf Hleaf) Hleaf)))
      (Heap 3 4 (Heap 4 5 Hleaf Hleaf)
         (Heap 5 2 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf)))
   (Heap 5 1 Hleaf Hleaf)); r := (Heap 3 6 (Heap 3 1 Hleaf (Heap 2 4 Hleaf (Heap 5 4 Hleaf Hleaf))) Hleaf)]
   [gv14 := false; l := (Heap 0 0 (Heap 3 2 (Heap 2 0 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 2 Hleaf (Heap 0 5 Hleaf (Heap 5 0 Hleaf Hleaf)))); r := (Heap 5 1
   (Heap 1 2 (Heap 2 4 (Heap 3 3 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 3 1 Hleaf (Heap 4 0 (Heap 1 5 Hleaf Hleaf) Hleaf)))
   (Heap 1 1 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 2 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := (Heap 1 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 1 Hleaf (Heap 1 2 Hleaf (Heap 1 4 (Heap 1 3 Hleaf Hleaf) Hleaf))); r := (Heap 3 0 Hleaf (Heap 2 3 (Heap 4 4 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))]
   [gv14 := false; l := (Heap 6 6 Hleaf (Heap 6 0 Hleaf (Heap 3 1 Hleaf Hleaf))); r := (Heap 0 3 Hleaf Hleaf)]
   [gv14 := false; l := (Heap 5 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 4 5 Hleaf Hleaf) Hleaf)]
   etc ...

Negative Examples:
   [gv14 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv14 := true; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv14 := true; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   etc ...


Label: 6 (23)
Abducted Assumption: (has_leftist_property r = gv14)
Positive Examples:
   [gv14 := false; l := (Heap 4 4 Hleaf
   (Heap 3 3 Hleaf
      (Heap 5 2 (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
         (Heap 3 5 (Heap 2 2 Hleaf Hleaf) Hleaf)))); r := (Heap 4 0
   (Heap 5 1 Hleaf
      (Heap 2 5 Hleaf
         (Heap 4 5 (Heap 5 5 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv14 := false; l := (Heap 3 3 (Heap 2 3 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 3 3 (Heap 0 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv14 := false; l := (Heap 2 0 Hleaf
   (Heap 4 2 (Heap 0 2 Hleaf (Heap 2 4 Hleaf Hleaf))
      (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); r := (Heap 1 3 Hleaf (Heap 3 2 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 5 (Heap 1 4 Hleaf (Heap 5 6 Hleaf Hleaf)) Hleaf); r := (Heap 5 3
   (Heap 4 3
      (Heap 6 0
         (Heap 1 3 (Heap 3 4 (Heap 3 2 Hleaf Hleaf) Hleaf)
            (Heap 1 5 (Heap 0 4 Hleaf Hleaf) Hleaf))
         (Heap 0 1 Hleaf (Heap 1 0 (Heap 3 2 Hleaf Hleaf) Hleaf)))
      (Heap 1 2 (Heap 0 2 (Heap 1 3 Hleaf (Heap 6 0 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv14 := false; l := (Heap 4 4
   (Heap 0 4
      (Heap 0 3 (Heap 5 3 Hleaf Hleaf)
         (Heap 0 1 (Heap 0 4 (Heap 5 3 Hleaf Hleaf) Hleaf)
            (Heap 3 0 (Heap 2 6 Hleaf Hleaf) Hleaf)))
      (Heap 3 4 (Heap 4 5 Hleaf Hleaf)
         (Heap 5 2 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf)))
   (Heap 5 1 Hleaf Hleaf)); r := (Heap 3 6 (Heap 3 1 Hleaf (Heap 2 4 Hleaf (Heap 5 4 Hleaf Hleaf))) Hleaf)]
   [gv14 := false; l := (Heap 0 0 (Heap 3 2 (Heap 2 0 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 2 Hleaf (Heap 0 5 Hleaf (Heap 5 0 Hleaf Hleaf)))); r := (Heap 5 1
   (Heap 1 2 (Heap 2 4 (Heap 3 3 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 3 1 Hleaf (Heap 4 0 (Heap 1 5 Hleaf Hleaf) Hleaf)))
   (Heap 1 1 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 2 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := (Heap 1 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 1 Hleaf (Heap 1 2 Hleaf (Heap 1 4 (Heap 1 3 Hleaf Hleaf) Hleaf))); r := (Heap 3 0 Hleaf (Heap 2 3 (Heap 4 4 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))]
   [gv14 := false; l := (Heap 6 6 Hleaf (Heap 6 0 Hleaf (Heap 3 1 Hleaf Hleaf))); r := (Heap 0 3 Hleaf Hleaf)]
   [gv14 := false; l := (Heap 5 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 4 5 Hleaf Hleaf) Hleaf)]
   etc ...

Negative Examples:
   [gv14 := true; l := (Heap 1 6 Hleaf Hleaf); r := (Heap 6 5 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 0 (Heap 2 1 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 3 3 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 2 (Heap 3 3 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 3 3 (Heap 3 4 (Heap 4 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 4 1 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 2 1 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 6 (24)
Abducted Assumption: (has_leftist_property l = gv14)
Positive Examples:
   [gv14 := false; l := (Heap 4 4 Hleaf
   (Heap 3 3 Hleaf
      (Heap 5 2 (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
         (Heap 3 5 (Heap 2 2 Hleaf Hleaf) Hleaf)))); r := (Heap 4 0
   (Heap 5 1 Hleaf
      (Heap 2 5 Hleaf
         (Heap 4 5 (Heap 5 5 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv14 := false; l := (Heap 3 3 (Heap 2 3 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 3 3 (Heap 0 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv14 := false; l := (Heap 2 0 Hleaf
   (Heap 4 2 (Heap 0 2 Hleaf (Heap 2 4 Hleaf Hleaf))
      (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); r := (Heap 1 3 Hleaf (Heap 3 2 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 5 (Heap 1 4 Hleaf (Heap 5 6 Hleaf Hleaf)) Hleaf); r := (Heap 5 3
   (Heap 4 3
      (Heap 6 0
         (Heap 1 3 (Heap 3 4 (Heap 3 2 Hleaf Hleaf) Hleaf)
            (Heap 1 5 (Heap 0 4 Hleaf Hleaf) Hleaf))
         (Heap 0 1 Hleaf (Heap 1 0 (Heap 3 2 Hleaf Hleaf) Hleaf)))
      (Heap 1 2 (Heap 0 2 (Heap 1 3 Hleaf (Heap 6 0 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv14 := false; l := (Heap 4 4
   (Heap 0 4
      (Heap 0 3 (Heap 5 3 Hleaf Hleaf)
         (Heap 0 1 (Heap 0 4 (Heap 5 3 Hleaf Hleaf) Hleaf)
            (Heap 3 0 (Heap 2 6 Hleaf Hleaf) Hleaf)))
      (Heap 3 4 (Heap 4 5 Hleaf Hleaf)
         (Heap 5 2 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf)))
   (Heap 5 1 Hleaf Hleaf)); r := (Heap 3 6 (Heap 3 1 Hleaf (Heap 2 4 Hleaf (Heap 5 4 Hleaf Hleaf))) Hleaf)]
   [gv14 := false; l := (Heap 0 0 (Heap 3 2 (Heap 2 0 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 2 Hleaf (Heap 0 5 Hleaf (Heap 5 0 Hleaf Hleaf)))); r := (Heap 5 1
   (Heap 1 2 (Heap 2 4 (Heap 3 3 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 3 1 Hleaf (Heap 4 0 (Heap 1 5 Hleaf Hleaf) Hleaf)))
   (Heap 1 1 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 2 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := (Heap 1 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 1 Hleaf (Heap 1 2 Hleaf (Heap 1 4 (Heap 1 3 Hleaf Hleaf) Hleaf))); r := (Heap 3 0 Hleaf (Heap 2 3 (Heap 4 4 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))]
   [gv14 := false; l := (Heap 6 6 Hleaf (Heap 6 0 Hleaf (Heap 3 1 Hleaf Hleaf))); r := (Heap 0 3 Hleaf Hleaf)]
   [gv14 := false; l := (Heap 5 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 4 5 Hleaf Hleaf) Hleaf)]
   etc ...

Negative Examples:
   [gv14 := true; l := (Heap 0 1 (Heap 2 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 0 3 (Heap 2 3 (Heap 0 1 Hleaf Hleaf) Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 5 6 Hleaf (Heap 0 3 (Heap 0 6 Hleaf Hleaf) (Heap 4 1 Hleaf Hleaf))); r := Hleaf]
   [gv14 := true; l := (Heap 0 2 (Heap 0 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 4 2 (Heap 1 4 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 0 0 Hleaf (Heap 1 4 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 1 3 (Heap 2 1 Hleaf (Heap 0 0 Hleaf Hleaf)) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 0 3
   (Heap 1 0 Hleaf
      (Heap 3 2 (Heap 3 2 Hleaf Hleaf)
         (Heap 3 1 (Heap 4 3 Hleaf Hleaf) Hleaf))) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 5 3 (Heap 2 6 Hleaf Hleaf)
   (Heap 5 5 Hleaf
      (Heap 4 2
         (Heap 5 6 (Heap 2 2 Hleaf (Heap 3 0 Hleaf Hleaf))
            (Heap 6 6 (Heap 0 6 Hleaf Hleaf) (Heap 4 4 Hleaf Hleaf)))
         (Heap 2 3 (Heap 5 6 Hleaf Hleaf)
            (Heap 6 3 Hleaf (Heap 0 5 Hleaf Hleaf)))))); r := Hleaf]
   etc ...


Label: 7 (25)
Abducted Assumption: (has_leftist_property r = gv4)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := true; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 0 1 (Heap 4 1 (Heap 3 4 (Heap 4 2 Hleaf Hleaf) Hleaf) Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 4 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 5 0 (Heap 1 4 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 2 3 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) Hleaf); r := (Heap 3 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 2 (Heap 0 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 4 5
   (Heap 4 4 (Heap 3 1 Hleaf Hleaf)
      (Heap 3 5 (Heap 0 0 (Heap 5 3 Hleaf Hleaf) Hleaf)
         (Heap 0 4 (Heap 2 3 Hleaf Hleaf) (Heap 1 3 Hleaf Hleaf)))) Hleaf)]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := (Heap 0 0
   (Heap 3 6 Hleaf
      (Heap 4 3 (Heap 6 2 (Heap 4 3 Hleaf (Heap 4 5 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   etc ...


Label: 7 (26)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := true; l := Hleaf; r := (Heap 1 3 (Heap 1 5 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 2 4 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv4 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv4 := true; l := Hleaf; r := (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv4 := true; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv4 := true; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 7 (27)
Abducted Assumption: (gv4 = true)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := false; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 2 3
   (Heap 1 6 (Heap 1 0 Hleaf (Heap 0 6 Hleaf Hleaf))
      (Heap 0 6 (Heap 1 0 Hleaf (Heap 5 1 Hleaf Hleaf)) Hleaf)) Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 (Heap 0 0 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 4 2
   (Heap 2 0 (Heap 2 3 Hleaf (Heap 1 0 Hleaf Hleaf)) (Heap 4 1 Hleaf Hleaf))
   Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 4 (Heap 0 3 Hleaf (Heap 3 4 Hleaf (Heap 3 0 Hleaf Hleaf))) Hleaf)]
   [gv4 := false; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 2 1 Hleaf Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 0 1 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 5 1 (Heap 4 4 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 5 2 Hleaf Hleaf)]
   etc ...


Label: 7 (28)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := true; l := (Heap 3 4 Hleaf (Heap 2 1 Hleaf Hleaf)); r := Hleaf]
   [gv4 := true; l := (Heap 0 2 (Heap 1 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)); r := Hleaf]
   [gv4 := true; l := (Heap 1 6
   (Heap 4 3 (Heap 0 6 (Heap 3 0 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) Hleaf)
   (Heap 4 4
      (Heap 4 1
         (Heap 4 1 Hleaf
            (Heap 1 0 (Heap 2 5 Hleaf Hleaf) (Heap 6 5 Hleaf Hleaf)))
         (Heap 3 6 (Heap 2 5 Hleaf (Heap 2 2 Hleaf Hleaf)) Hleaf))
      (Heap 3 6 Hleaf
         (Heap 5 2 Hleaf (Heap 0 4 (Heap 3 4 Hleaf Hleaf) Hleaf))))); r := Hleaf]
   [gv4 := true; l := (Heap 1 0
   (Heap 0 1 Hleaf
      (Heap 2 4 Hleaf
         (Heap 4 3 (Heap 4 1 Hleaf (Heap 4 6 Hleaf Hleaf))
            (Heap 4 5 (Heap 0 6 Hleaf Hleaf) Hleaf)))) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 0 (Heap 3 2 (Heap 1 0 Hleaf Hleaf) Hleaf) (Heap 2 2 Hleaf Hleaf)); r := Hleaf]
   [gv4 := true; l := (Heap 0 3 (Heap 2 2 Hleaf (Heap 2 2 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 3 4
   (Heap 1 0
      (Heap 3 2 Hleaf
         (Heap 1 3 Hleaf (Heap 6 5 Hleaf (Heap 4 0 Hleaf Hleaf))))
      (Heap 6 6 Hleaf
         (Heap 1 0 (Heap 2 4 (Heap 3 2 Hleaf Hleaf) (Heap 6 3 Hleaf Hleaf))
            Hleaf)))
   (Heap 1 3
      (Heap 6 6 (Heap 1 5 Hleaf Hleaf)
         (Heap 0 4 (Heap 1 6 Hleaf (Heap 5 0 Hleaf Hleaf))
            (Heap 5 2 Hleaf (Heap 6 2 Hleaf Hleaf)))) Hleaf)); r := Hleaf]
   [gv4 := true; l := (Heap 3 0 (Heap 1 1 Hleaf (Heap 3 3 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 4 2 Hleaf (Heap 3 4 Hleaf Hleaf)); r := Hleaf]
   [gv4 := true; l := (Heap 2 2 (Heap 0 3 (Heap 3 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) Hleaf); r := Hleaf]
   etc ...


Label: 8 (29)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv12 := 0; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv12 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv12 := 2; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 3; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv12 := 1; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv12 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv12 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv12 := 0; l := Hleaf; r := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   [gv12 := 3; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv12 := 0; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv12 := 4; l := Hleaf; r := (Heap 2 4 (Heap 1 3 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv12 := 2; l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv12 := 0; l := Hleaf; r := (Heap 1 2 (Heap 1 3 Hleaf Hleaf) Hleaf)]
   [gv12 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 8 (30)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv12 := 0; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv12 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv12 := 2; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 3; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv12 := 5; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 2 4 Hleaf Hleaf)]
   [gv12 := 0; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv12 := 3; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 4 0
   (Heap 4 0 Hleaf
      (Heap 0 5 Hleaf
         (Heap 0 1 (Heap 5 5 Hleaf Hleaf) (Heap 4 1 Hleaf Hleaf)))) Hleaf)]
   [gv12 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 0 Hleaf Hleaf)]
   [gv12 := 0; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := (Heap 2 1 Hleaf (Heap 0 0 Hleaf Hleaf))]
   [gv12 := 0; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 5 6
   (Heap 5 3 (Heap 1 1 Hleaf (Heap 1 6 Hleaf (Heap 2 6 Hleaf Hleaf)))
      (Heap 4 0 Hleaf Hleaf)) Hleaf)]
   [gv12 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 3
   (Heap 4 1 (Heap 1 5 Hleaf (Heap 0 1 (Heap 0 4 Hleaf Hleaf) Hleaf)) Hleaf)
   Hleaf)]
   [gv12 := 3; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 0 0 (Heap 2 2 Hleaf (Heap 1 2 Hleaf Hleaf)) Hleaf)]
   [gv12 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 3 Hleaf Hleaf)]
   [gv12 := 2; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 2 0 Hleaf Hleaf)]
   etc ...


Label: 8 (31)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv12 := 0; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv12 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv12 := 2; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv12 := 6; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 3; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   [gv12 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv12 := 2; l := (Heap 1 4 Hleaf (Heap 2 2 Hleaf (Heap 2 5 Hleaf Hleaf))); r := Hleaf]
   [gv12 := 1; l := (Heap 1 4 Hleaf
   (Heap 2 4 (Heap 1 1 (Heap 4 0 Hleaf Hleaf) (Heap 3 4 Hleaf Hleaf))
      (Heap 0 2 Hleaf Hleaf))); r := Hleaf]
   [gv12 := 2; l := (Heap 0 3 Hleaf (Heap 2 1 Hleaf (Heap 3 3 Hleaf Hleaf))); r := Hleaf]
   [gv12 := 0; l := (Heap 0 1 (Heap 0 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 1; l := (Heap 0 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv12 := 1; l := (Heap 2 1 Hleaf (Heap 0 4 (Heap 4 0 (Heap 4 1 Hleaf Hleaf) Hleaf) Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv12 := 3; l := (Heap 5 3 (Heap 4 6 Hleaf (Heap 1 1 Hleaf (Heap 5 6 Hleaf Hleaf)))
   (Heap 2 1 Hleaf Hleaf)); r := Hleaf]
   [gv12 := 2; l := (Heap 2 3 Hleaf Hleaf); r := Hleaf]
   [gv12 := 2; l := (Heap 0 1 (Heap 5 5 Hleaf Hleaf)
   (Heap 5 4
      (Heap 3 2 Hleaf
         (Heap 5 4 (Heap 1 1 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf)))
      (Heap 3 4 Hleaf
         (Heap 0 5 (Heap 2 4 Hleaf Hleaf) (Heap 2 5 Hleaf Hleaf))))); r := Hleaf]
   [gv12 := 2; l := (Heap 2 2 Hleaf (Heap 2 2 (Heap 1 3 Hleaf Hleaf) Hleaf)); r := Hleaf]
   etc ...


Label: 9 (32)
Abducted Assumption: (right_height r + 1 = gv13)
Positive Examples:
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv13 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 6; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv13 := 0; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 6; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...


Label: 9 (33)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv13 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv13 := 2; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]


Label: 9 (34)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv13 := 2; l := (Heap 1 6 Hleaf Hleaf); r := (Heap 3 6 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 3 3 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 (Heap 2 2 Hleaf (Heap 3 3 Hleaf Hleaf)) Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 3 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 1
   (Heap 5 5
      (Heap 0 2 (Heap 3 5 (Heap 0 0 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
         (Heap 0 5 Hleaf (Heap 3 5 Hleaf Hleaf)))
      (Heap 0 0 Hleaf
         (Heap 4 5 (Heap 2 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv13 := 2; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 6 6
   (Heap 5 5 Hleaf (Heap 1 4 (Heap 4 2 Hleaf (Heap 6 1 Hleaf Hleaf)) Hleaf))
   Hleaf)]
   [gv13 := 2; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 2 3 (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf)]


Label: 9 (35)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv13 := 1; l := (Heap 2 1
   (Heap 4 0 (Heap 1 2 Hleaf (Heap 3 3 Hleaf Hleaf))
      (Heap 2 4 (Heap 0 5 (Heap 4 5 Hleaf Hleaf) (Heap 5 3 Hleaf Hleaf))
         (Heap 5 1 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 3 2 Hleaf (Heap 2 2 (Heap 3 0 Hleaf (Heap 4 3 Hleaf Hleaf)) Hleaf)); r := Hleaf]
   [gv13 := 2; l := (Heap 3 5
   (Heap 3 5
      (Heap 3 0 Hleaf
         (Heap 6 2 (Heap 3 5 (Heap 4 6 Hleaf Hleaf) Hleaf)
            (Heap 3 3 Hleaf Hleaf)))
      (Heap 3 0 (Heap 2 1 Hleaf Hleaf) (Heap 4 5 Hleaf Hleaf)))
   (Heap 5 3 (Heap 6 2 Hleaf (Heap 5 5 Hleaf (Heap 0 2 Hleaf Hleaf)))
      (Heap 6 0 (Heap 3 5 (Heap 3 5 Hleaf Hleaf) (Heap 6 1 Hleaf Hleaf))
         Hleaf))); r := (Heap 1 1 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 5 4 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 3 0 Hleaf (Heap 2 2 (Heap 1 3 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))); r := Hleaf]
   [gv13 := 2; l := (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)); r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv13 := 1; l := (Heap 0 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 6 3 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 3 2
   (Heap 1 0 (Heap 3 1 (Heap 4 2 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
      (Heap 0 2 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 3 1 Hleaf (Heap 3 3 (Heap 4 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf))); r := Hleaf]
   etc ...


Label: 10 (36)
Abducted Assumption: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv0)
Positive Examples:
   [gv0 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv0 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv0 := true; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv0 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 2 0 (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf) (Heap 1 3 Hleaf Hleaf)); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv0 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   etc ...


Label: 11 (37)
Abducted Assumption: ((right_height r <=? right_height l) = gv5)
Positive Examples:
   [gv5 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv5 := false; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv5 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   etc ...


Label: 11 (38)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv5 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv5 := false; l := Hleaf; r := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   [gv5 := false; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := false; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]


Label: 11 (39)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv5 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv5 := true; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 0 0 Hleaf (Heap 1 0 Hleaf Hleaf))]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2 (Heap 0 0 Hleaf Hleaf) Hleaf)]
   [gv5 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 4
   (Heap 1 2 (Heap 1 4 Hleaf (Heap 3 2 Hleaf Hleaf))
      (Heap 1 1 (Heap 0 2 Hleaf Hleaf) Hleaf)) Hleaf)]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 0
   (Heap 3 5 (Heap 3 0 (Heap 1 2 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 4 4 Hleaf (Heap 0 0 (Heap 3 2 Hleaf Hleaf) Hleaf))) Hleaf)]
   [gv5 := true; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 4 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 1 1 (Heap 0 1 Hleaf (Heap 4 1 (Heap 0 3 Hleaf Hleaf) Hleaf)) Hleaf)]
   [gv5 := true; l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)); r := (Heap 1 0 (Heap 3 2 (Heap 3 2 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))
   (Heap 3 3 Hleaf Hleaf))]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 2 0 (Heap 2 4 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 11 (40)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv5 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv5 := true; l := (Heap 3 3
   (Heap 4 0 (Heap 1 3 (Heap 0 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) Hleaf)
   Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 4 3 (Heap 4 0 Hleaf (Heap 3 0 (Heap 0 2 Hleaf Hleaf) Hleaf))
   (Heap 2 4 Hleaf (Heap 2 1 Hleaf Hleaf))); r := Hleaf]
   [gv5 := true; l := (Heap 1 4
   (Heap 6 0 (Heap 6 1 Hleaf Hleaf) (Heap 4 5 (Heap 5 6 Hleaf Hleaf) Hleaf))
   Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 1
   (Heap 6 2 (Heap 6 4 (Heap 1 6 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf) Hleaf)
   Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 0 Hleaf
   (Heap 1 2 (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 4 4 Hleaf Hleaf)) Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 (Heap 1 2 (Heap 3 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))
   (Heap 1 0 Hleaf (Heap 3 0 Hleaf Hleaf))); r := Hleaf]
   [gv5 := true; l := (Heap 0 1 (Heap 5 1 (Heap 0 5 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 3 (Heap 1 2 (Heap 3 2 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)) Hleaf); r := Hleaf]
   etc ...


Label: 12 (41)
Abducted Assumption: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) = gv1)
Positive Examples:
   [gv1 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv1 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv1 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...


Label: 12 (42)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [gv1 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv1 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv1 := false; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 1 (Heap 2 3 (Heap 1 3 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv1 := false; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   etc ...


Label: 12 (43)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv1 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv1 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv1 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 2 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 4 5
   (Heap 0 4 Hleaf
      (Heap 4 5 (Heap 3 2 (Heap 4 0 Hleaf Hleaf) (Heap 3 3 Hleaf Hleaf))
         (Heap 0 3 Hleaf (Heap 5 3 Hleaf Hleaf)))) Hleaf)]
   [gv1 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 3
   (Heap 2 0
      (Heap 1 4 (Heap 2 2 (Heap 0 2 Hleaf Hleaf) Hleaf)
         (Heap 0 5 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))) Hleaf)
   Hleaf)]
   [gv1 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 3 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 2
   (Heap 4 2 (Heap 1 2 (Heap 1 1 Hleaf Hleaf) (Heap 5 1 Hleaf Hleaf)) Hleaf)
   Hleaf)]
   [gv1 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 0 (Heap 0 2 Hleaf (Heap 2 5 Hleaf Hleaf)) Hleaf)]
   [gv1 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 2 1
   (Heap 1 1 (Heap 1 2 (Heap 0 1 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf))
      (Heap 4 0 (Heap 3 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))) Hleaf)]
   [gv1 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv1 := false; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := (Heap 2 2 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 1 Hleaf Hleaf)]
   etc ...


Label: 13 (44)
Abducted Assumption: (right_height r <= gv7)
Positive Examples:
   [gv7 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 5; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 2; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv7 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv7 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv7 := 5; l := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv7 := 0; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv7 := 1; l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv7 := 0; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 6 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   etc ...


Label: 13 (45)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv7 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 5; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 2; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv7 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv7 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv7 := 5; l := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv7 := 1; l := Hleaf; r := (Heap 5 1
   (Heap 0 2 Hleaf
      (Heap 4 5 (Heap 0 2 Hleaf (Heap 1 5 (Heap 6 6 Hleaf Hleaf) Hleaf))
         (Heap 4 0 Hleaf Hleaf))) Hleaf)]
   [gv7 := 4; l := Hleaf; r := (Heap 0 3 Hleaf
   (Heap 5 1
      (Heap 3 4 (Heap 1 4 (Heap 0 0 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf))
         Hleaf) (Heap 0 5 Hleaf (Heap 1 5 Hleaf Hleaf))))]
   [gv7 := 3; l := Hleaf; r := (Heap 1 1 (Heap 3 0 (Heap 0 3 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))
   (Heap 1 3 Hleaf (Heap 1 2 Hleaf Hleaf)))]
   [gv7 := 2; l := Hleaf; r := (Heap 0 1 (Heap 0 0 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))]
   [gv7 := 3; l := Hleaf; r := (Heap 2 1 Hleaf (Heap 2 0 Hleaf (Heap 0 3 Hleaf Hleaf)))]
   [gv7 := 5; l := Hleaf; r := (Heap 4 1 Hleaf Hleaf)]
   [gv7 := 1; l := Hleaf; r := (Heap 0 1 (Heap 3 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 1; l := Hleaf; r := (Heap 2 2
   (Heap 0 0 (Heap 4 3 Hleaf (Heap 4 0 Hleaf (Heap 4 2 Hleaf Hleaf)))
      (Heap 2 1 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf)]
   [gv7 := 2; l := Hleaf; r := (Heap 1 5 Hleaf
   (Heap 4 5
      (Heap 5 1 Hleaf
         (Heap 3 1 (Heap 3 5 Hleaf Hleaf) (Heap 5 3 Hleaf Hleaf))) Hleaf))]
   [gv7 := 4; l := Hleaf; r := (Heap 2 3 Hleaf (Heap 0 1 (Heap 4 1 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf))]
   etc ...


Label: 13 (46)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv7 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 5; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 2; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv7 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv7 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv7 := 5; l := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv7 := 2; l := (Heap 0 0 Hleaf (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 0; l := (Heap 3 0 (Heap 3 2 Hleaf (Heap 0 1 Hleaf (Heap 2 3 Hleaf Hleaf)))
   (Heap 0 1 (Heap 3 1 Hleaf Hleaf) Hleaf)); r := Hleaf]
   [gv7 := 0; l := (Heap 1 4 Hleaf (Heap 0 0 Hleaf (Heap 5 2 Hleaf Hleaf))); r := Hleaf]
   [gv7 := 1; l := (Heap 3 0 Hleaf
   (Heap 0 3 (Heap 0 0 Hleaf (Heap 0 2 Hleaf Hleaf))
      (Heap 4 0 (Heap 4 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)))); r := Hleaf]
   [gv7 := 4; l := (Heap 3 0 Hleaf (Heap 5 0 (Heap 2 4 Hleaf Hleaf) Hleaf)); r := Hleaf]
   [gv7 := 0; l := (Heap 2 1
   (Heap 2 5
      (Heap 1 1 Hleaf
         (Heap 4 5 (Heap 2 4 Hleaf Hleaf) (Heap 5 5 Hleaf Hleaf))) Hleaf)
   (Heap 4 1
      (Heap 5 3 Hleaf
         (Heap 1 2 (Heap 3 4 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf))) Hleaf)); r := Hleaf]
   [gv7 := 2; l := (Heap 0 0 (Heap 3 4 Hleaf (Heap 2 3 (Heap 1 4 Hleaf Hleaf) Hleaf))
   (Heap 1 0 Hleaf (Heap 4 1 (Heap 1 2 Hleaf Hleaf) Hleaf))); r := Hleaf]
   [gv7 := 0; l := (Heap 0 2 Hleaf (Heap 2 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 4; l := (Heap 4 3 Hleaf (Heap 1 3 Hleaf (Heap 0 2 Hleaf Hleaf))); r := Hleaf]
   [gv7 := 0; l := (Heap 2 0 (Heap 0 0 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)); r := Hleaf]
   etc ...


Label: 14 (47)
Abducted Assumption: (right_height r = gv6)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 1; l := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv6 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 2 2 (Heap 1 0 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 1; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv6 := 0; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 14 (48)
Abducted Assumption: (gv6 <= right_height l)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 1; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 3 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv6 := 2; l := Hleaf; r := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv6 := 1; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]


Label: 14 (49)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 1; l := (Heap 1 2 (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) Hleaf); r := (Heap 3 3 (Heap 0 1 (Heap 3 1 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)) Hleaf)]
   [gv6 := 1; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 0 3 (Heap 5 1 (Heap 1 3 Hleaf (Heap 5 0 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 4 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 2 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 3 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 2; l := (Heap 2 2 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := (Heap 2 1 (Heap 2 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   etc ...


Label: 14 (50)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 0; l := (Heap 3 1 (Heap 2 1 (Heap 4 2 (Heap 4 4 Hleaf Hleaf) Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 0 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 1 (Heap 2 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 0; l := (Heap 0 3 Hleaf (Heap 1 2 Hleaf (Heap 0 3 Hleaf Hleaf))); r := Hleaf]
   [gv6 := 0; l := (Heap 0 1 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 0; l := (Heap 4 0
   (Heap 2 2 Hleaf
      (Heap 1 5
         (Heap 0 0 Hleaf
            (Heap 6 6 (Heap 1 5 Hleaf Hleaf) (Heap 4 4 Hleaf Hleaf)))
         (Heap 2 2 Hleaf (Heap 1 4 Hleaf Hleaf))))
   (Heap 2 6 Hleaf
      (Heap 6 5 Hleaf
         (Heap 5 2 (Heap 5 2 (Heap 2 1 Hleaf Hleaf) (Heap 5 6 Hleaf Hleaf))
            Hleaf)))); r := Hleaf]
   [gv6 := 0; l := (Heap 4 0 Hleaf
   (Heap 4 2 (Heap 3 3 (Heap 4 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) Hleaf)); r := Hleaf]
   [gv6 := 0; l := (Heap 3 4 (Heap 4 4 (Heap 4 0 Hleaf (Heap 0 3 Hleaf Hleaf)) Hleaf) Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 0 2 (Heap 0 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 0; l := (Heap 2 0 (Heap 2 3 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   etc ...


Label: 15 (51)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [l := Hleaf; r := (Heap 1 6 Hleaf Hleaf)]
   [l := Hleaf; r := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))]
   [l := Hleaf; r := (Heap 1 1 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf)]
   [l := Hleaf; r := (Heap 1 4 (Heap 1 4 Hleaf Hleaf) Hleaf)]
   [l := Hleaf; r := (Heap 1 5 (Heap 1 6 Hleaf Hleaf) Hleaf)]
   [l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   etc ...


Label: 15 (52)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [l := (Heap 5 4 Hleaf (Heap 5 0 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 4 4 (Heap 5 2 Hleaf (Heap 4 2 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [l := (Heap 3 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [l := (Heap 0 6 (Heap 3 0 Hleaf Hleaf) (Heap 3 2 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 1 1
   (Heap 4 1 (Heap 2 2 Hleaf Hleaf)
      (Heap 0 2 (Heap 4 4 Hleaf Hleaf) (Heap 4 5 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [l := (Heap 2 3 (Heap 1 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
   (Heap 1 2 (Heap 2 2 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))); r := Hleaf]
   [l := (Heap 0 1 (Heap 0 1 Hleaf Hleaf) Hleaf); r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 0 (Heap 3 2 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 6 1 (Heap 5 4 Hleaf Hleaf) (Heap 2 4 (Heap 2 6 Hleaf Hleaf) Hleaf)); r := Hleaf]
   [l := (Heap 2 2
   (Heap 3 4
      (Heap 1 2 (Heap 3 3 (Heap 2 2 Hleaf Hleaf) (Heap 5 1 Hleaf Hleaf))
         Hleaf) Hleaf)
   (Heap 4 0 (Heap 4 2 (Heap 1 4 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)) Hleaf)); r := Hleaf]
   etc ...


Label: 15 (53)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf)]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 3 2 (Heap 1 4 Hleaf (Heap 4 2 Hleaf Hleaf)) Hleaf)]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 4 3 (Heap 0 2 (Heap 1 1 Hleaf Hleaf) Hleaf) Hleaf)]
   [l := (Heap 1 2 Hleaf Hleaf); r := (Heap 3 0
   (Heap 6 5
      (Heap 0 5 Hleaf
         (Heap 0 3 Hleaf
            (Heap 5 5 (Heap 1 5 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf))))
      (Heap 1 2
         (Heap 4 4 (Heap 3 6 (Heap 4 6 Hleaf Hleaf) Hleaf)
            (Heap 4 5 (Heap 3 4 Hleaf Hleaf) Hleaf)) Hleaf)) Hleaf)]
   [l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 (Heap 2 4 Hleaf Hleaf) Hleaf)]
   [l := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := (Heap 0 2 Hleaf (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := (Heap 2 1 (Heap 2 0 (Heap 2 1 Hleaf Hleaf) Hleaf) Hleaf)]
   [l := (Heap 1 4 Hleaf Hleaf); r := (Heap 0 4
   (Heap 3 3 (Heap 2 1 (Heap 2 4 Hleaf Hleaf) Hleaf)
      (Heap 3 0 Hleaf (Heap 3 4 Hleaf Hleaf))) Hleaf)]
   [l := (Heap 1 2 Hleaf Hleaf); r := (Heap 3 2 (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 1 (Heap 0 1 Hleaf Hleaf) Hleaf)]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 363.233 seconds


Label: 0 (0)
(false = gv2), (true = gv2), (l = l), (l = r), (r = l), (r = r), (gv2 = gv2), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv2), (true <> gv2), (l <> l), (l <> r), (r <> l)
(gv2 <> gv2), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv2), (has_leftist_property r = gv2), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv2)

Label: 0 (1)
(false = gv2), (true = gv2), (l = l), (l = r), (r = l), (r = r), (gv2 = gv2), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv2), (true <> gv2), (l <> l), (l <> r), (r <> l)
(gv2 <> gv2), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv2), (has_leftist_property r = gv2), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv2)

Label: 0 (2)
(false = gv2), (true = gv2), (l = l), (l = r), (r = l), (r = r), (gv2 = gv2), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv2), (true <> gv2), (l <> l), (l <> r), (r <> l)
(gv2 <> gv2), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv2), (has_leftist_property r = gv2), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv2)

Label: 0 (3)
(false = gv2), (true = gv2), (l = l), (l = r), (r = l), (r = r), (gv2 = gv2), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv2), (true <> gv2), (l <> l), (l <> r), (r <> l)
(gv2 <> gv2), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv2), (has_leftist_property r = gv2), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv2)

Label: 1 (4)
(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv9), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv9), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv9), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv9), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv9), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv9 <= hsize r)
(gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv9), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv9), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv9), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv9), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l)
(merge r r = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv9)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l)
(mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r)
(mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9)
(mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank r = hsize r), (rank r = hsize l), (rank l = gv9), (rank l = hsize r)
(right_height r = gv9), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv9), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 1 (5)
(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv9), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv9), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv9), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv9), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv9), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv9 <= hsize r)
(gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv9), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv9), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv9), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv9), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l)
(merge r r = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv9)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l)
(mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r)
(mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9)
(mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank r = hsize r), (rank r = hsize l), (rank l = gv9), (rank l = hsize r)
(right_height r = gv9), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv9), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 1 (6)
(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv9), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv9), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv9), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv9), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv9), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv9 <= hsize r)
(gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv9), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv9), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv9), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv9), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l)
(merge r r = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv9)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l)
(mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r)
(mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9)
(mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank r = hsize r), (rank r = hsize l), (rank l = gv9), (rank l = hsize r)
(right_height r = gv9), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv9), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 1 (7)
(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv9), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv9), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv9), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv9), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv9), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv9 <= hsize r)
(gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv9), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv9), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv9), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv9), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l)
(merge r r = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv9)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l)
(mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r)
(mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9)
(mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank r = hsize r), (rank r = hsize l), (rank l = gv9), (rank l = hsize r)
(right_height r = gv9), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv9), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 2 (8)
(false = gv3), (true = gv3), (l = l), (l = r), (r = l), (r = r), (gv3 = gv3), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv3), (true <> gv3), (l <> l), (l <> r), (r <> l)
(gv3 <> gv3), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv3), (has_leftist_property r = gv3), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv3)

Label: 2 (9)
(false = gv3), (true = gv3), (l = l), (l = r), (r = l), (r = r), (gv3 = gv3), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv3), (true <> gv3), (l <> l), (l <> r), (r <> l)
(gv3 <> gv3), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv3), (has_leftist_property r = gv3), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv3)

Label: 2 (10)
(false = gv3), (true = gv3), (l = l), (l = r), (r = l), (r = r), (gv3 = gv3), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv3), (true <> gv3), (l <> l), (l <> r), (r <> l)
(gv3 <> gv3), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv3), (has_leftist_property r = gv3), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv3)

Label: 3 (11)
(false = gv8), (true = gv8), (gv8 = gv8), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv8), (true <> gv8), (gv8 <> gv8), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv8), (has_leftist_property l = gv8), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv8)

Label: 3 (12)
(false = gv8), (true = gv8), (gv8 = gv8), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv8), (true <> gv8), (gv8 <> gv8), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv8), (has_leftist_property l = gv8), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv8)

Label: 3 (13)
(false = gv8), (true = gv8), (gv8 = gv8), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv8), (true <> gv8), (gv8 <> gv8), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv8), (has_leftist_property l = gv8), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv8)

Label: 3 (14)
(false = gv8), (true = gv8), (gv8 = gv8), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv8), (true <> gv8), (gv8 <> gv8), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv8), (has_leftist_property l = gv8), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv8)

Label: 4 (15)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv10), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv10), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv10), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv10), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv10), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv10 <= hsize r)
(gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv10), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv10), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv10), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv10), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l), (hinsert l gv10 = r), (hinsert l gv10 = l)
(merge r r = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv10)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r), (mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l)
(mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10), (mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r)
(mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r), (mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10)
(mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10), (rank r = gv10), (rank r = hsize r), (rank r = hsize l), (rank l = gv10), (rank l = hsize r)
(right_height r = gv10), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv10), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 4 (16)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv10), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv10), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv10), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv10), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv10), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv10 <= hsize r)
(gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv10), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv10), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv10), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv10), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l), (hinsert l gv10 = r), (hinsert l gv10 = l)
(merge r r = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv10)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r), (mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l)
(mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10), (mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r)
(mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r), (mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10)
(mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10), (rank r = gv10), (rank r = hsize r), (rank r = hsize l), (rank l = gv10), (rank l = hsize r)
(right_height r = gv10), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv10), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 4 (17)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv10), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv10), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv10), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv10), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv10), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv10 <= hsize r)
(gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv10), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv10), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv10), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv10), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l), (hinsert l gv10 = r), (hinsert l gv10 = l)
(merge r r = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv10)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r), (mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l)
(mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10), (mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r)
(mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r), (mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10)
(mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10), (rank r = gv10), (rank r = hsize r), (rank r = hsize l), (rank l = gv10), (rank l = hsize r)
(right_height r = gv10), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv10), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 4 (18)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv10), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv10), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv10), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv10), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv10), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv10 <= hsize r)
(gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv10), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv10), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv10), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv10), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l), (hinsert l gv10 = r), (hinsert l gv10 = l)
(merge r r = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv10)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r), (mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l)
(mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10), (mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r)
(mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r), (mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10)
(mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10), (rank r = gv10), (rank r = hsize r), (rank r = hsize l), (rank l = gv10), (rank l = hsize r)
(right_height r = gv10), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv10), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 5 (19)
(gv11 < gv11), (gv11 <= gv11), (gv11 = gv11), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv11 < hsize r), (gv11 < hsize l), (gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv11), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv11), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv11), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv11), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv11), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv11 <= hsize r)
(gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv11), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv11), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv11), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv11), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l)
(merge r r = l), (merge r r = hinsert r gv11), (merge r r = hinsert l gv11), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv11), (merge r l = hinsert l gv11), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv11)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11), (mergea gv11 r r = merge r r), (mergea gv11 r r = merge r l)
(mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r), (mergea gv11 r l = merge l l), (mergea gv11 l r = r)
(mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l), (mergea gv11 l l = hinsert r gv11), (mergea gv11 l l = hinsert l gv11)
(mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank r = hsize r), (rank r = hsize l), (rank l = gv11), (rank l = hsize r)
(right_height r = gv11), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv11), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 5 (20)
(gv11 < gv11), (gv11 <= gv11), (gv11 = gv11), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv11 < hsize r), (gv11 < hsize l), (gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv11), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv11), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv11), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv11), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv11), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv11 <= hsize r)
(gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv11), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv11), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv11), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv11), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l)
(merge r r = l), (merge r r = hinsert r gv11), (merge r r = hinsert l gv11), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv11), (merge r l = hinsert l gv11), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv11)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11), (mergea gv11 r r = merge r r), (mergea gv11 r r = merge r l)
(mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r), (mergea gv11 r l = merge l l), (mergea gv11 l r = r)
(mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l), (mergea gv11 l l = hinsert r gv11), (mergea gv11 l l = hinsert l gv11)
(mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank r = hsize r), (rank r = hsize l), (rank l = gv11), (rank l = hsize r)
(right_height r = gv11), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv11), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 5 (21)
(gv11 < gv11), (gv11 <= gv11), (gv11 = gv11), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv11 < hsize r), (gv11 < hsize l), (gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv11), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv11), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv11), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv11), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv11), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv11 <= hsize r)
(gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv11), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv11), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv11), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv11), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l)
(merge r r = l), (merge r r = hinsert r gv11), (merge r r = hinsert l gv11), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv11), (merge r l = hinsert l gv11), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv11)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11), (mergea gv11 r r = merge r r), (mergea gv11 r r = merge r l)
(mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r), (mergea gv11 r l = merge l l), (mergea gv11 l r = r)
(mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l), (mergea gv11 l l = hinsert r gv11), (mergea gv11 l l = hinsert l gv11)
(mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank r = hsize r), (rank r = hsize l), (rank l = gv11), (rank l = hsize r)
(right_height r = gv11), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv11), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 6 (22)
(false = gv14), (true = gv14), (gv14 = gv14), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv14), (true <> gv14), (gv14 <> gv14), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv14), (has_leftist_property l = gv14), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv14)

Label: 6 (23)
(false = gv14), (true = gv14), (gv14 = gv14), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv14), (true <> gv14), (gv14 <> gv14), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv14), (has_leftist_property l = gv14), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv14)

Label: 6 (24)
(false = gv14), (true = gv14), (gv14 = gv14), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv14), (true <> gv14), (gv14 <> gv14), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv14), (has_leftist_property l = gv14), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv14)

Label: 7 (25)
(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 7 (26)
(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 7 (27)
(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 7 (28)
(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 8 (29)
(gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv12 < hsize r), (gv12 < hsize l), (gv12 < rank r), (gv12 < rank l), (gv12 < right_height r), (gv12 < right_height l), (hsize r < gv12), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv12), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv12), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv12), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv12), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv12), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv12 <= hsize r)
(gv12 <= rank r), (gv12 <= rank l), (gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv12), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv12), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv12), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv12), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv12 < gv12), (~ gv12 <= gv12), (gv12 <> gv12)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l)
(merge r r = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv12), (merge r l = hinsert l gv12), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv12)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r), (mergea gv12 r r = merge r l)
(mergea gv12 r r = merge l l), (mergea gv12 r l = r), (mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l), (mergea gv12 l r = r)
(mergea gv12 l r = hinsert r gv12), (mergea gv12 l r = hinsert l gv12), (mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12), (mergea gv12 l l = hinsert l gv12)
(mergea gv12 l l = merge r l), (mergea gv12 l l = merge l r), (mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank r = hsize r), (rank r = hsize l), (rank l = gv12), (rank l = hsize r)
(right_height r = gv12), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv12), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 8 (30)
(gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv12 < hsize r), (gv12 < hsize l), (gv12 < rank r), (gv12 < rank l), (gv12 < right_height r), (gv12 < right_height l), (hsize r < gv12), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv12), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv12), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv12), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv12), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv12), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv12 <= hsize r)
(gv12 <= rank r), (gv12 <= rank l), (gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv12), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv12), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv12), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv12), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv12 < gv12), (~ gv12 <= gv12), (gv12 <> gv12)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l)
(merge r r = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv12), (merge r l = hinsert l gv12), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv12)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r), (mergea gv12 r r = merge r l)
(mergea gv12 r r = merge l l), (mergea gv12 r l = r), (mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l), (mergea gv12 l r = r)
(mergea gv12 l r = hinsert r gv12), (mergea gv12 l r = hinsert l gv12), (mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12), (mergea gv12 l l = hinsert l gv12)
(mergea gv12 l l = merge r l), (mergea gv12 l l = merge l r), (mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank r = hsize r), (rank r = hsize l), (rank l = gv12), (rank l = hsize r)
(right_height r = gv12), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv12), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 8 (31)
(gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv12 < hsize r), (gv12 < hsize l), (gv12 < rank r), (gv12 < rank l), (gv12 < right_height r), (gv12 < right_height l), (hsize r < gv12), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv12), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv12), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv12), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv12), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv12), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv12 <= hsize r)
(gv12 <= rank r), (gv12 <= rank l), (gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv12), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv12), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv12), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv12), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv12 < gv12), (~ gv12 <= gv12), (gv12 <> gv12)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l)
(merge r r = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv12), (merge r l = hinsert l gv12), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv12)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r), (mergea gv12 r r = merge r l)
(mergea gv12 r r = merge l l), (mergea gv12 r l = r), (mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l), (mergea gv12 l r = r)
(mergea gv12 l r = hinsert r gv12), (mergea gv12 l r = hinsert l gv12), (mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12), (mergea gv12 l l = hinsert l gv12)
(mergea gv12 l l = merge r l), (mergea gv12 l l = merge l r), (mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank r = hsize r), (rank r = hsize l), (rank l = gv12), (rank l = hsize r)
(right_height r = gv12), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv12), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 9 (32)
(gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv13), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv13), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv13), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv13), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv13), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv13 <= hsize r)
(gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv13), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv13), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv13), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv13), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l)
(merge r r = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv13)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l)
(mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r)
(mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13)
(mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank r = hsize r), (rank r = hsize l), (rank l = gv13), (rank l = hsize r)
(right_height r = gv13), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv13), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 9 (33)
(gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv13), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv13), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv13), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv13), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv13), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv13 <= hsize r)
(gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv13), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv13), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv13), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv13), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l)
(merge r r = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv13)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l)
(mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r)
(mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13)
(mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank r = hsize r), (rank r = hsize l), (rank l = gv13), (rank l = hsize r)
(right_height r = gv13), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv13), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 9 (34)
(gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv13), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv13), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv13), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv13), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv13), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv13 <= hsize r)
(gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv13), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv13), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv13), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv13), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l)
(merge r r = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv13)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l)
(mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r)
(mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13)
(mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank r = hsize r), (rank r = hsize l), (rank l = gv13), (rank l = hsize r)
(right_height r = gv13), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv13), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 9 (35)
(gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv13), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv13), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv13), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv13), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv13), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv13 <= hsize r)
(gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv13), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv13), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv13), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv13), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l)
(merge r r = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv13)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l)
(mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r)
(mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13)
(mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank r = hsize r), (rank r = hsize l), (rank l = gv13), (rank l = hsize r)
(right_height r = gv13), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv13), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 10 (36)
(false = gv0), (true = gv0), (r = r), (r = l), (l = r), (l = l), (gv0 = gv0), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv0), (true <> gv0), (r <> r), (r <> l), (l <> r)
(gv0 <> gv0), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv0), (has_leftist_property l = gv0), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv0)

Label: 11 (37)
(false = gv5), (true = gv5), (gv5 = gv5), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv5), (true <> gv5), (gv5 <> gv5), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv5), (has_leftist_property l = gv5), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv5)

Label: 11 (38)
(false = gv5), (true = gv5), (gv5 = gv5), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv5), (true <> gv5), (gv5 <> gv5), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv5), (has_leftist_property l = gv5), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv5)

Label: 11 (39)
(false = gv5), (true = gv5), (gv5 = gv5), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv5), (true <> gv5), (gv5 <> gv5), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv5), (has_leftist_property l = gv5), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv5)

Label: 11 (40)
(false = gv5), (true = gv5), (gv5 = gv5), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv5), (true <> gv5), (gv5 <> gv5), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv5), (has_leftist_property l = gv5), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv5)

Label: 12 (41)
(false = gv1), (true = gv1), (l = l), (l = r), (r = l), (r = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv1), (true <> gv1), (l <> l), (l <> r), (r <> l)
(gv1 <> gv1), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv1), (has_leftist_property r = gv1), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv1)

Label: 12 (42)
(false = gv1), (true = gv1), (l = l), (l = r), (r = l), (r = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv1), (true <> gv1), (l <> l), (l <> r), (r <> l)
(gv1 <> gv1), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv1), (has_leftist_property r = gv1), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv1)

Label: 12 (43)
(false = gv1), (true = gv1), (l = l), (l = r), (r = l), (r = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv1), (true <> gv1), (l <> l), (l <> r), (r <> l)
(gv1 <> gv1), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv1), (has_leftist_property r = gv1), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv1)

Label: 13 (44)
(gv7 < gv7), (gv7 <= gv7), (gv7 = gv7), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv7), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv7), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv7), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv7), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv7), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv7 <= hsize r)
(gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv7), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv7), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv7), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv7), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l), (hinsert l gv7 = r), (hinsert l gv7 = l)
(merge r r = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv7)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r), (mergea gv7 r r = l), (mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l)
(mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7), (mergea gv7 r l = merge r r), (mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r)
(mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r), (mergea gv7 l r = merge l l), (mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7)
(mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7), (rank r = gv7), (rank r = hsize r), (rank r = hsize l), (rank l = gv7), (rank l = hsize r)
(right_height r = gv7), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv7), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 13 (45)
(gv7 < gv7), (gv7 <= gv7), (gv7 = gv7), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv7), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv7), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv7), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv7), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv7), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv7 <= hsize r)
(gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv7), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv7), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv7), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv7), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l), (hinsert l gv7 = r), (hinsert l gv7 = l)
(merge r r = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv7)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r), (mergea gv7 r r = l), (mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l)
(mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7), (mergea gv7 r l = merge r r), (mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r)
(mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r), (mergea gv7 l r = merge l l), (mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7)
(mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7), (rank r = gv7), (rank r = hsize r), (rank r = hsize l), (rank l = gv7), (rank l = hsize r)
(right_height r = gv7), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv7), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 13 (46)
(gv7 < gv7), (gv7 <= gv7), (gv7 = gv7), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv7), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv7), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv7), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv7), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv7), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv7 <= hsize r)
(gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv7), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv7), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv7), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv7), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l), (hinsert l gv7 = r), (hinsert l gv7 = l)
(merge r r = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv7)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r), (mergea gv7 r r = l), (mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l)
(mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7), (mergea gv7 r l = merge r r), (mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r)
(mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r), (mergea gv7 l r = merge l l), (mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7)
(mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7), (rank r = gv7), (rank r = hsize r), (rank r = hsize l), (rank l = gv7), (rank l = hsize r)
(right_height r = gv7), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv7), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 14 (47)
(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 14 (48)
(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 14 (49)
(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 14 (50)
(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 15 (51)
(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 15 (52)
(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 15 (53)
(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)


------------------------------ COMBINED SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 443.59 seconds


Label: 15 (0)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples:
   [l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf)); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=? right_height (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf)); gv8 := true]
   [l := (Heap 2 1 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 2 1 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 2 1 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := true; gv5 := (right_height Hleaf <=?
 right_height (Heap 2 1 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv6 := (right_height Hleaf); gv12 := 0; gv4 := true; gv5 := (right_height Hleaf <=? right_height (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := true; gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv7 := 2; gv6 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
 right_height Hleaf); gv8 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1)]
   [l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := 1; gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=? right_height (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv8 := true]
   [l := (Heap 1 3 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 3 (Heap 1 3 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := 1; gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=? right_height (Heap 1 3 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf; gv2 := (has_leftist_property (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv11 := 1; gv10 := 0; gv13 := 1; gv7 := 1; gv6 := (right_height Hleaf); gv12 := 0; gv4 := true; gv5 := true; gv8 := true]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv12 := 0; gv4 := (has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv5 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv8 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1)]
   etc ...

Negative Examples:
   [l := (Heap 0 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property (Heap 0 2 Hleaf (Heap 2 0 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv10 := (rank Hleaf); gv11 := 1; gv9 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 0 2 Hleaf (Heap 2 0 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=? right_height (Heap 0 2 Hleaf (Heap 2 0 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 4 1
   (Heap 2 0 (Heap 1 0 (Heap 2 4 (Heap 5 2 Hleaf Hleaf) Hleaf) Hleaf)
      (Heap 3 5 (Heap 3 0 (Heap 2 5 Hleaf Hleaf) (Heap 2 4 Hleaf Hleaf))
         Hleaf)) Hleaf); r := Hleaf; gv2 := (has_leftist_property
   (Heap 4 1
      (Heap 2 0 (Heap 1 0 (Heap 2 4 (Heap 5 2 Hleaf Hleaf) Hleaf) Hleaf)
         (Heap 3 5 (Heap 3 0 (Heap 2 5 Hleaf Hleaf) (Heap 2 4 Hleaf Hleaf))
            Hleaf)) Hleaf) && has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height
   (Heap 4 1
      (Heap 2 0 (Heap 1 0 (Heap 2 4 (Heap 5 2 Hleaf Hleaf) Hleaf) Hleaf)
         (Heap 3 5 (Heap 3 0 (Heap 2 5 Hleaf Hleaf) (Heap 2 4 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv6 := (right_height Hleaf); gv12 := 1; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height
   (Heap 4 1
      (Heap 2 0 (Heap 1 0 (Heap 2 4 (Heap 5 2 Hleaf Hleaf) Hleaf) Hleaf)
         (Heap 3 5 (Heap 3 0 (Heap 2 5 Hleaf Hleaf) (Heap 2 4 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 4 4 (Heap 4 1 Hleaf (Heap 2 0 (Heap 4 1 Hleaf Hleaf) Hleaf))
   (Heap 4 0 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 4 4 (Heap 4 1 Hleaf (Heap 2 0 (Heap 4 1 Hleaf Hleaf) Hleaf))
      (Heap 4 0 Hleaf Hleaf)) && has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height
   (Heap 4 4 (Heap 4 1 Hleaf (Heap 2 0 (Heap 4 1 Hleaf Hleaf) Hleaf))
      (Heap 4 0 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height
   (Heap 4 4 (Heap 4 1 Hleaf (Heap 2 0 (Heap 4 1 Hleaf Hleaf) Hleaf))
      (Heap 4 0 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 3 0 Hleaf (Heap 0 3 Hleaf (Heap 3 2 Hleaf Hleaf))); r := Hleaf; gv2 := (has_leftist_property
   (Heap 3 0 Hleaf (Heap 0 3 Hleaf (Heap 3 2 Hleaf Hleaf))) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv11 := 1; gv10 := 0; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 3 0 Hleaf (Heap 0 3 Hleaf (Heap 3 2 Hleaf Hleaf)))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 3 0 Hleaf (Heap 0 3 Hleaf (Heap 3 2 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := Hleaf; gv2 := false; gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 2; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv7 := (right_height (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))); gv13 := 1; gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 0 0 (Heap 0 2 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 2 5 (Heap 3 1 Hleaf Hleaf) (Heap 6 5 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 2 5 (Heap 3 1 Hleaf Hleaf) (Heap 6 5 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 2 5 (Heap 3 1 Hleaf Hleaf) (Heap 6 5 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 2 5 (Heap 3 1 Hleaf Hleaf) (Heap 6 5 Hleaf Hleaf))); gv8 := true]
   [l := (Heap 1 0
   (Heap 0 1 Hleaf
      (Heap 2 4 Hleaf
         (Heap 4 3 (Heap 4 1 Hleaf (Heap 4 6 Hleaf Hleaf))
            (Heap 4 5 (Heap 0 6 Hleaf Hleaf) Hleaf)))) Hleaf); r := Hleaf; gv2 := (has_leftist_property
   (Heap 1 0
      (Heap 0 1 Hleaf
         (Heap 2 4 Hleaf
            (Heap 4 3 (Heap 4 1 Hleaf (Heap 4 6 Hleaf Hleaf))
               (Heap 4 5 (Heap 0 6 Hleaf Hleaf) Hleaf)))) Hleaf) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height
   (Heap 1 0
      (Heap 0 1 Hleaf
         (Heap 2 4 Hleaf
            (Heap 4 3 (Heap 4 1 Hleaf (Heap 4 6 Hleaf Hleaf))
               (Heap 4 5 (Heap 0 6 Hleaf Hleaf) Hleaf)))) Hleaf)); gv6 := (right_height Hleaf); gv12 := 0; gv4 := true; gv5 := (right_height Hleaf <=?
 right_height
   (Heap 1 0
      (Heap 0 1 Hleaf
         (Heap 2 4 Hleaf
            (Heap 4 3 (Heap 4 1 Hleaf (Heap 4 6 Hleaf Hleaf))
               (Heap 4 5 (Heap 0 6 Hleaf Hleaf) Hleaf)))) Hleaf)); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   [l := (Heap 0 0
   (Heap 3 0 (Heap 2 4 Hleaf Hleaf) (Heap 0 6 Hleaf (Heap 1 2 Hleaf Hleaf)))
   (Heap 2 0 Hleaf (Heap 1 6 (Heap 5 4 Hleaf Hleaf) Hleaf))); r := Hleaf; gv2 := false; gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height
   (Heap 0 0
      (Heap 3 0 (Heap 2 4 Hleaf Hleaf)
         (Heap 0 6 Hleaf (Heap 1 2 Hleaf Hleaf)))
      (Heap 2 0 Hleaf (Heap 1 6 (Heap 5 4 Hleaf Hleaf) Hleaf)))); gv6 := (right_height Hleaf); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height
   (Heap 0 0
      (Heap 3 0 (Heap 2 4 Hleaf Hleaf)
         (Heap 0 6 Hleaf (Heap 1 2 Hleaf Hleaf)))
      (Heap 2 0 Hleaf (Heap 1 6 (Heap 5 4 Hleaf Hleaf) Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1)]
   etc ...

(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (gv6 < hsize r)
(gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize l < gv6), (rank r < gv6), (rank l < gv6), (right_height r < gv6), (right_height l < gv6)
(gv6 <= hsize l), (gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize l <= gv6), (rank r <= gv6), (rank l <= gv6), (right_height r <= gv6)
(~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6)
(merge r l = hinsert l gv6), (merge l r = hinsert r gv6), (merge l r = hinsert l gv6), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r)
(mergea gv6 r r = merge l r), (mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l)
(mergea gv6 l r = l), (mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6)
(mergea gv6 l l = merge r r), (mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank l = gv6), (right_height r = gv6), (right_height l = gv6)
(gv7 <= gv7), (gv7 = gv7), (gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize l < gv7)
(rank l < gv7), (right_height r < gv7), (right_height l < gv7), (gv7 <= hsize r), (gv7 <= hsize l), (gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7)
(rank r <= gv7), (rank l <= gv7), (right_height r <= gv7), (right_height l <= gv7), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l)
(hinsert l gv7 = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = hinsert r gv7), (merge l r = hinsert l gv7), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r)
(mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l), (mergea gv7 r r = merge l r), (mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7)
(mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r), (mergea gv7 l r = l), (mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r)
(mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7), (mergea gv7 l l = merge r r), (mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7)
(rank l = gv7), (right_height r = gv7), (right_height l = gv7), (false = gv5), (true = gv5), (gv5 = gv5), (false <> gv5), (true <> gv5), (gv5 <> gv5), (has_leftist_property r = gv5)
(None = Some gv5), (gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l)
(hsize l < gv13), (rank r < gv13), (rank l < gv13), (right_height r < gv13), (right_height l < gv13), (gv13 <= hsize r), (gv13 <= hsize l), (gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r)
(hsize r <= gv13), (hsize l <= gv13), (rank r <= gv13), (rank l <= gv13), (right_height r <= gv13), (right_height l <= gv13), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13), (None = Some gv13)
(hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = hinsert r gv13), (merge l r = hinsert l gv13), (merge l l = hinsert r gv13)
(mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l), (mergea gv13 r r = merge l r), (mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l)
(mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r), (mergea gv13 l r = l), (mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r)
(mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13), (mergea gv13 l l = merge r r), (mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l)
(hsize l = gv13), (rank r = gv13), (rank l = gv13), (right_height r = gv13), (right_height l = gv13), (gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (gv12 < hsize r), (gv12 < hsize l)
(gv12 < rank l), (gv12 < right_height r), (gv12 < right_height l), (hsize r < gv12), (hsize l < gv12), (rank r < gv12), (rank l < gv12), (right_height r < gv12), (right_height l < gv12), (gv12 <= hsize r)
(gv12 <= rank r), (gv12 <= rank l), (gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize l <= gv12), (rank r <= gv12), (rank l <= gv12), (right_height r <= gv12), (right_height l <= gv12)
(~ gv12 <= gv12), (gv12 <> gv12), (None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12), (merge r l = hinsert r gv12)
(merge l r = hinsert r gv12), (merge l r = hinsert l gv12), (merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r), (mergea gv12 r r = merge r l)
(mergea gv12 r r = merge l l), (mergea gv12 r l = r), (mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l), (mergea gv12 l r = r)
(mergea gv12 l r = hinsert r gv12), (mergea gv12 l r = hinsert l gv12), (mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12), (mergea gv12 l l = hinsert l gv12)
(mergea gv12 l l = merge r l), (mergea gv12 l l = merge l r), (mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank l = gv12), (right_height r = gv12), (right_height l = gv12), (false = gv4)
(gv4 = gv4), (false <> gv4), (true <> gv4), (gv4 <> gv4), (has_leftist_property r = gv4), (has_leftist_property l = gv4), (None = Some gv4), (gv11 < gv11), (gv11 <= gv11), (gv11 = gv11)
(gv11 < hsize l), (gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize l < gv11), (rank r < gv11), (rank l < gv11), (right_height r < gv11)
(gv11 <= hsize r), (gv11 <= hsize l), (gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize l <= gv11), (rank r <= gv11), (rank l <= gv11)
(right_height l <= gv11), (~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l), (merge r r = hinsert r gv11)
(merge r l = hinsert r gv11), (merge r l = hinsert l gv11), (merge l r = hinsert r gv11), (merge l r = hinsert l gv11), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11)
(mergea gv11 r r = merge r l), (mergea gv11 r r = merge l r), (mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r)
(mergea gv11 l r = r), (mergea gv11 l r = l), (mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l)
(mergea gv11 l l = hinsert l gv11), (mergea gv11 l l = merge r r), (mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank l = gv11), (right_height r = gv11)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10)
(rank r < gv10), (rank l < gv10), (right_height r < gv10), (right_height l < gv10), (gv10 <= hsize r), (gv10 <= hsize l), (gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l)
(hsize l <= gv10), (rank r <= gv10), (rank l <= gv10), (right_height r <= gv10), (right_height l <= gv10), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10), (None = Some gv10), (hinsert r gv10 = r)
(hinsert l gv10 = r), (hinsert l gv10 = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = hinsert r gv10), (merge l r = hinsert l gv10), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10)
(mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l), (mergea gv10 r r = merge l r), (mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10)
(mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r), (mergea gv10 l r = l), (mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l)
(mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10), (mergea gv10 l l = merge r r), (mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10)
(rank r = gv10), (rank l = gv10), (right_height r = gv10), (right_height l = gv10), (false = gv8), (true = gv8), (gv8 = gv8), (false <> gv8), (true <> gv8), (gv8 <> gv8)
(has_leftist_property l = gv8), (None = Some gv8), (gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r)
(hsize r < gv9), (hsize l < gv9), (rank r < gv9), (rank l < gv9), (right_height r < gv9), (right_height l < gv9), (gv9 <= hsize r), (gv9 <= hsize l), (gv9 <= rank r), (gv9 <= rank l)
(gv9 <= right_height l), (hsize r <= gv9), (hsize l <= gv9), (rank r <= gv9), (rank l <= gv9), (right_height r <= gv9), (right_height l <= gv9), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = hinsert r gv9), (merge l r = hinsert l gv9)
(merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l), (mergea gv9 r r = merge l r), (mergea gv9 r r = merge l l), (mergea gv9 r l = r)
(mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r), (mergea gv9 l r = l), (mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9)
(mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9), (mergea gv9 l l = merge r r), (mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r)
(hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank l = gv9), (right_height r = gv9), (right_height l = gv9), (false = gv2), (true = gv2), (gv2 = gv2), (false <> gv2)
(gv2 <> gv2), (has_leftist_property l = gv2), (has_leftist_property r = gv2), (None = Some gv2)

Label: 4 (1)
Abducted Assumption: (rank r = gv10)
Positive Examples:
   [gv10 := 0; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 4 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv10 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv10 := 0; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv10 := 5; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv10 := 3; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv10 := 4; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv10 := 3; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv10 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv10 := 3; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 2; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv10 := 4; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv10), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv10), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv10), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv10), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv10), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv10 <= hsize r)
(gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv10), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv10), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv10), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv10), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l), (hinsert l gv10 = r), (hinsert l gv10 = l)
(merge r r = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv10)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r), (mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l)
(mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10), (mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r)
(mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r), (mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10)
(mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10), (rank r = gv10), (rank r = hsize r), (rank r = hsize l), (rank l = gv10), (rank l = hsize r)
(right_height r = gv10), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv10), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 13 (2)
Abducted Assumption: (right_height r <= gv7)
Positive Examples:
   [gv7 := 4; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv7 := 5; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 2; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv7 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv7 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv7 := 2; l := Hleaf; r := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv7 := 5; l := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv7 := 0; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv7 := 1; l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv7 := 0; l := Hleaf; r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 5 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv7 := 0; l := Hleaf; r := (Heap 1 6 Hleaf Hleaf)]
   [gv7 := 0; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   etc ...

(gv7 < gv7), (gv7 <= gv7), (gv7 = gv7), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv7), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv7), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv7), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv7), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv7), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv7 <= hsize r)
(gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv7), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv7), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv7), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv7), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l), (hinsert l gv7 = r), (hinsert l gv7 = l)
(merge r r = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv7)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r), (mergea gv7 r r = l), (mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l)
(mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7), (mergea gv7 r l = merge r r), (mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r)
(mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r), (mergea gv7 l r = merge l l), (mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7)
(mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7), (rank r = gv7), (rank r = hsize r), (rank r = hsize l), (rank l = gv7), (rank l = hsize r)
(right_height r = gv7), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv7), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 14 (3)
Abducted Assumption: (gv6 <= right_height l)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 1; l := Hleaf; r := (Heap 1 4 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 3 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv6 := 2; l := Hleaf; r := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))]
   [gv6 := 1; l := Hleaf; r := (Heap 1 2 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 1; l := Hleaf; r := (Heap 1 0 Hleaf Hleaf)]

(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 15 (4)
Abducted Assumption: (right_height r <= right_height l)
Positive Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); gv14 := true; gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv5 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf)); r := (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf); gv14 := false; gv2 := (has_leftist_property
   (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf)) &&
 has_leftist_property
   (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf)); gv9 := (rank (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) + 1); gv10 := (rank (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf)); gv5 := (right_height (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) <=?
 right_height (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf))); gv1 := (has_leftist_property
   (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf)) &&
 has_leftist_property
   (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) &&
 (right_height (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) <=?
  right_height (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf)))); gv8 := (rank (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) + 1 =?
 right_height (Heap 3 0 (Heap 3 2 Hleaf (Heap 3 1 Hleaf Hleaf)) Hleaf) + 1); gv3 := (has_leftist_property
   (Heap 3 3 Hleaf (Heap 3 2 (Heap 0 3 Hleaf Hleaf) Hleaf)))]
   [l := (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf)); r := (Heap 2 4
   (Heap 5 0 Hleaf
      (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
         Hleaf)) Hleaf); gv14 := false; gv2 := (has_leftist_property
   (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf)) &&
 has_leftist_property
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv9 := (rank
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv10 := (rank
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv11 := 1; gv13 := (right_height
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv5 := (right_height
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) <=?
 right_height (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf)) &&
 has_leftist_property
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) &&
 (right_height
    (Heap 2 4
       (Heap 5 0 Hleaf
          (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
             Hleaf)) Hleaf) <=?
  right_height (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf)))); gv8 := (rank
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1 =?
 right_height
   (Heap 2 4
      (Heap 5 0 Hleaf
         (Heap 4 2 (Heap 5 1 (Heap 2 5 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv3 := (has_leftist_property
   (Heap 1 4 (Heap 1 2 Hleaf Hleaf) (Heap 0 3 Hleaf Hleaf)))]
   [l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf; gv14 := true; gv2 := true; gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))]
   [l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf; gv14 := true; gv2 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv10 := (rank Hleaf); gv11 := 1; gv9 := 1; gv13 := (right_height Hleaf + 1); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)))]
   [l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf; gv14 := true; gv2 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := true; gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))]
   [l := (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)); r := (Heap 0 0 Hleaf Hleaf); gv14 := false; gv2 := (has_leftist_property
   (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)) &&
 has_leftist_property (Heap 0 0 Hleaf Hleaf)); gv9 := (rank (Heap 0 0 Hleaf Hleaf) + 1); gv10 := (rank (Heap 0 0 Hleaf Hleaf)); gv11 := 1; gv13 := (right_height (Heap 0 0 Hleaf Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property (Heap 0 0 Hleaf Hleaf)); gv5 := (right_height (Heap 0 0 Hleaf Hleaf) <=?
 right_height (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)) &&
 has_leftist_property (Heap 0 0 Hleaf Hleaf) &&
 (right_height (Heap 0 0 Hleaf Hleaf) <=?
  right_height (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)))); gv8 := (rank (Heap 0 0 Hleaf Hleaf) + 1 =? right_height (Heap 0 0 Hleaf Hleaf) + 1); gv3 := (has_leftist_property
   (Heap 2 0 (Heap 2 2 Hleaf Hleaf) (Heap 2 1 Hleaf Hleaf)))]
   [l := (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf); gv14 := true; gv2 := (has_leftist_property (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf) &&
 has_leftist_property (Heap 1 1 Hleaf Hleaf)); gv9 := (rank (Heap 1 1 Hleaf Hleaf) + 1); gv10 := (rank (Heap 1 1 Hleaf Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 Hleaf Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property (Heap 1 1 Hleaf Hleaf)); gv5 := (right_height (Heap 1 1 Hleaf Hleaf) <=?
 right_height (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf)); gv1 := (has_leftist_property (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf) &&
 has_leftist_property (Heap 1 1 Hleaf Hleaf) &&
 (right_height (Heap 1 1 Hleaf Hleaf) <=?
  right_height (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf))); gv8 := (rank (Heap 1 1 Hleaf Hleaf) + 1 =? right_height (Heap 1 1 Hleaf Hleaf) + 1); gv3 := true]
   [l := (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf)); r := (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)); gv14 := false; gv2 := (has_leftist_property (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf)) &&
 has_leftist_property (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) <=?
 right_height (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf))); gv1 := (has_leftist_property (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf)) &&
 has_leftist_property (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) <=?
  right_height (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); gv8 := (rank (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property (Heap 1 1 Hleaf (Heap 1 0 Hleaf Hleaf)))]
   [l := (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf; gv14 := true; gv2 := (has_leftist_property
   (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv12 := 0; gv4 := (has_leftist_property Hleaf); gv5 := (right_height Hleaf <=?
 right_height (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := true]
   etc ...

Negative Examples:
   [l := Hleaf; r := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))); gv9 := (rank (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := true; gv5 := (right_height (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) &&
 (right_height (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 0 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))); gv9 := (rank (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))); gv11 := 2; gv13 := (right_height (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))); gv5 := (right_height (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) &&
 (right_height (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 0 (Heap 1 1 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv12 := 2; gv4 := (has_leftist_property (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv5 := (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv12 := 2; gv4 := (has_leftist_property (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv5 := (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := true; gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf) + 1); gv12 := 0; gv4 := (has_leftist_property (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf)); gv5 := (right_height (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 0 (Heap 1 5 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := true; gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); gv14 := true; gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv11 := 1; gv10 := 2; gv13 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv12 := 0; gv4 := (has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv5 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); gv14 := true; gv2 := true; gv9 := (rank (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv11 := 1; gv10 := 1; gv13 := 2; gv12 := 0; gv4 := true; gv5 := (right_height (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := true; gv3 := true]
   etc ...

(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (false = gv1), (true = gv1), (gv1 = gv1), (false <> gv1)
(gv1 <> gv1), (has_leftist_property l = gv1), (has_leftist_property r = gv1), (None = Some gv1), (false = gv5), (true = gv5), (gv5 = gv5), (false <> gv5), (true <> gv5), (gv5 <> gv5)
(has_leftist_property l = gv5), (None = Some gv5), (gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r)
(hsize r < gv13), (hsize l < gv13), (rank r < gv13), (rank l < gv13), (right_height r < gv13), (right_height l < gv13), (gv13 <= hsize r), (gv13 <= hsize l), (gv13 <= rank r), (gv13 <= rank l)
(gv13 <= right_height l), (hsize r <= gv13), (hsize l <= gv13), (rank r <= gv13), (rank l <= gv13), (right_height r <= gv13), (right_height l <= gv13), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = hinsert r gv13), (merge l r = hinsert l gv13)
(merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l), (mergea gv13 r r = merge l r), (mergea gv13 r r = merge l l), (mergea gv13 r l = r)
(mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r), (mergea gv13 l r = l), (mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13)
(mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13), (mergea gv13 l l = merge r r), (mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r)
(hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank l = gv13), (right_height r = gv13), (right_height l = gv13), (gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (gv12 < hsize r)
(gv12 < rank r), (gv12 < rank l), (gv12 < right_height r), (gv12 < right_height l), (hsize r < gv12), (hsize l < gv12), (rank r < gv12), (rank l < gv12), (right_height r < gv12), (right_height l < gv12)
(gv12 <= hsize l), (gv12 <= rank r), (gv12 <= rank l), (gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize l <= gv12), (rank r <= gv12), (rank l <= gv12), (right_height r <= gv12)
(~ gv12 < gv12), (~ gv12 <= gv12), (gv12 <> gv12), (None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12)
(merge r l = hinsert l gv12), (merge l r = hinsert r gv12), (merge l r = hinsert l gv12), (merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r)
(mergea gv12 r r = merge l r), (mergea gv12 r r = merge l l), (mergea gv12 r l = r), (mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l)
(mergea gv12 l r = l), (mergea gv12 l r = hinsert r gv12), (mergea gv12 l r = hinsert l gv12), (mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12)
(mergea gv12 l l = merge r r), (mergea gv12 l l = merge r l), (mergea gv12 l l = merge l r), (mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank l = gv12), (right_height r = gv12), (right_height l = gv12)
(true = gv4), (gv4 = gv4), (false <> gv4), (true <> gv4), (gv4 <> gv4), (has_leftist_property r = gv4), (has_leftist_property l = gv4), (None = Some gv4), (false = gv14), (true = gv14)
(false <> gv14), (true <> gv14), (gv14 <> gv14), (has_leftist_property r = gv14), (has_leftist_property l = gv14), (None = Some gv14), (gv11 < gv11), (gv11 <= gv11), (gv11 = gv11), (gv11 < hsize r)
(gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize l < gv11), (rank r < gv11), (rank l < gv11), (right_height r < gv11), (right_height l < gv11)
(gv11 <= hsize l), (gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize l <= gv11), (rank r <= gv11), (rank l <= gv11), (right_height r <= gv11)
(~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l), (merge r r = hinsert r gv11), (merge r r = hinsert l gv11)
(merge r l = hinsert l gv11), (merge l r = hinsert r gv11), (merge l r = hinsert l gv11), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11), (mergea gv11 r r = merge r r)
(mergea gv11 r r = merge l r), (mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r), (mergea gv11 r l = merge l l)
(mergea gv11 l r = l), (mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l), (mergea gv11 l l = hinsert r gv11)
(mergea gv11 l l = merge r r), (mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank l = gv11), (right_height r = gv11), (right_height l = gv11)
(gv10 <= gv10), (gv10 = gv10), (gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10), (hsize l < gv10)
(rank l < gv10), (right_height r < gv10), (right_height l < gv10), (gv10 <= hsize r), (gv10 <= hsize l), (gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l), (hsize r <= gv10)
(rank r <= gv10), (rank l <= gv10), (right_height r <= gv10), (right_height l <= gv10), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10), (None = Some gv10), (hinsert r gv10 = r), (hinsert r gv10 = l)
(hinsert l gv10 = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = hinsert r gv10), (merge l r = hinsert l gv10), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10), (mergea gv10 r r = r)
(mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l), (mergea gv10 r r = merge l r), (mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10), (mergea gv10 r l = hinsert l gv10)
(mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r), (mergea gv10 l r = l), (mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l), (mergea gv10 l r = merge l r)
(mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10), (mergea gv10 l l = merge r r), (mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10), (hsize l = gv10)
(rank l = gv10), (right_height r = gv10), (right_height l = gv10), (false = gv8), (true = gv8), (gv8 = gv8), (false <> gv8), (true <> gv8), (gv8 <> gv8), (has_leftist_property r = gv8)
(None = Some gv8), (false = gv3), (true = gv3), (gv3 = gv3), (false <> gv3), (true <> gv3), (gv3 <> gv3), (has_leftist_property l = gv3), (has_leftist_property r = gv3), (None = Some gv3)
(gv9 <= gv9), (gv9 = gv9), (gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize l < gv9)
(rank l < gv9), (right_height r < gv9), (right_height l < gv9), (gv9 <= hsize r), (gv9 <= hsize l), (gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9)
(rank r <= gv9), (rank l <= gv9), (right_height r <= gv9), (right_height l <= gv9), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l)
(hinsert l gv9 = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = hinsert r gv9), (merge l r = hinsert l gv9), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r)
(mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l), (mergea gv9 r r = merge l r), (mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9)
(mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r), (mergea gv9 l r = l), (mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r)
(mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9), (mergea gv9 l l = merge r r), (mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9)
(rank l = gv9), (right_height r = gv9), (right_height l = gv9), (false = gv2), (true = gv2), (gv2 = gv2), (false <> gv2), (true <> gv2), (gv2 <> gv2), (has_leftist_property l = gv2)
(None = Some gv2)

Label: 15 (5)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples:
   [l := Hleaf; r := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv9 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv10 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv7 := 2; gv6 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv12 := 0; gv5 := (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 (right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1 =?
 right_height (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 5 (Heap 1 3 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf); gv2 := (has_leftist_property (Heap 1 2 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 2 Hleaf Hleaf)); gv9 := (rank (Heap 1 2 Hleaf Hleaf) + 1); gv10 := (rank (Heap 1 2 Hleaf Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 2 Hleaf Hleaf) + 1); gv7 := 2; gv6 := (right_height (Heap 1 2 Hleaf Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 2 Hleaf Hleaf) <=? right_height (Heap 1 2 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 2 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 2 Hleaf Hleaf) &&
 (right_height (Heap 1 2 Hleaf Hleaf) <=? right_height (Heap 1 2 Hleaf Hleaf))); gv8 := (rank (Heap 1 2 Hleaf Hleaf) + 1 =? right_height (Heap 1 2 Hleaf Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 2 Hleaf Hleaf))]
   [l := Hleaf; r := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv7 := 2; gv6 := (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := (rank (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := Hleaf; r := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv7 := 2; gv6 := (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) <=? right_height Hleaf)); gv8 := (rank (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf; gv2 := true; gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv5 := (right_height Hleaf <=?
 right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))]
   [l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv5 := true; gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)))]
   [l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv10 := (rank Hleaf); gv11 := 1; gv9 := 1; gv13 := (right_height Hleaf + 1); gv7 := 2; gv6 := (right_height Hleaf); gv12 := 0; gv5 := (right_height Hleaf <=?
 right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := (has_leftist_property
   (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)))]
   [l := (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf); gv2 := (has_leftist_property (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf) &&
 has_leftist_property (Heap 1 1 Hleaf Hleaf)); gv9 := (rank (Heap 1 1 Hleaf Hleaf) + 1); gv10 := (rank (Heap 1 1 Hleaf Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 1 Hleaf Hleaf) + 1); gv7 := (right_height (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf)); gv6 := (right_height (Heap 1 1 Hleaf Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 1 Hleaf Hleaf) <=?
 right_height (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf)); gv1 := (has_leftist_property (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf) &&
 has_leftist_property (Heap 1 1 Hleaf Hleaf) &&
 (right_height (Heap 1 1 Hleaf Hleaf) <=?
  right_height (Heap 2 3 (Heap 0 3 Hleaf Hleaf) Hleaf))); gv8 := (rank (Heap 1 1 Hleaf Hleaf) + 1 =? right_height (Heap 1 1 Hleaf Hleaf) + 1); gv3 := true]
   [l := (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf; gv2 := (has_leftist_property
   (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf); gv9 := (rank Hleaf + 1); gv10 := (rank Hleaf); gv11 := 1; gv13 := (right_height Hleaf + 1); gv7 := (right_height (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf))); gv6 := (right_height Hleaf); gv12 := 0; gv5 := (right_height Hleaf <=?
 right_height (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)) &&
 has_leftist_property Hleaf &&
 (right_height Hleaf <=?
  right_height (Heap 1 1 (Heap 2 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)))); gv8 := (rank Hleaf + 1 =? right_height Hleaf + 1); gv3 := true]
   etc ...

Negative Examples:
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf)); gv9 := (rank (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv10 := (rank (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf)); gv11 := 2; gv13 := (right_height (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) &&
 (right_height (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) + 1 =?
 right_height (Heap 2 2 (Heap 3 1 (Heap 1 3 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 4 5
   (Heap 3 1 Hleaf
      (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
         Hleaf)) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv9 := (rank
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv10 := (rank
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv11 := 4; gv13 := (right_height
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf)); gv12 := 0; gv5 := (right_height
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) <=? right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) &&
 (right_height
    (Heap 4 5
       (Heap 3 1 Hleaf
          (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
             Hleaf)) Hleaf) <=? right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1 =?
 right_height
   (Heap 4 5
      (Heap 3 1 Hleaf
         (Heap 4 4 (Heap 3 0 (Heap 2 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))
            Hleaf)) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3
   (Heap 1 1 Hleaf
      (Heap 5 3 Hleaf
         (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf)); gv9 := (rank
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) +
 1); gv10 := (rank
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf)); gv11 := 1; gv13 := (right_height
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) +
 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf)); gv12 := 4; gv5 := (right_height
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) &&
 (right_height
    (Heap 1 3
       (Heap 1 1 Hleaf
          (Heap 5 3 Hleaf
             (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) +
 1 =?
 right_height
   (Heap 1 3
      (Heap 1 1 Hleaf
         (Heap 5 3 Hleaf
            (Heap 3 5 (Heap 5 3 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)))) Hleaf) +
 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf)); gv9 := (rank
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) +
 1); gv10 := (rank
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf)); gv11 := 1; gv13 := (right_height
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) +
 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf)); gv12 := 3; gv5 := (right_height
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) &&
 (right_height
    (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) +
 1 =?
 right_height
   (Heap 2 1 (Heap 0 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf)) Hleaf) +
 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 2 (Heap 2 0 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 1 0 Hleaf Hleaf)); gv6 := (right_height (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 1 0 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 0 Hleaf Hleaf) &&
 has_leftist_property (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) <=?
  right_height (Heap 1 0 Hleaf Hleaf))); gv8 := (rank (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 2 1 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 0 Hleaf Hleaf))]
   [l := (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)); r := (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf); gv2 := (has_leftist_property
   (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)) &&
 has_leftist_property (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv9 := (rank (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv10 := (rank (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv7 := (right_height (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf))); gv6 := (right_height (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) <=?
 right_height (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf))); gv1 := (has_leftist_property
   (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)) &&
 has_leftist_property (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) &&
 (right_height (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) <=?
  right_height (Heap 0 0 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf)))); gv8 := (rank (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1 =?
 right_height (Heap 1 2 (Heap 2 2 Hleaf Hleaf) Hleaf) + 1); gv3 := true]
   [l := Hleaf; r := (Heap 0 4
   (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
      (Heap 6 4
         (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
            (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)); gv2 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf))); gv9 := (rank
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) + 1); gv10 := (rank
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf))); gv11 := 1; gv13 := (right_height
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) + 1); gv7 := 3; gv6 := (right_height
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf))); gv12 := 0; gv5 := (right_height
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) <=?
 right_height Hleaf); gv1 := (has_leftist_property Hleaf &&
 has_leftist_property
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) &&
 (right_height
    (Heap 0 4
       (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
          (Heap 6 4
             (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
                (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) <=?
  right_height Hleaf)); gv8 := (rank
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) + 1 =?
 right_height
   (Heap 0 4
      (Heap 6 5 (Heap 1 4 Hleaf Hleaf)
         (Heap 6 4
            (Heap 1 5 (Heap 4 5 (Heap 1 1 Hleaf Hleaf) Hleaf)
               (Heap 5 6 Hleaf Hleaf)) Hleaf)) (Heap 6 5 Hleaf Hleaf)) + 1); gv3 := (has_leftist_property Hleaf)]
   [l := (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
   (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf))); r := (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf); gv2 := (has_leftist_property
   (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
      (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf))) &&
 has_leftist_property
   (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf)); gv9 := (rank (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv10 := (rank (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf)); gv11 := 1; gv13 := (right_height (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv7 := (right_height
   (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
      (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf)))); gv6 := (right_height (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf)); gv12 := 0; gv5 := (right_height (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) <=?
 right_height
   (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
      (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf)))); gv1 := (has_leftist_property
   (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
      (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf))) &&
 has_leftist_property
   (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) &&
 (right_height (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) <=?
  right_height
    (Heap 2 2 (Heap 1 0 Hleaf (Heap 2 2 Hleaf Hleaf))
       (Heap 3 1 (Heap 3 3 Hleaf Hleaf) (Heap 3 0 Hleaf Hleaf))))); gv8 := (rank (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) + 1 =?
 right_height (Heap 0 1 (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf) Hleaf) + 1); gv3 := true]
   [l := (Heap 1 1 Hleaf Hleaf); r := (Heap 5 4
   (Heap 2 5 Hleaf (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf)))
   Hleaf); gv2 := (has_leftist_property (Heap 1 1 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf)); gv9 := (rank
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) + 1); gv10 := (rank
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf)); gv11 := 1; gv13 := (right_height
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) + 1); gv7 := (right_height (Heap 1 1 Hleaf Hleaf)); gv6 := (right_height
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf)); gv12 := 3; gv5 := (right_height
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) <=?
 right_height (Heap 1 1 Hleaf Hleaf)); gv1 := (has_leftist_property (Heap 1 1 Hleaf Hleaf) &&
 has_leftist_property
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) &&
 (right_height
    (Heap 5 4
       (Heap 2 5 Hleaf
          (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) <=?
  right_height (Heap 1 1 Hleaf Hleaf))); gv8 := (rank
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) + 1 =?
 right_height
   (Heap 5 4
      (Heap 2 5 Hleaf
         (Heap 3 2 Hleaf (Heap 3 1 (Heap 3 3 Hleaf Hleaf) Hleaf))) Hleaf) + 1); gv3 := (has_leftist_property (Heap 1 1 Hleaf Hleaf))]
   etc ...

(r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (hsize r < hsize l), (hsize r < rank r)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < hsize r), (rank r < hsize l), (rank r < rank l)
(rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l)
(right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= hsize r)
(rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= hsize r), (right_height l <= hsize l)
(right_height l <= rank l), (right_height l <= right_height r), (r <> r), (r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l)
(merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r), (merge l l = l), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r)
(right_height r = rank r), (right_height r = rank l), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (gv6 < hsize r)
(gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize l < gv6), (rank r < gv6), (rank l < gv6), (right_height r < gv6), (right_height l < gv6)
(gv6 <= hsize l), (gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize l <= gv6), (rank r <= gv6), (rank l <= gv6), (right_height r <= gv6)
(~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6)
(merge r l = hinsert l gv6), (merge l r = hinsert r gv6), (merge l r = hinsert l gv6), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r)
(mergea gv6 r r = merge l r), (mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l)
(mergea gv6 l r = l), (mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6)
(mergea gv6 l l = merge r r), (mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank l = gv6), (right_height r = gv6), (right_height l = gv6)
(gv7 <= gv7), (gv7 = gv7), (gv7 < hsize r), (gv7 < hsize l), (gv7 < rank r), (gv7 < rank l), (gv7 < right_height r), (gv7 < right_height l), (hsize r < gv7), (hsize l < gv7)
(rank l < gv7), (right_height r < gv7), (right_height l < gv7), (gv7 <= hsize r), (gv7 <= hsize l), (gv7 <= rank r), (gv7 <= rank l), (gv7 <= right_height r), (gv7 <= right_height l), (hsize r <= gv7)
(rank r <= gv7), (rank l <= gv7), (right_height r <= gv7), (right_height l <= gv7), (~ gv7 < gv7), (~ gv7 <= gv7), (gv7 <> gv7), (None = Some gv7), (hinsert r gv7 = r), (hinsert r gv7 = l)
(hinsert l gv7 = l), (merge r r = hinsert r gv7), (merge r r = hinsert l gv7), (merge r l = hinsert r gv7), (merge r l = hinsert l gv7), (merge l r = hinsert r gv7), (merge l r = hinsert l gv7), (merge l l = hinsert r gv7), (merge l l = hinsert l gv7), (mergea gv7 r r = r)
(mergea gv7 r r = hinsert r gv7), (mergea gv7 r r = hinsert l gv7), (mergea gv7 r r = merge r r), (mergea gv7 r r = merge r l), (mergea gv7 r r = merge l r), (mergea gv7 r r = merge l l), (mergea gv7 r l = r), (mergea gv7 r l = l), (mergea gv7 r l = hinsert r gv7), (mergea gv7 r l = hinsert l gv7)
(mergea gv7 r l = merge r l), (mergea gv7 r l = merge l r), (mergea gv7 r l = merge l l), (mergea gv7 l r = r), (mergea gv7 l r = l), (mergea gv7 l r = hinsert r gv7), (mergea gv7 l r = hinsert l gv7), (mergea gv7 l r = merge r r), (mergea gv7 l r = merge r l), (mergea gv7 l r = merge l r)
(mergea gv7 l l = r), (mergea gv7 l l = l), (mergea gv7 l l = hinsert r gv7), (mergea gv7 l l = hinsert l gv7), (mergea gv7 l l = merge r r), (mergea gv7 l l = merge r l), (mergea gv7 l l = merge l r), (mergea gv7 l l = merge l l), (hsize r = gv7), (hsize l = gv7)
(rank l = gv7), (right_height r = gv7), (right_height l = gv7), (false = gv1), (true = gv1), (gv1 = gv1), (false <> gv1), (true <> gv1), (gv1 <> gv1), (has_leftist_property l = gv1)
(None = Some gv1), (false = gv5), (true = gv5), (gv5 = gv5), (false <> gv5), (true <> gv5), (gv5 <> gv5), (has_leftist_property r = gv5), (has_leftist_property l = gv5), (None = Some gv5)
(gv13 <= gv13), (gv13 = gv13), (gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize l < gv13)
(rank l < gv13), (right_height r < gv13), (right_height l < gv13), (gv13 <= hsize r), (gv13 <= hsize l), (gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13)
(rank r <= gv13), (rank l <= gv13), (right_height r <= gv13), (right_height l <= gv13), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l)
(hinsert l gv13 = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = hinsert r gv13), (merge l r = hinsert l gv13), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r)
(mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l), (mergea gv13 r r = merge l r), (mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13)
(mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r), (mergea gv13 l r = l), (mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r)
(mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13), (mergea gv13 l l = merge r r), (mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13)
(rank l = gv13), (right_height r = gv13), (right_height l = gv13), (gv12 < gv12), (gv12 <= gv12), (gv12 = gv12), (gv12 < hsize r), (gv12 < hsize l), (gv12 < rank r), (gv12 < rank l)
(gv12 < right_height l), (hsize r < gv12), (hsize l < gv12), (rank r < gv12), (rank l < gv12), (right_height r < gv12), (right_height l < gv12), (gv12 <= hsize r), (gv12 <= hsize l), (gv12 <= rank r)
(gv12 <= right_height r), (gv12 <= right_height l), (hsize r <= gv12), (hsize l <= gv12), (rank r <= gv12), (rank l <= gv12), (right_height r <= gv12), (right_height l <= gv12), (~ gv12 < gv12), (~ gv12 <= gv12)
(None = Some gv12), (hinsert r gv12 = r), (hinsert r gv12 = l), (hinsert l gv12 = r), (hinsert l gv12 = l), (merge r r = hinsert r gv12), (merge r r = hinsert l gv12), (merge r l = hinsert r gv12), (merge r l = hinsert l gv12), (merge l r = hinsert r gv12)
(merge l l = hinsert r gv12), (merge l l = hinsert l gv12), (mergea gv12 r r = r), (mergea gv12 r r = l), (mergea gv12 r r = hinsert r gv12), (mergea gv12 r r = hinsert l gv12), (mergea gv12 r r = merge r r), (mergea gv12 r r = merge r l), (mergea gv12 r r = merge l r), (mergea gv12 r r = merge l l)
(mergea gv12 r l = l), (mergea gv12 r l = hinsert r gv12), (mergea gv12 r l = hinsert l gv12), (mergea gv12 r l = merge r r), (mergea gv12 r l = merge r l), (mergea gv12 r l = merge l r), (mergea gv12 r l = merge l l), (mergea gv12 l r = r), (mergea gv12 l r = l), (mergea gv12 l r = hinsert r gv12)
(mergea gv12 l r = merge r r), (mergea gv12 l r = merge r l), (mergea gv12 l r = merge l r), (mergea gv12 l r = merge l l), (mergea gv12 l l = r), (mergea gv12 l l = l), (mergea gv12 l l = hinsert r gv12), (mergea gv12 l l = hinsert l gv12), (mergea gv12 l l = merge r r), (mergea gv12 l l = merge r l)
(mergea gv12 l l = merge l l), (hsize r = gv12), (hsize l = gv12), (rank r = gv12), (rank l = gv12), (right_height r = gv12), (right_height l = gv12), (gv11 < gv11), (gv11 <= gv11), (gv11 = gv11)
(gv11 < hsize l), (gv11 < rank r), (gv11 < rank l), (gv11 < right_height r), (gv11 < right_height l), (hsize r < gv11), (hsize l < gv11), (rank r < gv11), (rank l < gv11), (right_height r < gv11)
(gv11 <= hsize r), (gv11 <= hsize l), (gv11 <= rank r), (gv11 <= rank l), (gv11 <= right_height r), (gv11 <= right_height l), (hsize r <= gv11), (hsize l <= gv11), (rank r <= gv11), (rank l <= gv11)
(right_height l <= gv11), (~ gv11 < gv11), (~ gv11 <= gv11), (gv11 <> gv11), (None = Some gv11), (hinsert r gv11 = r), (hinsert r gv11 = l), (hinsert l gv11 = r), (hinsert l gv11 = l), (merge r r = hinsert r gv11)
(merge r l = hinsert r gv11), (merge r l = hinsert l gv11), (merge l r = hinsert r gv11), (merge l r = hinsert l gv11), (merge l l = hinsert r gv11), (merge l l = hinsert l gv11), (mergea gv11 r r = r), (mergea gv11 r r = l), (mergea gv11 r r = hinsert r gv11), (mergea gv11 r r = hinsert l gv11)
(mergea gv11 r r = merge r l), (mergea gv11 r r = merge l r), (mergea gv11 r r = merge l l), (mergea gv11 r l = r), (mergea gv11 r l = l), (mergea gv11 r l = hinsert r gv11), (mergea gv11 r l = hinsert l gv11), (mergea gv11 r l = merge r r), (mergea gv11 r l = merge r l), (mergea gv11 r l = merge l r)
(mergea gv11 l r = r), (mergea gv11 l r = l), (mergea gv11 l r = hinsert r gv11), (mergea gv11 l r = hinsert l gv11), (mergea gv11 l r = merge r r), (mergea gv11 l r = merge r l), (mergea gv11 l r = merge l r), (mergea gv11 l r = merge l l), (mergea gv11 l l = r), (mergea gv11 l l = l)
(mergea gv11 l l = hinsert l gv11), (mergea gv11 l l = merge r r), (mergea gv11 l l = merge r l), (mergea gv11 l l = merge l r), (mergea gv11 l l = merge l l), (hsize r = gv11), (hsize l = gv11), (rank r = gv11), (rank l = gv11), (right_height r = gv11)
(gv10 < gv10), (gv10 <= gv10), (gv10 = gv10), (gv10 < hsize r), (gv10 < hsize l), (gv10 < rank r), (gv10 < rank l), (gv10 < right_height r), (gv10 < right_height l), (hsize r < gv10)
(rank r < gv10), (rank l < gv10), (right_height r < gv10), (right_height l < gv10), (gv10 <= hsize r), (gv10 <= hsize l), (gv10 <= rank r), (gv10 <= rank l), (gv10 <= right_height r), (gv10 <= right_height l)
(hsize l <= gv10), (rank r <= gv10), (rank l <= gv10), (right_height r <= gv10), (right_height l <= gv10), (~ gv10 < gv10), (~ gv10 <= gv10), (gv10 <> gv10), (None = Some gv10), (hinsert r gv10 = r)
(hinsert l gv10 = r), (hinsert l gv10 = l), (merge r r = hinsert r gv10), (merge r r = hinsert l gv10), (merge r l = hinsert r gv10), (merge r l = hinsert l gv10), (merge l r = hinsert r gv10), (merge l r = hinsert l gv10), (merge l l = hinsert r gv10), (merge l l = hinsert l gv10)
(mergea gv10 r r = l), (mergea gv10 r r = hinsert r gv10), (mergea gv10 r r = hinsert l gv10), (mergea gv10 r r = merge r r), (mergea gv10 r r = merge r l), (mergea gv10 r r = merge l r), (mergea gv10 r r = merge l l), (mergea gv10 r l = r), (mergea gv10 r l = l), (mergea gv10 r l = hinsert r gv10)
(mergea gv10 r l = merge r r), (mergea gv10 r l = merge r l), (mergea gv10 r l = merge l r), (mergea gv10 r l = merge l l), (mergea gv10 l r = r), (mergea gv10 l r = l), (mergea gv10 l r = hinsert r gv10), (mergea gv10 l r = hinsert l gv10), (mergea gv10 l r = merge r r), (mergea gv10 l r = merge r l)
(mergea gv10 l r = merge l l), (mergea gv10 l l = r), (mergea gv10 l l = l), (mergea gv10 l l = hinsert r gv10), (mergea gv10 l l = hinsert l gv10), (mergea gv10 l l = merge r r), (mergea gv10 l l = merge r l), (mergea gv10 l l = merge l r), (mergea gv10 l l = merge l l), (hsize r = gv10)
(rank r = gv10), (rank l = gv10), (right_height r = gv10), (right_height l = gv10), (false = gv8), (true = gv8), (gv8 = gv8), (false <> gv8), (true <> gv8), (gv8 <> gv8)
(has_leftist_property l = gv8), (None = Some gv8), (false = gv3), (true = gv3), (gv3 = gv3), (false <> gv3), (true <> gv3), (gv3 <> gv3), (has_leftist_property l = gv3), (has_leftist_property r = gv3)
(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9)
(rank r < gv9), (rank l < gv9), (right_height r < gv9), (right_height l < gv9), (gv9 <= hsize r), (gv9 <= hsize l), (gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l)
(hsize l <= gv9), (rank r <= gv9), (rank l <= gv9), (right_height r <= gv9), (right_height l <= gv9), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9), (None = Some gv9), (hinsert r gv9 = r)
(hinsert l gv9 = r), (hinsert l gv9 = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = hinsert r gv9), (merge l r = hinsert l gv9), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9)
(mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l), (mergea gv9 r r = merge l r), (mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9)
(mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r), (mergea gv9 l r = l), (mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l)
(mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9), (mergea gv9 l l = merge r r), (mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9)
(rank r = gv9), (rank l = gv9), (right_height r = gv9), (right_height l = gv9), (false = gv2), (true = gv2), (gv2 = gv2), (false <> gv2), (true <> gv2), (gv2 <> gv2)
(has_leftist_property r = gv2), (None = Some gv2)

Label: 9 (6)
Abducted Assumption: (right_height r + 1 = gv13)
Positive Examples:
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv13 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv13 := 2; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 6; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv13 := 0; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv13 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv13 := 2; l := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv13 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv13 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv13 := 6; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

(gv13 < gv13), (gv13 <= gv13), (gv13 = gv13), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv13 < hsize r), (gv13 < hsize l), (gv13 < rank r), (gv13 < rank l), (gv13 < right_height r), (gv13 < right_height l), (hsize r < gv13), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv13), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv13), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv13), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv13), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv13), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv13 <= hsize r)
(gv13 <= rank r), (gv13 <= rank l), (gv13 <= right_height r), (gv13 <= right_height l), (hsize r <= gv13), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv13), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv13), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv13), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv13), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv13 < gv13), (~ gv13 <= gv13), (gv13 <> gv13)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv13), (hinsert r gv13 = r), (hinsert r gv13 = l), (hinsert l gv13 = r), (hinsert l gv13 = l)
(merge r r = l), (merge r r = hinsert r gv13), (merge r r = hinsert l gv13), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv13), (merge r l = hinsert l gv13), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv13)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv13), (merge l l = hinsert l gv13), (mergea gv13 r r = r), (mergea gv13 r r = l), (mergea gv13 r r = hinsert r gv13), (mergea gv13 r r = hinsert l gv13), (mergea gv13 r r = merge r r), (mergea gv13 r r = merge r l)
(mergea gv13 r r = merge l l), (mergea gv13 r l = r), (mergea gv13 r l = l), (mergea gv13 r l = hinsert r gv13), (mergea gv13 r l = hinsert l gv13), (mergea gv13 r l = merge r r), (mergea gv13 r l = merge r l), (mergea gv13 r l = merge l r), (mergea gv13 r l = merge l l), (mergea gv13 l r = r)
(mergea gv13 l r = hinsert r gv13), (mergea gv13 l r = hinsert l gv13), (mergea gv13 l r = merge r r), (mergea gv13 l r = merge r l), (mergea gv13 l r = merge l r), (mergea gv13 l r = merge l l), (mergea gv13 l l = r), (mergea gv13 l l = l), (mergea gv13 l l = hinsert r gv13), (mergea gv13 l l = hinsert l gv13)
(mergea gv13 l l = merge r l), (mergea gv13 l l = merge l r), (mergea gv13 l l = merge l l), (hsize r = gv13), (hsize l = gv13), (rank r = gv13), (rank r = hsize r), (rank r = hsize l), (rank l = gv13), (rank l = hsize r)
(right_height r = gv13), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv13), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 12 (7)
Abducted Assumption: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) = gv1)
Positive Examples:
   [gv1 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv1 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv1 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

Negative Examples:
   [gv1 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 2 1 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv1 := false; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv1 := false; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv1 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

(false = gv1), (true = gv1), (l = l), (l = r), (r = l), (r = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv1), (true <> gv1), (l <> l), (l <> r), (r <> l)
(gv1 <> gv1), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv1), (has_leftist_property r = gv1), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv1)

Label: 6 (8)
Abducted Assumption: (has_leftist_property l = gv14)
Positive Examples:
   [gv14 := false; l := (Heap 4 4 Hleaf
   (Heap 3 3 Hleaf
      (Heap 5 2 (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
         (Heap 3 5 (Heap 2 2 Hleaf Hleaf) Hleaf)))); r := (Heap 4 0
   (Heap 5 1 Hleaf
      (Heap 2 5 Hleaf
         (Heap 4 5 (Heap 5 5 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv14 := false; l := (Heap 3 3 (Heap 2 3 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 3 3 (Heap 0 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv14 := false; l := (Heap 2 0 Hleaf
   (Heap 4 2 (Heap 0 2 Hleaf (Heap 2 4 Hleaf Hleaf))
      (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); r := (Heap 1 3 Hleaf (Heap 3 2 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 5 (Heap 1 4 Hleaf (Heap 5 6 Hleaf Hleaf)) Hleaf); r := (Heap 5 3
   (Heap 4 3
      (Heap 6 0
         (Heap 1 3 (Heap 3 4 (Heap 3 2 Hleaf Hleaf) Hleaf)
            (Heap 1 5 (Heap 0 4 Hleaf Hleaf) Hleaf))
         (Heap 0 1 Hleaf (Heap 1 0 (Heap 3 2 Hleaf Hleaf) Hleaf)))
      (Heap 1 2 (Heap 0 2 (Heap 1 3 Hleaf (Heap 6 0 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv14 := false; l := (Heap 4 4
   (Heap 0 4
      (Heap 0 3 (Heap 5 3 Hleaf Hleaf)
         (Heap 0 1 (Heap 0 4 (Heap 5 3 Hleaf Hleaf) Hleaf)
            (Heap 3 0 (Heap 2 6 Hleaf Hleaf) Hleaf)))
      (Heap 3 4 (Heap 4 5 Hleaf Hleaf)
         (Heap 5 2 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf)))
   (Heap 5 1 Hleaf Hleaf)); r := (Heap 3 6 (Heap 3 1 Hleaf (Heap 2 4 Hleaf (Heap 5 4 Hleaf Hleaf))) Hleaf)]
   [gv14 := false; l := (Heap 0 0 (Heap 3 2 (Heap 2 0 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 2 Hleaf (Heap 0 5 Hleaf (Heap 5 0 Hleaf Hleaf)))); r := (Heap 5 1
   (Heap 1 2 (Heap 2 4 (Heap 3 3 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 3 1 Hleaf (Heap 4 0 (Heap 1 5 Hleaf Hleaf) Hleaf)))
   (Heap 1 1 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 2 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := (Heap 1 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 1 Hleaf (Heap 1 2 Hleaf (Heap 1 4 (Heap 1 3 Hleaf Hleaf) Hleaf))); r := (Heap 3 0 Hleaf (Heap 2 3 (Heap 4 4 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))]
   [gv14 := false; l := (Heap 6 6 Hleaf (Heap 6 0 Hleaf (Heap 3 1 Hleaf Hleaf))); r := (Heap 0 3 Hleaf Hleaf)]
   [gv14 := false; l := (Heap 5 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 4 5 Hleaf Hleaf) Hleaf)]
   etc ...

Negative Examples:
   [gv14 := true; l := (Heap 0 1 (Heap 2 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 0 3 (Heap 2 3 (Heap 0 1 Hleaf Hleaf) Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 1 0 (Heap 0 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 5 6 Hleaf (Heap 0 3 (Heap 0 6 Hleaf Hleaf) (Heap 4 1 Hleaf Hleaf))); r := Hleaf]
   [gv14 := true; l := (Heap 0 2 (Heap 0 2 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 4 2 (Heap 1 4 Hleaf Hleaf) (Heap 0 1 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 0 0 Hleaf (Heap 1 4 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 1 3 (Heap 2 1 Hleaf (Heap 0 0 Hleaf Hleaf)) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv14 := true; l := (Heap 0 3
   (Heap 1 0 Hleaf
      (Heap 3 2 (Heap 3 2 Hleaf Hleaf)
         (Heap 3 1 (Heap 4 3 Hleaf Hleaf) Hleaf))) Hleaf); r := Hleaf]
   [gv14 := true; l := (Heap 5 3 (Heap 2 6 Hleaf Hleaf)
   (Heap 5 5 Hleaf
      (Heap 4 2
         (Heap 5 6 (Heap 2 2 Hleaf (Heap 3 0 Hleaf Hleaf))
            (Heap 6 6 (Heap 0 6 Hleaf Hleaf) (Heap 4 4 Hleaf Hleaf)))
         (Heap 2 3 (Heap 5 6 Hleaf Hleaf)
            (Heap 6 3 Hleaf (Heap 0 5 Hleaf Hleaf)))))); r := Hleaf]
   etc ...

(false = gv14), (true = gv14), (gv14 = gv14), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv14), (true <> gv14), (gv14 <> gv14), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv14), (has_leftist_property l = gv14), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv14)

Label: 6 (9)
Abducted Assumption: (has_leftist_property r = gv14)
Positive Examples:
   [gv14 := false; l := (Heap 4 4 Hleaf
   (Heap 3 3 Hleaf
      (Heap 5 2 (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)
         (Heap 3 5 (Heap 2 2 Hleaf Hleaf) Hleaf)))); r := (Heap 4 0
   (Heap 5 1 Hleaf
      (Heap 2 5 Hleaf
         (Heap 4 5 (Heap 5 5 Hleaf Hleaf) (Heap 0 2 Hleaf Hleaf)))) Hleaf)]
   [gv14 := false; l := (Heap 3 3 (Heap 2 3 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 3 3 (Heap 0 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf) Hleaf)]
   [gv14 := false; l := (Heap 2 0 Hleaf
   (Heap 4 2 (Heap 0 2 Hleaf (Heap 2 4 Hleaf Hleaf))
      (Heap 2 1 Hleaf (Heap 1 0 Hleaf Hleaf)))); r := (Heap 1 3 Hleaf (Heap 3 2 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 5 (Heap 1 4 Hleaf (Heap 5 6 Hleaf Hleaf)) Hleaf); r := (Heap 5 3
   (Heap 4 3
      (Heap 6 0
         (Heap 1 3 (Heap 3 4 (Heap 3 2 Hleaf Hleaf) Hleaf)
            (Heap 1 5 (Heap 0 4 Hleaf Hleaf) Hleaf))
         (Heap 0 1 Hleaf (Heap 1 0 (Heap 3 2 Hleaf Hleaf) Hleaf)))
      (Heap 1 2 (Heap 0 2 (Heap 1 3 Hleaf (Heap 6 0 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   [gv14 := false; l := (Heap 4 4
   (Heap 0 4
      (Heap 0 3 (Heap 5 3 Hleaf Hleaf)
         (Heap 0 1 (Heap 0 4 (Heap 5 3 Hleaf Hleaf) Hleaf)
            (Heap 3 0 (Heap 2 6 Hleaf Hleaf) Hleaf)))
      (Heap 3 4 (Heap 4 5 Hleaf Hleaf)
         (Heap 5 2 (Heap 1 1 Hleaf (Heap 0 1 Hleaf Hleaf)) Hleaf)))
   (Heap 5 1 Hleaf Hleaf)); r := (Heap 3 6 (Heap 3 1 Hleaf (Heap 2 4 Hleaf (Heap 5 4 Hleaf Hleaf))) Hleaf)]
   [gv14 := false; l := (Heap 0 0 (Heap 3 2 (Heap 2 0 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)
   (Heap 0 2 Hleaf (Heap 0 5 Hleaf (Heap 5 0 Hleaf Hleaf)))); r := (Heap 5 1
   (Heap 1 2 (Heap 2 4 (Heap 3 3 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)
      (Heap 3 1 Hleaf (Heap 4 0 (Heap 1 5 Hleaf Hleaf) Hleaf)))
   (Heap 1 1 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 2 2 Hleaf (Heap 2 0 Hleaf Hleaf)); r := (Heap 1 0 (Heap 0 1 Hleaf Hleaf) (Heap 2 0 Hleaf Hleaf))]
   [gv14 := false; l := (Heap 3 1 Hleaf (Heap 1 2 Hleaf (Heap 1 4 (Heap 1 3 Hleaf Hleaf) Hleaf))); r := (Heap 3 0 Hleaf (Heap 2 3 (Heap 4 4 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))]
   [gv14 := false; l := (Heap 6 6 Hleaf (Heap 6 0 Hleaf (Heap 3 1 Hleaf Hleaf))); r := (Heap 0 3 Hleaf Hleaf)]
   [gv14 := false; l := (Heap 5 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 4 5 Hleaf Hleaf) Hleaf)]
   etc ...

Negative Examples:
   [gv14 := true; l := (Heap 1 6 Hleaf Hleaf); r := (Heap 6 5 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 0 (Heap 2 1 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 0 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 3 3 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 2 (Heap 3 3 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 3 3 (Heap 3 4 (Heap 4 2 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 4 1 Hleaf Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 0 1 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv14 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 2 1 Hleaf Hleaf) Hleaf)]
   etc ...

(false = gv14), (true = gv14), (gv14 = gv14), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv14), (true <> gv14), (gv14 <> gv14), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv14), (has_leftist_property l = gv14), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv14)

Label: 10 (10)
Abducted Assumption: (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv0)
Positive Examples:
   [gv0 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv0 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv0 := true; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv0 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv0 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv0 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 2 0 (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf) (Heap 1 3 Hleaf Hleaf)); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv0 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv0 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   etc ...

(false = gv0), (true = gv0), (r = r), (r = l), (l = r), (l = l), (gv0 = gv0), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv0), (true <> gv0), (r <> r), (r <> l), (l <> r)
(gv0 <> gv0), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv0), (has_leftist_property l = gv0), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv0)

Label: 3 (11)
Abducted Assumption: ((rank r + 1 =? right_height r + 1) = gv8)
Positive Examples:
   [gv8 := true; l := (Heap 1 5 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv8 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv8 := false; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv8 := false; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv8 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

(false = gv8), (true = gv8), (gv8 = gv8), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv8), (true <> gv8), (gv8 <> gv8), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv8), (has_leftist_property l = gv8), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv8)

Label: 11 (12)
Abducted Assumption: ((right_height r <=? right_height l) = gv5)
Positive Examples:
   [gv5 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 2 2 (Heap 1 1 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv5 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv5 := true; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv5 := false; l := (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv5 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 2 (Heap 1 3 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv5 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   etc ...

(false = gv5), (true = gv5), (gv5 = gv5), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv5), (true <> gv5), (gv5 <> gv5), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv5), (has_leftist_property l = gv5), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv5)

Label: 2 (13)
Abducted Assumption: (gv3 = true)
Positive Examples:
   [gv3 := true; l := (Heap 2 5
   (Heap 3 0
      (Heap 3 2 Hleaf
         (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 4 3 Hleaf Hleaf)))
      (Heap 5 0 Hleaf Hleaf))
   (Heap 4 0
      (Heap 2 5 (Heap 5 1 Hleaf (Heap 4 0 Hleaf Hleaf))
         (Heap 2 1 Hleaf (Heap 2 1 Hleaf Hleaf))) Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 0 1
   (Heap 4 4 (Heap 3 4 (Heap 0 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf))
      (Heap 4 0 (Heap 2 3 Hleaf Hleaf) (Heap 3 1 Hleaf Hleaf)))
   (Heap 2 3 (Heap 0 2 (Heap 2 4 Hleaf Hleaf) Hleaf) Hleaf)); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) (Heap 2 2 Hleaf Hleaf)); r := (Heap 1 0 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 0 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 2 Hleaf
   (Heap 0 3 Hleaf (Heap 1 3 (Heap 2 3 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)))); r := Hleaf]
   [gv3 := true; l := (Heap 2 4
   (Heap 5 1
      (Heap 0 3 (Heap 4 4 (Heap 0 0 Hleaf Hleaf) (Heap 5 5 Hleaf Hleaf))
         Hleaf) (Heap 0 2 (Heap 4 5 (Heap 3 0 Hleaf Hleaf) Hleaf) Hleaf))
   (Heap 5 2
      (Heap 0 0 (Heap 2 1 (Heap 1 0 Hleaf Hleaf) (Heap 0 4 Hleaf Hleaf))
         Hleaf) (Heap 2 4 (Heap 3 5 Hleaf Hleaf) Hleaf))); r := Hleaf]
   [gv3 := true; l := (Heap 2 3
   (Heap 3 2 (Heap 2 4 Hleaf Hleaf)
      (Heap 1 0 (Heap 3 4 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf))) Hleaf); r := Hleaf]
   [gv3 := true; l := (Heap 2 2 (Heap 4 2 Hleaf Hleaf) (Heap 5 2 Hleaf Hleaf)); r := Hleaf]
   [gv3 := true; l := (Heap 3 3 (Heap 4 1 (Heap 4 4 Hleaf Hleaf) (Heap 4 0 Hleaf Hleaf)) Hleaf); r := (Heap 1 4 Hleaf Hleaf)]
   [gv3 := true; l := (Heap 1 1 Hleaf (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   etc ...

Negative Examples:
   [gv3 := false; l := (Heap 4 4
   (Heap 3 3 Hleaf
      (Heap 0 3 (Heap 1 1 (Heap 1 3 Hleaf Hleaf) Hleaf)
         (Heap 1 0 Hleaf (Heap 5 4 Hleaf Hleaf)))) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 2 3 Hleaf
   (Heap 1 3
      (Heap 2 4 (Heap 3 0 (Heap 1 5 Hleaf Hleaf) Hleaf)
         (Heap 2 0 (Heap 4 0 Hleaf Hleaf) (Heap 5 1 Hleaf Hleaf)))
      (Heap 2 5 (Heap 3 5 Hleaf (Heap 1 4 Hleaf Hleaf)) Hleaf))); r := Hleaf]
   [gv3 := false; l := (Heap 3 0 (Heap 2 3 (Heap 2 1 Hleaf Hleaf) (Heap 0 0 Hleaf Hleaf))
   (Heap 0 3 Hleaf Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 2 0 Hleaf
   (Heap 6 4
      (Heap 4 3 (Heap 4 3 Hleaf Hleaf)
         (Heap 6 2 Hleaf (Heap 3 5 Hleaf (Heap 3 6 Hleaf Hleaf)))) Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 4 0
   (Heap 2 5 (Heap 5 4 Hleaf (Heap 2 0 Hleaf (Heap 3 3 Hleaf Hleaf)))
      (Heap 5 4 Hleaf Hleaf)) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 4 2 Hleaf
   (Heap 0 2
      (Heap 0 1 (Heap 6 1 Hleaf Hleaf)
         (Heap 4 1 (Heap 6 6 Hleaf Hleaf) Hleaf)) Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 4 1 (Heap 1 2 Hleaf (Heap 1 4 Hleaf Hleaf)) (Heap 0 4 Hleaf Hleaf)); r := Hleaf]
   [gv3 := false; l := (Heap 2 4
   (Heap 0 3 (Heap 0 4 Hleaf Hleaf) (Heap 4 0 (Heap 1 3 Hleaf Hleaf) Hleaf))
   Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 0 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv3 := false; l := (Heap 1 5 Hleaf
   (Heap 1 5 (Heap 4 2 Hleaf Hleaf)
      (Heap 3 4 Hleaf
         (Heap 3 0 (Heap 2 1 (Heap 5 4 Hleaf Hleaf) Hleaf)
            (Heap 0 3 Hleaf Hleaf))))); r := Hleaf]
   etc ...

(false = gv3), (true = gv3), (l = l), (l = r), (r = l), (r = r), (gv3 = gv3), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv3), (true <> gv3), (l <> l), (l <> r), (r <> l)
(gv3 <> gv3), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv3), (has_leftist_property r = gv3), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv3)

Label: 7 (14)
Abducted Assumption: (has_leftist_property r = gv4)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := true; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 0 1 (Heap 4 1 (Heap 3 4 (Heap 4 2 Hleaf Hleaf) Hleaf) Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 4 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 5 0 (Heap 1 4 Hleaf (Heap 2 1 Hleaf Hleaf)) Hleaf)]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 2 3 (Heap 1 3 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)) Hleaf); r := (Heap 3 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 0 1 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 2 2 (Heap 0 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 4 5
   (Heap 4 4 (Heap 3 1 Hleaf Hleaf)
      (Heap 3 5 (Heap 0 0 (Heap 5 3 Hleaf Hleaf) Hleaf)
         (Heap 0 4 (Heap 2 3 Hleaf Hleaf) (Heap 1 3 Hleaf Hleaf)))) Hleaf)]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := (Heap 0 0
   (Heap 3 6 Hleaf
      (Heap 4 3 (Heap 6 2 (Heap 4 3 Hleaf (Heap 4 5 Hleaf Hleaf)) Hleaf)
         Hleaf)) Hleaf)]
   etc ...

(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 14 (15)
Abducted Assumption: (right_height r = gv6)
Positive Examples:
   [gv6 := 0; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv6 := 0; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv6 := 1; l := (Heap 2 0 (Heap 1 0 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 1; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf))]
   [gv6 := 1; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv6 := 1; l := (Heap 2 2 (Heap 1 0 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv6 := 1; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := Hleaf; r := (Heap 1 3 Hleaf Hleaf)]
   [gv6 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv6 := 0; l := Hleaf; r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv6 := 0; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv6 := 0; l := Hleaf; r := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   etc ...

(gv6 < gv6), (gv6 <= gv6), (gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv6 < hsize r), (gv6 < hsize l), (gv6 < rank r), (gv6 < rank l), (gv6 < right_height r), (gv6 < right_height l), (hsize r < gv6), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv6), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv6), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv6), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv6), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv6), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv6 <= hsize r)
(gv6 <= rank r), (gv6 <= rank l), (gv6 <= right_height r), (gv6 <= right_height l), (hsize r <= gv6), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv6), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv6), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv6), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv6), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv6 < gv6), (~ gv6 <= gv6), (gv6 <> gv6)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv6), (hinsert r gv6 = r), (hinsert r gv6 = l), (hinsert l gv6 = r), (hinsert l gv6 = l)
(merge r r = l), (merge r r = hinsert r gv6), (merge r r = hinsert l gv6), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv6), (merge r l = hinsert l gv6), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv6)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv6), (merge l l = hinsert l gv6), (mergea gv6 r r = r), (mergea gv6 r r = l), (mergea gv6 r r = hinsert r gv6), (mergea gv6 r r = hinsert l gv6), (mergea gv6 r r = merge r r), (mergea gv6 r r = merge r l)
(mergea gv6 r r = merge l l), (mergea gv6 r l = r), (mergea gv6 r l = l), (mergea gv6 r l = hinsert r gv6), (mergea gv6 r l = hinsert l gv6), (mergea gv6 r l = merge r r), (mergea gv6 r l = merge r l), (mergea gv6 r l = merge l r), (mergea gv6 r l = merge l l), (mergea gv6 l r = r)
(mergea gv6 l r = hinsert r gv6), (mergea gv6 l r = hinsert l gv6), (mergea gv6 l r = merge r r), (mergea gv6 l r = merge r l), (mergea gv6 l r = merge l r), (mergea gv6 l r = merge l l), (mergea gv6 l l = r), (mergea gv6 l l = l), (mergea gv6 l l = hinsert r gv6), (mergea gv6 l l = hinsert l gv6)
(mergea gv6 l l = merge r l), (mergea gv6 l l = merge l r), (mergea gv6 l l = merge l l), (hsize r = gv6), (hsize l = gv6), (rank r = gv6), (rank r = hsize r), (rank r = hsize l), (rank l = gv6), (rank l = hsize r)
(right_height r = gv6), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv6), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)

Label: 7 (16)
Abducted Assumption: (gv4 = true)
Positive Examples:
   [gv4 := true; l := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 4 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf)]
   [gv4 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 2 Hleaf Hleaf)]
   [gv4 := true; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 2 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv4 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv4 := false; l := (Heap 1 5 Hleaf Hleaf); r := (Heap 2 3
   (Heap 1 6 (Heap 1 0 Hleaf (Heap 0 6 Hleaf Hleaf))
      (Heap 0 6 (Heap 1 0 Hleaf (Heap 5 1 Hleaf Hleaf)) Hleaf)) Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 2 (Heap 0 0 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 4 2
   (Heap 2 0 (Heap 2 3 Hleaf (Heap 1 0 Hleaf Hleaf)) (Heap 4 1 Hleaf Hleaf))
   Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 3 (Heap 1 2 (Heap 0 1 Hleaf Hleaf) Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 3 4 (Heap 0 3 Hleaf (Heap 3 4 Hleaf (Heap 3 0 Hleaf Hleaf))) Hleaf)]
   [gv4 := false; l := (Heap 1 3 Hleaf Hleaf); r := (Heap 2 1 Hleaf Hleaf)]
   [gv4 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 2 0 (Heap 2 0 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 1 (Heap 0 1 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 5 1 (Heap 4 4 Hleaf Hleaf) Hleaf)]
   [gv4 := false; l := (Heap 1 4 Hleaf Hleaf); r := (Heap 5 2 Hleaf Hleaf)]
   etc ...

(false = gv4), (true = gv4), (gv4 = gv4), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l)
(rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l)
(rank r <= right_height l), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (false <> gv4), (true <> gv4), (gv4 <> gv4), (r <> r), (r <> l)
(l <> l), (None = Some r), (None = Some l), (merge r r = r), (merge r r = l), (merge r l = r), (merge r l = l), (merge l r = r), (merge l r = l), (merge l l = r)
(has_leftist_property r = gv4), (has_leftist_property l = gv4), (rank r = hsize r), (rank r = hsize l), (rank l = hsize r), (rank l = hsize l), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l)
(right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv4)

Label: 0 (17)
Abducted Assumption: (has_leftist_property l && has_leftist_property r = gv2)
Positive Examples:
   [gv2 := true; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 (Heap 1 2 Hleaf Hleaf) Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 (Heap 1 0 Hleaf Hleaf) Hleaf)]
   [gv2 := true; l := (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := (Heap 1 3 Hleaf Hleaf)]
   [gv2 := true; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := true; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv2 := false; l := (Heap 1 3 (Heap 1 3 (Heap 1 0 Hleaf Hleaf) Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 2 (Heap 1 4 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 6 Hleaf Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv2 := false; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv2 := false; l := (Heap 1 0 Hleaf Hleaf); r := (Heap 1 1 Hleaf Hleaf)]
   etc ...

(false = gv2), (true = gv2), (l = l), (l = r), (r = l), (r = r), (gv2 = gv2), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r)
(rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < hsize l)
(right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r)
(rank l <= right_height r), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv2), (true <> gv2), (l <> l), (l <> r), (r <> l)
(gv2 <> gv2), (None = Some l), (None = Some r), (merge l l = l), (merge l l = r), (merge l r = l), (merge l r = r), (merge r l = l), (merge r l = r), (merge r r = l)
(has_leftist_property l = gv2), (has_leftist_property r = gv2), (rank l = hsize l), (rank l = hsize r), (rank r = hsize l), (rank r = hsize r), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r)
(right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv2)

Label: 1 (18)
Abducted Assumption: (rank r + 1 = gv9)
Positive Examples:
   [gv9 := 1; l := (Heap 1 1 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 2 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 1; l := (Heap 1 5 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 2 1 (Heap 1 2 Hleaf Hleaf) (Heap 1 0 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 2; l := (Heap 1 1 Hleaf Hleaf); r := (Heap 1 0 Hleaf Hleaf)]
   [gv9 := 1; l := (Heap 1 2 (Heap 1 0 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 1; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

Negative Examples:
   [gv9 := 0; l := (Heap 1 4 Hleaf Hleaf); r := Hleaf]
   [gv9 := 2; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 6; l := (Heap 1 3 Hleaf Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 1 3 (Heap 1 1 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 2 2 (Heap 1 2 Hleaf Hleaf) (Heap 1 1 Hleaf Hleaf)); r := Hleaf]
   [gv9 := 5; l := (Heap 1 1 Hleaf Hleaf); r := Hleaf]
   [gv9 := 4; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv9 := 0; l := (Heap 1 0 (Heap 1 2 Hleaf Hleaf) Hleaf); r := Hleaf]
   [gv9 := 5; l := (Heap 1 2 Hleaf Hleaf); r := Hleaf]
   [gv9 := 5; l := (Heap 1 0 Hleaf Hleaf); r := Hleaf]
   etc ...

(gv9 < gv9), (gv9 <= gv9), (gv9 = gv9), (r = r), (r = l), (l = r), (l = l), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r)
(gv9 < hsize r), (gv9 < hsize l), (gv9 < rank r), (gv9 < rank l), (gv9 < right_height r), (gv9 < right_height l), (hsize r < gv9), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height l), (hsize l < gv9), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < gv9), (rank r < hsize r), (rank r < hsize l)
(rank r < right_height r), (rank r < right_height l), (rank l < gv9), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < gv9), (right_height r < hsize r)
(right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < gv9), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (gv9 <= hsize r)
(gv9 <= rank r), (gv9 <= rank l), (gv9 <= right_height r), (gv9 <= right_height l), (hsize r <= gv9), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l)
(hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= gv9), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r)
(rank l <= gv9), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= gv9), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r)
(right_height r <= right_height l), (right_height l <= gv9), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ gv9 < gv9), (~ gv9 <= gv9), (gv9 <> gv9)
(r <> l), (l <> r), (l <> l), (None = Some r), (None = Some l), (None = Some gv9), (hinsert r gv9 = r), (hinsert r gv9 = l), (hinsert l gv9 = r), (hinsert l gv9 = l)
(merge r r = l), (merge r r = hinsert r gv9), (merge r r = hinsert l gv9), (merge r l = r), (merge r l = l), (merge r l = hinsert r gv9), (merge r l = hinsert l gv9), (merge l r = r), (merge l r = l), (merge l r = hinsert r gv9)
(merge l l = r), (merge l l = l), (merge l l = hinsert r gv9), (merge l l = hinsert l gv9), (mergea gv9 r r = r), (mergea gv9 r r = l), (mergea gv9 r r = hinsert r gv9), (mergea gv9 r r = hinsert l gv9), (mergea gv9 r r = merge r r), (mergea gv9 r r = merge r l)
(mergea gv9 r r = merge l l), (mergea gv9 r l = r), (mergea gv9 r l = l), (mergea gv9 r l = hinsert r gv9), (mergea gv9 r l = hinsert l gv9), (mergea gv9 r l = merge r r), (mergea gv9 r l = merge r l), (mergea gv9 r l = merge l r), (mergea gv9 r l = merge l l), (mergea gv9 l r = r)
(mergea gv9 l r = hinsert r gv9), (mergea gv9 l r = hinsert l gv9), (mergea gv9 l r = merge r r), (mergea gv9 l r = merge r l), (mergea gv9 l r = merge l r), (mergea gv9 l r = merge l l), (mergea gv9 l l = r), (mergea gv9 l l = l), (mergea gv9 l l = hinsert r gv9), (mergea gv9 l l = hinsert l gv9)
(mergea gv9 l l = merge r l), (mergea gv9 l l = merge l r), (mergea gv9 l l = merge l l), (hsize r = gv9), (hsize l = gv9), (rank r = gv9), (rank r = hsize r), (rank r = hsize l), (rank l = gv9), (rank l = hsize r)
(right_height r = gv9), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = gv9), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 2345.933 seconds


Label: 15 (0)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 14 (1)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 13 (2)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 11 (3)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 9 (4)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 8 (5)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 7 (6)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 5 (7)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 4 (8)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 3 (9)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 1 (10)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 0 (11)
(true = has_leftist_property l), (has_leftist_property l = gv4), (true = gv2), (false <> gv2), (has_leftist_property r = gv2)

Label: 4 (12)
(right_height r = gv10)

Label: 13 (13)
(right_height r <= gv7)

Label: 14 (14)
(gv6 <= hsize l), (gv6 <= rank l), (gv6 <= right_height l), (rank r <= hsize l), (rank r <= right_height l), (right_height r <= hsize l), (right_height r <= rank l), (right_height r <= right_height l)

Label: 15 (15)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 12 (16)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 11 (17)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 9 (18)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 8 (19)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 7 (20)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 6 (21)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 5 (22)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 4 (23)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 3 (24)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 2 (25)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 1 (26)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 0 (27)
(right_height r <= hsize l), (has_leftist_property l = gv1), (true = gv5), (false <> gv5)

Label: 15 (28)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 14 (29)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 13 (30)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 12 (31)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 11 (32)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 9 (33)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 8 (34)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 5 (35)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 4 (36)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 3 (37)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 2 (38)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 1 (39)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 0 (40)
(true = has_leftist_property r), (has_leftist_property r = gv3)

Label: 9 (41)

Label: 12 (42)
(true = gv1), (false <> gv1), (has_leftist_property l = gv1)

Label: 6 (43)
(false = gv14), (false = has_leftist_property r), (has_leftist_property l = gv14)

Label: 6 (44)
(false = gv14)

Label: 10 (45)
(true = gv0), (false <> gv0), (has_leftist_property r = gv0)

Label: 3 (46)
(true = gv8), (has_leftist_property r = gv8), (has_leftist_property l = gv8)

Label: 11 (47)
(true = gv5), (false <> gv5), (has_leftist_property r = gv5)

Label: 2 (48)
(true = gv3), (false <> gv3), (has_leftist_property r = gv3)

Label: 7 (49)
(true = has_leftist_property r), (has_leftist_property r = gv4)

Label: 14 (50)
(rank r = gv6)

Label: 7 (51)
(true = gv4), (true = has_leftist_property r), (has_leftist_property l = gv4)

Label: 0 (52)
(true = gv2), (false <> gv2), (has_leftist_property l = gv2)

Label: 1 (53)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 2798.412 seconds


(has_leftist_property l && has_leftist_property r = gv2)
 - (has_leftist_property l && has_leftist_property r = gv2)
 - (true = gv2)
 - (false <> gv2)
 - (has_leftist_property l = gv2)

(rank r + 1 = gv9)
 - (rank r + 1 = gv9)

(gv4 = true)
 - (gv4 = true)
 - (true = has_leftist_property r)
 - (has_leftist_property l = gv4)

(gv3 = true)
 - (gv3 = true)
 - (false <> gv3)
 - (has_leftist_property r = gv3)

(has_leftist_property r = gv4)
 - (has_leftist_property r = gv4)
 - (true = has_leftist_property r)

(right_height r = gv6)
 - (right_height r = gv6)
 - (rank r = gv6)

((right_height r <=? right_height l) = gv5)
 - ((right_height r <=? right_height l) = gv5)
 - (true = gv5)
 - (false <> gv5)
 - (has_leftist_property r = gv5)

((rank r + 1 =? right_height r + 1) = gv8)
 - ((rank r + 1 =? right_height r + 1) = gv8)
 - (true = gv8)
 - (has_leftist_property r = gv8)
 - (has_leftist_property l = gv8)

(has_leftist_property r = gv14)
 - (has_leftist_property r = gv14)
 - (false = gv14)

(has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv0)
 - (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv0)
 - (true = gv0)
 - (false <> gv0)
 - (has_leftist_property r = gv0)

(has_leftist_property l = gv14)
 - (has_leftist_property l = gv14)
 - (false = gv14)
 - (false = has_leftist_property r)

(right_height r + 1 = gv13)
 - (right_height r + 1 = gv13)

(has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) = gv1)
 - (has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) = gv1)
 - (true = gv1)
 - (false <> gv1)
 - (has_leftist_property l = gv1)

(right_height r <= right_height l)
 - (right_height r <= right_height l)
 - (right_height r <= hsize l)
 - (has_leftist_property l = gv1)
 - (true = gv5)
 - (false <> gv5)

(has_leftist_property r = true)
 - (has_leftist_property r = true)
 - (has_leftist_property r = gv3)

(rank r = gv10)
 - (rank r = gv10)
 - (right_height r = gv10)

(right_height r <= gv7)
 - (right_height r <= gv7)

(gv6 <= right_height l)
 - (gv6 <= right_height l)
 - (gv6 <= hsize l)
 - (gv6 <= rank l)
 - (rank r <= hsize l)
 - (rank r <= right_height l)
 - (right_height r <= hsize l)
 - (right_height r <= rank l)
 - (right_height r <= right_height l)

(has_leftist_property l = true)
 - (has_leftist_property l = true)
 - (has_leftist_property l = gv4)
 - (true = gv2)
 - (false <> gv2)
 - (has_leftist_property r = gv2)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 2798.415 seconds

Number of Result Pairs Returned: 12

(right_height r <= right_height l ->
 has_leftist_property r = true ->
 gv3 = true ->
 gv3 && has_leftist_property r && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)

(right_height r <= right_height l -> right_height r <= hsize l)
(right_height r <= hsize l ->
 has_leftist_property r = true ->
 gv3 = true ->
 gv3 && has_leftist_property r && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)

(gv3 = true -> false <> gv3)
(false <> gv3 ->
 right_height r <= right_height l ->
 has_leftist_property r = true ->
 gv3 && has_leftist_property r && (right_height r <=? right_height l) &&
 (rank r + 1 =? right_height r + 1) = true)

(right_height r <= right_height l ->
 has_leftist_property r = true ->
 has_leftist_property l = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + gv11 =? right_height r + gv11) = true)

(right_height r <= right_height l -> right_height r <= hsize l)
(right_height r <= hsize l ->
 has_leftist_property r = true ->
 has_leftist_property l = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + gv11 =? right_height r + gv11) = true)

(right_height r <= right_height l ->
 has_leftist_property r = gv14 ->
 has_leftist_property l = gv14 ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv14)

(right_height r <= right_height l -> right_height r <= hsize l)
(right_height r <= hsize l ->
 has_leftist_property r = gv14 ->
 has_leftist_property l = gv14 ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 gv14)

(right_height r <= right_height l ->
 has_leftist_property r = true ->
 has_leftist_property l = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + S gv12 =? right_height r + S gv12) = true)

(right_height r <= right_height l -> right_height r <= hsize l)
(right_height r <= hsize l ->
 has_leftist_property r = true ->
 has_leftist_property l = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) &&
 (rank r + S gv12 =? right_height r + S gv12) = true)

(right_height r <= gv7 ->
 has_leftist_property r = true ->
 has_leftist_property l = true ->
 has_leftist_property l && has_leftist_property r && (right_height r <=? gv7) &&
 (rank r + 1 =? right_height r + 1) = true)

(right_height r <= right_height l ->
 has_leftist_property l = true ->
 has_leftist_property r = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 true)

(right_height r <= right_height l -> right_height r <= hsize l)
(right_height r <= hsize l ->
 has_leftist_property l = true ->
 has_leftist_property r = true ->
 has_leftist_property l && has_leftist_property r &&
 (right_height r <=? right_height l) && (rank r + 1 =? right_height r + 1) =
 true)
