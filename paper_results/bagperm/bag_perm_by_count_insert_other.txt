Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (exists l1 l2 : list nat,
   bl = l1 ++ a :: l2 /\ count a (l1 ++ l2) = count a al)
 -- (count a (x ++ x0) = count a al)
 -- (n <> a)
 -- (exists l2 : list nat, bl = x ++ a :: l2 /\ count a (x ++ l2) = count a al)
 -- (bl = x ++ a :: x0)
 -- (a <> n)
 -- (forall bl : bag, bag_eqv al bl -> Permutation al bl)
 -- (forall n0 : nat, count n0 (a :: al) = count n0 (n :: x ++ a :: x0))
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))
 -- (n0 <> a)

----------------------------------
Goal: (count n0 al = count n0 ((n :: x) ++ x0))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.598 seconds

gv0 : nat = (count n0 al)
gv3 : (list nat) = (n :: x)
gv1 : nat = (count n0 ((n :: x) ++ x0))
gv2 : (list nat) = ((n :: x) ++ x0)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 61.3 seconds

Label: Generalization #0
Assumptions: 
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))

----------------------------------
Goal: (count n0 al = count n0 ((n :: x) ++ x0))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))
 -- ((n :: x) ++ x0 = gv2)

----------------------------------
Goal: (count n0 al = count n0 gv2)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (count n0 ((n :: x) ++ x0) = gv1)
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))

----------------------------------
Goal: (count n0 al = gv1)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (n :: x = gv3)
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))

----------------------------------
Goal: (count n0 al = count n0 (gv3 ++ x0))
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (count n0 al = gv0)
 -- (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))

----------------------------------
Goal: (gv0 = count n0 ((n :: x) ++ x0))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 61.489 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
insert : (nat -> list nat -> list nat)
sort : (list nat -> list nat)
bag : Set
count : (nat -> bag -> nat)
bag_eqv : (bag -> bag -> Prop)

Label: 0 (0)
Abducted Assumption: (count n0 (a :: al) = count n0 (n :: x ++ a :: x0))
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 370
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 426
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 61.801 seconds


Label: 0 (0)
(a < a), (a < n), (a < n0), (n < a), (n < n), (n < n0), (n0 < a), (n0 < n), (n0 < n0), (a <= a)
(a <= n), (a <= n0), (n <= a), (n <= n), (n <= n0), (n0 <= a), (n0 <= n), (n0 <= n0), (x0 = x0), (x0 = x)
(x0 = al), (x = x0), (x = x), (x = al), (al = x0), (al = x), (al = al), (a = a), (a = n), (a = n0)
(n = a), (n = n), (n = n0), (n0 = a), (n0 = n), (n0 = n0), (a < length x0), (a < length x), (a < length al), (n < length x0)
(n < length x), (n < length al), (n0 < length x0), (n0 < length x), (n0 < length al), (length x0 < a), (length x0 < n), (length x0 < n0), (length x0 < length x), (length x0 < length al)
(length x < a), (length x < n), (length x < n0), (length x < length x0), (length x < length al), (length al < a), (length al < n), (length al < n0), (length al < length x0), (length al < length x)
(a <= length x0), (a <= length x), (a <= length al), (n <= length x0), (n <= length x), (n <= length al), (n0 <= length x0), (n0 <= length x), (n0 <= length al), (length x0 <= a)
(length x0 <= n), (length x0 <= n0), (length x0 <= length x), (length x0 <= length al), (length x <= a), (length x <= n), (length x <= n0), (length x <= length x0), (length x <= length al), (length al <= a)
(length al <= n), (length al <= n0), (length al <= length x0), (length al <= length x), (~ a < a), (~ a < n), (~ a < n0), (~ n < a), (~ n < n), (~ n < n0)
(~ n0 < a), (~ n0 < n), (~ n0 < n0), (~ a <= a), (~ a <= n), (~ a <= n0), (~ n <= a), (~ n <= n), (~ n <= n0), (~ n0 <= a)
(~ n0 <= n), (~ n0 <= n0), (x0 <> x0), (x0 <> x), (x0 <> al), (x <> x0), (x <> x), (x <> al), (al <> x0), (al <> x)
(al <> al), (a <> a), (a <> n), (a <> n0), (n <> a), (n <> n), (n <> n0), (n0 <> a), (n0 <> n), (n0 <> n0)
(None = Some x0), (None = Some x), (None = Some al), (a :: x0 = x0), (a :: x0 = x), (a :: x0 = al), (a :: x0 = sort x0), (a :: x0 = sort x), (a :: x0 = sort al), (a :: x0 = insert a x0)
(a :: x0 = insert a x), (a :: x0 = insert a al), (a :: x0 = insert n x0), (a :: x0 = insert n x), (a :: x0 = insert n al), (a :: x0 = insert n0 x0), (a :: x0 = insert n0 x), (a :: x0 = insert n0 al), (a :: x0 = x0 ++ x0), (a :: x0 = x0 ++ x)
(a :: x0 = x0 ++ al), (a :: x0 = x ++ x0), (a :: x0 = x ++ x), (a :: x0 = x ++ al), (a :: x0 = al ++ x0), (a :: x0 = al ++ x), (a :: x0 = al ++ al), (a :: x0 = []), (a :: x = x0), (a :: x = x)
(a :: x = al), (a :: x = sort x0), (a :: x = sort x), (a :: x = sort al), (a :: x = insert a x0), (a :: x = insert a x), (a :: x = insert a al), (a :: x = insert n x0), (a :: x = insert n x), (a :: x = insert n al)
(a :: x = insert n0 x0), (a :: x = insert n0 x), (a :: x = insert n0 al), (a :: x = x0 ++ x0), (a :: x = x0 ++ x), (a :: x = x0 ++ al), (a :: x = x ++ x0), (a :: x = x ++ x), (a :: x = x ++ al), (a :: x = al ++ x0)
(a :: x = al ++ x), (a :: x = al ++ al), (a :: x = []), (a :: al = x0), (a :: al = x), (a :: al = al), (a :: al = sort x0), (a :: al = sort x), (a :: al = sort al), (a :: al = insert a x0)
(a :: al = insert a x), (a :: al = insert a al), (a :: al = insert n x0), (a :: al = insert n x), (a :: al = insert n al), (a :: al = insert n0 x0), (a :: al = insert n0 x), (a :: al = insert n0 al), (a :: al = x0 ++ x0), (a :: al = x0 ++ x)
(a :: al = x0 ++ al), (a :: al = x ++ x0), (a :: al = x ++ x), (a :: al = x ++ al), (a :: al = al ++ x0), (a :: al = al ++ x), (a :: al = al ++ al), (a :: al = []), (n :: x0 = x0), (n :: x0 = x)
(n :: x0 = al), (n :: x0 = sort x0), (n :: x0 = sort x), (n :: x0 = sort al), (n :: x0 = insert a x0), (n :: x0 = insert a x), (n :: x0 = insert a al), (n :: x0 = insert n x0), (n :: x0 = insert n x), (n :: x0 = insert n al)
(n :: x0 = insert n0 x0), (n :: x0 = insert n0 x), (n :: x0 = insert n0 al), (n :: x0 = x0 ++ x0), (n :: x0 = x0 ++ x), (n :: x0 = x0 ++ al), (n :: x0 = x ++ x0), (n :: x0 = x ++ x), (n :: x0 = x ++ al), (n :: x0 = al ++ x0)
(n :: x0 = al ++ x), (n :: x0 = al ++ al), (n :: x0 = []), (n :: x = x0), (n :: x = x), (n :: x = al), (n :: x = sort x0), (n :: x = sort x), (n :: x = sort al), (n :: x = insert a x0)
(n :: x = insert a x), (n :: x = insert a al), (n :: x = insert n x0), (n :: x = insert n x), (n :: x = insert n al), (n :: x = insert n0 x0), (n :: x = insert n0 x), (n :: x = insert n0 al), (n :: x = x0 ++ x0), (n :: x = x0 ++ x)
(n :: x = x0 ++ al), (n :: x = x ++ x0), (n :: x = x ++ x), (n :: x = x ++ al), (n :: x = al ++ x0), (n :: x = al ++ x), (n :: x = al ++ al), (n :: x = []), (n :: al = x0), (n :: al = x)
(n :: al = al), (n :: al = sort x0), (n :: al = sort x), (n :: al = sort al), (n :: al = insert a x0), (n :: al = insert a x), (n :: al = insert a al), (n :: al = insert n x0), (n :: al = insert n x), (n :: al = insert n al)
(n :: al = insert n0 x0), (n :: al = insert n0 x), (n :: al = insert n0 al), (n :: al = x0 ++ x0), (n :: al = x0 ++ x), (n :: al = x0 ++ al), (n :: al = x ++ x0), (n :: al = x ++ x), (n :: al = x ++ al), (n :: al = al ++ x0)
(n :: al = al ++ x), (n :: al = al ++ al), (n :: al = []), (n0 :: x0 = x0), (n0 :: x0 = x), (n0 :: x0 = al), (n0 :: x0 = sort x0), (n0 :: x0 = sort x), (n0 :: x0 = sort al), (n0 :: x0 = insert a x0)
(n0 :: x0 = insert a x), (n0 :: x0 = insert a al), (n0 :: x0 = insert n x0), (n0 :: x0 = insert n x), (n0 :: x0 = insert n al), (n0 :: x0 = insert n0 x0), (n0 :: x0 = insert n0 x), (n0 :: x0 = insert n0 al), (n0 :: x0 = x0 ++ x0), (n0 :: x0 = x0 ++ x)
(n0 :: x0 = x0 ++ al), (n0 :: x0 = x ++ x0), (n0 :: x0 = x ++ x), (n0 :: x0 = x ++ al), (n0 :: x0 = al ++ x0), (n0 :: x0 = al ++ x), (n0 :: x0 = al ++ al), (n0 :: x0 = []), (n0 :: x = x0), (n0 :: x = x)
(n0 :: x = al), (n0 :: x = sort x0), (n0 :: x = sort x), (n0 :: x = sort al), (n0 :: x = insert a x0), (n0 :: x = insert a x), (n0 :: x = insert a al), (n0 :: x = insert n x0), (n0 :: x = insert n x), (n0 :: x = insert n al)
(n0 :: x = insert n0 x0), (n0 :: x = insert n0 x), (n0 :: x = insert n0 al), (n0 :: x = x0 ++ x0), (n0 :: x = x0 ++ x), (n0 :: x = x0 ++ al), (n0 :: x = x ++ x0), (n0 :: x = x ++ x), (n0 :: x = x ++ al), (n0 :: x = al ++ x0)
(n0 :: x = al ++ x), (n0 :: x = al ++ al), (n0 :: x = []), (n0 :: al = x0), (n0 :: al = x), (n0 :: al = al), (n0 :: al = sort x0), (n0 :: al = sort x), (n0 :: al = sort al), (n0 :: al = insert a x0)
(n0 :: al = insert a x), (n0 :: al = insert a al), (n0 :: al = insert n x0), (n0 :: al = insert n x), (n0 :: al = insert n al), (n0 :: al = insert n0 x0), (n0 :: al = insert n0 x), (n0 :: al = insert n0 al), (n0 :: al = x0 ++ x0), (n0 :: al = x0 ++ x)
(n0 :: al = x0 ++ al), (n0 :: al = x ++ x0), (n0 :: al = x ++ x), (n0 :: al = x ++ al), (n0 :: al = al ++ x0), (n0 :: al = al ++ x), (n0 :: al = al ++ al), (n0 :: al = []), (sort x0 = x0), (sort x0 = x)
(sort x0 = al), (sort x0 = insert a x0), (sort x0 = insert a x), (sort x0 = insert a al), (sort x0 = insert n x0), (sort x0 = insert n x), (sort x0 = insert n al), (sort x0 = insert n0 x0), (sort x0 = insert n0 x), (sort x0 = insert n0 al)
(sort x0 = x0 ++ x0), (sort x0 = x0 ++ x), (sort x0 = x0 ++ al), (sort x0 = x ++ x0), (sort x0 = x ++ x), (sort x0 = x ++ al), (sort x0 = al ++ x0), (sort x0 = al ++ x), (sort x0 = al ++ al), (sort x = x0)
(sort x = x), (sort x = al), (sort x = insert a x0), (sort x = insert a x), (sort x = insert a al), (sort x = insert n x0), (sort x = insert n x), (sort x = insert n al), (sort x = insert n0 x0), (sort x = insert n0 x)
(sort x = insert n0 al), (sort x = x0 ++ x0), (sort x = x0 ++ x), (sort x = x0 ++ al), (sort x = x ++ x0), (sort x = x ++ x), (sort x = x ++ al), (sort x = al ++ x0), (sort x = al ++ x), (sort x = al ++ al)
(sort al = x0), (sort al = x), (sort al = al), (sort al = insert a x0), (sort al = insert a x), (sort al = insert a al), (sort al = insert n x0), (sort al = insert n x), (sort al = insert n al), (sort al = insert n0 x0)
(sort al = insert n0 x), (sort al = insert n0 al), (sort al = x0 ++ x0), (sort al = x0 ++ x), (sort al = x0 ++ al), (sort al = x ++ x0), (sort al = x ++ x), (sort al = x ++ al), (sort al = al ++ x0), (sort al = al ++ x)
(sort al = al ++ al), (insert a x0 = x0), (insert a x0 = x), (insert a x0 = al), (insert a x0 = x0 ++ x0), (insert a x0 = x0 ++ x), (insert a x0 = x0 ++ al), (insert a x0 = x ++ x0), (insert a x0 = x ++ x), (insert a x0 = x ++ al)
(insert a x0 = al ++ x0), (insert a x0 = al ++ x), (insert a x0 = al ++ al), (insert a x = x0), (insert a x = x), (insert a x = al), (insert a x = x0 ++ x0), (insert a x = x0 ++ x), (insert a x = x0 ++ al), (insert a x = x ++ x0)
(insert a x = x ++ x), (insert a x = x ++ al), (insert a x = al ++ x0), (insert a x = al ++ x), (insert a x = al ++ al), (insert a al = x0), (insert a al = x), (insert a al = al), (insert a al = x0 ++ x0), (insert a al = x0 ++ x)
(insert a al = x0 ++ al), (insert a al = x ++ x0), (insert a al = x ++ x), (insert a al = x ++ al), (insert a al = al ++ x0), (insert a al = al ++ x), (insert a al = al ++ al), (insert n x0 = x0), (insert n x0 = x), (insert n x0 = al)
(insert n x0 = x0 ++ x0), (insert n x0 = x0 ++ x), (insert n x0 = x0 ++ al), (insert n x0 = x ++ x0), (insert n x0 = x ++ x), (insert n x0 = x ++ al), (insert n x0 = al ++ x0), (insert n x0 = al ++ x), (insert n x0 = al ++ al), (insert n x = x0)
(insert n x = x), (insert n x = al), (insert n x = x0 ++ x0), (insert n x = x0 ++ x), (insert n x = x0 ++ al), (insert n x = x ++ x0), (insert n x = x ++ x), (insert n x = x ++ al), (insert n x = al ++ x0), (insert n x = al ++ x)
(insert n x = al ++ al), (insert n al = x0), (insert n al = x), (insert n al = al), (insert n al = x0 ++ x0), (insert n al = x0 ++ x), (insert n al = x0 ++ al), (insert n al = x ++ x0), (insert n al = x ++ x), (insert n al = x ++ al)
(insert n al = al ++ x0), (insert n al = al ++ x), (insert n al = al ++ al), (insert n0 x0 = x0), (insert n0 x0 = x), (insert n0 x0 = al), (insert n0 x0 = x0 ++ x0), (insert n0 x0 = x0 ++ x), (insert n0 x0 = x0 ++ al), (insert n0 x0 = x ++ x0)
(insert n0 x0 = x ++ x), (insert n0 x0 = x ++ al), (insert n0 x0 = al ++ x0), (insert n0 x0 = al ++ x), (insert n0 x0 = al ++ al), (insert n0 x = x0), (insert n0 x = x), (insert n0 x = al), (insert n0 x = x0 ++ x0), (insert n0 x = x0 ++ x)
(insert n0 x = x0 ++ al), (insert n0 x = x ++ x0), (insert n0 x = x ++ x), (insert n0 x = x ++ al), (insert n0 x = al ++ x0), (insert n0 x = al ++ x), (insert n0 x = al ++ al), (insert n0 al = x0), (insert n0 al = x), (insert n0 al = al)
(insert n0 al = x0 ++ x0), (insert n0 al = x0 ++ x), (insert n0 al = x0 ++ al), (insert n0 al = x ++ x0), (insert n0 al = x ++ x), (insert n0 al = x ++ al), (insert n0 al = al ++ x0), (insert n0 al = al ++ x), (insert n0 al = al ++ al), (x0 ++ x0 = x0)
(x0 ++ x0 = x), (x0 ++ x0 = al), (x0 ++ x = x0), (x0 ++ x = x), (x0 ++ x = al), (x0 ++ al = x0), (x0 ++ al = x), (x0 ++ al = al), (x ++ x0 = x0), (x ++ x0 = x)
(x ++ x0 = al), (x ++ x = x0), (x ++ x = x), (x ++ x = al), (x ++ al = x0), (x ++ al = x), (x ++ al = al), (al ++ x0 = x0), (al ++ x0 = x), (al ++ x0 = al)
(al ++ x = x0), (al ++ x = x), (al ++ x = al), (al ++ al = x0), (al ++ al = x), (al ++ al = al), ([] = x0), ([] = x), ([] = al), ([] = sort x0)
([] = sort x), ([] = sort al), ([] = insert a x0), ([] = insert a x), ([] = insert a al), ([] = insert n x0), ([] = insert n x), ([] = insert n al), ([] = insert n0 x0), ([] = insert n0 x)
([] = insert n0 al), ([] = x0 ++ x0), ([] = x0 ++ x), ([] = x0 ++ al), ([] = x ++ x0), ([] = x ++ x), ([] = x ++ al), ([] = al ++ x0), ([] = al ++ x), ([] = al ++ al)
(None = Some a), (None = Some n), (None = Some n0), (length x0 = a), (length x0 = n), (length x0 = n0), (length x = a), (length x = n), (length x = n0), (length al = a)
(length al = n), (length al = n0)

Label: 1 (1)
(a < a), (a < n), (a < n0), (n < a), (n < n), (n < n0), (n0 < a), (n0 < n), (n0 < n0), (a <= a)
(a <= n), (a <= n0), (n <= a), (n <= n), (n <= n0), (n0 <= a), (n0 <= n), (n0 <= n0), (x0 = x0), (x0 = x)
(x0 = gv2), (x0 = al), (x = x0), (x = x), (x = gv2), (x = al), (gv2 = x0), (gv2 = x), (gv2 = gv2), (gv2 = al)
(al = x0), (al = x), (al = gv2), (al = al), (a = a), (a = n), (a = n0), (n = a), (n = n), (n = n0)
(n0 = a), (n0 = n), (n0 = n0), (a < length x0), (a < length x), (a < length gv2), (a < length al), (n < length x0), (n < length x), (n < length gv2)
(n < length al), (n0 < length x0), (n0 < length x), (n0 < length gv2), (n0 < length al), (length x0 < a), (length x0 < n), (length x0 < n0), (length x0 < length x), (length x0 < length gv2)
(length x0 < length al), (length x < a), (length x < n), (length x < n0), (length x < length x0), (length x < length gv2), (length x < length al), (length gv2 < a), (length gv2 < n), (length gv2 < n0)
(length gv2 < length x0), (length gv2 < length x), (length gv2 < length al), (length al < a), (length al < n), (length al < n0), (length al < length x0), (length al < length x), (length al < length gv2), (a <= length x0)
(a <= length x), (a <= length gv2), (a <= length al), (n <= length x0), (n <= length x), (n <= length gv2), (n <= length al), (n0 <= length x0), (n0 <= length x), (n0 <= length gv2)
(n0 <= length al), (length x0 <= a), (length x0 <= n), (length x0 <= n0), (length x0 <= length x), (length x0 <= length gv2), (length x0 <= length al), (length x <= a), (length x <= n), (length x <= n0)
(length x <= length x0), (length x <= length gv2), (length x <= length al), (length gv2 <= a), (length gv2 <= n), (length gv2 <= n0), (length gv2 <= length x0), (length gv2 <= length x), (length gv2 <= length al), (length al <= a)
(length al <= n), (length al <= n0), (length al <= length x0), (length al <= length x), (length al <= length gv2), (~ a < a), (~ a < n), (~ a < n0), (~ n < a), (~ n < n)
(~ n < n0), (~ n0 < a), (~ n0 < n), (~ n0 < n0), (~ a <= a), (~ a <= n), (~ a <= n0), (~ n <= a), (~ n <= n), (~ n <= n0)
(~ n0 <= a), (~ n0 <= n), (~ n0 <= n0), (x0 <> x0), (x0 <> x), (x0 <> gv2), (x0 <> al), (x <> x0), (x <> x), (x <> gv2)
(x <> al), (gv2 <> x0), (gv2 <> x), (gv2 <> gv2), (gv2 <> al), (al <> x0), (al <> x), (al <> gv2), (al <> al), (a <> a)
(a <> n), (a <> n0), (n <> a), (n <> n), (n <> n0), (n0 <> a), (n0 <> n), (n0 <> n0), (None = Some x0), (None = Some x)
(None = Some gv2), (None = Some al), (a :: x0 = x0), (a :: x0 = x), (a :: x0 = gv2), (a :: x0 = al), (a :: x0 = sort x0), (a :: x0 = sort x), (a :: x0 = sort gv2), (a :: x0 = sort al)
(a :: x0 = insert a x0), (a :: x0 = insert a x), (a :: x0 = insert a gv2), (a :: x0 = insert a al), (a :: x0 = insert n x0), (a :: x0 = insert n x), (a :: x0 = insert n gv2), (a :: x0 = insert n al), (a :: x0 = insert n0 x0), (a :: x0 = insert n0 x)
(a :: x0 = insert n0 gv2), (a :: x0 = insert n0 al), (a :: x0 = x0 ++ x0), (a :: x0 = x0 ++ x), (a :: x0 = x0 ++ gv2), (a :: x0 = x0 ++ al), (a :: x0 = x ++ x0), (a :: x0 = x ++ x), (a :: x0 = x ++ gv2), (a :: x0 = x ++ al)
(a :: x0 = gv2 ++ x0), (a :: x0 = gv2 ++ x), (a :: x0 = gv2 ++ gv2), (a :: x0 = gv2 ++ al), (a :: x0 = al ++ x0), (a :: x0 = al ++ x), (a :: x0 = al ++ gv2), (a :: x0 = al ++ al), (a :: x0 = []), (a :: x = x0)
(a :: x = x), (a :: x = gv2), (a :: x = al), (a :: x = sort x0), (a :: x = sort x), (a :: x = sort gv2), (a :: x = sort al), (a :: x = insert a x0), (a :: x = insert a x), (a :: x = insert a gv2)
(a :: x = insert a al), (a :: x = insert n x0), (a :: x = insert n x), (a :: x = insert n gv2), (a :: x = insert n al), (a :: x = insert n0 x0), (a :: x = insert n0 x), (a :: x = insert n0 gv2), (a :: x = insert n0 al), (a :: x = x0 ++ x0)
(a :: x = x0 ++ x), (a :: x = x0 ++ gv2), (a :: x = x0 ++ al), (a :: x = x ++ x0), (a :: x = x ++ x), (a :: x = x ++ gv2), (a :: x = x ++ al), (a :: x = gv2 ++ x0), (a :: x = gv2 ++ x), (a :: x = gv2 ++ gv2)
(a :: x = gv2 ++ al), (a :: x = al ++ x0), (a :: x = al ++ x), (a :: x = al ++ gv2), (a :: x = al ++ al), (a :: x = []), (a :: gv2 = x0), (a :: gv2 = x), (a :: gv2 = gv2), (a :: gv2 = al)
(a :: gv2 = sort x0), (a :: gv2 = sort x), (a :: gv2 = sort gv2), (a :: gv2 = sort al), (a :: gv2 = insert a x0), (a :: gv2 = insert a x), (a :: gv2 = insert a gv2), (a :: gv2 = insert a al), (a :: gv2 = insert n x0), (a :: gv2 = insert n x)
(a :: gv2 = insert n gv2), (a :: gv2 = insert n al), (a :: gv2 = insert n0 x0), (a :: gv2 = insert n0 x), (a :: gv2 = insert n0 gv2), (a :: gv2 = insert n0 al), (a :: gv2 = x0 ++ x0), (a :: gv2 = x0 ++ x), (a :: gv2 = x0 ++ gv2), (a :: gv2 = x0 ++ al)
(a :: gv2 = x ++ x0), (a :: gv2 = x ++ x), (a :: gv2 = x ++ gv2), (a :: gv2 = x ++ al), (a :: gv2 = gv2 ++ x0), (a :: gv2 = gv2 ++ x), (a :: gv2 = gv2 ++ gv2), (a :: gv2 = gv2 ++ al), (a :: gv2 = al ++ x0), (a :: gv2 = al ++ x)
(a :: gv2 = al ++ gv2), (a :: gv2 = al ++ al), (a :: gv2 = []), (a :: al = x0), (a :: al = x), (a :: al = gv2), (a :: al = al), (a :: al = sort x0), (a :: al = sort x), (a :: al = sort gv2)
(a :: al = sort al), (a :: al = insert a x0), (a :: al = insert a x), (a :: al = insert a gv2), (a :: al = insert a al), (a :: al = insert n x0), (a :: al = insert n x), (a :: al = insert n gv2), (a :: al = insert n al), (a :: al = insert n0 x0)
(a :: al = insert n0 x), (a :: al = insert n0 gv2), (a :: al = insert n0 al), (a :: al = x0 ++ x0), (a :: al = x0 ++ x), (a :: al = x0 ++ gv2), (a :: al = x0 ++ al), (a :: al = x ++ x0), (a :: al = x ++ x), (a :: al = x ++ gv2)
(a :: al = x ++ al), (a :: al = gv2 ++ x0), (a :: al = gv2 ++ x), (a :: al = gv2 ++ gv2), (a :: al = gv2 ++ al), (a :: al = al ++ x0), (a :: al = al ++ x), (a :: al = al ++ gv2), (a :: al = al ++ al), (a :: al = [])
(n :: x0 = x0), (n :: x0 = x), (n :: x0 = gv2), (n :: x0 = al), (n :: x0 = sort x0), (n :: x0 = sort x), (n :: x0 = sort gv2), (n :: x0 = sort al), (n :: x0 = insert a x0), (n :: x0 = insert a x)
(n :: x0 = insert a gv2), (n :: x0 = insert a al), (n :: x0 = insert n x0), (n :: x0 = insert n x), (n :: x0 = insert n gv2), (n :: x0 = insert n al), (n :: x0 = insert n0 x0), (n :: x0 = insert n0 x), (n :: x0 = insert n0 gv2), (n :: x0 = insert n0 al)
(n :: x0 = x0 ++ x0), (n :: x0 = x0 ++ x), (n :: x0 = x0 ++ gv2), (n :: x0 = x0 ++ al), (n :: x0 = x ++ x0), (n :: x0 = x ++ x), (n :: x0 = x ++ gv2), (n :: x0 = x ++ al), (n :: x0 = gv2 ++ x0), (n :: x0 = gv2 ++ x)
(n :: x0 = gv2 ++ gv2), (n :: x0 = gv2 ++ al), (n :: x0 = al ++ x0), (n :: x0 = al ++ x), (n :: x0 = al ++ gv2), (n :: x0 = al ++ al), (n :: x0 = []), (n :: x = x0), (n :: x = x), (n :: x = gv2)
(n :: x = al), (n :: x = sort x0), (n :: x = sort x), (n :: x = sort gv2), (n :: x = sort al), (n :: x = insert a x0), (n :: x = insert a x), (n :: x = insert a gv2), (n :: x = insert a al), (n :: x = insert n x0)
(n :: x = insert n x), (n :: x = insert n gv2), (n :: x = insert n al), (n :: x = insert n0 x0), (n :: x = insert n0 x), (n :: x = insert n0 gv2), (n :: x = insert n0 al), (n :: x = x0 ++ x0), (n :: x = x0 ++ x), (n :: x = x0 ++ gv2)
(n :: x = x0 ++ al), (n :: x = x ++ x0), (n :: x = x ++ x), (n :: x = x ++ gv2), (n :: x = x ++ al), (n :: x = gv2 ++ x0), (n :: x = gv2 ++ x), (n :: x = gv2 ++ gv2), (n :: x = gv2 ++ al), (n :: x = al ++ x0)
(n :: x = al ++ x), (n :: x = al ++ gv2), (n :: x = al ++ al), (n :: x = []), (n :: gv2 = x0), (n :: gv2 = x), (n :: gv2 = gv2), (n :: gv2 = al), (n :: gv2 = sort x0), (n :: gv2 = sort x)
(n :: gv2 = sort gv2), (n :: gv2 = sort al), (n :: gv2 = insert a x0), (n :: gv2 = insert a x), (n :: gv2 = insert a gv2), (n :: gv2 = insert a al), (n :: gv2 = insert n x0), (n :: gv2 = insert n x), (n :: gv2 = insert n gv2), (n :: gv2 = insert n al)
(n :: gv2 = insert n0 x0), (n :: gv2 = insert n0 x), (n :: gv2 = insert n0 gv2), (n :: gv2 = insert n0 al), (n :: gv2 = x0 ++ x0), (n :: gv2 = x0 ++ x), (n :: gv2 = x0 ++ gv2), (n :: gv2 = x0 ++ al), (n :: gv2 = x ++ x0), (n :: gv2 = x ++ x)
(n :: gv2 = x ++ gv2), (n :: gv2 = x ++ al), (n :: gv2 = gv2 ++ x0), (n :: gv2 = gv2 ++ x), (n :: gv2 = gv2 ++ gv2), (n :: gv2 = gv2 ++ al), (n :: gv2 = al ++ x0), (n :: gv2 = al ++ x), (n :: gv2 = al ++ gv2), (n :: gv2 = al ++ al)
(n :: gv2 = []), (n :: al = x0), (n :: al = x), (n :: al = gv2), (n :: al = al), (n :: al = sort x0), (n :: al = sort x), (n :: al = sort gv2), (n :: al = sort al), (n :: al = insert a x0)
(n :: al = insert a x), (n :: al = insert a gv2), (n :: al = insert a al), (n :: al = insert n x0), (n :: al = insert n x), (n :: al = insert n gv2), (n :: al = insert n al), (n :: al = insert n0 x0), (n :: al = insert n0 x), (n :: al = insert n0 gv2)
(n :: al = insert n0 al), (n :: al = x0 ++ x0), (n :: al = x0 ++ x), (n :: al = x0 ++ gv2), (n :: al = x0 ++ al), (n :: al = x ++ x0), (n :: al = x ++ x), (n :: al = x ++ gv2), (n :: al = x ++ al), (n :: al = gv2 ++ x0)
(n :: al = gv2 ++ x), (n :: al = gv2 ++ gv2), (n :: al = gv2 ++ al), (n :: al = al ++ x0), (n :: al = al ++ x), (n :: al = al ++ gv2), (n :: al = al ++ al), (n :: al = []), (n0 :: x0 = x0), (n0 :: x0 = x)
(n0 :: x0 = gv2), (n0 :: x0 = al), (n0 :: x0 = sort x0), (n0 :: x0 = sort x), (n0 :: x0 = sort gv2), (n0 :: x0 = sort al), (n0 :: x0 = insert a x0), (n0 :: x0 = insert a x), (n0 :: x0 = insert a gv2), (n0 :: x0 = insert a al)
(n0 :: x0 = insert n x0), (n0 :: x0 = insert n x), (n0 :: x0 = insert n gv2), (n0 :: x0 = insert n al), (n0 :: x0 = insert n0 x0), (n0 :: x0 = insert n0 x), (n0 :: x0 = insert n0 gv2), (n0 :: x0 = insert n0 al), (n0 :: x0 = x0 ++ x0), (n0 :: x0 = x0 ++ x)
(n0 :: x0 = x0 ++ gv2), (n0 :: x0 = x0 ++ al), (n0 :: x0 = x ++ x0), (n0 :: x0 = x ++ x), (n0 :: x0 = x ++ gv2), (n0 :: x0 = x ++ al), (n0 :: x0 = gv2 ++ x0), (n0 :: x0 = gv2 ++ x), (n0 :: x0 = gv2 ++ gv2), (n0 :: x0 = gv2 ++ al)
(n0 :: x0 = al ++ x0), (n0 :: x0 = al ++ x), (n0 :: x0 = al ++ gv2), (n0 :: x0 = al ++ al), (n0 :: x0 = []), (n0 :: x = x0), (n0 :: x = x), (n0 :: x = gv2), (n0 :: x = al), (n0 :: x = sort x0)
(n0 :: x = sort x), (n0 :: x = sort gv2), (n0 :: x = sort al), (n0 :: x = insert a x0), (n0 :: x = insert a x), (n0 :: x = insert a gv2), (n0 :: x = insert a al), (n0 :: x = insert n x0), (n0 :: x = insert n x), (n0 :: x = insert n gv2)
(n0 :: x = insert n al), (n0 :: x = insert n0 x0), (n0 :: x = insert n0 x), (n0 :: x = insert n0 gv2), (n0 :: x = insert n0 al), (n0 :: x = x0 ++ x0), (n0 :: x = x0 ++ x), (n0 :: x = x0 ++ gv2), (n0 :: x = x0 ++ al), (n0 :: x = x ++ x0)
(n0 :: x = x ++ x), (n0 :: x = x ++ gv2), (n0 :: x = x ++ al), (n0 :: x = gv2 ++ x0), (n0 :: x = gv2 ++ x), (n0 :: x = gv2 ++ gv2), (n0 :: x = gv2 ++ al), (n0 :: x = al ++ x0), (n0 :: x = al ++ x), (n0 :: x = al ++ gv2)
(n0 :: x = al ++ al), (n0 :: x = []), (n0 :: gv2 = x0), (n0 :: gv2 = x), (n0 :: gv2 = gv2), (n0 :: gv2 = al), (n0 :: gv2 = sort x0), (n0 :: gv2 = sort x), (n0 :: gv2 = sort gv2), (n0 :: gv2 = sort al)
(n0 :: gv2 = insert a x0), (n0 :: gv2 = insert a x), (n0 :: gv2 = insert a gv2), (n0 :: gv2 = insert a al), (n0 :: gv2 = insert n x0), (n0 :: gv2 = insert n x), (n0 :: gv2 = insert n gv2), (n0 :: gv2 = insert n al), (n0 :: gv2 = insert n0 x0), (n0 :: gv2 = insert n0 x)
(n0 :: gv2 = insert n0 gv2), (n0 :: gv2 = insert n0 al), (n0 :: gv2 = x0 ++ x0), (n0 :: gv2 = x0 ++ x), (n0 :: gv2 = x0 ++ gv2), (n0 :: gv2 = x0 ++ al), (n0 :: gv2 = x ++ x0), (n0 :: gv2 = x ++ x), (n0 :: gv2 = x ++ gv2), (n0 :: gv2 = x ++ al)
(n0 :: gv2 = gv2 ++ x0), (n0 :: gv2 = gv2 ++ x), (n0 :: gv2 = gv2 ++ gv2), (n0 :: gv2 = gv2 ++ al), (n0 :: gv2 = al ++ x0), (n0 :: gv2 = al ++ x), (n0 :: gv2 = al ++ gv2), (n0 :: gv2 = al ++ al), (n0 :: gv2 = []), (n0 :: al = x0)
(n0 :: al = x), (n0 :: al = gv2), (n0 :: al = al), (n0 :: al = sort x0), (n0 :: al = sort x), (n0 :: al = sort gv2), (n0 :: al = sort al), (n0 :: al = insert a x0), (n0 :: al = insert a x), (n0 :: al = insert a gv2)
(n0 :: al = insert a al), (n0 :: al = insert n x0), (n0 :: al = insert n x), (n0 :: al = insert n gv2), (n0 :: al = insert n al), (n0 :: al = insert n0 x0), (n0 :: al = insert n0 x), (n0 :: al = insert n0 gv2), (n0 :: al = insert n0 al), (n0 :: al = x0 ++ x0)
(n0 :: al = x0 ++ x), (n0 :: al = x0 ++ gv2), (n0 :: al = x0 ++ al), (n0 :: al = x ++ x0), (n0 :: al = x ++ x), (n0 :: al = x ++ gv2), (n0 :: al = x ++ al), (n0 :: al = gv2 ++ x0), (n0 :: al = gv2 ++ x), (n0 :: al = gv2 ++ gv2)
(n0 :: al = gv2 ++ al), (n0 :: al = al ++ x0), (n0 :: al = al ++ x), (n0 :: al = al ++ gv2), (n0 :: al = al ++ al), (n0 :: al = []), (sort x0 = x0), (sort x0 = x), (sort x0 = gv2), (sort x0 = al)
(sort x0 = insert a x0), (sort x0 = insert a x), (sort x0 = insert a gv2), (sort x0 = insert a al), (sort x0 = insert n x0), (sort x0 = insert n x), (sort x0 = insert n gv2), (sort x0 = insert n al), (sort x0 = insert n0 x0), (sort x0 = insert n0 x)
(sort x0 = insert n0 gv2), (sort x0 = insert n0 al), (sort x0 = x0 ++ x0), (sort x0 = x0 ++ x), (sort x0 = x0 ++ gv2), (sort x0 = x0 ++ al), (sort x0 = x ++ x0), (sort x0 = x ++ x), (sort x0 = x ++ gv2), (sort x0 = x ++ al)
(sort x0 = gv2 ++ x0), (sort x0 = gv2 ++ x), (sort x0 = gv2 ++ gv2), (sort x0 = gv2 ++ al), (sort x0 = al ++ x0), (sort x0 = al ++ x), (sort x0 = al ++ gv2), (sort x0 = al ++ al), (sort x = x0), (sort x = x)
(sort x = gv2), (sort x = al), (sort x = insert a x0), (sort x = insert a x), (sort x = insert a gv2), (sort x = insert a al), (sort x = insert n x0), (sort x = insert n x), (sort x = insert n gv2), (sort x = insert n al)
(sort x = insert n0 x0), (sort x = insert n0 x), (sort x = insert n0 gv2), (sort x = insert n0 al), (sort x = x0 ++ x0), (sort x = x0 ++ x), (sort x = x0 ++ gv2), (sort x = x0 ++ al), (sort x = x ++ x0), (sort x = x ++ x)
(sort x = x ++ gv2), (sort x = x ++ al), (sort x = gv2 ++ x0), (sort x = gv2 ++ x), (sort x = gv2 ++ gv2), (sort x = gv2 ++ al), (sort x = al ++ x0), (sort x = al ++ x), (sort x = al ++ gv2), (sort x = al ++ al)
(sort gv2 = x0), (sort gv2 = x), (sort gv2 = gv2), (sort gv2 = al), (sort gv2 = insert a x0), (sort gv2 = insert a x), (sort gv2 = insert a gv2), (sort gv2 = insert a al), (sort gv2 = insert n x0), (sort gv2 = insert n x)
(sort gv2 = insert n gv2), (sort gv2 = insert n al), (sort gv2 = insert n0 x0), (sort gv2 = insert n0 x), (sort gv2 = insert n0 gv2), (sort gv2 = insert n0 al), (sort gv2 = x0 ++ x0), (sort gv2 = x0 ++ x), (sort gv2 = x0 ++ gv2), (sort gv2 = x0 ++ al)
(sort gv2 = x ++ x0), (sort gv2 = x ++ x), (sort gv2 = x ++ gv2), (sort gv2 = x ++ al), (sort gv2 = gv2 ++ x0), (sort gv2 = gv2 ++ x), (sort gv2 = gv2 ++ gv2), (sort gv2 = gv2 ++ al), (sort gv2 = al ++ x0), (sort gv2 = al ++ x)
(sort gv2 = al ++ gv2), (sort gv2 = al ++ al), (sort al = x0), (sort al = x), (sort al = gv2), (sort al = al), (sort al = insert a x0), (sort al = insert a x), (sort al = insert a gv2), (sort al = insert a al)
(sort al = insert n x0), (sort al = insert n x), (sort al = insert n gv2), (sort al = insert n al), (sort al = insert n0 x0), (sort al = insert n0 x), (sort al = insert n0 gv2), (sort al = insert n0 al), (sort al = x0 ++ x0), (sort al = x0 ++ x)
(sort al = x0 ++ gv2), (sort al = x0 ++ al), (sort al = x ++ x0), (sort al = x ++ x), (sort al = x ++ gv2), (sort al = x ++ al), (sort al = gv2 ++ x0), (sort al = gv2 ++ x), (sort al = gv2 ++ gv2), (sort al = gv2 ++ al)
(sort al = al ++ x0), (sort al = al ++ x), (sort al = al ++ gv2), (sort al = al ++ al), (insert a x0 = x0), (insert a x0 = x), (insert a x0 = gv2), (insert a x0 = al), (insert a x0 = x0 ++ x0), (insert a x0 = x0 ++ x)
(insert a x0 = x0 ++ gv2), (insert a x0 = x0 ++ al), (insert a x0 = x ++ x0), (insert a x0 = x ++ x), (insert a x0 = x ++ gv2), (insert a x0 = x ++ al), (insert a x0 = gv2 ++ x0), (insert a x0 = gv2 ++ x), (insert a x0 = gv2 ++ gv2), (insert a x0 = gv2 ++ al)
(insert a x0 = al ++ x0), (insert a x0 = al ++ x), (insert a x0 = al ++ gv2), (insert a x0 = al ++ al), (insert a x = x0), (insert a x = x), (insert a x = gv2), (insert a x = al), (insert a x = x0 ++ x0), (insert a x = x0 ++ x)
(insert a x = x0 ++ gv2), (insert a x = x0 ++ al), (insert a x = x ++ x0), (insert a x = x ++ x), (insert a x = x ++ gv2), (insert a x = x ++ al), (insert a x = gv2 ++ x0), (insert a x = gv2 ++ x), (insert a x = gv2 ++ gv2), (insert a x = gv2 ++ al)
(insert a x = al ++ x0), (insert a x = al ++ x), (insert a x = al ++ gv2), (insert a x = al ++ al), (insert a gv2 = x0), (insert a gv2 = x), (insert a gv2 = gv2), (insert a gv2 = al), (insert a gv2 = x0 ++ x0), (insert a gv2 = x0 ++ x)
(insert a gv2 = x0 ++ gv2), (insert a gv2 = x0 ++ al), (insert a gv2 = x ++ x0), (insert a gv2 = x ++ x), (insert a gv2 = x ++ gv2), (insert a gv2 = x ++ al), (insert a gv2 = gv2 ++ x0), (insert a gv2 = gv2 ++ x), (insert a gv2 = gv2 ++ gv2), (insert a gv2 = gv2 ++ al)
(insert a gv2 = al ++ x0), (insert a gv2 = al ++ x), (insert a gv2 = al ++ gv2), (insert a gv2 = al ++ al), (insert a al = x0), (insert a al = x), (insert a al = gv2), (insert a al = al), (insert a al = x0 ++ x0), (insert a al = x0 ++ x)
(insert a al = x0 ++ gv2), (insert a al = x0 ++ al), (insert a al = x ++ x0), (insert a al = x ++ x), (insert a al = x ++ gv2), (insert a al = x ++ al), (insert a al = gv2 ++ x0), (insert a al = gv2 ++ x), (insert a al = gv2 ++ gv2), (insert a al = gv2 ++ al)
(insert a al = al ++ x0), (insert a al = al ++ x), (insert a al = al ++ gv2), (insert a al = al ++ al), (insert n x0 = x0), (insert n x0 = x), (insert n x0 = gv2), (insert n x0 = al), (insert n x0 = x0 ++ x0), (insert n x0 = x0 ++ x)
(insert n x0 = x0 ++ gv2), (insert n x0 = x0 ++ al), (insert n x0 = x ++ x0), (insert n x0 = x ++ x), (insert n x0 = x ++ gv2), (insert n x0 = x ++ al), (insert n x0 = gv2 ++ x0), (insert n x0 = gv2 ++ x), (insert n x0 = gv2 ++ gv2), (insert n x0 = gv2 ++ al)
(insert n x0 = al ++ x0), (insert n x0 = al ++ x), (insert n x0 = al ++ gv2), (insert n x0 = al ++ al), (insert n x = x0), (insert n x = x), (insert n x = gv2), (insert n x = al), (insert n x = x0 ++ x0), (insert n x = x0 ++ x)
(insert n x = x0 ++ gv2), (insert n x = x0 ++ al), (insert n x = x ++ x0), (insert n x = x ++ x), (insert n x = x ++ gv2), (insert n x = x ++ al), (insert n x = gv2 ++ x0), (insert n x = gv2 ++ x), (insert n x = gv2 ++ gv2), (insert n x = gv2 ++ al)
(insert n x = al ++ x0), (insert n x = al ++ x), (insert n x = al ++ gv2), (insert n x = al ++ al), (insert n gv2 = x0), (insert n gv2 = x), (insert n gv2 = gv2), (insert n gv2 = al), (insert n gv2 = x0 ++ x0), (insert n gv2 = x0 ++ x)
(insert n gv2 = x0 ++ gv2), (insert n gv2 = x0 ++ al), (insert n gv2 = x ++ x0), (insert n gv2 = x ++ x), (insert n gv2 = x ++ gv2), (insert n gv2 = x ++ al), (insert n gv2 = gv2 ++ x0), (insert n gv2 = gv2 ++ x), (insert n gv2 = gv2 ++ gv2), (insert n gv2 = gv2 ++ al)
(insert n gv2 = al ++ x0), (insert n gv2 = al ++ x), (insert n gv2 = al ++ gv2), (insert n gv2 = al ++ al), (insert n al = x0), (insert n al = x), (insert n al = gv2), (insert n al = al), (insert n al = x0 ++ x0), (insert n al = x0 ++ x)
(insert n al = x0 ++ gv2), (insert n al = x0 ++ al), (insert n al = x ++ x0), (insert n al = x ++ x), (insert n al = x ++ gv2), (insert n al = x ++ al), (insert n al = gv2 ++ x0), (insert n al = gv2 ++ x), (insert n al = gv2 ++ gv2), (insert n al = gv2 ++ al)
(insert n al = al ++ x0), (insert n al = al ++ x), (insert n al = al ++ gv2), (insert n al = al ++ al), (insert n0 x0 = x0), (insert n0 x0 = x), (insert n0 x0 = gv2), (insert n0 x0 = al), (insert n0 x0 = x0 ++ x0), (insert n0 x0 = x0 ++ x)
(insert n0 x0 = x0 ++ gv2), (insert n0 x0 = x0 ++ al), (insert n0 x0 = x ++ x0), (insert n0 x0 = x ++ x), (insert n0 x0 = x ++ gv2), (insert n0 x0 = x ++ al), (insert n0 x0 = gv2 ++ x0), (insert n0 x0 = gv2 ++ x), (insert n0 x0 = gv2 ++ gv2), (insert n0 x0 = gv2 ++ al)
(insert n0 x0 = al ++ x0), (insert n0 x0 = al ++ x), (insert n0 x0 = al ++ gv2), (insert n0 x0 = al ++ al), (insert n0 x = x0), (insert n0 x = x), (insert n0 x = gv2), (insert n0 x = al), (insert n0 x = x0 ++ x0), (insert n0 x = x0 ++ x)
(insert n0 x = x0 ++ gv2), (insert n0 x = x0 ++ al), (insert n0 x = x ++ x0), (insert n0 x = x ++ x), (insert n0 x = x ++ gv2), (insert n0 x = x ++ al), (insert n0 x = gv2 ++ x0), (insert n0 x = gv2 ++ x), (insert n0 x = gv2 ++ gv2), (insert n0 x = gv2 ++ al)
(insert n0 x = al ++ x0), (insert n0 x = al ++ x), (insert n0 x = al ++ gv2), (insert n0 x = al ++ al), (insert n0 gv2 = x0), (insert n0 gv2 = x), (insert n0 gv2 = gv2), (insert n0 gv2 = al), (insert n0 gv2 = x0 ++ x0), (insert n0 gv2 = x0 ++ x)
(insert n0 gv2 = x0 ++ gv2), (insert n0 gv2 = x0 ++ al), (insert n0 gv2 = x ++ x0), (insert n0 gv2 = x ++ x), (insert n0 gv2 = x ++ gv2), (insert n0 gv2 = x ++ al), (insert n0 gv2 = gv2 ++ x0), (insert n0 gv2 = gv2 ++ x), (insert n0 gv2 = gv2 ++ gv2), (insert n0 gv2 = gv2 ++ al)
(insert n0 gv2 = al ++ x0), (insert n0 gv2 = al ++ x), (insert n0 gv2 = al ++ gv2), (insert n0 gv2 = al ++ al), (insert n0 al = x0), (insert n0 al = x), (insert n0 al = gv2), (insert n0 al = al), (insert n0 al = x0 ++ x0), (insert n0 al = x0 ++ x)
(insert n0 al = x0 ++ gv2), (insert n0 al = x0 ++ al), (insert n0 al = x ++ x0), (insert n0 al = x ++ x), (insert n0 al = x ++ gv2), (insert n0 al = x ++ al), (insert n0 al = gv2 ++ x0), (insert n0 al = gv2 ++ x), (insert n0 al = gv2 ++ gv2), (insert n0 al = gv2 ++ al)
(insert n0 al = al ++ x0), (insert n0 al = al ++ x), (insert n0 al = al ++ gv2), (insert n0 al = al ++ al), (x0 ++ x0 = x0), (x0 ++ x0 = x), (x0 ++ x0 = gv2), (x0 ++ x0 = al), (x0 ++ x = x0), (x0 ++ x = x)
(x0 ++ x = gv2), (x0 ++ x = al), (x0 ++ gv2 = x0), (x0 ++ gv2 = x), (x0 ++ gv2 = gv2), (x0 ++ gv2 = al), (x0 ++ al = x0), (x0 ++ al = x), (x0 ++ al = gv2), (x0 ++ al = al)
(x ++ x0 = x0), (x ++ x0 = x), (x ++ x0 = gv2), (x ++ x0 = al), (x ++ x = x0), (x ++ x = x), (x ++ x = gv2), (x ++ x = al), (x ++ gv2 = x0), (x ++ gv2 = x)
(x ++ gv2 = gv2), (x ++ gv2 = al), (x ++ al = x0), (x ++ al = x), (x ++ al = gv2), (x ++ al = al), (gv2 ++ x0 = x0), (gv2 ++ x0 = x), (gv2 ++ x0 = gv2), (gv2 ++ x0 = al)
(gv2 ++ x = x0), (gv2 ++ x = x), (gv2 ++ x = gv2), (gv2 ++ x = al), (gv2 ++ gv2 = x0), (gv2 ++ gv2 = x), (gv2 ++ gv2 = gv2), (gv2 ++ gv2 = al), (gv2 ++ al = x0), (gv2 ++ al = x)
(gv2 ++ al = gv2), (gv2 ++ al = al), (al ++ x0 = x0), (al ++ x0 = x), (al ++ x0 = gv2), (al ++ x0 = al), (al ++ x = x0), (al ++ x = x), (al ++ x = gv2), (al ++ x = al)
(al ++ gv2 = x0), (al ++ gv2 = x), (al ++ gv2 = gv2), (al ++ gv2 = al), (al ++ al = x0), (al ++ al = x), (al ++ al = gv2), (al ++ al = al), ([] = x0), ([] = x)
([] = gv2), ([] = al), ([] = sort x0), ([] = sort x), ([] = sort gv2), ([] = sort al), ([] = insert a x0), ([] = insert a x), ([] = insert a gv2), ([] = insert a al)
([] = insert n x0), ([] = insert n x), ([] = insert n gv2), ([] = insert n al), ([] = insert n0 x0), ([] = insert n0 x), ([] = insert n0 gv2), ([] = insert n0 al), ([] = x0 ++ x0), ([] = x0 ++ x)
([] = x0 ++ gv2), ([] = x0 ++ al), ([] = x ++ x0), ([] = x ++ x), ([] = x ++ gv2), ([] = x ++ al), ([] = gv2 ++ x0), ([] = gv2 ++ x), ([] = gv2 ++ gv2), ([] = gv2 ++ al)
([] = al ++ x0), ([] = al ++ x), ([] = al ++ gv2), ([] = al ++ al), (None = Some a), (None = Some n), (None = Some n0), (length x0 = a), (length x0 = n), (length x0 = n0)
(length x = a), (length x = n), (length x = n0), (length gv2 = a), (length gv2 = n), (length gv2 = n0), (length al = a), (length al = n), (length al = n0)

Label: 2 (2)
(n < n), (n < a), (n < gv1), (n < n0), (a < n), (a < a), (a < gv1), (a < n0), (gv1 < n), (gv1 < a)
(gv1 < gv1), (gv1 < n0), (n0 < n), (n0 < a), (n0 < gv1), (n0 < n0), (n <= n), (n <= a), (n <= gv1), (n <= n0)
(a <= n), (a <= a), (a <= gv1), (a <= n0), (gv1 <= n), (gv1 <= a), (gv1 <= gv1), (gv1 <= n0), (n0 <= n), (n0 <= a)
(n0 <= gv1), (n0 <= n0), (x0 = x0), (x0 = x), (x0 = al), (x = x0), (x = x), (x = al), (al = x0), (al = x)
(al = al), (n = n), (n = a), (n = gv1), (n = n0), (a = n), (a = a), (a = gv1), (a = n0), (gv1 = n)
(gv1 = a), (gv1 = gv1), (gv1 = n0), (n0 = n), (n0 = a), (n0 = gv1), (n0 = n0), (n < length x0), (n < length x), (n < length al)
(a < length x0), (a < length x), (a < length al), (gv1 < length x0), (gv1 < length x), (gv1 < length al), (n0 < length x0), (n0 < length x), (n0 < length al), (length x0 < n)
(length x0 < a), (length x0 < gv1), (length x0 < n0), (length x0 < length x), (length x0 < length al), (length x < n), (length x < a), (length x < gv1), (length x < n0), (length x < length x0)
(length x < length al), (length al < n), (length al < a), (length al < gv1), (length al < n0), (length al < length x0), (length al < length x), (n <= length x0), (n <= length x), (n <= length al)
(a <= length x0), (a <= length x), (a <= length al), (gv1 <= length x0), (gv1 <= length x), (gv1 <= length al), (n0 <= length x0), (n0 <= length x), (n0 <= length al), (length x0 <= n)
(length x0 <= a), (length x0 <= gv1), (length x0 <= n0), (length x0 <= length x), (length x0 <= length al), (length x <= n), (length x <= a), (length x <= gv1), (length x <= n0), (length x <= length x0)
(length x <= length al), (length al <= n), (length al <= a), (length al <= gv1), (length al <= n0), (length al <= length x0), (length al <= length x), (~ n < n), (~ n < a), (~ n < gv1)
(~ n < n0), (~ a < n), (~ a < a), (~ a < gv1), (~ a < n0), (~ gv1 < n), (~ gv1 < a), (~ gv1 < gv1), (~ gv1 < n0), (~ n0 < n)
(~ n0 < a), (~ n0 < gv1), (~ n0 < n0), (~ n <= n), (~ n <= a), (~ n <= gv1), (~ n <= n0), (~ a <= n), (~ a <= a), (~ a <= gv1)
(~ a <= n0), (~ gv1 <= n), (~ gv1 <= a), (~ gv1 <= gv1), (~ gv1 <= n0), (~ n0 <= n), (~ n0 <= a), (~ n0 <= gv1), (~ n0 <= n0), (x0 <> x0)
(x0 <> x), (x0 <> al), (x <> x0), (x <> x), (x <> al), (al <> x0), (al <> x), (al <> al), (n <> n), (n <> a)
(n <> gv1), (n <> n0), (a <> n), (a <> a), (a <> gv1), (a <> n0), (gv1 <> n), (gv1 <> a), (gv1 <> gv1), (gv1 <> n0)
(n0 <> n), (n0 <> a), (n0 <> gv1), (n0 <> n0), (None = Some x0), (None = Some x), (None = Some al), (n :: x0 = x0), (n :: x0 = x), (n :: x0 = al)
(n :: x0 = sort x0), (n :: x0 = sort x), (n :: x0 = sort al), (n :: x0 = insert n x0), (n :: x0 = insert n x), (n :: x0 = insert n al), (n :: x0 = insert a x0), (n :: x0 = insert a x), (n :: x0 = insert a al), (n :: x0 = insert gv1 x0)
(n :: x0 = insert gv1 x), (n :: x0 = insert gv1 al), (n :: x0 = insert n0 x0), (n :: x0 = insert n0 x), (n :: x0 = insert n0 al), (n :: x0 = x0 ++ x0), (n :: x0 = x0 ++ x), (n :: x0 = x0 ++ al), (n :: x0 = x ++ x0), (n :: x0 = x ++ x)
(n :: x0 = x ++ al), (n :: x0 = al ++ x0), (n :: x0 = al ++ x), (n :: x0 = al ++ al), (n :: x0 = []), (n :: x = x0), (n :: x = x), (n :: x = al), (n :: x = sort x0), (n :: x = sort x)
(n :: x = sort al), (n :: x = insert n x0), (n :: x = insert n x), (n :: x = insert n al), (n :: x = insert a x0), (n :: x = insert a x), (n :: x = insert a al), (n :: x = insert gv1 x0), (n :: x = insert gv1 x), (n :: x = insert gv1 al)
(n :: x = insert n0 x0), (n :: x = insert n0 x), (n :: x = insert n0 al), (n :: x = x0 ++ x0), (n :: x = x0 ++ x), (n :: x = x0 ++ al), (n :: x = x ++ x0), (n :: x = x ++ x), (n :: x = x ++ al), (n :: x = al ++ x0)
(n :: x = al ++ x), (n :: x = al ++ al), (n :: x = []), (n :: al = x0), (n :: al = x), (n :: al = al), (n :: al = sort x0), (n :: al = sort x), (n :: al = sort al), (n :: al = insert n x0)
(n :: al = insert n x), (n :: al = insert n al), (n :: al = insert a x0), (n :: al = insert a x), (n :: al = insert a al), (n :: al = insert gv1 x0), (n :: al = insert gv1 x), (n :: al = insert gv1 al), (n :: al = insert n0 x0), (n :: al = insert n0 x)
(n :: al = insert n0 al), (n :: al = x0 ++ x0), (n :: al = x0 ++ x), (n :: al = x0 ++ al), (n :: al = x ++ x0), (n :: al = x ++ x), (n :: al = x ++ al), (n :: al = al ++ x0), (n :: al = al ++ x), (n :: al = al ++ al)
(n :: al = []), (a :: x0 = x0), (a :: x0 = x), (a :: x0 = al), (a :: x0 = sort x0), (a :: x0 = sort x), (a :: x0 = sort al), (a :: x0 = insert n x0), (a :: x0 = insert n x), (a :: x0 = insert n al)
(a :: x0 = insert a x0), (a :: x0 = insert a x), (a :: x0 = insert a al), (a :: x0 = insert gv1 x0), (a :: x0 = insert gv1 x), (a :: x0 = insert gv1 al), (a :: x0 = insert n0 x0), (a :: x0 = insert n0 x), (a :: x0 = insert n0 al), (a :: x0 = x0 ++ x0)
(a :: x0 = x0 ++ x), (a :: x0 = x0 ++ al), (a :: x0 = x ++ x0), (a :: x0 = x ++ x), (a :: x0 = x ++ al), (a :: x0 = al ++ x0), (a :: x0 = al ++ x), (a :: x0 = al ++ al), (a :: x0 = []), (a :: x = x0)
(a :: x = x), (a :: x = al), (a :: x = sort x0), (a :: x = sort x), (a :: x = sort al), (a :: x = insert n x0), (a :: x = insert n x), (a :: x = insert n al), (a :: x = insert a x0), (a :: x = insert a x)
(a :: x = insert a al), (a :: x = insert gv1 x0), (a :: x = insert gv1 x), (a :: x = insert gv1 al), (a :: x = insert n0 x0), (a :: x = insert n0 x), (a :: x = insert n0 al), (a :: x = x0 ++ x0), (a :: x = x0 ++ x), (a :: x = x0 ++ al)
(a :: x = x ++ x0), (a :: x = x ++ x), (a :: x = x ++ al), (a :: x = al ++ x0), (a :: x = al ++ x), (a :: x = al ++ al), (a :: x = []), (a :: al = x0), (a :: al = x), (a :: al = al)
(a :: al = sort x0), (a :: al = sort x), (a :: al = sort al), (a :: al = insert n x0), (a :: al = insert n x), (a :: al = insert n al), (a :: al = insert a x0), (a :: al = insert a x), (a :: al = insert a al), (a :: al = insert gv1 x0)
(a :: al = insert gv1 x), (a :: al = insert gv1 al), (a :: al = insert n0 x0), (a :: al = insert n0 x), (a :: al = insert n0 al), (a :: al = x0 ++ x0), (a :: al = x0 ++ x), (a :: al = x0 ++ al), (a :: al = x ++ x0), (a :: al = x ++ x)
(a :: al = x ++ al), (a :: al = al ++ x0), (a :: al = al ++ x), (a :: al = al ++ al), (a :: al = []), (gv1 :: x0 = x0), (gv1 :: x0 = x), (gv1 :: x0 = al), (gv1 :: x0 = sort x0), (gv1 :: x0 = sort x)
(gv1 :: x0 = sort al), (gv1 :: x0 = insert n x0), (gv1 :: x0 = insert n x), (gv1 :: x0 = insert n al), (gv1 :: x0 = insert a x0), (gv1 :: x0 = insert a x), (gv1 :: x0 = insert a al), (gv1 :: x0 = insert gv1 x0), (gv1 :: x0 = insert gv1 x), (gv1 :: x0 = insert gv1 al)
(gv1 :: x0 = insert n0 x0), (gv1 :: x0 = insert n0 x), (gv1 :: x0 = insert n0 al), (gv1 :: x0 = x0 ++ x0), (gv1 :: x0 = x0 ++ x), (gv1 :: x0 = x0 ++ al), (gv1 :: x0 = x ++ x0), (gv1 :: x0 = x ++ x), (gv1 :: x0 = x ++ al), (gv1 :: x0 = al ++ x0)
(gv1 :: x0 = al ++ x), (gv1 :: x0 = al ++ al), (gv1 :: x0 = []), (gv1 :: x = x0), (gv1 :: x = x), (gv1 :: x = al), (gv1 :: x = sort x0), (gv1 :: x = sort x), (gv1 :: x = sort al), (gv1 :: x = insert n x0)
(gv1 :: x = insert n x), (gv1 :: x = insert n al), (gv1 :: x = insert a x0), (gv1 :: x = insert a x), (gv1 :: x = insert a al), (gv1 :: x = insert gv1 x0), (gv1 :: x = insert gv1 x), (gv1 :: x = insert gv1 al), (gv1 :: x = insert n0 x0), (gv1 :: x = insert n0 x)
(gv1 :: x = insert n0 al), (gv1 :: x = x0 ++ x0), (gv1 :: x = x0 ++ x), (gv1 :: x = x0 ++ al), (gv1 :: x = x ++ x0), (gv1 :: x = x ++ x), (gv1 :: x = x ++ al), (gv1 :: x = al ++ x0), (gv1 :: x = al ++ x), (gv1 :: x = al ++ al)
(gv1 :: x = []), (gv1 :: al = x0), (gv1 :: al = x), (gv1 :: al = al), (gv1 :: al = sort x0), (gv1 :: al = sort x), (gv1 :: al = sort al), (gv1 :: al = insert n x0), (gv1 :: al = insert n x), (gv1 :: al = insert n al)
(gv1 :: al = insert a x0), (gv1 :: al = insert a x), (gv1 :: al = insert a al), (gv1 :: al = insert gv1 x0), (gv1 :: al = insert gv1 x), (gv1 :: al = insert gv1 al), (gv1 :: al = insert n0 x0), (gv1 :: al = insert n0 x), (gv1 :: al = insert n0 al), (gv1 :: al = x0 ++ x0)
(gv1 :: al = x0 ++ x), (gv1 :: al = x0 ++ al), (gv1 :: al = x ++ x0), (gv1 :: al = x ++ x), (gv1 :: al = x ++ al), (gv1 :: al = al ++ x0), (gv1 :: al = al ++ x), (gv1 :: al = al ++ al), (gv1 :: al = []), (n0 :: x0 = x0)
(n0 :: x0 = x), (n0 :: x0 = al), (n0 :: x0 = sort x0), (n0 :: x0 = sort x), (n0 :: x0 = sort al), (n0 :: x0 = insert n x0), (n0 :: x0 = insert n x), (n0 :: x0 = insert n al), (n0 :: x0 = insert a x0), (n0 :: x0 = insert a x)
(n0 :: x0 = insert a al), (n0 :: x0 = insert gv1 x0), (n0 :: x0 = insert gv1 x), (n0 :: x0 = insert gv1 al), (n0 :: x0 = insert n0 x0), (n0 :: x0 = insert n0 x), (n0 :: x0 = insert n0 al), (n0 :: x0 = x0 ++ x0), (n0 :: x0 = x0 ++ x), (n0 :: x0 = x0 ++ al)
(n0 :: x0 = x ++ x0), (n0 :: x0 = x ++ x), (n0 :: x0 = x ++ al), (n0 :: x0 = al ++ x0), (n0 :: x0 = al ++ x), (n0 :: x0 = al ++ al), (n0 :: x0 = []), (n0 :: x = x0), (n0 :: x = x), (n0 :: x = al)
(n0 :: x = sort x0), (n0 :: x = sort x), (n0 :: x = sort al), (n0 :: x = insert n x0), (n0 :: x = insert n x), (n0 :: x = insert n al), (n0 :: x = insert a x0), (n0 :: x = insert a x), (n0 :: x = insert a al), (n0 :: x = insert gv1 x0)
(n0 :: x = insert gv1 x), (n0 :: x = insert gv1 al), (n0 :: x = insert n0 x0), (n0 :: x = insert n0 x), (n0 :: x = insert n0 al), (n0 :: x = x0 ++ x0), (n0 :: x = x0 ++ x), (n0 :: x = x0 ++ al), (n0 :: x = x ++ x0), (n0 :: x = x ++ x)
(n0 :: x = x ++ al), (n0 :: x = al ++ x0), (n0 :: x = al ++ x), (n0 :: x = al ++ al), (n0 :: x = []), (n0 :: al = x0), (n0 :: al = x), (n0 :: al = al), (n0 :: al = sort x0), (n0 :: al = sort x)
(n0 :: al = sort al), (n0 :: al = insert n x0), (n0 :: al = insert n x), (n0 :: al = insert n al), (n0 :: al = insert a x0), (n0 :: al = insert a x), (n0 :: al = insert a al), (n0 :: al = insert gv1 x0), (n0 :: al = insert gv1 x), (n0 :: al = insert gv1 al)
(n0 :: al = insert n0 x0), (n0 :: al = insert n0 x), (n0 :: al = insert n0 al), (n0 :: al = x0 ++ x0), (n0 :: al = x0 ++ x), (n0 :: al = x0 ++ al), (n0 :: al = x ++ x0), (n0 :: al = x ++ x), (n0 :: al = x ++ al), (n0 :: al = al ++ x0)
(n0 :: al = al ++ x), (n0 :: al = al ++ al), (n0 :: al = []), (sort x0 = x0), (sort x0 = x), (sort x0 = al), (sort x0 = insert n x0), (sort x0 = insert n x), (sort x0 = insert n al), (sort x0 = insert a x0)
(sort x0 = insert a x), (sort x0 = insert a al), (sort x0 = insert gv1 x0), (sort x0 = insert gv1 x), (sort x0 = insert gv1 al), (sort x0 = insert n0 x0), (sort x0 = insert n0 x), (sort x0 = insert n0 al), (sort x0 = x0 ++ x0), (sort x0 = x0 ++ x)
(sort x0 = x0 ++ al), (sort x0 = x ++ x0), (sort x0 = x ++ x), (sort x0 = x ++ al), (sort x0 = al ++ x0), (sort x0 = al ++ x), (sort x0 = al ++ al), (sort x = x0), (sort x = x), (sort x = al)
(sort x = insert n x0), (sort x = insert n x), (sort x = insert n al), (sort x = insert a x0), (sort x = insert a x), (sort x = insert a al), (sort x = insert gv1 x0), (sort x = insert gv1 x), (sort x = insert gv1 al), (sort x = insert n0 x0)
(sort x = insert n0 x), (sort x = insert n0 al), (sort x = x0 ++ x0), (sort x = x0 ++ x), (sort x = x0 ++ al), (sort x = x ++ x0), (sort x = x ++ x), (sort x = x ++ al), (sort x = al ++ x0), (sort x = al ++ x)
(sort x = al ++ al), (sort al = x0), (sort al = x), (sort al = al), (sort al = insert n x0), (sort al = insert n x), (sort al = insert n al), (sort al = insert a x0), (sort al = insert a x), (sort al = insert a al)
(sort al = insert gv1 x0), (sort al = insert gv1 x), (sort al = insert gv1 al), (sort al = insert n0 x0), (sort al = insert n0 x), (sort al = insert n0 al), (sort al = x0 ++ x0), (sort al = x0 ++ x), (sort al = x0 ++ al), (sort al = x ++ x0)
(sort al = x ++ x), (sort al = x ++ al), (sort al = al ++ x0), (sort al = al ++ x), (sort al = al ++ al), (insert n x0 = x0), (insert n x0 = x), (insert n x0 = al), (insert n x0 = x0 ++ x0), (insert n x0 = x0 ++ x)
(insert n x0 = x0 ++ al), (insert n x0 = x ++ x0), (insert n x0 = x ++ x), (insert n x0 = x ++ al), (insert n x0 = al ++ x0), (insert n x0 = al ++ x), (insert n x0 = al ++ al), (insert n x = x0), (insert n x = x), (insert n x = al)
(insert n x = x0 ++ x0), (insert n x = x0 ++ x), (insert n x = x0 ++ al), (insert n x = x ++ x0), (insert n x = x ++ x), (insert n x = x ++ al), (insert n x = al ++ x0), (insert n x = al ++ x), (insert n x = al ++ al), (insert n al = x0)
(insert n al = x), (insert n al = al), (insert n al = x0 ++ x0), (insert n al = x0 ++ x), (insert n al = x0 ++ al), (insert n al = x ++ x0), (insert n al = x ++ x), (insert n al = x ++ al), (insert n al = al ++ x0), (insert n al = al ++ x)
(insert n al = al ++ al), (insert a x0 = x0), (insert a x0 = x), (insert a x0 = al), (insert a x0 = x0 ++ x0), (insert a x0 = x0 ++ x), (insert a x0 = x0 ++ al), (insert a x0 = x ++ x0), (insert a x0 = x ++ x), (insert a x0 = x ++ al)
(insert a x0 = al ++ x0), (insert a x0 = al ++ x), (insert a x0 = al ++ al), (insert a x = x0), (insert a x = x), (insert a x = al), (insert a x = x0 ++ x0), (insert a x = x0 ++ x), (insert a x = x0 ++ al), (insert a x = x ++ x0)
(insert a x = x ++ x), (insert a x = x ++ al), (insert a x = al ++ x0), (insert a x = al ++ x), (insert a x = al ++ al), (insert a al = x0), (insert a al = x), (insert a al = al), (insert a al = x0 ++ x0), (insert a al = x0 ++ x)
(insert a al = x0 ++ al), (insert a al = x ++ x0), (insert a al = x ++ x), (insert a al = x ++ al), (insert a al = al ++ x0), (insert a al = al ++ x), (insert a al = al ++ al), (insert gv1 x0 = x0), (insert gv1 x0 = x), (insert gv1 x0 = al)
(insert gv1 x0 = x0 ++ x0), (insert gv1 x0 = x0 ++ x), (insert gv1 x0 = x0 ++ al), (insert gv1 x0 = x ++ x0), (insert gv1 x0 = x ++ x), (insert gv1 x0 = x ++ al), (insert gv1 x0 = al ++ x0), (insert gv1 x0 = al ++ x), (insert gv1 x0 = al ++ al), (insert gv1 x = x0)
(insert gv1 x = x), (insert gv1 x = al), (insert gv1 x = x0 ++ x0), (insert gv1 x = x0 ++ x), (insert gv1 x = x0 ++ al), (insert gv1 x = x ++ x0), (insert gv1 x = x ++ x), (insert gv1 x = x ++ al), (insert gv1 x = al ++ x0), (insert gv1 x = al ++ x)
(insert gv1 x = al ++ al), (insert gv1 al = x0), (insert gv1 al = x), (insert gv1 al = al), (insert gv1 al = x0 ++ x0), (insert gv1 al = x0 ++ x), (insert gv1 al = x0 ++ al), (insert gv1 al = x ++ x0), (insert gv1 al = x ++ x), (insert gv1 al = x ++ al)
(insert gv1 al = al ++ x0), (insert gv1 al = al ++ x), (insert gv1 al = al ++ al), (insert n0 x0 = x0), (insert n0 x0 = x), (insert n0 x0 = al), (insert n0 x0 = x0 ++ x0), (insert n0 x0 = x0 ++ x), (insert n0 x0 = x0 ++ al), (insert n0 x0 = x ++ x0)
(insert n0 x0 = x ++ x), (insert n0 x0 = x ++ al), (insert n0 x0 = al ++ x0), (insert n0 x0 = al ++ x), (insert n0 x0 = al ++ al), (insert n0 x = x0), (insert n0 x = x), (insert n0 x = al), (insert n0 x = x0 ++ x0), (insert n0 x = x0 ++ x)
(insert n0 x = x0 ++ al), (insert n0 x = x ++ x0), (insert n0 x = x ++ x), (insert n0 x = x ++ al), (insert n0 x = al ++ x0), (insert n0 x = al ++ x), (insert n0 x = al ++ al), (insert n0 al = x0), (insert n0 al = x), (insert n0 al = al)
(insert n0 al = x0 ++ x0), (insert n0 al = x0 ++ x), (insert n0 al = x0 ++ al), (insert n0 al = x ++ x0), (insert n0 al = x ++ x), (insert n0 al = x ++ al), (insert n0 al = al ++ x0), (insert n0 al = al ++ x), (insert n0 al = al ++ al), (x0 ++ x0 = x0)
(x0 ++ x0 = x), (x0 ++ x0 = al), (x0 ++ x = x0), (x0 ++ x = x), (x0 ++ x = al), (x0 ++ al = x0), (x0 ++ al = x), (x0 ++ al = al), (x ++ x0 = x0), (x ++ x0 = x)
(x ++ x0 = al), (x ++ x = x0), (x ++ x = x), (x ++ x = al), (x ++ al = x0), (x ++ al = x), (x ++ al = al), (al ++ x0 = x0), (al ++ x0 = x), (al ++ x0 = al)
(al ++ x = x0), (al ++ x = x), (al ++ x = al), (al ++ al = x0), (al ++ al = x), (al ++ al = al), ([] = x0), ([] = x), ([] = al), ([] = sort x0)
([] = sort x), ([] = sort al), ([] = insert n x0), ([] = insert n x), ([] = insert n al), ([] = insert a x0), ([] = insert a x), ([] = insert a al), ([] = insert gv1 x0), ([] = insert gv1 x)
([] = insert gv1 al), ([] = insert n0 x0), ([] = insert n0 x), ([] = insert n0 al), ([] = x0 ++ x0), ([] = x0 ++ x), ([] = x0 ++ al), ([] = x ++ x0), ([] = x ++ x), ([] = x ++ al)
([] = al ++ x0), ([] = al ++ x), ([] = al ++ al), (None = Some n), (None = Some a), (None = Some gv1), (None = Some n0), (length x0 = n), (length x0 = a), (length x0 = gv1)
(length x0 = n0), (length x = n), (length x = a), (length x = gv1), (length x = n0), (length al = n), (length al = a), (length al = gv1), (length al = n0)

Label: 3 (3)
(n < n), (n < a), (n < n0), (a < n), (a < a), (a < n0), (n0 < n), (n0 < a), (n0 < n0), (n <= n)
(n <= a), (n <= n0), (a <= n), (a <= a), (a <= n0), (n0 <= n), (n0 <= a), (n0 <= n0), (x = x), (x = x0)
(x = gv3), (x = al), (x0 = x), (x0 = x0), (x0 = gv3), (x0 = al), (gv3 = x), (gv3 = x0), (gv3 = gv3), (gv3 = al)
(al = x), (al = x0), (al = gv3), (al = al), (n = n), (n = a), (n = n0), (a = n), (a = a), (a = n0)
(n0 = n), (n0 = a), (n0 = n0), (n < length x), (n < length x0), (n < length gv3), (n < length al), (a < length x), (a < length x0), (a < length gv3)
(a < length al), (n0 < length x), (n0 < length x0), (n0 < length gv3), (n0 < length al), (length x < n), (length x < a), (length x < n0), (length x < length x0), (length x < length gv3)
(length x < length al), (length x0 < n), (length x0 < a), (length x0 < n0), (length x0 < length x), (length x0 < length gv3), (length x0 < length al), (length gv3 < n), (length gv3 < a), (length gv3 < n0)
(length gv3 < length x), (length gv3 < length x0), (length gv3 < length al), (length al < n), (length al < a), (length al < n0), (length al < length x), (length al < length x0), (length al < length gv3), (n <= length x)
(n <= length x0), (n <= length gv3), (n <= length al), (a <= length x), (a <= length x0), (a <= length gv3), (a <= length al), (n0 <= length x), (n0 <= length x0), (n0 <= length gv3)
(n0 <= length al), (length x <= n), (length x <= a), (length x <= n0), (length x <= length x0), (length x <= length gv3), (length x <= length al), (length x0 <= n), (length x0 <= a), (length x0 <= n0)
(length x0 <= length x), (length x0 <= length gv3), (length x0 <= length al), (length gv3 <= n), (length gv3 <= a), (length gv3 <= n0), (length gv3 <= length x), (length gv3 <= length x0), (length gv3 <= length al), (length al <= n)
(length al <= a), (length al <= n0), (length al <= length x), (length al <= length x0), (length al <= length gv3), (~ n < n), (~ n < a), (~ n < n0), (~ a < n), (~ a < a)
(~ a < n0), (~ n0 < n), (~ n0 < a), (~ n0 < n0), (~ n <= n), (~ n <= a), (~ n <= n0), (~ a <= n), (~ a <= a), (~ a <= n0)
(~ n0 <= n), (~ n0 <= a), (~ n0 <= n0), (x <> x), (x <> x0), (x <> gv3), (x <> al), (x0 <> x), (x0 <> x0), (x0 <> gv3)
(x0 <> al), (gv3 <> x), (gv3 <> x0), (gv3 <> gv3), (gv3 <> al), (al <> x), (al <> x0), (al <> gv3), (al <> al), (n <> n)
(n <> a), (n <> n0), (a <> n), (a <> a), (a <> n0), (n0 <> n), (n0 <> a), (n0 <> n0), (None = Some x), (None = Some x0)
(None = Some gv3), (None = Some al), (n :: x = x), (n :: x = x0), (n :: x = gv3), (n :: x = al), (n :: x = sort x), (n :: x = sort x0), (n :: x = sort gv3), (n :: x = sort al)
(n :: x = insert n x), (n :: x = insert n x0), (n :: x = insert n gv3), (n :: x = insert n al), (n :: x = insert a x), (n :: x = insert a x0), (n :: x = insert a gv3), (n :: x = insert a al), (n :: x = insert n0 x), (n :: x = insert n0 x0)
(n :: x = insert n0 gv3), (n :: x = insert n0 al), (n :: x = x ++ x), (n :: x = x ++ x0), (n :: x = x ++ gv3), (n :: x = x ++ al), (n :: x = x0 ++ x), (n :: x = x0 ++ x0), (n :: x = x0 ++ gv3), (n :: x = x0 ++ al)
(n :: x = gv3 ++ x), (n :: x = gv3 ++ x0), (n :: x = gv3 ++ gv3), (n :: x = gv3 ++ al), (n :: x = al ++ x), (n :: x = al ++ x0), (n :: x = al ++ gv3), (n :: x = al ++ al), (n :: x = []), (n :: x0 = x)
(n :: x0 = x0), (n :: x0 = gv3), (n :: x0 = al), (n :: x0 = sort x), (n :: x0 = sort x0), (n :: x0 = sort gv3), (n :: x0 = sort al), (n :: x0 = insert n x), (n :: x0 = insert n x0), (n :: x0 = insert n gv3)
(n :: x0 = insert n al), (n :: x0 = insert a x), (n :: x0 = insert a x0), (n :: x0 = insert a gv3), (n :: x0 = insert a al), (n :: x0 = insert n0 x), (n :: x0 = insert n0 x0), (n :: x0 = insert n0 gv3), (n :: x0 = insert n0 al), (n :: x0 = x ++ x)
(n :: x0 = x ++ x0), (n :: x0 = x ++ gv3), (n :: x0 = x ++ al), (n :: x0 = x0 ++ x), (n :: x0 = x0 ++ x0), (n :: x0 = x0 ++ gv3), (n :: x0 = x0 ++ al), (n :: x0 = gv3 ++ x), (n :: x0 = gv3 ++ x0), (n :: x0 = gv3 ++ gv3)
(n :: x0 = gv3 ++ al), (n :: x0 = al ++ x), (n :: x0 = al ++ x0), (n :: x0 = al ++ gv3), (n :: x0 = al ++ al), (n :: x0 = []), (n :: gv3 = x), (n :: gv3 = x0), (n :: gv3 = gv3), (n :: gv3 = al)
(n :: gv3 = sort x), (n :: gv3 = sort x0), (n :: gv3 = sort gv3), (n :: gv3 = sort al), (n :: gv3 = insert n x), (n :: gv3 = insert n x0), (n :: gv3 = insert n gv3), (n :: gv3 = insert n al), (n :: gv3 = insert a x), (n :: gv3 = insert a x0)
(n :: gv3 = insert a gv3), (n :: gv3 = insert a al), (n :: gv3 = insert n0 x), (n :: gv3 = insert n0 x0), (n :: gv3 = insert n0 gv3), (n :: gv3 = insert n0 al), (n :: gv3 = x ++ x), (n :: gv3 = x ++ x0), (n :: gv3 = x ++ gv3), (n :: gv3 = x ++ al)
(n :: gv3 = x0 ++ x), (n :: gv3 = x0 ++ x0), (n :: gv3 = x0 ++ gv3), (n :: gv3 = x0 ++ al), (n :: gv3 = gv3 ++ x), (n :: gv3 = gv3 ++ x0), (n :: gv3 = gv3 ++ gv3), (n :: gv3 = gv3 ++ al), (n :: gv3 = al ++ x), (n :: gv3 = al ++ x0)
(n :: gv3 = al ++ gv3), (n :: gv3 = al ++ al), (n :: gv3 = []), (n :: al = x), (n :: al = x0), (n :: al = gv3), (n :: al = al), (n :: al = sort x), (n :: al = sort x0), (n :: al = sort gv3)
(n :: al = sort al), (n :: al = insert n x), (n :: al = insert n x0), (n :: al = insert n gv3), (n :: al = insert n al), (n :: al = insert a x), (n :: al = insert a x0), (n :: al = insert a gv3), (n :: al = insert a al), (n :: al = insert n0 x)
(n :: al = insert n0 x0), (n :: al = insert n0 gv3), (n :: al = insert n0 al), (n :: al = x ++ x), (n :: al = x ++ x0), (n :: al = x ++ gv3), (n :: al = x ++ al), (n :: al = x0 ++ x), (n :: al = x0 ++ x0), (n :: al = x0 ++ gv3)
(n :: al = x0 ++ al), (n :: al = gv3 ++ x), (n :: al = gv3 ++ x0), (n :: al = gv3 ++ gv3), (n :: al = gv3 ++ al), (n :: al = al ++ x), (n :: al = al ++ x0), (n :: al = al ++ gv3), (n :: al = al ++ al), (n :: al = [])
(a :: x = x), (a :: x = x0), (a :: x = gv3), (a :: x = al), (a :: x = sort x), (a :: x = sort x0), (a :: x = sort gv3), (a :: x = sort al), (a :: x = insert n x), (a :: x = insert n x0)
(a :: x = insert n gv3), (a :: x = insert n al), (a :: x = insert a x), (a :: x = insert a x0), (a :: x = insert a gv3), (a :: x = insert a al), (a :: x = insert n0 x), (a :: x = insert n0 x0), (a :: x = insert n0 gv3), (a :: x = insert n0 al)
(a :: x = x ++ x), (a :: x = x ++ x0), (a :: x = x ++ gv3), (a :: x = x ++ al), (a :: x = x0 ++ x), (a :: x = x0 ++ x0), (a :: x = x0 ++ gv3), (a :: x = x0 ++ al), (a :: x = gv3 ++ x), (a :: x = gv3 ++ x0)
(a :: x = gv3 ++ gv3), (a :: x = gv3 ++ al), (a :: x = al ++ x), (a :: x = al ++ x0), (a :: x = al ++ gv3), (a :: x = al ++ al), (a :: x = []), (a :: x0 = x), (a :: x0 = x0), (a :: x0 = gv3)
(a :: x0 = al), (a :: x0 = sort x), (a :: x0 = sort x0), (a :: x0 = sort gv3), (a :: x0 = sort al), (a :: x0 = insert n x), (a :: x0 = insert n x0), (a :: x0 = insert n gv3), (a :: x0 = insert n al), (a :: x0 = insert a x)
(a :: x0 = insert a x0), (a :: x0 = insert a gv3), (a :: x0 = insert a al), (a :: x0 = insert n0 x), (a :: x0 = insert n0 x0), (a :: x0 = insert n0 gv3), (a :: x0 = insert n0 al), (a :: x0 = x ++ x), (a :: x0 = x ++ x0), (a :: x0 = x ++ gv3)
(a :: x0 = x ++ al), (a :: x0 = x0 ++ x), (a :: x0 = x0 ++ x0), (a :: x0 = x0 ++ gv3), (a :: x0 = x0 ++ al), (a :: x0 = gv3 ++ x), (a :: x0 = gv3 ++ x0), (a :: x0 = gv3 ++ gv3), (a :: x0 = gv3 ++ al), (a :: x0 = al ++ x)
(a :: x0 = al ++ x0), (a :: x0 = al ++ gv3), (a :: x0 = al ++ al), (a :: x0 = []), (a :: gv3 = x), (a :: gv3 = x0), (a :: gv3 = gv3), (a :: gv3 = al), (a :: gv3 = sort x), (a :: gv3 = sort x0)
(a :: gv3 = sort gv3), (a :: gv3 = sort al), (a :: gv3 = insert n x), (a :: gv3 = insert n x0), (a :: gv3 = insert n gv3), (a :: gv3 = insert n al), (a :: gv3 = insert a x), (a :: gv3 = insert a x0), (a :: gv3 = insert a gv3), (a :: gv3 = insert a al)
(a :: gv3 = insert n0 x), (a :: gv3 = insert n0 x0), (a :: gv3 = insert n0 gv3), (a :: gv3 = insert n0 al), (a :: gv3 = x ++ x), (a :: gv3 = x ++ x0), (a :: gv3 = x ++ gv3), (a :: gv3 = x ++ al), (a :: gv3 = x0 ++ x), (a :: gv3 = x0 ++ x0)
(a :: gv3 = x0 ++ gv3), (a :: gv3 = x0 ++ al), (a :: gv3 = gv3 ++ x), (a :: gv3 = gv3 ++ x0), (a :: gv3 = gv3 ++ gv3), (a :: gv3 = gv3 ++ al), (a :: gv3 = al ++ x), (a :: gv3 = al ++ x0), (a :: gv3 = al ++ gv3), (a :: gv3 = al ++ al)
(a :: gv3 = []), (a :: al = x), (a :: al = x0), (a :: al = gv3), (a :: al = al), (a :: al = sort x), (a :: al = sort x0), (a :: al = sort gv3), (a :: al = sort al), (a :: al = insert n x)
(a :: al = insert n x0), (a :: al = insert n gv3), (a :: al = insert n al), (a :: al = insert a x), (a :: al = insert a x0), (a :: al = insert a gv3), (a :: al = insert a al), (a :: al = insert n0 x), (a :: al = insert n0 x0), (a :: al = insert n0 gv3)
(a :: al = insert n0 al), (a :: al = x ++ x), (a :: al = x ++ x0), (a :: al = x ++ gv3), (a :: al = x ++ al), (a :: al = x0 ++ x), (a :: al = x0 ++ x0), (a :: al = x0 ++ gv3), (a :: al = x0 ++ al), (a :: al = gv3 ++ x)
(a :: al = gv3 ++ x0), (a :: al = gv3 ++ gv3), (a :: al = gv3 ++ al), (a :: al = al ++ x), (a :: al = al ++ x0), (a :: al = al ++ gv3), (a :: al = al ++ al), (a :: al = []), (n0 :: x = x), (n0 :: x = x0)
(n0 :: x = gv3), (n0 :: x = al), (n0 :: x = sort x), (n0 :: x = sort x0), (n0 :: x = sort gv3), (n0 :: x = sort al), (n0 :: x = insert n x), (n0 :: x = insert n x0), (n0 :: x = insert n gv3), (n0 :: x = insert n al)
(n0 :: x = insert a x), (n0 :: x = insert a x0), (n0 :: x = insert a gv3), (n0 :: x = insert a al), (n0 :: x = insert n0 x), (n0 :: x = insert n0 x0), (n0 :: x = insert n0 gv3), (n0 :: x = insert n0 al), (n0 :: x = x ++ x), (n0 :: x = x ++ x0)
(n0 :: x = x ++ gv3), (n0 :: x = x ++ al), (n0 :: x = x0 ++ x), (n0 :: x = x0 ++ x0), (n0 :: x = x0 ++ gv3), (n0 :: x = x0 ++ al), (n0 :: x = gv3 ++ x), (n0 :: x = gv3 ++ x0), (n0 :: x = gv3 ++ gv3), (n0 :: x = gv3 ++ al)
(n0 :: x = al ++ x), (n0 :: x = al ++ x0), (n0 :: x = al ++ gv3), (n0 :: x = al ++ al), (n0 :: x = []), (n0 :: x0 = x), (n0 :: x0 = x0), (n0 :: x0 = gv3), (n0 :: x0 = al), (n0 :: x0 = sort x)
(n0 :: x0 = sort x0), (n0 :: x0 = sort gv3), (n0 :: x0 = sort al), (n0 :: x0 = insert n x), (n0 :: x0 = insert n x0), (n0 :: x0 = insert n gv3), (n0 :: x0 = insert n al), (n0 :: x0 = insert a x), (n0 :: x0 = insert a x0), (n0 :: x0 = insert a gv3)
(n0 :: x0 = insert a al), (n0 :: x0 = insert n0 x), (n0 :: x0 = insert n0 x0), (n0 :: x0 = insert n0 gv3), (n0 :: x0 = insert n0 al), (n0 :: x0 = x ++ x), (n0 :: x0 = x ++ x0), (n0 :: x0 = x ++ gv3), (n0 :: x0 = x ++ al), (n0 :: x0 = x0 ++ x)
(n0 :: x0 = x0 ++ x0), (n0 :: x0 = x0 ++ gv3), (n0 :: x0 = x0 ++ al), (n0 :: x0 = gv3 ++ x), (n0 :: x0 = gv3 ++ x0), (n0 :: x0 = gv3 ++ gv3), (n0 :: x0 = gv3 ++ al), (n0 :: x0 = al ++ x), (n0 :: x0 = al ++ x0), (n0 :: x0 = al ++ gv3)
(n0 :: x0 = al ++ al), (n0 :: x0 = []), (n0 :: gv3 = x), (n0 :: gv3 = x0), (n0 :: gv3 = gv3), (n0 :: gv3 = al), (n0 :: gv3 = sort x), (n0 :: gv3 = sort x0), (n0 :: gv3 = sort gv3), (n0 :: gv3 = sort al)
(n0 :: gv3 = insert n x), (n0 :: gv3 = insert n x0), (n0 :: gv3 = insert n gv3), (n0 :: gv3 = insert n al), (n0 :: gv3 = insert a x), (n0 :: gv3 = insert a x0), (n0 :: gv3 = insert a gv3), (n0 :: gv3 = insert a al), (n0 :: gv3 = insert n0 x), (n0 :: gv3 = insert n0 x0)
(n0 :: gv3 = insert n0 gv3), (n0 :: gv3 = insert n0 al), (n0 :: gv3 = x ++ x), (n0 :: gv3 = x ++ x0), (n0 :: gv3 = x ++ gv3), (n0 :: gv3 = x ++ al), (n0 :: gv3 = x0 ++ x), (n0 :: gv3 = x0 ++ x0), (n0 :: gv3 = x0 ++ gv3), (n0 :: gv3 = x0 ++ al)
(n0 :: gv3 = gv3 ++ x), (n0 :: gv3 = gv3 ++ x0), (n0 :: gv3 = gv3 ++ gv3), (n0 :: gv3 = gv3 ++ al), (n0 :: gv3 = al ++ x), (n0 :: gv3 = al ++ x0), (n0 :: gv3 = al ++ gv3), (n0 :: gv3 = al ++ al), (n0 :: gv3 = []), (n0 :: al = x)
(n0 :: al = x0), (n0 :: al = gv3), (n0 :: al = al), (n0 :: al = sort x), (n0 :: al = sort x0), (n0 :: al = sort gv3), (n0 :: al = sort al), (n0 :: al = insert n x), (n0 :: al = insert n x0), (n0 :: al = insert n gv3)
(n0 :: al = insert n al), (n0 :: al = insert a x), (n0 :: al = insert a x0), (n0 :: al = insert a gv3), (n0 :: al = insert a al), (n0 :: al = insert n0 x), (n0 :: al = insert n0 x0), (n0 :: al = insert n0 gv3), (n0 :: al = insert n0 al), (n0 :: al = x ++ x)
(n0 :: al = x ++ x0), (n0 :: al = x ++ gv3), (n0 :: al = x ++ al), (n0 :: al = x0 ++ x), (n0 :: al = x0 ++ x0), (n0 :: al = x0 ++ gv3), (n0 :: al = x0 ++ al), (n0 :: al = gv3 ++ x), (n0 :: al = gv3 ++ x0), (n0 :: al = gv3 ++ gv3)
(n0 :: al = gv3 ++ al), (n0 :: al = al ++ x), (n0 :: al = al ++ x0), (n0 :: al = al ++ gv3), (n0 :: al = al ++ al), (n0 :: al = []), (sort x = x), (sort x = x0), (sort x = gv3), (sort x = al)
(sort x = insert n x), (sort x = insert n x0), (sort x = insert n gv3), (sort x = insert n al), (sort x = insert a x), (sort x = insert a x0), (sort x = insert a gv3), (sort x = insert a al), (sort x = insert n0 x), (sort x = insert n0 x0)
(sort x = insert n0 gv3), (sort x = insert n0 al), (sort x = x ++ x), (sort x = x ++ x0), (sort x = x ++ gv3), (sort x = x ++ al), (sort x = x0 ++ x), (sort x = x0 ++ x0), (sort x = x0 ++ gv3), (sort x = x0 ++ al)
(sort x = gv3 ++ x), (sort x = gv3 ++ x0), (sort x = gv3 ++ gv3), (sort x = gv3 ++ al), (sort x = al ++ x), (sort x = al ++ x0), (sort x = al ++ gv3), (sort x = al ++ al), (sort x0 = x), (sort x0 = x0)
(sort x0 = gv3), (sort x0 = al), (sort x0 = insert n x), (sort x0 = insert n x0), (sort x0 = insert n gv3), (sort x0 = insert n al), (sort x0 = insert a x), (sort x0 = insert a x0), (sort x0 = insert a gv3), (sort x0 = insert a al)
(sort x0 = insert n0 x), (sort x0 = insert n0 x0), (sort x0 = insert n0 gv3), (sort x0 = insert n0 al), (sort x0 = x ++ x), (sort x0 = x ++ x0), (sort x0 = x ++ gv3), (sort x0 = x ++ al), (sort x0 = x0 ++ x), (sort x0 = x0 ++ x0)
(sort x0 = x0 ++ gv3), (sort x0 = x0 ++ al), (sort x0 = gv3 ++ x), (sort x0 = gv3 ++ x0), (sort x0 = gv3 ++ gv3), (sort x0 = gv3 ++ al), (sort x0 = al ++ x), (sort x0 = al ++ x0), (sort x0 = al ++ gv3), (sort x0 = al ++ al)
(sort gv3 = x), (sort gv3 = x0), (sort gv3 = gv3), (sort gv3 = al), (sort gv3 = insert n x), (sort gv3 = insert n x0), (sort gv3 = insert n gv3), (sort gv3 = insert n al), (sort gv3 = insert a x), (sort gv3 = insert a x0)
(sort gv3 = insert a gv3), (sort gv3 = insert a al), (sort gv3 = insert n0 x), (sort gv3 = insert n0 x0), (sort gv3 = insert n0 gv3), (sort gv3 = insert n0 al), (sort gv3 = x ++ x), (sort gv3 = x ++ x0), (sort gv3 = x ++ gv3), (sort gv3 = x ++ al)
(sort gv3 = x0 ++ x), (sort gv3 = x0 ++ x0), (sort gv3 = x0 ++ gv3), (sort gv3 = x0 ++ al), (sort gv3 = gv3 ++ x), (sort gv3 = gv3 ++ x0), (sort gv3 = gv3 ++ gv3), (sort gv3 = gv3 ++ al), (sort gv3 = al ++ x), (sort gv3 = al ++ x0)
(sort gv3 = al ++ gv3), (sort gv3 = al ++ al), (sort al = x), (sort al = x0), (sort al = gv3), (sort al = al), (sort al = insert n x), (sort al = insert n x0), (sort al = insert n gv3), (sort al = insert n al)
(sort al = insert a x), (sort al = insert a x0), (sort al = insert a gv3), (sort al = insert a al), (sort al = insert n0 x), (sort al = insert n0 x0), (sort al = insert n0 gv3), (sort al = insert n0 al), (sort al = x ++ x), (sort al = x ++ x0)
(sort al = x ++ gv3), (sort al = x ++ al), (sort al = x0 ++ x), (sort al = x0 ++ x0), (sort al = x0 ++ gv3), (sort al = x0 ++ al), (sort al = gv3 ++ x), (sort al = gv3 ++ x0), (sort al = gv3 ++ gv3), (sort al = gv3 ++ al)
(sort al = al ++ x), (sort al = al ++ x0), (sort al = al ++ gv3), (sort al = al ++ al), (insert n x = x), (insert n x = x0), (insert n x = gv3), (insert n x = al), (insert n x = x ++ x), (insert n x = x ++ x0)
(insert n x = x ++ gv3), (insert n x = x ++ al), (insert n x = x0 ++ x), (insert n x = x0 ++ x0), (insert n x = x0 ++ gv3), (insert n x = x0 ++ al), (insert n x = gv3 ++ x), (insert n x = gv3 ++ x0), (insert n x = gv3 ++ gv3), (insert n x = gv3 ++ al)
(insert n x = al ++ x), (insert n x = al ++ x0), (insert n x = al ++ gv3), (insert n x = al ++ al), (insert n x0 = x), (insert n x0 = x0), (insert n x0 = gv3), (insert n x0 = al), (insert n x0 = x ++ x), (insert n x0 = x ++ x0)
(insert n x0 = x ++ gv3), (insert n x0 = x ++ al), (insert n x0 = x0 ++ x), (insert n x0 = x0 ++ x0), (insert n x0 = x0 ++ gv3), (insert n x0 = x0 ++ al), (insert n x0 = gv3 ++ x), (insert n x0 = gv3 ++ x0), (insert n x0 = gv3 ++ gv3), (insert n x0 = gv3 ++ al)
(insert n x0 = al ++ x), (insert n x0 = al ++ x0), (insert n x0 = al ++ gv3), (insert n x0 = al ++ al), (insert n gv3 = x), (insert n gv3 = x0), (insert n gv3 = gv3), (insert n gv3 = al), (insert n gv3 = x ++ x), (insert n gv3 = x ++ x0)
(insert n gv3 = x ++ gv3), (insert n gv3 = x ++ al), (insert n gv3 = x0 ++ x), (insert n gv3 = x0 ++ x0), (insert n gv3 = x0 ++ gv3), (insert n gv3 = x0 ++ al), (insert n gv3 = gv3 ++ x), (insert n gv3 = gv3 ++ x0), (insert n gv3 = gv3 ++ gv3), (insert n gv3 = gv3 ++ al)
(insert n gv3 = al ++ x), (insert n gv3 = al ++ x0), (insert n gv3 = al ++ gv3), (insert n gv3 = al ++ al), (insert n al = x), (insert n al = x0), (insert n al = gv3), (insert n al = al), (insert n al = x ++ x), (insert n al = x ++ x0)
(insert n al = x ++ gv3), (insert n al = x ++ al), (insert n al = x0 ++ x), (insert n al = x0 ++ x0), (insert n al = x0 ++ gv3), (insert n al = x0 ++ al), (insert n al = gv3 ++ x), (insert n al = gv3 ++ x0), (insert n al = gv3 ++ gv3), (insert n al = gv3 ++ al)
(insert n al = al ++ x), (insert n al = al ++ x0), (insert n al = al ++ gv3), (insert n al = al ++ al), (insert a x = x), (insert a x = x0), (insert a x = gv3), (insert a x = al), (insert a x = x ++ x), (insert a x = x ++ x0)
(insert a x = x ++ gv3), (insert a x = x ++ al), (insert a x = x0 ++ x), (insert a x = x0 ++ x0), (insert a x = x0 ++ gv3), (insert a x = x0 ++ al), (insert a x = gv3 ++ x), (insert a x = gv3 ++ x0), (insert a x = gv3 ++ gv3), (insert a x = gv3 ++ al)
(insert a x = al ++ x), (insert a x = al ++ x0), (insert a x = al ++ gv3), (insert a x = al ++ al), (insert a x0 = x), (insert a x0 = x0), (insert a x0 = gv3), (insert a x0 = al), (insert a x0 = x ++ x), (insert a x0 = x ++ x0)
(insert a x0 = x ++ gv3), (insert a x0 = x ++ al), (insert a x0 = x0 ++ x), (insert a x0 = x0 ++ x0), (insert a x0 = x0 ++ gv3), (insert a x0 = x0 ++ al), (insert a x0 = gv3 ++ x), (insert a x0 = gv3 ++ x0), (insert a x0 = gv3 ++ gv3), (insert a x0 = gv3 ++ al)
(insert a x0 = al ++ x), (insert a x0 = al ++ x0), (insert a x0 = al ++ gv3), (insert a x0 = al ++ al), (insert a gv3 = x), (insert a gv3 = x0), (insert a gv3 = gv3), (insert a gv3 = al), (insert a gv3 = x ++ x), (insert a gv3 = x ++ x0)
(insert a gv3 = x ++ gv3), (insert a gv3 = x ++ al), (insert a gv3 = x0 ++ x), (insert a gv3 = x0 ++ x0), (insert a gv3 = x0 ++ gv3), (insert a gv3 = x0 ++ al), (insert a gv3 = gv3 ++ x), (insert a gv3 = gv3 ++ x0), (insert a gv3 = gv3 ++ gv3), (insert a gv3 = gv3 ++ al)
(insert a gv3 = al ++ x), (insert a gv3 = al ++ x0), (insert a gv3 = al ++ gv3), (insert a gv3 = al ++ al), (insert a al = x), (insert a al = x0), (insert a al = gv3), (insert a al = al), (insert a al = x ++ x), (insert a al = x ++ x0)
(insert a al = x ++ gv3), (insert a al = x ++ al), (insert a al = x0 ++ x), (insert a al = x0 ++ x0), (insert a al = x0 ++ gv3), (insert a al = x0 ++ al), (insert a al = gv3 ++ x), (insert a al = gv3 ++ x0), (insert a al = gv3 ++ gv3), (insert a al = gv3 ++ al)
(insert a al = al ++ x), (insert a al = al ++ x0), (insert a al = al ++ gv3), (insert a al = al ++ al), (insert n0 x = x), (insert n0 x = x0), (insert n0 x = gv3), (insert n0 x = al), (insert n0 x = x ++ x), (insert n0 x = x ++ x0)
(insert n0 x = x ++ gv3), (insert n0 x = x ++ al), (insert n0 x = x0 ++ x), (insert n0 x = x0 ++ x0), (insert n0 x = x0 ++ gv3), (insert n0 x = x0 ++ al), (insert n0 x = gv3 ++ x), (insert n0 x = gv3 ++ x0), (insert n0 x = gv3 ++ gv3), (insert n0 x = gv3 ++ al)
(insert n0 x = al ++ x), (insert n0 x = al ++ x0), (insert n0 x = al ++ gv3), (insert n0 x = al ++ al), (insert n0 x0 = x), (insert n0 x0 = x0), (insert n0 x0 = gv3), (insert n0 x0 = al), (insert n0 x0 = x ++ x), (insert n0 x0 = x ++ x0)
(insert n0 x0 = x ++ gv3), (insert n0 x0 = x ++ al), (insert n0 x0 = x0 ++ x), (insert n0 x0 = x0 ++ x0), (insert n0 x0 = x0 ++ gv3), (insert n0 x0 = x0 ++ al), (insert n0 x0 = gv3 ++ x), (insert n0 x0 = gv3 ++ x0), (insert n0 x0 = gv3 ++ gv3), (insert n0 x0 = gv3 ++ al)
(insert n0 x0 = al ++ x), (insert n0 x0 = al ++ x0), (insert n0 x0 = al ++ gv3), (insert n0 x0 = al ++ al), (insert n0 gv3 = x), (insert n0 gv3 = x0), (insert n0 gv3 = gv3), (insert n0 gv3 = al), (insert n0 gv3 = x ++ x), (insert n0 gv3 = x ++ x0)
(insert n0 gv3 = x ++ gv3), (insert n0 gv3 = x ++ al), (insert n0 gv3 = x0 ++ x), (insert n0 gv3 = x0 ++ x0), (insert n0 gv3 = x0 ++ gv3), (insert n0 gv3 = x0 ++ al), (insert n0 gv3 = gv3 ++ x), (insert n0 gv3 = gv3 ++ x0), (insert n0 gv3 = gv3 ++ gv3), (insert n0 gv3 = gv3 ++ al)
(insert n0 gv3 = al ++ x), (insert n0 gv3 = al ++ x0), (insert n0 gv3 = al ++ gv3), (insert n0 gv3 = al ++ al), (insert n0 al = x), (insert n0 al = x0), (insert n0 al = gv3), (insert n0 al = al), (insert n0 al = x ++ x), (insert n0 al = x ++ x0)
(insert n0 al = x ++ gv3), (insert n0 al = x ++ al), (insert n0 al = x0 ++ x), (insert n0 al = x0 ++ x0), (insert n0 al = x0 ++ gv3), (insert n0 al = x0 ++ al), (insert n0 al = gv3 ++ x), (insert n0 al = gv3 ++ x0), (insert n0 al = gv3 ++ gv3), (insert n0 al = gv3 ++ al)
(insert n0 al = al ++ x), (insert n0 al = al ++ x0), (insert n0 al = al ++ gv3), (insert n0 al = al ++ al), (x ++ x = x), (x ++ x = x0), (x ++ x = gv3), (x ++ x = al), (x ++ x0 = x), (x ++ x0 = x0)
(x ++ x0 = gv3), (x ++ x0 = al), (x ++ gv3 = x), (x ++ gv3 = x0), (x ++ gv3 = gv3), (x ++ gv3 = al), (x ++ al = x), (x ++ al = x0), (x ++ al = gv3), (x ++ al = al)
(x0 ++ x = x), (x0 ++ x = x0), (x0 ++ x = gv3), (x0 ++ x = al), (x0 ++ x0 = x), (x0 ++ x0 = x0), (x0 ++ x0 = gv3), (x0 ++ x0 = al), (x0 ++ gv3 = x), (x0 ++ gv3 = x0)
(x0 ++ gv3 = gv3), (x0 ++ gv3 = al), (x0 ++ al = x), (x0 ++ al = x0), (x0 ++ al = gv3), (x0 ++ al = al), (gv3 ++ x = x), (gv3 ++ x = x0), (gv3 ++ x = gv3), (gv3 ++ x = al)
(gv3 ++ x0 = x), (gv3 ++ x0 = x0), (gv3 ++ x0 = gv3), (gv3 ++ x0 = al), (gv3 ++ gv3 = x), (gv3 ++ gv3 = x0), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = al), (gv3 ++ al = x), (gv3 ++ al = x0)
(gv3 ++ al = gv3), (gv3 ++ al = al), (al ++ x = x), (al ++ x = x0), (al ++ x = gv3), (al ++ x = al), (al ++ x0 = x), (al ++ x0 = x0), (al ++ x0 = gv3), (al ++ x0 = al)
(al ++ gv3 = x), (al ++ gv3 = x0), (al ++ gv3 = gv3), (al ++ gv3 = al), (al ++ al = x), (al ++ al = x0), (al ++ al = gv3), (al ++ al = al), ([] = x), ([] = x0)
([] = gv3), ([] = al), ([] = sort x), ([] = sort x0), ([] = sort gv3), ([] = sort al), ([] = insert n x), ([] = insert n x0), ([] = insert n gv3), ([] = insert n al)
([] = insert a x), ([] = insert a x0), ([] = insert a gv3), ([] = insert a al), ([] = insert n0 x), ([] = insert n0 x0), ([] = insert n0 gv3), ([] = insert n0 al), ([] = x ++ x), ([] = x ++ x0)
([] = x ++ gv3), ([] = x ++ al), ([] = x0 ++ x), ([] = x0 ++ x0), ([] = x0 ++ gv3), ([] = x0 ++ al), ([] = gv3 ++ x), ([] = gv3 ++ x0), ([] = gv3 ++ gv3), ([] = gv3 ++ al)
([] = al ++ x), ([] = al ++ x0), ([] = al ++ gv3), ([] = al ++ al), (None = Some n), (None = Some a), (None = Some n0), (length x = n), (length x = a), (length x = n0)
(length x0 = n), (length x0 = a), (length x0 = n0), (length gv3 = n), (length gv3 = a), (length gv3 = n0), (length al = n), (length al = a), (length al = n0)

Label: 4 (4)
(a < a), (a < n), (a < n0), (a < gv0), (n < a), (n < n), (n < n0), (n < gv0), (n0 < a), (n0 < n)
(n0 < n0), (n0 < gv0), (gv0 < a), (gv0 < n), (gv0 < n0), (gv0 < gv0), (a <= a), (a <= n), (a <= n0), (a <= gv0)
(n <= a), (n <= n), (n <= n0), (n <= gv0), (n0 <= a), (n0 <= n), (n0 <= n0), (n0 <= gv0), (gv0 <= a), (gv0 <= n)
(gv0 <= n0), (gv0 <= gv0), (al = al), (al = x0), (al = x), (x0 = al), (x0 = x0), (x0 = x), (x = al), (x = x0)
(x = x), (a = a), (a = n), (a = n0), (a = gv0), (n = a), (n = n), (n = n0), (n = gv0), (n0 = a)
(n0 = n), (n0 = n0), (n0 = gv0), (gv0 = a), (gv0 = n), (gv0 = n0), (gv0 = gv0), (a < length al), (a < length x0), (a < length x)
(n < length al), (n < length x0), (n < length x), (n0 < length al), (n0 < length x0), (n0 < length x), (gv0 < length al), (gv0 < length x0), (gv0 < length x), (length al < a)
(length al < n), (length al < n0), (length al < gv0), (length al < length x0), (length al < length x), (length x0 < a), (length x0 < n), (length x0 < n0), (length x0 < gv0), (length x0 < length al)
(length x0 < length x), (length x < a), (length x < n), (length x < n0), (length x < gv0), (length x < length al), (length x < length x0), (a <= length al), (a <= length x0), (a <= length x)
(n <= length al), (n <= length x0), (n <= length x), (n0 <= length al), (n0 <= length x0), (n0 <= length x), (gv0 <= length al), (gv0 <= length x0), (gv0 <= length x), (length al <= a)
(length al <= n), (length al <= n0), (length al <= gv0), (length al <= length x0), (length al <= length x), (length x0 <= a), (length x0 <= n), (length x0 <= n0), (length x0 <= gv0), (length x0 <= length al)
(length x0 <= length x), (length x <= a), (length x <= n), (length x <= n0), (length x <= gv0), (length x <= length al), (length x <= length x0), (~ a < a), (~ a < n), (~ a < n0)
(~ a < gv0), (~ n < a), (~ n < n), (~ n < n0), (~ n < gv0), (~ n0 < a), (~ n0 < n), (~ n0 < n0), (~ n0 < gv0), (~ gv0 < a)
(~ gv0 < n), (~ gv0 < n0), (~ gv0 < gv0), (~ a <= a), (~ a <= n), (~ a <= n0), (~ a <= gv0), (~ n <= a), (~ n <= n), (~ n <= n0)
(~ n <= gv0), (~ n0 <= a), (~ n0 <= n), (~ n0 <= n0), (~ n0 <= gv0), (~ gv0 <= a), (~ gv0 <= n), (~ gv0 <= n0), (~ gv0 <= gv0), (al <> al)
(al <> x0), (al <> x), (x0 <> al), (x0 <> x0), (x0 <> x), (x <> al), (x <> x0), (x <> x), (a <> a), (a <> n)
(a <> n0), (a <> gv0), (n <> a), (n <> n), (n <> n0), (n <> gv0), (n0 <> a), (n0 <> n), (n0 <> n0), (n0 <> gv0)
(gv0 <> a), (gv0 <> n), (gv0 <> n0), (gv0 <> gv0), (None = Some al), (None = Some x0), (None = Some x), (a :: al = al), (a :: al = x0), (a :: al = x)
(a :: al = sort al), (a :: al = sort x0), (a :: al = sort x), (a :: al = insert a al), (a :: al = insert a x0), (a :: al = insert a x), (a :: al = insert n al), (a :: al = insert n x0), (a :: al = insert n x), (a :: al = insert n0 al)
(a :: al = insert n0 x0), (a :: al = insert n0 x), (a :: al = insert gv0 al), (a :: al = insert gv0 x0), (a :: al = insert gv0 x), (a :: al = al ++ al), (a :: al = al ++ x0), (a :: al = al ++ x), (a :: al = x0 ++ al), (a :: al = x0 ++ x0)
(a :: al = x0 ++ x), (a :: al = x ++ al), (a :: al = x ++ x0), (a :: al = x ++ x), (a :: al = []), (a :: x0 = al), (a :: x0 = x0), (a :: x0 = x), (a :: x0 = sort al), (a :: x0 = sort x0)
(a :: x0 = sort x), (a :: x0 = insert a al), (a :: x0 = insert a x0), (a :: x0 = insert a x), (a :: x0 = insert n al), (a :: x0 = insert n x0), (a :: x0 = insert n x), (a :: x0 = insert n0 al), (a :: x0 = insert n0 x0), (a :: x0 = insert n0 x)
(a :: x0 = insert gv0 al), (a :: x0 = insert gv0 x0), (a :: x0 = insert gv0 x), (a :: x0 = al ++ al), (a :: x0 = al ++ x0), (a :: x0 = al ++ x), (a :: x0 = x0 ++ al), (a :: x0 = x0 ++ x0), (a :: x0 = x0 ++ x), (a :: x0 = x ++ al)
(a :: x0 = x ++ x0), (a :: x0 = x ++ x), (a :: x0 = []), (a :: x = al), (a :: x = x0), (a :: x = x), (a :: x = sort al), (a :: x = sort x0), (a :: x = sort x), (a :: x = insert a al)
(a :: x = insert a x0), (a :: x = insert a x), (a :: x = insert n al), (a :: x = insert n x0), (a :: x = insert n x), (a :: x = insert n0 al), (a :: x = insert n0 x0), (a :: x = insert n0 x), (a :: x = insert gv0 al), (a :: x = insert gv0 x0)
(a :: x = insert gv0 x), (a :: x = al ++ al), (a :: x = al ++ x0), (a :: x = al ++ x), (a :: x = x0 ++ al), (a :: x = x0 ++ x0), (a :: x = x0 ++ x), (a :: x = x ++ al), (a :: x = x ++ x0), (a :: x = x ++ x)
(a :: x = []), (n :: al = al), (n :: al = x0), (n :: al = x), (n :: al = sort al), (n :: al = sort x0), (n :: al = sort x), (n :: al = insert a al), (n :: al = insert a x0), (n :: al = insert a x)
(n :: al = insert n al), (n :: al = insert n x0), (n :: al = insert n x), (n :: al = insert n0 al), (n :: al = insert n0 x0), (n :: al = insert n0 x), (n :: al = insert gv0 al), (n :: al = insert gv0 x0), (n :: al = insert gv0 x), (n :: al = al ++ al)
(n :: al = al ++ x0), (n :: al = al ++ x), (n :: al = x0 ++ al), (n :: al = x0 ++ x0), (n :: al = x0 ++ x), (n :: al = x ++ al), (n :: al = x ++ x0), (n :: al = x ++ x), (n :: al = []), (n :: x0 = al)
(n :: x0 = x0), (n :: x0 = x), (n :: x0 = sort al), (n :: x0 = sort x0), (n :: x0 = sort x), (n :: x0 = insert a al), (n :: x0 = insert a x0), (n :: x0 = insert a x), (n :: x0 = insert n al), (n :: x0 = insert n x0)
(n :: x0 = insert n x), (n :: x0 = insert n0 al), (n :: x0 = insert n0 x0), (n :: x0 = insert n0 x), (n :: x0 = insert gv0 al), (n :: x0 = insert gv0 x0), (n :: x0 = insert gv0 x), (n :: x0 = al ++ al), (n :: x0 = al ++ x0), (n :: x0 = al ++ x)
(n :: x0 = x0 ++ al), (n :: x0 = x0 ++ x0), (n :: x0 = x0 ++ x), (n :: x0 = x ++ al), (n :: x0 = x ++ x0), (n :: x0 = x ++ x), (n :: x0 = []), (n :: x = al), (n :: x = x0), (n :: x = x)
(n :: x = sort al), (n :: x = sort x0), (n :: x = sort x), (n :: x = insert a al), (n :: x = insert a x0), (n :: x = insert a x), (n :: x = insert n al), (n :: x = insert n x0), (n :: x = insert n x), (n :: x = insert n0 al)
(n :: x = insert n0 x0), (n :: x = insert n0 x), (n :: x = insert gv0 al), (n :: x = insert gv0 x0), (n :: x = insert gv0 x), (n :: x = al ++ al), (n :: x = al ++ x0), (n :: x = al ++ x), (n :: x = x0 ++ al), (n :: x = x0 ++ x0)
(n :: x = x0 ++ x), (n :: x = x ++ al), (n :: x = x ++ x0), (n :: x = x ++ x), (n :: x = []), (n0 :: al = al), (n0 :: al = x0), (n0 :: al = x), (n0 :: al = sort al), (n0 :: al = sort x0)
(n0 :: al = sort x), (n0 :: al = insert a al), (n0 :: al = insert a x0), (n0 :: al = insert a x), (n0 :: al = insert n al), (n0 :: al = insert n x0), (n0 :: al = insert n x), (n0 :: al = insert n0 al), (n0 :: al = insert n0 x0), (n0 :: al = insert n0 x)
(n0 :: al = insert gv0 al), (n0 :: al = insert gv0 x0), (n0 :: al = insert gv0 x), (n0 :: al = al ++ al), (n0 :: al = al ++ x0), (n0 :: al = al ++ x), (n0 :: al = x0 ++ al), (n0 :: al = x0 ++ x0), (n0 :: al = x0 ++ x), (n0 :: al = x ++ al)
(n0 :: al = x ++ x0), (n0 :: al = x ++ x), (n0 :: al = []), (n0 :: x0 = al), (n0 :: x0 = x0), (n0 :: x0 = x), (n0 :: x0 = sort al), (n0 :: x0 = sort x0), (n0 :: x0 = sort x), (n0 :: x0 = insert a al)
(n0 :: x0 = insert a x0), (n0 :: x0 = insert a x), (n0 :: x0 = insert n al), (n0 :: x0 = insert n x0), (n0 :: x0 = insert n x), (n0 :: x0 = insert n0 al), (n0 :: x0 = insert n0 x0), (n0 :: x0 = insert n0 x), (n0 :: x0 = insert gv0 al), (n0 :: x0 = insert gv0 x0)
(n0 :: x0 = insert gv0 x), (n0 :: x0 = al ++ al), (n0 :: x0 = al ++ x0), (n0 :: x0 = al ++ x), (n0 :: x0 = x0 ++ al), (n0 :: x0 = x0 ++ x0), (n0 :: x0 = x0 ++ x), (n0 :: x0 = x ++ al), (n0 :: x0 = x ++ x0), (n0 :: x0 = x ++ x)
(n0 :: x0 = []), (n0 :: x = al), (n0 :: x = x0), (n0 :: x = x), (n0 :: x = sort al), (n0 :: x = sort x0), (n0 :: x = sort x), (n0 :: x = insert a al), (n0 :: x = insert a x0), (n0 :: x = insert a x)
(n0 :: x = insert n al), (n0 :: x = insert n x0), (n0 :: x = insert n x), (n0 :: x = insert n0 al), (n0 :: x = insert n0 x0), (n0 :: x = insert n0 x), (n0 :: x = insert gv0 al), (n0 :: x = insert gv0 x0), (n0 :: x = insert gv0 x), (n0 :: x = al ++ al)
(n0 :: x = al ++ x0), (n0 :: x = al ++ x), (n0 :: x = x0 ++ al), (n0 :: x = x0 ++ x0), (n0 :: x = x0 ++ x), (n0 :: x = x ++ al), (n0 :: x = x ++ x0), (n0 :: x = x ++ x), (n0 :: x = []), (gv0 :: al = al)
(gv0 :: al = x0), (gv0 :: al = x), (gv0 :: al = sort al), (gv0 :: al = sort x0), (gv0 :: al = sort x), (gv0 :: al = insert a al), (gv0 :: al = insert a x0), (gv0 :: al = insert a x), (gv0 :: al = insert n al), (gv0 :: al = insert n x0)
(gv0 :: al = insert n x), (gv0 :: al = insert n0 al), (gv0 :: al = insert n0 x0), (gv0 :: al = insert n0 x), (gv0 :: al = insert gv0 al), (gv0 :: al = insert gv0 x0), (gv0 :: al = insert gv0 x), (gv0 :: al = al ++ al), (gv0 :: al = al ++ x0), (gv0 :: al = al ++ x)
(gv0 :: al = x0 ++ al), (gv0 :: al = x0 ++ x0), (gv0 :: al = x0 ++ x), (gv0 :: al = x ++ al), (gv0 :: al = x ++ x0), (gv0 :: al = x ++ x), (gv0 :: al = []), (gv0 :: x0 = al), (gv0 :: x0 = x0), (gv0 :: x0 = x)
(gv0 :: x0 = sort al), (gv0 :: x0 = sort x0), (gv0 :: x0 = sort x), (gv0 :: x0 = insert a al), (gv0 :: x0 = insert a x0), (gv0 :: x0 = insert a x), (gv0 :: x0 = insert n al), (gv0 :: x0 = insert n x0), (gv0 :: x0 = insert n x), (gv0 :: x0 = insert n0 al)
(gv0 :: x0 = insert n0 x0), (gv0 :: x0 = insert n0 x), (gv0 :: x0 = insert gv0 al), (gv0 :: x0 = insert gv0 x0), (gv0 :: x0 = insert gv0 x), (gv0 :: x0 = al ++ al), (gv0 :: x0 = al ++ x0), (gv0 :: x0 = al ++ x), (gv0 :: x0 = x0 ++ al), (gv0 :: x0 = x0 ++ x0)
(gv0 :: x0 = x0 ++ x), (gv0 :: x0 = x ++ al), (gv0 :: x0 = x ++ x0), (gv0 :: x0 = x ++ x), (gv0 :: x0 = []), (gv0 :: x = al), (gv0 :: x = x0), (gv0 :: x = x), (gv0 :: x = sort al), (gv0 :: x = sort x0)
(gv0 :: x = sort x), (gv0 :: x = insert a al), (gv0 :: x = insert a x0), (gv0 :: x = insert a x), (gv0 :: x = insert n al), (gv0 :: x = insert n x0), (gv0 :: x = insert n x), (gv0 :: x = insert n0 al), (gv0 :: x = insert n0 x0), (gv0 :: x = insert n0 x)
(gv0 :: x = insert gv0 al), (gv0 :: x = insert gv0 x0), (gv0 :: x = insert gv0 x), (gv0 :: x = al ++ al), (gv0 :: x = al ++ x0), (gv0 :: x = al ++ x), (gv0 :: x = x0 ++ al), (gv0 :: x = x0 ++ x0), (gv0 :: x = x0 ++ x), (gv0 :: x = x ++ al)
(gv0 :: x = x ++ x0), (gv0 :: x = x ++ x), (gv0 :: x = []), (sort al = al), (sort al = x0), (sort al = x), (sort al = insert a al), (sort al = insert a x0), (sort al = insert a x), (sort al = insert n al)
(sort al = insert n x0), (sort al = insert n x), (sort al = insert n0 al), (sort al = insert n0 x0), (sort al = insert n0 x), (sort al = insert gv0 al), (sort al = insert gv0 x0), (sort al = insert gv0 x), (sort al = al ++ al), (sort al = al ++ x0)
(sort al = al ++ x), (sort al = x0 ++ al), (sort al = x0 ++ x0), (sort al = x0 ++ x), (sort al = x ++ al), (sort al = x ++ x0), (sort al = x ++ x), (sort x0 = al), (sort x0 = x0), (sort x0 = x)
(sort x0 = insert a al), (sort x0 = insert a x0), (sort x0 = insert a x), (sort x0 = insert n al), (sort x0 = insert n x0), (sort x0 = insert n x), (sort x0 = insert n0 al), (sort x0 = insert n0 x0), (sort x0 = insert n0 x), (sort x0 = insert gv0 al)
(sort x0 = insert gv0 x0), (sort x0 = insert gv0 x), (sort x0 = al ++ al), (sort x0 = al ++ x0), (sort x0 = al ++ x), (sort x0 = x0 ++ al), (sort x0 = x0 ++ x0), (sort x0 = x0 ++ x), (sort x0 = x ++ al), (sort x0 = x ++ x0)
(sort x0 = x ++ x), (sort x = al), (sort x = x0), (sort x = x), (sort x = insert a al), (sort x = insert a x0), (sort x = insert a x), (sort x = insert n al), (sort x = insert n x0), (sort x = insert n x)
(sort x = insert n0 al), (sort x = insert n0 x0), (sort x = insert n0 x), (sort x = insert gv0 al), (sort x = insert gv0 x0), (sort x = insert gv0 x), (sort x = al ++ al), (sort x = al ++ x0), (sort x = al ++ x), (sort x = x0 ++ al)
(sort x = x0 ++ x0), (sort x = x0 ++ x), (sort x = x ++ al), (sort x = x ++ x0), (sort x = x ++ x), (insert a al = al), (insert a al = x0), (insert a al = x), (insert a al = al ++ al), (insert a al = al ++ x0)
(insert a al = al ++ x), (insert a al = x0 ++ al), (insert a al = x0 ++ x0), (insert a al = x0 ++ x), (insert a al = x ++ al), (insert a al = x ++ x0), (insert a al = x ++ x), (insert a x0 = al), (insert a x0 = x0), (insert a x0 = x)
(insert a x0 = al ++ al), (insert a x0 = al ++ x0), (insert a x0 = al ++ x), (insert a x0 = x0 ++ al), (insert a x0 = x0 ++ x0), (insert a x0 = x0 ++ x), (insert a x0 = x ++ al), (insert a x0 = x ++ x0), (insert a x0 = x ++ x), (insert a x = al)
(insert a x = x0), (insert a x = x), (insert a x = al ++ al), (insert a x = al ++ x0), (insert a x = al ++ x), (insert a x = x0 ++ al), (insert a x = x0 ++ x0), (insert a x = x0 ++ x), (insert a x = x ++ al), (insert a x = x ++ x0)
(insert a x = x ++ x), (insert n al = al), (insert n al = x0), (insert n al = x), (insert n al = al ++ al), (insert n al = al ++ x0), (insert n al = al ++ x), (insert n al = x0 ++ al), (insert n al = x0 ++ x0), (insert n al = x0 ++ x)
(insert n al = x ++ al), (insert n al = x ++ x0), (insert n al = x ++ x), (insert n x0 = al), (insert n x0 = x0), (insert n x0 = x), (insert n x0 = al ++ al), (insert n x0 = al ++ x0), (insert n x0 = al ++ x), (insert n x0 = x0 ++ al)
(insert n x0 = x0 ++ x0), (insert n x0 = x0 ++ x), (insert n x0 = x ++ al), (insert n x0 = x ++ x0), (insert n x0 = x ++ x), (insert n x = al), (insert n x = x0), (insert n x = x), (insert n x = al ++ al), (insert n x = al ++ x0)
(insert n x = al ++ x), (insert n x = x0 ++ al), (insert n x = x0 ++ x0), (insert n x = x0 ++ x), (insert n x = x ++ al), (insert n x = x ++ x0), (insert n x = x ++ x), (insert n0 al = al), (insert n0 al = x0), (insert n0 al = x)
(insert n0 al = al ++ al), (insert n0 al = al ++ x0), (insert n0 al = al ++ x), (insert n0 al = x0 ++ al), (insert n0 al = x0 ++ x0), (insert n0 al = x0 ++ x), (insert n0 al = x ++ al), (insert n0 al = x ++ x0), (insert n0 al = x ++ x), (insert n0 x0 = al)
(insert n0 x0 = x0), (insert n0 x0 = x), (insert n0 x0 = al ++ al), (insert n0 x0 = al ++ x0), (insert n0 x0 = al ++ x), (insert n0 x0 = x0 ++ al), (insert n0 x0 = x0 ++ x0), (insert n0 x0 = x0 ++ x), (insert n0 x0 = x ++ al), (insert n0 x0 = x ++ x0)
(insert n0 x0 = x ++ x), (insert n0 x = al), (insert n0 x = x0), (insert n0 x = x), (insert n0 x = al ++ al), (insert n0 x = al ++ x0), (insert n0 x = al ++ x), (insert n0 x = x0 ++ al), (insert n0 x = x0 ++ x0), (insert n0 x = x0 ++ x)
(insert n0 x = x ++ al), (insert n0 x = x ++ x0), (insert n0 x = x ++ x), (insert gv0 al = al), (insert gv0 al = x0), (insert gv0 al = x), (insert gv0 al = al ++ al), (insert gv0 al = al ++ x0), (insert gv0 al = al ++ x), (insert gv0 al = x0 ++ al)
(insert gv0 al = x0 ++ x0), (insert gv0 al = x0 ++ x), (insert gv0 al = x ++ al), (insert gv0 al = x ++ x0), (insert gv0 al = x ++ x), (insert gv0 x0 = al), (insert gv0 x0 = x0), (insert gv0 x0 = x), (insert gv0 x0 = al ++ al), (insert gv0 x0 = al ++ x0)
(insert gv0 x0 = al ++ x), (insert gv0 x0 = x0 ++ al), (insert gv0 x0 = x0 ++ x0), (insert gv0 x0 = x0 ++ x), (insert gv0 x0 = x ++ al), (insert gv0 x0 = x ++ x0), (insert gv0 x0 = x ++ x), (insert gv0 x = al), (insert gv0 x = x0), (insert gv0 x = x)
(insert gv0 x = al ++ al), (insert gv0 x = al ++ x0), (insert gv0 x = al ++ x), (insert gv0 x = x0 ++ al), (insert gv0 x = x0 ++ x0), (insert gv0 x = x0 ++ x), (insert gv0 x = x ++ al), (insert gv0 x = x ++ x0), (insert gv0 x = x ++ x), (al ++ al = al)
(al ++ al = x0), (al ++ al = x), (al ++ x0 = al), (al ++ x0 = x0), (al ++ x0 = x), (al ++ x = al), (al ++ x = x0), (al ++ x = x), (x0 ++ al = al), (x0 ++ al = x0)
(x0 ++ al = x), (x0 ++ x0 = al), (x0 ++ x0 = x0), (x0 ++ x0 = x), (x0 ++ x = al), (x0 ++ x = x0), (x0 ++ x = x), (x ++ al = al), (x ++ al = x0), (x ++ al = x)
(x ++ x0 = al), (x ++ x0 = x0), (x ++ x0 = x), (x ++ x = al), (x ++ x = x0), (x ++ x = x), ([] = al), ([] = x0), ([] = x), ([] = sort al)
([] = sort x0), ([] = sort x), ([] = insert a al), ([] = insert a x0), ([] = insert a x), ([] = insert n al), ([] = insert n x0), ([] = insert n x), ([] = insert n0 al), ([] = insert n0 x0)
([] = insert n0 x), ([] = insert gv0 al), ([] = insert gv0 x0), ([] = insert gv0 x), ([] = al ++ al), ([] = al ++ x0), ([] = al ++ x), ([] = x0 ++ al), ([] = x0 ++ x0), ([] = x0 ++ x)
([] = x ++ al), ([] = x ++ x0), ([] = x ++ x), (None = Some a), (None = Some n), (None = Some n0), (None = Some gv0), (length al = a), (length al = n), (length al = n0)
(length al = gv0), (length x0 = a), (length x0 = n), (length x0 = n0), (length x0 = gv0), (length x = a), (length x = n), (length x = n0), (length x = gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 75.193 seconds


Label: 0 (0)

Label: 1 (1)

Label: 2 (2)

Label: 3 (3)
(n :: x = gv3)

Label: 4 (4)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 77.088 seconds

Number of Result Pairs Returned: 1

1. (count n0 (a :: al) = count n0 (n :: x ++ a :: x0) ->  count n0 al = count n0 ((n :: x) ++ x0))
