Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (bag_eqv l l')
 -- (bag_eqv l' l'')
 -- (Permutation l l')
 -- (Permutation l' l'')

----------------------------------
Goal: (bag_eqv l l'')


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.489 seconds



------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 36.2 seconds

Label: Generalization #0
Assumptions: 
 -- (bag_eqv l l')
 -- (bag_eqv l' l'')

----------------------------------
Goal: (bag_eqv l l'')
Case: Valid and Un-Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 36.342 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
insert : (nat -> list nat -> list nat)
sort : (list nat -> list nat)
bag : Set
count : (nat -> bag -> nat)
bag_eqv : (bag -> bag -> Prop)

Label: 0 (0)
Abducted Assumption: (bag_eqv l l')
Positive Examples: 195
Negative Examples: 195

Label: 1 (1)
Abducted Assumption: (bag_eqv l' l'')
Positive Examples: 203
Negative Examples: 187


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 36.485 seconds


Label: 0 (0)
(l' = l'), (l' = l''), (l' = l), (l'' = l'), (l'' = l''), (l'' = l), (l = l'), (l = l''), (l = l), (length l' < length l'')
(length l' < length l), (length l'' < length l'), (length l'' < length l), (length l < length l'), (length l < length l''), (length l' <= length l''), (length l' <= length l), (length l'' <= length l'), (length l'' <= length l), (length l <= length l')
(length l <= length l''), (l' <> l'), (l' <> l''), (l' <> l), (l'' <> l'), (l'' <> l''), (l'' <> l), (l <> l'), (l <> l''), (l <> l)
(None = Some l'), (None = Some l''), (None = Some l), (sort l' = l'), (sort l' = l''), (sort l' = l), (sort l' = l' ++ l'), (sort l' = l' ++ l''), (sort l' = l' ++ l), (sort l' = l'' ++ l')
(sort l' = l'' ++ l''), (sort l' = l'' ++ l), (sort l' = l ++ l'), (sort l' = l ++ l''), (sort l' = l ++ l), (sort l'' = l'), (sort l'' = l''), (sort l'' = l), (sort l'' = l' ++ l'), (sort l'' = l' ++ l'')
(sort l'' = l' ++ l), (sort l'' = l'' ++ l'), (sort l'' = l'' ++ l''), (sort l'' = l'' ++ l), (sort l'' = l ++ l'), (sort l'' = l ++ l''), (sort l'' = l ++ l), (sort l = l'), (sort l = l''), (sort l = l)
(sort l = l' ++ l'), (sort l = l' ++ l''), (sort l = l' ++ l), (sort l = l'' ++ l'), (sort l = l'' ++ l''), (sort l = l'' ++ l), (sort l = l ++ l'), (sort l = l ++ l''), (sort l = l ++ l), (l' ++ l' = l')
(l' ++ l' = l''), (l' ++ l' = l), (l' ++ l'' = l'), (l' ++ l'' = l''), (l' ++ l'' = l), (l' ++ l = l'), (l' ++ l = l''), (l' ++ l = l), (l'' ++ l' = l'), (l'' ++ l' = l'')
(l'' ++ l' = l), (l'' ++ l'' = l'), (l'' ++ l'' = l''), (l'' ++ l'' = l), (l'' ++ l = l'), (l'' ++ l = l''), (l'' ++ l = l), (l ++ l' = l'), (l ++ l' = l''), (l ++ l' = l)
(l ++ l'' = l'), (l ++ l'' = l''), (l ++ l'' = l), (l ++ l = l'), (l ++ l = l''), (l ++ l = l), ([] = l'), ([] = l''), ([] = l), ([] = sort l')
([] = sort l''), ([] = sort l), ([] = l' ++ l'), ([] = l' ++ l''), ([] = l' ++ l), ([] = l'' ++ l'), ([] = l'' ++ l''), ([] = l'' ++ l), ([] = l ++ l'), ([] = l ++ l'')
([] = l ++ l)

Label: 1 (1)
(l' = l'), (l' = l''), (l' = l), (l'' = l'), (l'' = l''), (l'' = l), (l = l'), (l = l''), (l = l), (length l' < length l'')
(length l' < length l), (length l'' < length l'), (length l'' < length l), (length l < length l'), (length l < length l''), (length l' <= length l''), (length l' <= length l), (length l'' <= length l'), (length l'' <= length l), (length l <= length l')
(length l <= length l''), (l' <> l'), (l' <> l''), (l' <> l), (l'' <> l'), (l'' <> l''), (l'' <> l), (l <> l'), (l <> l''), (l <> l)
(None = Some l'), (None = Some l''), (None = Some l), (sort l' = l'), (sort l' = l''), (sort l' = l), (sort l' = l' ++ l'), (sort l' = l' ++ l''), (sort l' = l' ++ l), (sort l' = l'' ++ l')
(sort l' = l'' ++ l''), (sort l' = l'' ++ l), (sort l' = l ++ l'), (sort l' = l ++ l''), (sort l' = l ++ l), (sort l'' = l'), (sort l'' = l''), (sort l'' = l), (sort l'' = l' ++ l'), (sort l'' = l' ++ l'')
(sort l'' = l' ++ l), (sort l'' = l'' ++ l'), (sort l'' = l'' ++ l''), (sort l'' = l'' ++ l), (sort l'' = l ++ l'), (sort l'' = l ++ l''), (sort l'' = l ++ l), (sort l = l'), (sort l = l''), (sort l = l)
(sort l = l' ++ l'), (sort l = l' ++ l''), (sort l = l' ++ l), (sort l = l'' ++ l'), (sort l = l'' ++ l''), (sort l = l'' ++ l), (sort l = l ++ l'), (sort l = l ++ l''), (sort l = l ++ l), (l' ++ l' = l')
(l' ++ l' = l''), (l' ++ l' = l), (l' ++ l'' = l'), (l' ++ l'' = l''), (l' ++ l'' = l), (l' ++ l = l'), (l' ++ l = l''), (l' ++ l = l), (l'' ++ l' = l'), (l'' ++ l' = l'')
(l'' ++ l' = l), (l'' ++ l'' = l'), (l'' ++ l'' = l''), (l'' ++ l'' = l), (l'' ++ l = l'), (l'' ++ l = l''), (l'' ++ l = l), (l ++ l' = l'), (l ++ l' = l''), (l ++ l' = l)
(l ++ l'' = l'), (l ++ l'' = l''), (l ++ l'' = l), (l ++ l = l'), (l ++ l = l''), (l ++ l = l), ([] = l'), ([] = l''), ([] = l), ([] = sort l')
([] = sort l''), ([] = sort l), ([] = l' ++ l'), ([] = l' ++ l''), ([] = l' ++ l), ([] = l'' ++ l'), ([] = l'' ++ l''), ([] = l'' ++ l), ([] = l ++ l'), ([] = l ++ l'')
([] = l ++ l)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 41.827 seconds


Label: 0 (0)

Label: 1 (1)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 43.54 seconds

Number of Result Pairs Returned: 1

1. (bag_eqv l l' -> bag_eqv l' l'' -> bag_eqv l l'')
