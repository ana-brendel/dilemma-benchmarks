Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (tree_elems t cons_elems0)
 -- (tree_elems t cons_elems)
 -- (priqueue_elems p rest_elems0)
 -- (priqueue_elems p rest_elems)

----------------------------------
Goal: (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.695 seconds

gv1 : (list nat) = (cons_elems0 ++ rest_elems0)
gv0 : (list nat) = (cons_elems ++ rest_elems)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 97.444 seconds

Label: Generalization #0
Assumptions: 
 -- (tree_elems t cons_elems)
 -- (tree_elems t cons_elems0)
 -- (priqueue_elems p rest_elems0)
 -- (priqueue_elems p rest_elems)

----------------------------------
Goal: (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (tree_elems t cons_elems0)
 -- (tree_elems t cons_elems)
 -- (priqueue_elems p rest_elems0)
 -- (cons_elems ++ rest_elems = gv0)
 -- (priqueue_elems p rest_elems)

----------------------------------
Goal: (Permutation gv0 (cons_elems0 ++ rest_elems0))
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (tree_elems t cons_elems0)
 -- (tree_elems t cons_elems)
 -- (cons_elems0 ++ rest_elems0 = gv1)
 -- (priqueue_elems p rest_elems0)
 -- (priqueue_elems p rest_elems)

----------------------------------
Goal: (Permutation (cons_elems ++ rest_elems) gv1)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 97.588 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
geb : (nat -> nat -> bool)
gtb : (nat -> nat -> bool)
tree : Set
tree_rect : (forall P : tree -> Type,
 (forall (n : nat) (t : tree),
  P t -> forall t0 : tree, P t0 -> P (Node n t t0)) ->
 P Leaf -> forall t : tree, P t)
tree_rec : (forall P : tree -> Set,
 (forall (n : nat) (t : tree),
  P t -> forall t0 : tree, P t0 -> P (Node n t t0)) ->
 P Leaf -> forall t : tree, P t)
smash : (tree -> tree -> tree)
carry : (list tree -> tree -> list tree)
insert : (nat -> list tree -> list tree)
join : (list tree -> list tree -> tree -> list tree)
unzip : (tree -> (list tree -> list tree) -> list tree)
heap_delete_max : (tree -> list tree)
find_max' : (nat -> list tree -> nat)
find_max : (list tree -> option nat)
delete_max_aux : (nat -> list tree -> list tree * list tree)
delete_max : (list tree -> option (nat * list tree))
merge : (list tree -> list tree -> list tree)
pow2heapp : (nat -> nat -> tree -> Prop)
pow2heap : (nat -> tree -> Prop)
priqq : (nat -> list tree -> Prop)
priq : (list tree -> Prop)
tree_elems : (tree -> list nat -> Prop)
priqueue_elems : (list tree -> list nat -> Prop)
Abs : (list tree -> list nat -> Prop)
Node : (nat -> tree -> tree -> tree)
Leaf : tree

Label: 0 (0)
Abducted Assumption: (tree_elems t cons_elems)
Positive Examples: 500
Negative Examples: 26

Label: 1 (1)
Abducted Assumption: (tree_elems t cons_elems0)
Positive Examples: 500
Negative Examples: 23

Label: 2 (2)
Abducted Assumption: (priqueue_elems p rest_elems0)
Positive Examples: 500
Negative Examples: 15

Label: 3 (3)
Abducted Assumption: (priqueue_elems p rest_elems)
Positive Examples: 500
Negative Examples: 21

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 9
Negative Examples: 11

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 10
Negative Examples: 17


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 98.11 seconds


Label: 0 (0)
(Abs p rest_elems0), (Abs p cons_elems0), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p rest_elems0), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems), (tree_elems t rest_elems0), (tree_elems t cons_elems0)
(tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems rest_elems0), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems rest_elems0), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems), (Permutation cons_elems cons_elems), (Permutation p p)
(In t p), (t = t), (p = p), (rest_elems0 = rest_elems0), (rest_elems0 = cons_elems0), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (cons_elems0 = rest_elems0), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems)
(cons_elems0 = cons_elems), (rest_elems = rest_elems0), (rest_elems = cons_elems0), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = rest_elems0), (cons_elems = cons_elems0), (cons_elems = rest_elems), (cons_elems = cons_elems), (Abs p (rest_elems0 ++ rest_elems0))
(Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems))
(Abs p (rest_elems ++ cons_elems)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) rest_elems0), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems), (Abs (t :: p) cons_elems)
(Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ cons_elems0))
(Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) rest_elems0), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems)
(Abs (merge p p) cons_elems), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems ++ rest_elems0))
(Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) cons_elems0)
(Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems))
(Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) rest_elems0)
(Abs (join p p t) cons_elems0), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems))
(Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ cons_elems0)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) rest_elems0), (Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ cons_elems0))
(Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0))
(Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] rest_elems0), (Abs [] cons_elems0), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems))
(Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ cons_elems0))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems))
(priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p [])
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems))
(priqueue_elems (t :: p) []), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0))
(priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems))
(priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems))
(priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0))
(priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0))
(priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems))
(priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] rest_elems0), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ cons_elems0))
(priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems))
(tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ rest_elems0))
(tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0))
(tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems))
(tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf rest_elems0), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (rest_elems0 ++ rest_elems0))
(tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems))
(tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t))
(priq (carry p t)), (priq (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length cons_elems0) p)
(priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t))
(priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p))
(priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t)), (priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length cons_elems0) t)
(pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t)
(pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t)
(pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ cons_elems0)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems))
(Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 []), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems0)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems))
(Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (rest_elems0 ++ rest_elems0))
(Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems))
(Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems)
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems)
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems)
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) rest_elems0), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems)
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems)
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems)
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems)
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems)
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems)
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems)
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems)
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems)
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ rest_elems0) rest_elems0), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems)
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems)
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems)
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems)
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] rest_elems0), (Permutation [] cons_elems0), (Permutation [] rest_elems), (Permutation [] cons_elems)
(Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems ++ rest_elems0)), (Permutation [] (rest_elems ++ cons_elems0))
(Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p)), (In t (heap_delete_max t)), (In t (join p p t))
(In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t)), (In (smash t t) (p ++ p)), (In Leaf p)
(In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length rest_elems0) rest_elems0), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems)
(In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ cons_elems0))
(In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length cons_elems0) rest_elems0), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems)
(In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ cons_elems0))
(In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems) rest_elems0), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems)
(In (length rest_elems) (rest_elems0 ++ rest_elems0)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ cons_elems0))
(In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) rest_elems0), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems)
(In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ cons_elems0))
(In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) rest_elems0), (In (length p) cons_elems0), (In (length p) rest_elems), (In (length p) cons_elems)
(In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ cons_elems0))
(In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p)
(length cons_elems0 < length rest_elems0), (length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems < length rest_elems0), (length rest_elems < length cons_elems0), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length rest_elems0), (length cons_elems < length cons_elems0)
(length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length rest_elems0), (length p < length cons_elems0), (length p < length rest_elems), (length p < length cons_elems), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p)
(length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems <= length rest_elems0), (length rest_elems <= length cons_elems0), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length rest_elems0), (length cons_elems <= length cons_elems0)
(length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length rest_elems0), (length p <= length cons_elems0), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p rest_elems0), (~ Abs p cons_elems0), (~ Abs p rest_elems), (~ Abs p cons_elems)
(~ priqueue_elems p rest_elems0), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t rest_elems0), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation rest_elems0 rest_elems0)
(~ Permutation rest_elems0 cons_elems0), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems rest_elems)
(~ Permutation rest_elems cons_elems), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p), (~ In t p), (t <> t), (p <> p), (rest_elems0 <> rest_elems0)
(rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (cons_elems0 <> rest_elems0), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems <> rest_elems0), (rest_elems <> cons_elems0), (rest_elems <> rest_elems)
(rest_elems <> cons_elems), (cons_elems <> rest_elems0), (cons_elems <> cons_elems0), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some rest_elems0), (None = Some cons_elems0), (None = Some rest_elems), (None = Some cons_elems), (None = Some p)
(t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p), (t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t)
(merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p), (join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p)
(carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t), ([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t)
(rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = cons_elems0)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems)
(cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = cons_elems0)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems)
(rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = rest_elems0), ([] = cons_elems0), ([] = rest_elems), ([] = cons_elems), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems)
([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p), (None = Some t)

Label: 1 (1)
(Abs p rest_elems0), (Abs p cons_elems0), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p rest_elems0), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems), (tree_elems t rest_elems0), (tree_elems t cons_elems0)
(tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems rest_elems0), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems rest_elems0), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems), (Permutation cons_elems cons_elems), (Permutation p p)
(In t p), (t = t), (p = p), (rest_elems0 = rest_elems0), (rest_elems0 = cons_elems0), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (cons_elems0 = rest_elems0), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems)
(cons_elems0 = cons_elems), (rest_elems = rest_elems0), (rest_elems = cons_elems0), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = rest_elems0), (cons_elems = cons_elems0), (cons_elems = rest_elems), (cons_elems = cons_elems), (Abs p (rest_elems0 ++ rest_elems0))
(Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems))
(Abs p (rest_elems ++ cons_elems)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) rest_elems0), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems), (Abs (t :: p) cons_elems)
(Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ cons_elems0))
(Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) rest_elems0), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems)
(Abs (merge p p) cons_elems), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems ++ rest_elems0))
(Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) cons_elems0)
(Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems))
(Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) rest_elems0)
(Abs (join p p t) cons_elems0), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems))
(Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ cons_elems0)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) rest_elems0), (Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ cons_elems0))
(Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0))
(Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] rest_elems0), (Abs [] cons_elems0), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems))
(Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ cons_elems0))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems))
(priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p [])
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems))
(priqueue_elems (t :: p) []), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0))
(priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems))
(priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems))
(priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0))
(priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0))
(priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems))
(priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] rest_elems0), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ cons_elems0))
(priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems))
(tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ rest_elems0))
(tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0))
(tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems))
(tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf rest_elems0), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (rest_elems0 ++ rest_elems0))
(tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems))
(tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t))
(priq (carry p t)), (priq (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length cons_elems0) p)
(priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t))
(priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p))
(priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t)), (priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length cons_elems0) t)
(pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t)
(pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t)
(pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ cons_elems0)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems))
(Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 []), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems0)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems))
(Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (rest_elems0 ++ rest_elems0))
(Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems))
(Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems)
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems)
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems)
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) rest_elems0), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems)
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems)
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems)
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems)
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems)
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems)
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems)
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems)
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems)
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ rest_elems0) rest_elems0), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems)
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems)
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems)
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems)
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] rest_elems0), (Permutation [] cons_elems0), (Permutation [] rest_elems), (Permutation [] cons_elems)
(Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems ++ rest_elems0)), (Permutation [] (rest_elems ++ cons_elems0))
(Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p)), (In t (heap_delete_max t)), (In t (join p p t))
(In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t)), (In (smash t t) (p ++ p)), (In Leaf p)
(In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length rest_elems0) rest_elems0), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems)
(In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ cons_elems0))
(In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length cons_elems0) rest_elems0), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems)
(In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ cons_elems0))
(In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems) rest_elems0), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems)
(In (length rest_elems) (rest_elems0 ++ rest_elems0)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ cons_elems0))
(In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) rest_elems0), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems)
(In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ cons_elems0))
(In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) rest_elems0), (In (length p) cons_elems0), (In (length p) rest_elems), (In (length p) cons_elems)
(In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ cons_elems0))
(In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p)
(length cons_elems0 < length rest_elems0), (length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems < length rest_elems0), (length rest_elems < length cons_elems0), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length rest_elems0), (length cons_elems < length cons_elems0)
(length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length rest_elems0), (length p < length cons_elems0), (length p < length rest_elems), (length p < length cons_elems), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p)
(length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems <= length rest_elems0), (length rest_elems <= length cons_elems0), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length rest_elems0), (length cons_elems <= length cons_elems0)
(length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length rest_elems0), (length p <= length cons_elems0), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p rest_elems0), (~ Abs p cons_elems0), (~ Abs p rest_elems), (~ Abs p cons_elems)
(~ priqueue_elems p rest_elems0), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t rest_elems0), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation rest_elems0 rest_elems0)
(~ Permutation rest_elems0 cons_elems0), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems rest_elems)
(~ Permutation rest_elems cons_elems), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p), (~ In t p), (t <> t), (p <> p), (rest_elems0 <> rest_elems0)
(rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (cons_elems0 <> rest_elems0), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems <> rest_elems0), (rest_elems <> cons_elems0), (rest_elems <> rest_elems)
(rest_elems <> cons_elems), (cons_elems <> rest_elems0), (cons_elems <> cons_elems0), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some rest_elems0), (None = Some cons_elems0), (None = Some rest_elems), (None = Some cons_elems), (None = Some p)
(t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p), (t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t)
(merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p), (join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p)
(carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t), ([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t)
(rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = cons_elems0)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems)
(cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = cons_elems0)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems)
(rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = rest_elems0), ([] = cons_elems0), ([] = rest_elems), ([] = cons_elems), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems)
([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p), (None = Some t)

Label: 2 (2)
(Abs p rest_elems0), (Abs p cons_elems0), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p rest_elems0), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems), (tree_elems t rest_elems0), (tree_elems t cons_elems0)
(tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems rest_elems0), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems rest_elems0), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems), (Permutation cons_elems cons_elems), (Permutation p p)
(In t p), (t = t), (p = p), (rest_elems0 = rest_elems0), (rest_elems0 = cons_elems0), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (cons_elems0 = rest_elems0), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems)
(cons_elems0 = cons_elems), (rest_elems = rest_elems0), (rest_elems = cons_elems0), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = rest_elems0), (cons_elems = cons_elems0), (cons_elems = rest_elems), (cons_elems = cons_elems), (Abs p (rest_elems0 ++ rest_elems0))
(Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems))
(Abs p (rest_elems ++ cons_elems)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) rest_elems0), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems), (Abs (t :: p) cons_elems)
(Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ cons_elems0))
(Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) rest_elems0), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems)
(Abs (merge p p) cons_elems), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems ++ rest_elems0))
(Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) cons_elems0)
(Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems))
(Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) rest_elems0)
(Abs (join p p t) cons_elems0), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems))
(Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ cons_elems0)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) rest_elems0), (Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ cons_elems0))
(Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0))
(Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] rest_elems0), (Abs [] cons_elems0), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems))
(Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ cons_elems0))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems))
(priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p [])
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems))
(priqueue_elems (t :: p) []), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0))
(priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems))
(priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems))
(priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0))
(priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0))
(priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems))
(priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] rest_elems0), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ cons_elems0))
(priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems))
(tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ rest_elems0))
(tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0))
(tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems))
(tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf rest_elems0), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (rest_elems0 ++ rest_elems0))
(tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems))
(tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t))
(priq (carry p t)), (priq (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length cons_elems0) p)
(priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t))
(priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p))
(priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t)), (priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length cons_elems0) t)
(pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t)
(pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t)
(pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ cons_elems0)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems))
(Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 []), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems0)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems))
(Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (rest_elems0 ++ rest_elems0))
(Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems))
(Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems)
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems)
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems)
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) rest_elems0), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems)
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems)
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems)
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems)
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems)
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems)
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems)
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems)
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems)
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ rest_elems0) rest_elems0), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems)
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems)
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems)
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems)
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] rest_elems0), (Permutation [] cons_elems0), (Permutation [] rest_elems), (Permutation [] cons_elems)
(Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems ++ rest_elems0)), (Permutation [] (rest_elems ++ cons_elems0))
(Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p)), (In t (heap_delete_max t)), (In t (join p p t))
(In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t)), (In (smash t t) (p ++ p)), (In Leaf p)
(In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length rest_elems0) rest_elems0), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems)
(In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ cons_elems0))
(In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length cons_elems0) rest_elems0), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems)
(In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ cons_elems0))
(In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems) rest_elems0), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems)
(In (length rest_elems) (rest_elems0 ++ rest_elems0)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ cons_elems0))
(In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) rest_elems0), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems)
(In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ cons_elems0))
(In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) rest_elems0), (In (length p) cons_elems0), (In (length p) rest_elems), (In (length p) cons_elems)
(In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ cons_elems0))
(In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p)
(length cons_elems0 < length rest_elems0), (length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems < length rest_elems0), (length rest_elems < length cons_elems0), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length rest_elems0), (length cons_elems < length cons_elems0)
(length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length rest_elems0), (length p < length cons_elems0), (length p < length rest_elems), (length p < length cons_elems), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p)
(length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems <= length rest_elems0), (length rest_elems <= length cons_elems0), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length rest_elems0), (length cons_elems <= length cons_elems0)
(length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length rest_elems0), (length p <= length cons_elems0), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p rest_elems0), (~ Abs p cons_elems0), (~ Abs p rest_elems), (~ Abs p cons_elems)
(~ priqueue_elems p rest_elems0), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t rest_elems0), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation rest_elems0 rest_elems0)
(~ Permutation rest_elems0 cons_elems0), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems rest_elems)
(~ Permutation rest_elems cons_elems), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p), (~ In t p), (t <> t), (p <> p), (rest_elems0 <> rest_elems0)
(rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (cons_elems0 <> rest_elems0), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems <> rest_elems0), (rest_elems <> cons_elems0), (rest_elems <> rest_elems)
(rest_elems <> cons_elems), (cons_elems <> rest_elems0), (cons_elems <> cons_elems0), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some rest_elems0), (None = Some cons_elems0), (None = Some rest_elems), (None = Some cons_elems), (None = Some p)
(t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p), (t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t)
(merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p), (join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p)
(carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t), ([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t)
(rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = cons_elems0)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems)
(cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = cons_elems0)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems)
(rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = rest_elems0), ([] = cons_elems0), ([] = rest_elems), ([] = cons_elems), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems)
([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p), (None = Some t)

Label: 3 (3)
(Abs p rest_elems0), (Abs p cons_elems0), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p rest_elems0), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems), (tree_elems t rest_elems0), (tree_elems t cons_elems0)
(tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems rest_elems0), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems rest_elems0), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems), (Permutation cons_elems cons_elems), (Permutation p p)
(In t p), (t = t), (p = p), (rest_elems0 = rest_elems0), (rest_elems0 = cons_elems0), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (cons_elems0 = rest_elems0), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems)
(cons_elems0 = cons_elems), (rest_elems = rest_elems0), (rest_elems = cons_elems0), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = rest_elems0), (cons_elems = cons_elems0), (cons_elems = rest_elems), (cons_elems = cons_elems), (Abs p (rest_elems0 ++ rest_elems0))
(Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems))
(Abs p (rest_elems ++ cons_elems)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) rest_elems0), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems), (Abs (t :: p) cons_elems)
(Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ cons_elems0))
(Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) rest_elems0), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems)
(Abs (merge p p) cons_elems), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems ++ rest_elems0))
(Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) cons_elems0)
(Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems))
(Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) rest_elems0)
(Abs (join p p t) cons_elems0), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems))
(Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ cons_elems0)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) rest_elems0), (Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ cons_elems0))
(Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0))
(Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] rest_elems0), (Abs [] cons_elems0), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems))
(Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ cons_elems0))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems))
(priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p [])
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems))
(priqueue_elems (t :: p) []), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0))
(priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems))
(priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems))
(priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0))
(priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0))
(priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems))
(priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] rest_elems0), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ cons_elems0))
(priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems))
(tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ rest_elems0))
(tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0))
(tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems))
(tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf rest_elems0), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (rest_elems0 ++ rest_elems0))
(tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems))
(tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t))
(priq (carry p t)), (priq (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length cons_elems0) p)
(priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t))
(priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p))
(priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t)), (priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length cons_elems0) t)
(pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t)
(pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf)
(pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t)
(pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t))
(pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ cons_elems0)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems))
(Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 []), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems0)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems))
(Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (rest_elems0 ++ rest_elems0))
(Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems))
(Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems)
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems)
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems)
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) rest_elems0), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems)
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems)
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems)
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems)
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems)
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems)
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems)
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems)
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems)
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ rest_elems0) rest_elems0), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems)
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems)
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems)
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems)
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] rest_elems0), (Permutation [] cons_elems0), (Permutation [] rest_elems), (Permutation [] cons_elems)
(Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems ++ rest_elems0)), (Permutation [] (rest_elems ++ cons_elems0))
(Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p)), (In t (heap_delete_max t)), (In t (join p p t))
(In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t)), (In (smash t t) (p ++ p)), (In Leaf p)
(In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length rest_elems0) rest_elems0), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems)
(In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ cons_elems0))
(In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length cons_elems0) rest_elems0), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems)
(In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ cons_elems0))
(In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems) rest_elems0), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems)
(In (length rest_elems) (rest_elems0 ++ rest_elems0)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ cons_elems0))
(In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) rest_elems0), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems)
(In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ cons_elems0))
(In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) rest_elems0), (In (length p) cons_elems0), (In (length p) rest_elems), (In (length p) cons_elems)
(In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ cons_elems0))
(In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p)
(length cons_elems0 < length rest_elems0), (length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems < length rest_elems0), (length rest_elems < length cons_elems0), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length rest_elems0), (length cons_elems < length cons_elems0)
(length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length rest_elems0), (length p < length cons_elems0), (length p < length rest_elems), (length p < length cons_elems), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p)
(length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems <= length rest_elems0), (length rest_elems <= length cons_elems0), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length rest_elems0), (length cons_elems <= length cons_elems0)
(length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length rest_elems0), (length p <= length cons_elems0), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p rest_elems0), (~ Abs p cons_elems0), (~ Abs p rest_elems), (~ Abs p cons_elems)
(~ priqueue_elems p rest_elems0), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t rest_elems0), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation rest_elems0 rest_elems0)
(~ Permutation rest_elems0 cons_elems0), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems rest_elems)
(~ Permutation rest_elems cons_elems), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p), (~ In t p), (t <> t), (p <> p), (rest_elems0 <> rest_elems0)
(rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (cons_elems0 <> rest_elems0), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems <> rest_elems0), (rest_elems <> cons_elems0), (rest_elems <> rest_elems)
(rest_elems <> cons_elems), (cons_elems <> rest_elems0), (cons_elems <> cons_elems0), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some rest_elems0), (None = Some cons_elems0), (None = Some rest_elems), (None = Some cons_elems), (None = Some p)
(t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p), (t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t)
(merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p), (join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p)
(carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t), ([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t)
(rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = cons_elems0)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems)
(cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = cons_elems0)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems)
(rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = rest_elems0), ([] = cons_elems0), ([] = rest_elems), ([] = cons_elems), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems)
([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p), (None = Some t)

Label: 4 (4)
(Abs p cons_elems), (Abs p rest_elems), (Abs p rest_elems0), (Abs p cons_elems0), (Abs p gv0), (priqueue_elems p cons_elems), (priqueue_elems p rest_elems), (priqueue_elems p rest_elems0), (priqueue_elems p cons_elems0), (priqueue_elems p gv0)
(tree_elems t cons_elems), (tree_elems t rest_elems), (tree_elems t rest_elems0), (tree_elems t cons_elems0), (tree_elems t gv0), (priq p), (Permutation cons_elems cons_elems), (Permutation cons_elems rest_elems), (Permutation cons_elems rest_elems0), (Permutation cons_elems cons_elems0)
(Permutation cons_elems gv0), (Permutation rest_elems cons_elems), (Permutation rest_elems rest_elems), (Permutation rest_elems rest_elems0), (Permutation rest_elems cons_elems0), (Permutation rest_elems gv0), (Permutation rest_elems0 cons_elems), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 cons_elems0)
(Permutation rest_elems0 gv0), (Permutation cons_elems0 cons_elems), (Permutation cons_elems0 rest_elems), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 gv0), (Permutation gv0 cons_elems), (Permutation gv0 rest_elems), (Permutation gv0 rest_elems0), (Permutation gv0 cons_elems0)
(Permutation gv0 gv0), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems = cons_elems), (cons_elems = rest_elems), (cons_elems = rest_elems0), (cons_elems = cons_elems0), (cons_elems = gv0)
(rest_elems = cons_elems), (rest_elems = rest_elems), (rest_elems = rest_elems0), (rest_elems = cons_elems0), (rest_elems = gv0), (rest_elems0 = cons_elems), (rest_elems0 = rest_elems), (rest_elems0 = rest_elems0), (rest_elems0 = cons_elems0), (rest_elems0 = gv0)
(cons_elems0 = cons_elems), (cons_elems0 = rest_elems), (cons_elems0 = rest_elems0), (cons_elems0 = cons_elems0), (cons_elems0 = gv0), (gv0 = cons_elems), (gv0 = rest_elems), (gv0 = rest_elems0), (gv0 = cons_elems0), (gv0 = gv0)
(Abs p (cons_elems ++ cons_elems)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ gv0)), (Abs p (rest_elems ++ cons_elems)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ gv0))
(Abs p (rest_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ gv0)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ gv0))
(Abs p (gv0 ++ cons_elems)), (Abs p (gv0 ++ rest_elems)), (Abs p (gv0 ++ rest_elems0)), (Abs p (gv0 ++ cons_elems0)), (Abs p (gv0 ++ gv0)), (Abs p []), (Abs (t :: p) cons_elems), (Abs (t :: p) rest_elems), (Abs (t :: p) rest_elems0), (Abs (t :: p) cons_elems0)
(Abs (t :: p) gv0), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ gv0)), (Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ cons_elems0))
(Abs (t :: p) (rest_elems ++ gv0)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ gv0)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ cons_elems0))
(Abs (t :: p) (cons_elems0 ++ gv0)), (Abs (t :: p) (gv0 ++ cons_elems)), (Abs (t :: p) (gv0 ++ rest_elems)), (Abs (t :: p) (gv0 ++ rest_elems0)), (Abs (t :: p) (gv0 ++ cons_elems0)), (Abs (t :: p) (gv0 ++ gv0)), (Abs (t :: p) []), (Abs (merge p p) cons_elems), (Abs (merge p p) rest_elems), (Abs (merge p p) rest_elems0)
(Abs (merge p p) cons_elems0), (Abs (merge p p) gv0), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ gv0)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ rest_elems0))
(Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ gv0)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ gv0)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ rest_elems0))
(Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ gv0)), (Abs (merge p p) (gv0 ++ cons_elems)), (Abs (merge p p) (gv0 ++ rest_elems)), (Abs (merge p p) (gv0 ++ rest_elems0)), (Abs (merge p p) (gv0 ++ cons_elems0)), (Abs (merge p p) (gv0 ++ gv0)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) rest_elems)
(Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) gv0), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ gv0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems))
(Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ gv0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ gv0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems))
(Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ gv0)), (Abs (heap_delete_max t) (gv0 ++ cons_elems)), (Abs (heap_delete_max t) (gv0 ++ rest_elems)), (Abs (heap_delete_max t) (gv0 ++ rest_elems0)), (Abs (heap_delete_max t) (gv0 ++ cons_elems0)), (Abs (heap_delete_max t) (gv0 ++ gv0)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems)
(Abs (join p p t) rest_elems), (Abs (join p p t) rest_elems0), (Abs (join p p t) cons_elems0), (Abs (join p p t) gv0), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ gv0)), (Abs (join p p t) (rest_elems ++ cons_elems))
(Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ cons_elems0)), (Abs (join p p t) (rest_elems ++ gv0)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ gv0)), (Abs (join p p t) (cons_elems0 ++ cons_elems))
(Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ gv0)), (Abs (join p p t) (gv0 ++ cons_elems)), (Abs (join p p t) (gv0 ++ rest_elems)), (Abs (join p p t) (gv0 ++ rest_elems0)), (Abs (join p p t) (gv0 ++ cons_elems0)), (Abs (join p p t) (gv0 ++ gv0)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems), (Abs (carry p t) rest_elems), (Abs (carry p t) rest_elems0), (Abs (carry p t) cons_elems0), (Abs (carry p t) gv0), (Abs (carry p t) (cons_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ gv0))
(Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ gv0)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ gv0))
(Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ gv0)), (Abs (carry p t) (gv0 ++ cons_elems)), (Abs (carry p t) (gv0 ++ rest_elems)), (Abs (carry p t) (gv0 ++ rest_elems0)), (Abs (carry p t) (gv0 ++ cons_elems0)), (Abs (carry p t) (gv0 ++ gv0))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems), (Abs (p ++ p) rest_elems), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) gv0), (Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ cons_elems0))
(Abs (p ++ p) (cons_elems ++ gv0)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ gv0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0))
(Abs (p ++ p) (rest_elems0 ++ gv0)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ gv0)), (Abs (p ++ p) (gv0 ++ cons_elems)), (Abs (p ++ p) (gv0 ++ rest_elems)), (Abs (p ++ p) (gv0 ++ rest_elems0)), (Abs (p ++ p) (gv0 ++ cons_elems0))
(Abs (p ++ p) (gv0 ++ gv0)), (Abs (p ++ p) []), (Abs [] cons_elems), (Abs [] rest_elems), (Abs [] rest_elems0), (Abs [] cons_elems0), (Abs [] gv0), (Abs [] (cons_elems ++ cons_elems)), (Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ rest_elems0))
(Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ gv0)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ gv0)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ rest_elems0))
(Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ gv0)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ gv0)), (Abs [] (gv0 ++ cons_elems)), (Abs [] (gv0 ++ rest_elems)), (Abs [] (gv0 ++ rest_elems0))
(Abs [] (gv0 ++ cons_elems0)), (Abs [] (gv0 ++ gv0)), (Abs [] []), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ gv0)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (rest_elems ++ rest_elems))
(priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ gv0)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ gv0)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ rest_elems))
(priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ gv0)), (priqueue_elems p (gv0 ++ cons_elems)), (priqueue_elems p (gv0 ++ rest_elems)), (priqueue_elems p (gv0 ++ rest_elems0)), (priqueue_elems p (gv0 ++ cons_elems0)), (priqueue_elems p (gv0 ++ gv0)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems)
(priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) gv0), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ gv0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ gv0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ gv0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems))
(priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ gv0)), (priqueue_elems (t :: p) (gv0 ++ cons_elems)), (priqueue_elems (t :: p) (gv0 ++ rest_elems)), (priqueue_elems (t :: p) (gv0 ++ rest_elems0)), (priqueue_elems (t :: p) (gv0 ++ cons_elems0)), (priqueue_elems (t :: p) (gv0 ++ gv0)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) gv0), (priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ gv0))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ gv0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ gv0))
(priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ gv0)), (priqueue_elems (merge p p) (gv0 ++ cons_elems)), (priqueue_elems (merge p p) (gv0 ++ rest_elems)), (priqueue_elems (merge p p) (gv0 ++ rest_elems0)), (priqueue_elems (merge p p) (gv0 ++ cons_elems0)), (priqueue_elems (merge p p) (gv0 ++ gv0))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) gv0), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (cons_elems ++ gv0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ gv0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (rest_elems0 ++ gv0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ gv0)), (priqueue_elems (heap_delete_max t) (gv0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (gv0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (gv0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (gv0 ++ cons_elems0))
(priqueue_elems (heap_delete_max t) (gv0 ++ gv0)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) gv0), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0))
(priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ gv0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ gv0)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0))
(priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ gv0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ gv0)), (priqueue_elems (join p p t) (gv0 ++ cons_elems)), (priqueue_elems (join p p t) (gv0 ++ rest_elems)), (priqueue_elems (join p p t) (gv0 ++ rest_elems0))
(priqueue_elems (join p p t) (gv0 ++ cons_elems0)), (priqueue_elems (join p p t) (gv0 ++ gv0)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) gv0), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems))
(priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ gv0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ gv0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems))
(priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ gv0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ gv0)), (priqueue_elems (carry p t) (gv0 ++ cons_elems)), (priqueue_elems (carry p t) (gv0 ++ rest_elems))
(priqueue_elems (carry p t) (gv0 ++ rest_elems0)), (priqueue_elems (carry p t) (gv0 ++ cons_elems0)), (priqueue_elems (carry p t) (gv0 ++ gv0)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) gv0), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ gv0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ gv0)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems))
(priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ gv0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ gv0)), (priqueue_elems (p ++ p) (gv0 ++ cons_elems))
(priqueue_elems (p ++ p) (gv0 ++ rest_elems)), (priqueue_elems (p ++ p) (gv0 ++ rest_elems0)), (priqueue_elems (p ++ p) (gv0 ++ cons_elems0)), (priqueue_elems (p ++ p) (gv0 ++ gv0)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems), (priqueue_elems [] rest_elems), (priqueue_elems [] rest_elems0), (priqueue_elems [] cons_elems0), (priqueue_elems [] gv0)
(priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ gv0)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ gv0))
(priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ gv0)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ gv0))
(priqueue_elems [] (gv0 ++ cons_elems)), (priqueue_elems [] (gv0 ++ rest_elems)), (priqueue_elems [] (gv0 ++ rest_elems0)), (priqueue_elems [] (gv0 ++ cons_elems0)), (priqueue_elems [] (gv0 ++ gv0)), (priqueue_elems [] []), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ cons_elems0))
(tree_elems t (cons_elems ++ gv0)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ gv0)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ cons_elems0))
(tree_elems t (rest_elems0 ++ gv0)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ gv0)), (tree_elems t (gv0 ++ cons_elems)), (tree_elems t (gv0 ++ rest_elems)), (tree_elems t (gv0 ++ rest_elems0)), (tree_elems t (gv0 ++ cons_elems0))
(tree_elems t (gv0 ++ gv0)), (tree_elems t []), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) gv0), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ rest_elems0))
(tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ gv0)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ gv0)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0))
(tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ gv0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ gv0)), (tree_elems (smash t t) (gv0 ++ cons_elems)), (tree_elems (smash t t) (gv0 ++ rest_elems)), (tree_elems (smash t t) (gv0 ++ rest_elems0))
(tree_elems (smash t t) (gv0 ++ cons_elems0)), (tree_elems (smash t t) (gv0 ++ gv0)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems), (tree_elems Leaf rest_elems), (tree_elems Leaf rest_elems0), (tree_elems Leaf cons_elems0), (tree_elems Leaf gv0), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ rest_elems))
(tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ gv0)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ gv0)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ rest_elems))
(tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ gv0)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ gv0)), (tree_elems Leaf (gv0 ++ cons_elems)), (tree_elems Leaf (gv0 ++ rest_elems))
(tree_elems Leaf (gv0 ++ rest_elems0)), (tree_elems Leaf (gv0 ++ cons_elems0)), (tree_elems Leaf (gv0 ++ gv0)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p))
(priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t))
(priqq (length rest_elems0) (p ++ p)), (priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length gv0) p), (priqq (length gv0) (t :: p))
(priqq (length gv0) (merge p p)), (priqq (length gv0) (heap_delete_max t)), (priqq (length gv0) (join p p t)), (priqq (length gv0) (carry p t)), (priqq (length gv0) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t))
(pow2heap (length gv0) t), (pow2heap (length gv0) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf)
(pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length gv0) t), (pow2heapp (length cons_elems) (length gv0) (smash t t)), (pow2heapp (length cons_elems) (length gv0) Leaf), (pow2heapp (length cons_elems) (length p) t)
(pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t))
(pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length gv0) t), (pow2heapp (length rest_elems) (length gv0) (smash t t)), (pow2heapp (length rest_elems) (length gv0) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf)
(pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t)
(pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length gv0) t), (pow2heapp (length rest_elems0) (length gv0) (smash t t)), (pow2heapp (length rest_elems0) (length gv0) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf)
(pow2heapp (length cons_elems0) (length gv0) t), (pow2heapp (length cons_elems0) (length gv0) (smash t t)), (pow2heapp (length cons_elems0) (length gv0) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length gv0) (length cons_elems) t), (pow2heapp (length gv0) (length cons_elems) (smash t t)), (pow2heapp (length gv0) (length cons_elems) Leaf), (pow2heapp (length gv0) (length rest_elems) t)
(pow2heapp (length gv0) (length rest_elems) (smash t t)), (pow2heapp (length gv0) (length rest_elems) Leaf), (pow2heapp (length gv0) (length rest_elems0) t), (pow2heapp (length gv0) (length rest_elems0) (smash t t)), (pow2heapp (length gv0) (length rest_elems0) Leaf), (pow2heapp (length gv0) (length cons_elems0) t), (pow2heapp (length gv0) (length cons_elems0) (smash t t)), (pow2heapp (length gv0) (length cons_elems0) Leaf), (pow2heapp (length gv0) (length gv0) t), (pow2heapp (length gv0) (length gv0) (smash t t))
(pow2heapp (length gv0) (length gv0) Leaf), (pow2heapp (length gv0) (length p) t), (pow2heapp (length gv0) (length p) (smash t t)), (pow2heapp (length gv0) (length p) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf)
(pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length gv0) t), (pow2heapp (length p) (length gv0) (smash t t)), (pow2heapp (length p) (length gv0) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ rest_elems))
(Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ gv0)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ gv0)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ rest_elems))
(Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ gv0)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ gv0)), (Permutation cons_elems (gv0 ++ cons_elems)), (Permutation cons_elems (gv0 ++ rest_elems))
(Permutation cons_elems (gv0 ++ rest_elems0)), (Permutation cons_elems (gv0 ++ cons_elems0)), (Permutation cons_elems (gv0 ++ gv0)), (Permutation cons_elems []), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ gv0)), (Permutation rest_elems (rest_elems ++ cons_elems))
(Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ gv0)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ gv0)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ gv0)), (Permutation rest_elems (gv0 ++ cons_elems)), (Permutation rest_elems (gv0 ++ rest_elems)), (Permutation rest_elems (gv0 ++ rest_elems0)), (Permutation rest_elems (gv0 ++ cons_elems0)), (Permutation rest_elems (gv0 ++ gv0)), (Permutation rest_elems [])
(Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ gv0)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ cons_elems0)), (Permutation rest_elems0 (rest_elems ++ gv0))
(Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0)), (Permutation rest_elems0 (rest_elems0 ++ gv0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ gv0))
(Permutation rest_elems0 (gv0 ++ cons_elems)), (Permutation rest_elems0 (gv0 ++ rest_elems)), (Permutation rest_elems0 (gv0 ++ rest_elems0)), (Permutation rest_elems0 (gv0 ++ cons_elems0)), (Permutation rest_elems0 (gv0 ++ gv0)), (Permutation rest_elems0 []), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ rest_elems0)), (Permutation cons_elems0 (cons_elems ++ cons_elems0))
(Permutation cons_elems0 (cons_elems ++ gv0)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ gv0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0))
(Permutation cons_elems0 (rest_elems0 ++ gv0)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ gv0)), (Permutation cons_elems0 (gv0 ++ cons_elems)), (Permutation cons_elems0 (gv0 ++ rest_elems)), (Permutation cons_elems0 (gv0 ++ rest_elems0)), (Permutation cons_elems0 (gv0 ++ cons_elems0))
(Permutation cons_elems0 (gv0 ++ gv0)), (Permutation cons_elems0 []), (Permutation gv0 (cons_elems ++ cons_elems)), (Permutation gv0 (cons_elems ++ rest_elems)), (Permutation gv0 (cons_elems ++ rest_elems0)), (Permutation gv0 (cons_elems ++ cons_elems0)), (Permutation gv0 (cons_elems ++ gv0)), (Permutation gv0 (rest_elems ++ cons_elems)), (Permutation gv0 (rest_elems ++ rest_elems)), (Permutation gv0 (rest_elems ++ rest_elems0))
(Permutation gv0 (rest_elems ++ cons_elems0)), (Permutation gv0 (rest_elems ++ gv0)), (Permutation gv0 (rest_elems0 ++ cons_elems)), (Permutation gv0 (rest_elems0 ++ rest_elems)), (Permutation gv0 (rest_elems0 ++ rest_elems0)), (Permutation gv0 (rest_elems0 ++ cons_elems0)), (Permutation gv0 (rest_elems0 ++ gv0)), (Permutation gv0 (cons_elems0 ++ cons_elems)), (Permutation gv0 (cons_elems0 ++ rest_elems)), (Permutation gv0 (cons_elems0 ++ rest_elems0))
(Permutation gv0 (cons_elems0 ++ cons_elems0)), (Permutation gv0 (cons_elems0 ++ gv0)), (Permutation gv0 (gv0 ++ cons_elems)), (Permutation gv0 (gv0 ++ rest_elems)), (Permutation gv0 (gv0 ++ rest_elems0)), (Permutation gv0 (gv0 ++ cons_elems0)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) rest_elems)
(Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) gv0), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) []), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) rest_elems)
(Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) gv0), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) rest_elems)
(Permutation (cons_elems ++ rest_elems0) rest_elems0), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) gv0), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) rest_elems)
(Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) gv0), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ gv0) cons_elems), (Permutation (cons_elems ++ gv0) rest_elems)
(Permutation (cons_elems ++ gv0) rest_elems0), (Permutation (cons_elems ++ gv0) cons_elems0), (Permutation (cons_elems ++ gv0) gv0), (Permutation (cons_elems ++ gv0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ gv0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ gv0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ gv0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ gv0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (gv0 ++ gv0)), (Permutation (cons_elems ++ gv0) []), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) rest_elems)
(Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) gv0), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) rest_elems)
(Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) gv0), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) rest_elems)
(Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) gv0), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) rest_elems)
(Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) gv0), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ gv0) cons_elems), (Permutation (rest_elems ++ gv0) rest_elems)
(Permutation (rest_elems ++ gv0) rest_elems0), (Permutation (rest_elems ++ gv0) cons_elems0), (Permutation (rest_elems ++ gv0) gv0), (Permutation (rest_elems ++ gv0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ gv0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ gv0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ gv0) (rest_elems ++ rest_elems))
(Permutation (rest_elems ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ gv0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (gv0 ++ gv0)), (Permutation (rest_elems ++ gv0) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) rest_elems)
(Permutation (rest_elems0 ++ cons_elems) rest_elems0), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) gv0), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) rest_elems)
(Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) gv0), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) rest_elems)
(Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) gv0), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) rest_elems)
(Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) gv0), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ gv0) cons_elems), (Permutation (rest_elems0 ++ gv0) rest_elems)
(Permutation (rest_elems0 ++ gv0) rest_elems0), (Permutation (rest_elems0 ++ gv0) cons_elems0), (Permutation (rest_elems0 ++ gv0) gv0), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ rest_elems))
(Permutation (rest_elems0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ gv0) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) rest_elems)
(Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) gv0), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) rest_elems)
(Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) gv0), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0))
(Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) rest_elems)
(Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) gv0), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems))
(Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) rest_elems)
(Permutation (cons_elems0 ++ cons_elems0) rest_elems0), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) gv0), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ gv0) cons_elems), (Permutation (cons_elems0 ++ gv0) rest_elems)
(Permutation (cons_elems0 ++ gv0) rest_elems0), (Permutation (cons_elems0 ++ gv0) cons_elems0), (Permutation (cons_elems0 ++ gv0) gv0), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ rest_elems))
(Permutation (cons_elems0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ rest_elems))
(Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ gv0) []), (Permutation (gv0 ++ cons_elems) cons_elems), (Permutation (gv0 ++ cons_elems) rest_elems)
(Permutation (gv0 ++ cons_elems) rest_elems0), (Permutation (gv0 ++ cons_elems) cons_elems0), (Permutation (gv0 ++ cons_elems) gv0), (Permutation (gv0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ rest_elems))
(Permutation (gv0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ rest_elems))
(Permutation (gv0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (gv0 ++ cons_elems) []), (Permutation (gv0 ++ rest_elems) cons_elems), (Permutation (gv0 ++ rest_elems) rest_elems)
(Permutation (gv0 ++ rest_elems) rest_elems0), (Permutation (gv0 ++ rest_elems) cons_elems0), (Permutation (gv0 ++ rest_elems) gv0), (Permutation (gv0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ gv0)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ rest_elems))
(Permutation (gv0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ gv0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ rest_elems))
(Permutation (gv0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (gv0 ++ rest_elems) []), (Permutation (gv0 ++ rest_elems0) cons_elems), (Permutation (gv0 ++ rest_elems0) rest_elems)
(Permutation (gv0 ++ rest_elems0) rest_elems0), (Permutation (gv0 ++ rest_elems0) cons_elems0), (Permutation (gv0 ++ rest_elems0) gv0), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ rest_elems))
(Permutation (gv0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ rest_elems))
(Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) []), (Permutation (gv0 ++ cons_elems0) cons_elems), (Permutation (gv0 ++ cons_elems0) rest_elems)
(Permutation (gv0 ++ cons_elems0) rest_elems0), (Permutation (gv0 ++ cons_elems0) cons_elems0), (Permutation (gv0 ++ cons_elems0) gv0), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ rest_elems))
(Permutation (gv0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ rest_elems))
(Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) []), (Permutation (gv0 ++ gv0) cons_elems), (Permutation (gv0 ++ gv0) rest_elems)
(Permutation (gv0 ++ gv0) rest_elems0), (Permutation (gv0 ++ gv0) cons_elems0), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ gv0) (cons_elems ++ gv0)), (Permutation (gv0 ++ gv0) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ gv0) (rest_elems ++ rest_elems))
(Permutation (gv0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ gv0) (rest_elems ++ gv0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ rest_elems))
(Permutation (gv0 ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ gv0) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) []), (Permutation [] cons_elems), (Permutation [] rest_elems)
(Permutation [] rest_elems0), (Permutation [] cons_elems0), (Permutation [] gv0), (Permutation [] (cons_elems ++ cons_elems)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ gv0)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (rest_elems ++ rest_elems))
(Permutation [] (rest_elems ++ rest_elems0)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ gv0)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ gv0)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (cons_elems0 ++ rest_elems))
(Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ gv0)), (Permutation [] (gv0 ++ cons_elems)), (Permutation [] (gv0 ++ rest_elems)), (Permutation [] (gv0 ++ rest_elems0)), (Permutation [] (gv0 ++ cons_elems0)), (Permutation [] (gv0 ++ gv0)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems) cons_elems), (In (length cons_elems) rest_elems)
(In (length cons_elems) rest_elems0), (In (length cons_elems) cons_elems0), (In (length cons_elems) gv0), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ gv0)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (rest_elems ++ rest_elems))
(In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ gv0)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ gv0)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ rest_elems))
(In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ gv0)), (In (length cons_elems) (gv0 ++ cons_elems)), (In (length cons_elems) (gv0 ++ rest_elems)), (In (length cons_elems) (gv0 ++ rest_elems0)), (In (length cons_elems) (gv0 ++ cons_elems0)), (In (length cons_elems) (gv0 ++ gv0)), (In (length rest_elems) cons_elems), (In (length rest_elems) rest_elems)
(In (length rest_elems) rest_elems0), (In (length rest_elems) cons_elems0), (In (length rest_elems) gv0), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ gv0)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (rest_elems ++ rest_elems))
(In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ gv0)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ rest_elems0)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ gv0)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ rest_elems))
(In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ gv0)), (In (length rest_elems) (gv0 ++ cons_elems)), (In (length rest_elems) (gv0 ++ rest_elems)), (In (length rest_elems) (gv0 ++ rest_elems0)), (In (length rest_elems) (gv0 ++ cons_elems0)), (In (length rest_elems) (gv0 ++ gv0)), (In (length rest_elems0) cons_elems), (In (length rest_elems0) rest_elems)
(In (length rest_elems0) rest_elems0), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) gv0), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ gv0)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ rest_elems))
(In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ gv0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ gv0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ rest_elems))
(In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ gv0)), (In (length rest_elems0) (gv0 ++ cons_elems)), (In (length rest_elems0) (gv0 ++ rest_elems)), (In (length rest_elems0) (gv0 ++ rest_elems0)), (In (length rest_elems0) (gv0 ++ cons_elems0)), (In (length rest_elems0) (gv0 ++ gv0)), (In (length cons_elems0) cons_elems), (In (length cons_elems0) rest_elems)
(In (length cons_elems0) rest_elems0), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) gv0), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ gv0)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ rest_elems))
(In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ gv0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ gv0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ rest_elems))
(In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ gv0)), (In (length cons_elems0) (gv0 ++ cons_elems)), (In (length cons_elems0) (gv0 ++ rest_elems)), (In (length cons_elems0) (gv0 ++ rest_elems0)), (In (length cons_elems0) (gv0 ++ cons_elems0)), (In (length cons_elems0) (gv0 ++ gv0)), (In (length gv0) cons_elems), (In (length gv0) rest_elems)
(In (length gv0) rest_elems0), (In (length gv0) cons_elems0), (In (length gv0) gv0), (In (length gv0) (cons_elems ++ cons_elems)), (In (length gv0) (cons_elems ++ rest_elems)), (In (length gv0) (cons_elems ++ rest_elems0)), (In (length gv0) (cons_elems ++ cons_elems0)), (In (length gv0) (cons_elems ++ gv0)), (In (length gv0) (rest_elems ++ cons_elems)), (In (length gv0) (rest_elems ++ rest_elems))
(In (length gv0) (rest_elems ++ rest_elems0)), (In (length gv0) (rest_elems ++ cons_elems0)), (In (length gv0) (rest_elems ++ gv0)), (In (length gv0) (rest_elems0 ++ cons_elems)), (In (length gv0) (rest_elems0 ++ rest_elems)), (In (length gv0) (rest_elems0 ++ rest_elems0)), (In (length gv0) (rest_elems0 ++ cons_elems0)), (In (length gv0) (rest_elems0 ++ gv0)), (In (length gv0) (cons_elems0 ++ cons_elems)), (In (length gv0) (cons_elems0 ++ rest_elems))
(In (length gv0) (cons_elems0 ++ rest_elems0)), (In (length gv0) (cons_elems0 ++ cons_elems0)), (In (length gv0) (cons_elems0 ++ gv0)), (In (length gv0) (gv0 ++ cons_elems)), (In (length gv0) (gv0 ++ rest_elems)), (In (length gv0) (gv0 ++ rest_elems0)), (In (length gv0) (gv0 ++ cons_elems0)), (In (length gv0) (gv0 ++ gv0)), (In (length p) cons_elems), (In (length p) rest_elems)
(In (length p) rest_elems0), (In (length p) cons_elems0), (In (length p) gv0), (In (length p) (cons_elems ++ cons_elems)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ gv0)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (rest_elems ++ rest_elems))
(In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ gv0)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ gv0)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ rest_elems))
(In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ gv0)), (In (length p) (gv0 ++ cons_elems)), (In (length p) (gv0 ++ rest_elems)), (In (length p) (gv0 ++ rest_elems0)), (In (length p) (gv0 ++ cons_elems0)), (In (length p) (gv0 ++ gv0)), (length cons_elems < length rest_elems), (length cons_elems < length rest_elems0)
(length cons_elems < length cons_elems0), (length cons_elems < length gv0), (length cons_elems < length p), (length rest_elems < length cons_elems), (length rest_elems < length rest_elems0), (length rest_elems < length cons_elems0), (length rest_elems < length gv0), (length rest_elems < length p), (length rest_elems0 < length cons_elems), (length rest_elems0 < length rest_elems)
(length rest_elems0 < length cons_elems0), (length rest_elems0 < length gv0), (length rest_elems0 < length p), (length cons_elems0 < length cons_elems), (length cons_elems0 < length rest_elems), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length gv0), (length cons_elems0 < length p), (length gv0 < length cons_elems), (length gv0 < length rest_elems)
(length gv0 < length rest_elems0), (length gv0 < length cons_elems0), (length gv0 < length p), (length p < length cons_elems), (length p < length rest_elems), (length p < length rest_elems0), (length p < length cons_elems0), (length p < length gv0), (length cons_elems <= length rest_elems), (length cons_elems <= length rest_elems0)
(length cons_elems <= length cons_elems0), (length cons_elems <= length gv0), (length cons_elems <= length p), (length rest_elems <= length cons_elems), (length rest_elems <= length rest_elems0), (length rest_elems <= length cons_elems0), (length rest_elems <= length gv0), (length rest_elems <= length p), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length rest_elems)
(length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length gv0), (length rest_elems0 <= length p), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length rest_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length gv0), (length cons_elems0 <= length p), (length gv0 <= length cons_elems), (length gv0 <= length rest_elems)
(length gv0 <= length rest_elems0), (length gv0 <= length cons_elems0), (length gv0 <= length p), (length p <= length cons_elems), (length p <= length rest_elems), (length p <= length rest_elems0), (length p <= length cons_elems0), (length p <= length gv0), (~ Abs p cons_elems), (~ Abs p rest_elems)
(~ Abs p rest_elems0), (~ Abs p cons_elems0), (~ Abs p gv0), (~ priqueue_elems p cons_elems), (~ priqueue_elems p rest_elems), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p gv0), (~ tree_elems t cons_elems), (~ tree_elems t rest_elems)
(~ tree_elems t rest_elems0), (~ tree_elems t cons_elems0), (~ tree_elems t gv0), (~ priq p), (~ Permutation cons_elems cons_elems), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems gv0), (~ Permutation rest_elems cons_elems)
(~ Permutation rest_elems rest_elems), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems gv0), (~ Permutation rest_elems0 cons_elems), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 cons_elems0), (~ Permutation rest_elems0 gv0), (~ Permutation cons_elems0 cons_elems)
(~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 gv0), (~ Permutation gv0 cons_elems), (~ Permutation gv0 rest_elems), (~ Permutation gv0 rest_elems0), (~ Permutation gv0 cons_elems0), (~ Permutation gv0 gv0), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems <> cons_elems), (cons_elems <> rest_elems), (cons_elems <> rest_elems0), (cons_elems <> cons_elems0), (cons_elems <> gv0), (rest_elems <> cons_elems), (rest_elems <> rest_elems)
(rest_elems <> rest_elems0), (rest_elems <> cons_elems0), (rest_elems <> gv0), (rest_elems0 <> cons_elems), (rest_elems0 <> rest_elems), (rest_elems0 <> rest_elems0), (rest_elems0 <> cons_elems0), (rest_elems0 <> gv0), (cons_elems0 <> cons_elems), (cons_elems0 <> rest_elems)
(cons_elems0 <> rest_elems0), (cons_elems0 <> cons_elems0), (cons_elems0 <> gv0), (gv0 <> cons_elems), (gv0 <> rest_elems), (gv0 <> rest_elems0), (gv0 <> cons_elems0), (gv0 <> gv0), (None = Some cons_elems), (None = Some rest_elems)
(None = Some rest_elems0), (None = Some cons_elems0), (None = Some gv0), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = gv0), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = gv0), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = cons_elems0), (cons_elems ++ rest_elems0 = gv0), (cons_elems ++ cons_elems0 = cons_elems)
(cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = gv0), (cons_elems ++ gv0 = cons_elems), (cons_elems ++ gv0 = rest_elems), (cons_elems ++ gv0 = rest_elems0), (cons_elems ++ gv0 = cons_elems0), (cons_elems ++ gv0 = gv0), (rest_elems ++ cons_elems = cons_elems)
(rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = gv0), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = gv0), (rest_elems ++ rest_elems0 = cons_elems)
(rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = gv0), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = gv0), (rest_elems ++ gv0 = cons_elems)
(rest_elems ++ gv0 = rest_elems), (rest_elems ++ gv0 = rest_elems0), (rest_elems ++ gv0 = cons_elems0), (rest_elems ++ gv0 = gv0), (rest_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = gv0), (rest_elems0 ++ rest_elems = cons_elems)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = gv0), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = gv0), (rest_elems0 ++ cons_elems0 = cons_elems)
(rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = gv0), (rest_elems0 ++ gv0 = cons_elems), (rest_elems0 ++ gv0 = rest_elems), (rest_elems0 ++ gv0 = rest_elems0), (rest_elems0 ++ gv0 = cons_elems0), (rest_elems0 ++ gv0 = gv0), (cons_elems0 ++ cons_elems = cons_elems)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = gv0), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = gv0), (cons_elems0 ++ rest_elems0 = cons_elems)
(cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = gv0), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = gv0), (cons_elems0 ++ gv0 = cons_elems)
(cons_elems0 ++ gv0 = rest_elems), (cons_elems0 ++ gv0 = rest_elems0), (cons_elems0 ++ gv0 = cons_elems0), (cons_elems0 ++ gv0 = gv0), (gv0 ++ cons_elems = cons_elems), (gv0 ++ cons_elems = rest_elems), (gv0 ++ cons_elems = rest_elems0), (gv0 ++ cons_elems = cons_elems0), (gv0 ++ cons_elems = gv0), (gv0 ++ rest_elems = cons_elems)
(gv0 ++ rest_elems = rest_elems), (gv0 ++ rest_elems = rest_elems0), (gv0 ++ rest_elems = cons_elems0), (gv0 ++ rest_elems = gv0), (gv0 ++ rest_elems0 = cons_elems), (gv0 ++ rest_elems0 = rest_elems), (gv0 ++ rest_elems0 = rest_elems0), (gv0 ++ rest_elems0 = cons_elems0), (gv0 ++ rest_elems0 = gv0), (gv0 ++ cons_elems0 = cons_elems)
(gv0 ++ cons_elems0 = rest_elems), (gv0 ++ cons_elems0 = rest_elems0), (gv0 ++ cons_elems0 = cons_elems0), (gv0 ++ cons_elems0 = gv0), (gv0 ++ gv0 = cons_elems), (gv0 ++ gv0 = rest_elems), (gv0 ++ gv0 = rest_elems0), (gv0 ++ gv0 = cons_elems0), (gv0 ++ gv0 = gv0), ([] = cons_elems)
([] = rest_elems), ([] = rest_elems0), ([] = cons_elems0), ([] = gv0), ([] = cons_elems ++ cons_elems), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ gv0), ([] = rest_elems ++ cons_elems)
([] = rest_elems ++ rest_elems), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ gv0), ([] = rest_elems0 ++ cons_elems), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ cons_elems0), ([] = rest_elems0 ++ gv0), ([] = cons_elems0 ++ cons_elems)
([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ gv0), ([] = gv0 ++ cons_elems), ([] = gv0 ++ rest_elems), ([] = gv0 ++ rest_elems0), ([] = gv0 ++ cons_elems0), ([] = gv0 ++ gv0), (None = find_max p)
(None = Some t)

Label: 5 (5)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p gv1), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p gv1), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t gv1), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 gv1), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 gv1), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation gv1 cons_elems0), (Permutation gv1 rest_elems0), (Permutation gv1 gv1), (Permutation gv1 rest_elems)
(Permutation gv1 cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems gv1), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems gv1), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = gv1), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = gv1), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (gv1 = cons_elems0), (gv1 = rest_elems0), (gv1 = gv1), (gv1 = rest_elems), (gv1 = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = gv1), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = gv1), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ gv1)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ gv1)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (gv1 ++ cons_elems0)), (Abs p (gv1 ++ rest_elems0)), (Abs p (gv1 ++ gv1)), (Abs p (gv1 ++ rest_elems)), (Abs p (gv1 ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ gv1)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ gv1)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) gv1), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ gv1)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ gv1)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (gv1 ++ cons_elems0)), (Abs (t :: p) (gv1 ++ rest_elems0)), (Abs (t :: p) (gv1 ++ gv1)), (Abs (t :: p) (gv1 ++ rest_elems)), (Abs (t :: p) (gv1 ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ gv1)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ gv1)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) gv1)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ gv1)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ gv1))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (gv1 ++ cons_elems0)), (Abs (merge p p) (gv1 ++ rest_elems0)), (Abs (merge p p) (gv1 ++ gv1)), (Abs (merge p p) (gv1 ++ rest_elems)), (Abs (merge p p) (gv1 ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ gv1))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ gv1)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) gv1), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ gv1)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ gv1)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (gv1 ++ cons_elems0)), (Abs (heap_delete_max t) (gv1 ++ rest_elems0)), (Abs (heap_delete_max t) (gv1 ++ gv1)), (Abs (heap_delete_max t) (gv1 ++ rest_elems)), (Abs (heap_delete_max t) (gv1 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ gv1)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ gv1)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) gv1), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ gv1)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ gv1)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (gv1 ++ cons_elems0)), (Abs (join p p t) (gv1 ++ rest_elems0)), (Abs (join p p t) (gv1 ++ gv1)), (Abs (join p p t) (gv1 ++ rest_elems)), (Abs (join p p t) (gv1 ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ gv1)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ gv1)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) gv1), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ gv1)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ gv1)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (gv1 ++ cons_elems0)), (Abs (carry p t) (gv1 ++ rest_elems0)), (Abs (carry p t) (gv1 ++ gv1)), (Abs (carry p t) (gv1 ++ rest_elems)), (Abs (carry p t) (gv1 ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ gv1)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ gv1)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) gv1), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ gv1)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ gv1)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (gv1 ++ cons_elems0)), (Abs (p ++ p) (gv1 ++ rest_elems0)), (Abs (p ++ p) (gv1 ++ gv1)), (Abs (p ++ p) (gv1 ++ rest_elems))
(Abs (p ++ p) (gv1 ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ gv1)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ gv1)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] gv1), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ gv1))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ gv1)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (gv1 ++ cons_elems0)), (Abs [] (gv1 ++ rest_elems0)), (Abs [] (gv1 ++ gv1))
(Abs [] (gv1 ++ rest_elems)), (Abs [] (gv1 ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ gv1)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ gv1))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ gv1)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ gv1)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (gv1 ++ cons_elems0)), (priqueue_elems p (gv1 ++ rest_elems0)), (priqueue_elems p (gv1 ++ gv1)), (priqueue_elems p (gv1 ++ rest_elems)), (priqueue_elems p (gv1 ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ gv1)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ gv1)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) gv1), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ gv1)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ gv1)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (gv1 ++ cons_elems0)), (priqueue_elems (t :: p) (gv1 ++ rest_elems0)), (priqueue_elems (t :: p) (gv1 ++ gv1)), (priqueue_elems (t :: p) (gv1 ++ rest_elems)), (priqueue_elems (t :: p) (gv1 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ gv1)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ gv1)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) gv1), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ gv1)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ gv1)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (gv1 ++ cons_elems0)), (priqueue_elems (merge p p) (gv1 ++ rest_elems0)), (priqueue_elems (merge p p) (gv1 ++ gv1)), (priqueue_elems (merge p p) (gv1 ++ rest_elems)), (priqueue_elems (merge p p) (gv1 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ gv1)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ gv1)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) gv1), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ gv1)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ gv1)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (gv1 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (gv1 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (gv1 ++ gv1)), (priqueue_elems (heap_delete_max t) (gv1 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (gv1 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ gv1)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ gv1)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) gv1), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ gv1))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ gv1)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (gv1 ++ cons_elems0)), (priqueue_elems (join p p t) (gv1 ++ rest_elems0)), (priqueue_elems (join p p t) (gv1 ++ gv1))
(priqueue_elems (join p p t) (gv1 ++ rest_elems)), (priqueue_elems (join p p t) (gv1 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ gv1)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ gv1))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) gv1), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ gv1)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ gv1)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (gv1 ++ cons_elems0)), (priqueue_elems (carry p t) (gv1 ++ rest_elems0))
(priqueue_elems (carry p t) (gv1 ++ gv1)), (priqueue_elems (carry p t) (gv1 ++ rest_elems)), (priqueue_elems (carry p t) (gv1 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ gv1)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ gv1)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) gv1), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ gv1)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ gv1)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (gv1 ++ cons_elems0))
(priqueue_elems (p ++ p) (gv1 ++ rest_elems0)), (priqueue_elems (p ++ p) (gv1 ++ gv1)), (priqueue_elems (p ++ p) (gv1 ++ rest_elems)), (priqueue_elems (p ++ p) (gv1 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ gv1)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ gv1)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] gv1), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ gv1)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ gv1)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (gv1 ++ cons_elems0)), (priqueue_elems [] (gv1 ++ rest_elems0)), (priqueue_elems [] (gv1 ++ gv1)), (priqueue_elems [] (gv1 ++ rest_elems)), (priqueue_elems [] (gv1 ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ gv1)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ gv1)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ gv1)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ gv1)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (gv1 ++ cons_elems0)), (tree_elems t (gv1 ++ rest_elems0)), (tree_elems t (gv1 ++ gv1)), (tree_elems t (gv1 ++ rest_elems))
(tree_elems t (gv1 ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ gv1)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ gv1)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) gv1), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ gv1))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ gv1)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (gv1 ++ cons_elems0)), (tree_elems (smash t t) (gv1 ++ rest_elems0)), (tree_elems (smash t t) (gv1 ++ gv1))
(tree_elems (smash t t) (gv1 ++ rest_elems)), (tree_elems (smash t t) (gv1 ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ gv1)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ gv1))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf gv1), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ gv1)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ gv1)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (gv1 ++ cons_elems0)), (tree_elems Leaf (gv1 ++ rest_elems0))
(tree_elems Leaf (gv1 ++ gv1)), (tree_elems Leaf (gv1 ++ rest_elems)), (tree_elems Leaf (gv1 ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ gv1)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ gv1)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length gv1) p), (priqq (length gv1) (t :: p)), (priqq (length gv1) (merge p p)), (priqq (length gv1) (heap_delete_max t)), (priqq (length gv1) (join p p t)), (priqq (length gv1) (carry p t))
(priqq (length gv1) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length gv1) t), (pow2heap (length gv1) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length gv1) t), (pow2heapp (length cons_elems0) (length gv1) (smash t t)), (pow2heapp (length cons_elems0) (length gv1) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length gv1) t), (pow2heapp (length rest_elems0) (length gv1) (smash t t))
(pow2heapp (length rest_elems0) (length gv1) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length gv1) (length cons_elems0) t), (pow2heapp (length gv1) (length cons_elems0) (smash t t)), (pow2heapp (length gv1) (length cons_elems0) Leaf), (pow2heapp (length gv1) (length rest_elems0) t), (pow2heapp (length gv1) (length rest_elems0) (smash t t)), (pow2heapp (length gv1) (length rest_elems0) Leaf), (pow2heapp (length gv1) (length gv1) t), (pow2heapp (length gv1) (length gv1) (smash t t)), (pow2heapp (length gv1) (length gv1) Leaf), (pow2heapp (length gv1) (length rest_elems) t)
(pow2heapp (length gv1) (length rest_elems) (smash t t)), (pow2heapp (length gv1) (length rest_elems) Leaf), (pow2heapp (length gv1) (length cons_elems) t), (pow2heapp (length gv1) (length cons_elems) (smash t t)), (pow2heapp (length gv1) (length cons_elems) Leaf), (pow2heapp (length gv1) (length p) t), (pow2heapp (length gv1) (length p) (smash t t)), (pow2heapp (length gv1) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length gv1) t), (pow2heapp (length rest_elems) (length gv1) (smash t t)), (pow2heapp (length rest_elems) (length gv1) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length gv1) t), (pow2heapp (length cons_elems) (length gv1) (smash t t)), (pow2heapp (length cons_elems) (length gv1) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length gv1) t), (pow2heapp (length p) (length gv1) (smash t t)), (pow2heapp (length p) (length gv1) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ gv1)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ gv1)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (gv1 ++ cons_elems0)), (Permutation cons_elems0 (gv1 ++ rest_elems0))
(Permutation cons_elems0 (gv1 ++ gv1)), (Permutation cons_elems0 (gv1 ++ rest_elems)), (Permutation cons_elems0 (gv1 ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ gv1)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ gv1)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ gv1)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ gv1)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (gv1 ++ cons_elems0)), (Permutation rest_elems0 (gv1 ++ rest_elems0)), (Permutation rest_elems0 (gv1 ++ gv1)), (Permutation rest_elems0 (gv1 ++ rest_elems)), (Permutation rest_elems0 (gv1 ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ gv1)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ gv1)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation gv1 (cons_elems0 ++ cons_elems0)), (Permutation gv1 (cons_elems0 ++ rest_elems0)), (Permutation gv1 (cons_elems0 ++ gv1)), (Permutation gv1 (cons_elems0 ++ rest_elems)), (Permutation gv1 (cons_elems0 ++ cons_elems)), (Permutation gv1 (rest_elems0 ++ cons_elems0)), (Permutation gv1 (rest_elems0 ++ rest_elems0)), (Permutation gv1 (rest_elems0 ++ gv1)), (Permutation gv1 (rest_elems0 ++ rest_elems)), (Permutation gv1 (rest_elems0 ++ cons_elems))
(Permutation gv1 (gv1 ++ cons_elems0)), (Permutation gv1 (gv1 ++ rest_elems0)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ rest_elems)), (Permutation gv1 (gv1 ++ cons_elems)), (Permutation gv1 (rest_elems ++ cons_elems0)), (Permutation gv1 (rest_elems ++ rest_elems0)), (Permutation gv1 (rest_elems ++ gv1)), (Permutation gv1 (rest_elems ++ rest_elems)), (Permutation gv1 (rest_elems ++ cons_elems))
(Permutation gv1 (cons_elems ++ cons_elems0)), (Permutation gv1 (cons_elems ++ rest_elems0)), (Permutation gv1 (cons_elems ++ gv1)), (Permutation gv1 (cons_elems ++ rest_elems)), (Permutation gv1 (cons_elems ++ cons_elems)), (Permutation gv1 []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ gv1)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ gv1)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (gv1 ++ cons_elems0)), (Permutation rest_elems (gv1 ++ rest_elems0)), (Permutation rest_elems (gv1 ++ gv1)), (Permutation rest_elems (gv1 ++ rest_elems))
(Permutation rest_elems (gv1 ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ gv1)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ gv1)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ gv1)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ gv1))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (gv1 ++ cons_elems0)), (Permutation cons_elems (gv1 ++ rest_elems0)), (Permutation cons_elems (gv1 ++ gv1)), (Permutation cons_elems (gv1 ++ rest_elems)), (Permutation cons_elems (gv1 ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ gv1))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ gv1)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) gv1), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ gv1)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ gv1))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv1 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv1 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv1 ++ gv1)), (Permutation (cons_elems0 ++ cons_elems0) (gv1 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv1 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ gv1))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ gv1)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) gv1), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ gv1)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ gv1))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv1 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv1 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv1 ++ gv1)), (Permutation (cons_elems0 ++ rest_elems0) (gv1 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv1 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ gv1))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ gv1)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ gv1) cons_elems0), (Permutation (cons_elems0 ++ gv1) rest_elems0)
(Permutation (cons_elems0 ++ gv1) gv1), (Permutation (cons_elems0 ++ gv1) rest_elems), (Permutation (cons_elems0 ++ gv1) cons_elems), (Permutation (cons_elems0 ++ gv1) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv1) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv1) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv1) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv1) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv1) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv1) (rest_elems0 ++ gv1))
(Permutation (cons_elems0 ++ gv1) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv1) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv1) (gv1 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv1) (gv1 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv1) (gv1 ++ gv1)), (Permutation (cons_elems0 ++ gv1) (gv1 ++ rest_elems)), (Permutation (cons_elems0 ++ gv1) (gv1 ++ cons_elems)), (Permutation (cons_elems0 ++ gv1) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv1) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv1) (rest_elems ++ gv1))
(Permutation (cons_elems0 ++ gv1) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ gv1) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ gv1) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv1) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv1) (cons_elems ++ gv1)), (Permutation (cons_elems0 ++ gv1) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ gv1) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ gv1) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) gv1), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ gv1)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ gv1))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv1 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (gv1 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (gv1 ++ gv1)), (Permutation (cons_elems0 ++ rest_elems) (gv1 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv1 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ gv1))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ gv1)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) gv1), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ gv1)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ gv1))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (gv1 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv1 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv1 ++ gv1)), (Permutation (cons_elems0 ++ cons_elems) (gv1 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (gv1 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ gv1))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ gv1)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) gv1), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ gv1)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ gv1))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv1 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv1 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv1 ++ gv1)), (Permutation (rest_elems0 ++ cons_elems0) (gv1 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv1 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ gv1))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ gv1)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) gv1), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ gv1)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ gv1))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv1 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv1 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv1 ++ gv1)), (Permutation (rest_elems0 ++ rest_elems0) (gv1 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv1 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ gv1))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ gv1)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ gv1) cons_elems0), (Permutation (rest_elems0 ++ gv1) rest_elems0)
(Permutation (rest_elems0 ++ gv1) gv1), (Permutation (rest_elems0 ++ gv1) rest_elems), (Permutation (rest_elems0 ++ gv1) cons_elems), (Permutation (rest_elems0 ++ gv1) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv1) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv1) (cons_elems0 ++ gv1)), (Permutation (rest_elems0 ++ gv1) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv1) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv1) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv1) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ gv1) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv1) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv1) (gv1 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv1) (gv1 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv1) (gv1 ++ gv1)), (Permutation (rest_elems0 ++ gv1) (gv1 ++ rest_elems)), (Permutation (rest_elems0 ++ gv1) (gv1 ++ cons_elems)), (Permutation (rest_elems0 ++ gv1) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv1) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ gv1) (rest_elems ++ gv1))
(Permutation (rest_elems0 ++ gv1) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ gv1) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv1) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv1) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ gv1) (cons_elems ++ gv1)), (Permutation (rest_elems0 ++ gv1) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ gv1) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv1) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) gv1), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ gv1)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ gv1)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (gv1 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv1 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv1 ++ gv1)), (Permutation (rest_elems0 ++ rest_elems) (gv1 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (gv1 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ gv1))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ gv1)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) gv1), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ gv1)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ gv1)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv1 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv1 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv1 ++ gv1)), (Permutation (rest_elems0 ++ cons_elems) (gv1 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv1 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ gv1))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ gv1)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (gv1 ++ cons_elems0) cons_elems0), (Permutation (gv1 ++ cons_elems0) rest_elems0)
(Permutation (gv1 ++ cons_elems0) gv1), (Permutation (gv1 ++ cons_elems0) rest_elems), (Permutation (gv1 ++ cons_elems0) cons_elems), (Permutation (gv1 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv1 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv1 ++ cons_elems0) (cons_elems0 ++ gv1)), (Permutation (gv1 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (gv1 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv1 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv1 ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (gv1 ++ cons_elems0) (rest_elems0 ++ gv1)), (Permutation (gv1 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv1 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (gv1 ++ cons_elems0) (gv1 ++ rest_elems0)), (Permutation (gv1 ++ cons_elems0) (gv1 ++ gv1)), (Permutation (gv1 ++ cons_elems0) (gv1 ++ rest_elems)), (Permutation (gv1 ++ cons_elems0) (gv1 ++ cons_elems)), (Permutation (gv1 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv1 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv1 ++ cons_elems0) (rest_elems ++ gv1))
(Permutation (gv1 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (gv1 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (gv1 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv1 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (gv1 ++ cons_elems0) (cons_elems ++ gv1)), (Permutation (gv1 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (gv1 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (gv1 ++ cons_elems0) []), (Permutation (gv1 ++ rest_elems0) cons_elems0), (Permutation (gv1 ++ rest_elems0) rest_elems0)
(Permutation (gv1 ++ rest_elems0) gv1), (Permutation (gv1 ++ rest_elems0) rest_elems), (Permutation (gv1 ++ rest_elems0) cons_elems), (Permutation (gv1 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv1 ++ rest_elems0) (cons_elems0 ++ gv1)), (Permutation (gv1 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (gv1 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv1 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (gv1 ++ rest_elems0) (rest_elems0 ++ gv1)), (Permutation (gv1 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv1 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (gv1 ++ rest_elems0) (gv1 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems0) (gv1 ++ gv1)), (Permutation (gv1 ++ rest_elems0) (gv1 ++ rest_elems)), (Permutation (gv1 ++ rest_elems0) (gv1 ++ cons_elems)), (Permutation (gv1 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv1 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv1 ++ rest_elems0) (rest_elems ++ gv1))
(Permutation (gv1 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (gv1 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (gv1 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv1 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (gv1 ++ rest_elems0) (cons_elems ++ gv1)), (Permutation (gv1 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (gv1 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (gv1 ++ rest_elems0) []), (Permutation (gv1 ++ gv1) cons_elems0), (Permutation (gv1 ++ gv1) rest_elems0)
(Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) rest_elems), (Permutation (gv1 ++ gv1) cons_elems), (Permutation (gv1 ++ gv1) (cons_elems0 ++ cons_elems0)), (Permutation (gv1 ++ gv1) (cons_elems0 ++ rest_elems0)), (Permutation (gv1 ++ gv1) (cons_elems0 ++ gv1)), (Permutation (gv1 ++ gv1) (cons_elems0 ++ rest_elems)), (Permutation (gv1 ++ gv1) (cons_elems0 ++ cons_elems)), (Permutation (gv1 ++ gv1) (rest_elems0 ++ cons_elems0)), (Permutation (gv1 ++ gv1) (rest_elems0 ++ rest_elems0))
(Permutation (gv1 ++ gv1) (rest_elems0 ++ gv1)), (Permutation (gv1 ++ gv1) (rest_elems0 ++ rest_elems)), (Permutation (gv1 ++ gv1) (rest_elems0 ++ cons_elems)), (Permutation (gv1 ++ gv1) (gv1 ++ cons_elems0)), (Permutation (gv1 ++ gv1) (gv1 ++ rest_elems0)), (Permutation (gv1 ++ gv1) (gv1 ++ rest_elems)), (Permutation (gv1 ++ gv1) (gv1 ++ cons_elems)), (Permutation (gv1 ++ gv1) (rest_elems ++ cons_elems0)), (Permutation (gv1 ++ gv1) (rest_elems ++ rest_elems0)), (Permutation (gv1 ++ gv1) (rest_elems ++ gv1))
(Permutation (gv1 ++ gv1) (rest_elems ++ rest_elems)), (Permutation (gv1 ++ gv1) (rest_elems ++ cons_elems)), (Permutation (gv1 ++ gv1) (cons_elems ++ cons_elems0)), (Permutation (gv1 ++ gv1) (cons_elems ++ rest_elems0)), (Permutation (gv1 ++ gv1) (cons_elems ++ gv1)), (Permutation (gv1 ++ gv1) (cons_elems ++ rest_elems)), (Permutation (gv1 ++ gv1) (cons_elems ++ cons_elems)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ rest_elems) cons_elems0), (Permutation (gv1 ++ rest_elems) rest_elems0)
(Permutation (gv1 ++ rest_elems) gv1), (Permutation (gv1 ++ rest_elems) rest_elems), (Permutation (gv1 ++ rest_elems) cons_elems), (Permutation (gv1 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (gv1 ++ rest_elems) (cons_elems0 ++ gv1)), (Permutation (gv1 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (gv1 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (gv1 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (gv1 ++ rest_elems) (rest_elems0 ++ gv1)), (Permutation (gv1 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv1 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv1 ++ rest_elems) (gv1 ++ cons_elems0)), (Permutation (gv1 ++ rest_elems) (gv1 ++ rest_elems0)), (Permutation (gv1 ++ rest_elems) (gv1 ++ gv1)), (Permutation (gv1 ++ rest_elems) (gv1 ++ cons_elems)), (Permutation (gv1 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (gv1 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (gv1 ++ rest_elems) (rest_elems ++ gv1))
(Permutation (gv1 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (gv1 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (gv1 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (gv1 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (gv1 ++ rest_elems) (cons_elems ++ gv1)), (Permutation (gv1 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (gv1 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (gv1 ++ rest_elems) []), (Permutation (gv1 ++ cons_elems) cons_elems0), (Permutation (gv1 ++ cons_elems) rest_elems0)
(Permutation (gv1 ++ cons_elems) gv1), (Permutation (gv1 ++ cons_elems) rest_elems), (Permutation (gv1 ++ cons_elems) cons_elems), (Permutation (gv1 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv1 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (gv1 ++ cons_elems) (cons_elems0 ++ gv1)), (Permutation (gv1 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (gv1 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (gv1 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv1 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (gv1 ++ cons_elems) (rest_elems0 ++ gv1)), (Permutation (gv1 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv1 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv1 ++ cons_elems) (gv1 ++ cons_elems0)), (Permutation (gv1 ++ cons_elems) (gv1 ++ rest_elems0)), (Permutation (gv1 ++ cons_elems) (gv1 ++ gv1)), (Permutation (gv1 ++ cons_elems) (gv1 ++ rest_elems)), (Permutation (gv1 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (gv1 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (gv1 ++ cons_elems) (rest_elems ++ gv1))
(Permutation (gv1 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (gv1 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (gv1 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (gv1 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (gv1 ++ cons_elems) (cons_elems ++ gv1)), (Permutation (gv1 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (gv1 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (gv1 ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) gv1), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ gv1)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ gv1)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (gv1 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (gv1 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (gv1 ++ gv1)), (Permutation (rest_elems ++ cons_elems0) (gv1 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (gv1 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ gv1))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ gv1)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) gv1), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ gv1)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ gv1)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (gv1 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv1 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv1 ++ gv1)), (Permutation (rest_elems ++ rest_elems0) (gv1 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (gv1 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ gv1))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ gv1)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ gv1) cons_elems0), (Permutation (rest_elems ++ gv1) rest_elems0)
(Permutation (rest_elems ++ gv1) gv1), (Permutation (rest_elems ++ gv1) rest_elems), (Permutation (rest_elems ++ gv1) cons_elems), (Permutation (rest_elems ++ gv1) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv1) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ gv1) (cons_elems0 ++ gv1)), (Permutation (rest_elems ++ gv1) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv1) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv1) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv1) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ gv1) (rest_elems0 ++ gv1)), (Permutation (rest_elems ++ gv1) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv1) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv1) (gv1 ++ cons_elems0)), (Permutation (rest_elems ++ gv1) (gv1 ++ rest_elems0)), (Permutation (rest_elems ++ gv1) (gv1 ++ gv1)), (Permutation (rest_elems ++ gv1) (gv1 ++ rest_elems)), (Permutation (rest_elems ++ gv1) (gv1 ++ cons_elems)), (Permutation (rest_elems ++ gv1) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv1) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ gv1) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ gv1) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ gv1) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv1) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ gv1) (cons_elems ++ gv1)), (Permutation (rest_elems ++ gv1) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ gv1) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ gv1) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) gv1), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ gv1)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ gv1)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (gv1 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (gv1 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (gv1 ++ gv1)), (Permutation (rest_elems ++ rest_elems) (gv1 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (gv1 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ gv1)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ gv1)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) gv1), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ gv1)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ gv1)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (gv1 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (gv1 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (gv1 ++ gv1)), (Permutation (rest_elems ++ cons_elems) (gv1 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (gv1 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ gv1)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ gv1)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) gv1), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ gv1)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ gv1)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (gv1 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv1 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv1 ++ gv1)), (Permutation (cons_elems ++ cons_elems0) (gv1 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (gv1 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ gv1)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ gv1)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) gv1), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ gv1)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ gv1)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (gv1 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv1 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv1 ++ gv1)), (Permutation (cons_elems ++ rest_elems0) (gv1 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (gv1 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ gv1)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ gv1)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ gv1) cons_elems0), (Permutation (cons_elems ++ gv1) rest_elems0)
(Permutation (cons_elems ++ gv1) gv1), (Permutation (cons_elems ++ gv1) rest_elems), (Permutation (cons_elems ++ gv1) cons_elems), (Permutation (cons_elems ++ gv1) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ gv1) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ gv1) (cons_elems0 ++ gv1)), (Permutation (cons_elems ++ gv1) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv1) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv1) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ gv1) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ gv1) (rest_elems0 ++ gv1)), (Permutation (cons_elems ++ gv1) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv1) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv1) (gv1 ++ cons_elems0)), (Permutation (cons_elems ++ gv1) (gv1 ++ rest_elems0)), (Permutation (cons_elems ++ gv1) (gv1 ++ gv1)), (Permutation (cons_elems ++ gv1) (gv1 ++ rest_elems)), (Permutation (cons_elems ++ gv1) (gv1 ++ cons_elems)), (Permutation (cons_elems ++ gv1) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv1) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ gv1) (rest_elems ++ gv1)), (Permutation (cons_elems ++ gv1) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ gv1) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ gv1) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv1) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ gv1) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ gv1) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ gv1) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) gv1), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ gv1)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ gv1)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (gv1 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (gv1 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (gv1 ++ gv1)), (Permutation (cons_elems ++ rest_elems) (gv1 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (gv1 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ gv1)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ gv1)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) gv1), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ gv1)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ gv1)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (gv1 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (gv1 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (gv1 ++ gv1)), (Permutation (cons_elems ++ cons_elems) (gv1 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (gv1 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ gv1)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ gv1)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] gv1), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ gv1)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ gv1)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (gv1 ++ cons_elems0)), (Permutation [] (gv1 ++ rest_elems0)), (Permutation [] (gv1 ++ gv1)), (Permutation [] (gv1 ++ rest_elems)), (Permutation [] (gv1 ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ gv1)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ gv1)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) gv1), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ gv1)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ gv1)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (gv1 ++ cons_elems0)), (In (length cons_elems0) (gv1 ++ rest_elems0)), (In (length cons_elems0) (gv1 ++ gv1)), (In (length cons_elems0) (gv1 ++ rest_elems)), (In (length cons_elems0) (gv1 ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ gv1)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ gv1)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) gv1), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ gv1)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ gv1)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (gv1 ++ cons_elems0)), (In (length rest_elems0) (gv1 ++ rest_elems0)), (In (length rest_elems0) (gv1 ++ gv1)), (In (length rest_elems0) (gv1 ++ rest_elems)), (In (length rest_elems0) (gv1 ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ gv1)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ gv1)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length gv1) cons_elems0), (In (length gv1) rest_elems0)
(In (length gv1) gv1), (In (length gv1) rest_elems), (In (length gv1) cons_elems), (In (length gv1) (cons_elems0 ++ cons_elems0)), (In (length gv1) (cons_elems0 ++ rest_elems0)), (In (length gv1) (cons_elems0 ++ gv1)), (In (length gv1) (cons_elems0 ++ rest_elems)), (In (length gv1) (cons_elems0 ++ cons_elems)), (In (length gv1) (rest_elems0 ++ cons_elems0)), (In (length gv1) (rest_elems0 ++ rest_elems0))
(In (length gv1) (rest_elems0 ++ gv1)), (In (length gv1) (rest_elems0 ++ rest_elems)), (In (length gv1) (rest_elems0 ++ cons_elems)), (In (length gv1) (gv1 ++ cons_elems0)), (In (length gv1) (gv1 ++ rest_elems0)), (In (length gv1) (gv1 ++ gv1)), (In (length gv1) (gv1 ++ rest_elems)), (In (length gv1) (gv1 ++ cons_elems)), (In (length gv1) (rest_elems ++ cons_elems0)), (In (length gv1) (rest_elems ++ rest_elems0))
(In (length gv1) (rest_elems ++ gv1)), (In (length gv1) (rest_elems ++ rest_elems)), (In (length gv1) (rest_elems ++ cons_elems)), (In (length gv1) (cons_elems ++ cons_elems0)), (In (length gv1) (cons_elems ++ rest_elems0)), (In (length gv1) (cons_elems ++ gv1)), (In (length gv1) (cons_elems ++ rest_elems)), (In (length gv1) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) gv1), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ gv1)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ gv1)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (gv1 ++ cons_elems0)), (In (length rest_elems) (gv1 ++ rest_elems0)), (In (length rest_elems) (gv1 ++ gv1)), (In (length rest_elems) (gv1 ++ rest_elems)), (In (length rest_elems) (gv1 ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ gv1)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ gv1)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) gv1), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ gv1)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ gv1)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (gv1 ++ cons_elems0)), (In (length cons_elems) (gv1 ++ rest_elems0)), (In (length cons_elems) (gv1 ++ gv1)), (In (length cons_elems) (gv1 ++ rest_elems)), (In (length cons_elems) (gv1 ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ gv1)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ gv1)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) gv1), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ gv1)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ gv1)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (gv1 ++ cons_elems0)), (In (length p) (gv1 ++ rest_elems0)), (In (length p) (gv1 ++ gv1)), (In (length p) (gv1 ++ rest_elems)), (In (length p) (gv1 ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ gv1)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ gv1)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length gv1)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length gv1), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length gv1 < length cons_elems0), (length gv1 < length rest_elems0)
(length gv1 < length rest_elems), (length gv1 < length cons_elems), (length gv1 < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length gv1), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length gv1), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length gv1), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length gv1)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length gv1), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length gv1 <= length cons_elems0), (length gv1 <= length rest_elems0)
(length gv1 <= length rest_elems), (length gv1 <= length cons_elems), (length gv1 <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length gv1), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length gv1), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length gv1), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p gv1), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p gv1), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t gv1), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 gv1), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 gv1), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation gv1 cons_elems0), (~ Permutation gv1 rest_elems0), (~ Permutation gv1 gv1), (~ Permutation gv1 rest_elems), (~ Permutation gv1 cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems gv1), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems gv1), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> gv1), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> gv1), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (gv1 <> cons_elems0), (gv1 <> rest_elems0), (gv1 <> gv1), (gv1 <> rest_elems), (gv1 <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> gv1), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> gv1), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some gv1), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = gv1), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = gv1), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ gv1 = cons_elems0), (cons_elems0 ++ gv1 = rest_elems0), (cons_elems0 ++ gv1 = gv1), (cons_elems0 ++ gv1 = rest_elems), (cons_elems0 ++ gv1 = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = gv1), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = gv1), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = gv1), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = gv1), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ gv1 = cons_elems0)
(rest_elems0 ++ gv1 = rest_elems0), (rest_elems0 ++ gv1 = gv1), (rest_elems0 ++ gv1 = rest_elems), (rest_elems0 ++ gv1 = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = gv1), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = gv1), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (gv1 ++ cons_elems0 = cons_elems0), (gv1 ++ cons_elems0 = rest_elems0), (gv1 ++ cons_elems0 = gv1), (gv1 ++ cons_elems0 = rest_elems), (gv1 ++ cons_elems0 = cons_elems), (gv1 ++ rest_elems0 = cons_elems0)
(gv1 ++ rest_elems0 = rest_elems0), (gv1 ++ rest_elems0 = gv1), (gv1 ++ rest_elems0 = rest_elems), (gv1 ++ rest_elems0 = cons_elems), (gv1 ++ gv1 = cons_elems0), (gv1 ++ gv1 = rest_elems0), (gv1 ++ gv1 = gv1), (gv1 ++ gv1 = rest_elems), (gv1 ++ gv1 = cons_elems), (gv1 ++ rest_elems = cons_elems0)
(gv1 ++ rest_elems = rest_elems0), (gv1 ++ rest_elems = gv1), (gv1 ++ rest_elems = rest_elems), (gv1 ++ rest_elems = cons_elems), (gv1 ++ cons_elems = cons_elems0), (gv1 ++ cons_elems = rest_elems0), (gv1 ++ cons_elems = gv1), (gv1 ++ cons_elems = rest_elems), (gv1 ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = gv1), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = gv1), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ gv1 = cons_elems0)
(rest_elems ++ gv1 = rest_elems0), (rest_elems ++ gv1 = gv1), (rest_elems ++ gv1 = rest_elems), (rest_elems ++ gv1 = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = gv1), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = gv1), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = gv1), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = gv1), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ gv1 = cons_elems0), (cons_elems ++ gv1 = rest_elems0), (cons_elems ++ gv1 = gv1), (cons_elems ++ gv1 = rest_elems), (cons_elems ++ gv1 = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = gv1), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = gv1), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = gv1), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ gv1), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ gv1), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = gv1 ++ cons_elems0), ([] = gv1 ++ rest_elems0), ([] = gv1 ++ gv1), ([] = gv1 ++ rest_elems), ([] = gv1 ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ gv1), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ gv1), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 133.985 seconds


Label: 0 (0)
(tree_elems t cons_elems)

Label: 1 (1)
(tree_elems t cons_elems0)

Label: 2 (2)
(Abs p rest_elems0), (priqueue_elems p rest_elems0), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))

Label: 3 (3)
(Abs p rest_elems), (priqueue_elems p rest_elems), (Abs (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))

Label: 4 (4)
(Abs (carry p t) gv0), (priqueue_elems (carry p t) gv0), (Abs (t :: p) gv0), (priqueue_elems (t :: p) gv0), (Permutation gv0 (cons_elems ++ rest_elems)), (Permutation gv0 (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) gv0), (Permutation (rest_elems ++ cons_elems) gv0), (Permutation gv0 (cons_elems ++ rest_elems0)), (Permutation gv0 (rest_elems ++ cons_elems0))
(Permutation gv0 (rest_elems0 ++ cons_elems)), (Permutation gv0 (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) gv0), (Permutation (rest_elems ++ cons_elems0) gv0), (Permutation (rest_elems0 ++ cons_elems) gv0), (Permutation (cons_elems0 ++ rest_elems) gv0), (Permutation gv0 (rest_elems0 ++ cons_elems0)), (Permutation gv0 (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) gv0), (Permutation (cons_elems0 ++ rest_elems0) gv0)

Label: 5 (5)
(Abs (carry p t) gv1), (priqueue_elems (carry p t) gv1), (Abs (t :: p) gv1), (priqueue_elems (t :: p) gv1), (Permutation gv1 (rest_elems ++ cons_elems)), (Permutation gv1 (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) gv1), (Permutation (cons_elems ++ rest_elems) gv1), (Permutation gv1 (cons_elems0 ++ rest_elems)), (Permutation gv1 (rest_elems0 ++ cons_elems))
(Permutation gv1 (rest_elems ++ cons_elems0)), (Permutation gv1 (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) gv1), (Permutation (rest_elems0 ++ cons_elems) gv1), (Permutation (rest_elems ++ cons_elems0) gv1), (Permutation (cons_elems ++ rest_elems0) gv1), (Permutation gv1 (cons_elems0 ++ rest_elems0)), (Permutation gv1 (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) gv1), (Permutation (rest_elems0 ++ cons_elems0) gv1)


------------------------------ ALL RESULTS ------------------------------
1. (tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  priqueue_elems p rest_elems0 ->  priqueue_elems p rest_elems ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

2. (priqueue_elems p rest_elems -> Abs (p ++ p) (rest_elems ++ rest_elems))
(Abs (p ++ p) (rest_elems ++ rest_elems) ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

3. (priqueue_elems p rest_elems0 -> Abs (p ++ p) (rest_elems0 ++ rest_elems0))
(Abs (p ++ p) (rest_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

4. (priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

5. (priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

6. (Abs (carry p t) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

7. (priqueue_elems (carry p t) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

8. (Abs (carry p t) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

9. (priqueue_elems (carry p t) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

10. (Abs (t :: p) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

11. (priqueue_elems (t :: p) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

12. (Abs (t :: p) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

13. (priqueue_elems (t :: p) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

14. (Permutation gv0 (cons_elems ++ rest_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

15. (Permutation gv0 (rest_elems ++ cons_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

16. (Permutation (cons_elems ++ rest_elems) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

17. (Permutation (rest_elems ++ cons_elems) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

18. (Permutation gv0 (cons_elems ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

19. (Permutation gv0 (rest_elems ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

20. (Permutation gv0 (rest_elems0 ++ cons_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

21. (Permutation gv0 (cons_elems0 ++ rest_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

22. (Permutation (cons_elems ++ rest_elems0) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

23. (Permutation (rest_elems ++ cons_elems0) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

24. (Permutation (rest_elems0 ++ cons_elems) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

25. (Permutation (cons_elems0 ++ rest_elems) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

26. (Permutation gv0 (rest_elems0 ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

27. (Permutation (rest_elems0 ++ cons_elems0) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation gv0 (cons_elems0 ++ rest_elems0))

28. (Permutation gv1 (rest_elems ++ cons_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

29. (Permutation (rest_elems ++ cons_elems) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

30. (Permutation gv1 (cons_elems0 ++ rest_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

31. (Permutation gv1 (rest_elems0 ++ cons_elems) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

32. (Permutation gv1 (rest_elems ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

33. (Permutation gv1 (cons_elems ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

34. (Permutation (cons_elems0 ++ rest_elems) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

35. (Permutation (rest_elems0 ++ cons_elems) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

36. (Permutation (rest_elems ++ cons_elems0) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

37. (Permutation (cons_elems ++ rest_elems0) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

38. (Permutation gv1 (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

39. (Permutation gv1 (rest_elems0 ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

40. (Permutation (cons_elems0 ++ rest_elems0) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)

41. (Permutation (rest_elems0 ++ cons_elems0) gv1 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) gv1)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 238.839 seconds

Number of Result Pairs Returned: 41

1. (tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  priqueue_elems p rest_elems0 ->  priqueue_elems p rest_elems ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

2. (priqueue_elems p rest_elems -> Abs (p ++ p) (rest_elems ++ rest_elems))
(Abs (p ++ p) (rest_elems ++ rest_elems) ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

3. (priqueue_elems p rest_elems0 -> Abs (p ++ p) (rest_elems0 ++ rest_elems0))
(Abs (p ++ p) (rest_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

4. (priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))

5. (priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0))
