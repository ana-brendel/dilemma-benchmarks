Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (priq (t :: p))
 -- (Permutation al (cons_elems ++ rest_elems))
 -- (priqueue_elems p rest_elems)
 -- (tree_elems t cons_elems)
 -- (tree_elems t cons_elems0)
 -- (Permutation bl (cons_elems0 ++ rest_elems0))
 -- (priqueue_elems p rest_elems0)

----------------------------------
Goal: (Permutation (cons_elems ++ rest_elems) bl)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.745 seconds

gv0 : (list nat) = (cons_elems ++ rest_elems)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 211.365 seconds

Label: Generalization #0
Assumptions: 
 -- (priqueue_elems p rest_elems)
 -- (tree_elems t cons_elems)
 -- (tree_elems t cons_elems0)
 -- (Permutation bl (cons_elems0 ++ rest_elems0))
 -- (priqueue_elems p rest_elems0)

----------------------------------
Goal: (Permutation (cons_elems ++ rest_elems) bl)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (priqueue_elems p rest_elems)
 -- (tree_elems t cons_elems)
 -- (cons_elems ++ rest_elems = gv0)
 -- (tree_elems t cons_elems0)
 -- (Permutation bl (cons_elems0 ++ rest_elems0))
 -- (priqueue_elems p rest_elems0)

----------------------------------
Goal: (Permutation gv0 bl)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 211.507 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
geb : (nat -> nat -> bool)
gtb : (nat -> nat -> bool)
tree : Set
tree_rect : (forall P : tree -> Type,
 (forall (n : nat) (t : tree),
  P t -> forall t0 : tree, P t0 -> P (Node n t t0)) ->
 P Leaf -> forall t : tree, P t)
tree_rec : (forall P : tree -> Set,
 (forall (n : nat) (t : tree),
  P t -> forall t0 : tree, P t0 -> P (Node n t t0)) ->
 P Leaf -> forall t : tree, P t)
smash : (tree -> tree -> tree)
carry : (list tree -> tree -> list tree)
insert : (nat -> list tree -> list tree)
join : (list tree -> list tree -> tree -> list tree)
unzip : (tree -> (list tree -> list tree) -> list tree)
heap_delete_max : (tree -> list tree)
find_max' : (nat -> list tree -> nat)
find_max : (list tree -> option nat)
delete_max_aux : (nat -> list tree -> list tree * list tree)
delete_max : (list tree -> option (nat * list tree))
merge : (list tree -> list tree -> list tree)
pow2heapp : (nat -> nat -> tree -> Prop)
pow2heap : (nat -> tree -> Prop)
priqq : (nat -> list tree -> Prop)
priq : (list tree -> Prop)
tree_elems : (tree -> list nat -> Prop)
priqueue_elems : (list tree -> list nat -> Prop)
Abs : (list tree -> list nat -> Prop)
Node : (nat -> tree -> tree -> tree)
Leaf : tree

Label: 0 (0)
Abducted Assumption: (priqueue_elems p rest_elems)
Positive Examples: 500
Negative Examples: 12

Label: 1 (1)
Abducted Assumption: (tree_elems t cons_elems)
Positive Examples: 500
Negative Examples: 10

Label: 2 (2)
Abducted Assumption: (tree_elems t cons_elems0)
Positive Examples: 500
Negative Examples: 10

Label: 3 (3)
Abducted Assumption: (Permutation bl (cons_elems0 ++ rest_elems0))
Positive Examples: 380
Negative Examples: 10

Label: 4 (4)
Abducted Assumption: (priqueue_elems p rest_elems0)
Positive Examples: 500
Negative Examples: 4

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 5
Negative Examples: 3


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 212.493 seconds


Label: 0 (0)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p bl), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl rest_elems)
(Permutation bl cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = rest_elems), (bl = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ rest_elems)), (Abs p (bl ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0)), (Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ rest_elems))
(Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0)), (priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems))
(priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl))
(priqueue_elems (join p p t) (bl ++ rest_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0))
(priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0))
(priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl)), (tree_elems t (bl ++ rest_elems))
(tree_elems t (bl ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ bl))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl))
(tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0))
(tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p)), (priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t))
(priqq (length bl) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t), (pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length rest_elems) t)
(pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf), (pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0))
(Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems))
(Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ rest_elems))
(Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0)), (Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0)
(Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0)
(Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0)
(Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0)
(Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0)
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl))
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) []), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0)
(Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0)
(Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] bl), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0)), (In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) bl), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length bl) cons_elems0), (In (length bl) rest_elems0)
(In (length bl) bl), (In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0))
(In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) bl), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) bl), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) bl), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length bl < length cons_elems0), (length bl < length rest_elems0)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length bl), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length bl <= length cons_elems0), (length bl <= length rest_elems0)
(length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length bl), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p bl), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p bl), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t bl), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> bl), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> rest_elems), (bl <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> bl), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some bl), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ bl = cons_elems0)
(rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0)
(bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ rest_elems = cons_elems0)
(bl ++ rest_elems = rest_elems0), (bl ++ rest_elems = bl), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ bl = cons_elems0)
(rest_elems ++ bl = rest_elems0), (rest_elems ++ bl = bl), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = bl), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)

Label: 1 (1)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p bl), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl rest_elems)
(Permutation bl cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = rest_elems), (bl = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ rest_elems)), (Abs p (bl ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0)), (Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ rest_elems))
(Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0)), (priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems))
(priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl))
(priqueue_elems (join p p t) (bl ++ rest_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0))
(priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0))
(priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl)), (tree_elems t (bl ++ rest_elems))
(tree_elems t (bl ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ bl))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl))
(tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0))
(tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p)), (priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t))
(priqq (length bl) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t), (pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length rest_elems) t)
(pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf), (pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0))
(Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems))
(Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ rest_elems))
(Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0)), (Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0)
(Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0)
(Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0)
(Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0)
(Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0)
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl))
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) []), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0)
(Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0)
(Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] bl), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0)), (In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) bl), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length bl) cons_elems0), (In (length bl) rest_elems0)
(In (length bl) bl), (In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0))
(In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) bl), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) bl), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) bl), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length bl < length cons_elems0), (length bl < length rest_elems0)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length bl), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length bl <= length cons_elems0), (length bl <= length rest_elems0)
(length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length bl), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p bl), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p bl), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t bl), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> bl), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> rest_elems), (bl <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> bl), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some bl), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ bl = cons_elems0)
(rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0)
(bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ rest_elems = cons_elems0)
(bl ++ rest_elems = rest_elems0), (bl ++ rest_elems = bl), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ bl = cons_elems0)
(rest_elems ++ bl = rest_elems0), (rest_elems ++ bl = bl), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = bl), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)

Label: 2 (2)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p bl), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl rest_elems)
(Permutation bl cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = rest_elems), (bl = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ rest_elems)), (Abs p (bl ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0)), (Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ rest_elems))
(Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0)), (priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems))
(priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl))
(priqueue_elems (join p p t) (bl ++ rest_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0))
(priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0))
(priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl)), (tree_elems t (bl ++ rest_elems))
(tree_elems t (bl ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ bl))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl))
(tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0))
(tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p)), (priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t))
(priqq (length bl) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t), (pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length rest_elems) t)
(pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf), (pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0))
(Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems))
(Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ rest_elems))
(Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0)), (Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0)
(Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0)
(Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0)
(Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0)
(Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0)
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl))
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) []), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0)
(Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0)
(Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] bl), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0)), (In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) bl), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length bl) cons_elems0), (In (length bl) rest_elems0)
(In (length bl) bl), (In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0))
(In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) bl), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) bl), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) bl), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length bl < length cons_elems0), (length bl < length rest_elems0)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length bl), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length bl <= length cons_elems0), (length bl <= length rest_elems0)
(length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length bl), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p bl), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p bl), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t bl), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> bl), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> rest_elems), (bl <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> bl), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some bl), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ bl = cons_elems0)
(rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0)
(bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ rest_elems = cons_elems0)
(bl ++ rest_elems = rest_elems0), (bl ++ rest_elems = bl), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ bl = cons_elems0)
(rest_elems ++ bl = rest_elems0), (rest_elems ++ bl = bl), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = bl), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)

Label: 3 (3)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p bl), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl rest_elems)
(Permutation bl cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = rest_elems), (bl = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ rest_elems)), (Abs p (bl ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0)), (Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ rest_elems))
(Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0)), (priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems))
(priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl))
(priqueue_elems (join p p t) (bl ++ rest_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0))
(priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0))
(priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl)), (tree_elems t (bl ++ rest_elems))
(tree_elems t (bl ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ bl))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl))
(tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0))
(tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p)), (priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t))
(priqq (length bl) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t), (pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length rest_elems) t)
(pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf), (pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0))
(Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems))
(Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ rest_elems))
(Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0)), (Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0)
(Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0)
(Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0)
(Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0)
(Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0)
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl))
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) []), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0)
(Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0)
(Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] bl), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0)), (In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) bl), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length bl) cons_elems0), (In (length bl) rest_elems0)
(In (length bl) bl), (In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0))
(In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) bl), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) bl), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) bl), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length bl < length cons_elems0), (length bl < length rest_elems0)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length bl), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length bl <= length cons_elems0), (length bl <= length rest_elems0)
(length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length bl), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p bl), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p bl), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t bl), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> bl), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> rest_elems), (bl <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> bl), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some bl), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ bl = cons_elems0)
(rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0)
(bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ rest_elems = cons_elems0)
(bl ++ rest_elems = rest_elems0), (bl ++ rest_elems = bl), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ bl = cons_elems0)
(rest_elems ++ bl = rest_elems0), (rest_elems ++ bl = bl), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = bl), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)

Label: 4 (4)
(Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p rest_elems), (Abs p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0), (priqueue_elems p bl), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems)
(tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t rest_elems), (tree_elems t cons_elems), (priq p), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 rest_elems)
(Permutation cons_elems0 cons_elems), (Permutation rest_elems0 cons_elems0), (Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl rest_elems)
(Permutation bl cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems rest_elems), (Permutation rest_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl), (Permutation cons_elems rest_elems)
(Permutation cons_elems cons_elems), (Permutation p p), (In t p), (t = t), (p = p), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems)
(rest_elems0 = cons_elems0), (rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = rest_elems), (bl = cons_elems)
(rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = rest_elems), (rest_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl), (cons_elems = rest_elems), (cons_elems = cons_elems)
(Abs p (cons_elems0 ++ cons_elems0)), (Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems))
(Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ rest_elems)), (Abs p (bl ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl)), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems))
(Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p []), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) rest_elems)
(Abs (t :: p) cons_elems), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0)), (Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ rest_elems))
(Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ rest_elems))
(Abs (t :: p) (rest_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) []), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl))
(Abs (merge p p) (rest_elems0 ++ rest_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl))
(Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0)), (Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) []), (Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0)
(Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0))
(Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) []), (Abs (join p p t) cons_elems0)
(Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ rest_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0))
(Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) [])
(Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems))
(Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0)), (Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems))
(Abs (carry p t) []), (Abs (p ++ p) cons_elems0), (Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl)), (Abs (p ++ p) (cons_elems0 ++ rest_elems))
(Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0)), (Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ rest_elems))
(Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) []), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] rest_elems), (Abs [] cons_elems), (Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl))
(Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0)), (Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl))
(Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] []), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0))
(priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0)), (priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0))
(priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ rest_elems)), (priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p []), (priqueue_elems (t :: p) cons_elems0)
(priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0))
(priqueue_elems (t :: p) (rest_elems ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) [])
(priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems))
(priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0), (priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems))
(priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) rest_elems), (priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl))
(priqueue_elems (join p p t) (bl ++ rest_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl))
(priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0))
(priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0))
(priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0))
(priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) []), (priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0)), (priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems))
(priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] []), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ rest_elems))
(tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ rest_elems)), (tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl)), (tree_elems t (bl ++ rest_elems))
(tree_elems t (bl ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0)), (tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ rest_elems))
(tree_elems t (cons_elems ++ cons_elems)), (tree_elems t []), (tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0)), (tree_elems (smash t t) (cons_elems0 ++ bl))
(tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl))
(tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) []), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0))
(tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ rest_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0))
(tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0)), (tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0))
(tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t)), (priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p))
(priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p)), (priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t))
(priqq (length bl) (p ++ p)), (priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p))
(priqq (length cons_elems) (merge p p)), (priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t))
(priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length rest_elems) t), (pow2heap (length rest_elems) (smash t t))
(pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf)
(pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length p) t)
(pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t), (pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf)
(pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t), (pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length rest_elems) t)
(pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf), (pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t), (pow2heapp (length rest_elems) (length cons_elems0) (smash t t))
(pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf)
(pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t)
(pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems) (length cons_elems) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t)), (pow2heapp (length p) (length rest_elems0) Leaf)
(pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length rest_elems) t), (pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length p) t)
(pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf), (Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p)
(Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t)), (Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t))
(Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p)), (Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) [])
(Permutation (join p p t) p), (Permutation (join p p t) (t :: p)), (Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p))
(Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t)), (Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t))
(Permutation (p ++ p) []), (Permutation [] p), (Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0))
(Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0))
(Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 []), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0))
(Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 [])
(Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems))
(Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl []), (Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ rest_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ rest_elems))
(Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0)), (Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ rest_elems))
(Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems []), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl))
(Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0)), (Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl))
(Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ rest_elems)), (Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems []), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) []), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0)
(Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0)
(Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) []), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0)
(Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0)
(Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0)
(Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0)
(Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0)
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl))
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) []), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl))
(Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0)
(Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl))
(Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0)
(Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0)
(Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0)
(Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) []), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0)
(Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0)
(Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0)
(Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) []), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0)
(Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0)
(Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) []), (Permutation [] cons_elems0), (Permutation [] rest_elems0)
(Permutation [] bl), (Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0))
(Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (In t (t :: p)), (In t (merge p p))
(In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p)), (In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t))
(In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t)), (In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0))
(In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0)), (In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0))
(In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0)
(In (length rest_elems0) bl), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0)), (In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0))
(In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0))
(In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length bl) cons_elems0), (In (length bl) rest_elems0)
(In (length bl) bl), (In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0))
(In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0)
(In (length rest_elems) bl), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0))
(In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0)
(In (length cons_elems) bl), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0))
(In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0))
(In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0)), (In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length p) cons_elems0), (In (length p) rest_elems0)
(In (length p) bl), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0))
(In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0))
(In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0)), (In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl)
(length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems), (length cons_elems0 < length p), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length p), (length bl < length cons_elems0), (length bl < length rest_elems0)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length p), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl), (length rest_elems < length cons_elems), (length rest_elems < length p), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0)
(length cons_elems < length bl), (length cons_elems < length rest_elems), (length cons_elems < length p), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length rest_elems), (length p < length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length p), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length p), (length bl <= length cons_elems0), (length bl <= length rest_elems0)
(length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length p), (length rest_elems <= length cons_elems0), (length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length cons_elems), (length rest_elems <= length p), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0)
(length cons_elems <= length bl), (length cons_elems <= length rest_elems), (length cons_elems <= length p), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length rest_elems), (length p <= length cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0)
(~ Abs p bl), (~ Abs p rest_elems), (~ Abs p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0), (~ priqueue_elems p bl), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0)
(~ tree_elems t bl), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ priq p), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation rest_elems cons_elems0)
(~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems rest_elems), (~ Permutation rest_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation p p)
(~ In t p), (t <> t), (p <> p), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (rest_elems0 <> cons_elems0), (rest_elems0 <> rest_elems0)
(rest_elems0 <> bl), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> rest_elems), (bl <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0)
(rest_elems <> bl), (rest_elems <> rest_elems), (rest_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (None = Some cons_elems0), (None = Some rest_elems0)
(None = Some bl), (None = Some rest_elems), (None = Some cons_elems), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p)
(t :: p = []), (merge p p = p), (merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p)
(join p p t = heap_delete_max t), (join p p t = carry p t), (join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t)
([] = carry p t), ([] = p ++ p), (smash t t = t), (Leaf = smash t t), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0), (cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0)
(cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0)
(cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0)
(rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems), (rest_elems0 ++ bl = cons_elems0)
(rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0)
(rest_elems0 ++ cons_elems = rest_elems0), (rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0)
(bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ rest_elems = cons_elems0)
(bl ++ rest_elems = rest_elems0), (bl ++ rest_elems = bl), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0)
(rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ bl = cons_elems0)
(rest_elems ++ bl = rest_elems0), (rest_elems ++ bl = bl), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ cons_elems = cons_elems0)
(rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0)
(cons_elems ++ rest_elems0 = rest_elems0), (cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ rest_elems = cons_elems0)
(cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), ([] = cons_elems0)
([] = rest_elems0), ([] = bl), ([] = rest_elems), ([] = cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0), ([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0)
([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems), ([] = rest_elems ++ cons_elems0)
([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), (None = find_max p)
(None = Some t)

Label: 5 (5)
(Abs p rest_elems), (Abs p cons_elems), (Abs p cons_elems0), (Abs p rest_elems0), (Abs p bl), (Abs p gv0), (priqueue_elems p rest_elems), (priqueue_elems p cons_elems), (priqueue_elems p cons_elems0), (priqueue_elems p rest_elems0)
(priqueue_elems p bl), (priqueue_elems p gv0), (tree_elems t rest_elems), (tree_elems t cons_elems), (tree_elems t cons_elems0), (tree_elems t rest_elems0), (tree_elems t bl), (tree_elems t gv0), (priq p), (Permutation rest_elems rest_elems)
(Permutation rest_elems cons_elems), (Permutation rest_elems cons_elems0), (Permutation rest_elems rest_elems0), (Permutation rest_elems bl), (Permutation rest_elems gv0), (Permutation cons_elems rest_elems), (Permutation cons_elems cons_elems), (Permutation cons_elems cons_elems0), (Permutation cons_elems rest_elems0), (Permutation cons_elems bl)
(Permutation cons_elems gv0), (Permutation cons_elems0 rest_elems), (Permutation cons_elems0 cons_elems), (Permutation cons_elems0 cons_elems0), (Permutation cons_elems0 rest_elems0), (Permutation cons_elems0 bl), (Permutation cons_elems0 gv0), (Permutation rest_elems0 rest_elems), (Permutation rest_elems0 cons_elems), (Permutation rest_elems0 cons_elems0)
(Permutation rest_elems0 rest_elems0), (Permutation rest_elems0 bl), (Permutation rest_elems0 gv0), (Permutation bl rest_elems), (Permutation bl cons_elems), (Permutation bl cons_elems0), (Permutation bl rest_elems0), (Permutation bl bl), (Permutation bl gv0), (Permutation gv0 rest_elems)
(Permutation gv0 cons_elems), (Permutation gv0 cons_elems0), (Permutation gv0 rest_elems0), (Permutation gv0 bl), (Permutation gv0 gv0), (Permutation p p), (In t p), (t = t), (p = p), (rest_elems = rest_elems)
(rest_elems = cons_elems), (rest_elems = cons_elems0), (rest_elems = rest_elems0), (rest_elems = bl), (rest_elems = gv0), (cons_elems = rest_elems), (cons_elems = cons_elems), (cons_elems = cons_elems0), (cons_elems = rest_elems0), (cons_elems = bl)
(cons_elems = gv0), (cons_elems0 = rest_elems), (cons_elems0 = cons_elems), (cons_elems0 = cons_elems0), (cons_elems0 = rest_elems0), (cons_elems0 = bl), (cons_elems0 = gv0), (rest_elems0 = rest_elems), (rest_elems0 = cons_elems), (rest_elems0 = cons_elems0)
(rest_elems0 = rest_elems0), (rest_elems0 = bl), (rest_elems0 = gv0), (bl = rest_elems), (bl = cons_elems), (bl = cons_elems0), (bl = rest_elems0), (bl = bl), (bl = gv0), (gv0 = rest_elems)
(gv0 = cons_elems), (gv0 = cons_elems0), (gv0 = rest_elems0), (gv0 = bl), (gv0 = gv0), (Abs p (rest_elems ++ rest_elems)), (Abs p (rest_elems ++ cons_elems)), (Abs p (rest_elems ++ cons_elems0)), (Abs p (rest_elems ++ rest_elems0)), (Abs p (rest_elems ++ bl))
(Abs p (rest_elems ++ gv0)), (Abs p (cons_elems ++ rest_elems)), (Abs p (cons_elems ++ cons_elems)), (Abs p (cons_elems ++ cons_elems0)), (Abs p (cons_elems ++ rest_elems0)), (Abs p (cons_elems ++ bl)), (Abs p (cons_elems ++ gv0)), (Abs p (cons_elems0 ++ rest_elems)), (Abs p (cons_elems0 ++ cons_elems)), (Abs p (cons_elems0 ++ cons_elems0))
(Abs p (cons_elems0 ++ rest_elems0)), (Abs p (cons_elems0 ++ bl)), (Abs p (cons_elems0 ++ gv0)), (Abs p (rest_elems0 ++ rest_elems)), (Abs p (rest_elems0 ++ cons_elems)), (Abs p (rest_elems0 ++ cons_elems0)), (Abs p (rest_elems0 ++ rest_elems0)), (Abs p (rest_elems0 ++ bl)), (Abs p (rest_elems0 ++ gv0)), (Abs p (bl ++ rest_elems))
(Abs p (bl ++ cons_elems)), (Abs p (bl ++ cons_elems0)), (Abs p (bl ++ rest_elems0)), (Abs p (bl ++ bl)), (Abs p (bl ++ gv0)), (Abs p (gv0 ++ rest_elems)), (Abs p (gv0 ++ cons_elems)), (Abs p (gv0 ++ cons_elems0)), (Abs p (gv0 ++ rest_elems0)), (Abs p (gv0 ++ bl))
(Abs p (gv0 ++ gv0)), (Abs p []), (Abs (t :: p) rest_elems), (Abs (t :: p) cons_elems), (Abs (t :: p) cons_elems0), (Abs (t :: p) rest_elems0), (Abs (t :: p) bl), (Abs (t :: p) gv0), (Abs (t :: p) (rest_elems ++ rest_elems)), (Abs (t :: p) (rest_elems ++ cons_elems))
(Abs (t :: p) (rest_elems ++ cons_elems0)), (Abs (t :: p) (rest_elems ++ rest_elems0)), (Abs (t :: p) (rest_elems ++ bl)), (Abs (t :: p) (rest_elems ++ gv0)), (Abs (t :: p) (cons_elems ++ rest_elems)), (Abs (t :: p) (cons_elems ++ cons_elems)), (Abs (t :: p) (cons_elems ++ cons_elems0)), (Abs (t :: p) (cons_elems ++ rest_elems0)), (Abs (t :: p) (cons_elems ++ bl)), (Abs (t :: p) (cons_elems ++ gv0))
(Abs (t :: p) (cons_elems0 ++ rest_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems)), (Abs (t :: p) (cons_elems0 ++ cons_elems0)), (Abs (t :: p) (cons_elems0 ++ rest_elems0)), (Abs (t :: p) (cons_elems0 ++ bl)), (Abs (t :: p) (cons_elems0 ++ gv0)), (Abs (t :: p) (rest_elems0 ++ rest_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems)), (Abs (t :: p) (rest_elems0 ++ cons_elems0)), (Abs (t :: p) (rest_elems0 ++ rest_elems0))
(Abs (t :: p) (rest_elems0 ++ bl)), (Abs (t :: p) (rest_elems0 ++ gv0)), (Abs (t :: p) (bl ++ rest_elems)), (Abs (t :: p) (bl ++ cons_elems)), (Abs (t :: p) (bl ++ cons_elems0)), (Abs (t :: p) (bl ++ rest_elems0)), (Abs (t :: p) (bl ++ bl)), (Abs (t :: p) (bl ++ gv0)), (Abs (t :: p) (gv0 ++ rest_elems)), (Abs (t :: p) (gv0 ++ cons_elems))
(Abs (t :: p) (gv0 ++ cons_elems0)), (Abs (t :: p) (gv0 ++ rest_elems0)), (Abs (t :: p) (gv0 ++ bl)), (Abs (t :: p) (gv0 ++ gv0)), (Abs (t :: p) []), (Abs (merge p p) rest_elems), (Abs (merge p p) cons_elems), (Abs (merge p p) cons_elems0), (Abs (merge p p) rest_elems0), (Abs (merge p p) bl)
(Abs (merge p p) gv0), (Abs (merge p p) (rest_elems ++ rest_elems)), (Abs (merge p p) (rest_elems ++ cons_elems)), (Abs (merge p p) (rest_elems ++ cons_elems0)), (Abs (merge p p) (rest_elems ++ rest_elems0)), (Abs (merge p p) (rest_elems ++ bl)), (Abs (merge p p) (rest_elems ++ gv0)), (Abs (merge p p) (cons_elems ++ rest_elems)), (Abs (merge p p) (cons_elems ++ cons_elems)), (Abs (merge p p) (cons_elems ++ cons_elems0))
(Abs (merge p p) (cons_elems ++ rest_elems0)), (Abs (merge p p) (cons_elems ++ bl)), (Abs (merge p p) (cons_elems ++ gv0)), (Abs (merge p p) (cons_elems0 ++ rest_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems)), (Abs (merge p p) (cons_elems0 ++ cons_elems0)), (Abs (merge p p) (cons_elems0 ++ rest_elems0)), (Abs (merge p p) (cons_elems0 ++ bl)), (Abs (merge p p) (cons_elems0 ++ gv0)), (Abs (merge p p) (rest_elems0 ++ rest_elems))
(Abs (merge p p) (rest_elems0 ++ cons_elems)), (Abs (merge p p) (rest_elems0 ++ cons_elems0)), (Abs (merge p p) (rest_elems0 ++ rest_elems0)), (Abs (merge p p) (rest_elems0 ++ bl)), (Abs (merge p p) (rest_elems0 ++ gv0)), (Abs (merge p p) (bl ++ rest_elems)), (Abs (merge p p) (bl ++ cons_elems)), (Abs (merge p p) (bl ++ cons_elems0)), (Abs (merge p p) (bl ++ rest_elems0)), (Abs (merge p p) (bl ++ bl))
(Abs (merge p p) (bl ++ gv0)), (Abs (merge p p) (gv0 ++ rest_elems)), (Abs (merge p p) (gv0 ++ cons_elems)), (Abs (merge p p) (gv0 ++ cons_elems0)), (Abs (merge p p) (gv0 ++ rest_elems0)), (Abs (merge p p) (gv0 ++ bl)), (Abs (merge p p) (gv0 ++ gv0)), (Abs (merge p p) []), (Abs (heap_delete_max t) rest_elems), (Abs (heap_delete_max t) cons_elems)
(Abs (heap_delete_max t) cons_elems0), (Abs (heap_delete_max t) rest_elems0), (Abs (heap_delete_max t) bl), (Abs (heap_delete_max t) gv0), (Abs (heap_delete_max t) (rest_elems ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems ++ bl)), (Abs (heap_delete_max t) (rest_elems ++ gv0))
(Abs (heap_delete_max t) (cons_elems ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems ++ rest_elems0)), (Abs (heap_delete_max t) (cons_elems ++ bl)), (Abs (heap_delete_max t) (cons_elems ++ gv0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (cons_elems0 ++ rest_elems0))
(Abs (heap_delete_max t) (cons_elems0 ++ bl)), (Abs (heap_delete_max t) (cons_elems0 ++ gv0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems)), (Abs (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (Abs (heap_delete_max t) (rest_elems0 ++ bl)), (Abs (heap_delete_max t) (rest_elems0 ++ gv0)), (Abs (heap_delete_max t) (bl ++ rest_elems)), (Abs (heap_delete_max t) (bl ++ cons_elems))
(Abs (heap_delete_max t) (bl ++ cons_elems0)), (Abs (heap_delete_max t) (bl ++ rest_elems0)), (Abs (heap_delete_max t) (bl ++ bl)), (Abs (heap_delete_max t) (bl ++ gv0)), (Abs (heap_delete_max t) (gv0 ++ rest_elems)), (Abs (heap_delete_max t) (gv0 ++ cons_elems)), (Abs (heap_delete_max t) (gv0 ++ cons_elems0)), (Abs (heap_delete_max t) (gv0 ++ rest_elems0)), (Abs (heap_delete_max t) (gv0 ++ bl)), (Abs (heap_delete_max t) (gv0 ++ gv0))
(Abs (heap_delete_max t) []), (Abs (join p p t) rest_elems), (Abs (join p p t) cons_elems), (Abs (join p p t) cons_elems0), (Abs (join p p t) rest_elems0), (Abs (join p p t) bl), (Abs (join p p t) gv0), (Abs (join p p t) (rest_elems ++ rest_elems)), (Abs (join p p t) (rest_elems ++ cons_elems)), (Abs (join p p t) (rest_elems ++ cons_elems0))
(Abs (join p p t) (rest_elems ++ rest_elems0)), (Abs (join p p t) (rest_elems ++ bl)), (Abs (join p p t) (rest_elems ++ gv0)), (Abs (join p p t) (cons_elems ++ rest_elems)), (Abs (join p p t) (cons_elems ++ cons_elems)), (Abs (join p p t) (cons_elems ++ cons_elems0)), (Abs (join p p t) (cons_elems ++ rest_elems0)), (Abs (join p p t) (cons_elems ++ bl)), (Abs (join p p t) (cons_elems ++ gv0)), (Abs (join p p t) (cons_elems0 ++ rest_elems))
(Abs (join p p t) (cons_elems0 ++ cons_elems)), (Abs (join p p t) (cons_elems0 ++ cons_elems0)), (Abs (join p p t) (cons_elems0 ++ rest_elems0)), (Abs (join p p t) (cons_elems0 ++ bl)), (Abs (join p p t) (cons_elems0 ++ gv0)), (Abs (join p p t) (rest_elems0 ++ rest_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems)), (Abs (join p p t) (rest_elems0 ++ cons_elems0)), (Abs (join p p t) (rest_elems0 ++ rest_elems0)), (Abs (join p p t) (rest_elems0 ++ bl))
(Abs (join p p t) (rest_elems0 ++ gv0)), (Abs (join p p t) (bl ++ rest_elems)), (Abs (join p p t) (bl ++ cons_elems)), (Abs (join p p t) (bl ++ cons_elems0)), (Abs (join p p t) (bl ++ rest_elems0)), (Abs (join p p t) (bl ++ bl)), (Abs (join p p t) (bl ++ gv0)), (Abs (join p p t) (gv0 ++ rest_elems)), (Abs (join p p t) (gv0 ++ cons_elems)), (Abs (join p p t) (gv0 ++ cons_elems0))
(Abs (join p p t) (gv0 ++ rest_elems0)), (Abs (join p p t) (gv0 ++ bl)), (Abs (join p p t) (gv0 ++ gv0)), (Abs (join p p t) []), (Abs (carry p t) rest_elems), (Abs (carry p t) cons_elems), (Abs (carry p t) cons_elems0), (Abs (carry p t) rest_elems0), (Abs (carry p t) bl), (Abs (carry p t) gv0)
(Abs (carry p t) (rest_elems ++ rest_elems)), (Abs (carry p t) (rest_elems ++ cons_elems)), (Abs (carry p t) (rest_elems ++ cons_elems0)), (Abs (carry p t) (rest_elems ++ rest_elems0)), (Abs (carry p t) (rest_elems ++ bl)), (Abs (carry p t) (rest_elems ++ gv0)), (Abs (carry p t) (cons_elems ++ rest_elems)), (Abs (carry p t) (cons_elems ++ cons_elems)), (Abs (carry p t) (cons_elems ++ cons_elems0)), (Abs (carry p t) (cons_elems ++ rest_elems0))
(Abs (carry p t) (cons_elems ++ bl)), (Abs (carry p t) (cons_elems ++ gv0)), (Abs (carry p t) (cons_elems0 ++ rest_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems)), (Abs (carry p t) (cons_elems0 ++ cons_elems0)), (Abs (carry p t) (cons_elems0 ++ rest_elems0)), (Abs (carry p t) (cons_elems0 ++ bl)), (Abs (carry p t) (cons_elems0 ++ gv0)), (Abs (carry p t) (rest_elems0 ++ rest_elems)), (Abs (carry p t) (rest_elems0 ++ cons_elems))
(Abs (carry p t) (rest_elems0 ++ cons_elems0)), (Abs (carry p t) (rest_elems0 ++ rest_elems0)), (Abs (carry p t) (rest_elems0 ++ bl)), (Abs (carry p t) (rest_elems0 ++ gv0)), (Abs (carry p t) (bl ++ rest_elems)), (Abs (carry p t) (bl ++ cons_elems)), (Abs (carry p t) (bl ++ cons_elems0)), (Abs (carry p t) (bl ++ rest_elems0)), (Abs (carry p t) (bl ++ bl)), (Abs (carry p t) (bl ++ gv0))
(Abs (carry p t) (gv0 ++ rest_elems)), (Abs (carry p t) (gv0 ++ cons_elems)), (Abs (carry p t) (gv0 ++ cons_elems0)), (Abs (carry p t) (gv0 ++ rest_elems0)), (Abs (carry p t) (gv0 ++ bl)), (Abs (carry p t) (gv0 ++ gv0)), (Abs (carry p t) []), (Abs (p ++ p) rest_elems), (Abs (p ++ p) cons_elems), (Abs (p ++ p) cons_elems0)
(Abs (p ++ p) rest_elems0), (Abs (p ++ p) bl), (Abs (p ++ p) gv0), (Abs (p ++ p) (rest_elems ++ rest_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems)), (Abs (p ++ p) (rest_elems ++ cons_elems0)), (Abs (p ++ p) (rest_elems ++ rest_elems0)), (Abs (p ++ p) (rest_elems ++ bl)), (Abs (p ++ p) (rest_elems ++ gv0)), (Abs (p ++ p) (cons_elems ++ rest_elems))
(Abs (p ++ p) (cons_elems ++ cons_elems)), (Abs (p ++ p) (cons_elems ++ cons_elems0)), (Abs (p ++ p) (cons_elems ++ rest_elems0)), (Abs (p ++ p) (cons_elems ++ bl)), (Abs (p ++ p) (cons_elems ++ gv0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems)), (Abs (p ++ p) (cons_elems0 ++ cons_elems0)), (Abs (p ++ p) (cons_elems0 ++ rest_elems0)), (Abs (p ++ p) (cons_elems0 ++ bl))
(Abs (p ++ p) (cons_elems0 ++ gv0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems)), (Abs (p ++ p) (rest_elems0 ++ cons_elems0)), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (Abs (p ++ p) (rest_elems0 ++ bl)), (Abs (p ++ p) (rest_elems0 ++ gv0)), (Abs (p ++ p) (bl ++ rest_elems)), (Abs (p ++ p) (bl ++ cons_elems)), (Abs (p ++ p) (bl ++ cons_elems0))
(Abs (p ++ p) (bl ++ rest_elems0)), (Abs (p ++ p) (bl ++ bl)), (Abs (p ++ p) (bl ++ gv0)), (Abs (p ++ p) (gv0 ++ rest_elems)), (Abs (p ++ p) (gv0 ++ cons_elems)), (Abs (p ++ p) (gv0 ++ cons_elems0)), (Abs (p ++ p) (gv0 ++ rest_elems0)), (Abs (p ++ p) (gv0 ++ bl)), (Abs (p ++ p) (gv0 ++ gv0)), (Abs (p ++ p) [])
(Abs [] rest_elems), (Abs [] cons_elems), (Abs [] cons_elems0), (Abs [] rest_elems0), (Abs [] bl), (Abs [] gv0), (Abs [] (rest_elems ++ rest_elems)), (Abs [] (rest_elems ++ cons_elems)), (Abs [] (rest_elems ++ cons_elems0)), (Abs [] (rest_elems ++ rest_elems0))
(Abs [] (rest_elems ++ bl)), (Abs [] (rest_elems ++ gv0)), (Abs [] (cons_elems ++ rest_elems)), (Abs [] (cons_elems ++ cons_elems)), (Abs [] (cons_elems ++ cons_elems0)), (Abs [] (cons_elems ++ rest_elems0)), (Abs [] (cons_elems ++ bl)), (Abs [] (cons_elems ++ gv0)), (Abs [] (cons_elems0 ++ rest_elems)), (Abs [] (cons_elems0 ++ cons_elems))
(Abs [] (cons_elems0 ++ cons_elems0)), (Abs [] (cons_elems0 ++ rest_elems0)), (Abs [] (cons_elems0 ++ bl)), (Abs [] (cons_elems0 ++ gv0)), (Abs [] (rest_elems0 ++ rest_elems)), (Abs [] (rest_elems0 ++ cons_elems)), (Abs [] (rest_elems0 ++ cons_elems0)), (Abs [] (rest_elems0 ++ rest_elems0)), (Abs [] (rest_elems0 ++ bl)), (Abs [] (rest_elems0 ++ gv0))
(Abs [] (bl ++ rest_elems)), (Abs [] (bl ++ cons_elems)), (Abs [] (bl ++ cons_elems0)), (Abs [] (bl ++ rest_elems0)), (Abs [] (bl ++ bl)), (Abs [] (bl ++ gv0)), (Abs [] (gv0 ++ rest_elems)), (Abs [] (gv0 ++ cons_elems)), (Abs [] (gv0 ++ cons_elems0)), (Abs [] (gv0 ++ rest_elems0))
(Abs [] (gv0 ++ bl)), (Abs [] (gv0 ++ gv0)), (Abs [] []), (priqueue_elems p (rest_elems ++ rest_elems)), (priqueue_elems p (rest_elems ++ cons_elems)), (priqueue_elems p (rest_elems ++ cons_elems0)), (priqueue_elems p (rest_elems ++ rest_elems0)), (priqueue_elems p (rest_elems ++ bl)), (priqueue_elems p (rest_elems ++ gv0)), (priqueue_elems p (cons_elems ++ rest_elems))
(priqueue_elems p (cons_elems ++ cons_elems)), (priqueue_elems p (cons_elems ++ cons_elems0)), (priqueue_elems p (cons_elems ++ rest_elems0)), (priqueue_elems p (cons_elems ++ bl)), (priqueue_elems p (cons_elems ++ gv0)), (priqueue_elems p (cons_elems0 ++ rest_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems)), (priqueue_elems p (cons_elems0 ++ cons_elems0)), (priqueue_elems p (cons_elems0 ++ rest_elems0)), (priqueue_elems p (cons_elems0 ++ bl))
(priqueue_elems p (cons_elems0 ++ gv0)), (priqueue_elems p (rest_elems0 ++ rest_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems)), (priqueue_elems p (rest_elems0 ++ cons_elems0)), (priqueue_elems p (rest_elems0 ++ rest_elems0)), (priqueue_elems p (rest_elems0 ++ bl)), (priqueue_elems p (rest_elems0 ++ gv0)), (priqueue_elems p (bl ++ rest_elems)), (priqueue_elems p (bl ++ cons_elems)), (priqueue_elems p (bl ++ cons_elems0))
(priqueue_elems p (bl ++ rest_elems0)), (priqueue_elems p (bl ++ bl)), (priqueue_elems p (bl ++ gv0)), (priqueue_elems p (gv0 ++ rest_elems)), (priqueue_elems p (gv0 ++ cons_elems)), (priqueue_elems p (gv0 ++ cons_elems0)), (priqueue_elems p (gv0 ++ rest_elems0)), (priqueue_elems p (gv0 ++ bl)), (priqueue_elems p (gv0 ++ gv0)), (priqueue_elems p [])
(priqueue_elems (t :: p) rest_elems), (priqueue_elems (t :: p) cons_elems), (priqueue_elems (t :: p) cons_elems0), (priqueue_elems (t :: p) rest_elems0), (priqueue_elems (t :: p) bl), (priqueue_elems (t :: p) gv0), (priqueue_elems (t :: p) (rest_elems ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems ++ rest_elems0))
(priqueue_elems (t :: p) (rest_elems ++ bl)), (priqueue_elems (t :: p) (rest_elems ++ gv0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems)), (priqueue_elems (t :: p) (cons_elems ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems ++ bl)), (priqueue_elems (t :: p) (cons_elems ++ gv0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (cons_elems0 ++ cons_elems))
(priqueue_elems (t :: p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (cons_elems0 ++ bl)), (priqueue_elems (t :: p) (cons_elems0 ++ gv0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems)), (priqueue_elems (t :: p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (t :: p) (rest_elems0 ++ bl)), (priqueue_elems (t :: p) (rest_elems0 ++ gv0))
(priqueue_elems (t :: p) (bl ++ rest_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems)), (priqueue_elems (t :: p) (bl ++ cons_elems0)), (priqueue_elems (t :: p) (bl ++ rest_elems0)), (priqueue_elems (t :: p) (bl ++ bl)), (priqueue_elems (t :: p) (bl ++ gv0)), (priqueue_elems (t :: p) (gv0 ++ rest_elems)), (priqueue_elems (t :: p) (gv0 ++ cons_elems)), (priqueue_elems (t :: p) (gv0 ++ cons_elems0)), (priqueue_elems (t :: p) (gv0 ++ rest_elems0))
(priqueue_elems (t :: p) (gv0 ++ bl)), (priqueue_elems (t :: p) (gv0 ++ gv0)), (priqueue_elems (t :: p) []), (priqueue_elems (merge p p) rest_elems), (priqueue_elems (merge p p) cons_elems), (priqueue_elems (merge p p) cons_elems0), (priqueue_elems (merge p p) rest_elems0), (priqueue_elems (merge p p) bl), (priqueue_elems (merge p p) gv0), (priqueue_elems (merge p p) (rest_elems ++ rest_elems))
(priqueue_elems (merge p p) (rest_elems ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems ++ cons_elems0)), (priqueue_elems (merge p p) (rest_elems ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems ++ bl)), (priqueue_elems (merge p p) (rest_elems ++ gv0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems ++ bl))
(priqueue_elems (merge p p) (cons_elems ++ gv0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (cons_elems0 ++ bl)), (priqueue_elems (merge p p) (cons_elems0 ++ gv0)), (priqueue_elems (merge p p) (rest_elems0 ++ rest_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems)), (priqueue_elems (merge p p) (rest_elems0 ++ cons_elems0))
(priqueue_elems (merge p p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (merge p p) (rest_elems0 ++ bl)), (priqueue_elems (merge p p) (rest_elems0 ++ gv0)), (priqueue_elems (merge p p) (bl ++ rest_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems)), (priqueue_elems (merge p p) (bl ++ cons_elems0)), (priqueue_elems (merge p p) (bl ++ rest_elems0)), (priqueue_elems (merge p p) (bl ++ bl)), (priqueue_elems (merge p p) (bl ++ gv0)), (priqueue_elems (merge p p) (gv0 ++ rest_elems))
(priqueue_elems (merge p p) (gv0 ++ cons_elems)), (priqueue_elems (merge p p) (gv0 ++ cons_elems0)), (priqueue_elems (merge p p) (gv0 ++ rest_elems0)), (priqueue_elems (merge p p) (gv0 ++ bl)), (priqueue_elems (merge p p) (gv0 ++ gv0)), (priqueue_elems (merge p p) []), (priqueue_elems (heap_delete_max t) rest_elems), (priqueue_elems (heap_delete_max t) cons_elems), (priqueue_elems (heap_delete_max t) cons_elems0), (priqueue_elems (heap_delete_max t) rest_elems0)
(priqueue_elems (heap_delete_max t) bl), (priqueue_elems (heap_delete_max t) gv0), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems ++ gv0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems))
(priqueue_elems (heap_delete_max t) (cons_elems ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems ++ gv0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (cons_elems0 ++ gv0))
(priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ bl)), (priqueue_elems (heap_delete_max t) (rest_elems0 ++ gv0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems)), (priqueue_elems (heap_delete_max t) (bl ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (bl ++ rest_elems0))
(priqueue_elems (heap_delete_max t) (bl ++ bl)), (priqueue_elems (heap_delete_max t) (bl ++ gv0)), (priqueue_elems (heap_delete_max t) (gv0 ++ rest_elems)), (priqueue_elems (heap_delete_max t) (gv0 ++ cons_elems)), (priqueue_elems (heap_delete_max t) (gv0 ++ cons_elems0)), (priqueue_elems (heap_delete_max t) (gv0 ++ rest_elems0)), (priqueue_elems (heap_delete_max t) (gv0 ++ bl)), (priqueue_elems (heap_delete_max t) (gv0 ++ gv0)), (priqueue_elems (heap_delete_max t) []), (priqueue_elems (join p p t) rest_elems)
(priqueue_elems (join p p t) cons_elems), (priqueue_elems (join p p t) cons_elems0), (priqueue_elems (join p p t) rest_elems0), (priqueue_elems (join p p t) bl), (priqueue_elems (join p p t) gv0), (priqueue_elems (join p p t) (rest_elems ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems ++ bl))
(priqueue_elems (join p p t) (rest_elems ++ gv0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems ++ cons_elems0)), (priqueue_elems (join p p t) (cons_elems ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems ++ bl)), (priqueue_elems (join p p t) (cons_elems ++ gv0)), (priqueue_elems (join p p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (cons_elems0 ++ cons_elems0))
(priqueue_elems (join p p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (cons_elems0 ++ bl)), (priqueue_elems (join p p t) (cons_elems0 ++ gv0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (join p p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ rest_elems0)), (priqueue_elems (join p p t) (rest_elems0 ++ bl)), (priqueue_elems (join p p t) (rest_elems0 ++ gv0)), (priqueue_elems (join p p t) (bl ++ rest_elems))
(priqueue_elems (join p p t) (bl ++ cons_elems)), (priqueue_elems (join p p t) (bl ++ cons_elems0)), (priqueue_elems (join p p t) (bl ++ rest_elems0)), (priqueue_elems (join p p t) (bl ++ bl)), (priqueue_elems (join p p t) (bl ++ gv0)), (priqueue_elems (join p p t) (gv0 ++ rest_elems)), (priqueue_elems (join p p t) (gv0 ++ cons_elems)), (priqueue_elems (join p p t) (gv0 ++ cons_elems0)), (priqueue_elems (join p p t) (gv0 ++ rest_elems0)), (priqueue_elems (join p p t) (gv0 ++ bl))
(priqueue_elems (join p p t) (gv0 ++ gv0)), (priqueue_elems (join p p t) []), (priqueue_elems (carry p t) rest_elems), (priqueue_elems (carry p t) cons_elems), (priqueue_elems (carry p t) cons_elems0), (priqueue_elems (carry p t) rest_elems0), (priqueue_elems (carry p t) bl), (priqueue_elems (carry p t) gv0), (priqueue_elems (carry p t) (rest_elems ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems ++ cons_elems))
(priqueue_elems (carry p t) (rest_elems ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems ++ rest_elems0)), (priqueue_elems (carry p t) (rest_elems ++ bl)), (priqueue_elems (carry p t) (rest_elems ++ gv0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems ++ bl)), (priqueue_elems (carry p t) (cons_elems ++ gv0))
(priqueue_elems (carry p t) (cons_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (cons_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ rest_elems0)), (priqueue_elems (carry p t) (cons_elems0 ++ bl)), (priqueue_elems (carry p t) (cons_elems0 ++ gv0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems)), (priqueue_elems (carry p t) (rest_elems0 ++ cons_elems0)), (priqueue_elems (carry p t) (rest_elems0 ++ rest_elems0))
(priqueue_elems (carry p t) (rest_elems0 ++ bl)), (priqueue_elems (carry p t) (rest_elems0 ++ gv0)), (priqueue_elems (carry p t) (bl ++ rest_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems)), (priqueue_elems (carry p t) (bl ++ cons_elems0)), (priqueue_elems (carry p t) (bl ++ rest_elems0)), (priqueue_elems (carry p t) (bl ++ bl)), (priqueue_elems (carry p t) (bl ++ gv0)), (priqueue_elems (carry p t) (gv0 ++ rest_elems)), (priqueue_elems (carry p t) (gv0 ++ cons_elems))
(priqueue_elems (carry p t) (gv0 ++ cons_elems0)), (priqueue_elems (carry p t) (gv0 ++ rest_elems0)), (priqueue_elems (carry p t) (gv0 ++ bl)), (priqueue_elems (carry p t) (gv0 ++ gv0)), (priqueue_elems (carry p t) []), (priqueue_elems (p ++ p) rest_elems), (priqueue_elems (p ++ p) cons_elems), (priqueue_elems (p ++ p) cons_elems0), (priqueue_elems (p ++ p) rest_elems0), (priqueue_elems (p ++ p) bl)
(priqueue_elems (p ++ p) gv0), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems ++ bl)), (priqueue_elems (p ++ p) (rest_elems ++ gv0)), (priqueue_elems (p ++ p) (cons_elems ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems ++ cons_elems0))
(priqueue_elems (p ++ p) (cons_elems ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems ++ bl)), (priqueue_elems (p ++ p) (cons_elems ++ gv0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (cons_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (cons_elems0 ++ bl)), (priqueue_elems (p ++ p) (cons_elems0 ++ gv0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems))
(priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems)), (priqueue_elems (p ++ p) (rest_elems0 ++ cons_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ bl)), (priqueue_elems (p ++ p) (rest_elems0 ++ gv0)), (priqueue_elems (p ++ p) (bl ++ rest_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems)), (priqueue_elems (p ++ p) (bl ++ cons_elems0)), (priqueue_elems (p ++ p) (bl ++ rest_elems0)), (priqueue_elems (p ++ p) (bl ++ bl))
(priqueue_elems (p ++ p) (bl ++ gv0)), (priqueue_elems (p ++ p) (gv0 ++ rest_elems)), (priqueue_elems (p ++ p) (gv0 ++ cons_elems)), (priqueue_elems (p ++ p) (gv0 ++ cons_elems0)), (priqueue_elems (p ++ p) (gv0 ++ rest_elems0)), (priqueue_elems (p ++ p) (gv0 ++ bl)), (priqueue_elems (p ++ p) (gv0 ++ gv0)), (priqueue_elems (p ++ p) []), (priqueue_elems [] rest_elems), (priqueue_elems [] cons_elems)
(priqueue_elems [] cons_elems0), (priqueue_elems [] rest_elems0), (priqueue_elems [] bl), (priqueue_elems [] gv0), (priqueue_elems [] (rest_elems ++ rest_elems)), (priqueue_elems [] (rest_elems ++ cons_elems)), (priqueue_elems [] (rest_elems ++ cons_elems0)), (priqueue_elems [] (rest_elems ++ rest_elems0)), (priqueue_elems [] (rest_elems ++ bl)), (priqueue_elems [] (rest_elems ++ gv0))
(priqueue_elems [] (cons_elems ++ rest_elems)), (priqueue_elems [] (cons_elems ++ cons_elems)), (priqueue_elems [] (cons_elems ++ cons_elems0)), (priqueue_elems [] (cons_elems ++ rest_elems0)), (priqueue_elems [] (cons_elems ++ bl)), (priqueue_elems [] (cons_elems ++ gv0)), (priqueue_elems [] (cons_elems0 ++ rest_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems)), (priqueue_elems [] (cons_elems0 ++ cons_elems0)), (priqueue_elems [] (cons_elems0 ++ rest_elems0))
(priqueue_elems [] (cons_elems0 ++ bl)), (priqueue_elems [] (cons_elems0 ++ gv0)), (priqueue_elems [] (rest_elems0 ++ rest_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems)), (priqueue_elems [] (rest_elems0 ++ cons_elems0)), (priqueue_elems [] (rest_elems0 ++ rest_elems0)), (priqueue_elems [] (rest_elems0 ++ bl)), (priqueue_elems [] (rest_elems0 ++ gv0)), (priqueue_elems [] (bl ++ rest_elems)), (priqueue_elems [] (bl ++ cons_elems))
(priqueue_elems [] (bl ++ cons_elems0)), (priqueue_elems [] (bl ++ rest_elems0)), (priqueue_elems [] (bl ++ bl)), (priqueue_elems [] (bl ++ gv0)), (priqueue_elems [] (gv0 ++ rest_elems)), (priqueue_elems [] (gv0 ++ cons_elems)), (priqueue_elems [] (gv0 ++ cons_elems0)), (priqueue_elems [] (gv0 ++ rest_elems0)), (priqueue_elems [] (gv0 ++ bl)), (priqueue_elems [] (gv0 ++ gv0))
(priqueue_elems [] []), (tree_elems t (rest_elems ++ rest_elems)), (tree_elems t (rest_elems ++ cons_elems)), (tree_elems t (rest_elems ++ cons_elems0)), (tree_elems t (rest_elems ++ rest_elems0)), (tree_elems t (rest_elems ++ bl)), (tree_elems t (rest_elems ++ gv0)), (tree_elems t (cons_elems ++ rest_elems)), (tree_elems t (cons_elems ++ cons_elems)), (tree_elems t (cons_elems ++ cons_elems0))
(tree_elems t (cons_elems ++ rest_elems0)), (tree_elems t (cons_elems ++ bl)), (tree_elems t (cons_elems ++ gv0)), (tree_elems t (cons_elems0 ++ rest_elems)), (tree_elems t (cons_elems0 ++ cons_elems)), (tree_elems t (cons_elems0 ++ cons_elems0)), (tree_elems t (cons_elems0 ++ rest_elems0)), (tree_elems t (cons_elems0 ++ bl)), (tree_elems t (cons_elems0 ++ gv0)), (tree_elems t (rest_elems0 ++ rest_elems))
(tree_elems t (rest_elems0 ++ cons_elems)), (tree_elems t (rest_elems0 ++ cons_elems0)), (tree_elems t (rest_elems0 ++ rest_elems0)), (tree_elems t (rest_elems0 ++ bl)), (tree_elems t (rest_elems0 ++ gv0)), (tree_elems t (bl ++ rest_elems)), (tree_elems t (bl ++ cons_elems)), (tree_elems t (bl ++ cons_elems0)), (tree_elems t (bl ++ rest_elems0)), (tree_elems t (bl ++ bl))
(tree_elems t (bl ++ gv0)), (tree_elems t (gv0 ++ rest_elems)), (tree_elems t (gv0 ++ cons_elems)), (tree_elems t (gv0 ++ cons_elems0)), (tree_elems t (gv0 ++ rest_elems0)), (tree_elems t (gv0 ++ bl)), (tree_elems t (gv0 ++ gv0)), (tree_elems t []), (tree_elems (smash t t) rest_elems), (tree_elems (smash t t) cons_elems)
(tree_elems (smash t t) cons_elems0), (tree_elems (smash t t) rest_elems0), (tree_elems (smash t t) bl), (tree_elems (smash t t) gv0), (tree_elems (smash t t) (rest_elems ++ rest_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems)), (tree_elems (smash t t) (rest_elems ++ cons_elems0)), (tree_elems (smash t t) (rest_elems ++ rest_elems0)), (tree_elems (smash t t) (rest_elems ++ bl)), (tree_elems (smash t t) (rest_elems ++ gv0))
(tree_elems (smash t t) (cons_elems ++ rest_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems)), (tree_elems (smash t t) (cons_elems ++ cons_elems0)), (tree_elems (smash t t) (cons_elems ++ rest_elems0)), (tree_elems (smash t t) (cons_elems ++ bl)), (tree_elems (smash t t) (cons_elems ++ gv0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems)), (tree_elems (smash t t) (cons_elems0 ++ cons_elems0)), (tree_elems (smash t t) (cons_elems0 ++ rest_elems0))
(tree_elems (smash t t) (cons_elems0 ++ bl)), (tree_elems (smash t t) (cons_elems0 ++ gv0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems)), (tree_elems (smash t t) (rest_elems0 ++ cons_elems0)), (tree_elems (smash t t) (rest_elems0 ++ rest_elems0)), (tree_elems (smash t t) (rest_elems0 ++ bl)), (tree_elems (smash t t) (rest_elems0 ++ gv0)), (tree_elems (smash t t) (bl ++ rest_elems)), (tree_elems (smash t t) (bl ++ cons_elems))
(tree_elems (smash t t) (bl ++ cons_elems0)), (tree_elems (smash t t) (bl ++ rest_elems0)), (tree_elems (smash t t) (bl ++ bl)), (tree_elems (smash t t) (bl ++ gv0)), (tree_elems (smash t t) (gv0 ++ rest_elems)), (tree_elems (smash t t) (gv0 ++ cons_elems)), (tree_elems (smash t t) (gv0 ++ cons_elems0)), (tree_elems (smash t t) (gv0 ++ rest_elems0)), (tree_elems (smash t t) (gv0 ++ bl)), (tree_elems (smash t t) (gv0 ++ gv0))
(tree_elems (smash t t) []), (tree_elems Leaf rest_elems), (tree_elems Leaf cons_elems), (tree_elems Leaf cons_elems0), (tree_elems Leaf rest_elems0), (tree_elems Leaf bl), (tree_elems Leaf gv0), (tree_elems Leaf (rest_elems ++ rest_elems)), (tree_elems Leaf (rest_elems ++ cons_elems)), (tree_elems Leaf (rest_elems ++ cons_elems0))
(tree_elems Leaf (rest_elems ++ rest_elems0)), (tree_elems Leaf (rest_elems ++ bl)), (tree_elems Leaf (rest_elems ++ gv0)), (tree_elems Leaf (cons_elems ++ rest_elems)), (tree_elems Leaf (cons_elems ++ cons_elems)), (tree_elems Leaf (cons_elems ++ cons_elems0)), (tree_elems Leaf (cons_elems ++ rest_elems0)), (tree_elems Leaf (cons_elems ++ bl)), (tree_elems Leaf (cons_elems ++ gv0)), (tree_elems Leaf (cons_elems0 ++ rest_elems))
(tree_elems Leaf (cons_elems0 ++ cons_elems)), (tree_elems Leaf (cons_elems0 ++ cons_elems0)), (tree_elems Leaf (cons_elems0 ++ rest_elems0)), (tree_elems Leaf (cons_elems0 ++ bl)), (tree_elems Leaf (cons_elems0 ++ gv0)), (tree_elems Leaf (rest_elems0 ++ rest_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems)), (tree_elems Leaf (rest_elems0 ++ cons_elems0)), (tree_elems Leaf (rest_elems0 ++ rest_elems0)), (tree_elems Leaf (rest_elems0 ++ bl))
(tree_elems Leaf (rest_elems0 ++ gv0)), (tree_elems Leaf (bl ++ rest_elems)), (tree_elems Leaf (bl ++ cons_elems)), (tree_elems Leaf (bl ++ cons_elems0)), (tree_elems Leaf (bl ++ rest_elems0)), (tree_elems Leaf (bl ++ bl)), (tree_elems Leaf (bl ++ gv0)), (tree_elems Leaf (gv0 ++ rest_elems)), (tree_elems Leaf (gv0 ++ cons_elems)), (tree_elems Leaf (gv0 ++ cons_elems0))
(tree_elems Leaf (gv0 ++ rest_elems0)), (tree_elems Leaf (gv0 ++ bl)), (tree_elems Leaf (gv0 ++ gv0)), (tree_elems Leaf []), (priq (t :: p)), (priq (merge p p)), (priq (heap_delete_max t)), (priq (join p p t)), (priq (carry p t)), (priq (p ++ p))
(priqq (length rest_elems) p), (priqq (length rest_elems) (t :: p)), (priqq (length rest_elems) (merge p p)), (priqq (length rest_elems) (heap_delete_max t)), (priqq (length rest_elems) (join p p t)), (priqq (length rest_elems) (carry p t)), (priqq (length rest_elems) (p ++ p)), (priqq (length cons_elems) p), (priqq (length cons_elems) (t :: p)), (priqq (length cons_elems) (merge p p))
(priqq (length cons_elems) (heap_delete_max t)), (priqq (length cons_elems) (join p p t)), (priqq (length cons_elems) (carry p t)), (priqq (length cons_elems) (p ++ p)), (priqq (length cons_elems0) p), (priqq (length cons_elems0) (t :: p)), (priqq (length cons_elems0) (merge p p)), (priqq (length cons_elems0) (heap_delete_max t)), (priqq (length cons_elems0) (join p p t)), (priqq (length cons_elems0) (carry p t))
(priqq (length cons_elems0) (p ++ p)), (priqq (length rest_elems0) p), (priqq (length rest_elems0) (t :: p)), (priqq (length rest_elems0) (merge p p)), (priqq (length rest_elems0) (heap_delete_max t)), (priqq (length rest_elems0) (join p p t)), (priqq (length rest_elems0) (carry p t)), (priqq (length rest_elems0) (p ++ p)), (priqq (length bl) p), (priqq (length bl) (t :: p))
(priqq (length bl) (merge p p)), (priqq (length bl) (heap_delete_max t)), (priqq (length bl) (join p p t)), (priqq (length bl) (carry p t)), (priqq (length bl) (p ++ p)), (priqq (length gv0) p), (priqq (length gv0) (t :: p)), (priqq (length gv0) (merge p p)), (priqq (length gv0) (heap_delete_max t)), (priqq (length gv0) (join p p t))
(priqq (length gv0) (carry p t)), (priqq (length gv0) (p ++ p)), (priqq (length p) p), (priqq (length p) (t :: p)), (priqq (length p) (merge p p)), (priqq (length p) (heap_delete_max t)), (priqq (length p) (join p p t)), (priqq (length p) (carry p t)), (priqq (length p) (p ++ p)), (pow2heap (length rest_elems) t)
(pow2heap (length rest_elems) (smash t t)), (pow2heap (length cons_elems) t), (pow2heap (length cons_elems) (smash t t)), (pow2heap (length cons_elems0) t), (pow2heap (length cons_elems0) (smash t t)), (pow2heap (length rest_elems0) t), (pow2heap (length rest_elems0) (smash t t)), (pow2heap (length bl) t), (pow2heap (length bl) (smash t t)), (pow2heap (length gv0) t)
(pow2heap (length gv0) (smash t t)), (pow2heap (length p) t), (pow2heap (length p) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) t), (pow2heapp (length rest_elems) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems) t), (pow2heapp (length rest_elems) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems) Leaf), (pow2heapp (length rest_elems) (length cons_elems0) t)
(pow2heapp (length rest_elems) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems) (length cons_elems0) Leaf), (pow2heapp (length rest_elems) (length rest_elems0) t), (pow2heapp (length rest_elems) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems) (length rest_elems0) Leaf), (pow2heapp (length rest_elems) (length bl) t), (pow2heapp (length rest_elems) (length bl) (smash t t)), (pow2heapp (length rest_elems) (length bl) Leaf), (pow2heapp (length rest_elems) (length gv0) t), (pow2heapp (length rest_elems) (length gv0) (smash t t))
(pow2heapp (length rest_elems) (length gv0) Leaf), (pow2heapp (length rest_elems) (length p) t), (pow2heapp (length rest_elems) (length p) (smash t t)), (pow2heapp (length rest_elems) (length p) Leaf), (pow2heapp (length cons_elems) (length rest_elems) t), (pow2heapp (length cons_elems) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems) Leaf), (pow2heapp (length cons_elems) (length cons_elems) t), (pow2heapp (length cons_elems) (length cons_elems) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems) Leaf)
(pow2heapp (length cons_elems) (length cons_elems0) t), (pow2heapp (length cons_elems) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems) (length cons_elems0) Leaf), (pow2heapp (length cons_elems) (length rest_elems0) t), (pow2heapp (length cons_elems) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems) (length rest_elems0) Leaf), (pow2heapp (length cons_elems) (length bl) t), (pow2heapp (length cons_elems) (length bl) (smash t t)), (pow2heapp (length cons_elems) (length bl) Leaf), (pow2heapp (length cons_elems) (length gv0) t)
(pow2heapp (length cons_elems) (length gv0) (smash t t)), (pow2heapp (length cons_elems) (length gv0) Leaf), (pow2heapp (length cons_elems) (length p) t), (pow2heapp (length cons_elems) (length p) (smash t t)), (pow2heapp (length cons_elems) (length p) Leaf), (pow2heapp (length cons_elems0) (length rest_elems) t), (pow2heapp (length cons_elems0) (length rest_elems) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems) t), (pow2heapp (length cons_elems0) (length cons_elems) (smash t t))
(pow2heapp (length cons_elems0) (length cons_elems) Leaf), (pow2heapp (length cons_elems0) (length cons_elems0) t), (pow2heapp (length cons_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length cons_elems0) Leaf), (pow2heapp (length cons_elems0) (length rest_elems0) t), (pow2heapp (length cons_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length cons_elems0) (length rest_elems0) Leaf), (pow2heapp (length cons_elems0) (length bl) t), (pow2heapp (length cons_elems0) (length bl) (smash t t)), (pow2heapp (length cons_elems0) (length bl) Leaf)
(pow2heapp (length cons_elems0) (length gv0) t), (pow2heapp (length cons_elems0) (length gv0) (smash t t)), (pow2heapp (length cons_elems0) (length gv0) Leaf), (pow2heapp (length cons_elems0) (length p) t), (pow2heapp (length cons_elems0) (length p) (smash t t)), (pow2heapp (length cons_elems0) (length p) Leaf), (pow2heapp (length rest_elems0) (length rest_elems) t), (pow2heapp (length rest_elems0) (length rest_elems) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems) t)
(pow2heapp (length rest_elems0) (length cons_elems) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems) Leaf), (pow2heapp (length rest_elems0) (length cons_elems0) t), (pow2heapp (length rest_elems0) (length cons_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length cons_elems0) Leaf), (pow2heapp (length rest_elems0) (length rest_elems0) t), (pow2heapp (length rest_elems0) (length rest_elems0) (smash t t)), (pow2heapp (length rest_elems0) (length rest_elems0) Leaf), (pow2heapp (length rest_elems0) (length bl) t), (pow2heapp (length rest_elems0) (length bl) (smash t t))
(pow2heapp (length rest_elems0) (length bl) Leaf), (pow2heapp (length rest_elems0) (length gv0) t), (pow2heapp (length rest_elems0) (length gv0) (smash t t)), (pow2heapp (length rest_elems0) (length gv0) Leaf), (pow2heapp (length rest_elems0) (length p) t), (pow2heapp (length rest_elems0) (length p) (smash t t)), (pow2heapp (length rest_elems0) (length p) Leaf), (pow2heapp (length bl) (length rest_elems) t), (pow2heapp (length bl) (length rest_elems) (smash t t)), (pow2heapp (length bl) (length rest_elems) Leaf)
(pow2heapp (length bl) (length cons_elems) t), (pow2heapp (length bl) (length cons_elems) (smash t t)), (pow2heapp (length bl) (length cons_elems) Leaf), (pow2heapp (length bl) (length cons_elems0) t), (pow2heapp (length bl) (length cons_elems0) (smash t t)), (pow2heapp (length bl) (length cons_elems0) Leaf), (pow2heapp (length bl) (length rest_elems0) t), (pow2heapp (length bl) (length rest_elems0) (smash t t)), (pow2heapp (length bl) (length rest_elems0) Leaf), (pow2heapp (length bl) (length bl) t)
(pow2heapp (length bl) (length bl) (smash t t)), (pow2heapp (length bl) (length bl) Leaf), (pow2heapp (length bl) (length gv0) t), (pow2heapp (length bl) (length gv0) (smash t t)), (pow2heapp (length bl) (length gv0) Leaf), (pow2heapp (length bl) (length p) t), (pow2heapp (length bl) (length p) (smash t t)), (pow2heapp (length bl) (length p) Leaf), (pow2heapp (length gv0) (length rest_elems) t), (pow2heapp (length gv0) (length rest_elems) (smash t t))
(pow2heapp (length gv0) (length rest_elems) Leaf), (pow2heapp (length gv0) (length cons_elems) t), (pow2heapp (length gv0) (length cons_elems) (smash t t)), (pow2heapp (length gv0) (length cons_elems) Leaf), (pow2heapp (length gv0) (length cons_elems0) t), (pow2heapp (length gv0) (length cons_elems0) (smash t t)), (pow2heapp (length gv0) (length cons_elems0) Leaf), (pow2heapp (length gv0) (length rest_elems0) t), (pow2heapp (length gv0) (length rest_elems0) (smash t t)), (pow2heapp (length gv0) (length rest_elems0) Leaf)
(pow2heapp (length gv0) (length bl) t), (pow2heapp (length gv0) (length bl) (smash t t)), (pow2heapp (length gv0) (length bl) Leaf), (pow2heapp (length gv0) (length gv0) t), (pow2heapp (length gv0) (length gv0) (smash t t)), (pow2heapp (length gv0) (length gv0) Leaf), (pow2heapp (length gv0) (length p) t), (pow2heapp (length gv0) (length p) (smash t t)), (pow2heapp (length gv0) (length p) Leaf), (pow2heapp (length p) (length rest_elems) t)
(pow2heapp (length p) (length rest_elems) (smash t t)), (pow2heapp (length p) (length rest_elems) Leaf), (pow2heapp (length p) (length cons_elems) t), (pow2heapp (length p) (length cons_elems) (smash t t)), (pow2heapp (length p) (length cons_elems) Leaf), (pow2heapp (length p) (length cons_elems0) t), (pow2heapp (length p) (length cons_elems0) (smash t t)), (pow2heapp (length p) (length cons_elems0) Leaf), (pow2heapp (length p) (length rest_elems0) t), (pow2heapp (length p) (length rest_elems0) (smash t t))
(pow2heapp (length p) (length rest_elems0) Leaf), (pow2heapp (length p) (length bl) t), (pow2heapp (length p) (length bl) (smash t t)), (pow2heapp (length p) (length bl) Leaf), (pow2heapp (length p) (length gv0) t), (pow2heapp (length p) (length gv0) (smash t t)), (pow2heapp (length p) (length gv0) Leaf), (pow2heapp (length p) (length p) t), (pow2heapp (length p) (length p) (smash t t)), (pow2heapp (length p) (length p) Leaf)
(Permutation p (t :: p)), (Permutation p (merge p p)), (Permutation p (heap_delete_max t)), (Permutation p (join p p t)), (Permutation p (carry p t)), (Permutation p (p ++ p)), (Permutation p []), (Permutation (t :: p) p), (Permutation (t :: p) (merge p p)), (Permutation (t :: p) (heap_delete_max t))
(Permutation (t :: p) (join p p t)), (Permutation (t :: p) (carry p t)), (Permutation (t :: p) (p ++ p)), (Permutation (t :: p) []), (Permutation (merge p p) p), (Permutation (merge p p) (t :: p)), (Permutation (merge p p) (heap_delete_max t)), (Permutation (merge p p) (join p p t)), (Permutation (merge p p) (carry p t)), (Permutation (merge p p) (p ++ p))
(Permutation (merge p p) []), (Permutation (heap_delete_max t) p), (Permutation (heap_delete_max t) (t :: p)), (Permutation (heap_delete_max t) (merge p p)), (Permutation (heap_delete_max t) (join p p t)), (Permutation (heap_delete_max t) (carry p t)), (Permutation (heap_delete_max t) (p ++ p)), (Permutation (heap_delete_max t) []), (Permutation (join p p t) p), (Permutation (join p p t) (t :: p))
(Permutation (join p p t) (merge p p)), (Permutation (join p p t) (heap_delete_max t)), (Permutation (join p p t) (carry p t)), (Permutation (join p p t) (p ++ p)), (Permutation (join p p t) []), (Permutation (carry p t) p), (Permutation (carry p t) (t :: p)), (Permutation (carry p t) (merge p p)), (Permutation (carry p t) (heap_delete_max t)), (Permutation (carry p t) (join p p t))
(Permutation (carry p t) (p ++ p)), (Permutation (carry p t) []), (Permutation (p ++ p) p), (Permutation (p ++ p) (t :: p)), (Permutation (p ++ p) (merge p p)), (Permutation (p ++ p) (heap_delete_max t)), (Permutation (p ++ p) (join p p t)), (Permutation (p ++ p) (carry p t)), (Permutation (p ++ p) []), (Permutation [] p)
(Permutation [] (t :: p)), (Permutation [] (merge p p)), (Permutation [] (heap_delete_max t)), (Permutation [] (join p p t)), (Permutation [] (carry p t)), (Permutation [] (p ++ p)), (Permutation rest_elems (rest_elems ++ rest_elems)), (Permutation rest_elems (rest_elems ++ cons_elems)), (Permutation rest_elems (rest_elems ++ cons_elems0)), (Permutation rest_elems (rest_elems ++ rest_elems0))
(Permutation rest_elems (rest_elems ++ bl)), (Permutation rest_elems (rest_elems ++ gv0)), (Permutation rest_elems (cons_elems ++ rest_elems)), (Permutation rest_elems (cons_elems ++ cons_elems)), (Permutation rest_elems (cons_elems ++ cons_elems0)), (Permutation rest_elems (cons_elems ++ rest_elems0)), (Permutation rest_elems (cons_elems ++ bl)), (Permutation rest_elems (cons_elems ++ gv0)), (Permutation rest_elems (cons_elems0 ++ rest_elems)), (Permutation rest_elems (cons_elems0 ++ cons_elems))
(Permutation rest_elems (cons_elems0 ++ cons_elems0)), (Permutation rest_elems (cons_elems0 ++ rest_elems0)), (Permutation rest_elems (cons_elems0 ++ bl)), (Permutation rest_elems (cons_elems0 ++ gv0)), (Permutation rest_elems (rest_elems0 ++ rest_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems)), (Permutation rest_elems (rest_elems0 ++ cons_elems0)), (Permutation rest_elems (rest_elems0 ++ rest_elems0)), (Permutation rest_elems (rest_elems0 ++ bl)), (Permutation rest_elems (rest_elems0 ++ gv0))
(Permutation rest_elems (bl ++ rest_elems)), (Permutation rest_elems (bl ++ cons_elems)), (Permutation rest_elems (bl ++ cons_elems0)), (Permutation rest_elems (bl ++ rest_elems0)), (Permutation rest_elems (bl ++ bl)), (Permutation rest_elems (bl ++ gv0)), (Permutation rest_elems (gv0 ++ rest_elems)), (Permutation rest_elems (gv0 ++ cons_elems)), (Permutation rest_elems (gv0 ++ cons_elems0)), (Permutation rest_elems (gv0 ++ rest_elems0))
(Permutation rest_elems (gv0 ++ bl)), (Permutation rest_elems (gv0 ++ gv0)), (Permutation rest_elems []), (Permutation cons_elems (rest_elems ++ rest_elems)), (Permutation cons_elems (rest_elems ++ cons_elems)), (Permutation cons_elems (rest_elems ++ cons_elems0)), (Permutation cons_elems (rest_elems ++ rest_elems0)), (Permutation cons_elems (rest_elems ++ bl)), (Permutation cons_elems (rest_elems ++ gv0)), (Permutation cons_elems (cons_elems ++ rest_elems))
(Permutation cons_elems (cons_elems ++ cons_elems)), (Permutation cons_elems (cons_elems ++ cons_elems0)), (Permutation cons_elems (cons_elems ++ rest_elems0)), (Permutation cons_elems (cons_elems ++ bl)), (Permutation cons_elems (cons_elems ++ gv0)), (Permutation cons_elems (cons_elems0 ++ rest_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems)), (Permutation cons_elems (cons_elems0 ++ cons_elems0)), (Permutation cons_elems (cons_elems0 ++ rest_elems0)), (Permutation cons_elems (cons_elems0 ++ bl))
(Permutation cons_elems (cons_elems0 ++ gv0)), (Permutation cons_elems (rest_elems0 ++ rest_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems)), (Permutation cons_elems (rest_elems0 ++ cons_elems0)), (Permutation cons_elems (rest_elems0 ++ rest_elems0)), (Permutation cons_elems (rest_elems0 ++ bl)), (Permutation cons_elems (rest_elems0 ++ gv0)), (Permutation cons_elems (bl ++ rest_elems)), (Permutation cons_elems (bl ++ cons_elems)), (Permutation cons_elems (bl ++ cons_elems0))
(Permutation cons_elems (bl ++ rest_elems0)), (Permutation cons_elems (bl ++ bl)), (Permutation cons_elems (bl ++ gv0)), (Permutation cons_elems (gv0 ++ rest_elems)), (Permutation cons_elems (gv0 ++ cons_elems)), (Permutation cons_elems (gv0 ++ cons_elems0)), (Permutation cons_elems (gv0 ++ rest_elems0)), (Permutation cons_elems (gv0 ++ bl)), (Permutation cons_elems (gv0 ++ gv0)), (Permutation cons_elems [])
(Permutation cons_elems0 (rest_elems ++ rest_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems)), (Permutation cons_elems0 (rest_elems ++ cons_elems0)), (Permutation cons_elems0 (rest_elems ++ rest_elems0)), (Permutation cons_elems0 (rest_elems ++ bl)), (Permutation cons_elems0 (rest_elems ++ gv0)), (Permutation cons_elems0 (cons_elems ++ rest_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems)), (Permutation cons_elems0 (cons_elems ++ cons_elems0)), (Permutation cons_elems0 (cons_elems ++ rest_elems0))
(Permutation cons_elems0 (cons_elems ++ bl)), (Permutation cons_elems0 (cons_elems ++ gv0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems)), (Permutation cons_elems0 (cons_elems0 ++ cons_elems0)), (Permutation cons_elems0 (cons_elems0 ++ rest_elems0)), (Permutation cons_elems0 (cons_elems0 ++ bl)), (Permutation cons_elems0 (cons_elems0 ++ gv0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems)), (Permutation cons_elems0 (rest_elems0 ++ cons_elems))
(Permutation cons_elems0 (rest_elems0 ++ cons_elems0)), (Permutation cons_elems0 (rest_elems0 ++ rest_elems0)), (Permutation cons_elems0 (rest_elems0 ++ bl)), (Permutation cons_elems0 (rest_elems0 ++ gv0)), (Permutation cons_elems0 (bl ++ rest_elems)), (Permutation cons_elems0 (bl ++ cons_elems)), (Permutation cons_elems0 (bl ++ cons_elems0)), (Permutation cons_elems0 (bl ++ rest_elems0)), (Permutation cons_elems0 (bl ++ bl)), (Permutation cons_elems0 (bl ++ gv0))
(Permutation cons_elems0 (gv0 ++ rest_elems)), (Permutation cons_elems0 (gv0 ++ cons_elems)), (Permutation cons_elems0 (gv0 ++ cons_elems0)), (Permutation cons_elems0 (gv0 ++ rest_elems0)), (Permutation cons_elems0 (gv0 ++ bl)), (Permutation cons_elems0 (gv0 ++ gv0)), (Permutation cons_elems0 []), (Permutation rest_elems0 (rest_elems ++ rest_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems)), (Permutation rest_elems0 (rest_elems ++ cons_elems0))
(Permutation rest_elems0 (rest_elems ++ rest_elems0)), (Permutation rest_elems0 (rest_elems ++ bl)), (Permutation rest_elems0 (rest_elems ++ gv0)), (Permutation rest_elems0 (cons_elems ++ rest_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems)), (Permutation rest_elems0 (cons_elems ++ cons_elems0)), (Permutation rest_elems0 (cons_elems ++ rest_elems0)), (Permutation rest_elems0 (cons_elems ++ bl)), (Permutation rest_elems0 (cons_elems ++ gv0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems))
(Permutation rest_elems0 (cons_elems0 ++ cons_elems)), (Permutation rest_elems0 (cons_elems0 ++ cons_elems0)), (Permutation rest_elems0 (cons_elems0 ++ rest_elems0)), (Permutation rest_elems0 (cons_elems0 ++ bl)), (Permutation rest_elems0 (cons_elems0 ++ gv0)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems)), (Permutation rest_elems0 (rest_elems0 ++ cons_elems0)), (Permutation rest_elems0 (rest_elems0 ++ rest_elems0)), (Permutation rest_elems0 (rest_elems0 ++ bl))
(Permutation rest_elems0 (rest_elems0 ++ gv0)), (Permutation rest_elems0 (bl ++ rest_elems)), (Permutation rest_elems0 (bl ++ cons_elems)), (Permutation rest_elems0 (bl ++ cons_elems0)), (Permutation rest_elems0 (bl ++ rest_elems0)), (Permutation rest_elems0 (bl ++ bl)), (Permutation rest_elems0 (bl ++ gv0)), (Permutation rest_elems0 (gv0 ++ rest_elems)), (Permutation rest_elems0 (gv0 ++ cons_elems)), (Permutation rest_elems0 (gv0 ++ cons_elems0))
(Permutation rest_elems0 (gv0 ++ rest_elems0)), (Permutation rest_elems0 (gv0 ++ bl)), (Permutation rest_elems0 (gv0 ++ gv0)), (Permutation rest_elems0 []), (Permutation bl (rest_elems ++ rest_elems)), (Permutation bl (rest_elems ++ cons_elems)), (Permutation bl (rest_elems ++ cons_elems0)), (Permutation bl (rest_elems ++ rest_elems0)), (Permutation bl (rest_elems ++ bl)), (Permutation bl (rest_elems ++ gv0))
(Permutation bl (cons_elems ++ rest_elems)), (Permutation bl (cons_elems ++ cons_elems)), (Permutation bl (cons_elems ++ cons_elems0)), (Permutation bl (cons_elems ++ rest_elems0)), (Permutation bl (cons_elems ++ bl)), (Permutation bl (cons_elems ++ gv0)), (Permutation bl (cons_elems0 ++ rest_elems)), (Permutation bl (cons_elems0 ++ cons_elems)), (Permutation bl (cons_elems0 ++ cons_elems0)), (Permutation bl (cons_elems0 ++ rest_elems0))
(Permutation bl (cons_elems0 ++ bl)), (Permutation bl (cons_elems0 ++ gv0)), (Permutation bl (rest_elems0 ++ rest_elems)), (Permutation bl (rest_elems0 ++ cons_elems)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation bl (rest_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ bl)), (Permutation bl (rest_elems0 ++ gv0)), (Permutation bl (bl ++ rest_elems)), (Permutation bl (bl ++ cons_elems))
(Permutation bl (bl ++ cons_elems0)), (Permutation bl (bl ++ rest_elems0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ gv0)), (Permutation bl (gv0 ++ rest_elems)), (Permutation bl (gv0 ++ cons_elems)), (Permutation bl (gv0 ++ cons_elems0)), (Permutation bl (gv0 ++ rest_elems0)), (Permutation bl (gv0 ++ bl)), (Permutation bl (gv0 ++ gv0))
(Permutation bl []), (Permutation gv0 (rest_elems ++ rest_elems)), (Permutation gv0 (rest_elems ++ cons_elems)), (Permutation gv0 (rest_elems ++ cons_elems0)), (Permutation gv0 (rest_elems ++ rest_elems0)), (Permutation gv0 (rest_elems ++ bl)), (Permutation gv0 (rest_elems ++ gv0)), (Permutation gv0 (cons_elems ++ rest_elems)), (Permutation gv0 (cons_elems ++ cons_elems)), (Permutation gv0 (cons_elems ++ cons_elems0))
(Permutation gv0 (cons_elems ++ rest_elems0)), (Permutation gv0 (cons_elems ++ bl)), (Permutation gv0 (cons_elems ++ gv0)), (Permutation gv0 (cons_elems0 ++ rest_elems)), (Permutation gv0 (cons_elems0 ++ cons_elems)), (Permutation gv0 (cons_elems0 ++ cons_elems0)), (Permutation gv0 (cons_elems0 ++ rest_elems0)), (Permutation gv0 (cons_elems0 ++ bl)), (Permutation gv0 (cons_elems0 ++ gv0)), (Permutation gv0 (rest_elems0 ++ rest_elems))
(Permutation gv0 (rest_elems0 ++ cons_elems)), (Permutation gv0 (rest_elems0 ++ cons_elems0)), (Permutation gv0 (rest_elems0 ++ rest_elems0)), (Permutation gv0 (rest_elems0 ++ bl)), (Permutation gv0 (rest_elems0 ++ gv0)), (Permutation gv0 (bl ++ rest_elems)), (Permutation gv0 (bl ++ cons_elems)), (Permutation gv0 (bl ++ cons_elems0)), (Permutation gv0 (bl ++ rest_elems0)), (Permutation gv0 (bl ++ bl))
(Permutation gv0 (bl ++ gv0)), (Permutation gv0 (gv0 ++ rest_elems)), (Permutation gv0 (gv0 ++ cons_elems)), (Permutation gv0 (gv0 ++ cons_elems0)), (Permutation gv0 (gv0 ++ rest_elems0)), (Permutation gv0 (gv0 ++ bl)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (rest_elems ++ rest_elems) rest_elems), (Permutation (rest_elems ++ rest_elems) cons_elems)
(Permutation (rest_elems ++ rest_elems) cons_elems0), (Permutation (rest_elems ++ rest_elems) rest_elems0), (Permutation (rest_elems ++ rest_elems) bl), (Permutation (rest_elems ++ rest_elems) gv0), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems))
(Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ rest_elems) (cons_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ bl))
(Permutation (rest_elems ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (bl ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems) (bl ++ gv0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ bl)), (Permutation (rest_elems ++ rest_elems) (gv0 ++ gv0)), (Permutation (rest_elems ++ rest_elems) [])
(Permutation (rest_elems ++ cons_elems) rest_elems), (Permutation (rest_elems ++ cons_elems) cons_elems), (Permutation (rest_elems ++ cons_elems) cons_elems0), (Permutation (rest_elems ++ cons_elems) rest_elems0), (Permutation (rest_elems ++ cons_elems) bl), (Permutation (rest_elems ++ cons_elems) gv0), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems ++ bl))
(Permutation (rest_elems ++ cons_elems) (rest_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems))
(Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems) (bl ++ gv0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems) (gv0 ++ bl))
(Permutation (rest_elems ++ cons_elems) (gv0 ++ gv0)), (Permutation (rest_elems ++ cons_elems) []), (Permutation (rest_elems ++ cons_elems0) rest_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems), (Permutation (rest_elems ++ cons_elems0) cons_elems0), (Permutation (rest_elems ++ cons_elems0) rest_elems0), (Permutation (rest_elems ++ cons_elems0) bl), (Permutation (rest_elems ++ cons_elems0) gv0), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ cons_elems))
(Permutation (rest_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems))
(Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ bl))
(Permutation (rest_elems ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems ++ cons_elems0) (bl ++ gv0)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ cons_elems0))
(Permutation (rest_elems ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ bl)), (Permutation (rest_elems ++ cons_elems0) (gv0 ++ gv0)), (Permutation (rest_elems ++ cons_elems0) []), (Permutation (rest_elems ++ rest_elems0) rest_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems), (Permutation (rest_elems ++ rest_elems0) cons_elems0), (Permutation (rest_elems ++ rest_elems0) rest_elems0), (Permutation (rest_elems ++ rest_elems0) bl), (Permutation (rest_elems ++ rest_elems0) gv0)
(Permutation (rest_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems ++ bl))
(Permutation (rest_elems ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0))
(Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems ++ rest_elems0) (bl ++ gv0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ rest_elems))
(Permutation (rest_elems ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ bl)), (Permutation (rest_elems ++ rest_elems0) (gv0 ++ gv0)), (Permutation (rest_elems ++ rest_elems0) []), (Permutation (rest_elems ++ bl) rest_elems), (Permutation (rest_elems ++ bl) cons_elems), (Permutation (rest_elems ++ bl) cons_elems0), (Permutation (rest_elems ++ bl) rest_elems0)
(Permutation (rest_elems ++ bl) bl), (Permutation (rest_elems ++ bl) gv0), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (rest_elems ++ gv0)), (Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems ++ cons_elems0))
(Permutation (rest_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems ++ gv0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems))
(Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ bl) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems ++ bl) (bl ++ bl))
(Permutation (rest_elems ++ bl) (bl ++ gv0)), (Permutation (rest_elems ++ bl) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ bl) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ bl) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ bl) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ bl) (gv0 ++ bl)), (Permutation (rest_elems ++ bl) (gv0 ++ gv0)), (Permutation (rest_elems ++ bl) []), (Permutation (rest_elems ++ gv0) rest_elems), (Permutation (rest_elems ++ gv0) cons_elems)
(Permutation (rest_elems ++ gv0) cons_elems0), (Permutation (rest_elems ++ gv0) rest_elems0), (Permutation (rest_elems ++ gv0) bl), (Permutation (rest_elems ++ gv0) gv0), (Permutation (rest_elems ++ gv0) (rest_elems ++ rest_elems)), (Permutation (rest_elems ++ gv0) (rest_elems ++ cons_elems)), (Permutation (rest_elems ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems ++ bl)), (Permutation (rest_elems ++ gv0) (cons_elems ++ rest_elems))
(Permutation (rest_elems ++ gv0) (cons_elems ++ cons_elems)), (Permutation (rest_elems ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems ++ bl)), (Permutation (rest_elems ++ gv0) (cons_elems ++ gv0)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (cons_elems0 ++ bl))
(Permutation (rest_elems ++ gv0) (cons_elems0 ++ gv0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ bl)), (Permutation (rest_elems ++ gv0) (rest_elems0 ++ gv0)), (Permutation (rest_elems ++ gv0) (bl ++ rest_elems)), (Permutation (rest_elems ++ gv0) (bl ++ cons_elems)), (Permutation (rest_elems ++ gv0) (bl ++ cons_elems0))
(Permutation (rest_elems ++ gv0) (bl ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (bl ++ bl)), (Permutation (rest_elems ++ gv0) (bl ++ gv0)), (Permutation (rest_elems ++ gv0) (gv0 ++ rest_elems)), (Permutation (rest_elems ++ gv0) (gv0 ++ cons_elems)), (Permutation (rest_elems ++ gv0) (gv0 ++ cons_elems0)), (Permutation (rest_elems ++ gv0) (gv0 ++ rest_elems0)), (Permutation (rest_elems ++ gv0) (gv0 ++ bl)), (Permutation (rest_elems ++ gv0) (gv0 ++ gv0)), (Permutation (rest_elems ++ gv0) [])
(Permutation (cons_elems ++ rest_elems) rest_elems), (Permutation (cons_elems ++ rest_elems) cons_elems), (Permutation (cons_elems ++ rest_elems) cons_elems0), (Permutation (cons_elems ++ rest_elems) rest_elems0), (Permutation (cons_elems ++ rest_elems) bl), (Permutation (cons_elems ++ rest_elems) gv0), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ cons_elems0))
(Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems))
(Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems ++ rest_elems) (bl ++ gv0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems) (gv0 ++ bl))
(Permutation (cons_elems ++ rest_elems) (gv0 ++ gv0)), (Permutation (cons_elems ++ rest_elems) []), (Permutation (cons_elems ++ cons_elems) rest_elems), (Permutation (cons_elems ++ cons_elems) cons_elems), (Permutation (cons_elems ++ cons_elems) cons_elems0), (Permutation (cons_elems ++ cons_elems) rest_elems0), (Permutation (cons_elems ++ cons_elems) bl), (Permutation (cons_elems ++ cons_elems) gv0), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems))
(Permutation (cons_elems ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (rest_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems))
(Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems) (bl ++ gv0)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ bl)), (Permutation (cons_elems ++ cons_elems) (gv0 ++ gv0)), (Permutation (cons_elems ++ cons_elems) []), (Permutation (cons_elems ++ cons_elems0) rest_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems), (Permutation (cons_elems ++ cons_elems0) cons_elems0), (Permutation (cons_elems ++ cons_elems0) rest_elems0), (Permutation (cons_elems ++ cons_elems0) bl), (Permutation (cons_elems ++ cons_elems0) gv0)
(Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems ++ bl))
(Permutation (cons_elems ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ cons_elems0))
(Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (bl ++ bl)), (Permutation (cons_elems ++ cons_elems0) (bl ++ gv0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ rest_elems))
(Permutation (cons_elems ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ bl)), (Permutation (cons_elems ++ cons_elems0) (gv0 ++ gv0)), (Permutation (cons_elems ++ cons_elems0) []), (Permutation (cons_elems ++ rest_elems0) rest_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems), (Permutation (cons_elems ++ rest_elems0) cons_elems0), (Permutation (cons_elems ++ rest_elems0) rest_elems0)
(Permutation (cons_elems ++ rest_elems0) bl), (Permutation (cons_elems ++ rest_elems0) gv0), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems))
(Permutation (cons_elems ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems))
(Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (bl ++ bl))
(Permutation (cons_elems ++ rest_elems0) (bl ++ gv0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ bl)), (Permutation (cons_elems ++ rest_elems0) (gv0 ++ gv0)), (Permutation (cons_elems ++ rest_elems0) []), (Permutation (cons_elems ++ bl) rest_elems), (Permutation (cons_elems ++ bl) cons_elems)
(Permutation (cons_elems ++ bl) cons_elems0), (Permutation (cons_elems ++ bl) rest_elems0), (Permutation (cons_elems ++ bl) bl), (Permutation (cons_elems ++ bl) gv0), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems ++ gv0))
(Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems ++ gv0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (cons_elems0 ++ bl))
(Permutation (cons_elems ++ bl) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ bl) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ bl) (bl ++ rest_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems ++ bl) (bl ++ cons_elems0))
(Permutation (cons_elems ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems ++ bl) (bl ++ bl)), (Permutation (cons_elems ++ bl) (bl ++ gv0)), (Permutation (cons_elems ++ bl) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ bl) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ bl) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ bl) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ bl) (gv0 ++ bl)), (Permutation (cons_elems ++ bl) (gv0 ++ gv0)), (Permutation (cons_elems ++ bl) [])
(Permutation (cons_elems ++ gv0) rest_elems), (Permutation (cons_elems ++ gv0) cons_elems), (Permutation (cons_elems ++ gv0) cons_elems0), (Permutation (cons_elems ++ gv0) rest_elems0), (Permutation (cons_elems ++ gv0) bl), (Permutation (cons_elems ++ gv0) gv0), (Permutation (cons_elems ++ gv0) (rest_elems ++ rest_elems)), (Permutation (cons_elems ++ gv0) (rest_elems ++ cons_elems)), (Permutation (cons_elems ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems ++ rest_elems0))
(Permutation (cons_elems ++ gv0) (rest_elems ++ bl)), (Permutation (cons_elems ++ gv0) (rest_elems ++ gv0)), (Permutation (cons_elems ++ gv0) (cons_elems ++ rest_elems)), (Permutation (cons_elems ++ gv0) (cons_elems ++ cons_elems)), (Permutation (cons_elems ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (cons_elems ++ bl)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ cons_elems0))
(Permutation (cons_elems ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ bl)), (Permutation (cons_elems ++ gv0) (cons_elems0 ++ gv0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ bl)), (Permutation (cons_elems ++ gv0) (rest_elems0 ++ gv0)), (Permutation (cons_elems ++ gv0) (bl ++ rest_elems))
(Permutation (cons_elems ++ gv0) (bl ++ cons_elems)), (Permutation (cons_elems ++ gv0) (bl ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (bl ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (bl ++ bl)), (Permutation (cons_elems ++ gv0) (bl ++ gv0)), (Permutation (cons_elems ++ gv0) (gv0 ++ rest_elems)), (Permutation (cons_elems ++ gv0) (gv0 ++ cons_elems)), (Permutation (cons_elems ++ gv0) (gv0 ++ cons_elems0)), (Permutation (cons_elems ++ gv0) (gv0 ++ rest_elems0)), (Permutation (cons_elems ++ gv0) (gv0 ++ bl))
(Permutation (cons_elems ++ gv0) (gv0 ++ gv0)), (Permutation (cons_elems ++ gv0) []), (Permutation (cons_elems0 ++ rest_elems) rest_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems), (Permutation (cons_elems0 ++ rest_elems) cons_elems0), (Permutation (cons_elems0 ++ rest_elems) rest_elems0), (Permutation (cons_elems0 ++ rest_elems) bl), (Permutation (cons_elems0 ++ rest_elems) gv0), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems ++ gv0))
(Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (bl ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ cons_elems0))
(Permutation (cons_elems0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems) []), (Permutation (cons_elems0 ++ cons_elems) rest_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems), (Permutation (cons_elems0 ++ cons_elems) cons_elems0), (Permutation (cons_elems0 ++ cons_elems) rest_elems0), (Permutation (cons_elems0 ++ cons_elems) bl), (Permutation (cons_elems0 ++ cons_elems) gv0)
(Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ rest_elems0))
(Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0))
(Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (bl ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems) []), (Permutation (cons_elems0 ++ cons_elems0) rest_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems), (Permutation (cons_elems0 ++ cons_elems0) cons_elems0), (Permutation (cons_elems0 ++ cons_elems0) rest_elems0)
(Permutation (cons_elems0 ++ cons_elems0) bl), (Permutation (cons_elems0 ++ cons_elems0) gv0), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems))
(Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems))
(Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (bl ++ bl))
(Permutation (cons_elems0 ++ cons_elems0) (bl ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ bl)), (Permutation (cons_elems0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ cons_elems0) []), (Permutation (cons_elems0 ++ rest_elems0) rest_elems), (Permutation (cons_elems0 ++ rest_elems0) cons_elems)
(Permutation (cons_elems0 ++ rest_elems0) cons_elems0), (Permutation (cons_elems0 ++ rest_elems0) rest_elems0), (Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (cons_elems0 ++ rest_elems0) gv0), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems ++ gv0))
(Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ bl))
(Permutation (cons_elems0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ cons_elems0))
(Permutation (cons_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (bl ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ bl)), (Permutation (cons_elems0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ rest_elems0) [])
(Permutation (cons_elems0 ++ bl) rest_elems), (Permutation (cons_elems0 ++ bl) cons_elems), (Permutation (cons_elems0 ++ bl) cons_elems0), (Permutation (cons_elems0 ++ bl) rest_elems0), (Permutation (cons_elems0 ++ bl) bl), (Permutation (cons_elems0 ++ bl) gv0), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ rest_elems0))
(Permutation (cons_elems0 ++ bl) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ bl) (cons_elems ++ gv0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems))
(Permutation (cons_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (cons_elems0 ++ gv0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ bl)), (Permutation (cons_elems0 ++ bl) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems))
(Permutation (cons_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (bl ++ bl)), (Permutation (cons_elems0 ++ bl) (bl ++ gv0)), (Permutation (cons_elems0 ++ bl) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ bl) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ bl) (gv0 ++ cons_elems0)), (Permutation (cons_elems0 ++ bl) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ bl) (gv0 ++ bl))
(Permutation (cons_elems0 ++ bl) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ bl) []), (Permutation (cons_elems0 ++ gv0) rest_elems), (Permutation (cons_elems0 ++ gv0) cons_elems), (Permutation (cons_elems0 ++ gv0) cons_elems0), (Permutation (cons_elems0 ++ gv0) rest_elems0), (Permutation (cons_elems0 ++ gv0) bl), (Permutation (cons_elems0 ++ gv0) gv0), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ cons_elems))
(Permutation (cons_elems0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ bl)), (Permutation (cons_elems0 ++ gv0) (rest_elems ++ gv0)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ bl)), (Permutation (cons_elems0 ++ gv0) (cons_elems ++ gv0))
(Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (cons_elems0 ++ bl)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ bl))
(Permutation (cons_elems0 ++ gv0) (rest_elems0 ++ gv0)), (Permutation (cons_elems0 ++ gv0) (bl ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (bl ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (bl ++ cons_elems0)), (Permutation (cons_elems0 ++ gv0) (bl ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (bl ++ bl)), (Permutation (cons_elems0 ++ gv0) (bl ++ gv0)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ rest_elems)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ cons_elems0))
(Permutation (cons_elems0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ bl)), (Permutation (cons_elems0 ++ gv0) (gv0 ++ gv0)), (Permutation (cons_elems0 ++ gv0) []), (Permutation (rest_elems0 ++ rest_elems) rest_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems), (Permutation (rest_elems0 ++ rest_elems) cons_elems0), (Permutation (rest_elems0 ++ rest_elems) rest_elems0), (Permutation (rest_elems0 ++ rest_elems) bl), (Permutation (rest_elems0 ++ rest_elems) gv0)
(Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ cons_elems0))
(Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (bl ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems) []), (Permutation (rest_elems0 ++ cons_elems) rest_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems), (Permutation (rest_elems0 ++ cons_elems) cons_elems0), (Permutation (rest_elems0 ++ cons_elems) rest_elems0)
(Permutation (rest_elems0 ++ cons_elems) bl), (Permutation (rest_elems0 ++ cons_elems) gv0), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems))
(Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (cons_elems0 ++ gv0))
(Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (bl ++ bl))
(Permutation (rest_elems0 ++ cons_elems) (bl ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems) []), (Permutation (rest_elems0 ++ cons_elems0) rest_elems), (Permutation (rest_elems0 ++ cons_elems0) cons_elems)
(Permutation (rest_elems0 ++ cons_elems0) cons_elems0), (Permutation (rest_elems0 ++ cons_elems0) rest_elems0), (Permutation (rest_elems0 ++ cons_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) gv0), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems ++ gv0))
(Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ cons_elems0))
(Permutation (rest_elems0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (bl ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ bl)), (Permutation (rest_elems0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ cons_elems0) [])
(Permutation (rest_elems0 ++ rest_elems0) rest_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems), (Permutation (rest_elems0 ++ rest_elems0) cons_elems0), (Permutation (rest_elems0 ++ rest_elems0) rest_elems0), (Permutation (rest_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ rest_elems0) gv0), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ rest_elems0))
(Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems))
(Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems))
(Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ bl)), (Permutation (rest_elems0 ++ rest_elems0) (bl ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ bl))
(Permutation (rest_elems0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ rest_elems0) []), (Permutation (rest_elems0 ++ bl) rest_elems), (Permutation (rest_elems0 ++ bl) cons_elems), (Permutation (rest_elems0 ++ bl) cons_elems0), (Permutation (rest_elems0 ++ bl) rest_elems0), (Permutation (rest_elems0 ++ bl) bl), (Permutation (rest_elems0 ++ bl) gv0), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems))
(Permutation (rest_elems0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems ++ gv0))
(Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ bl) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (rest_elems0 ++ rest_elems0))
(Permutation (rest_elems0 ++ bl) (rest_elems0 ++ gv0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (bl ++ bl)), (Permutation (rest_elems0 ++ bl) (bl ++ gv0)), (Permutation (rest_elems0 ++ bl) (gv0 ++ rest_elems)), (Permutation (rest_elems0 ++ bl) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ bl) (gv0 ++ cons_elems0))
(Permutation (rest_elems0 ++ bl) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ bl) (gv0 ++ bl)), (Permutation (rest_elems0 ++ bl) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ bl) []), (Permutation (rest_elems0 ++ gv0) rest_elems), (Permutation (rest_elems0 ++ gv0) cons_elems), (Permutation (rest_elems0 ++ gv0) cons_elems0), (Permutation (rest_elems0 ++ gv0) rest_elems0), (Permutation (rest_elems0 ++ gv0) bl), (Permutation (rest_elems0 ++ gv0) gv0)
(Permutation (rest_elems0 ++ gv0) (rest_elems ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ bl)), (Permutation (rest_elems0 ++ gv0) (rest_elems ++ gv0)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ rest_elems0))
(Permutation (rest_elems0 ++ gv0) (cons_elems ++ bl)), (Permutation (rest_elems0 ++ gv0) (cons_elems ++ gv0)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ bl)), (Permutation (rest_elems0 ++ gv0) (cons_elems0 ++ gv0)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ cons_elems))
(Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (rest_elems0 ++ bl)), (Permutation (rest_elems0 ++ gv0) (bl ++ rest_elems)), (Permutation (rest_elems0 ++ gv0) (bl ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (bl ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (bl ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (bl ++ bl)), (Permutation (rest_elems0 ++ gv0) (bl ++ gv0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ rest_elems))
(Permutation (rest_elems0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ cons_elems0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ bl)), (Permutation (rest_elems0 ++ gv0) (gv0 ++ gv0)), (Permutation (rest_elems0 ++ gv0) []), (Permutation (bl ++ rest_elems) rest_elems), (Permutation (bl ++ rest_elems) cons_elems), (Permutation (bl ++ rest_elems) cons_elems0), (Permutation (bl ++ rest_elems) rest_elems0)
(Permutation (bl ++ rest_elems) bl), (Permutation (bl ++ rest_elems) gv0), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems ++ gv0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems))
(Permutation (bl ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems ++ gv0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (cons_elems0 ++ gv0))
(Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems) (bl ++ rest_elems0)), (Permutation (bl ++ rest_elems) (bl ++ bl))
(Permutation (bl ++ rest_elems) (bl ++ gv0)), (Permutation (bl ++ rest_elems) (gv0 ++ rest_elems)), (Permutation (bl ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (bl ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (bl ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (bl ++ rest_elems) (gv0 ++ bl)), (Permutation (bl ++ rest_elems) (gv0 ++ gv0)), (Permutation (bl ++ rest_elems) []), (Permutation (bl ++ cons_elems) rest_elems), (Permutation (bl ++ cons_elems) cons_elems)
(Permutation (bl ++ cons_elems) cons_elems0), (Permutation (bl ++ cons_elems) rest_elems0), (Permutation (bl ++ cons_elems) bl), (Permutation (bl ++ cons_elems) gv0), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems ++ gv0))
(Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems ++ gv0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ rest_elems0))
(Permutation (bl ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems) (rest_elems0 ++ gv0)), (Permutation (bl ++ cons_elems) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems) (bl ++ cons_elems0))
(Permutation (bl ++ cons_elems) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems) (bl ++ bl)), (Permutation (bl ++ cons_elems) (bl ++ gv0)), (Permutation (bl ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (bl ++ cons_elems) (gv0 ++ cons_elems)), (Permutation (bl ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (bl ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (bl ++ cons_elems) (gv0 ++ bl)), (Permutation (bl ++ cons_elems) (gv0 ++ gv0)), (Permutation (bl ++ cons_elems) [])
(Permutation (bl ++ cons_elems0) rest_elems), (Permutation (bl ++ cons_elems0) cons_elems), (Permutation (bl ++ cons_elems0) cons_elems0), (Permutation (bl ++ cons_elems0) rest_elems0), (Permutation (bl ++ cons_elems0) bl), (Permutation (bl ++ cons_elems0) gv0), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems ++ rest_elems0))
(Permutation (bl ++ cons_elems0) (rest_elems ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems ++ gv0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems))
(Permutation (bl ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ cons_elems0) (rest_elems0 ++ gv0))
(Permutation (bl ++ cons_elems0) (bl ++ rest_elems)), (Permutation (bl ++ cons_elems0) (bl ++ cons_elems)), (Permutation (bl ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (bl ++ bl)), (Permutation (bl ++ cons_elems0) (bl ++ gv0)), (Permutation (bl ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (bl ++ cons_elems0) (gv0 ++ cons_elems)), (Permutation (bl ++ cons_elems0) (gv0 ++ cons_elems0)), (Permutation (bl ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (bl ++ cons_elems0) (gv0 ++ bl))
(Permutation (bl ++ cons_elems0) (gv0 ++ gv0)), (Permutation (bl ++ cons_elems0) []), (Permutation (bl ++ rest_elems0) rest_elems), (Permutation (bl ++ rest_elems0) cons_elems), (Permutation (bl ++ rest_elems0) cons_elems0), (Permutation (bl ++ rest_elems0) rest_elems0), (Permutation (bl ++ rest_elems0) bl), (Permutation (bl ++ rest_elems0) gv0), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems))
(Permutation (bl ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems ++ gv0))
(Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (bl ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (bl ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (bl ++ rest_elems0) (bl ++ rest_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems)), (Permutation (bl ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (bl ++ rest_elems0) (bl ++ bl)), (Permutation (bl ++ rest_elems0) (bl ++ gv0)), (Permutation (bl ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (bl ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (bl ++ rest_elems0) (gv0 ++ cons_elems0))
(Permutation (bl ++ rest_elems0) (gv0 ++ rest_elems0)), (Permutation (bl ++ rest_elems0) (gv0 ++ bl)), (Permutation (bl ++ rest_elems0) (gv0 ++ gv0)), (Permutation (bl ++ rest_elems0) []), (Permutation (bl ++ bl) rest_elems), (Permutation (bl ++ bl) cons_elems), (Permutation (bl ++ bl) cons_elems0), (Permutation (bl ++ bl) rest_elems0), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) gv0)
(Permutation (bl ++ bl) (rest_elems ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems)), (Permutation (bl ++ bl) (rest_elems ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems ++ bl)), (Permutation (bl ++ bl) (rest_elems ++ gv0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems ++ rest_elems0))
(Permutation (bl ++ bl) (cons_elems ++ bl)), (Permutation (bl ++ bl) (cons_elems ++ gv0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (cons_elems0 ++ bl)), (Permutation (bl ++ bl) (cons_elems0 ++ gv0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ bl) (rest_elems0 ++ cons_elems))
(Permutation (bl ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (bl ++ bl) (rest_elems0 ++ bl)), (Permutation (bl ++ bl) (rest_elems0 ++ gv0)), (Permutation (bl ++ bl) (bl ++ rest_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems)), (Permutation (bl ++ bl) (bl ++ cons_elems0)), (Permutation (bl ++ bl) (bl ++ rest_elems0)), (Permutation (bl ++ bl) (bl ++ gv0)), (Permutation (bl ++ bl) (gv0 ++ rest_elems))
(Permutation (bl ++ bl) (gv0 ++ cons_elems)), (Permutation (bl ++ bl) (gv0 ++ cons_elems0)), (Permutation (bl ++ bl) (gv0 ++ rest_elems0)), (Permutation (bl ++ bl) (gv0 ++ bl)), (Permutation (bl ++ bl) (gv0 ++ gv0)), (Permutation (bl ++ bl) []), (Permutation (bl ++ gv0) rest_elems), (Permutation (bl ++ gv0) cons_elems), (Permutation (bl ++ gv0) cons_elems0), (Permutation (bl ++ gv0) rest_elems0)
(Permutation (bl ++ gv0) bl), (Permutation (bl ++ gv0) gv0), (Permutation (bl ++ gv0) (rest_elems ++ rest_elems)), (Permutation (bl ++ gv0) (rest_elems ++ cons_elems)), (Permutation (bl ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (bl ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (bl ++ gv0) (rest_elems ++ bl)), (Permutation (bl ++ gv0) (rest_elems ++ gv0)), (Permutation (bl ++ gv0) (cons_elems ++ rest_elems)), (Permutation (bl ++ gv0) (cons_elems ++ cons_elems))
(Permutation (bl ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (bl ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (bl ++ gv0) (cons_elems ++ bl)), (Permutation (bl ++ gv0) (cons_elems ++ gv0)), (Permutation (bl ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (bl ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (bl ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (bl ++ gv0) (cons_elems0 ++ rest_elems0)), (Permutation (bl ++ gv0) (cons_elems0 ++ bl)), (Permutation (bl ++ gv0) (cons_elems0 ++ gv0))
(Permutation (bl ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (bl ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (bl ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (bl ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (bl ++ gv0) (rest_elems0 ++ bl)), (Permutation (bl ++ gv0) (rest_elems0 ++ gv0)), (Permutation (bl ++ gv0) (bl ++ rest_elems)), (Permutation (bl ++ gv0) (bl ++ cons_elems)), (Permutation (bl ++ gv0) (bl ++ cons_elems0)), (Permutation (bl ++ gv0) (bl ++ rest_elems0))
(Permutation (bl ++ gv0) (bl ++ bl)), (Permutation (bl ++ gv0) (gv0 ++ rest_elems)), (Permutation (bl ++ gv0) (gv0 ++ cons_elems)), (Permutation (bl ++ gv0) (gv0 ++ cons_elems0)), (Permutation (bl ++ gv0) (gv0 ++ rest_elems0)), (Permutation (bl ++ gv0) (gv0 ++ bl)), (Permutation (bl ++ gv0) (gv0 ++ gv0)), (Permutation (bl ++ gv0) []), (Permutation (gv0 ++ rest_elems) rest_elems), (Permutation (gv0 ++ rest_elems) cons_elems)
(Permutation (gv0 ++ rest_elems) cons_elems0), (Permutation (gv0 ++ rest_elems) rest_elems0), (Permutation (gv0 ++ rest_elems) bl), (Permutation (gv0 ++ rest_elems) gv0), (Permutation (gv0 ++ rest_elems) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ bl)), (Permutation (gv0 ++ rest_elems) (rest_elems ++ gv0))
(Permutation (gv0 ++ rest_elems) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ bl)), (Permutation (gv0 ++ rest_elems) (cons_elems ++ gv0)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ rest_elems0))
(Permutation (gv0 ++ rest_elems) (cons_elems0 ++ bl)), (Permutation (gv0 ++ rest_elems) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ bl)), (Permutation (gv0 ++ rest_elems) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems) (bl ++ rest_elems)), (Permutation (gv0 ++ rest_elems) (bl ++ cons_elems))
(Permutation (gv0 ++ rest_elems) (bl ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (bl ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (bl ++ bl)), (Permutation (gv0 ++ rest_elems) (bl ++ gv0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems) (gv0 ++ bl)), (Permutation (gv0 ++ rest_elems) (gv0 ++ gv0)), (Permutation (gv0 ++ rest_elems) [])
(Permutation (gv0 ++ cons_elems) rest_elems), (Permutation (gv0 ++ cons_elems) cons_elems), (Permutation (gv0 ++ cons_elems) cons_elems0), (Permutation (gv0 ++ cons_elems) rest_elems0), (Permutation (gv0 ++ cons_elems) bl), (Permutation (gv0 ++ cons_elems) gv0), (Permutation (gv0 ++ cons_elems) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ rest_elems0))
(Permutation (gv0 ++ cons_elems) (rest_elems ++ bl)), (Permutation (gv0 ++ cons_elems) (rest_elems ++ gv0)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ bl)), (Permutation (gv0 ++ cons_elems) (cons_elems ++ gv0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ cons_elems))
(Permutation (gv0 ++ cons_elems) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ bl)), (Permutation (gv0 ++ cons_elems) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ bl)), (Permutation (gv0 ++ cons_elems) (rest_elems0 ++ gv0))
(Permutation (gv0 ++ cons_elems) (bl ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (bl ++ cons_elems)), (Permutation (gv0 ++ cons_elems) (bl ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (bl ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (bl ++ bl)), (Permutation (gv0 ++ cons_elems) (bl ++ gv0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems) (gv0 ++ bl))
(Permutation (gv0 ++ cons_elems) (gv0 ++ gv0)), (Permutation (gv0 ++ cons_elems) []), (Permutation (gv0 ++ cons_elems0) rest_elems), (Permutation (gv0 ++ cons_elems0) cons_elems), (Permutation (gv0 ++ cons_elems0) cons_elems0), (Permutation (gv0 ++ cons_elems0) rest_elems0), (Permutation (gv0 ++ cons_elems0) bl), (Permutation (gv0 ++ cons_elems0) gv0), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ cons_elems))
(Permutation (gv0 ++ cons_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ bl)), (Permutation (gv0 ++ cons_elems0) (rest_elems ++ gv0)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ bl)), (Permutation (gv0 ++ cons_elems0) (cons_elems ++ gv0))
(Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ bl)), (Permutation (gv0 ++ cons_elems0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ rest_elems0))
(Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ bl)), (Permutation (gv0 ++ cons_elems0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) (bl ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (bl ++ cons_elems)), (Permutation (gv0 ++ cons_elems0) (bl ++ cons_elems0)), (Permutation (gv0 ++ cons_elems0) (bl ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (bl ++ bl)), (Permutation (gv0 ++ cons_elems0) (bl ++ gv0)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ cons_elems))
(Permutation (gv0 ++ cons_elems0) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ bl)), (Permutation (gv0 ++ cons_elems0) (gv0 ++ gv0)), (Permutation (gv0 ++ cons_elems0) []), (Permutation (gv0 ++ rest_elems0) rest_elems), (Permutation (gv0 ++ rest_elems0) cons_elems), (Permutation (gv0 ++ rest_elems0) cons_elems0), (Permutation (gv0 ++ rest_elems0) rest_elems0), (Permutation (gv0 ++ rest_elems0) bl), (Permutation (gv0 ++ rest_elems0) gv0)
(Permutation (gv0 ++ rest_elems0) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ bl)), (Permutation (gv0 ++ rest_elems0) (rest_elems ++ gv0)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ rest_elems0))
(Permutation (gv0 ++ rest_elems0) (cons_elems ++ bl)), (Permutation (gv0 ++ rest_elems0) (cons_elems ++ gv0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ bl)), (Permutation (gv0 ++ rest_elems0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ cons_elems))
(Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ bl)), (Permutation (gv0 ++ rest_elems0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) (bl ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (bl ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (bl ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (bl ++ rest_elems0)), (Permutation (gv0 ++ rest_elems0) (bl ++ bl)), (Permutation (gv0 ++ rest_elems0) (bl ++ gv0))
(Permutation (gv0 ++ rest_elems0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ cons_elems)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ bl)), (Permutation (gv0 ++ rest_elems0) (gv0 ++ gv0)), (Permutation (gv0 ++ rest_elems0) []), (Permutation (gv0 ++ bl) rest_elems), (Permutation (gv0 ++ bl) cons_elems), (Permutation (gv0 ++ bl) cons_elems0), (Permutation (gv0 ++ bl) rest_elems0)
(Permutation (gv0 ++ bl) bl), (Permutation (gv0 ++ bl) gv0), (Permutation (gv0 ++ bl) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ bl) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ bl) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ bl) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ bl) (rest_elems ++ bl)), (Permutation (gv0 ++ bl) (rest_elems ++ gv0)), (Permutation (gv0 ++ bl) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ bl) (cons_elems ++ cons_elems))
(Permutation (gv0 ++ bl) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ bl) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ bl) (cons_elems ++ bl)), (Permutation (gv0 ++ bl) (cons_elems ++ gv0)), (Permutation (gv0 ++ bl) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ bl) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ bl) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ bl) (cons_elems0 ++ rest_elems0)), (Permutation (gv0 ++ bl) (cons_elems0 ++ bl)), (Permutation (gv0 ++ bl) (cons_elems0 ++ gv0))
(Permutation (gv0 ++ bl) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ bl) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ bl) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ bl) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ bl) (rest_elems0 ++ bl)), (Permutation (gv0 ++ bl) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ bl) (bl ++ rest_elems)), (Permutation (gv0 ++ bl) (bl ++ cons_elems)), (Permutation (gv0 ++ bl) (bl ++ cons_elems0)), (Permutation (gv0 ++ bl) (bl ++ rest_elems0))
(Permutation (gv0 ++ bl) (bl ++ bl)), (Permutation (gv0 ++ bl) (bl ++ gv0)), (Permutation (gv0 ++ bl) (gv0 ++ rest_elems)), (Permutation (gv0 ++ bl) (gv0 ++ cons_elems)), (Permutation (gv0 ++ bl) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ bl) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ bl) (gv0 ++ gv0)), (Permutation (gv0 ++ bl) []), (Permutation (gv0 ++ gv0) rest_elems), (Permutation (gv0 ++ gv0) cons_elems)
(Permutation (gv0 ++ gv0) cons_elems0), (Permutation (gv0 ++ gv0) rest_elems0), (Permutation (gv0 ++ gv0) bl), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (rest_elems ++ rest_elems)), (Permutation (gv0 ++ gv0) (rest_elems ++ cons_elems)), (Permutation (gv0 ++ gv0) (rest_elems ++ cons_elems0)), (Permutation (gv0 ++ gv0) (rest_elems ++ rest_elems0)), (Permutation (gv0 ++ gv0) (rest_elems ++ bl)), (Permutation (gv0 ++ gv0) (rest_elems ++ gv0))
(Permutation (gv0 ++ gv0) (cons_elems ++ rest_elems)), (Permutation (gv0 ++ gv0) (cons_elems ++ cons_elems)), (Permutation (gv0 ++ gv0) (cons_elems ++ cons_elems0)), (Permutation (gv0 ++ gv0) (cons_elems ++ rest_elems0)), (Permutation (gv0 ++ gv0) (cons_elems ++ bl)), (Permutation (gv0 ++ gv0) (cons_elems ++ gv0)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ rest_elems)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ rest_elems0))
(Permutation (gv0 ++ gv0) (cons_elems0 ++ bl)), (Permutation (gv0 ++ gv0) (cons_elems0 ++ gv0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ rest_elems)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ rest_elems0)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ bl)), (Permutation (gv0 ++ gv0) (rest_elems0 ++ gv0)), (Permutation (gv0 ++ gv0) (bl ++ rest_elems)), (Permutation (gv0 ++ gv0) (bl ++ cons_elems))
(Permutation (gv0 ++ gv0) (bl ++ cons_elems0)), (Permutation (gv0 ++ gv0) (bl ++ rest_elems0)), (Permutation (gv0 ++ gv0) (bl ++ bl)), (Permutation (gv0 ++ gv0) (bl ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ rest_elems)), (Permutation (gv0 ++ gv0) (gv0 ++ cons_elems)), (Permutation (gv0 ++ gv0) (gv0 ++ cons_elems0)), (Permutation (gv0 ++ gv0) (gv0 ++ rest_elems0)), (Permutation (gv0 ++ gv0) (gv0 ++ bl)), (Permutation (gv0 ++ gv0) [])
(Permutation [] rest_elems), (Permutation [] cons_elems), (Permutation [] cons_elems0), (Permutation [] rest_elems0), (Permutation [] bl), (Permutation [] gv0), (Permutation [] (rest_elems ++ rest_elems)), (Permutation [] (rest_elems ++ cons_elems)), (Permutation [] (rest_elems ++ cons_elems0)), (Permutation [] (rest_elems ++ rest_elems0))
(Permutation [] (rest_elems ++ bl)), (Permutation [] (rest_elems ++ gv0)), (Permutation [] (cons_elems ++ rest_elems)), (Permutation [] (cons_elems ++ cons_elems)), (Permutation [] (cons_elems ++ cons_elems0)), (Permutation [] (cons_elems ++ rest_elems0)), (Permutation [] (cons_elems ++ bl)), (Permutation [] (cons_elems ++ gv0)), (Permutation [] (cons_elems0 ++ rest_elems)), (Permutation [] (cons_elems0 ++ cons_elems))
(Permutation [] (cons_elems0 ++ cons_elems0)), (Permutation [] (cons_elems0 ++ rest_elems0)), (Permutation [] (cons_elems0 ++ bl)), (Permutation [] (cons_elems0 ++ gv0)), (Permutation [] (rest_elems0 ++ rest_elems)), (Permutation [] (rest_elems0 ++ cons_elems)), (Permutation [] (rest_elems0 ++ cons_elems0)), (Permutation [] (rest_elems0 ++ rest_elems0)), (Permutation [] (rest_elems0 ++ bl)), (Permutation [] (rest_elems0 ++ gv0))
(Permutation [] (bl ++ rest_elems)), (Permutation [] (bl ++ cons_elems)), (Permutation [] (bl ++ cons_elems0)), (Permutation [] (bl ++ rest_elems0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ gv0)), (Permutation [] (gv0 ++ rest_elems)), (Permutation [] (gv0 ++ cons_elems)), (Permutation [] (gv0 ++ cons_elems0)), (Permutation [] (gv0 ++ rest_elems0))
(Permutation [] (gv0 ++ bl)), (Permutation [] (gv0 ++ gv0)), (In t (t :: p)), (In t (merge p p)), (In t (heap_delete_max t)), (In t (join p p t)), (In t (carry p t)), (In t (p ++ p)), (In (smash t t) p), (In (smash t t) (t :: p))
(In (smash t t) (merge p p)), (In (smash t t) (heap_delete_max t)), (In (smash t t) (join p p t)), (In (smash t t) (carry p t)), (In (smash t t) (p ++ p)), (In Leaf p), (In Leaf (t :: p)), (In Leaf (merge p p)), (In Leaf (heap_delete_max t)), (In Leaf (join p p t))
(In Leaf (carry p t)), (In Leaf (p ++ p)), (In (length rest_elems) rest_elems), (In (length rest_elems) cons_elems), (In (length rest_elems) cons_elems0), (In (length rest_elems) rest_elems0), (In (length rest_elems) bl), (In (length rest_elems) gv0), (In (length rest_elems) (rest_elems ++ rest_elems)), (In (length rest_elems) (rest_elems ++ cons_elems))
(In (length rest_elems) (rest_elems ++ cons_elems0)), (In (length rest_elems) (rest_elems ++ rest_elems0)), (In (length rest_elems) (rest_elems ++ bl)), (In (length rest_elems) (rest_elems ++ gv0)), (In (length rest_elems) (cons_elems ++ rest_elems)), (In (length rest_elems) (cons_elems ++ cons_elems)), (In (length rest_elems) (cons_elems ++ cons_elems0)), (In (length rest_elems) (cons_elems ++ rest_elems0)), (In (length rest_elems) (cons_elems ++ bl)), (In (length rest_elems) (cons_elems ++ gv0))
(In (length rest_elems) (cons_elems0 ++ rest_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems)), (In (length rest_elems) (cons_elems0 ++ cons_elems0)), (In (length rest_elems) (cons_elems0 ++ rest_elems0)), (In (length rest_elems) (cons_elems0 ++ bl)), (In (length rest_elems) (cons_elems0 ++ gv0)), (In (length rest_elems) (rest_elems0 ++ rest_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems)), (In (length rest_elems) (rest_elems0 ++ cons_elems0)), (In (length rest_elems) (rest_elems0 ++ rest_elems0))
(In (length rest_elems) (rest_elems0 ++ bl)), (In (length rest_elems) (rest_elems0 ++ gv0)), (In (length rest_elems) (bl ++ rest_elems)), (In (length rest_elems) (bl ++ cons_elems)), (In (length rest_elems) (bl ++ cons_elems0)), (In (length rest_elems) (bl ++ rest_elems0)), (In (length rest_elems) (bl ++ bl)), (In (length rest_elems) (bl ++ gv0)), (In (length rest_elems) (gv0 ++ rest_elems)), (In (length rest_elems) (gv0 ++ cons_elems))
(In (length rest_elems) (gv0 ++ cons_elems0)), (In (length rest_elems) (gv0 ++ rest_elems0)), (In (length rest_elems) (gv0 ++ bl)), (In (length rest_elems) (gv0 ++ gv0)), (In (length cons_elems) rest_elems), (In (length cons_elems) cons_elems), (In (length cons_elems) cons_elems0), (In (length cons_elems) rest_elems0), (In (length cons_elems) bl), (In (length cons_elems) gv0)
(In (length cons_elems) (rest_elems ++ rest_elems)), (In (length cons_elems) (rest_elems ++ cons_elems)), (In (length cons_elems) (rest_elems ++ cons_elems0)), (In (length cons_elems) (rest_elems ++ rest_elems0)), (In (length cons_elems) (rest_elems ++ bl)), (In (length cons_elems) (rest_elems ++ gv0)), (In (length cons_elems) (cons_elems ++ rest_elems)), (In (length cons_elems) (cons_elems ++ cons_elems)), (In (length cons_elems) (cons_elems ++ cons_elems0)), (In (length cons_elems) (cons_elems ++ rest_elems0))
(In (length cons_elems) (cons_elems ++ bl)), (In (length cons_elems) (cons_elems ++ gv0)), (In (length cons_elems) (cons_elems0 ++ rest_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems)), (In (length cons_elems) (cons_elems0 ++ cons_elems0)), (In (length cons_elems) (cons_elems0 ++ rest_elems0)), (In (length cons_elems) (cons_elems0 ++ bl)), (In (length cons_elems) (cons_elems0 ++ gv0)), (In (length cons_elems) (rest_elems0 ++ rest_elems)), (In (length cons_elems) (rest_elems0 ++ cons_elems))
(In (length cons_elems) (rest_elems0 ++ cons_elems0)), (In (length cons_elems) (rest_elems0 ++ rest_elems0)), (In (length cons_elems) (rest_elems0 ++ bl)), (In (length cons_elems) (rest_elems0 ++ gv0)), (In (length cons_elems) (bl ++ rest_elems)), (In (length cons_elems) (bl ++ cons_elems)), (In (length cons_elems) (bl ++ cons_elems0)), (In (length cons_elems) (bl ++ rest_elems0)), (In (length cons_elems) (bl ++ bl)), (In (length cons_elems) (bl ++ gv0))
(In (length cons_elems) (gv0 ++ rest_elems)), (In (length cons_elems) (gv0 ++ cons_elems)), (In (length cons_elems) (gv0 ++ cons_elems0)), (In (length cons_elems) (gv0 ++ rest_elems0)), (In (length cons_elems) (gv0 ++ bl)), (In (length cons_elems) (gv0 ++ gv0)), (In (length cons_elems0) rest_elems), (In (length cons_elems0) cons_elems), (In (length cons_elems0) cons_elems0), (In (length cons_elems0) rest_elems0)
(In (length cons_elems0) bl), (In (length cons_elems0) gv0), (In (length cons_elems0) (rest_elems ++ rest_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems)), (In (length cons_elems0) (rest_elems ++ cons_elems0)), (In (length cons_elems0) (rest_elems ++ rest_elems0)), (In (length cons_elems0) (rest_elems ++ bl)), (In (length cons_elems0) (rest_elems ++ gv0)), (In (length cons_elems0) (cons_elems ++ rest_elems)), (In (length cons_elems0) (cons_elems ++ cons_elems))
(In (length cons_elems0) (cons_elems ++ cons_elems0)), (In (length cons_elems0) (cons_elems ++ rest_elems0)), (In (length cons_elems0) (cons_elems ++ bl)), (In (length cons_elems0) (cons_elems ++ gv0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems)), (In (length cons_elems0) (cons_elems0 ++ cons_elems0)), (In (length cons_elems0) (cons_elems0 ++ rest_elems0)), (In (length cons_elems0) (cons_elems0 ++ bl)), (In (length cons_elems0) (cons_elems0 ++ gv0))
(In (length cons_elems0) (rest_elems0 ++ rest_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems)), (In (length cons_elems0) (rest_elems0 ++ cons_elems0)), (In (length cons_elems0) (rest_elems0 ++ rest_elems0)), (In (length cons_elems0) (rest_elems0 ++ bl)), (In (length cons_elems0) (rest_elems0 ++ gv0)), (In (length cons_elems0) (bl ++ rest_elems)), (In (length cons_elems0) (bl ++ cons_elems)), (In (length cons_elems0) (bl ++ cons_elems0)), (In (length cons_elems0) (bl ++ rest_elems0))
(In (length cons_elems0) (bl ++ bl)), (In (length cons_elems0) (bl ++ gv0)), (In (length cons_elems0) (gv0 ++ rest_elems)), (In (length cons_elems0) (gv0 ++ cons_elems)), (In (length cons_elems0) (gv0 ++ cons_elems0)), (In (length cons_elems0) (gv0 ++ rest_elems0)), (In (length cons_elems0) (gv0 ++ bl)), (In (length cons_elems0) (gv0 ++ gv0)), (In (length rest_elems0) rest_elems), (In (length rest_elems0) cons_elems)
(In (length rest_elems0) cons_elems0), (In (length rest_elems0) rest_elems0), (In (length rest_elems0) bl), (In (length rest_elems0) gv0), (In (length rest_elems0) (rest_elems ++ rest_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems)), (In (length rest_elems0) (rest_elems ++ cons_elems0)), (In (length rest_elems0) (rest_elems ++ rest_elems0)), (In (length rest_elems0) (rest_elems ++ bl)), (In (length rest_elems0) (rest_elems ++ gv0))
(In (length rest_elems0) (cons_elems ++ rest_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems)), (In (length rest_elems0) (cons_elems ++ cons_elems0)), (In (length rest_elems0) (cons_elems ++ rest_elems0)), (In (length rest_elems0) (cons_elems ++ bl)), (In (length rest_elems0) (cons_elems ++ gv0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems)), (In (length rest_elems0) (cons_elems0 ++ cons_elems0)), (In (length rest_elems0) (cons_elems0 ++ rest_elems0))
(In (length rest_elems0) (cons_elems0 ++ bl)), (In (length rest_elems0) (cons_elems0 ++ gv0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems)), (In (length rest_elems0) (rest_elems0 ++ cons_elems0)), (In (length rest_elems0) (rest_elems0 ++ rest_elems0)), (In (length rest_elems0) (rest_elems0 ++ bl)), (In (length rest_elems0) (rest_elems0 ++ gv0)), (In (length rest_elems0) (bl ++ rest_elems)), (In (length rest_elems0) (bl ++ cons_elems))
(In (length rest_elems0) (bl ++ cons_elems0)), (In (length rest_elems0) (bl ++ rest_elems0)), (In (length rest_elems0) (bl ++ bl)), (In (length rest_elems0) (bl ++ gv0)), (In (length rest_elems0) (gv0 ++ rest_elems)), (In (length rest_elems0) (gv0 ++ cons_elems)), (In (length rest_elems0) (gv0 ++ cons_elems0)), (In (length rest_elems0) (gv0 ++ rest_elems0)), (In (length rest_elems0) (gv0 ++ bl)), (In (length rest_elems0) (gv0 ++ gv0))
(In (length bl) rest_elems), (In (length bl) cons_elems), (In (length bl) cons_elems0), (In (length bl) rest_elems0), (In (length bl) bl), (In (length bl) gv0), (In (length bl) (rest_elems ++ rest_elems)), (In (length bl) (rest_elems ++ cons_elems)), (In (length bl) (rest_elems ++ cons_elems0)), (In (length bl) (rest_elems ++ rest_elems0))
(In (length bl) (rest_elems ++ bl)), (In (length bl) (rest_elems ++ gv0)), (In (length bl) (cons_elems ++ rest_elems)), (In (length bl) (cons_elems ++ cons_elems)), (In (length bl) (cons_elems ++ cons_elems0)), (In (length bl) (cons_elems ++ rest_elems0)), (In (length bl) (cons_elems ++ bl)), (In (length bl) (cons_elems ++ gv0)), (In (length bl) (cons_elems0 ++ rest_elems)), (In (length bl) (cons_elems0 ++ cons_elems))
(In (length bl) (cons_elems0 ++ cons_elems0)), (In (length bl) (cons_elems0 ++ rest_elems0)), (In (length bl) (cons_elems0 ++ bl)), (In (length bl) (cons_elems0 ++ gv0)), (In (length bl) (rest_elems0 ++ rest_elems)), (In (length bl) (rest_elems0 ++ cons_elems)), (In (length bl) (rest_elems0 ++ cons_elems0)), (In (length bl) (rest_elems0 ++ rest_elems0)), (In (length bl) (rest_elems0 ++ bl)), (In (length bl) (rest_elems0 ++ gv0))
(In (length bl) (bl ++ rest_elems)), (In (length bl) (bl ++ cons_elems)), (In (length bl) (bl ++ cons_elems0)), (In (length bl) (bl ++ rest_elems0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ gv0)), (In (length bl) (gv0 ++ rest_elems)), (In (length bl) (gv0 ++ cons_elems)), (In (length bl) (gv0 ++ cons_elems0)), (In (length bl) (gv0 ++ rest_elems0))
(In (length bl) (gv0 ++ bl)), (In (length bl) (gv0 ++ gv0)), (In (length gv0) rest_elems), (In (length gv0) cons_elems), (In (length gv0) cons_elems0), (In (length gv0) rest_elems0), (In (length gv0) bl), (In (length gv0) gv0), (In (length gv0) (rest_elems ++ rest_elems)), (In (length gv0) (rest_elems ++ cons_elems))
(In (length gv0) (rest_elems ++ cons_elems0)), (In (length gv0) (rest_elems ++ rest_elems0)), (In (length gv0) (rest_elems ++ bl)), (In (length gv0) (rest_elems ++ gv0)), (In (length gv0) (cons_elems ++ rest_elems)), (In (length gv0) (cons_elems ++ cons_elems)), (In (length gv0) (cons_elems ++ cons_elems0)), (In (length gv0) (cons_elems ++ rest_elems0)), (In (length gv0) (cons_elems ++ bl)), (In (length gv0) (cons_elems ++ gv0))
(In (length gv0) (cons_elems0 ++ rest_elems)), (In (length gv0) (cons_elems0 ++ cons_elems)), (In (length gv0) (cons_elems0 ++ cons_elems0)), (In (length gv0) (cons_elems0 ++ rest_elems0)), (In (length gv0) (cons_elems0 ++ bl)), (In (length gv0) (cons_elems0 ++ gv0)), (In (length gv0) (rest_elems0 ++ rest_elems)), (In (length gv0) (rest_elems0 ++ cons_elems)), (In (length gv0) (rest_elems0 ++ cons_elems0)), (In (length gv0) (rest_elems0 ++ rest_elems0))
(In (length gv0) (rest_elems0 ++ bl)), (In (length gv0) (rest_elems0 ++ gv0)), (In (length gv0) (bl ++ rest_elems)), (In (length gv0) (bl ++ cons_elems)), (In (length gv0) (bl ++ cons_elems0)), (In (length gv0) (bl ++ rest_elems0)), (In (length gv0) (bl ++ bl)), (In (length gv0) (bl ++ gv0)), (In (length gv0) (gv0 ++ rest_elems)), (In (length gv0) (gv0 ++ cons_elems))
(In (length gv0) (gv0 ++ cons_elems0)), (In (length gv0) (gv0 ++ rest_elems0)), (In (length gv0) (gv0 ++ bl)), (In (length gv0) (gv0 ++ gv0)), (In (length p) rest_elems), (In (length p) cons_elems), (In (length p) cons_elems0), (In (length p) rest_elems0), (In (length p) bl), (In (length p) gv0)
(In (length p) (rest_elems ++ rest_elems)), (In (length p) (rest_elems ++ cons_elems)), (In (length p) (rest_elems ++ cons_elems0)), (In (length p) (rest_elems ++ rest_elems0)), (In (length p) (rest_elems ++ bl)), (In (length p) (rest_elems ++ gv0)), (In (length p) (cons_elems ++ rest_elems)), (In (length p) (cons_elems ++ cons_elems)), (In (length p) (cons_elems ++ cons_elems0)), (In (length p) (cons_elems ++ rest_elems0))
(In (length p) (cons_elems ++ bl)), (In (length p) (cons_elems ++ gv0)), (In (length p) (cons_elems0 ++ rest_elems)), (In (length p) (cons_elems0 ++ cons_elems)), (In (length p) (cons_elems0 ++ cons_elems0)), (In (length p) (cons_elems0 ++ rest_elems0)), (In (length p) (cons_elems0 ++ bl)), (In (length p) (cons_elems0 ++ gv0)), (In (length p) (rest_elems0 ++ rest_elems)), (In (length p) (rest_elems0 ++ cons_elems))
(In (length p) (rest_elems0 ++ cons_elems0)), (In (length p) (rest_elems0 ++ rest_elems0)), (In (length p) (rest_elems0 ++ bl)), (In (length p) (rest_elems0 ++ gv0)), (In (length p) (bl ++ rest_elems)), (In (length p) (bl ++ cons_elems)), (In (length p) (bl ++ cons_elems0)), (In (length p) (bl ++ rest_elems0)), (In (length p) (bl ++ bl)), (In (length p) (bl ++ gv0))
(In (length p) (gv0 ++ rest_elems)), (In (length p) (gv0 ++ cons_elems)), (In (length p) (gv0 ++ cons_elems0)), (In (length p) (gv0 ++ rest_elems0)), (In (length p) (gv0 ++ bl)), (In (length p) (gv0 ++ gv0)), (length rest_elems < length cons_elems), (length rest_elems < length cons_elems0), (length rest_elems < length rest_elems0), (length rest_elems < length bl)
(length rest_elems < length gv0), (length rest_elems < length p), (length cons_elems < length rest_elems), (length cons_elems < length cons_elems0), (length cons_elems < length rest_elems0), (length cons_elems < length bl), (length cons_elems < length gv0), (length cons_elems < length p), (length cons_elems0 < length rest_elems), (length cons_elems0 < length cons_elems)
(length cons_elems0 < length rest_elems0), (length cons_elems0 < length bl), (length cons_elems0 < length gv0), (length cons_elems0 < length p), (length rest_elems0 < length rest_elems), (length rest_elems0 < length cons_elems), (length rest_elems0 < length cons_elems0), (length rest_elems0 < length bl), (length rest_elems0 < length gv0), (length rest_elems0 < length p)
(length bl < length rest_elems), (length bl < length cons_elems), (length bl < length cons_elems0), (length bl < length rest_elems0), (length bl < length gv0), (length bl < length p), (length gv0 < length rest_elems), (length gv0 < length cons_elems), (length gv0 < length cons_elems0), (length gv0 < length rest_elems0)
(length gv0 < length bl), (length gv0 < length p), (length p < length rest_elems), (length p < length cons_elems), (length p < length cons_elems0), (length p < length rest_elems0), (length p < length bl), (length p < length gv0), (length rest_elems <= length cons_elems), (length rest_elems <= length cons_elems0)
(length rest_elems <= length rest_elems0), (length rest_elems <= length bl), (length rest_elems <= length gv0), (length rest_elems <= length p), (length cons_elems <= length rest_elems), (length cons_elems <= length cons_elems0), (length cons_elems <= length rest_elems0), (length cons_elems <= length bl), (length cons_elems <= length gv0), (length cons_elems <= length p)
(length cons_elems0 <= length rest_elems), (length cons_elems0 <= length cons_elems), (length cons_elems0 <= length rest_elems0), (length cons_elems0 <= length bl), (length cons_elems0 <= length gv0), (length cons_elems0 <= length p), (length rest_elems0 <= length rest_elems), (length rest_elems0 <= length cons_elems), (length rest_elems0 <= length cons_elems0), (length rest_elems0 <= length bl)
(length rest_elems0 <= length gv0), (length rest_elems0 <= length p), (length bl <= length rest_elems), (length bl <= length cons_elems), (length bl <= length cons_elems0), (length bl <= length rest_elems0), (length bl <= length gv0), (length bl <= length p), (length gv0 <= length rest_elems), (length gv0 <= length cons_elems)
(length gv0 <= length cons_elems0), (length gv0 <= length rest_elems0), (length gv0 <= length bl), (length gv0 <= length p), (length p <= length rest_elems), (length p <= length cons_elems), (length p <= length cons_elems0), (length p <= length rest_elems0), (length p <= length bl), (length p <= length gv0)
(~ Abs p rest_elems), (~ Abs p cons_elems), (~ Abs p cons_elems0), (~ Abs p rest_elems0), (~ Abs p bl), (~ Abs p gv0), (~ priqueue_elems p rest_elems), (~ priqueue_elems p cons_elems), (~ priqueue_elems p cons_elems0), (~ priqueue_elems p rest_elems0)
(~ priqueue_elems p bl), (~ priqueue_elems p gv0), (~ tree_elems t rest_elems), (~ tree_elems t cons_elems), (~ tree_elems t cons_elems0), (~ tree_elems t rest_elems0), (~ tree_elems t bl), (~ tree_elems t gv0), (~ priq p), (~ Permutation rest_elems rest_elems)
(~ Permutation rest_elems cons_elems), (~ Permutation rest_elems cons_elems0), (~ Permutation rest_elems rest_elems0), (~ Permutation rest_elems bl), (~ Permutation rest_elems gv0), (~ Permutation cons_elems rest_elems), (~ Permutation cons_elems cons_elems), (~ Permutation cons_elems cons_elems0), (~ Permutation cons_elems rest_elems0), (~ Permutation cons_elems bl)
(~ Permutation cons_elems gv0), (~ Permutation cons_elems0 rest_elems), (~ Permutation cons_elems0 cons_elems), (~ Permutation cons_elems0 cons_elems0), (~ Permutation cons_elems0 rest_elems0), (~ Permutation cons_elems0 bl), (~ Permutation cons_elems0 gv0), (~ Permutation rest_elems0 rest_elems), (~ Permutation rest_elems0 cons_elems), (~ Permutation rest_elems0 cons_elems0)
(~ Permutation rest_elems0 rest_elems0), (~ Permutation rest_elems0 bl), (~ Permutation rest_elems0 gv0), (~ Permutation bl rest_elems), (~ Permutation bl cons_elems), (~ Permutation bl cons_elems0), (~ Permutation bl rest_elems0), (~ Permutation bl bl), (~ Permutation bl gv0), (~ Permutation gv0 rest_elems)
(~ Permutation gv0 cons_elems), (~ Permutation gv0 cons_elems0), (~ Permutation gv0 rest_elems0), (~ Permutation gv0 bl), (~ Permutation gv0 gv0), (~ Permutation p p), (~ In t p), (t <> t), (p <> p), (rest_elems <> rest_elems)
(rest_elems <> cons_elems), (rest_elems <> cons_elems0), (rest_elems <> rest_elems0), (rest_elems <> bl), (rest_elems <> gv0), (cons_elems <> rest_elems), (cons_elems <> cons_elems), (cons_elems <> cons_elems0), (cons_elems <> rest_elems0), (cons_elems <> bl)
(cons_elems <> gv0), (cons_elems0 <> rest_elems), (cons_elems0 <> cons_elems), (cons_elems0 <> cons_elems0), (cons_elems0 <> rest_elems0), (cons_elems0 <> bl), (cons_elems0 <> gv0), (rest_elems0 <> rest_elems), (rest_elems0 <> cons_elems), (rest_elems0 <> cons_elems0)
(rest_elems0 <> rest_elems0), (rest_elems0 <> bl), (rest_elems0 <> gv0), (bl <> rest_elems), (bl <> cons_elems), (bl <> cons_elems0), (bl <> rest_elems0), (bl <> bl), (bl <> gv0), (gv0 <> rest_elems)
(gv0 <> cons_elems), (gv0 <> cons_elems0), (gv0 <> rest_elems0), (gv0 <> bl), (gv0 <> gv0), (None = Some rest_elems), (None = Some cons_elems), (None = Some cons_elems0), (None = Some rest_elems0), (None = Some bl)
(None = Some gv0), (None = Some p), (t :: p = p), (t :: p = merge p p), (t :: p = heap_delete_max t), (t :: p = join p p t), (t :: p = carry p t), (t :: p = p ++ p), (t :: p = []), (merge p p = p)
(merge p p = heap_delete_max t), (merge p p = join p p t), (merge p p = carry p t), (merge p p = p ++ p), (heap_delete_max t = p), (heap_delete_max t = carry p t), (heap_delete_max t = p ++ p), (join p p t = p), (join p p t = heap_delete_max t), (join p p t = carry p t)
(join p p t = p ++ p), (carry p t = p), (carry p t = p ++ p), (p ++ p = p), ([] = p), ([] = merge p p), ([] = heap_delete_max t), ([] = join p p t), ([] = carry p t), ([] = p ++ p)
(smash t t = t), (Leaf = smash t t), (rest_elems ++ rest_elems = rest_elems), (rest_elems ++ rest_elems = cons_elems), (rest_elems ++ rest_elems = cons_elems0), (rest_elems ++ rest_elems = rest_elems0), (rest_elems ++ rest_elems = bl), (rest_elems ++ rest_elems = gv0), (rest_elems ++ cons_elems = rest_elems), (rest_elems ++ cons_elems = cons_elems)
(rest_elems ++ cons_elems = cons_elems0), (rest_elems ++ cons_elems = rest_elems0), (rest_elems ++ cons_elems = bl), (rest_elems ++ cons_elems = gv0), (rest_elems ++ cons_elems0 = rest_elems), (rest_elems ++ cons_elems0 = cons_elems), (rest_elems ++ cons_elems0 = cons_elems0), (rest_elems ++ cons_elems0 = rest_elems0), (rest_elems ++ cons_elems0 = bl), (rest_elems ++ cons_elems0 = gv0)
(rest_elems ++ rest_elems0 = rest_elems), (rest_elems ++ rest_elems0 = cons_elems), (rest_elems ++ rest_elems0 = cons_elems0), (rest_elems ++ rest_elems0 = rest_elems0), (rest_elems ++ rest_elems0 = bl), (rest_elems ++ rest_elems0 = gv0), (rest_elems ++ bl = rest_elems), (rest_elems ++ bl = cons_elems), (rest_elems ++ bl = cons_elems0), (rest_elems ++ bl = rest_elems0)
(rest_elems ++ bl = bl), (rest_elems ++ bl = gv0), (rest_elems ++ gv0 = rest_elems), (rest_elems ++ gv0 = cons_elems), (rest_elems ++ gv0 = cons_elems0), (rest_elems ++ gv0 = rest_elems0), (rest_elems ++ gv0 = bl), (rest_elems ++ gv0 = gv0), (cons_elems ++ rest_elems = rest_elems), (cons_elems ++ rest_elems = cons_elems)
(cons_elems ++ rest_elems = cons_elems0), (cons_elems ++ rest_elems = rest_elems0), (cons_elems ++ rest_elems = bl), (cons_elems ++ rest_elems = gv0), (cons_elems ++ cons_elems = rest_elems), (cons_elems ++ cons_elems = cons_elems), (cons_elems ++ cons_elems = cons_elems0), (cons_elems ++ cons_elems = rest_elems0), (cons_elems ++ cons_elems = bl), (cons_elems ++ cons_elems = gv0)
(cons_elems ++ cons_elems0 = rest_elems), (cons_elems ++ cons_elems0 = cons_elems), (cons_elems ++ cons_elems0 = cons_elems0), (cons_elems ++ cons_elems0 = rest_elems0), (cons_elems ++ cons_elems0 = bl), (cons_elems ++ cons_elems0 = gv0), (cons_elems ++ rest_elems0 = rest_elems), (cons_elems ++ rest_elems0 = cons_elems), (cons_elems ++ rest_elems0 = cons_elems0), (cons_elems ++ rest_elems0 = rest_elems0)
(cons_elems ++ rest_elems0 = bl), (cons_elems ++ rest_elems0 = gv0), (cons_elems ++ bl = rest_elems), (cons_elems ++ bl = cons_elems), (cons_elems ++ bl = cons_elems0), (cons_elems ++ bl = rest_elems0), (cons_elems ++ bl = bl), (cons_elems ++ bl = gv0), (cons_elems ++ gv0 = rest_elems), (cons_elems ++ gv0 = cons_elems)
(cons_elems ++ gv0 = cons_elems0), (cons_elems ++ gv0 = rest_elems0), (cons_elems ++ gv0 = bl), (cons_elems ++ gv0 = gv0), (cons_elems0 ++ rest_elems = rest_elems), (cons_elems0 ++ rest_elems = cons_elems), (cons_elems0 ++ rest_elems = cons_elems0), (cons_elems0 ++ rest_elems = rest_elems0), (cons_elems0 ++ rest_elems = bl), (cons_elems0 ++ rest_elems = gv0)
(cons_elems0 ++ cons_elems = rest_elems), (cons_elems0 ++ cons_elems = cons_elems), (cons_elems0 ++ cons_elems = cons_elems0), (cons_elems0 ++ cons_elems = rest_elems0), (cons_elems0 ++ cons_elems = bl), (cons_elems0 ++ cons_elems = gv0), (cons_elems0 ++ cons_elems0 = rest_elems), (cons_elems0 ++ cons_elems0 = cons_elems), (cons_elems0 ++ cons_elems0 = cons_elems0), (cons_elems0 ++ cons_elems0 = rest_elems0)
(cons_elems0 ++ cons_elems0 = bl), (cons_elems0 ++ cons_elems0 = gv0), (cons_elems0 ++ rest_elems0 = rest_elems), (cons_elems0 ++ rest_elems0 = cons_elems), (cons_elems0 ++ rest_elems0 = cons_elems0), (cons_elems0 ++ rest_elems0 = rest_elems0), (cons_elems0 ++ rest_elems0 = bl), (cons_elems0 ++ rest_elems0 = gv0), (cons_elems0 ++ bl = rest_elems), (cons_elems0 ++ bl = cons_elems)
(cons_elems0 ++ bl = cons_elems0), (cons_elems0 ++ bl = rest_elems0), (cons_elems0 ++ bl = bl), (cons_elems0 ++ bl = gv0), (cons_elems0 ++ gv0 = rest_elems), (cons_elems0 ++ gv0 = cons_elems), (cons_elems0 ++ gv0 = cons_elems0), (cons_elems0 ++ gv0 = rest_elems0), (cons_elems0 ++ gv0 = bl), (cons_elems0 ++ gv0 = gv0)
(rest_elems0 ++ rest_elems = rest_elems), (rest_elems0 ++ rest_elems = cons_elems), (rest_elems0 ++ rest_elems = cons_elems0), (rest_elems0 ++ rest_elems = rest_elems0), (rest_elems0 ++ rest_elems = bl), (rest_elems0 ++ rest_elems = gv0), (rest_elems0 ++ cons_elems = rest_elems), (rest_elems0 ++ cons_elems = cons_elems), (rest_elems0 ++ cons_elems = cons_elems0), (rest_elems0 ++ cons_elems = rest_elems0)
(rest_elems0 ++ cons_elems = bl), (rest_elems0 ++ cons_elems = gv0), (rest_elems0 ++ cons_elems0 = rest_elems), (rest_elems0 ++ cons_elems0 = cons_elems), (rest_elems0 ++ cons_elems0 = cons_elems0), (rest_elems0 ++ cons_elems0 = rest_elems0), (rest_elems0 ++ cons_elems0 = bl), (rest_elems0 ++ cons_elems0 = gv0), (rest_elems0 ++ rest_elems0 = rest_elems), (rest_elems0 ++ rest_elems0 = cons_elems)
(rest_elems0 ++ rest_elems0 = cons_elems0), (rest_elems0 ++ rest_elems0 = rest_elems0), (rest_elems0 ++ rest_elems0 = bl), (rest_elems0 ++ rest_elems0 = gv0), (rest_elems0 ++ bl = rest_elems), (rest_elems0 ++ bl = cons_elems), (rest_elems0 ++ bl = cons_elems0), (rest_elems0 ++ bl = rest_elems0), (rest_elems0 ++ bl = bl), (rest_elems0 ++ bl = gv0)
(rest_elems0 ++ gv0 = rest_elems), (rest_elems0 ++ gv0 = cons_elems), (rest_elems0 ++ gv0 = cons_elems0), (rest_elems0 ++ gv0 = rest_elems0), (rest_elems0 ++ gv0 = bl), (rest_elems0 ++ gv0 = gv0), (bl ++ rest_elems = rest_elems), (bl ++ rest_elems = cons_elems), (bl ++ rest_elems = cons_elems0), (bl ++ rest_elems = rest_elems0)
(bl ++ rest_elems = bl), (bl ++ rest_elems = gv0), (bl ++ cons_elems = rest_elems), (bl ++ cons_elems = cons_elems), (bl ++ cons_elems = cons_elems0), (bl ++ cons_elems = rest_elems0), (bl ++ cons_elems = bl), (bl ++ cons_elems = gv0), (bl ++ cons_elems0 = rest_elems), (bl ++ cons_elems0 = cons_elems)
(bl ++ cons_elems0 = cons_elems0), (bl ++ cons_elems0 = rest_elems0), (bl ++ cons_elems0 = bl), (bl ++ cons_elems0 = gv0), (bl ++ rest_elems0 = rest_elems), (bl ++ rest_elems0 = cons_elems), (bl ++ rest_elems0 = cons_elems0), (bl ++ rest_elems0 = rest_elems0), (bl ++ rest_elems0 = bl), (bl ++ rest_elems0 = gv0)
(bl ++ bl = rest_elems), (bl ++ bl = cons_elems), (bl ++ bl = cons_elems0), (bl ++ bl = rest_elems0), (bl ++ bl = bl), (bl ++ bl = gv0), (bl ++ gv0 = rest_elems), (bl ++ gv0 = cons_elems), (bl ++ gv0 = cons_elems0), (bl ++ gv0 = rest_elems0)
(bl ++ gv0 = bl), (bl ++ gv0 = gv0), (gv0 ++ rest_elems = rest_elems), (gv0 ++ rest_elems = cons_elems), (gv0 ++ rest_elems = cons_elems0), (gv0 ++ rest_elems = rest_elems0), (gv0 ++ rest_elems = bl), (gv0 ++ rest_elems = gv0), (gv0 ++ cons_elems = rest_elems), (gv0 ++ cons_elems = cons_elems)
(gv0 ++ cons_elems = cons_elems0), (gv0 ++ cons_elems = rest_elems0), (gv0 ++ cons_elems = bl), (gv0 ++ cons_elems = gv0), (gv0 ++ cons_elems0 = rest_elems), (gv0 ++ cons_elems0 = cons_elems), (gv0 ++ cons_elems0 = cons_elems0), (gv0 ++ cons_elems0 = rest_elems0), (gv0 ++ cons_elems0 = bl), (gv0 ++ cons_elems0 = gv0)
(gv0 ++ rest_elems0 = rest_elems), (gv0 ++ rest_elems0 = cons_elems), (gv0 ++ rest_elems0 = cons_elems0), (gv0 ++ rest_elems0 = rest_elems0), (gv0 ++ rest_elems0 = bl), (gv0 ++ rest_elems0 = gv0), (gv0 ++ bl = rest_elems), (gv0 ++ bl = cons_elems), (gv0 ++ bl = cons_elems0), (gv0 ++ bl = rest_elems0)
(gv0 ++ bl = bl), (gv0 ++ bl = gv0), (gv0 ++ gv0 = rest_elems), (gv0 ++ gv0 = cons_elems), (gv0 ++ gv0 = cons_elems0), (gv0 ++ gv0 = rest_elems0), (gv0 ++ gv0 = bl), (gv0 ++ gv0 = gv0), ([] = rest_elems), ([] = cons_elems)
([] = cons_elems0), ([] = rest_elems0), ([] = bl), ([] = gv0), ([] = rest_elems ++ rest_elems), ([] = rest_elems ++ cons_elems), ([] = rest_elems ++ cons_elems0), ([] = rest_elems ++ rest_elems0), ([] = rest_elems ++ bl), ([] = rest_elems ++ gv0)
([] = cons_elems ++ rest_elems), ([] = cons_elems ++ cons_elems), ([] = cons_elems ++ cons_elems0), ([] = cons_elems ++ rest_elems0), ([] = cons_elems ++ bl), ([] = cons_elems ++ gv0), ([] = cons_elems0 ++ rest_elems), ([] = cons_elems0 ++ cons_elems), ([] = cons_elems0 ++ cons_elems0), ([] = cons_elems0 ++ rest_elems0)
([] = cons_elems0 ++ bl), ([] = cons_elems0 ++ gv0), ([] = rest_elems0 ++ rest_elems), ([] = rest_elems0 ++ cons_elems), ([] = rest_elems0 ++ cons_elems0), ([] = rest_elems0 ++ rest_elems0), ([] = rest_elems0 ++ bl), ([] = rest_elems0 ++ gv0), ([] = bl ++ rest_elems), ([] = bl ++ cons_elems)
([] = bl ++ cons_elems0), ([] = bl ++ rest_elems0), ([] = bl ++ bl), ([] = bl ++ gv0), ([] = gv0 ++ rest_elems), ([] = gv0 ++ cons_elems), ([] = gv0 ++ cons_elems0), ([] = gv0 ++ rest_elems0), ([] = gv0 ++ bl), ([] = gv0 ++ gv0)
(None = find_max p), (None = Some t)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 262.002 seconds


Label: 0 (0)
(Abs p rest_elems), (priqueue_elems p rest_elems), (Abs (p ++ p) (rest_elems ++ rest_elems)), (priqueue_elems (p ++ p) (rest_elems ++ rest_elems))

Label: 1 (1)
(tree_elems t cons_elems)

Label: 2 (2)
(tree_elems t cons_elems0)

Label: 3 (3)
(Permutation bl (cons_elems0 ++ rest_elems0)), (Permutation bl (rest_elems0 ++ cons_elems0)), (Permutation (cons_elems0 ++ rest_elems0) bl), (Permutation (rest_elems0 ++ cons_elems0) bl)

Label: 4 (4)
(Abs p rest_elems0), (priqueue_elems p rest_elems0), (Abs (p ++ p) (rest_elems0 ++ rest_elems0)), (priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))

Label: 5 (5)
(Abs p gv0), (tree_elems t gv0), (tree_elems Leaf gv0), (priqueue_elems p gv0), (Permutation bl gv0), (Permutation gv0 bl), (Permutation rest_elems gv0), (Permutation cons_elems gv0), (Permutation gv0 rest_elems), (Permutation gv0 cons_elems)
(Permutation cons_elems0 gv0), (Permutation rest_elems0 gv0), (Permutation gv0 cons_elems0), (Permutation gv0 rest_elems0), (Abs [] gv0), (priqueue_elems [] gv0), (Abs (heap_delete_max t) gv0), (priqueue_elems (heap_delete_max t) gv0), (bl = gv0), (gv0 = bl)


------------------------------ ALL RESULTS ------------------------------
1. (priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

2. (Permutation bl (cons_elems0 ++ rest_elems0) ->  Permutation (rest_elems0 ++ cons_elems0) bl)
(Permutation (rest_elems0 ++ cons_elems0) bl ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

3. (Permutation bl (cons_elems0 ++ rest_elems0) ->  Permutation bl (rest_elems0 ++ cons_elems0))
(Permutation bl (rest_elems0 ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

4. (priqueue_elems p rest_elems0 -> Abs (p ++ p) (rest_elems0 ++ rest_elems0))
(Abs (p ++ p) (rest_elems0 ++ rest_elems0) ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

5. (priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

6. (priqueue_elems p rest_elems -> Abs (p ++ p) (rest_elems ++ rest_elems))
(Abs (p ++ p) (rest_elems ++ rest_elems) ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

7. (priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems))
(Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems ++ rest_elems) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

8. (Abs p gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

9. (Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> tree_elems t gv0 -> Permutation gv0 bl)

10. (Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> tree_elems Leaf gv0 -> Permutation gv0 bl)

11. (Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

12. (Permutation rest_elems gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

13. (Permutation cons_elems gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

14. (Permutation gv0 rest_elems ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

15. (Permutation gv0 cons_elems ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

16. (Permutation cons_elems0 gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

17. (Permutation rest_elems0 gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

18. (Permutation gv0 cons_elems0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

19. (Permutation gv0 rest_elems0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

20. (Abs [] gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

21. (Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems [] gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

22. (Abs (heap_delete_max t) gv0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

23. (Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems (heap_delete_max t) gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

24. (Permutation bl (cons_elems0 ++ rest_elems0) ->  bl = gv0 ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)

25. (Permutation bl (cons_elems0 ++ rest_elems0) ->  gv0 = bl ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems -> tree_elems t cons_elems0 -> Permutation gv0 bl)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 342.959 seconds

Number of Result Pairs Returned: 25

1. (priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

2. (Permutation bl (cons_elems0 ++ rest_elems0) ->  Permutation (rest_elems0 ++ cons_elems0) bl)
(Permutation (rest_elems0 ++ cons_elems0) bl ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

3. (Permutation bl (cons_elems0 ++ rest_elems0) ->  Permutation bl (rest_elems0 ++ cons_elems0))
(Permutation bl (rest_elems0 ++ cons_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems p rest_elems0 ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

4. (priqueue_elems p rest_elems0 -> Abs (p ++ p) (rest_elems0 ++ rest_elems0))
(Abs (p ++ p) (rest_elems0 ++ rest_elems0) ->  Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)

5. (priqueue_elems p rest_elems0 ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0))
(Permutation bl (cons_elems0 ++ rest_elems0) ->  priqueue_elems p rest_elems ->  priqueue_elems (p ++ p) (rest_elems0 ++ rest_elems0) ->  tree_elems t cons_elems ->  tree_elems t cons_elems0 -> Permutation (cons_elems ++ rest_elems) bl)
