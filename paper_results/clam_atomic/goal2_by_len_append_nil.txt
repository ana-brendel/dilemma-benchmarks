Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (len y = len (append y nil))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 1.495 seconds

gv3 : Lst = nil
gv0 : Nat = (len y)
gv2 : Lst = (append y nil)
gv1 : Nat = (len (append y nil))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 20.913 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (len y = len (append y nil))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (len (append y nil) = gv1)

----------------------------------
Goal: (len y = gv1)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (append y nil = gv2)

----------------------------------
Goal: (len y = len gv2)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (len y = gv0)

----------------------------------
Goal: (gv0 = len (append y nil))
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (nil = gv3)

----------------------------------
Goal: (len y = len (append y gv3))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 21.049 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
Nat : Set
Lst : Set
append : (Lst -> Lst -> Lst)
len : (Lst -> Nat)
succ : (Nat -> Nat)
zero : Nat
nil : Lst
cons : (Nat -> Lst -> Lst)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 21.183 seconds


Label: 0 (0)
(gv1 = gv1), (y = y), (gv1 <> gv1), (y <> y), (None = Some y), (cons gv1 y = y), (cons gv1 y = append y y), (append y y = y), (nil = cons gv1 y), (nil = append y y)
(None = Some gv1), (succ gv1 = gv1), (succ gv1 = len y), (len y = gv1), (zero = succ gv1), (zero = len y)

Label: 1 (1)
(gv2 = gv2), (gv2 = y), (y = gv2), (y = y), (gv2 <> gv2), (gv2 <> y), (y <> gv2), (y <> y), (None = Some gv2), (None = Some y)
(append gv2 gv2 = gv2), (append gv2 gv2 = y), (append gv2 y = gv2), (append gv2 y = y), (append y gv2 = gv2), (append y gv2 = y), (append y y = gv2), (append y y = y), (nil = append gv2 gv2), (nil = append gv2 y)
(nil = append y gv2), (nil = append y y), (zero = len gv2), (zero = len y)

Label: 2 (2)
(y = y), (gv0 = gv0), (y <> y), (gv0 <> gv0), (None = Some y), (cons gv0 y = y), (cons gv0 y = append y y), (append y y = y), (nil = cons gv0 y), (nil = append y y)
(None = Some gv0), (succ gv0 = gv0), (succ gv0 = len y), (len y = gv0), (zero = succ gv0), (zero = len y)

Label: 3 (3)
(gv3 = gv3), (gv3 = y), (y = gv3), (y = y), (gv3 <> gv3), (gv3 <> y), (y <> gv3), (y <> y), (None = Some gv3), (None = Some y)
(append gv3 gv3 = gv3), (append gv3 gv3 = y), (append gv3 y = gv3), (append gv3 y = y), (append y gv3 = gv3), (append y gv3 = y), (append y y = gv3), (append y y = y), (nil = append gv3 gv3), (nil = append gv3 y)
(nil = append y gv3), (nil = append y y), (zero = len gv3), (zero = len y)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 25.229 seconds


Label: 0 (0)
(len y = gv1)

Label: 1 (1)
(gv2 = y), (y = gv2)

Label: 2 (2)
(len y = gv0)

Label: 3 (3)
(zero = len gv3), (append gv3 y = y), (append y gv3 = y), (append gv3 gv3 = gv3), (nil = append gv3 gv3)


------------------------------ ALL RESULTS ------------------------------
1. (len y = len (append y nil))

2. (append y nil = y)

3. (append nil nil = nil)

4. (gv2 = y -> len y = len gv2)

5. (y = gv2 -> len y = len gv2)

6. (zero = len gv3 -> len y = len (append y gv3))

7. (append gv3 y = y -> len y = len (append y gv3))

8. (append y gv3 = y -> len y = len (append y gv3))

9. (append gv3 gv3 = gv3 -> len y = len (append y gv3))

10. (nil = append gv3 gv3 -> len y = len (append y gv3))



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 45.923 seconds

Number of Result Pairs Returned: 10

1. (len y = len (append y nil))

2. (append y nil = y)

3. (gv2 = y -> len y = len gv2)

4. (y = gv2 -> len y = len gv2)

5. (zero = len gv3 -> len y = len (append y gv3))
