Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (forall y : Lst, len (append x y) = len (append y x))

----------------------------------
Goal: (succ (len (append y x)) = len (append y (cons n x)))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 1.508 seconds

gv3 : Nat = (len (append y (cons n x)))
gv2 : Lst = (append y x)
gv5 : Lst = (cons n x)
gv4 : Lst = (append y (cons n x))
gv1 : Nat = (len (append y x))
gv0 : Nat = (succ (len (append y x)))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 30.179 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (succ (len (append y x)) = len (append y (cons n x)))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (len (append y x) = gv1)

----------------------------------
Goal: (succ gv1 = len (append y (cons n x)))
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (succ (len (append y x)) = gv0)

----------------------------------
Goal: (gv0 = len (append y (cons n x)))
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (append y (cons n x) = gv4)

----------------------------------
Goal: (succ (len (append y x)) = len gv4)
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (cons n x = gv5)

----------------------------------
Goal: (succ (len (append y x)) = len (append y gv5))
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (len (append y (cons n x)) = gv3)

----------------------------------
Goal: (succ (len (append y x)) = gv3)
Case: Invalid and Generalized

Label: Generalization #6
Assumptions: 
 -- (append y x = gv2)

----------------------------------
Goal: (succ (len gv2) = len (append y (cons n x)))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 30.314 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
Nat : Set
Lst : Set
append : (Lst -> Lst -> Lst)
len : (Lst -> Nat)
succ : (Nat -> Nat)
zero : Nat
nil : Lst
cons : (Nat -> Lst -> Lst)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 30.46 seconds


Label: 0 (0)
(x = x), (x = y), (y = x), (y = y), (n = n), (n = gv1), (gv1 = n), (gv1 = gv1), (x <> x), (x <> y)
(y <> x), (y <> y), (n <> n), (n <> gv1), (gv1 <> n), (gv1 <> gv1), (None = Some x), (None = Some y), (cons n x = x), (cons n x = y)
(cons n x = append x x), (cons n x = append x y), (cons n x = append y x), (cons n x = append y y), (cons n y = x), (cons n y = y), (cons n y = append x x), (cons n y = append x y), (cons n y = append y x), (cons n y = append y y)
(cons gv1 x = x), (cons gv1 x = y), (cons gv1 x = append x x), (cons gv1 x = append x y), (cons gv1 x = append y x), (cons gv1 x = append y y), (cons gv1 y = x), (cons gv1 y = y), (cons gv1 y = append x x), (cons gv1 y = append x y)
(cons gv1 y = append y x), (cons gv1 y = append y y), (append x x = x), (append x x = y), (append x y = x), (append x y = y), (append y x = x), (append y x = y), (append y y = x), (append y y = y)
(nil = cons n x), (nil = cons n y), (nil = cons gv1 x), (nil = cons gv1 y), (nil = append x x), (nil = append x y), (nil = append y x), (nil = append y y), (None = Some n), (None = Some gv1)
(succ n = n), (succ n = gv1), (succ n = len x), (succ n = len y), (succ gv1 = n), (succ gv1 = gv1), (succ gv1 = len x), (succ gv1 = len y), (len x = n), (len x = gv1)
(len y = n), (len y = gv1), (zero = succ n), (zero = succ gv1), (zero = len x), (zero = len y)

Label: 1 (1)
(x = x), (x = y), (y = x), (y = y), (n = n), (n = gv0), (gv0 = n), (gv0 = gv0), (x <> x), (x <> y)
(y <> x), (y <> y), (n <> n), (n <> gv0), (gv0 <> n), (gv0 <> gv0), (None = Some x), (None = Some y), (cons n x = x), (cons n x = y)
(cons n x = append x x), (cons n x = append x y), (cons n x = append y x), (cons n x = append y y), (cons n y = x), (cons n y = y), (cons n y = append x x), (cons n y = append x y), (cons n y = append y x), (cons n y = append y y)
(cons gv0 x = x), (cons gv0 x = y), (cons gv0 x = append x x), (cons gv0 x = append x y), (cons gv0 x = append y x), (cons gv0 x = append y y), (cons gv0 y = x), (cons gv0 y = y), (cons gv0 y = append x x), (cons gv0 y = append x y)
(cons gv0 y = append y x), (cons gv0 y = append y y), (append x x = x), (append x x = y), (append x y = x), (append x y = y), (append y x = x), (append y x = y), (append y y = x), (append y y = y)
(nil = cons n x), (nil = cons n y), (nil = cons gv0 x), (nil = cons gv0 y), (nil = append x x), (nil = append x y), (nil = append y x), (nil = append y y), (None = Some n), (None = Some gv0)
(succ n = n), (succ n = gv0), (succ n = len x), (succ n = len y), (succ gv0 = n), (succ gv0 = gv0), (succ gv0 = len x), (succ gv0 = len y), (len x = n), (len x = gv0)
(len y = n), (len y = gv0), (zero = succ n), (zero = succ gv0), (zero = len x), (zero = len y)

Label: 2 (2)
(n = n), (gv4 = gv4), (gv4 = x), (gv4 = y), (x = gv4), (x = x), (x = y), (y = gv4), (y = x), (y = y)
(n <> n), (gv4 <> gv4), (gv4 <> x), (gv4 <> y), (x <> gv4), (x <> x), (x <> y), (y <> gv4), (y <> x), (y <> y)
(None = Some gv4), (None = Some x), (None = Some y), (cons n gv4 = gv4), (cons n gv4 = x), (cons n gv4 = y), (cons n gv4 = append gv4 gv4), (cons n gv4 = append gv4 x), (cons n gv4 = append gv4 y), (cons n gv4 = append x gv4)
(cons n gv4 = append x x), (cons n gv4 = append x y), (cons n gv4 = append y gv4), (cons n gv4 = append y x), (cons n gv4 = append y y), (cons n x = gv4), (cons n x = x), (cons n x = y), (cons n x = append gv4 gv4), (cons n x = append gv4 x)
(cons n x = append gv4 y), (cons n x = append x gv4), (cons n x = append x x), (cons n x = append x y), (cons n x = append y gv4), (cons n x = append y x), (cons n x = append y y), (cons n y = gv4), (cons n y = x), (cons n y = y)
(cons n y = append gv4 gv4), (cons n y = append gv4 x), (cons n y = append gv4 y), (cons n y = append x gv4), (cons n y = append x x), (cons n y = append x y), (cons n y = append y gv4), (cons n y = append y x), (cons n y = append y y), (append gv4 gv4 = gv4)
(append gv4 gv4 = x), (append gv4 gv4 = y), (append gv4 x = gv4), (append gv4 x = x), (append gv4 x = y), (append gv4 y = gv4), (append gv4 y = x), (append gv4 y = y), (append x gv4 = gv4), (append x gv4 = x)
(append x gv4 = y), (append x x = gv4), (append x x = x), (append x x = y), (append x y = gv4), (append x y = x), (append x y = y), (append y gv4 = gv4), (append y gv4 = x), (append y gv4 = y)
(append y x = gv4), (append y x = x), (append y x = y), (append y y = gv4), (append y y = x), (append y y = y), (nil = cons n gv4), (nil = cons n x), (nil = cons n y), (nil = append gv4 gv4)
(nil = append gv4 x), (nil = append gv4 y), (nil = append x gv4), (nil = append x x), (nil = append x y), (nil = append y gv4), (nil = append y x), (nil = append y y), (None = Some n), (succ n = n)
(succ n = len gv4), (succ n = len x), (succ n = len y), (len gv4 = n), (len x = n), (len y = n), (zero = succ n), (zero = len gv4), (zero = len x), (zero = len y)

Label: 3 (3)
(n = n), (gv5 = gv5), (gv5 = x), (gv5 = y), (x = gv5), (x = x), (x = y), (y = gv5), (y = x), (y = y)
(n <> n), (gv5 <> gv5), (gv5 <> x), (gv5 <> y), (x <> gv5), (x <> x), (x <> y), (y <> gv5), (y <> x), (y <> y)
(None = Some gv5), (None = Some x), (None = Some y), (cons n gv5 = gv5), (cons n gv5 = x), (cons n gv5 = y), (cons n gv5 = append gv5 gv5), (cons n gv5 = append gv5 x), (cons n gv5 = append gv5 y), (cons n gv5 = append x gv5)
(cons n gv5 = append x x), (cons n gv5 = append x y), (cons n gv5 = append y gv5), (cons n gv5 = append y x), (cons n gv5 = append y y), (cons n x = gv5), (cons n x = x), (cons n x = y), (cons n x = append gv5 gv5), (cons n x = append gv5 x)
(cons n x = append gv5 y), (cons n x = append x gv5), (cons n x = append x x), (cons n x = append x y), (cons n x = append y gv5), (cons n x = append y x), (cons n x = append y y), (cons n y = gv5), (cons n y = x), (cons n y = y)
(cons n y = append gv5 gv5), (cons n y = append gv5 x), (cons n y = append gv5 y), (cons n y = append x gv5), (cons n y = append x x), (cons n y = append x y), (cons n y = append y gv5), (cons n y = append y x), (cons n y = append y y), (append gv5 gv5 = gv5)
(append gv5 gv5 = x), (append gv5 gv5 = y), (append gv5 x = gv5), (append gv5 x = x), (append gv5 x = y), (append gv5 y = gv5), (append gv5 y = x), (append gv5 y = y), (append x gv5 = gv5), (append x gv5 = x)
(append x gv5 = y), (append x x = gv5), (append x x = x), (append x x = y), (append x y = gv5), (append x y = x), (append x y = y), (append y gv5 = gv5), (append y gv5 = x), (append y gv5 = y)
(append y x = gv5), (append y x = x), (append y x = y), (append y y = gv5), (append y y = x), (append y y = y), (nil = cons n gv5), (nil = cons n x), (nil = cons n y), (nil = append gv5 gv5)
(nil = append gv5 x), (nil = append gv5 y), (nil = append x gv5), (nil = append x x), (nil = append x y), (nil = append y gv5), (nil = append y x), (nil = append y y), (None = Some n), (succ n = n)
(succ n = len gv5), (succ n = len x), (succ n = len y), (len gv5 = n), (len x = n), (len y = n), (zero = succ n), (zero = len gv5), (zero = len x), (zero = len y)

Label: 4 (4)
(n = n), (n = gv3), (gv3 = n), (gv3 = gv3), (x = x), (x = y), (y = x), (y = y), (n <> n), (n <> gv3)
(gv3 <> n), (gv3 <> gv3), (x <> x), (x <> y), (y <> x), (y <> y), (None = Some x), (None = Some y), (cons n x = x), (cons n x = y)
(cons n x = append x x), (cons n x = append x y), (cons n x = append y x), (cons n x = append y y), (cons n y = x), (cons n y = y), (cons n y = append x x), (cons n y = append x y), (cons n y = append y x), (cons n y = append y y)
(cons gv3 x = x), (cons gv3 x = y), (cons gv3 x = append x x), (cons gv3 x = append x y), (cons gv3 x = append y x), (cons gv3 x = append y y), (cons gv3 y = x), (cons gv3 y = y), (cons gv3 y = append x x), (cons gv3 y = append x y)
(cons gv3 y = append y x), (cons gv3 y = append y y), (append x x = x), (append x x = y), (append x y = x), (append x y = y), (append y x = x), (append y x = y), (append y y = x), (append y y = y)
(nil = cons n x), (nil = cons n y), (nil = cons gv3 x), (nil = cons gv3 y), (nil = append x x), (nil = append x y), (nil = append y x), (nil = append y y), (None = Some n), (None = Some gv3)
(succ n = n), (succ n = gv3), (succ n = len x), (succ n = len y), (succ gv3 = n), (succ gv3 = gv3), (succ gv3 = len x), (succ gv3 = len y), (len x = n), (len x = gv3)
(len y = n), (len y = gv3), (zero = succ n), (zero = succ gv3), (zero = len x), (zero = len y)

Label: 5 (5)
(n = n), (x = x), (x = y), (x = gv2), (y = x), (y = y), (y = gv2), (gv2 = x), (gv2 = y), (gv2 = gv2)
(n <> n), (x <> x), (x <> y), (x <> gv2), (y <> x), (y <> y), (y <> gv2), (gv2 <> x), (gv2 <> y), (gv2 <> gv2)
(None = Some x), (None = Some y), (None = Some gv2), (cons n x = x), (cons n x = y), (cons n x = gv2), (cons n x = append x x), (cons n x = append x y), (cons n x = append x gv2), (cons n x = append y x)
(cons n x = append y y), (cons n x = append y gv2), (cons n x = append gv2 x), (cons n x = append gv2 y), (cons n x = append gv2 gv2), (cons n y = x), (cons n y = y), (cons n y = gv2), (cons n y = append x x), (cons n y = append x y)
(cons n y = append x gv2), (cons n y = append y x), (cons n y = append y y), (cons n y = append y gv2), (cons n y = append gv2 x), (cons n y = append gv2 y), (cons n y = append gv2 gv2), (cons n gv2 = x), (cons n gv2 = y), (cons n gv2 = gv2)
(cons n gv2 = append x x), (cons n gv2 = append x y), (cons n gv2 = append x gv2), (cons n gv2 = append y x), (cons n gv2 = append y y), (cons n gv2 = append y gv2), (cons n gv2 = append gv2 x), (cons n gv2 = append gv2 y), (cons n gv2 = append gv2 gv2), (append x x = x)
(append x x = y), (append x x = gv2), (append x y = x), (append x y = y), (append x y = gv2), (append x gv2 = x), (append x gv2 = y), (append x gv2 = gv2), (append y x = x), (append y x = y)
(append y x = gv2), (append y y = x), (append y y = y), (append y y = gv2), (append y gv2 = x), (append y gv2 = y), (append y gv2 = gv2), (append gv2 x = x), (append gv2 x = y), (append gv2 x = gv2)
(append gv2 y = x), (append gv2 y = y), (append gv2 y = gv2), (append gv2 gv2 = x), (append gv2 gv2 = y), (append gv2 gv2 = gv2), (nil = cons n x), (nil = cons n y), (nil = cons n gv2), (nil = append x x)
(nil = append x y), (nil = append x gv2), (nil = append y x), (nil = append y y), (nil = append y gv2), (nil = append gv2 x), (nil = append gv2 y), (nil = append gv2 gv2), (None = Some n), (succ n = n)
(succ n = len x), (succ n = len y), (succ n = len gv2), (len x = n), (len y = n), (len gv2 = n), (zero = succ n), (zero = len x), (zero = len y), (zero = len gv2)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 37.331 seconds


Label: 0 (0)

Label: 1 (1)

Label: 2 (2)

Label: 3 (3)
(cons n x = gv5)

Label: 4 (4)

Label: 5 (5)
(append y x = gv2)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 39.248 seconds

Number of Result Pairs Returned: 1

1. (succ (len (append y x)) = len (append y (cons n x)))
