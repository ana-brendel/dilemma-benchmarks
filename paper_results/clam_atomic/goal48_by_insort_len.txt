Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (len (sort x) = len x)

----------------------------------
Goal: (len (insort n (sort x)) = succ (len x))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.117 seconds

gv4 : Nat = (len x)
gv1 : Lst = (insort n (sort x))
gv3 : Nat = (succ (len x))
gv2 : Lst = (sort x)
gv0 : Nat = (len (insort n (sort x)))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 75.7 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (len (insort n (sort x)) = succ (len x))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (len (insort n (sort x)) = gv0)

----------------------------------
Goal: (gv0 = succ (len x))
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (len gv2 = len x)

----------------------------------
Goal: (len (insort n gv2) = succ (len x))
Case: Valid and Generalized

Label: Generalization #3
Assumptions: 
 -- (len (insort n gv2) = gv0)

----------------------------------
Goal: (gv0 = succ (len x))
Case: Not Stable

Label: Generalization #4
Assumptions: 
 -- (succ (len x) = gv3)
 -- (sort x = gv2)

----------------------------------
Goal: (len (insort n gv2) = gv3)
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (len gv2 = gv4)

----------------------------------
Goal: (len (insort n gv2) = succ gv4)
Case: Valid and Generalized

Label: Generalization #9
Assumptions: 
 -- (insort n gv2 = gv1)

----------------------------------
Goal: (len gv1 = succ (len x))
Case: Not Stable

Label: Generalization #10
Assumptions: 
 -- (succ (len x) = gv3)

----------------------------------
Goal: (len (insort n (sort x)) = gv3)
Case: Invalid and Generalized

Label: Generalization #11
Assumptions: 
 -- (len (sort x) = gv4)

----------------------------------
Goal: (len (insort n (sort x)) = succ gv4)
Case: Valid and Generalized

Label: Generalization #12
Assumptions: 
 -- (len x = gv4)
 -- (len (insort n (sort x)) = gv0)

----------------------------------
Goal: (gv0 = succ gv4)
Case: Invalid and Generalized

Label: Generalization #13
Assumptions: 
 -- (succ gv4 = gv3)

----------------------------------
Goal: (len (insort n (sort x)) = gv3)
Case: Not Stable

Label: Generalization #14
Assumptions: 
 -- (insort n (sort x) = gv1)
 -- (len x = gv4)

----------------------------------
Goal: (len gv1 = succ gv4)
Case: Invalid and Generalized

Label: Generalization #15
Assumptions: 
 -- (insort n (sort x) = gv1)

----------------------------------
Goal: (len gv1 = succ (len x))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 75.845 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
Nat : Set
Lst : Set
eqb : (Nat -> Nat -> bool)
less : (Nat -> Nat -> bool)
len : (Lst -> Nat)
insort : (Nat -> Lst -> Lst)
sort : (Lst -> Lst)
succ : (Nat -> Nat)
zero : Nat
nil : Lst
cons : (Nat -> Lst -> Lst)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 76. seconds


Label: 0 (0)
(x = x), (n = n), (n = gv0), (gv0 = n), (gv0 = gv0), (false = less n n), (false = less n gv0), (false = less gv0 n), (false = less gv0 gv0), (false = eqb n n)
(false = eqb n gv0), (false = eqb gv0 n), (false = eqb gv0 gv0), (true = less n n), (true = less n gv0), (true = less gv0 n), (true = less gv0 gv0), (true = eqb n n), (true = eqb n gv0), (true = eqb gv0 n)
(true = eqb gv0 gv0), (x <> x), (n <> n), (n <> gv0), (gv0 <> n), (gv0 <> gv0), (less n n = eqb n n), (less n n = eqb n gv0), (less n n = eqb gv0 n), (less n n = eqb gv0 gv0)
(less n gv0 = eqb n n), (less n gv0 = eqb n gv0), (less n gv0 = eqb gv0 n), (less n gv0 = eqb gv0 gv0), (less gv0 n = eqb n n), (less gv0 n = eqb n gv0), (less gv0 n = eqb gv0 n), (less gv0 n = eqb gv0 gv0), (less gv0 gv0 = eqb n n), (less gv0 gv0 = eqb n gv0)
(less gv0 gv0 = eqb gv0 n), (less gv0 gv0 = eqb gv0 gv0), (None = Some x), (cons n x = x), (cons n x = sort x), (cons n x = insort n x), (cons n x = insort gv0 x), (cons gv0 x = x), (cons gv0 x = sort x), (cons gv0 x = insort n x)
(cons gv0 x = insort gv0 x), (sort x = x), (sort x = insort n x), (sort x = insort gv0 x), (insort n x = x), (insort gv0 x = x), (nil = cons n x), (nil = cons gv0 x), (nil = sort x), (nil = insort n x)
(nil = insort gv0 x), (succ n = n), (succ n = gv0), (succ n = len x), (succ gv0 = n), (succ gv0 = gv0), (succ gv0 = len x), (len x = n), (len x = gv0), (zero = succ n)
(zero = succ gv0), (zero = len x), (None = Some n), (None = Some gv0)

Label: 1 (1)
(x = x), (x = gv2), (gv2 = x), (gv2 = gv2), (gv3 = gv3), (gv3 = n), (n = gv3), (n = n), (false = less gv3 gv3), (false = less gv3 n)
(false = less n gv3), (false = less n n), (false = eqb gv3 gv3), (false = eqb gv3 n), (false = eqb n gv3), (false = eqb n n), (true = less gv3 gv3), (true = less gv3 n), (true = less n gv3), (true = less n n)
(true = eqb gv3 gv3), (true = eqb gv3 n), (true = eqb n gv3), (true = eqb n n), (x <> x), (x <> gv2), (gv2 <> x), (gv2 <> gv2), (gv3 <> gv3), (gv3 <> n)
(n <> gv3), (n <> n), (less gv3 gv3 = eqb gv3 gv3), (less gv3 gv3 = eqb gv3 n), (less gv3 gv3 = eqb n gv3), (less gv3 gv3 = eqb n n), (less gv3 n = eqb gv3 gv3), (less gv3 n = eqb gv3 n), (less gv3 n = eqb n gv3), (less gv3 n = eqb n n)
(less n gv3 = eqb gv3 gv3), (less n gv3 = eqb gv3 n), (less n gv3 = eqb n gv3), (less n gv3 = eqb n n), (less n n = eqb gv3 gv3), (less n n = eqb gv3 n), (less n n = eqb n gv3), (less n n = eqb n n), (None = Some x), (None = Some gv2)
(cons gv3 x = x), (cons gv3 x = gv2), (cons gv3 x = sort x), (cons gv3 x = sort gv2), (cons gv3 x = insort gv3 x), (cons gv3 x = insort gv3 gv2), (cons gv3 x = insort n x), (cons gv3 x = insort n gv2), (cons gv3 gv2 = x), (cons gv3 gv2 = gv2)
(cons gv3 gv2 = sort x), (cons gv3 gv2 = sort gv2), (cons gv3 gv2 = insort gv3 x), (cons gv3 gv2 = insort gv3 gv2), (cons gv3 gv2 = insort n x), (cons gv3 gv2 = insort n gv2), (cons n x = x), (cons n x = gv2), (cons n x = sort x), (cons n x = sort gv2)
(cons n x = insort gv3 x), (cons n x = insort gv3 gv2), (cons n x = insort n x), (cons n x = insort n gv2), (cons n gv2 = x), (cons n gv2 = gv2), (cons n gv2 = sort x), (cons n gv2 = sort gv2), (cons n gv2 = insort gv3 x), (cons n gv2 = insort gv3 gv2)
(cons n gv2 = insort n x), (cons n gv2 = insort n gv2), (sort x = x), (sort x = gv2), (sort x = insort gv3 x), (sort x = insort gv3 gv2), (sort x = insort n x), (sort x = insort n gv2), (sort gv2 = x), (sort gv2 = gv2)
(sort gv2 = insort gv3 x), (sort gv2 = insort gv3 gv2), (sort gv2 = insort n x), (sort gv2 = insort n gv2), (insort gv3 x = x), (insort gv3 x = gv2), (insort gv3 gv2 = x), (insort gv3 gv2 = gv2), (insort n x = x), (insort n x = gv2)
(insort n gv2 = x), (insort n gv2 = gv2), (nil = cons gv3 x), (nil = cons gv3 gv2), (nil = cons n x), (nil = cons n gv2), (nil = sort x), (nil = sort gv2), (nil = insort gv3 x), (nil = insort gv3 gv2)
(nil = insort n x), (nil = insort n gv2), (succ gv3 = gv3), (succ gv3 = n), (succ gv3 = len x), (succ gv3 = len gv2), (succ n = gv3), (succ n = n), (succ n = len x), (succ n = len gv2)
(len x = gv3), (len x = n), (len gv2 = gv3), (len gv2 = n), (zero = succ gv3), (zero = succ n), (zero = len x), (zero = len gv2), (None = Some gv3), (None = Some n)

Label: 2 (2)
(x = x), (gv3 = gv3), (gv3 = n), (n = gv3), (n = n), (false = less gv3 gv3), (false = less gv3 n), (false = less n gv3), (false = less n n), (false = eqb gv3 gv3)
(false = eqb gv3 n), (false = eqb n gv3), (false = eqb n n), (true = less gv3 gv3), (true = less gv3 n), (true = less n gv3), (true = less n n), (true = eqb gv3 gv3), (true = eqb gv3 n), (true = eqb n gv3)
(true = eqb n n), (x <> x), (gv3 <> gv3), (gv3 <> n), (n <> gv3), (n <> n), (less gv3 gv3 = eqb gv3 gv3), (less gv3 gv3 = eqb gv3 n), (less gv3 gv3 = eqb n gv3), (less gv3 gv3 = eqb n n)
(less gv3 n = eqb gv3 gv3), (less gv3 n = eqb gv3 n), (less gv3 n = eqb n gv3), (less gv3 n = eqb n n), (less n gv3 = eqb gv3 gv3), (less n gv3 = eqb gv3 n), (less n gv3 = eqb n gv3), (less n gv3 = eqb n n), (less n n = eqb gv3 gv3), (less n n = eqb gv3 n)
(less n n = eqb n gv3), (less n n = eqb n n), (None = Some x), (cons gv3 x = x), (cons gv3 x = sort x), (cons gv3 x = insort gv3 x), (cons gv3 x = insort n x), (cons n x = x), (cons n x = sort x), (cons n x = insort gv3 x)
(cons n x = insort n x), (sort x = x), (sort x = insort gv3 x), (sort x = insort n x), (insort gv3 x = x), (insort n x = x), (nil = cons gv3 x), (nil = cons n x), (nil = sort x), (nil = insort gv3 x)
(nil = insort n x), (succ gv3 = gv3), (succ gv3 = n), (succ gv3 = len x), (succ n = gv3), (succ n = n), (succ n = len x), (len x = gv3), (len x = n), (zero = succ gv3)
(zero = succ n), (zero = len x), (None = Some gv3), (None = Some n)

Label: 3 (3)
(x = x), (n = n), (n = gv4), (n = gv0), (gv4 = n), (gv4 = gv4), (gv4 = gv0), (gv0 = n), (gv0 = gv4), (gv0 = gv0)
(false = less n n), (false = less n gv4), (false = less n gv0), (false = less gv4 n), (false = less gv4 gv4), (false = less gv4 gv0), (false = less gv0 n), (false = less gv0 gv4), (false = less gv0 gv0), (false = eqb n n)
(false = eqb n gv4), (false = eqb n gv0), (false = eqb gv4 n), (false = eqb gv4 gv4), (false = eqb gv4 gv0), (false = eqb gv0 n), (false = eqb gv0 gv4), (false = eqb gv0 gv0), (true = less n n), (true = less n gv4)
(true = less n gv0), (true = less gv4 n), (true = less gv4 gv4), (true = less gv4 gv0), (true = less gv0 n), (true = less gv0 gv4), (true = less gv0 gv0), (true = eqb n n), (true = eqb n gv4), (true = eqb n gv0)
(true = eqb gv4 n), (true = eqb gv4 gv4), (true = eqb gv4 gv0), (true = eqb gv0 n), (true = eqb gv0 gv4), (true = eqb gv0 gv0), (x <> x), (n <> n), (n <> gv4), (n <> gv0)
(gv4 <> n), (gv4 <> gv4), (gv4 <> gv0), (gv0 <> n), (gv0 <> gv4), (gv0 <> gv0), (less n n = eqb n n), (less n n = eqb n gv4), (less n n = eqb n gv0), (less n n = eqb gv4 n)
(less n n = eqb gv4 gv4), (less n n = eqb gv4 gv0), (less n n = eqb gv0 n), (less n n = eqb gv0 gv4), (less n n = eqb gv0 gv0), (less n gv4 = eqb n n), (less n gv4 = eqb n gv4), (less n gv4 = eqb n gv0), (less n gv4 = eqb gv4 n), (less n gv4 = eqb gv4 gv4)
(less n gv4 = eqb gv4 gv0), (less n gv4 = eqb gv0 n), (less n gv4 = eqb gv0 gv4), (less n gv4 = eqb gv0 gv0), (less n gv0 = eqb n n), (less n gv0 = eqb n gv4), (less n gv0 = eqb n gv0), (less n gv0 = eqb gv4 n), (less n gv0 = eqb gv4 gv4), (less n gv0 = eqb gv4 gv0)
(less n gv0 = eqb gv0 n), (less n gv0 = eqb gv0 gv4), (less n gv0 = eqb gv0 gv0), (less gv4 n = eqb n n), (less gv4 n = eqb n gv4), (less gv4 n = eqb n gv0), (less gv4 n = eqb gv4 n), (less gv4 n = eqb gv4 gv4), (less gv4 n = eqb gv4 gv0), (less gv4 n = eqb gv0 n)
(less gv4 n = eqb gv0 gv4), (less gv4 n = eqb gv0 gv0), (less gv4 gv4 = eqb n n), (less gv4 gv4 = eqb n gv4), (less gv4 gv4 = eqb n gv0), (less gv4 gv4 = eqb gv4 n), (less gv4 gv4 = eqb gv4 gv4), (less gv4 gv4 = eqb gv4 gv0), (less gv4 gv4 = eqb gv0 n), (less gv4 gv4 = eqb gv0 gv4)
(less gv4 gv4 = eqb gv0 gv0), (less gv4 gv0 = eqb n n), (less gv4 gv0 = eqb n gv4), (less gv4 gv0 = eqb n gv0), (less gv4 gv0 = eqb gv4 n), (less gv4 gv0 = eqb gv4 gv4), (less gv4 gv0 = eqb gv4 gv0), (less gv4 gv0 = eqb gv0 n), (less gv4 gv0 = eqb gv0 gv4), (less gv4 gv0 = eqb gv0 gv0)
(less gv0 n = eqb n n), (less gv0 n = eqb n gv4), (less gv0 n = eqb n gv0), (less gv0 n = eqb gv4 n), (less gv0 n = eqb gv4 gv4), (less gv0 n = eqb gv4 gv0), (less gv0 n = eqb gv0 n), (less gv0 n = eqb gv0 gv4), (less gv0 n = eqb gv0 gv0), (less gv0 gv4 = eqb n n)
(less gv0 gv4 = eqb n gv4), (less gv0 gv4 = eqb n gv0), (less gv0 gv4 = eqb gv4 n), (less gv0 gv4 = eqb gv4 gv4), (less gv0 gv4 = eqb gv4 gv0), (less gv0 gv4 = eqb gv0 n), (less gv0 gv4 = eqb gv0 gv4), (less gv0 gv4 = eqb gv0 gv0), (less gv0 gv0 = eqb n n), (less gv0 gv0 = eqb n gv4)
(less gv0 gv0 = eqb n gv0), (less gv0 gv0 = eqb gv4 n), (less gv0 gv0 = eqb gv4 gv4), (less gv0 gv0 = eqb gv4 gv0), (less gv0 gv0 = eqb gv0 n), (less gv0 gv0 = eqb gv0 gv4), (less gv0 gv0 = eqb gv0 gv0), (None = Some x), (cons n x = x), (cons n x = sort x)
(cons n x = insort n x), (cons n x = insort gv4 x), (cons n x = insort gv0 x), (cons gv4 x = x), (cons gv4 x = sort x), (cons gv4 x = insort n x), (cons gv4 x = insort gv4 x), (cons gv4 x = insort gv0 x), (cons gv0 x = x), (cons gv0 x = sort x)
(cons gv0 x = insort n x), (cons gv0 x = insort gv4 x), (cons gv0 x = insort gv0 x), (sort x = x), (sort x = insort n x), (sort x = insort gv4 x), (sort x = insort gv0 x), (insort n x = x), (insort gv4 x = x), (insort gv0 x = x)
(nil = cons n x), (nil = cons gv4 x), (nil = cons gv0 x), (nil = sort x), (nil = insort n x), (nil = insort gv4 x), (nil = insort gv0 x), (succ n = n), (succ n = gv4), (succ n = gv0)
(succ n = len x), (succ gv4 = n), (succ gv4 = gv4), (succ gv4 = gv0), (succ gv4 = len x), (succ gv0 = n), (succ gv0 = gv4), (succ gv0 = gv0), (succ gv0 = len x), (len x = n)
(len x = gv4), (len x = gv0), (zero = succ n), (zero = succ gv4), (zero = succ gv0), (zero = len x), (None = Some n), (None = Some gv4), (None = Some gv0)

Label: 4 (4)
(n = n), (n = gv4), (gv4 = n), (gv4 = gv4), (x = x), (x = gv1), (gv1 = x), (gv1 = gv1), (false = less n n), (false = less n gv4)
(false = less gv4 n), (false = less gv4 gv4), (false = eqb n n), (false = eqb n gv4), (false = eqb gv4 n), (false = eqb gv4 gv4), (true = less n n), (true = less n gv4), (true = less gv4 n), (true = less gv4 gv4)
(true = eqb n n), (true = eqb n gv4), (true = eqb gv4 n), (true = eqb gv4 gv4), (n <> n), (n <> gv4), (gv4 <> n), (gv4 <> gv4), (x <> x), (x <> gv1)
(gv1 <> x), (gv1 <> gv1), (less n n = eqb n n), (less n n = eqb n gv4), (less n n = eqb gv4 n), (less n n = eqb gv4 gv4), (less n gv4 = eqb n n), (less n gv4 = eqb n gv4), (less n gv4 = eqb gv4 n), (less n gv4 = eqb gv4 gv4)
(less gv4 n = eqb n n), (less gv4 n = eqb n gv4), (less gv4 n = eqb gv4 n), (less gv4 n = eqb gv4 gv4), (less gv4 gv4 = eqb n n), (less gv4 gv4 = eqb n gv4), (less gv4 gv4 = eqb gv4 n), (less gv4 gv4 = eqb gv4 gv4), (None = Some x), (None = Some gv1)
(succ n = n), (succ n = gv4), (succ n = len x), (succ n = len gv1), (succ gv4 = n), (succ gv4 = gv4), (succ gv4 = len x), (succ gv4 = len gv1), (len x = n), (len x = gv4)
(len gv1 = n), (len gv1 = gv4), (zero = succ n), (zero = succ gv4), (zero = len x), (zero = len gv1), (cons n x = x), (cons n x = gv1), (cons n x = sort x), (cons n x = sort gv1)
(cons n x = insort n x), (cons n x = insort n gv1), (cons n x = insort gv4 x), (cons n x = insort gv4 gv1), (cons n gv1 = x), (cons n gv1 = gv1), (cons n gv1 = sort x), (cons n gv1 = sort gv1), (cons n gv1 = insort n x), (cons n gv1 = insort n gv1)
(cons n gv1 = insort gv4 x), (cons n gv1 = insort gv4 gv1), (cons gv4 x = x), (cons gv4 x = gv1), (cons gv4 x = sort x), (cons gv4 x = sort gv1), (cons gv4 x = insort n x), (cons gv4 x = insort n gv1), (cons gv4 x = insort gv4 x), (cons gv4 x = insort gv4 gv1)
(cons gv4 gv1 = x), (cons gv4 gv1 = gv1), (cons gv4 gv1 = sort x), (cons gv4 gv1 = sort gv1), (cons gv4 gv1 = insort n x), (cons gv4 gv1 = insort n gv1), (cons gv4 gv1 = insort gv4 x), (cons gv4 gv1 = insort gv4 gv1), (sort x = x), (sort x = gv1)
(sort x = insort n x), (sort x = insort n gv1), (sort x = insort gv4 x), (sort x = insort gv4 gv1), (sort gv1 = x), (sort gv1 = gv1), (sort gv1 = insort n x), (sort gv1 = insort n gv1), (sort gv1 = insort gv4 x), (sort gv1 = insort gv4 gv1)
(insort n x = x), (insort n x = gv1), (insort n gv1 = x), (insort n gv1 = gv1), (insort gv4 x = x), (insort gv4 x = gv1), (insort gv4 gv1 = x), (insort gv4 gv1 = gv1), (nil = cons n x), (nil = cons n gv1)
(nil = cons gv4 x), (nil = cons gv4 gv1), (nil = sort x), (nil = sort gv1), (nil = insort n x), (nil = insort n gv1), (nil = insort gv4 x), (nil = insort gv4 gv1), (None = Some n), (None = Some gv4)

Label: 5 (5)
(n = n), (x = x), (x = gv1), (gv1 = x), (gv1 = gv1), (false = less n n), (false = eqb n n), (true = less n n), (true = eqb n n), (n <> n)
(x <> x), (x <> gv1), (gv1 <> x), (gv1 <> gv1), (less n n = eqb n n), (None = Some x), (None = Some gv1), (succ n = n), (succ n = len x), (succ n = len gv1)
(len x = n), (len gv1 = n), (zero = succ n), (zero = len x), (zero = len gv1), (cons n x = x), (cons n x = gv1), (cons n x = sort x), (cons n x = sort gv1), (cons n x = insort n x)
(cons n x = insort n gv1), (cons n gv1 = x), (cons n gv1 = gv1), (cons n gv1 = sort x), (cons n gv1 = sort gv1), (cons n gv1 = insort n x), (cons n gv1 = insort n gv1), (sort x = x), (sort x = gv1), (sort x = insort n x)
(sort x = insort n gv1), (sort gv1 = x), (sort gv1 = gv1), (sort gv1 = insort n x), (sort gv1 = insort n gv1), (insort n x = x), (insort n x = gv1), (insort n gv1 = x), (insort n gv1 = gv1), (nil = cons n x)
(nil = cons n gv1), (nil = sort x), (nil = sort gv1), (nil = insort n x), (nil = insort n gv1), (None = Some n)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 82.063 seconds


Label: 0 (0)

Label: 1 (1)

Label: 2 (2)

Label: 3 (3)
(succ gv4 = gv0)

Label: 4 (4)
(succ gv4 = len gv1)

Label: 5 (5)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 100.937 seconds

Number of Result Pairs Returned: 4

1. (len gv2 = gv4 -> len (insort n gv2) = succ gv4)

2. (len gv2 = len x -> len (insort n gv2) = succ (len x))

3. (len (sort x) = gv4 -> len (insort n (sort x)) = succ gv4)

4. (len (insort n (sort x)) = succ (len x))
