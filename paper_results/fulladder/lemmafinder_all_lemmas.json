{"fulladder_half_adder_sum_sym": "Lemma half_adder_sum_sym:  forall a b: bool, half_adder_sum a b = half_adder_sum b a.", "fulladder_half_adder_carry_sym": "Lemma half_adder_carry_sym:  forall a b: bool, half_adder_carry a b = half_adder_carry b a.", "fulladder_half_adder_sum_false": "Lemma half_adder_sum_false : forall a : bool, half_adder_sum a false = a.", "fulladder_half_adder_carry_false": "Lemma half_adder_carry_false : forall a : bool, half_adder_carry a false = false.", "fulladder_half_adder_sum_true": "Lemma half_adder_sum_true : forall a : bool, half_adder_sum a true = negb a.", "fulladder_half_adder_carry_true": "Lemma half_adder_carry_true : forall a : bool, half_adder_carry a true = a.", "fulladder_half_adder_ok": "Theorem half_adder_ok : forall a b : bool, bool_to_nat (half_adder_sum a b) + (bool_to_nat (half_adder_carry a b) + bool_to_nat (half_adder_carry a b)) = bool_to_nat a + bool_to_nat b.", "fulladder_full_adder_sum_sym1": "Lemma full_adder_sum_sym1 : forall a b c : bool, full_adder_sum a b c = full_adder_sum b a c.", "fulladder_full_adder_sum_sym2": "Lemma full_adder_sum_sym2 : forall a b c : bool, full_adder_sum a b c = full_adder_sum a c b.", "fulladder_full_adder_sum_false": "Lemma full_adder_sum_false : forall a : bool, full_adder_sum a false false = a.", "fulladder_full_adder_sum_true": "Lemma full_adder_sum_true : forall a : bool, full_adder_sum a true true = a.", "fulladder_full_adder_carry_sym1": "Lemma full_adder_carry_sym1 : forall a b c : bool, full_adder_carry a b c = full_adder_carry b a c.", "fulladder_full_adder_carry_sym2": "Lemma full_adder_carry_sym2 : forall a b c : bool, full_adder_carry a b c = full_adder_carry a c b.", "fulladder_full_adder_carry_false": "Lemma full_adder_carry_false : forall a : bool, full_adder_carry a false false = false.", "fulladder_full_adder_carry_true": "Lemma full_adder_carry_true : forall a : bool, full_adder_carry a true true = true.", "fulladder_full_adder_carry_true_false": "Lemma full_adder_carry_true_false : forall a : bool, full_adder_carry a true false = a.", "fulladder_full_adder_carry_neg": "Lemma full_adder_carry_neg : forall a b : bool, full_adder_carry a (negb a) b = b.", "fulladder_full_adder_ok": "Theorem full_adder_ok : forall a b c : bool, bool_to_nat (full_adder_sum a b c) + (bool_to_nat (full_adder_carry a b c) + bool_to_nat (full_adder_carry a b c)) = bool_to_nat a + bool_to_nat b + bool_to_nat c.", "fulladder_plus_permute2": "Lemma plus_permute2 : forall x y z : nat, x + y + z = x + z + y.", "fulladder_app_eq2": "Lemma app_eq2 : forall (x : bool) (l l' : boolList), app (Cons x l) l' = Cons x  (app l l').", "fulladder_length_eq2": "Lemma length_eq2 : forall (x : bool) (l : boolList), length (Cons x l) = S (length l).", "fulladder_BV_full_adder_sum_eq1": "Lemma BV_full_adder_sum_eq1 : forall b : bool, bV_full_adder_sum Nil Nil b = Nil.", "fulladder_BV_full_adder_sum_eq2": "Lemma BV_full_adder_sum_eq2 : forall (vh : bool) (vt : boolList) (b : bool), bV_full_adder_sum Nil (Cons vh vt) b = Cons (half_adder_sum vh b)   (bV_full_adder_sum Nil vt (half_adder_carry vh b)).", "fulladder_BV_full_adder_sum_eq3": "Lemma BV_full_adder_sum_eq3 : forall (vh : bool) (vt : boolList) (b : bool), bV_full_adder_sum (Cons vh vt) Nil b = Cons (half_adder_sum vh b)   (bV_full_adder_sum vt Nil (half_adder_carry vh b)).", "fulladder_BV_full_adder_sum_eq4": "Lemma BV_full_adder_sum_eq4 : forall (vh : bool) (vt : boolList) (wh : bool) (wt : boolList) (b : bool), bV_full_adder_sum (Cons vh vt) (Cons wh wt) b = Cons (full_adder_sum vh wh b)   (bV_full_adder_sum vt wt (full_adder_carry vh wh b)).", "fulladder_BV_full_adder_carry_eq1": "Lemma BV_full_adder_carry_eq1 : forall b : bool, bV_full_adder_carry Nil Nil b = b.", "fulladder_BV_full_adder_carry_eq2": "Lemma BV_full_adder_carry_eq2 : forall (vh : bool) (vt : boolList) (b : bool), bV_full_adder_carry Nil (Cons vh vt) b = bV_full_adder_carry Nil vt (half_adder_carry vh b).", "fulladder_BV_full_adder_carry_eq3": "Lemma BV_full_adder_carry_eq3 : forall (vh : bool) (vt : boolList) (b : bool), bV_full_adder_carry (Cons vh vt) Nil b = bV_full_adder_carry vt Nil (half_adder_carry vh b).", "fulladder_BV_full_adder_carry_eq4": "Lemma BV_full_adder_carry_eq4 : forall (vh : bool) (vt : boolList) (wh : bool) (wt : boolList) (b : bool), bV_full_adder_carry (Cons vh vt) (Cons wh wt) b = bV_full_adder_carry vt wt (full_adder_carry vh wh b).", "fulladder_BV_full_adder_sum_v_nil_false": "Lemma BV_full_adder_sum_v_nil_false : forall v : boolList, bV_full_adder_sum v Nil false = v.", "fulladder_BV_full_adder_carry_v_nil_false": "Lemma BV_full_adder_carry_v_nil_false : forall v : boolList, bV_full_adder_carry v Nil false = false.", "fulladder_BV_full_adder_sum_sym": "Lemma BV_full_adder_sum_sym : forall (v w : boolList) (cin : bool), bV_full_adder_sum v w cin = bV_full_adder_sum w v cin.", "fulladder_length_BV_full_adder_sum": "Lemma length_BV_full_adder_sum : forall (v w : boolList) (cin : bool), length v = length w -> length (bV_full_adder_sum v w cin) = length v.", "fulladder_BV_full_adder_carry_sym": "Lemma BV_full_adder_carry_sym : forall (v w : boolList) (cin : bool), bV_full_adder_carry v w cin = bV_full_adder_carry w v cin.", "fulladder_BV_full_adder_sym": "Lemma BV_full_adder_sym : forall (v w : boolList) (cin : bool), bV_full_adder v w cin = bV_full_adder w v cin.", "fulladder_BV_to_nat_app": "Lemma BV_to_nat_app : forall (l n : boolList) (ll : nat), (******************) length l = ll -> bV_to_nat (app l n) = bV_to_nat l + power2 ll * bV_to_nat n.", "fulladder_BV_to_nat_app2": "Lemma BV_to_nat_app2 : forall l n : boolList, (*******************) bV_to_nat (app l n) = bV_to_nat l + power2 (length l) * bV_to_nat n.", "fulladder_BV_full_adder_nil_true_ok": "Lemma BV_full_adder_nil_true_ok : forall v : boolList, bV_to_nat (bV_full_adder v Nil true) = S (bV_to_nat v).", "fulladder_BV_full_adder_nil_ok": "Lemma BV_full_adder_nil_ok : forall (v : boolList) (cin : bool), bV_to_nat (bV_full_adder v Nil cin) = bV_to_nat v + bool_to_nat cin.", "fulladder_BV_full_adder_ok": "Theorem BV_full_adder_ok : forall (v w : boolList) (cin : bool), bV_to_nat (bV_full_adder v w cin) = bV_to_nat v + bV_to_nat w + bool_to_nat cin."}