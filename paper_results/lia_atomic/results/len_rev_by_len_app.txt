Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (len (rev l) = len l)

----------------------------------
Goal: (len (app (rev l) (Cons n Nil)) = S (len l))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 176.922 seconds

gv4 : lst = Nil
gv6 : nat = (len l)
gv0 : nat = (len (app (rev l) (Cons n Nil)))
gv1 : lst = (app (rev l) (Cons n Nil))
gv5 : nat = (S (len l))
gv3 : lst = (Cons n Nil)
gv2 : lst = (rev l)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 301.03 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (len (app (rev l) (Cons n Nil)) = S (len l))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (len gv2 = len l)

----------------------------------
Goal: (len (app gv2 (Cons n Nil)) = S (len l))
Case: Valid and Generalized

Label: Generalization #2
Assumptions: 
 -- (Cons n Nil = gv3)
 -- (rev l = gv2)

----------------------------------
Goal: (len (app gv2 gv3) = S (len l))
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (S (len l) = gv5)
 -- (rev l = gv2)

----------------------------------
Goal: (len (app gv2 (Cons n Nil)) = gv5)
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (app gv2 (Cons n Nil) = gv1)

----------------------------------
Goal: (len gv1 = S (len l))
Case: Not Stable

Label: Generalization #5
Assumptions: 
 -- (len (app gv2 (Cons n Nil)) = gv0)

----------------------------------
Goal: (gv0 = S (len l))
Case: Not Stable

Label: Generalization #6
Assumptions: 
 -- (len gv2 = gv6)

----------------------------------
Goal: (len (app gv2 (Cons n Nil)) = S gv6)
Case: Valid and Generalized

Label: Generalization #12
Assumptions: 
 -- (Nil = gv4)
 -- (rev l = gv2)

----------------------------------
Goal: (len (app gv2 (Cons n gv4)) = S (len l))
Case: Invalid and Generalized

Label: Generalization #13
Assumptions: 
 -- (Cons n Nil = gv3)

----------------------------------
Goal: (len (app (rev l) gv3) = S (len l))
Case: Invalid and Generalized

Label: Generalization #14
Assumptions: 
 -- (S (len l) = gv5)

----------------------------------
Goal: (len (app (rev l) (Cons n Nil)) = gv5)
Case: Invalid and Generalized

Label: Generalization #15
Assumptions: 
 -- (app (rev l) (Cons n Nil) = gv1)

----------------------------------
Goal: (len gv1 = S (len l))
Case: Invalid and Generalized

Label: Generalization #16
Assumptions: 
 -- (len (app (rev l) (Cons n Nil)) = gv0)

----------------------------------
Goal: (gv0 = S (len l))
Case: Invalid and Generalized

Label: Generalization #17
Assumptions: 
 -- (len (rev l) = gv6)

----------------------------------
Goal: (len (app (rev l) (Cons n Nil)) = S gv6)
Case: Valid and Generalized

Label: Generalization #18
Assumptions: 
 -- (Cons n Nil = gv3)
 -- (len l = gv6)

----------------------------------
Goal: (len (app (rev l) gv3) = S gv6)
Case: Invalid and Generalized

Label: Generalization #19
Assumptions: 
 -- (S gv6 = gv5)

----------------------------------
Goal: (len (app (rev l) (Cons n Nil)) = gv5)
Case: Not Stable

Label: Generalization #20
Assumptions: 
 -- (app (rev l) (Cons n Nil) = gv1)
 -- (len l = gv6)

----------------------------------
Goal: (len gv1 = S gv6)
Case: Invalid and Generalized

Label: Generalization #21
Assumptions: 
 -- (len (app (rev l) (Cons n Nil)) = gv0)
 -- (len l = gv6)

----------------------------------
Goal: (gv0 = S gv6)
Case: Invalid and Generalized

Label: Generalization #22
Assumptions: 
 -- (Nil = gv4)
 -- (len l = gv6)

----------------------------------
Goal: (len (app (rev l) (Cons n gv4)) = S gv6)
Case: Invalid and Generalized

Label: Generalization #23
Assumptions: 
 -- (Nil = gv4)

----------------------------------
Goal: (len (app (rev l) (Cons n gv4)) = S (len l))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 301.201 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
Datatypes.app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
lst : Set
queue : Set
len : (lst -> nat)
qlen : (queue -> nat)
app : (lst -> lst -> lst)
rev : (lst -> lst)
leb : (nat -> nat -> bool)
amortizeQueue : (lst -> lst -> queue)
qpush : (queue -> nat -> queue)
Nil : lst
Cons : (nat -> lst -> lst)
Queue : (lst -> lst -> queue)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 7 (7)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 8 (8)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 9 (9)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 10 (10)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 11 (11)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 301.369 seconds


Label: 0 (0)
(n < n), (n <= n), (n = n), (l = l), (l = gv3), (l = gv2), (gv3 = l), (gv3 = gv3), (gv3 = gv2), (gv2 = l)
(gv2 = gv3), (gv2 = gv2), (false = leb n n), (true = leb n n), (n < len l), (n < len gv3), (n < len gv2), (len l < n), (len l < len gv3), (len l < len gv2)
(len gv3 < n), (len gv3 < len l), (len gv3 < len gv2), (len gv2 < n), (len gv2 < len l), (len gv2 < len gv3), (n <= len l), (n <= len gv3), (n <= len gv2), (len l <= n)
(len l <= len gv3), (len l <= len gv2), (len gv3 <= n), (len gv3 <= len l), (len gv3 <= len gv2), (len gv2 <= n), (len gv2 <= len l), (len gv2 <= len gv3), (~ n < n), (~ n <= n)
(n <> n), (l <> l), (l <> gv3), (l <> gv2), (gv3 <> l), (gv3 <> gv3), (gv3 <> gv2), (gv2 <> l), (gv2 <> gv3), (gv2 <> gv2)
(Cons n l = l), (Cons n l = gv3), (Cons n l = gv2), (Cons n l = rev l), (Cons n l = rev gv3), (Cons n l = rev gv2), (Cons n l = app l l), (Cons n l = app l gv3), (Cons n l = app l gv2), (Cons n l = app gv3 l)
(Cons n l = app gv3 gv3), (Cons n l = app gv3 gv2), (Cons n l = app gv2 l), (Cons n l = app gv2 gv3), (Cons n l = app gv2 gv2), (Cons n gv3 = l), (Cons n gv3 = gv3), (Cons n gv3 = gv2), (Cons n gv3 = rev l), (Cons n gv3 = rev gv3)
(Cons n gv3 = rev gv2), (Cons n gv3 = app l l), (Cons n gv3 = app l gv3), (Cons n gv3 = app l gv2), (Cons n gv3 = app gv3 l), (Cons n gv3 = app gv3 gv3), (Cons n gv3 = app gv3 gv2), (Cons n gv3 = app gv2 l), (Cons n gv3 = app gv2 gv3), (Cons n gv3 = app gv2 gv2)
(Cons n gv2 = l), (Cons n gv2 = gv3), (Cons n gv2 = gv2), (Cons n gv2 = rev l), (Cons n gv2 = rev gv3), (Cons n gv2 = rev gv2), (Cons n gv2 = app l l), (Cons n gv2 = app l gv3), (Cons n gv2 = app l gv2), (Cons n gv2 = app gv3 l)
(Cons n gv2 = app gv3 gv3), (Cons n gv2 = app gv3 gv2), (Cons n gv2 = app gv2 l), (Cons n gv2 = app gv2 gv3), (Cons n gv2 = app gv2 gv2), (rev l = l), (rev l = gv3), (rev l = gv2), (rev l = app l l), (rev l = app l gv3)
(rev l = app l gv2), (rev l = app gv3 l), (rev l = app gv3 gv3), (rev l = app gv3 gv2), (rev l = app gv2 l), (rev l = app gv2 gv3), (rev l = app gv2 gv2), (rev gv3 = l), (rev gv3 = gv3), (rev gv3 = gv2)
(rev gv3 = app l l), (rev gv3 = app l gv3), (rev gv3 = app l gv2), (rev gv3 = app gv3 l), (rev gv3 = app gv3 gv3), (rev gv3 = app gv3 gv2), (rev gv3 = app gv2 l), (rev gv3 = app gv2 gv3), (rev gv3 = app gv2 gv2), (rev gv2 = l)
(rev gv2 = gv3), (rev gv2 = gv2), (rev gv2 = app l l), (rev gv2 = app l gv3), (rev gv2 = app l gv2), (rev gv2 = app gv3 l), (rev gv2 = app gv3 gv3), (rev gv2 = app gv3 gv2), (rev gv2 = app gv2 l), (rev gv2 = app gv2 gv3)
(rev gv2 = app gv2 gv2), (app l l = l), (app l l = gv3), (app l l = gv2), (app l gv3 = l), (app l gv3 = gv3), (app l gv3 = gv2), (app l gv2 = l), (app l gv2 = gv3), (app l gv2 = gv2)
(app gv3 l = l), (app gv3 l = gv3), (app gv3 l = gv2), (app gv3 gv3 = l), (app gv3 gv3 = gv3), (app gv3 gv3 = gv2), (app gv3 gv2 = l), (app gv3 gv2 = gv3), (app gv3 gv2 = gv2), (app gv2 l = l)
(app gv2 l = gv3), (app gv2 l = gv2), (app gv2 gv3 = l), (app gv2 gv3 = gv3), (app gv2 gv3 = gv2), (app gv2 gv2 = l), (app gv2 gv2 = gv3), (app gv2 gv2 = gv2), (Nil = Cons n l), (Nil = Cons n gv3)
(Nil = Cons n gv2), (Nil = rev l), (Nil = rev gv3), (Nil = rev gv2), (Nil = app l l), (Nil = app l gv3), (Nil = app l gv2), (Nil = app gv3 l), (Nil = app gv3 gv3), (Nil = app gv3 gv2)
(Nil = app gv2 l), (Nil = app gv2 gv3), (Nil = app gv2 gv2), (None = Some n), (Queue l l = amortizeQueue l l), (Queue l l = amortizeQueue l gv3), (Queue l l = amortizeQueue l gv2), (Queue l l = amortizeQueue gv3 l), (Queue l l = amortizeQueue gv3 gv3), (Queue l l = amortizeQueue gv3 gv2)
(Queue l l = amortizeQueue gv2 l), (Queue l l = amortizeQueue gv2 gv3), (Queue l l = amortizeQueue gv2 gv2), (Queue l gv3 = amortizeQueue l l), (Queue l gv3 = amortizeQueue l gv3), (Queue l gv3 = amortizeQueue l gv2), (Queue l gv3 = amortizeQueue gv3 l), (Queue l gv3 = amortizeQueue gv3 gv3), (Queue l gv3 = amortizeQueue gv3 gv2), (Queue l gv3 = amortizeQueue gv2 l)
(Queue l gv3 = amortizeQueue gv2 gv3), (Queue l gv3 = amortizeQueue gv2 gv2), (Queue l gv2 = amortizeQueue l l), (Queue l gv2 = amortizeQueue l gv3), (Queue l gv2 = amortizeQueue l gv2), (Queue l gv2 = amortizeQueue gv3 l), (Queue l gv2 = amortizeQueue gv3 gv3), (Queue l gv2 = amortizeQueue gv3 gv2), (Queue l gv2 = amortizeQueue gv2 l), (Queue l gv2 = amortizeQueue gv2 gv3)
(Queue l gv2 = amortizeQueue gv2 gv2), (Queue gv3 l = amortizeQueue l l), (Queue gv3 l = amortizeQueue l gv3), (Queue gv3 l = amortizeQueue l gv2), (Queue gv3 l = amortizeQueue gv3 l), (Queue gv3 l = amortizeQueue gv3 gv3), (Queue gv3 l = amortizeQueue gv3 gv2), (Queue gv3 l = amortizeQueue gv2 l), (Queue gv3 l = amortizeQueue gv2 gv3), (Queue gv3 l = amortizeQueue gv2 gv2)
(Queue gv3 gv3 = amortizeQueue l l), (Queue gv3 gv3 = amortizeQueue l gv3), (Queue gv3 gv3 = amortizeQueue l gv2), (Queue gv3 gv3 = amortizeQueue gv3 l), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 gv2), (Queue gv3 gv3 = amortizeQueue gv2 l), (Queue gv3 gv3 = amortizeQueue gv2 gv3), (Queue gv3 gv3 = amortizeQueue gv2 gv2), (Queue gv3 gv2 = amortizeQueue l l)
(Queue gv3 gv2 = amortizeQueue l gv3), (Queue gv3 gv2 = amortizeQueue l gv2), (Queue gv3 gv2 = amortizeQueue gv3 l), (Queue gv3 gv2 = amortizeQueue gv3 gv3), (Queue gv3 gv2 = amortizeQueue gv3 gv2), (Queue gv3 gv2 = amortizeQueue gv2 l), (Queue gv3 gv2 = amortizeQueue gv2 gv3), (Queue gv3 gv2 = amortizeQueue gv2 gv2), (Queue gv2 l = amortizeQueue l l), (Queue gv2 l = amortizeQueue l gv3)
(Queue gv2 l = amortizeQueue l gv2), (Queue gv2 l = amortizeQueue gv3 l), (Queue gv2 l = amortizeQueue gv3 gv3), (Queue gv2 l = amortizeQueue gv3 gv2), (Queue gv2 l = amortizeQueue gv2 l), (Queue gv2 l = amortizeQueue gv2 gv3), (Queue gv2 l = amortizeQueue gv2 gv2), (Queue gv2 gv3 = amortizeQueue l l), (Queue gv2 gv3 = amortizeQueue l gv3), (Queue gv2 gv3 = amortizeQueue l gv2)
(Queue gv2 gv3 = amortizeQueue gv3 l), (Queue gv2 gv3 = amortizeQueue gv3 gv3), (Queue gv2 gv3 = amortizeQueue gv3 gv2), (Queue gv2 gv3 = amortizeQueue gv2 l), (Queue gv2 gv3 = amortizeQueue gv2 gv3), (Queue gv2 gv3 = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue l l), (Queue gv2 gv2 = amortizeQueue l gv3), (Queue gv2 gv2 = amortizeQueue l gv2), (Queue gv2 gv2 = amortizeQueue gv3 l)
(Queue gv2 gv2 = amortizeQueue gv3 gv3), (Queue gv2 gv2 = amortizeQueue gv3 gv2), (Queue gv2 gv2 = amortizeQueue gv2 l), (Queue gv2 gv2 = amortizeQueue gv2 gv3), (Queue gv2 gv2 = amortizeQueue gv2 gv2), (len l = n), (len gv3 = n), (len gv2 = n), (None = Some l), (None = Some gv3)
(None = Some gv2)

Label: 1 (1)
(gv5 < gv5), (gv5 < n), (n < gv5), (n < n), (gv5 <= gv5), (gv5 <= n), (n <= gv5), (n <= n), (gv5 = gv5), (gv5 = n)
(n = gv5), (n = n), (l = l), (l = gv2), (gv2 = l), (gv2 = gv2), (false = leb gv5 gv5), (false = leb gv5 n), (false = leb n gv5), (false = leb n n)
(true = leb gv5 gv5), (true = leb gv5 n), (true = leb n gv5), (true = leb n n), (gv5 < len l), (gv5 < len gv2), (n < len l), (n < len gv2), (len l < gv5), (len l < n)
(len l < len gv2), (len gv2 < gv5), (len gv2 < n), (len gv2 < len l), (gv5 <= len l), (gv5 <= len gv2), (n <= len l), (n <= len gv2), (len l <= gv5), (len l <= n)
(len l <= len gv2), (len gv2 <= gv5), (len gv2 <= n), (len gv2 <= len l), (~ gv5 < gv5), (~ gv5 < n), (~ n < gv5), (~ n < n), (~ gv5 <= gv5), (~ gv5 <= n)
(~ n <= gv5), (~ n <= n), (gv5 <> gv5), (gv5 <> n), (n <> gv5), (n <> n), (l <> l), (l <> gv2), (gv2 <> l), (gv2 <> gv2)
(Cons gv5 l = l), (Cons gv5 l = gv2), (Cons gv5 l = rev l), (Cons gv5 l = rev gv2), (Cons gv5 l = app l l), (Cons gv5 l = app l gv2), (Cons gv5 l = app gv2 l), (Cons gv5 l = app gv2 gv2), (Cons gv5 gv2 = l), (Cons gv5 gv2 = gv2)
(Cons gv5 gv2 = rev l), (Cons gv5 gv2 = rev gv2), (Cons gv5 gv2 = app l l), (Cons gv5 gv2 = app l gv2), (Cons gv5 gv2 = app gv2 l), (Cons gv5 gv2 = app gv2 gv2), (Cons n l = l), (Cons n l = gv2), (Cons n l = rev l), (Cons n l = rev gv2)
(Cons n l = app l l), (Cons n l = app l gv2), (Cons n l = app gv2 l), (Cons n l = app gv2 gv2), (Cons n gv2 = l), (Cons n gv2 = gv2), (Cons n gv2 = rev l), (Cons n gv2 = rev gv2), (Cons n gv2 = app l l), (Cons n gv2 = app l gv2)
(Cons n gv2 = app gv2 l), (Cons n gv2 = app gv2 gv2), (rev l = l), (rev l = gv2), (rev l = app l l), (rev l = app l gv2), (rev l = app gv2 l), (rev l = app gv2 gv2), (rev gv2 = l), (rev gv2 = gv2)
(rev gv2 = app l l), (rev gv2 = app l gv2), (rev gv2 = app gv2 l), (rev gv2 = app gv2 gv2), (app l l = l), (app l l = gv2), (app l gv2 = l), (app l gv2 = gv2), (app gv2 l = l), (app gv2 l = gv2)
(app gv2 gv2 = l), (app gv2 gv2 = gv2), (Nil = Cons gv5 l), (Nil = Cons gv5 gv2), (Nil = Cons n l), (Nil = Cons n gv2), (Nil = rev l), (Nil = rev gv2), (Nil = app l l), (Nil = app l gv2)
(Nil = app gv2 l), (Nil = app gv2 gv2), (None = Some gv5), (None = Some n), (Queue l l = amortizeQueue l l), (Queue l l = amortizeQueue l gv2), (Queue l l = amortizeQueue gv2 l), (Queue l l = amortizeQueue gv2 gv2), (Queue l gv2 = amortizeQueue l l), (Queue l gv2 = amortizeQueue l gv2)
(Queue l gv2 = amortizeQueue gv2 l), (Queue l gv2 = amortizeQueue gv2 gv2), (Queue gv2 l = amortizeQueue l l), (Queue gv2 l = amortizeQueue l gv2), (Queue gv2 l = amortizeQueue gv2 l), (Queue gv2 l = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue l l), (Queue gv2 gv2 = amortizeQueue l gv2), (Queue gv2 gv2 = amortizeQueue gv2 l), (Queue gv2 gv2 = amortizeQueue gv2 gv2)
(len l = gv5), (len l = n), (len gv2 = gv5), (len gv2 = n), (None = Some l), (None = Some gv2)

Label: 2 (2)
(n < n), (n <= n), (n = n), (l = l), (l = gv4), (l = gv2), (gv4 = l), (gv4 = gv4), (gv4 = gv2), (gv2 = l)
(gv2 = gv4), (gv2 = gv2), (false = leb n n), (true = leb n n), (n < len l), (n < len gv4), (n < len gv2), (len l < n), (len l < len gv4), (len l < len gv2)
(len gv4 < n), (len gv4 < len l), (len gv4 < len gv2), (len gv2 < n), (len gv2 < len l), (len gv2 < len gv4), (n <= len l), (n <= len gv4), (n <= len gv2), (len l <= n)
(len l <= len gv4), (len l <= len gv2), (len gv4 <= n), (len gv4 <= len l), (len gv4 <= len gv2), (len gv2 <= n), (len gv2 <= len l), (len gv2 <= len gv4), (~ n < n), (~ n <= n)
(n <> n), (l <> l), (l <> gv4), (l <> gv2), (gv4 <> l), (gv4 <> gv4), (gv4 <> gv2), (gv2 <> l), (gv2 <> gv4), (gv2 <> gv2)
(Cons n l = l), (Cons n l = gv4), (Cons n l = gv2), (Cons n l = rev l), (Cons n l = rev gv4), (Cons n l = rev gv2), (Cons n l = app l l), (Cons n l = app l gv4), (Cons n l = app l gv2), (Cons n l = app gv4 l)
(Cons n l = app gv4 gv4), (Cons n l = app gv4 gv2), (Cons n l = app gv2 l), (Cons n l = app gv2 gv4), (Cons n l = app gv2 gv2), (Cons n gv4 = l), (Cons n gv4 = gv4), (Cons n gv4 = gv2), (Cons n gv4 = rev l), (Cons n gv4 = rev gv4)
(Cons n gv4 = rev gv2), (Cons n gv4 = app l l), (Cons n gv4 = app l gv4), (Cons n gv4 = app l gv2), (Cons n gv4 = app gv4 l), (Cons n gv4 = app gv4 gv4), (Cons n gv4 = app gv4 gv2), (Cons n gv4 = app gv2 l), (Cons n gv4 = app gv2 gv4), (Cons n gv4 = app gv2 gv2)
(Cons n gv2 = l), (Cons n gv2 = gv4), (Cons n gv2 = gv2), (Cons n gv2 = rev l), (Cons n gv2 = rev gv4), (Cons n gv2 = rev gv2), (Cons n gv2 = app l l), (Cons n gv2 = app l gv4), (Cons n gv2 = app l gv2), (Cons n gv2 = app gv4 l)
(Cons n gv2 = app gv4 gv4), (Cons n gv2 = app gv4 gv2), (Cons n gv2 = app gv2 l), (Cons n gv2 = app gv2 gv4), (Cons n gv2 = app gv2 gv2), (rev l = l), (rev l = gv4), (rev l = gv2), (rev l = app l l), (rev l = app l gv4)
(rev l = app l gv2), (rev l = app gv4 l), (rev l = app gv4 gv4), (rev l = app gv4 gv2), (rev l = app gv2 l), (rev l = app gv2 gv4), (rev l = app gv2 gv2), (rev gv4 = l), (rev gv4 = gv4), (rev gv4 = gv2)
(rev gv4 = app l l), (rev gv4 = app l gv4), (rev gv4 = app l gv2), (rev gv4 = app gv4 l), (rev gv4 = app gv4 gv4), (rev gv4 = app gv4 gv2), (rev gv4 = app gv2 l), (rev gv4 = app gv2 gv4), (rev gv4 = app gv2 gv2), (rev gv2 = l)
(rev gv2 = gv4), (rev gv2 = gv2), (rev gv2 = app l l), (rev gv2 = app l gv4), (rev gv2 = app l gv2), (rev gv2 = app gv4 l), (rev gv2 = app gv4 gv4), (rev gv2 = app gv4 gv2), (rev gv2 = app gv2 l), (rev gv2 = app gv2 gv4)
(rev gv2 = app gv2 gv2), (app l l = l), (app l l = gv4), (app l l = gv2), (app l gv4 = l), (app l gv4 = gv4), (app l gv4 = gv2), (app l gv2 = l), (app l gv2 = gv4), (app l gv2 = gv2)
(app gv4 l = l), (app gv4 l = gv4), (app gv4 l = gv2), (app gv4 gv4 = l), (app gv4 gv4 = gv4), (app gv4 gv4 = gv2), (app gv4 gv2 = l), (app gv4 gv2 = gv4), (app gv4 gv2 = gv2), (app gv2 l = l)
(app gv2 l = gv4), (app gv2 l = gv2), (app gv2 gv4 = l), (app gv2 gv4 = gv4), (app gv2 gv4 = gv2), (app gv2 gv2 = l), (app gv2 gv2 = gv4), (app gv2 gv2 = gv2), (Nil = Cons n l), (Nil = Cons n gv4)
(Nil = Cons n gv2), (Nil = rev l), (Nil = rev gv4), (Nil = rev gv2), (Nil = app l l), (Nil = app l gv4), (Nil = app l gv2), (Nil = app gv4 l), (Nil = app gv4 gv4), (Nil = app gv4 gv2)
(Nil = app gv2 l), (Nil = app gv2 gv4), (Nil = app gv2 gv2), (None = Some n), (Queue l l = amortizeQueue l l), (Queue l l = amortizeQueue l gv4), (Queue l l = amortizeQueue l gv2), (Queue l l = amortizeQueue gv4 l), (Queue l l = amortizeQueue gv4 gv4), (Queue l l = amortizeQueue gv4 gv2)
(Queue l l = amortizeQueue gv2 l), (Queue l l = amortizeQueue gv2 gv4), (Queue l l = amortizeQueue gv2 gv2), (Queue l gv4 = amortizeQueue l l), (Queue l gv4 = amortizeQueue l gv4), (Queue l gv4 = amortizeQueue l gv2), (Queue l gv4 = amortizeQueue gv4 l), (Queue l gv4 = amortizeQueue gv4 gv4), (Queue l gv4 = amortizeQueue gv4 gv2), (Queue l gv4 = amortizeQueue gv2 l)
(Queue l gv4 = amortizeQueue gv2 gv4), (Queue l gv4 = amortizeQueue gv2 gv2), (Queue l gv2 = amortizeQueue l l), (Queue l gv2 = amortizeQueue l gv4), (Queue l gv2 = amortizeQueue l gv2), (Queue l gv2 = amortizeQueue gv4 l), (Queue l gv2 = amortizeQueue gv4 gv4), (Queue l gv2 = amortizeQueue gv4 gv2), (Queue l gv2 = amortizeQueue gv2 l), (Queue l gv2 = amortizeQueue gv2 gv4)
(Queue l gv2 = amortizeQueue gv2 gv2), (Queue gv4 l = amortizeQueue l l), (Queue gv4 l = amortizeQueue l gv4), (Queue gv4 l = amortizeQueue l gv2), (Queue gv4 l = amortizeQueue gv4 l), (Queue gv4 l = amortizeQueue gv4 gv4), (Queue gv4 l = amortizeQueue gv4 gv2), (Queue gv4 l = amortizeQueue gv2 l), (Queue gv4 l = amortizeQueue gv2 gv4), (Queue gv4 l = amortizeQueue gv2 gv2)
(Queue gv4 gv4 = amortizeQueue l l), (Queue gv4 gv4 = amortizeQueue l gv4), (Queue gv4 gv4 = amortizeQueue l gv2), (Queue gv4 gv4 = amortizeQueue gv4 l), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 gv2), (Queue gv4 gv4 = amortizeQueue gv2 l), (Queue gv4 gv4 = amortizeQueue gv2 gv4), (Queue gv4 gv4 = amortizeQueue gv2 gv2), (Queue gv4 gv2 = amortizeQueue l l)
(Queue gv4 gv2 = amortizeQueue l gv4), (Queue gv4 gv2 = amortizeQueue l gv2), (Queue gv4 gv2 = amortizeQueue gv4 l), (Queue gv4 gv2 = amortizeQueue gv4 gv4), (Queue gv4 gv2 = amortizeQueue gv4 gv2), (Queue gv4 gv2 = amortizeQueue gv2 l), (Queue gv4 gv2 = amortizeQueue gv2 gv4), (Queue gv4 gv2 = amortizeQueue gv2 gv2), (Queue gv2 l = amortizeQueue l l), (Queue gv2 l = amortizeQueue l gv4)
(Queue gv2 l = amortizeQueue l gv2), (Queue gv2 l = amortizeQueue gv4 l), (Queue gv2 l = amortizeQueue gv4 gv4), (Queue gv2 l = amortizeQueue gv4 gv2), (Queue gv2 l = amortizeQueue gv2 l), (Queue gv2 l = amortizeQueue gv2 gv4), (Queue gv2 l = amortizeQueue gv2 gv2), (Queue gv2 gv4 = amortizeQueue l l), (Queue gv2 gv4 = amortizeQueue l gv4), (Queue gv2 gv4 = amortizeQueue l gv2)
(Queue gv2 gv4 = amortizeQueue gv4 l), (Queue gv2 gv4 = amortizeQueue gv4 gv4), (Queue gv2 gv4 = amortizeQueue gv4 gv2), (Queue gv2 gv4 = amortizeQueue gv2 l), (Queue gv2 gv4 = amortizeQueue gv2 gv4), (Queue gv2 gv4 = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue l l), (Queue gv2 gv2 = amortizeQueue l gv4), (Queue gv2 gv2 = amortizeQueue l gv2), (Queue gv2 gv2 = amortizeQueue gv4 l)
(Queue gv2 gv2 = amortizeQueue gv4 gv4), (Queue gv2 gv2 = amortizeQueue gv4 gv2), (Queue gv2 gv2 = amortizeQueue gv2 l), (Queue gv2 gv2 = amortizeQueue gv2 gv4), (Queue gv2 gv2 = amortizeQueue gv2 gv2), (len l = n), (len gv4 = n), (len gv2 = n), (None = Some l), (None = Some gv4)
(None = Some gv2)

Label: 3 (3)
(n < n), (n <= n), (n = n), (gv3 = gv3), (gv3 = l), (l = gv3), (l = l), (false = leb n n), (true = leb n n), (n < len gv3)
(n < len l), (len gv3 < n), (len gv3 < len l), (len l < n), (len l < len gv3), (n <= len gv3), (n <= len l), (len gv3 <= n), (len gv3 <= len l), (len l <= n)
(len l <= len gv3), (~ n < n), (~ n <= n), (n <> n), (gv3 <> gv3), (gv3 <> l), (l <> gv3), (l <> l), (Cons n gv3 = gv3), (Cons n gv3 = l)
(Cons n gv3 = rev gv3), (Cons n gv3 = rev l), (Cons n gv3 = app gv3 gv3), (Cons n gv3 = app gv3 l), (Cons n gv3 = app l gv3), (Cons n gv3 = app l l), (Cons n l = gv3), (Cons n l = l), (Cons n l = rev gv3), (Cons n l = rev l)
(Cons n l = app gv3 gv3), (Cons n l = app gv3 l), (Cons n l = app l gv3), (Cons n l = app l l), (rev gv3 = gv3), (rev gv3 = l), (rev gv3 = app gv3 gv3), (rev gv3 = app gv3 l), (rev gv3 = app l gv3), (rev gv3 = app l l)
(rev l = gv3), (rev l = l), (rev l = app gv3 gv3), (rev l = app gv3 l), (rev l = app l gv3), (rev l = app l l), (app gv3 gv3 = gv3), (app gv3 gv3 = l), (app gv3 l = gv3), (app gv3 l = l)
(app l gv3 = gv3), (app l gv3 = l), (app l l = gv3), (app l l = l), (Nil = Cons n gv3), (Nil = Cons n l), (Nil = rev gv3), (Nil = rev l), (Nil = app gv3 gv3), (Nil = app gv3 l)
(Nil = app l gv3), (Nil = app l l), (None = Some n), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 l), (Queue gv3 gv3 = amortizeQueue l gv3), (Queue gv3 gv3 = amortizeQueue l l), (Queue gv3 l = amortizeQueue gv3 gv3), (Queue gv3 l = amortizeQueue gv3 l), (Queue gv3 l = amortizeQueue l gv3)
(Queue gv3 l = amortizeQueue l l), (Queue l gv3 = amortizeQueue gv3 gv3), (Queue l gv3 = amortizeQueue gv3 l), (Queue l gv3 = amortizeQueue l gv3), (Queue l gv3 = amortizeQueue l l), (Queue l l = amortizeQueue gv3 gv3), (Queue l l = amortizeQueue gv3 l), (Queue l l = amortizeQueue l gv3), (Queue l l = amortizeQueue l l), (len gv3 = n)
(len l = n), (None = Some gv3), (None = Some l)

Label: 4 (4)
(gv5 < gv5), (gv5 < n), (n < gv5), (n < n), (gv5 <= gv5), (gv5 <= n), (n <= gv5), (n <= n), (gv5 = gv5), (gv5 = n)
(n = gv5), (n = n), (l = l), (false = leb gv5 gv5), (false = leb gv5 n), (false = leb n gv5), (false = leb n n), (true = leb gv5 gv5), (true = leb gv5 n), (true = leb n gv5)
(true = leb n n), (gv5 < len l), (n < len l), (len l < gv5), (len l < n), (gv5 <= len l), (n <= len l), (len l <= gv5), (len l <= n), (~ gv5 < gv5)
(~ gv5 < n), (~ n < gv5), (~ n < n), (~ gv5 <= gv5), (~ gv5 <= n), (~ n <= gv5), (~ n <= n), (gv5 <> gv5), (gv5 <> n), (n <> gv5)
(n <> n), (l <> l), (Cons gv5 l = l), (Cons gv5 l = rev l), (Cons gv5 l = app l l), (Cons n l = l), (Cons n l = rev l), (Cons n l = app l l), (rev l = l), (rev l = app l l)
(app l l = l), (Nil = Cons gv5 l), (Nil = Cons n l), (Nil = rev l), (Nil = app l l), (None = Some gv5), (None = Some n), (Queue l l = amortizeQueue l l), (len l = gv5), (len l = n)
(None = Some l)

Label: 5 (5)
(n < n), (n <= n), (n = n), (l = l), (l = gv1), (gv1 = l), (gv1 = gv1), (false = leb n n), (true = leb n n), (n < len l)
(n < len gv1), (len l < n), (len l < len gv1), (len gv1 < n), (len gv1 < len l), (n <= len l), (n <= len gv1), (len l <= n), (len l <= len gv1), (len gv1 <= n)
(len gv1 <= len l), (~ n < n), (~ n <= n), (n <> n), (l <> l), (l <> gv1), (gv1 <> l), (gv1 <> gv1), (Cons n l = l), (Cons n l = gv1)
(Cons n l = rev l), (Cons n l = rev gv1), (Cons n l = app l l), (Cons n l = app l gv1), (Cons n l = app gv1 l), (Cons n l = app gv1 gv1), (Cons n gv1 = l), (Cons n gv1 = gv1), (Cons n gv1 = rev l), (Cons n gv1 = rev gv1)
(Cons n gv1 = app l l), (Cons n gv1 = app l gv1), (Cons n gv1 = app gv1 l), (Cons n gv1 = app gv1 gv1), (rev l = l), (rev l = gv1), (rev l = app l l), (rev l = app l gv1), (rev l = app gv1 l), (rev l = app gv1 gv1)
(rev gv1 = l), (rev gv1 = gv1), (rev gv1 = app l l), (rev gv1 = app l gv1), (rev gv1 = app gv1 l), (rev gv1 = app gv1 gv1), (app l l = l), (app l l = gv1), (app l gv1 = l), (app l gv1 = gv1)
(app gv1 l = l), (app gv1 l = gv1), (app gv1 gv1 = l), (app gv1 gv1 = gv1), (Nil = Cons n l), (Nil = Cons n gv1), (Nil = rev l), (Nil = rev gv1), (Nil = app l l), (Nil = app l gv1)
(Nil = app gv1 l), (Nil = app gv1 gv1), (None = Some n), (Queue l l = amortizeQueue l l), (Queue l l = amortizeQueue l gv1), (Queue l l = amortizeQueue gv1 l), (Queue l l = amortizeQueue gv1 gv1), (Queue l gv1 = amortizeQueue l l), (Queue l gv1 = amortizeQueue l gv1), (Queue l gv1 = amortizeQueue gv1 l)
(Queue l gv1 = amortizeQueue gv1 gv1), (Queue gv1 l = amortizeQueue l l), (Queue gv1 l = amortizeQueue l gv1), (Queue gv1 l = amortizeQueue gv1 l), (Queue gv1 l = amortizeQueue gv1 gv1), (Queue gv1 gv1 = amortizeQueue l l), (Queue gv1 gv1 = amortizeQueue l gv1), (Queue gv1 gv1 = amortizeQueue gv1 l), (Queue gv1 gv1 = amortizeQueue gv1 gv1), (len l = n)
(len gv1 = n), (None = Some l), (None = Some gv1)

Label: 6 (6)
(n < n), (n < gv0), (gv0 < n), (gv0 < gv0), (n <= n), (n <= gv0), (gv0 <= n), (gv0 <= gv0), (l = l), (n = n)
(n = gv0), (gv0 = n), (gv0 = gv0), (false = leb n n), (false = leb n gv0), (false = leb gv0 n), (false = leb gv0 gv0), (true = leb n n), (true = leb n gv0), (true = leb gv0 n)
(true = leb gv0 gv0), (n < len l), (gv0 < len l), (len l < n), (len l < gv0), (n <= len l), (gv0 <= len l), (len l <= n), (len l <= gv0), (~ n < n)
(~ n < gv0), (~ gv0 < n), (~ gv0 < gv0), (~ n <= n), (~ n <= gv0), (~ gv0 <= n), (~ gv0 <= gv0), (l <> l), (n <> n), (n <> gv0)
(gv0 <> n), (gv0 <> gv0), (Cons n l = l), (Cons n l = rev l), (Cons n l = app l l), (Cons gv0 l = l), (Cons gv0 l = rev l), (Cons gv0 l = app l l), (rev l = l), (rev l = app l l)
(app l l = l), (Nil = Cons n l), (Nil = Cons gv0 l), (Nil = rev l), (Nil = app l l), (None = Some n), (None = Some gv0), (Queue l l = amortizeQueue l l), (len l = n), (len l = gv0)
(None = Some l)

Label: 7 (7)
(n < n), (n < gv6), (gv6 < n), (gv6 < gv6), (n <= n), (n <= gv6), (gv6 <= n), (gv6 <= gv6), (n = n), (n = gv6)
(gv6 = n), (gv6 = gv6), (gv3 = gv3), (gv3 = l), (l = gv3), (l = l), (false = leb n n), (false = leb n gv6), (false = leb gv6 n), (false = leb gv6 gv6)
(true = leb n n), (true = leb n gv6), (true = leb gv6 n), (true = leb gv6 gv6), (n < len gv3), (n < len l), (gv6 < len gv3), (gv6 < len l), (len gv3 < n), (len gv3 < gv6)
(len gv3 < len l), (len l < n), (len l < gv6), (len l < len gv3), (n <= len gv3), (n <= len l), (gv6 <= len gv3), (gv6 <= len l), (len gv3 <= n), (len gv3 <= gv6)
(len gv3 <= len l), (len l <= n), (len l <= gv6), (len l <= len gv3), (~ n < n), (~ n < gv6), (~ gv6 < n), (~ gv6 < gv6), (~ n <= n), (~ n <= gv6)
(~ gv6 <= n), (~ gv6 <= gv6), (n <> n), (n <> gv6), (gv6 <> n), (gv6 <> gv6), (gv3 <> gv3), (gv3 <> l), (l <> gv3), (l <> l)
(Cons n gv3 = gv3), (Cons n gv3 = l), (Cons n gv3 = rev gv3), (Cons n gv3 = rev l), (Cons n gv3 = app gv3 gv3), (Cons n gv3 = app gv3 l), (Cons n gv3 = app l gv3), (Cons n gv3 = app l l), (Cons n l = gv3), (Cons n l = l)
(Cons n l = rev gv3), (Cons n l = rev l), (Cons n l = app gv3 gv3), (Cons n l = app gv3 l), (Cons n l = app l gv3), (Cons n l = app l l), (Cons gv6 gv3 = gv3), (Cons gv6 gv3 = l), (Cons gv6 gv3 = rev gv3), (Cons gv6 gv3 = rev l)
(Cons gv6 gv3 = app gv3 gv3), (Cons gv6 gv3 = app gv3 l), (Cons gv6 gv3 = app l gv3), (Cons gv6 gv3 = app l l), (Cons gv6 l = gv3), (Cons gv6 l = l), (Cons gv6 l = rev gv3), (Cons gv6 l = rev l), (Cons gv6 l = app gv3 gv3), (Cons gv6 l = app gv3 l)
(Cons gv6 l = app l gv3), (Cons gv6 l = app l l), (rev gv3 = gv3), (rev gv3 = l), (rev gv3 = app gv3 gv3), (rev gv3 = app gv3 l), (rev gv3 = app l gv3), (rev gv3 = app l l), (rev l = gv3), (rev l = l)
(rev l = app gv3 gv3), (rev l = app gv3 l), (rev l = app l gv3), (rev l = app l l), (app gv3 gv3 = gv3), (app gv3 gv3 = l), (app gv3 l = gv3), (app gv3 l = l), (app l gv3 = gv3), (app l gv3 = l)
(app l l = gv3), (app l l = l), (Nil = Cons n gv3), (Nil = Cons n l), (Nil = Cons gv6 gv3), (Nil = Cons gv6 l), (Nil = rev gv3), (Nil = rev l), (Nil = app gv3 gv3), (Nil = app gv3 l)
(Nil = app l gv3), (Nil = app l l), (None = Some n), (None = Some gv6), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 l), (Queue gv3 gv3 = amortizeQueue l gv3), (Queue gv3 gv3 = amortizeQueue l l), (Queue gv3 l = amortizeQueue gv3 gv3), (Queue gv3 l = amortizeQueue gv3 l)
(Queue gv3 l = amortizeQueue l gv3), (Queue gv3 l = amortizeQueue l l), (Queue l gv3 = amortizeQueue gv3 gv3), (Queue l gv3 = amortizeQueue gv3 l), (Queue l gv3 = amortizeQueue l gv3), (Queue l gv3 = amortizeQueue l l), (Queue l l = amortizeQueue gv3 gv3), (Queue l l = amortizeQueue gv3 l), (Queue l l = amortizeQueue l gv3), (Queue l l = amortizeQueue l l)
(len gv3 = n), (len gv3 = gv6), (len l = n), (len l = gv6), (None = Some gv3), (None = Some l)

Label: 8 (8)
(n < n), (n < gv6), (gv6 < n), (gv6 < gv6), (n <= n), (n <= gv6), (gv6 <= n), (gv6 <= gv6), (n = n), (n = gv6)
(gv6 = n), (gv6 = gv6), (l = l), (l = gv1), (gv1 = l), (gv1 = gv1), (false = leb n n), (false = leb n gv6), (false = leb gv6 n), (false = leb gv6 gv6)
(true = leb n n), (true = leb n gv6), (true = leb gv6 n), (true = leb gv6 gv6), (n < len l), (n < len gv1), (gv6 < len l), (gv6 < len gv1), (len l < n), (len l < gv6)
(len l < len gv1), (len gv1 < n), (len gv1 < gv6), (len gv1 < len l), (n <= len l), (n <= len gv1), (gv6 <= len l), (gv6 <= len gv1), (len l <= n), (len l <= gv6)
(len l <= len gv1), (len gv1 <= n), (len gv1 <= gv6), (len gv1 <= len l), (~ n < n), (~ n < gv6), (~ gv6 < n), (~ gv6 < gv6), (~ n <= n), (~ n <= gv6)
(~ gv6 <= n), (~ gv6 <= gv6), (n <> n), (n <> gv6), (gv6 <> n), (gv6 <> gv6), (l <> l), (l <> gv1), (gv1 <> l), (gv1 <> gv1)
(Cons n l = l), (Cons n l = gv1), (Cons n l = rev l), (Cons n l = rev gv1), (Cons n l = app l l), (Cons n l = app l gv1), (Cons n l = app gv1 l), (Cons n l = app gv1 gv1), (Cons n gv1 = l), (Cons n gv1 = gv1)
(Cons n gv1 = rev l), (Cons n gv1 = rev gv1), (Cons n gv1 = app l l), (Cons n gv1 = app l gv1), (Cons n gv1 = app gv1 l), (Cons n gv1 = app gv1 gv1), (Cons gv6 l = l), (Cons gv6 l = gv1), (Cons gv6 l = rev l), (Cons gv6 l = rev gv1)
(Cons gv6 l = app l l), (Cons gv6 l = app l gv1), (Cons gv6 l = app gv1 l), (Cons gv6 l = app gv1 gv1), (Cons gv6 gv1 = l), (Cons gv6 gv1 = gv1), (Cons gv6 gv1 = rev l), (Cons gv6 gv1 = rev gv1), (Cons gv6 gv1 = app l l), (Cons gv6 gv1 = app l gv1)
(Cons gv6 gv1 = app gv1 l), (Cons gv6 gv1 = app gv1 gv1), (rev l = l), (rev l = gv1), (rev l = app l l), (rev l = app l gv1), (rev l = app gv1 l), (rev l = app gv1 gv1), (rev gv1 = l), (rev gv1 = gv1)
(rev gv1 = app l l), (rev gv1 = app l gv1), (rev gv1 = app gv1 l), (rev gv1 = app gv1 gv1), (app l l = l), (app l l = gv1), (app l gv1 = l), (app l gv1 = gv1), (app gv1 l = l), (app gv1 l = gv1)
(app gv1 gv1 = l), (app gv1 gv1 = gv1), (Nil = Cons n l), (Nil = Cons n gv1), (Nil = Cons gv6 l), (Nil = Cons gv6 gv1), (Nil = rev l), (Nil = rev gv1), (Nil = app l l), (Nil = app l gv1)
(Nil = app gv1 l), (Nil = app gv1 gv1), (None = Some n), (None = Some gv6), (Queue l l = amortizeQueue l l), (Queue l l = amortizeQueue l gv1), (Queue l l = amortizeQueue gv1 l), (Queue l l = amortizeQueue gv1 gv1), (Queue l gv1 = amortizeQueue l l), (Queue l gv1 = amortizeQueue l gv1)
(Queue l gv1 = amortizeQueue gv1 l), (Queue l gv1 = amortizeQueue gv1 gv1), (Queue gv1 l = amortizeQueue l l), (Queue gv1 l = amortizeQueue l gv1), (Queue gv1 l = amortizeQueue gv1 l), (Queue gv1 l = amortizeQueue gv1 gv1), (Queue gv1 gv1 = amortizeQueue l l), (Queue gv1 gv1 = amortizeQueue l gv1), (Queue gv1 gv1 = amortizeQueue gv1 l), (Queue gv1 gv1 = amortizeQueue gv1 gv1)
(len l = n), (len l = gv6), (len gv1 = n), (len gv1 = gv6), (None = Some l), (None = Some gv1)

Label: 9 (9)
(n < n), (n < gv6), (n < gv0), (gv6 < n), (gv6 < gv6), (gv6 < gv0), (gv0 < n), (gv0 < gv6), (gv0 < gv0), (n <= n)
(n <= gv6), (n <= gv0), (gv6 <= n), (gv6 <= gv6), (gv6 <= gv0), (gv0 <= n), (gv0 <= gv6), (gv0 <= gv0), (l = l), (n = n)
(n = gv6), (n = gv0), (gv6 = n), (gv6 = gv6), (gv6 = gv0), (gv0 = n), (gv0 = gv6), (gv0 = gv0), (false = leb n n), (false = leb n gv6)
(false = leb n gv0), (false = leb gv6 n), (false = leb gv6 gv6), (false = leb gv6 gv0), (false = leb gv0 n), (false = leb gv0 gv6), (false = leb gv0 gv0), (true = leb n n), (true = leb n gv6), (true = leb n gv0)
(true = leb gv6 n), (true = leb gv6 gv6), (true = leb gv6 gv0), (true = leb gv0 n), (true = leb gv0 gv6), (true = leb gv0 gv0), (n < len l), (gv6 < len l), (gv0 < len l), (len l < n)
(len l < gv6), (len l < gv0), (n <= len l), (gv6 <= len l), (gv0 <= len l), (len l <= n), (len l <= gv6), (len l <= gv0), (~ n < n), (~ n < gv6)
(~ n < gv0), (~ gv6 < n), (~ gv6 < gv6), (~ gv6 < gv0), (~ gv0 < n), (~ gv0 < gv6), (~ gv0 < gv0), (~ n <= n), (~ n <= gv6), (~ n <= gv0)
(~ gv6 <= n), (~ gv6 <= gv6), (~ gv6 <= gv0), (~ gv0 <= n), (~ gv0 <= gv6), (~ gv0 <= gv0), (l <> l), (n <> n), (n <> gv6), (n <> gv0)
(gv6 <> n), (gv6 <> gv6), (gv6 <> gv0), (gv0 <> n), (gv0 <> gv6), (gv0 <> gv0), (Cons n l = l), (Cons n l = rev l), (Cons n l = app l l), (Cons gv6 l = l)
(Cons gv6 l = rev l), (Cons gv6 l = app l l), (Cons gv0 l = l), (Cons gv0 l = rev l), (Cons gv0 l = app l l), (rev l = l), (rev l = app l l), (app l l = l), (Nil = Cons n l), (Nil = Cons gv6 l)
(Nil = Cons gv0 l), (Nil = rev l), (Nil = app l l), (None = Some n), (None = Some gv6), (None = Some gv0), (Queue l l = amortizeQueue l l), (len l = n), (len l = gv6), (len l = gv0)
(None = Some l)

Label: 10 (10)
(gv6 < gv6), (gv6 < n), (n < gv6), (n < n), (gv6 <= gv6), (gv6 <= n), (n <= gv6), (n <= n), (gv6 = gv6), (gv6 = n)
(n = gv6), (n = n), (gv4 = gv4), (gv4 = l), (l = gv4), (l = l), (false = leb gv6 gv6), (false = leb gv6 n), (false = leb n gv6), (false = leb n n)
(true = leb gv6 gv6), (true = leb gv6 n), (true = leb n gv6), (true = leb n n), (gv6 < len gv4), (gv6 < len l), (n < len gv4), (n < len l), (len gv4 < gv6), (len gv4 < n)
(len gv4 < len l), (len l < gv6), (len l < n), (len l < len gv4), (gv6 <= len gv4), (gv6 <= len l), (n <= len gv4), (n <= len l), (len gv4 <= gv6), (len gv4 <= n)
(len gv4 <= len l), (len l <= gv6), (len l <= n), (len l <= len gv4), (~ gv6 < gv6), (~ gv6 < n), (~ n < gv6), (~ n < n), (~ gv6 <= gv6), (~ gv6 <= n)
(~ n <= gv6), (~ n <= n), (gv6 <> gv6), (gv6 <> n), (n <> gv6), (n <> n), (gv4 <> gv4), (gv4 <> l), (l <> gv4), (l <> l)
(Cons gv6 gv4 = gv4), (Cons gv6 gv4 = l), (Cons gv6 gv4 = rev gv4), (Cons gv6 gv4 = rev l), (Cons gv6 gv4 = app gv4 gv4), (Cons gv6 gv4 = app gv4 l), (Cons gv6 gv4 = app l gv4), (Cons gv6 gv4 = app l l), (Cons gv6 l = gv4), (Cons gv6 l = l)
(Cons gv6 l = rev gv4), (Cons gv6 l = rev l), (Cons gv6 l = app gv4 gv4), (Cons gv6 l = app gv4 l), (Cons gv6 l = app l gv4), (Cons gv6 l = app l l), (Cons n gv4 = gv4), (Cons n gv4 = l), (Cons n gv4 = rev gv4), (Cons n gv4 = rev l)
(Cons n gv4 = app gv4 gv4), (Cons n gv4 = app gv4 l), (Cons n gv4 = app l gv4), (Cons n gv4 = app l l), (Cons n l = gv4), (Cons n l = l), (Cons n l = rev gv4), (Cons n l = rev l), (Cons n l = app gv4 gv4), (Cons n l = app gv4 l)
(Cons n l = app l gv4), (Cons n l = app l l), (rev gv4 = gv4), (rev gv4 = l), (rev gv4 = app gv4 gv4), (rev gv4 = app gv4 l), (rev gv4 = app l gv4), (rev gv4 = app l l), (rev l = gv4), (rev l = l)
(rev l = app gv4 gv4), (rev l = app gv4 l), (rev l = app l gv4), (rev l = app l l), (app gv4 gv4 = gv4), (app gv4 gv4 = l), (app gv4 l = gv4), (app gv4 l = l), (app l gv4 = gv4), (app l gv4 = l)
(app l l = gv4), (app l l = l), (Nil = Cons gv6 gv4), (Nil = Cons gv6 l), (Nil = Cons n gv4), (Nil = Cons n l), (Nil = rev gv4), (Nil = rev l), (Nil = app gv4 gv4), (Nil = app gv4 l)
(Nil = app l gv4), (Nil = app l l), (None = Some gv6), (None = Some n), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 l), (Queue gv4 gv4 = amortizeQueue l gv4), (Queue gv4 gv4 = amortizeQueue l l), (Queue gv4 l = amortizeQueue gv4 gv4), (Queue gv4 l = amortizeQueue gv4 l)
(Queue gv4 l = amortizeQueue l gv4), (Queue gv4 l = amortizeQueue l l), (Queue l gv4 = amortizeQueue gv4 gv4), (Queue l gv4 = amortizeQueue gv4 l), (Queue l gv4 = amortizeQueue l gv4), (Queue l gv4 = amortizeQueue l l), (Queue l l = amortizeQueue gv4 gv4), (Queue l l = amortizeQueue gv4 l), (Queue l l = amortizeQueue l gv4), (Queue l l = amortizeQueue l l)
(len gv4 = gv6), (len gv4 = n), (len l = gv6), (len l = n), (None = Some gv4), (None = Some l)

Label: 11 (11)
(n < n), (n <= n), (n = n), (gv4 = gv4), (gv4 = l), (l = gv4), (l = l), (false = leb n n), (true = leb n n), (n < len gv4)
(n < len l), (len gv4 < n), (len gv4 < len l), (len l < n), (len l < len gv4), (n <= len gv4), (n <= len l), (len gv4 <= n), (len gv4 <= len l), (len l <= n)
(len l <= len gv4), (~ n < n), (~ n <= n), (n <> n), (gv4 <> gv4), (gv4 <> l), (l <> gv4), (l <> l), (Cons n gv4 = gv4), (Cons n gv4 = l)
(Cons n gv4 = rev gv4), (Cons n gv4 = rev l), (Cons n gv4 = app gv4 gv4), (Cons n gv4 = app gv4 l), (Cons n gv4 = app l gv4), (Cons n gv4 = app l l), (Cons n l = gv4), (Cons n l = l), (Cons n l = rev gv4), (Cons n l = rev l)
(Cons n l = app gv4 gv4), (Cons n l = app gv4 l), (Cons n l = app l gv4), (Cons n l = app l l), (rev gv4 = gv4), (rev gv4 = l), (rev gv4 = app gv4 gv4), (rev gv4 = app gv4 l), (rev gv4 = app l gv4), (rev gv4 = app l l)
(rev l = gv4), (rev l = l), (rev l = app gv4 gv4), (rev l = app gv4 l), (rev l = app l gv4), (rev l = app l l), (app gv4 gv4 = gv4), (app gv4 gv4 = l), (app gv4 l = gv4), (app gv4 l = l)
(app l gv4 = gv4), (app l gv4 = l), (app l l = gv4), (app l l = l), (Nil = Cons n gv4), (Nil = Cons n l), (Nil = rev gv4), (Nil = rev l), (Nil = app gv4 gv4), (Nil = app gv4 l)
(Nil = app l gv4), (Nil = app l l), (None = Some n), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 l), (Queue gv4 gv4 = amortizeQueue l gv4), (Queue gv4 gv4 = amortizeQueue l l), (Queue gv4 l = amortizeQueue gv4 gv4), (Queue gv4 l = amortizeQueue gv4 l), (Queue gv4 l = amortizeQueue l gv4)
(Queue gv4 l = amortizeQueue l l), (Queue l gv4 = amortizeQueue gv4 gv4), (Queue l gv4 = amortizeQueue gv4 l), (Queue l gv4 = amortizeQueue l gv4), (Queue l gv4 = amortizeQueue l l), (Queue l l = amortizeQueue gv4 gv4), (Queue l l = amortizeQueue gv4 l), (Queue l l = amortizeQueue l gv4), (Queue l l = amortizeQueue l l), (len gv4 = n)
(len l = n), (None = Some gv4), (None = Some l)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 318.87 seconds


Label: 0 (0)

Label: 1 (1)

Label: 2 (2)
(rev l = app gv4 gv2), (rev l = app gv2 gv4)

Label: 3 (3)
(Cons n l = app gv3 l), (Cons n gv3 = app gv3 gv3)

Label: 4 (4)

Label: 5 (5)
(Cons n l = rev gv1)

Label: 6 (6)

Label: 7 (7)

Label: 8 (8)

Label: 9 (9)

Label: 10 (10)

Label: 11 (11)
(Nil = rev gv4), (app gv4 l = l), (app l gv4 = l), (app gv4 gv4 = gv4), (Nil = app gv4 gv4), (rev gv4 = app gv4 gv4)


------------------------------ ALL RESULTS ------------------------------
1. (len gv2 = gv6 -> len (app gv2 (Cons n Nil)) = S gv6)

2. (len gv2 = len l -> len (app gv2 (Cons n Nil)) = S (len l))

3. (len (rev l) = gv6 -> len (app (rev l) (Cons n Nil)) = S gv6)

4. (len (app (rev l) (Cons n Nil)) = S (len l))

5. (app Nil Nil = Nil)

6. (Nil = rev gv4 -> len (app (rev l) (Cons n gv4)) = S (len l))

7. (app gv4 l = l -> len (app (rev l) (Cons n gv4)) = S (len l))

8. (app l gv4 = l -> len (app (rev l) (Cons n gv4)) = S (len l))

9. (app gv4 gv4 = gv4 -> len (app (rev l) (Cons n gv4)) = S (len l))

10. (Nil = app gv4 gv4 -> len (app (rev l) (Cons n gv4)) = S (len l))

11. (rev l = app gv4 gv2 -> len (app gv2 (Cons n gv4)) = S (len l))

12. (rev l = app gv2 gv4 -> len (app gv2 (Cons n gv4)) = S (len l))

13. (Cons n l = rev gv1 -> len gv1 = S (len l))

14. (rev gv4 = app gv4 gv4 -> len (app (rev l) (Cons n gv4)) = S (len l))

15. (Cons n l = app gv3 l -> len (app (rev l) gv3) = S (len l))

16. (Cons n gv3 = app gv3 gv3 -> len (app (rev l) gv3) = S (len l))



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 349.645 seconds

Number of Result Pairs Returned: 16

1. (len gv2 = gv6 -> len (app gv2 (Cons n Nil)) = S gv6)

2. (len gv2 = len l -> len (app gv2 (Cons n Nil)) = S (len l))

3. (len (rev l) = gv6 -> len (app (rev l) (Cons n Nil)) = S gv6)

4. (len (app (rev l) (Cons n Nil)) = S (len l))

5. (Nil = rev gv4 -> len (app (rev l) (Cons n gv4)) = S (len l))
