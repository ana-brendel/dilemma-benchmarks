Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (len (app l1 (rev l2)) = len l1 + len l2)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 1.546 seconds

gv1 : lst = (app l1 (rev l2))
gv4 : nat = (len l1)
gv2 : lst = (rev l2)
gv0 : nat = (len (app l1 (rev l2)))
gv3 : nat = (len l1 + len l2)
gv5 : nat = (len l2)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 28.279 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (len (app l1 (rev l2)) = len l1 + len l2)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (len l2 = gv5)

----------------------------------
Goal: (len (app l1 (rev l2)) = len l1 + gv5)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (len l1 + len l2 = gv3)

----------------------------------
Goal: (len (app l1 (rev l2)) = gv3)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (len (app l1 (rev l2)) = gv0)

----------------------------------
Goal: (gv0 = len l1 + len l2)
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (rev l2 = gv2)

----------------------------------
Goal: (len (app l1 gv2) = len l1 + len l2)
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (len l1 = gv4)

----------------------------------
Goal: (len (app l1 (rev l2)) = gv4 + len l2)
Case: Invalid and Generalized

Label: Generalization #6
Assumptions: 
 -- (app l1 (rev l2) = gv1)

----------------------------------
Goal: (len gv1 = len l1 + len l2)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 28.42 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
Datatypes.app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
lst : Set
queue : Set
len : (lst -> nat)
qlen : (queue -> nat)
app : (lst -> lst -> lst)
rev : (lst -> lst)
leb : (nat -> nat -> bool)
amortizeQueue : (lst -> lst -> queue)
Nil : lst
Cons : (nat -> lst -> lst)
Queue : (lst -> lst -> queue)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 28.576 seconds


Label: 0 (0)
(gv5 < gv5), (gv5 <= gv5), (gv5 = gv5), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1), (false = leb gv5 gv5), (true = leb gv5 gv5), (gv5 < len l2)
(gv5 < len l1), (len l2 < gv5), (len l2 < len l1), (len l1 < gv5), (len l1 < len l2), (gv5 <= len l2), (gv5 <= len l1), (len l2 <= gv5), (len l2 <= len l1), (len l1 <= gv5)
(len l1 <= len l2), (~ gv5 < gv5), (~ gv5 <= gv5), (gv5 <> gv5), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 l1)
(Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l2 l2), (Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 l1)
(Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue l1 l2), (Queue l1 l1 = amortizeQueue l1 l1), (None = Some gv5), (None = Some l2), (None = Some l1), (len l2 = gv5), (len l1 = gv5), (Cons gv5 l2 = l2)
(Cons gv5 l2 = l1), (Cons gv5 l2 = rev l2), (Cons gv5 l2 = rev l1), (Cons gv5 l2 = app l2 l2), (Cons gv5 l2 = app l2 l1), (Cons gv5 l2 = app l1 l2), (Cons gv5 l2 = app l1 l1), (Cons gv5 l1 = l2), (Cons gv5 l1 = l1), (Cons gv5 l1 = rev l2)
(Cons gv5 l1 = rev l1), (Cons gv5 l1 = app l2 l2), (Cons gv5 l1 = app l2 l1), (Cons gv5 l1 = app l1 l2), (Cons gv5 l1 = app l1 l1), (rev l2 = l2), (rev l2 = l1), (rev l2 = app l2 l2), (rev l2 = app l2 l1), (rev l2 = app l1 l2)
(rev l2 = app l1 l1), (rev l1 = l2), (rev l1 = l1), (rev l1 = app l2 l2), (rev l1 = app l2 l1), (rev l1 = app l1 l2), (rev l1 = app l1 l1), (app l2 l2 = l2), (app l2 l2 = l1), (app l2 l1 = l2)
(app l2 l1 = l1), (app l1 l2 = l2), (app l1 l2 = l1), (app l1 l1 = l2), (app l1 l1 = l1), (Nil = Cons gv5 l2), (Nil = Cons gv5 l1), (Nil = rev l2), (Nil = rev l1), (Nil = app l2 l2)
(Nil = app l2 l1), (Nil = app l1 l2), (Nil = app l1 l1)

Label: 1 (1)
(gv3 < gv3), (gv3 <= gv3), (gv3 = gv3), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1), (false = leb gv3 gv3), (true = leb gv3 gv3), (gv3 < len l2)
(gv3 < len l1), (len l2 < gv3), (len l2 < len l1), (len l1 < gv3), (len l1 < len l2), (gv3 <= len l2), (gv3 <= len l1), (len l2 <= gv3), (len l2 <= len l1), (len l1 <= gv3)
(len l1 <= len l2), (~ gv3 < gv3), (~ gv3 <= gv3), (gv3 <> gv3), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 l1)
(Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l2 l2), (Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 l1)
(Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue l1 l2), (Queue l1 l1 = amortizeQueue l1 l1), (None = Some gv3), (None = Some l2), (None = Some l1), (len l2 = gv3), (len l1 = gv3), (Cons gv3 l2 = l2)
(Cons gv3 l2 = l1), (Cons gv3 l2 = rev l2), (Cons gv3 l2 = rev l1), (Cons gv3 l2 = app l2 l2), (Cons gv3 l2 = app l2 l1), (Cons gv3 l2 = app l1 l2), (Cons gv3 l2 = app l1 l1), (Cons gv3 l1 = l2), (Cons gv3 l1 = l1), (Cons gv3 l1 = rev l2)
(Cons gv3 l1 = rev l1), (Cons gv3 l1 = app l2 l2), (Cons gv3 l1 = app l2 l1), (Cons gv3 l1 = app l1 l2), (Cons gv3 l1 = app l1 l1), (rev l2 = l2), (rev l2 = l1), (rev l2 = app l2 l2), (rev l2 = app l2 l1), (rev l2 = app l1 l2)
(rev l2 = app l1 l1), (rev l1 = l2), (rev l1 = l1), (rev l1 = app l2 l2), (rev l1 = app l2 l1), (rev l1 = app l1 l2), (rev l1 = app l1 l1), (app l2 l2 = l2), (app l2 l2 = l1), (app l2 l1 = l2)
(app l2 l1 = l1), (app l1 l2 = l2), (app l1 l2 = l1), (app l1 l1 = l2), (app l1 l1 = l1), (Nil = Cons gv3 l2), (Nil = Cons gv3 l1), (Nil = rev l2), (Nil = rev l1), (Nil = app l2 l2)
(Nil = app l2 l1), (Nil = app l1 l2), (Nil = app l1 l1)

Label: 2 (2)
(gv0 < gv0), (gv0 <= gv0), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1), (gv0 = gv0), (false = leb gv0 gv0), (true = leb gv0 gv0), (gv0 < len l2)
(gv0 < len l1), (len l2 < gv0), (len l2 < len l1), (len l1 < gv0), (len l1 < len l2), (gv0 <= len l2), (gv0 <= len l1), (len l2 <= gv0), (len l2 <= len l1), (len l1 <= gv0)
(len l1 <= len l2), (~ gv0 < gv0), (~ gv0 <= gv0), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (gv0 <> gv0), (Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 l1)
(Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l2 l2), (Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 l1)
(Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue l1 l2), (Queue l1 l1 = amortizeQueue l1 l1), (None = Some gv0), (None = Some l2), (None = Some l1), (len l2 = gv0), (len l1 = gv0), (Cons gv0 l2 = l2)
(Cons gv0 l2 = l1), (Cons gv0 l2 = rev l2), (Cons gv0 l2 = rev l1), (Cons gv0 l2 = app l2 l2), (Cons gv0 l2 = app l2 l1), (Cons gv0 l2 = app l1 l2), (Cons gv0 l2 = app l1 l1), (Cons gv0 l1 = l2), (Cons gv0 l1 = l1), (Cons gv0 l1 = rev l2)
(Cons gv0 l1 = rev l1), (Cons gv0 l1 = app l2 l2), (Cons gv0 l1 = app l2 l1), (Cons gv0 l1 = app l1 l2), (Cons gv0 l1 = app l1 l1), (rev l2 = l2), (rev l2 = l1), (rev l2 = app l2 l2), (rev l2 = app l2 l1), (rev l2 = app l1 l2)
(rev l2 = app l1 l1), (rev l1 = l2), (rev l1 = l1), (rev l1 = app l2 l2), (rev l1 = app l2 l1), (rev l1 = app l1 l2), (rev l1 = app l1 l1), (app l2 l2 = l2), (app l2 l2 = l1), (app l2 l1 = l2)
(app l2 l1 = l1), (app l1 l2 = l2), (app l1 l2 = l1), (app l1 l1 = l2), (app l1 l1 = l1), (Nil = Cons gv0 l2), (Nil = Cons gv0 l1), (Nil = rev l2), (Nil = rev l1), (Nil = app l2 l2)
(Nil = app l2 l1), (Nil = app l1 l2), (Nil = app l1 l1)

Label: 3 (3)
(l2 = l2), (l2 = gv2), (l2 = l1), (gv2 = l2), (gv2 = gv2), (gv2 = l1), (l1 = l2), (l1 = gv2), (l1 = l1), (len l2 < len gv2)
(len l2 < len l1), (len gv2 < len l2), (len gv2 < len l1), (len l1 < len l2), (len l1 < len gv2), (len l2 <= len gv2), (len l2 <= len l1), (len gv2 <= len l2), (len gv2 <= len l1), (len l1 <= len l2)
(len l1 <= len gv2), (l2 <> l2), (l2 <> gv2), (l2 <> l1), (gv2 <> l2), (gv2 <> gv2), (gv2 <> l1), (l1 <> l2), (l1 <> gv2), (l1 <> l1)
(Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 gv2), (Queue l2 l2 = amortizeQueue l2 l1), (Queue l2 l2 = amortizeQueue gv2 l2), (Queue l2 l2 = amortizeQueue gv2 gv2), (Queue l2 l2 = amortizeQueue gv2 l1), (Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 gv2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 gv2 = amortizeQueue l2 l2)
(Queue l2 gv2 = amortizeQueue l2 gv2), (Queue l2 gv2 = amortizeQueue l2 l1), (Queue l2 gv2 = amortizeQueue gv2 l2), (Queue l2 gv2 = amortizeQueue gv2 gv2), (Queue l2 gv2 = amortizeQueue gv2 l1), (Queue l2 gv2 = amortizeQueue l1 l2), (Queue l2 gv2 = amortizeQueue l1 gv2), (Queue l2 gv2 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l2 l2), (Queue l2 l1 = amortizeQueue l2 gv2)
(Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue gv2 l2), (Queue l2 l1 = amortizeQueue gv2 gv2), (Queue l2 l1 = amortizeQueue gv2 l1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 gv2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue gv2 l2 = amortizeQueue l2 l2), (Queue gv2 l2 = amortizeQueue l2 gv2), (Queue gv2 l2 = amortizeQueue l2 l1)
(Queue gv2 l2 = amortizeQueue gv2 l2), (Queue gv2 l2 = amortizeQueue gv2 gv2), (Queue gv2 l2 = amortizeQueue gv2 l1), (Queue gv2 l2 = amortizeQueue l1 l2), (Queue gv2 l2 = amortizeQueue l1 gv2), (Queue gv2 l2 = amortizeQueue l1 l1), (Queue gv2 gv2 = amortizeQueue l2 l2), (Queue gv2 gv2 = amortizeQueue l2 gv2), (Queue gv2 gv2 = amortizeQueue l2 l1), (Queue gv2 gv2 = amortizeQueue gv2 l2)
(Queue gv2 gv2 = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue gv2 l1), (Queue gv2 gv2 = amortizeQueue l1 l2), (Queue gv2 gv2 = amortizeQueue l1 gv2), (Queue gv2 gv2 = amortizeQueue l1 l1), (Queue gv2 l1 = amortizeQueue l2 l2), (Queue gv2 l1 = amortizeQueue l2 gv2), (Queue gv2 l1 = amortizeQueue l2 l1), (Queue gv2 l1 = amortizeQueue gv2 l2), (Queue gv2 l1 = amortizeQueue gv2 gv2)
(Queue gv2 l1 = amortizeQueue gv2 l1), (Queue gv2 l1 = amortizeQueue l1 l2), (Queue gv2 l1 = amortizeQueue l1 gv2), (Queue gv2 l1 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 gv2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue gv2 l2), (Queue l1 l2 = amortizeQueue gv2 gv2), (Queue l1 l2 = amortizeQueue gv2 l1)
(Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 gv2), (Queue l1 l2 = amortizeQueue l1 l1), (Queue l1 gv2 = amortizeQueue l2 l2), (Queue l1 gv2 = amortizeQueue l2 gv2), (Queue l1 gv2 = amortizeQueue l2 l1), (Queue l1 gv2 = amortizeQueue gv2 l2), (Queue l1 gv2 = amortizeQueue gv2 gv2), (Queue l1 gv2 = amortizeQueue gv2 l1), (Queue l1 gv2 = amortizeQueue l1 l2)
(Queue l1 gv2 = amortizeQueue l1 gv2), (Queue l1 gv2 = amortizeQueue l1 l1), (Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 gv2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue gv2 l2), (Queue l1 l1 = amortizeQueue gv2 gv2), (Queue l1 l1 = amortizeQueue gv2 l1), (Queue l1 l1 = amortizeQueue l1 l2), (Queue l1 l1 = amortizeQueue l1 gv2)
(Queue l1 l1 = amortizeQueue l1 l1), (None = Some l2), (None = Some gv2), (None = Some l1), (rev l2 = l2), (rev l2 = gv2), (rev l2 = l1), (rev l2 = app l2 l2), (rev l2 = app l2 gv2), (rev l2 = app l2 l1)
(rev l2 = app gv2 l2), (rev l2 = app gv2 gv2), (rev l2 = app gv2 l1), (rev l2 = app l1 l2), (rev l2 = app l1 gv2), (rev l2 = app l1 l1), (rev gv2 = l2), (rev gv2 = gv2), (rev gv2 = l1), (rev gv2 = app l2 l2)
(rev gv2 = app l2 gv2), (rev gv2 = app l2 l1), (rev gv2 = app gv2 l2), (rev gv2 = app gv2 gv2), (rev gv2 = app gv2 l1), (rev gv2 = app l1 l2), (rev gv2 = app l1 gv2), (rev gv2 = app l1 l1), (rev l1 = l2), (rev l1 = gv2)
(rev l1 = l1), (rev l1 = app l2 l2), (rev l1 = app l2 gv2), (rev l1 = app l2 l1), (rev l1 = app gv2 l2), (rev l1 = app gv2 gv2), (rev l1 = app gv2 l1), (rev l1 = app l1 l2), (rev l1 = app l1 gv2), (rev l1 = app l1 l1)
(app l2 l2 = l2), (app l2 l2 = gv2), (app l2 l2 = l1), (app l2 gv2 = l2), (app l2 gv2 = gv2), (app l2 gv2 = l1), (app l2 l1 = l2), (app l2 l1 = gv2), (app l2 l1 = l1), (app gv2 l2 = l2)
(app gv2 l2 = gv2), (app gv2 l2 = l1), (app gv2 gv2 = l2), (app gv2 gv2 = gv2), (app gv2 gv2 = l1), (app gv2 l1 = l2), (app gv2 l1 = gv2), (app gv2 l1 = l1), (app l1 l2 = l2), (app l1 l2 = gv2)
(app l1 l2 = l1), (app l1 gv2 = l2), (app l1 gv2 = gv2), (app l1 gv2 = l1), (app l1 l1 = l2), (app l1 l1 = gv2), (app l1 l1 = l1), (Nil = rev l2), (Nil = rev gv2), (Nil = rev l1)
(Nil = app l2 l2), (Nil = app l2 gv2), (Nil = app l2 l1), (Nil = app gv2 l2), (Nil = app gv2 gv2), (Nil = app gv2 l1), (Nil = app l1 l2), (Nil = app l1 gv2), (Nil = app l1 l1)

Label: 4 (4)
(gv4 < gv4), (gv4 <= gv4), (gv4 = gv4), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1), (false = leb gv4 gv4), (true = leb gv4 gv4), (gv4 < len l2)
(gv4 < len l1), (len l2 < gv4), (len l2 < len l1), (len l1 < gv4), (len l1 < len l2), (gv4 <= len l2), (gv4 <= len l1), (len l2 <= gv4), (len l2 <= len l1), (len l1 <= gv4)
(len l1 <= len l2), (~ gv4 < gv4), (~ gv4 <= gv4), (gv4 <> gv4), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 l1)
(Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l2 l2), (Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 l1)
(Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue l1 l2), (Queue l1 l1 = amortizeQueue l1 l1), (None = Some gv4), (None = Some l2), (None = Some l1), (len l2 = gv4), (len l1 = gv4), (Cons gv4 l2 = l2)
(Cons gv4 l2 = l1), (Cons gv4 l2 = rev l2), (Cons gv4 l2 = rev l1), (Cons gv4 l2 = app l2 l2), (Cons gv4 l2 = app l2 l1), (Cons gv4 l2 = app l1 l2), (Cons gv4 l2 = app l1 l1), (Cons gv4 l1 = l2), (Cons gv4 l1 = l1), (Cons gv4 l1 = rev l2)
(Cons gv4 l1 = rev l1), (Cons gv4 l1 = app l2 l2), (Cons gv4 l1 = app l2 l1), (Cons gv4 l1 = app l1 l2), (Cons gv4 l1 = app l1 l1), (rev l2 = l2), (rev l2 = l1), (rev l2 = app l2 l2), (rev l2 = app l2 l1), (rev l2 = app l1 l2)
(rev l2 = app l1 l1), (rev l1 = l2), (rev l1 = l1), (rev l1 = app l2 l2), (rev l1 = app l2 l1), (rev l1 = app l1 l2), (rev l1 = app l1 l1), (app l2 l2 = l2), (app l2 l2 = l1), (app l2 l1 = l2)
(app l2 l1 = l1), (app l1 l2 = l2), (app l1 l2 = l1), (app l1 l1 = l2), (app l1 l1 = l1), (Nil = Cons gv4 l2), (Nil = Cons gv4 l1), (Nil = rev l2), (Nil = rev l1), (Nil = app l2 l2)
(Nil = app l2 l1), (Nil = app l1 l2), (Nil = app l1 l1)

Label: 5 (5)
(l2 = l2), (l2 = l1), (l2 = gv1), (l1 = l2), (l1 = l1), (l1 = gv1), (gv1 = l2), (gv1 = l1), (gv1 = gv1), (len l2 < len l1)
(len l2 < len gv1), (len l1 < len l2), (len l1 < len gv1), (len gv1 < len l2), (len gv1 < len l1), (len l2 <= len l1), (len l2 <= len gv1), (len l1 <= len l2), (len l1 <= len gv1), (len gv1 <= len l2)
(len gv1 <= len l1), (l2 <> l2), (l2 <> l1), (l2 <> gv1), (l1 <> l2), (l1 <> l1), (l1 <> gv1), (gv1 <> l2), (gv1 <> l1), (gv1 <> gv1)
(Queue l2 l2 = amortizeQueue l2 l2), (Queue l2 l2 = amortizeQueue l2 l1), (Queue l2 l2 = amortizeQueue l2 gv1), (Queue l2 l2 = amortizeQueue l1 l2), (Queue l2 l2 = amortizeQueue l1 l1), (Queue l2 l2 = amortizeQueue l1 gv1), (Queue l2 l2 = amortizeQueue gv1 l2), (Queue l2 l2 = amortizeQueue gv1 l1), (Queue l2 l2 = amortizeQueue gv1 gv1), (Queue l2 l1 = amortizeQueue l2 l2)
(Queue l2 l1 = amortizeQueue l2 l1), (Queue l2 l1 = amortizeQueue l2 gv1), (Queue l2 l1 = amortizeQueue l1 l2), (Queue l2 l1 = amortizeQueue l1 l1), (Queue l2 l1 = amortizeQueue l1 gv1), (Queue l2 l1 = amortizeQueue gv1 l2), (Queue l2 l1 = amortizeQueue gv1 l1), (Queue l2 l1 = amortizeQueue gv1 gv1), (Queue l2 gv1 = amortizeQueue l2 l2), (Queue l2 gv1 = amortizeQueue l2 l1)
(Queue l2 gv1 = amortizeQueue l2 gv1), (Queue l2 gv1 = amortizeQueue l1 l2), (Queue l2 gv1 = amortizeQueue l1 l1), (Queue l2 gv1 = amortizeQueue l1 gv1), (Queue l2 gv1 = amortizeQueue gv1 l2), (Queue l2 gv1 = amortizeQueue gv1 l1), (Queue l2 gv1 = amortizeQueue gv1 gv1), (Queue l1 l2 = amortizeQueue l2 l2), (Queue l1 l2 = amortizeQueue l2 l1), (Queue l1 l2 = amortizeQueue l2 gv1)
(Queue l1 l2 = amortizeQueue l1 l2), (Queue l1 l2 = amortizeQueue l1 l1), (Queue l1 l2 = amortizeQueue l1 gv1), (Queue l1 l2 = amortizeQueue gv1 l2), (Queue l1 l2 = amortizeQueue gv1 l1), (Queue l1 l2 = amortizeQueue gv1 gv1), (Queue l1 l1 = amortizeQueue l2 l2), (Queue l1 l1 = amortizeQueue l2 l1), (Queue l1 l1 = amortizeQueue l2 gv1), (Queue l1 l1 = amortizeQueue l1 l2)
(Queue l1 l1 = amortizeQueue l1 l1), (Queue l1 l1 = amortizeQueue l1 gv1), (Queue l1 l1 = amortizeQueue gv1 l2), (Queue l1 l1 = amortizeQueue gv1 l1), (Queue l1 l1 = amortizeQueue gv1 gv1), (Queue l1 gv1 = amortizeQueue l2 l2), (Queue l1 gv1 = amortizeQueue l2 l1), (Queue l1 gv1 = amortizeQueue l2 gv1), (Queue l1 gv1 = amortizeQueue l1 l2), (Queue l1 gv1 = amortizeQueue l1 l1)
(Queue l1 gv1 = amortizeQueue l1 gv1), (Queue l1 gv1 = amortizeQueue gv1 l2), (Queue l1 gv1 = amortizeQueue gv1 l1), (Queue l1 gv1 = amortizeQueue gv1 gv1), (Queue gv1 l2 = amortizeQueue l2 l2), (Queue gv1 l2 = amortizeQueue l2 l1), (Queue gv1 l2 = amortizeQueue l2 gv1), (Queue gv1 l2 = amortizeQueue l1 l2), (Queue gv1 l2 = amortizeQueue l1 l1), (Queue gv1 l2 = amortizeQueue l1 gv1)
(Queue gv1 l2 = amortizeQueue gv1 l2), (Queue gv1 l2 = amortizeQueue gv1 l1), (Queue gv1 l2 = amortizeQueue gv1 gv1), (Queue gv1 l1 = amortizeQueue l2 l2), (Queue gv1 l1 = amortizeQueue l2 l1), (Queue gv1 l1 = amortizeQueue l2 gv1), (Queue gv1 l1 = amortizeQueue l1 l2), (Queue gv1 l1 = amortizeQueue l1 l1), (Queue gv1 l1 = amortizeQueue l1 gv1), (Queue gv1 l1 = amortizeQueue gv1 l2)
(Queue gv1 l1 = amortizeQueue gv1 l1), (Queue gv1 l1 = amortizeQueue gv1 gv1), (Queue gv1 gv1 = amortizeQueue l2 l2), (Queue gv1 gv1 = amortizeQueue l2 l1), (Queue gv1 gv1 = amortizeQueue l2 gv1), (Queue gv1 gv1 = amortizeQueue l1 l2), (Queue gv1 gv1 = amortizeQueue l1 l1), (Queue gv1 gv1 = amortizeQueue l1 gv1), (Queue gv1 gv1 = amortizeQueue gv1 l2), (Queue gv1 gv1 = amortizeQueue gv1 l1)
(Queue gv1 gv1 = amortizeQueue gv1 gv1), (None = Some l2), (None = Some l1), (None = Some gv1), (rev l2 = l2), (rev l2 = l1), (rev l2 = gv1), (rev l2 = app l2 l2), (rev l2 = app l2 l1), (rev l2 = app l2 gv1)
(rev l2 = app l1 l2), (rev l2 = app l1 l1), (rev l2 = app l1 gv1), (rev l2 = app gv1 l2), (rev l2 = app gv1 l1), (rev l2 = app gv1 gv1), (rev l1 = l2), (rev l1 = l1), (rev l1 = gv1), (rev l1 = app l2 l2)
(rev l1 = app l2 l1), (rev l1 = app l2 gv1), (rev l1 = app l1 l2), (rev l1 = app l1 l1), (rev l1 = app l1 gv1), (rev l1 = app gv1 l2), (rev l1 = app gv1 l1), (rev l1 = app gv1 gv1), (rev gv1 = l2), (rev gv1 = l1)
(rev gv1 = gv1), (rev gv1 = app l2 l2), (rev gv1 = app l2 l1), (rev gv1 = app l2 gv1), (rev gv1 = app l1 l2), (rev gv1 = app l1 l1), (rev gv1 = app l1 gv1), (rev gv1 = app gv1 l2), (rev gv1 = app gv1 l1), (rev gv1 = app gv1 gv1)
(app l2 l2 = l2), (app l2 l2 = l1), (app l2 l2 = gv1), (app l2 l1 = l2), (app l2 l1 = l1), (app l2 l1 = gv1), (app l2 gv1 = l2), (app l2 gv1 = l1), (app l2 gv1 = gv1), (app l1 l2 = l2)
(app l1 l2 = l1), (app l1 l2 = gv1), (app l1 l1 = l2), (app l1 l1 = l1), (app l1 l1 = gv1), (app l1 gv1 = l2), (app l1 gv1 = l1), (app l1 gv1 = gv1), (app gv1 l2 = l2), (app gv1 l2 = l1)
(app gv1 l2 = gv1), (app gv1 l1 = l2), (app gv1 l1 = l1), (app gv1 l1 = gv1), (app gv1 gv1 = l2), (app gv1 gv1 = l1), (app gv1 gv1 = gv1), (Nil = rev l2), (Nil = rev l1), (Nil = rev gv1)
(Nil = app l2 l2), (Nil = app l2 l1), (Nil = app l2 gv1), (Nil = app l1 l2), (Nil = app l1 l1), (Nil = app l1 gv1), (Nil = app gv1 l2), (Nil = app gv1 l1), (Nil = app gv1 gv1)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 35.906 seconds


Label: 0 (0)
(len l2 = gv5)

Label: 1 (1)

Label: 2 (2)

Label: 3 (3)
(rev l2 = gv2), (rev gv2 = l2)

Label: 4 (4)
(len l1 = gv4)

Label: 5 (5)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 46.254 seconds

Number of Result Pairs Returned: 2

1. (len (app l1 (rev l2)) = len l1 + len l2)

2. (rev gv2 = l2 -> len (app l1 gv2) = len l1 + len l2)
