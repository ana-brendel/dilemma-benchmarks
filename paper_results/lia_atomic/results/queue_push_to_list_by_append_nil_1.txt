Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (append (rev l0) (Cons n Nil) = append (append (rev l0) (Cons n Nil)) Nil)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 1.53 seconds

gv4 : lst = (append (append (rev l0) (Cons n Nil)) Nil)
gv0 : lst = (append (rev l0) (Cons n Nil))
gv3 : lst = Nil
gv2 : lst = (Cons n Nil)
gv1 : lst = (rev l0)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 80.776 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (append (rev l0) (Cons n Nil) = append (append (rev l0) (Cons n Nil)) Nil)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 

----------------------------------
Goal: (append gv1 (Cons n Nil) = append (append gv1 (Cons n Nil)) Nil)
Case: Valid and Generalized

Label: Generalization #2
Assumptions: 

----------------------------------
Goal: (append gv1 gv2 = append (append gv1 gv2) Nil)
Case: Valid and Generalized

Label: Generalization #4
Assumptions: 

----------------------------------
Goal: (gv0 = append gv0 Nil)
Case: Valid and Generalized

Label: Generalization #6
Assumptions: 
 -- (rev l0 = gv1)
 -- (Nil = gv3)

----------------------------------
Goal: (append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)
Case: Invalid and Generalized

Label: Generalization #7
Assumptions: 

----------------------------------
Goal: (gv0 = append gv0 Nil)
Case: Valid and Generalized

Label: Generalization #9
Assumptions: 
 -- (rev l0 = gv1)
 -- (append (append gv1 (Cons n Nil)) Nil = gv4)

----------------------------------
Goal: (append gv1 (Cons n Nil) = gv4)
Case: Invalid and Generalized

Label: Generalization #10
Assumptions: 

----------------------------------
Goal: (append (rev l0) gv2 = append (append (rev l0) gv2) Nil)
Case: Valid and Generalized

Label: Generalization #11
Assumptions: 
 -- (Nil = gv3)
 -- (Cons n gv3 = gv2)

----------------------------------
Goal: (append (rev l0) gv2 = append (append (rev l0) gv2) gv3)
Case: Invalid and Generalized

Label: Generalization #12
Assumptions: 

----------------------------------
Goal: (gv0 = append gv0 Nil)
Case: Valid and Generalized

Label: Generalization #14
Assumptions: 
 -- (append (append (rev l0) gv2) Nil = gv4)
 -- (Cons n Nil = gv2)

----------------------------------
Goal: (append (rev l0) gv2 = gv4)
Case: Invalid and Generalized

Label: Generalization #15
Assumptions: 
 -- (Nil = gv3)

----------------------------------
Goal: (append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)
Case: Invalid and Generalized

Label: Generalization #16
Assumptions: 

----------------------------------
Goal: (gv0 = append gv0 Nil)
Case: Valid and Generalized

Label: Generalization #17
Assumptions: 
 -- (Nil = gv3)
 -- (append (rev l0) (Cons n gv3) = gv0)

----------------------------------
Goal: (gv0 = append gv0 gv3)
Case: Invalid and Generalized

Label: Generalization #18
Assumptions: 
 -- (append (append (rev l0) (Cons n Nil)) Nil = gv4)

----------------------------------
Goal: (append (rev l0) (Cons n Nil) = gv4)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 80.922 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
lst : Set
queue : Set
len : (lst -> nat)
qlen : (queue -> nat)
append : (lst -> lst -> lst)
rev : (lst -> lst)
amortizeQueue : (lst -> lst -> queue)
qpush : (queue -> nat -> queue)
queue_to_lst : (queue -> lst)
Nil : lst
Cons : (nat -> lst -> lst)
Queue : (lst -> lst -> queue)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 73
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 69
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 199
Negative Examples: 500

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 81.094 seconds


Label: 0 (0)
(n < n), (n <= n), (n = n), (l0 = l0), (l0 = gv3), (l0 = gv1), (gv3 = l0), (gv3 = gv3), (gv3 = gv1), (gv1 = l0)
(gv1 = gv3), (gv1 = gv1), (n < len l0), (n < len gv3), (n < len gv1), (len l0 < n), (len l0 < len gv3), (len l0 < len gv1), (len gv3 < n), (len gv3 < len l0)
(len gv3 < len gv1), (len gv1 < n), (len gv1 < len l0), (len gv1 < len gv3), (n <= len l0), (n <= len gv3), (n <= len gv1), (len l0 <= n), (len l0 <= len gv3), (len l0 <= len gv1)
(len gv3 <= n), (len gv3 <= len l0), (len gv3 <= len gv1), (len gv1 <= n), (len gv1 <= len l0), (len gv1 <= len gv3), (~ n < n), (~ n <= n), (n <> n), (l0 <> l0)
(l0 <> gv3), (l0 <> gv1), (gv3 <> l0), (gv3 <> gv3), (gv3 <> gv1), (gv1 <> l0), (gv1 <> gv3), (gv1 <> gv1), (Queue l0 l0 = amortizeQueue l0 l0), (Queue l0 l0 = amortizeQueue l0 gv3)
(Queue l0 l0 = amortizeQueue l0 gv1), (Queue l0 l0 = amortizeQueue gv3 l0), (Queue l0 l0 = amortizeQueue gv3 gv3), (Queue l0 l0 = amortizeQueue gv3 gv1), (Queue l0 l0 = amortizeQueue gv1 l0), (Queue l0 l0 = amortizeQueue gv1 gv3), (Queue l0 l0 = amortizeQueue gv1 gv1), (Queue l0 gv3 = amortizeQueue l0 l0), (Queue l0 gv3 = amortizeQueue l0 gv3), (Queue l0 gv3 = amortizeQueue l0 gv1)
(Queue l0 gv3 = amortizeQueue gv3 l0), (Queue l0 gv3 = amortizeQueue gv3 gv3), (Queue l0 gv3 = amortizeQueue gv3 gv1), (Queue l0 gv3 = amortizeQueue gv1 l0), (Queue l0 gv3 = amortizeQueue gv1 gv3), (Queue l0 gv3 = amortizeQueue gv1 gv1), (Queue l0 gv1 = amortizeQueue l0 l0), (Queue l0 gv1 = amortizeQueue l0 gv3), (Queue l0 gv1 = amortizeQueue l0 gv1), (Queue l0 gv1 = amortizeQueue gv3 l0)
(Queue l0 gv1 = amortizeQueue gv3 gv3), (Queue l0 gv1 = amortizeQueue gv3 gv1), (Queue l0 gv1 = amortizeQueue gv1 l0), (Queue l0 gv1 = amortizeQueue gv1 gv3), (Queue l0 gv1 = amortizeQueue gv1 gv1), (Queue gv3 l0 = amortizeQueue l0 l0), (Queue gv3 l0 = amortizeQueue l0 gv3), (Queue gv3 l0 = amortizeQueue l0 gv1), (Queue gv3 l0 = amortizeQueue gv3 l0), (Queue gv3 l0 = amortizeQueue gv3 gv3)
(Queue gv3 l0 = amortizeQueue gv3 gv1), (Queue gv3 l0 = amortizeQueue gv1 l0), (Queue gv3 l0 = amortizeQueue gv1 gv3), (Queue gv3 l0 = amortizeQueue gv1 gv1), (Queue gv3 gv3 = amortizeQueue l0 l0), (Queue gv3 gv3 = amortizeQueue l0 gv3), (Queue gv3 gv3 = amortizeQueue l0 gv1), (Queue gv3 gv3 = amortizeQueue gv3 l0), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 gv1)
(Queue gv3 gv3 = amortizeQueue gv1 l0), (Queue gv3 gv3 = amortizeQueue gv1 gv3), (Queue gv3 gv3 = amortizeQueue gv1 gv1), (Queue gv3 gv1 = amortizeQueue l0 l0), (Queue gv3 gv1 = amortizeQueue l0 gv3), (Queue gv3 gv1 = amortizeQueue l0 gv1), (Queue gv3 gv1 = amortizeQueue gv3 l0), (Queue gv3 gv1 = amortizeQueue gv3 gv3), (Queue gv3 gv1 = amortizeQueue gv3 gv1), (Queue gv3 gv1 = amortizeQueue gv1 l0)
(Queue gv3 gv1 = amortizeQueue gv1 gv3), (Queue gv3 gv1 = amortizeQueue gv1 gv1), (Queue gv1 l0 = amortizeQueue l0 l0), (Queue gv1 l0 = amortizeQueue l0 gv3), (Queue gv1 l0 = amortizeQueue l0 gv1), (Queue gv1 l0 = amortizeQueue gv3 l0), (Queue gv1 l0 = amortizeQueue gv3 gv3), (Queue gv1 l0 = amortizeQueue gv3 gv1), (Queue gv1 l0 = amortizeQueue gv1 l0), (Queue gv1 l0 = amortizeQueue gv1 gv3)
(Queue gv1 l0 = amortizeQueue gv1 gv1), (Queue gv1 gv3 = amortizeQueue l0 l0), (Queue gv1 gv3 = amortizeQueue l0 gv3), (Queue gv1 gv3 = amortizeQueue l0 gv1), (Queue gv1 gv3 = amortizeQueue gv3 l0), (Queue gv1 gv3 = amortizeQueue gv3 gv3), (Queue gv1 gv3 = amortizeQueue gv3 gv1), (Queue gv1 gv3 = amortizeQueue gv1 l0), (Queue gv1 gv3 = amortizeQueue gv1 gv3), (Queue gv1 gv3 = amortizeQueue gv1 gv1)
(Queue gv1 gv1 = amortizeQueue l0 l0), (Queue gv1 gv1 = amortizeQueue l0 gv3), (Queue gv1 gv1 = amortizeQueue l0 gv1), (Queue gv1 gv1 = amortizeQueue gv3 l0), (Queue gv1 gv1 = amortizeQueue gv3 gv3), (Queue gv1 gv1 = amortizeQueue gv3 gv1), (Queue gv1 gv1 = amortizeQueue gv1 l0), (Queue gv1 gv1 = amortizeQueue gv1 gv3), (Queue gv1 gv1 = amortizeQueue gv1 gv1), (None = Some n)
(None = Some l0), (None = Some gv3), (None = Some gv1), (len l0 = n), (len gv3 = n), (len gv1 = n), (Cons n l0 = l0), (Cons n l0 = gv3), (Cons n l0 = gv1), (Cons n l0 = rev l0)
(Cons n l0 = rev gv3), (Cons n l0 = rev gv1), (Cons n l0 = append l0 l0), (Cons n l0 = append l0 gv3), (Cons n l0 = append l0 gv1), (Cons n l0 = append gv3 l0), (Cons n l0 = append gv3 gv3), (Cons n l0 = append gv3 gv1), (Cons n l0 = append gv1 l0), (Cons n l0 = append gv1 gv3)
(Cons n l0 = append gv1 gv1), (Cons n gv3 = l0), (Cons n gv3 = gv3), (Cons n gv3 = gv1), (Cons n gv3 = rev l0), (Cons n gv3 = rev gv3), (Cons n gv3 = rev gv1), (Cons n gv3 = append l0 l0), (Cons n gv3 = append l0 gv3), (Cons n gv3 = append l0 gv1)
(Cons n gv3 = append gv3 l0), (Cons n gv3 = append gv3 gv3), (Cons n gv3 = append gv3 gv1), (Cons n gv3 = append gv1 l0), (Cons n gv3 = append gv1 gv3), (Cons n gv3 = append gv1 gv1), (Cons n gv1 = l0), (Cons n gv1 = gv3), (Cons n gv1 = gv1), (Cons n gv1 = rev l0)
(Cons n gv1 = rev gv3), (Cons n gv1 = rev gv1), (Cons n gv1 = append l0 l0), (Cons n gv1 = append l0 gv3), (Cons n gv1 = append l0 gv1), (Cons n gv1 = append gv3 l0), (Cons n gv1 = append gv3 gv3), (Cons n gv1 = append gv3 gv1), (Cons n gv1 = append gv1 l0), (Cons n gv1 = append gv1 gv3)
(Cons n gv1 = append gv1 gv1), (rev l0 = l0), (rev l0 = gv3), (rev l0 = gv1), (rev l0 = append l0 l0), (rev l0 = append l0 gv3), (rev l0 = append l0 gv1), (rev l0 = append gv3 l0), (rev l0 = append gv3 gv3), (rev l0 = append gv3 gv1)
(rev l0 = append gv1 l0), (rev l0 = append gv1 gv3), (rev l0 = append gv1 gv1), (rev gv3 = l0), (rev gv3 = gv3), (rev gv3 = gv1), (rev gv3 = append l0 l0), (rev gv3 = append l0 gv3), (rev gv3 = append l0 gv1), (rev gv3 = append gv3 l0)
(rev gv3 = append gv3 gv3), (rev gv3 = append gv3 gv1), (rev gv3 = append gv1 l0), (rev gv3 = append gv1 gv3), (rev gv3 = append gv1 gv1), (rev gv1 = l0), (rev gv1 = gv3), (rev gv1 = gv1), (rev gv1 = append l0 l0), (rev gv1 = append l0 gv3)
(rev gv1 = append l0 gv1), (rev gv1 = append gv3 l0), (rev gv1 = append gv3 gv3), (rev gv1 = append gv3 gv1), (rev gv1 = append gv1 l0), (rev gv1 = append gv1 gv3), (rev gv1 = append gv1 gv1), (append l0 l0 = l0), (append l0 l0 = gv3), (append l0 l0 = gv1)
(append l0 gv3 = l0), (append l0 gv3 = gv3), (append l0 gv3 = gv1), (append l0 gv1 = l0), (append l0 gv1 = gv3), (append l0 gv1 = gv1), (append gv3 l0 = l0), (append gv3 l0 = gv3), (append gv3 l0 = gv1), (append gv3 gv3 = l0)
(append gv3 gv3 = gv3), (append gv3 gv3 = gv1), (append gv3 gv1 = l0), (append gv3 gv1 = gv3), (append gv3 gv1 = gv1), (append gv1 l0 = l0), (append gv1 l0 = gv3), (append gv1 l0 = gv1), (append gv1 gv3 = l0), (append gv1 gv3 = gv3)
(append gv1 gv3 = gv1), (append gv1 gv1 = l0), (append gv1 gv1 = gv3), (append gv1 gv1 = gv1), (Nil = Cons n l0), (Nil = Cons n gv3), (Nil = Cons n gv1), (Nil = rev l0), (Nil = rev gv3), (Nil = rev gv1)
(Nil = append l0 l0), (Nil = append l0 gv3), (Nil = append l0 gv1), (Nil = append gv3 l0), (Nil = append gv3 gv3), (Nil = append gv3 gv1), (Nil = append gv1 l0), (Nil = append gv1 gv3), (Nil = append gv1 gv1)

Label: 1 (1)
(n < n), (n <= n), (n = n), (l0 = l0), (l0 = gv4), (l0 = gv1), (gv4 = l0), (gv4 = gv4), (gv4 = gv1), (gv1 = l0)
(gv1 = gv4), (gv1 = gv1), (n < len l0), (n < len gv4), (n < len gv1), (len l0 < n), (len l0 < len gv4), (len l0 < len gv1), (len gv4 < n), (len gv4 < len l0)
(len gv4 < len gv1), (len gv1 < n), (len gv1 < len l0), (len gv1 < len gv4), (n <= len l0), (n <= len gv4), (n <= len gv1), (len l0 <= n), (len l0 <= len gv4), (len l0 <= len gv1)
(len gv4 <= n), (len gv4 <= len l0), (len gv4 <= len gv1), (len gv1 <= n), (len gv1 <= len l0), (len gv1 <= len gv4), (~ n < n), (~ n <= n), (n <> n), (l0 <> l0)
(l0 <> gv4), (l0 <> gv1), (gv4 <> l0), (gv4 <> gv4), (gv4 <> gv1), (gv1 <> l0), (gv1 <> gv4), (gv1 <> gv1), (Queue l0 l0 = amortizeQueue l0 l0), (Queue l0 l0 = amortizeQueue l0 gv4)
(Queue l0 l0 = amortizeQueue l0 gv1), (Queue l0 l0 = amortizeQueue gv4 l0), (Queue l0 l0 = amortizeQueue gv4 gv4), (Queue l0 l0 = amortizeQueue gv4 gv1), (Queue l0 l0 = amortizeQueue gv1 l0), (Queue l0 l0 = amortizeQueue gv1 gv4), (Queue l0 l0 = amortizeQueue gv1 gv1), (Queue l0 gv4 = amortizeQueue l0 l0), (Queue l0 gv4 = amortizeQueue l0 gv4), (Queue l0 gv4 = amortizeQueue l0 gv1)
(Queue l0 gv4 = amortizeQueue gv4 l0), (Queue l0 gv4 = amortizeQueue gv4 gv4), (Queue l0 gv4 = amortizeQueue gv4 gv1), (Queue l0 gv4 = amortizeQueue gv1 l0), (Queue l0 gv4 = amortizeQueue gv1 gv4), (Queue l0 gv4 = amortizeQueue gv1 gv1), (Queue l0 gv1 = amortizeQueue l0 l0), (Queue l0 gv1 = amortizeQueue l0 gv4), (Queue l0 gv1 = amortizeQueue l0 gv1), (Queue l0 gv1 = amortizeQueue gv4 l0)
(Queue l0 gv1 = amortizeQueue gv4 gv4), (Queue l0 gv1 = amortizeQueue gv4 gv1), (Queue l0 gv1 = amortizeQueue gv1 l0), (Queue l0 gv1 = amortizeQueue gv1 gv4), (Queue l0 gv1 = amortizeQueue gv1 gv1), (Queue gv4 l0 = amortizeQueue l0 l0), (Queue gv4 l0 = amortizeQueue l0 gv4), (Queue gv4 l0 = amortizeQueue l0 gv1), (Queue gv4 l0 = amortizeQueue gv4 l0), (Queue gv4 l0 = amortizeQueue gv4 gv4)
(Queue gv4 l0 = amortizeQueue gv4 gv1), (Queue gv4 l0 = amortizeQueue gv1 l0), (Queue gv4 l0 = amortizeQueue gv1 gv4), (Queue gv4 l0 = amortizeQueue gv1 gv1), (Queue gv4 gv4 = amortizeQueue l0 l0), (Queue gv4 gv4 = amortizeQueue l0 gv4), (Queue gv4 gv4 = amortizeQueue l0 gv1), (Queue gv4 gv4 = amortizeQueue gv4 l0), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 gv1)
(Queue gv4 gv4 = amortizeQueue gv1 l0), (Queue gv4 gv4 = amortizeQueue gv1 gv4), (Queue gv4 gv4 = amortizeQueue gv1 gv1), (Queue gv4 gv1 = amortizeQueue l0 l0), (Queue gv4 gv1 = amortizeQueue l0 gv4), (Queue gv4 gv1 = amortizeQueue l0 gv1), (Queue gv4 gv1 = amortizeQueue gv4 l0), (Queue gv4 gv1 = amortizeQueue gv4 gv4), (Queue gv4 gv1 = amortizeQueue gv4 gv1), (Queue gv4 gv1 = amortizeQueue gv1 l0)
(Queue gv4 gv1 = amortizeQueue gv1 gv4), (Queue gv4 gv1 = amortizeQueue gv1 gv1), (Queue gv1 l0 = amortizeQueue l0 l0), (Queue gv1 l0 = amortizeQueue l0 gv4), (Queue gv1 l0 = amortizeQueue l0 gv1), (Queue gv1 l0 = amortizeQueue gv4 l0), (Queue gv1 l0 = amortizeQueue gv4 gv4), (Queue gv1 l0 = amortizeQueue gv4 gv1), (Queue gv1 l0 = amortizeQueue gv1 l0), (Queue gv1 l0 = amortizeQueue gv1 gv4)
(Queue gv1 l0 = amortizeQueue gv1 gv1), (Queue gv1 gv4 = amortizeQueue l0 l0), (Queue gv1 gv4 = amortizeQueue l0 gv4), (Queue gv1 gv4 = amortizeQueue l0 gv1), (Queue gv1 gv4 = amortizeQueue gv4 l0), (Queue gv1 gv4 = amortizeQueue gv4 gv4), (Queue gv1 gv4 = amortizeQueue gv4 gv1), (Queue gv1 gv4 = amortizeQueue gv1 l0), (Queue gv1 gv4 = amortizeQueue gv1 gv4), (Queue gv1 gv4 = amortizeQueue gv1 gv1)
(Queue gv1 gv1 = amortizeQueue l0 l0), (Queue gv1 gv1 = amortizeQueue l0 gv4), (Queue gv1 gv1 = amortizeQueue l0 gv1), (Queue gv1 gv1 = amortizeQueue gv4 l0), (Queue gv1 gv1 = amortizeQueue gv4 gv4), (Queue gv1 gv1 = amortizeQueue gv4 gv1), (Queue gv1 gv1 = amortizeQueue gv1 l0), (Queue gv1 gv1 = amortizeQueue gv1 gv4), (Queue gv1 gv1 = amortizeQueue gv1 gv1), (None = Some n)
(None = Some l0), (None = Some gv4), (None = Some gv1), (len l0 = n), (len gv4 = n), (len gv1 = n), (Cons n l0 = l0), (Cons n l0 = gv4), (Cons n l0 = gv1), (Cons n l0 = rev l0)
(Cons n l0 = rev gv4), (Cons n l0 = rev gv1), (Cons n l0 = append l0 l0), (Cons n l0 = append l0 gv4), (Cons n l0 = append l0 gv1), (Cons n l0 = append gv4 l0), (Cons n l0 = append gv4 gv4), (Cons n l0 = append gv4 gv1), (Cons n l0 = append gv1 l0), (Cons n l0 = append gv1 gv4)
(Cons n l0 = append gv1 gv1), (Cons n gv4 = l0), (Cons n gv4 = gv4), (Cons n gv4 = gv1), (Cons n gv4 = rev l0), (Cons n gv4 = rev gv4), (Cons n gv4 = rev gv1), (Cons n gv4 = append l0 l0), (Cons n gv4 = append l0 gv4), (Cons n gv4 = append l0 gv1)
(Cons n gv4 = append gv4 l0), (Cons n gv4 = append gv4 gv4), (Cons n gv4 = append gv4 gv1), (Cons n gv4 = append gv1 l0), (Cons n gv4 = append gv1 gv4), (Cons n gv4 = append gv1 gv1), (Cons n gv1 = l0), (Cons n gv1 = gv4), (Cons n gv1 = gv1), (Cons n gv1 = rev l0)
(Cons n gv1 = rev gv4), (Cons n gv1 = rev gv1), (Cons n gv1 = append l0 l0), (Cons n gv1 = append l0 gv4), (Cons n gv1 = append l0 gv1), (Cons n gv1 = append gv4 l0), (Cons n gv1 = append gv4 gv4), (Cons n gv1 = append gv4 gv1), (Cons n gv1 = append gv1 l0), (Cons n gv1 = append gv1 gv4)
(Cons n gv1 = append gv1 gv1), (rev l0 = l0), (rev l0 = gv4), (rev l0 = gv1), (rev l0 = append l0 l0), (rev l0 = append l0 gv4), (rev l0 = append l0 gv1), (rev l0 = append gv4 l0), (rev l0 = append gv4 gv4), (rev l0 = append gv4 gv1)
(rev l0 = append gv1 l0), (rev l0 = append gv1 gv4), (rev l0 = append gv1 gv1), (rev gv4 = l0), (rev gv4 = gv4), (rev gv4 = gv1), (rev gv4 = append l0 l0), (rev gv4 = append l0 gv4), (rev gv4 = append l0 gv1), (rev gv4 = append gv4 l0)
(rev gv4 = append gv4 gv4), (rev gv4 = append gv4 gv1), (rev gv4 = append gv1 l0), (rev gv4 = append gv1 gv4), (rev gv4 = append gv1 gv1), (rev gv1 = l0), (rev gv1 = gv4), (rev gv1 = gv1), (rev gv1 = append l0 l0), (rev gv1 = append l0 gv4)
(rev gv1 = append l0 gv1), (rev gv1 = append gv4 l0), (rev gv1 = append gv4 gv4), (rev gv1 = append gv4 gv1), (rev gv1 = append gv1 l0), (rev gv1 = append gv1 gv4), (rev gv1 = append gv1 gv1), (append l0 l0 = l0), (append l0 l0 = gv4), (append l0 l0 = gv1)
(append l0 gv4 = l0), (append l0 gv4 = gv4), (append l0 gv4 = gv1), (append l0 gv1 = l0), (append l0 gv1 = gv4), (append l0 gv1 = gv1), (append gv4 l0 = l0), (append gv4 l0 = gv4), (append gv4 l0 = gv1), (append gv4 gv4 = l0)
(append gv4 gv4 = gv4), (append gv4 gv4 = gv1), (append gv4 gv1 = l0), (append gv4 gv1 = gv4), (append gv4 gv1 = gv1), (append gv1 l0 = l0), (append gv1 l0 = gv4), (append gv1 l0 = gv1), (append gv1 gv4 = l0), (append gv1 gv4 = gv4)
(append gv1 gv4 = gv1), (append gv1 gv1 = l0), (append gv1 gv1 = gv4), (append gv1 gv1 = gv1), (Nil = Cons n l0), (Nil = Cons n gv4), (Nil = Cons n gv1), (Nil = rev l0), (Nil = rev gv4), (Nil = rev gv1)
(Nil = append l0 l0), (Nil = append l0 gv4), (Nil = append l0 gv1), (Nil = append gv4 l0), (Nil = append gv4 gv4), (Nil = append gv4 gv1), (Nil = append gv1 l0), (Nil = append gv1 gv4), (Nil = append gv1 gv1)

Label: 2 (2)
(n < n), (n <= n), (n = n), (gv3 = gv3), (gv3 = gv2), (gv3 = l0), (gv2 = gv3), (gv2 = gv2), (gv2 = l0), (l0 = gv3)
(l0 = gv2), (l0 = l0), (n < len gv3), (n < len gv2), (n < len l0), (len gv3 < n), (len gv3 < len gv2), (len gv3 < len l0), (len gv2 < n), (len gv2 < len gv3)
(len gv2 < len l0), (len l0 < n), (len l0 < len gv3), (len l0 < len gv2), (n <= len gv3), (n <= len gv2), (n <= len l0), (len gv3 <= n), (len gv3 <= len gv2), (len gv3 <= len l0)
(len gv2 <= n), (len gv2 <= len gv3), (len gv2 <= len l0), (len l0 <= n), (len l0 <= len gv3), (len l0 <= len gv2), (~ n < n), (~ n <= n), (n <> n), (gv3 <> gv3)
(gv3 <> gv2), (gv3 <> l0), (gv2 <> gv3), (gv2 <> gv2), (gv2 <> l0), (l0 <> gv3), (l0 <> gv2), (l0 <> l0), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 gv2)
(Queue gv3 gv3 = amortizeQueue gv3 l0), (Queue gv3 gv3 = amortizeQueue gv2 gv3), (Queue gv3 gv3 = amortizeQueue gv2 gv2), (Queue gv3 gv3 = amortizeQueue gv2 l0), (Queue gv3 gv3 = amortizeQueue l0 gv3), (Queue gv3 gv3 = amortizeQueue l0 gv2), (Queue gv3 gv3 = amortizeQueue l0 l0), (Queue gv3 gv2 = amortizeQueue gv3 gv3), (Queue gv3 gv2 = amortizeQueue gv3 gv2), (Queue gv3 gv2 = amortizeQueue gv3 l0)
(Queue gv3 gv2 = amortizeQueue gv2 gv3), (Queue gv3 gv2 = amortizeQueue gv2 gv2), (Queue gv3 gv2 = amortizeQueue gv2 l0), (Queue gv3 gv2 = amortizeQueue l0 gv3), (Queue gv3 gv2 = amortizeQueue l0 gv2), (Queue gv3 gv2 = amortizeQueue l0 l0), (Queue gv3 l0 = amortizeQueue gv3 gv3), (Queue gv3 l0 = amortizeQueue gv3 gv2), (Queue gv3 l0 = amortizeQueue gv3 l0), (Queue gv3 l0 = amortizeQueue gv2 gv3)
(Queue gv3 l0 = amortizeQueue gv2 gv2), (Queue gv3 l0 = amortizeQueue gv2 l0), (Queue gv3 l0 = amortizeQueue l0 gv3), (Queue gv3 l0 = amortizeQueue l0 gv2), (Queue gv3 l0 = amortizeQueue l0 l0), (Queue gv2 gv3 = amortizeQueue gv3 gv3), (Queue gv2 gv3 = amortizeQueue gv3 gv2), (Queue gv2 gv3 = amortizeQueue gv3 l0), (Queue gv2 gv3 = amortizeQueue gv2 gv3), (Queue gv2 gv3 = amortizeQueue gv2 gv2)
(Queue gv2 gv3 = amortizeQueue gv2 l0), (Queue gv2 gv3 = amortizeQueue l0 gv3), (Queue gv2 gv3 = amortizeQueue l0 gv2), (Queue gv2 gv3 = amortizeQueue l0 l0), (Queue gv2 gv2 = amortizeQueue gv3 gv3), (Queue gv2 gv2 = amortizeQueue gv3 gv2), (Queue gv2 gv2 = amortizeQueue gv3 l0), (Queue gv2 gv2 = amortizeQueue gv2 gv3), (Queue gv2 gv2 = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue gv2 l0)
(Queue gv2 gv2 = amortizeQueue l0 gv3), (Queue gv2 gv2 = amortizeQueue l0 gv2), (Queue gv2 gv2 = amortizeQueue l0 l0), (Queue gv2 l0 = amortizeQueue gv3 gv3), (Queue gv2 l0 = amortizeQueue gv3 gv2), (Queue gv2 l0 = amortizeQueue gv3 l0), (Queue gv2 l0 = amortizeQueue gv2 gv3), (Queue gv2 l0 = amortizeQueue gv2 gv2), (Queue gv2 l0 = amortizeQueue gv2 l0), (Queue gv2 l0 = amortizeQueue l0 gv3)
(Queue gv2 l0 = amortizeQueue l0 gv2), (Queue gv2 l0 = amortizeQueue l0 l0), (Queue l0 gv3 = amortizeQueue gv3 gv3), (Queue l0 gv3 = amortizeQueue gv3 gv2), (Queue l0 gv3 = amortizeQueue gv3 l0), (Queue l0 gv3 = amortizeQueue gv2 gv3), (Queue l0 gv3 = amortizeQueue gv2 gv2), (Queue l0 gv3 = amortizeQueue gv2 l0), (Queue l0 gv3 = amortizeQueue l0 gv3), (Queue l0 gv3 = amortizeQueue l0 gv2)
(Queue l0 gv3 = amortizeQueue l0 l0), (Queue l0 gv2 = amortizeQueue gv3 gv3), (Queue l0 gv2 = amortizeQueue gv3 gv2), (Queue l0 gv2 = amortizeQueue gv3 l0), (Queue l0 gv2 = amortizeQueue gv2 gv3), (Queue l0 gv2 = amortizeQueue gv2 gv2), (Queue l0 gv2 = amortizeQueue gv2 l0), (Queue l0 gv2 = amortizeQueue l0 gv3), (Queue l0 gv2 = amortizeQueue l0 gv2), (Queue l0 gv2 = amortizeQueue l0 l0)
(Queue l0 l0 = amortizeQueue gv3 gv3), (Queue l0 l0 = amortizeQueue gv3 gv2), (Queue l0 l0 = amortizeQueue gv3 l0), (Queue l0 l0 = amortizeQueue gv2 gv3), (Queue l0 l0 = amortizeQueue gv2 gv2), (Queue l0 l0 = amortizeQueue gv2 l0), (Queue l0 l0 = amortizeQueue l0 gv3), (Queue l0 l0 = amortizeQueue l0 gv2), (Queue l0 l0 = amortizeQueue l0 l0), (None = Some n)
(None = Some gv3), (None = Some gv2), (None = Some l0), (len gv3 = n), (len gv2 = n), (len l0 = n), (Cons n gv3 = gv3), (Cons n gv3 = gv2), (Cons n gv3 = l0), (Cons n gv3 = rev gv3)
(Cons n gv3 = rev gv2), (Cons n gv3 = rev l0), (Cons n gv3 = append gv3 gv3), (Cons n gv3 = append gv3 gv2), (Cons n gv3 = append gv3 l0), (Cons n gv3 = append gv2 gv3), (Cons n gv3 = append gv2 gv2), (Cons n gv3 = append gv2 l0), (Cons n gv3 = append l0 gv3), (Cons n gv3 = append l0 gv2)
(Cons n gv3 = append l0 l0), (Cons n gv2 = gv3), (Cons n gv2 = gv2), (Cons n gv2 = l0), (Cons n gv2 = rev gv3), (Cons n gv2 = rev gv2), (Cons n gv2 = rev l0), (Cons n gv2 = append gv3 gv3), (Cons n gv2 = append gv3 gv2), (Cons n gv2 = append gv3 l0)
(Cons n gv2 = append gv2 gv3), (Cons n gv2 = append gv2 gv2), (Cons n gv2 = append gv2 l0), (Cons n gv2 = append l0 gv3), (Cons n gv2 = append l0 gv2), (Cons n gv2 = append l0 l0), (Cons n l0 = gv3), (Cons n l0 = gv2), (Cons n l0 = l0), (Cons n l0 = rev gv3)
(Cons n l0 = rev gv2), (Cons n l0 = rev l0), (Cons n l0 = append gv3 gv3), (Cons n l0 = append gv3 gv2), (Cons n l0 = append gv3 l0), (Cons n l0 = append gv2 gv3), (Cons n l0 = append gv2 gv2), (Cons n l0 = append gv2 l0), (Cons n l0 = append l0 gv3), (Cons n l0 = append l0 gv2)
(Cons n l0 = append l0 l0), (rev gv3 = gv3), (rev gv3 = gv2), (rev gv3 = l0), (rev gv3 = append gv3 gv3), (rev gv3 = append gv3 gv2), (rev gv3 = append gv3 l0), (rev gv3 = append gv2 gv3), (rev gv3 = append gv2 gv2), (rev gv3 = append gv2 l0)
(rev gv3 = append l0 gv3), (rev gv3 = append l0 gv2), (rev gv3 = append l0 l0), (rev gv2 = gv3), (rev gv2 = gv2), (rev gv2 = l0), (rev gv2 = append gv3 gv3), (rev gv2 = append gv3 gv2), (rev gv2 = append gv3 l0), (rev gv2 = append gv2 gv3)
(rev gv2 = append gv2 gv2), (rev gv2 = append gv2 l0), (rev gv2 = append l0 gv3), (rev gv2 = append l0 gv2), (rev gv2 = append l0 l0), (rev l0 = gv3), (rev l0 = gv2), (rev l0 = l0), (rev l0 = append gv3 gv3), (rev l0 = append gv3 gv2)
(rev l0 = append gv3 l0), (rev l0 = append gv2 gv3), (rev l0 = append gv2 gv2), (rev l0 = append gv2 l0), (rev l0 = append l0 gv3), (rev l0 = append l0 gv2), (rev l0 = append l0 l0), (append gv3 gv3 = gv3), (append gv3 gv3 = gv2), (append gv3 gv3 = l0)
(append gv3 gv2 = gv3), (append gv3 gv2 = gv2), (append gv3 gv2 = l0), (append gv3 l0 = gv3), (append gv3 l0 = gv2), (append gv3 l0 = l0), (append gv2 gv3 = gv3), (append gv2 gv3 = gv2), (append gv2 gv3 = l0), (append gv2 gv2 = gv3)
(append gv2 gv2 = gv2), (append gv2 gv2 = l0), (append gv2 l0 = gv3), (append gv2 l0 = gv2), (append gv2 l0 = l0), (append l0 gv3 = gv3), (append l0 gv3 = gv2), (append l0 gv3 = l0), (append l0 gv2 = gv3), (append l0 gv2 = gv2)
(append l0 gv2 = l0), (append l0 l0 = gv3), (append l0 l0 = gv2), (append l0 l0 = l0), (Nil = Cons n gv3), (Nil = Cons n gv2), (Nil = Cons n l0), (Nil = rev gv3), (Nil = rev gv2), (Nil = rev l0)
(Nil = append gv3 gv3), (Nil = append gv3 gv2), (Nil = append gv3 l0), (Nil = append gv2 gv3), (Nil = append gv2 gv2), (Nil = append gv2 l0), (Nil = append l0 gv3), (Nil = append l0 gv2), (Nil = append l0 l0)

Label: 3 (3)
(n < n), (n <= n), (n = n), (gv4 = gv4), (gv4 = gv2), (gv4 = l0), (gv2 = gv4), (gv2 = gv2), (gv2 = l0), (l0 = gv4)
(l0 = gv2), (l0 = l0), (n < len gv4), (n < len gv2), (n < len l0), (len gv4 < n), (len gv4 < len gv2), (len gv4 < len l0), (len gv2 < n), (len gv2 < len gv4)
(len gv2 < len l0), (len l0 < n), (len l0 < len gv4), (len l0 < len gv2), (n <= len gv4), (n <= len gv2), (n <= len l0), (len gv4 <= n), (len gv4 <= len gv2), (len gv4 <= len l0)
(len gv2 <= n), (len gv2 <= len gv4), (len gv2 <= len l0), (len l0 <= n), (len l0 <= len gv4), (len l0 <= len gv2), (~ n < n), (~ n <= n), (n <> n), (gv4 <> gv4)
(gv4 <> gv2), (gv4 <> l0), (gv2 <> gv4), (gv2 <> gv2), (gv2 <> l0), (l0 <> gv4), (l0 <> gv2), (l0 <> l0), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 gv2)
(Queue gv4 gv4 = amortizeQueue gv4 l0), (Queue gv4 gv4 = amortizeQueue gv2 gv4), (Queue gv4 gv4 = amortizeQueue gv2 gv2), (Queue gv4 gv4 = amortizeQueue gv2 l0), (Queue gv4 gv4 = amortizeQueue l0 gv4), (Queue gv4 gv4 = amortizeQueue l0 gv2), (Queue gv4 gv4 = amortizeQueue l0 l0), (Queue gv4 gv2 = amortizeQueue gv4 gv4), (Queue gv4 gv2 = amortizeQueue gv4 gv2), (Queue gv4 gv2 = amortizeQueue gv4 l0)
(Queue gv4 gv2 = amortizeQueue gv2 gv4), (Queue gv4 gv2 = amortizeQueue gv2 gv2), (Queue gv4 gv2 = amortizeQueue gv2 l0), (Queue gv4 gv2 = amortizeQueue l0 gv4), (Queue gv4 gv2 = amortizeQueue l0 gv2), (Queue gv4 gv2 = amortizeQueue l0 l0), (Queue gv4 l0 = amortizeQueue gv4 gv4), (Queue gv4 l0 = amortizeQueue gv4 gv2), (Queue gv4 l0 = amortizeQueue gv4 l0), (Queue gv4 l0 = amortizeQueue gv2 gv4)
(Queue gv4 l0 = amortizeQueue gv2 gv2), (Queue gv4 l0 = amortizeQueue gv2 l0), (Queue gv4 l0 = amortizeQueue l0 gv4), (Queue gv4 l0 = amortizeQueue l0 gv2), (Queue gv4 l0 = amortizeQueue l0 l0), (Queue gv2 gv4 = amortizeQueue gv4 gv4), (Queue gv2 gv4 = amortizeQueue gv4 gv2), (Queue gv2 gv4 = amortizeQueue gv4 l0), (Queue gv2 gv4 = amortizeQueue gv2 gv4), (Queue gv2 gv4 = amortizeQueue gv2 gv2)
(Queue gv2 gv4 = amortizeQueue gv2 l0), (Queue gv2 gv4 = amortizeQueue l0 gv4), (Queue gv2 gv4 = amortizeQueue l0 gv2), (Queue gv2 gv4 = amortizeQueue l0 l0), (Queue gv2 gv2 = amortizeQueue gv4 gv4), (Queue gv2 gv2 = amortizeQueue gv4 gv2), (Queue gv2 gv2 = amortizeQueue gv4 l0), (Queue gv2 gv2 = amortizeQueue gv2 gv4), (Queue gv2 gv2 = amortizeQueue gv2 gv2), (Queue gv2 gv2 = amortizeQueue gv2 l0)
(Queue gv2 gv2 = amortizeQueue l0 gv4), (Queue gv2 gv2 = amortizeQueue l0 gv2), (Queue gv2 gv2 = amortizeQueue l0 l0), (Queue gv2 l0 = amortizeQueue gv4 gv4), (Queue gv2 l0 = amortizeQueue gv4 gv2), (Queue gv2 l0 = amortizeQueue gv4 l0), (Queue gv2 l0 = amortizeQueue gv2 gv4), (Queue gv2 l0 = amortizeQueue gv2 gv2), (Queue gv2 l0 = amortizeQueue gv2 l0), (Queue gv2 l0 = amortizeQueue l0 gv4)
(Queue gv2 l0 = amortizeQueue l0 gv2), (Queue gv2 l0 = amortizeQueue l0 l0), (Queue l0 gv4 = amortizeQueue gv4 gv4), (Queue l0 gv4 = amortizeQueue gv4 gv2), (Queue l0 gv4 = amortizeQueue gv4 l0), (Queue l0 gv4 = amortizeQueue gv2 gv4), (Queue l0 gv4 = amortizeQueue gv2 gv2), (Queue l0 gv4 = amortizeQueue gv2 l0), (Queue l0 gv4 = amortizeQueue l0 gv4), (Queue l0 gv4 = amortizeQueue l0 gv2)
(Queue l0 gv4 = amortizeQueue l0 l0), (Queue l0 gv2 = amortizeQueue gv4 gv4), (Queue l0 gv2 = amortizeQueue gv4 gv2), (Queue l0 gv2 = amortizeQueue gv4 l0), (Queue l0 gv2 = amortizeQueue gv2 gv4), (Queue l0 gv2 = amortizeQueue gv2 gv2), (Queue l0 gv2 = amortizeQueue gv2 l0), (Queue l0 gv2 = amortizeQueue l0 gv4), (Queue l0 gv2 = amortizeQueue l0 gv2), (Queue l0 gv2 = amortizeQueue l0 l0)
(Queue l0 l0 = amortizeQueue gv4 gv4), (Queue l0 l0 = amortizeQueue gv4 gv2), (Queue l0 l0 = amortizeQueue gv4 l0), (Queue l0 l0 = amortizeQueue gv2 gv4), (Queue l0 l0 = amortizeQueue gv2 gv2), (Queue l0 l0 = amortizeQueue gv2 l0), (Queue l0 l0 = amortizeQueue l0 gv4), (Queue l0 l0 = amortizeQueue l0 gv2), (Queue l0 l0 = amortizeQueue l0 l0), (None = Some n)
(None = Some gv4), (None = Some gv2), (None = Some l0), (len gv4 = n), (len gv2 = n), (len l0 = n), (Cons n gv4 = gv4), (Cons n gv4 = gv2), (Cons n gv4 = l0), (Cons n gv4 = rev gv4)
(Cons n gv4 = rev gv2), (Cons n gv4 = rev l0), (Cons n gv4 = append gv4 gv4), (Cons n gv4 = append gv4 gv2), (Cons n gv4 = append gv4 l0), (Cons n gv4 = append gv2 gv4), (Cons n gv4 = append gv2 gv2), (Cons n gv4 = append gv2 l0), (Cons n gv4 = append l0 gv4), (Cons n gv4 = append l0 gv2)
(Cons n gv4 = append l0 l0), (Cons n gv2 = gv4), (Cons n gv2 = gv2), (Cons n gv2 = l0), (Cons n gv2 = rev gv4), (Cons n gv2 = rev gv2), (Cons n gv2 = rev l0), (Cons n gv2 = append gv4 gv4), (Cons n gv2 = append gv4 gv2), (Cons n gv2 = append gv4 l0)
(Cons n gv2 = append gv2 gv4), (Cons n gv2 = append gv2 gv2), (Cons n gv2 = append gv2 l0), (Cons n gv2 = append l0 gv4), (Cons n gv2 = append l0 gv2), (Cons n gv2 = append l0 l0), (Cons n l0 = gv4), (Cons n l0 = gv2), (Cons n l0 = l0), (Cons n l0 = rev gv4)
(Cons n l0 = rev gv2), (Cons n l0 = rev l0), (Cons n l0 = append gv4 gv4), (Cons n l0 = append gv4 gv2), (Cons n l0 = append gv4 l0), (Cons n l0 = append gv2 gv4), (Cons n l0 = append gv2 gv2), (Cons n l0 = append gv2 l0), (Cons n l0 = append l0 gv4), (Cons n l0 = append l0 gv2)
(Cons n l0 = append l0 l0), (rev gv4 = gv4), (rev gv4 = gv2), (rev gv4 = l0), (rev gv4 = append gv4 gv4), (rev gv4 = append gv4 gv2), (rev gv4 = append gv4 l0), (rev gv4 = append gv2 gv4), (rev gv4 = append gv2 gv2), (rev gv4 = append gv2 l0)
(rev gv4 = append l0 gv4), (rev gv4 = append l0 gv2), (rev gv4 = append l0 l0), (rev gv2 = gv4), (rev gv2 = gv2), (rev gv2 = l0), (rev gv2 = append gv4 gv4), (rev gv2 = append gv4 gv2), (rev gv2 = append gv4 l0), (rev gv2 = append gv2 gv4)
(rev gv2 = append gv2 gv2), (rev gv2 = append gv2 l0), (rev gv2 = append l0 gv4), (rev gv2 = append l0 gv2), (rev gv2 = append l0 l0), (rev l0 = gv4), (rev l0 = gv2), (rev l0 = l0), (rev l0 = append gv4 gv4), (rev l0 = append gv4 gv2)
(rev l0 = append gv4 l0), (rev l0 = append gv2 gv4), (rev l0 = append gv2 gv2), (rev l0 = append gv2 l0), (rev l0 = append l0 gv4), (rev l0 = append l0 gv2), (rev l0 = append l0 l0), (append gv4 gv4 = gv4), (append gv4 gv4 = gv2), (append gv4 gv4 = l0)
(append gv4 gv2 = gv4), (append gv4 gv2 = gv2), (append gv4 gv2 = l0), (append gv4 l0 = gv4), (append gv4 l0 = gv2), (append gv4 l0 = l0), (append gv2 gv4 = gv4), (append gv2 gv4 = gv2), (append gv2 gv4 = l0), (append gv2 gv2 = gv4)
(append gv2 gv2 = gv2), (append gv2 gv2 = l0), (append gv2 l0 = gv4), (append gv2 l0 = gv2), (append gv2 l0 = l0), (append l0 gv4 = gv4), (append l0 gv4 = gv2), (append l0 gv4 = l0), (append l0 gv2 = gv4), (append l0 gv2 = gv2)
(append l0 gv2 = l0), (append l0 l0 = gv4), (append l0 l0 = gv2), (append l0 l0 = l0), (Nil = Cons n gv4), (Nil = Cons n gv2), (Nil = Cons n l0), (Nil = rev gv4), (Nil = rev gv2), (Nil = rev l0)
(Nil = append gv4 gv4), (Nil = append gv4 gv2), (Nil = append gv4 l0), (Nil = append gv2 gv4), (Nil = append gv2 gv2), (Nil = append gv2 l0), (Nil = append l0 gv4), (Nil = append l0 gv2), (Nil = append l0 l0)

Label: 4 (4)
(n < n), (n <= n), (n = n), (gv3 = gv3), (gv3 = l0), (l0 = gv3), (l0 = l0), (n < len gv3), (n < len l0), (len gv3 < n)
(len gv3 < len l0), (len l0 < n), (len l0 < len gv3), (n <= len gv3), (n <= len l0), (len gv3 <= n), (len gv3 <= len l0), (len l0 <= n), (len l0 <= len gv3), (~ n < n)
(~ n <= n), (n <> n), (gv3 <> gv3), (gv3 <> l0), (l0 <> gv3), (l0 <> l0), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 l0), (Queue gv3 gv3 = amortizeQueue l0 gv3), (Queue gv3 gv3 = amortizeQueue l0 l0)
(Queue gv3 l0 = amortizeQueue gv3 gv3), (Queue gv3 l0 = amortizeQueue gv3 l0), (Queue gv3 l0 = amortizeQueue l0 gv3), (Queue gv3 l0 = amortizeQueue l0 l0), (Queue l0 gv3 = amortizeQueue gv3 gv3), (Queue l0 gv3 = amortizeQueue gv3 l0), (Queue l0 gv3 = amortizeQueue l0 gv3), (Queue l0 gv3 = amortizeQueue l0 l0), (Queue l0 l0 = amortizeQueue gv3 gv3), (Queue l0 l0 = amortizeQueue gv3 l0)
(Queue l0 l0 = amortizeQueue l0 gv3), (Queue l0 l0 = amortizeQueue l0 l0), (None = Some n), (None = Some gv3), (None = Some l0), (len gv3 = n), (len l0 = n), (Cons n gv3 = gv3), (Cons n gv3 = l0), (Cons n gv3 = rev gv3)
(Cons n gv3 = rev l0), (Cons n gv3 = append gv3 gv3), (Cons n gv3 = append gv3 l0), (Cons n gv3 = append l0 gv3), (Cons n gv3 = append l0 l0), (Cons n l0 = gv3), (Cons n l0 = l0), (Cons n l0 = rev gv3), (Cons n l0 = rev l0), (Cons n l0 = append gv3 gv3)
(Cons n l0 = append gv3 l0), (Cons n l0 = append l0 gv3), (Cons n l0 = append l0 l0), (rev gv3 = gv3), (rev gv3 = l0), (rev gv3 = append gv3 gv3), (rev gv3 = append gv3 l0), (rev gv3 = append l0 gv3), (rev gv3 = append l0 l0), (rev l0 = gv3)
(rev l0 = l0), (rev l0 = append gv3 gv3), (rev l0 = append gv3 l0), (rev l0 = append l0 gv3), (rev l0 = append l0 l0), (append gv3 gv3 = gv3), (append gv3 gv3 = l0), (append gv3 l0 = gv3), (append gv3 l0 = l0), (append l0 gv3 = gv3)
(append l0 gv3 = l0), (append l0 l0 = gv3), (append l0 l0 = l0), (Nil = Cons n gv3), (Nil = Cons n l0), (Nil = rev gv3), (Nil = rev l0), (Nil = append gv3 gv3), (Nil = append gv3 l0), (Nil = append l0 gv3)
(Nil = append l0 l0)

Label: 5 (5)
(n < n), (n <= n), (n = n), (l0 = l0), (l0 = gv3), (l0 = gv0), (gv3 = l0), (gv3 = gv3), (gv3 = gv0), (gv0 = l0)
(gv0 = gv3), (gv0 = gv0), (n < len l0), (n < len gv3), (n < len gv0), (len l0 < n), (len l0 < len gv3), (len l0 < len gv0), (len gv3 < n), (len gv3 < len l0)
(len gv3 < len gv0), (len gv0 < n), (len gv0 < len l0), (len gv0 < len gv3), (n <= len l0), (n <= len gv3), (n <= len gv0), (len l0 <= n), (len l0 <= len gv3), (len l0 <= len gv0)
(len gv3 <= n), (len gv3 <= len l0), (len gv3 <= len gv0), (len gv0 <= n), (len gv0 <= len l0), (len gv0 <= len gv3), (~ n < n), (~ n <= n), (n <> n), (l0 <> l0)
(l0 <> gv3), (l0 <> gv0), (gv3 <> l0), (gv3 <> gv3), (gv3 <> gv0), (gv0 <> l0), (gv0 <> gv3), (gv0 <> gv0), (Queue l0 l0 = amortizeQueue l0 l0), (Queue l0 l0 = amortizeQueue l0 gv3)
(Queue l0 l0 = amortizeQueue l0 gv0), (Queue l0 l0 = amortizeQueue gv3 l0), (Queue l0 l0 = amortizeQueue gv3 gv3), (Queue l0 l0 = amortizeQueue gv3 gv0), (Queue l0 l0 = amortizeQueue gv0 l0), (Queue l0 l0 = amortizeQueue gv0 gv3), (Queue l0 l0 = amortizeQueue gv0 gv0), (Queue l0 gv3 = amortizeQueue l0 l0), (Queue l0 gv3 = amortizeQueue l0 gv3), (Queue l0 gv3 = amortizeQueue l0 gv0)
(Queue l0 gv3 = amortizeQueue gv3 l0), (Queue l0 gv3 = amortizeQueue gv3 gv3), (Queue l0 gv3 = amortizeQueue gv3 gv0), (Queue l0 gv3 = amortizeQueue gv0 l0), (Queue l0 gv3 = amortizeQueue gv0 gv3), (Queue l0 gv3 = amortizeQueue gv0 gv0), (Queue l0 gv0 = amortizeQueue l0 l0), (Queue l0 gv0 = amortizeQueue l0 gv3), (Queue l0 gv0 = amortizeQueue l0 gv0), (Queue l0 gv0 = amortizeQueue gv3 l0)
(Queue l0 gv0 = amortizeQueue gv3 gv3), (Queue l0 gv0 = amortizeQueue gv3 gv0), (Queue l0 gv0 = amortizeQueue gv0 l0), (Queue l0 gv0 = amortizeQueue gv0 gv3), (Queue l0 gv0 = amortizeQueue gv0 gv0), (Queue gv3 l0 = amortizeQueue l0 l0), (Queue gv3 l0 = amortizeQueue l0 gv3), (Queue gv3 l0 = amortizeQueue l0 gv0), (Queue gv3 l0 = amortizeQueue gv3 l0), (Queue gv3 l0 = amortizeQueue gv3 gv3)
(Queue gv3 l0 = amortizeQueue gv3 gv0), (Queue gv3 l0 = amortizeQueue gv0 l0), (Queue gv3 l0 = amortizeQueue gv0 gv3), (Queue gv3 l0 = amortizeQueue gv0 gv0), (Queue gv3 gv3 = amortizeQueue l0 l0), (Queue gv3 gv3 = amortizeQueue l0 gv3), (Queue gv3 gv3 = amortizeQueue l0 gv0), (Queue gv3 gv3 = amortizeQueue gv3 l0), (Queue gv3 gv3 = amortizeQueue gv3 gv3), (Queue gv3 gv3 = amortizeQueue gv3 gv0)
(Queue gv3 gv3 = amortizeQueue gv0 l0), (Queue gv3 gv3 = amortizeQueue gv0 gv3), (Queue gv3 gv3 = amortizeQueue gv0 gv0), (Queue gv3 gv0 = amortizeQueue l0 l0), (Queue gv3 gv0 = amortizeQueue l0 gv3), (Queue gv3 gv0 = amortizeQueue l0 gv0), (Queue gv3 gv0 = amortizeQueue gv3 l0), (Queue gv3 gv0 = amortizeQueue gv3 gv3), (Queue gv3 gv0 = amortizeQueue gv3 gv0), (Queue gv3 gv0 = amortizeQueue gv0 l0)
(Queue gv3 gv0 = amortizeQueue gv0 gv3), (Queue gv3 gv0 = amortizeQueue gv0 gv0), (Queue gv0 l0 = amortizeQueue l0 l0), (Queue gv0 l0 = amortizeQueue l0 gv3), (Queue gv0 l0 = amortizeQueue l0 gv0), (Queue gv0 l0 = amortizeQueue gv3 l0), (Queue gv0 l0 = amortizeQueue gv3 gv3), (Queue gv0 l0 = amortizeQueue gv3 gv0), (Queue gv0 l0 = amortizeQueue gv0 l0), (Queue gv0 l0 = amortizeQueue gv0 gv3)
(Queue gv0 l0 = amortizeQueue gv0 gv0), (Queue gv0 gv3 = amortizeQueue l0 l0), (Queue gv0 gv3 = amortizeQueue l0 gv3), (Queue gv0 gv3 = amortizeQueue l0 gv0), (Queue gv0 gv3 = amortizeQueue gv3 l0), (Queue gv0 gv3 = amortizeQueue gv3 gv3), (Queue gv0 gv3 = amortizeQueue gv3 gv0), (Queue gv0 gv3 = amortizeQueue gv0 l0), (Queue gv0 gv3 = amortizeQueue gv0 gv3), (Queue gv0 gv3 = amortizeQueue gv0 gv0)
(Queue gv0 gv0 = amortizeQueue l0 l0), (Queue gv0 gv0 = amortizeQueue l0 gv3), (Queue gv0 gv0 = amortizeQueue l0 gv0), (Queue gv0 gv0 = amortizeQueue gv3 l0), (Queue gv0 gv0 = amortizeQueue gv3 gv3), (Queue gv0 gv0 = amortizeQueue gv3 gv0), (Queue gv0 gv0 = amortizeQueue gv0 l0), (Queue gv0 gv0 = amortizeQueue gv0 gv3), (Queue gv0 gv0 = amortizeQueue gv0 gv0), (None = Some n)
(None = Some l0), (None = Some gv3), (None = Some gv0), (len l0 = n), (len gv3 = n), (len gv0 = n), (Cons n l0 = l0), (Cons n l0 = gv3), (Cons n l0 = gv0), (Cons n l0 = rev l0)
(Cons n l0 = rev gv3), (Cons n l0 = rev gv0), (Cons n l0 = append l0 l0), (Cons n l0 = append l0 gv3), (Cons n l0 = append l0 gv0), (Cons n l0 = append gv3 l0), (Cons n l0 = append gv3 gv3), (Cons n l0 = append gv3 gv0), (Cons n l0 = append gv0 l0), (Cons n l0 = append gv0 gv3)
(Cons n l0 = append gv0 gv0), (Cons n gv3 = l0), (Cons n gv3 = gv3), (Cons n gv3 = gv0), (Cons n gv3 = rev l0), (Cons n gv3 = rev gv3), (Cons n gv3 = rev gv0), (Cons n gv3 = append l0 l0), (Cons n gv3 = append l0 gv3), (Cons n gv3 = append l0 gv0)
(Cons n gv3 = append gv3 l0), (Cons n gv3 = append gv3 gv3), (Cons n gv3 = append gv3 gv0), (Cons n gv3 = append gv0 l0), (Cons n gv3 = append gv0 gv3), (Cons n gv3 = append gv0 gv0), (Cons n gv0 = l0), (Cons n gv0 = gv3), (Cons n gv0 = gv0), (Cons n gv0 = rev l0)
(Cons n gv0 = rev gv3), (Cons n gv0 = rev gv0), (Cons n gv0 = append l0 l0), (Cons n gv0 = append l0 gv3), (Cons n gv0 = append l0 gv0), (Cons n gv0 = append gv3 l0), (Cons n gv0 = append gv3 gv3), (Cons n gv0 = append gv3 gv0), (Cons n gv0 = append gv0 l0), (Cons n gv0 = append gv0 gv3)
(Cons n gv0 = append gv0 gv0), (rev l0 = l0), (rev l0 = gv3), (rev l0 = gv0), (rev l0 = append l0 l0), (rev l0 = append l0 gv3), (rev l0 = append l0 gv0), (rev l0 = append gv3 l0), (rev l0 = append gv3 gv3), (rev l0 = append gv3 gv0)
(rev l0 = append gv0 l0), (rev l0 = append gv0 gv3), (rev l0 = append gv0 gv0), (rev gv3 = l0), (rev gv3 = gv3), (rev gv3 = gv0), (rev gv3 = append l0 l0), (rev gv3 = append l0 gv3), (rev gv3 = append l0 gv0), (rev gv3 = append gv3 l0)
(rev gv3 = append gv3 gv3), (rev gv3 = append gv3 gv0), (rev gv3 = append gv0 l0), (rev gv3 = append gv0 gv3), (rev gv3 = append gv0 gv0), (rev gv0 = l0), (rev gv0 = gv3), (rev gv0 = gv0), (rev gv0 = append l0 l0), (rev gv0 = append l0 gv3)
(rev gv0 = append l0 gv0), (rev gv0 = append gv3 l0), (rev gv0 = append gv3 gv3), (rev gv0 = append gv3 gv0), (rev gv0 = append gv0 l0), (rev gv0 = append gv0 gv3), (rev gv0 = append gv0 gv0), (append l0 l0 = l0), (append l0 l0 = gv3), (append l0 l0 = gv0)
(append l0 gv3 = l0), (append l0 gv3 = gv3), (append l0 gv3 = gv0), (append l0 gv0 = l0), (append l0 gv0 = gv3), (append l0 gv0 = gv0), (append gv3 l0 = l0), (append gv3 l0 = gv3), (append gv3 l0 = gv0), (append gv3 gv3 = l0)
(append gv3 gv3 = gv3), (append gv3 gv3 = gv0), (append gv3 gv0 = l0), (append gv3 gv0 = gv3), (append gv3 gv0 = gv0), (append gv0 l0 = l0), (append gv0 l0 = gv3), (append gv0 l0 = gv0), (append gv0 gv3 = l0), (append gv0 gv3 = gv3)
(append gv0 gv3 = gv0), (append gv0 gv0 = l0), (append gv0 gv0 = gv3), (append gv0 gv0 = gv0), (Nil = Cons n l0), (Nil = Cons n gv3), (Nil = Cons n gv0), (Nil = rev l0), (Nil = rev gv3), (Nil = rev gv0)
(Nil = append l0 l0), (Nil = append l0 gv3), (Nil = append l0 gv0), (Nil = append gv3 l0), (Nil = append gv3 gv3), (Nil = append gv3 gv0), (Nil = append gv0 l0), (Nil = append gv0 gv3), (Nil = append gv0 gv0)

Label: 6 (6)
(n < n), (n <= n), (n = n), (gv4 = gv4), (gv4 = l0), (l0 = gv4), (l0 = l0), (n < len gv4), (n < len l0), (len gv4 < n)
(len gv4 < len l0), (len l0 < n), (len l0 < len gv4), (n <= len gv4), (n <= len l0), (len gv4 <= n), (len gv4 <= len l0), (len l0 <= n), (len l0 <= len gv4), (~ n < n)
(~ n <= n), (n <> n), (gv4 <> gv4), (gv4 <> l0), (l0 <> gv4), (l0 <> l0), (Queue gv4 gv4 = amortizeQueue gv4 gv4), (Queue gv4 gv4 = amortizeQueue gv4 l0), (Queue gv4 gv4 = amortizeQueue l0 gv4), (Queue gv4 gv4 = amortizeQueue l0 l0)
(Queue gv4 l0 = amortizeQueue gv4 gv4), (Queue gv4 l0 = amortizeQueue gv4 l0), (Queue gv4 l0 = amortizeQueue l0 gv4), (Queue gv4 l0 = amortizeQueue l0 l0), (Queue l0 gv4 = amortizeQueue gv4 gv4), (Queue l0 gv4 = amortizeQueue gv4 l0), (Queue l0 gv4 = amortizeQueue l0 gv4), (Queue l0 gv4 = amortizeQueue l0 l0), (Queue l0 l0 = amortizeQueue gv4 gv4), (Queue l0 l0 = amortizeQueue gv4 l0)
(Queue l0 l0 = amortizeQueue l0 gv4), (Queue l0 l0 = amortizeQueue l0 l0), (None = Some n), (None = Some gv4), (None = Some l0), (len gv4 = n), (len l0 = n), (Cons n gv4 = gv4), (Cons n gv4 = l0), (Cons n gv4 = rev gv4)
(Cons n gv4 = rev l0), (Cons n gv4 = append gv4 gv4), (Cons n gv4 = append gv4 l0), (Cons n gv4 = append l0 gv4), (Cons n gv4 = append l0 l0), (Cons n l0 = gv4), (Cons n l0 = l0), (Cons n l0 = rev gv4), (Cons n l0 = rev l0), (Cons n l0 = append gv4 gv4)
(Cons n l0 = append gv4 l0), (Cons n l0 = append l0 gv4), (Cons n l0 = append l0 l0), (rev gv4 = gv4), (rev gv4 = l0), (rev gv4 = append gv4 gv4), (rev gv4 = append gv4 l0), (rev gv4 = append l0 gv4), (rev gv4 = append l0 l0), (rev l0 = gv4)
(rev l0 = l0), (rev l0 = append gv4 gv4), (rev l0 = append gv4 l0), (rev l0 = append l0 gv4), (rev l0 = append l0 l0), (append gv4 gv4 = gv4), (append gv4 gv4 = l0), (append gv4 l0 = gv4), (append gv4 l0 = l0), (append l0 gv4 = gv4)
(append l0 gv4 = l0), (append l0 l0 = gv4), (append l0 l0 = l0), (Nil = Cons n gv4), (Nil = Cons n l0), (Nil = rev gv4), (Nil = rev l0), (Nil = append gv4 gv4), (Nil = append gv4 l0), (Nil = append l0 gv4)
(Nil = append l0 l0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 89.504 seconds


Label: 0 (0)
(Nil = rev gv3), (append l0 gv3 = l0), (append gv3 l0 = l0), (append gv3 gv3 = gv3), (append gv3 gv1 = gv1), (append gv1 gv3 = gv1), (Nil = append gv3 gv3), (rev gv3 = append gv3 gv3)

Label: 1 (1)
(Cons n l0 = rev gv4)

Label: 2 (2)
(Nil = rev gv3), (append gv3 l0 = l0), (append l0 gv3 = l0), (append gv3 gv3 = gv3), (append gv3 gv2 = gv2), (append gv2 gv3 = gv2), (Nil = append gv3 gv3), (rev gv3 = append gv3 gv3), (rev gv2 = append gv3 gv2), (rev gv2 = append gv2 gv3)

Label: 3 (3)
(Cons n l0 = rev gv4), (rev gv4 = append gv2 l0)

Label: 4 (4)
(Nil = rev gv3), (append gv3 l0 = l0), (append l0 gv3 = l0), (append gv3 gv3 = gv3), (Nil = append gv3 gv3), (rev gv3 = append gv3 gv3)

Label: 5 (5)
(Nil = rev gv3), (append l0 gv3 = l0), (append gv3 l0 = l0), (append gv3 gv3 = gv3), (append gv3 gv0 = gv0), (append gv0 gv3 = gv0), (Nil = append gv3 gv3), (rev gv3 = append gv3 gv3)

Label: 6 (6)
(Cons n l0 = rev gv4)


------------------------------ ALL RESULTS ------------------------------
1. (append gv1 (Cons n Nil) = append (append gv1 (Cons n Nil)) Nil)

2. (append gv1 gv2 = append (append gv1 gv2) Nil)

3. (gv0 = append gv0 Nil)

4. (append (rev l0) gv2 = append (append (rev l0) gv2) Nil)

5. (append (rev l0) (Cons n Nil) = append (append (rev l0) (Cons n Nil)) Nil)

6. (append Nil Nil = Nil)

7. (Nil = rev gv3 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

8. (Nil = rev gv3 -> append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

9. (Nil = rev gv3 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

10. (Nil = rev gv3 -> gv0 = append gv0 gv3)

11. (append l0 gv3 = l0 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

12. (append gv3 l0 = l0 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

13. (append gv3 gv3 = gv3 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

14. (append gv3 gv1 = gv1 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

15. (append gv1 gv3 = gv1 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

16. (Nil = append gv3 gv3 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

17. (append gv3 l0 = l0 -> append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

18. (append l0 gv3 = l0 -> append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

19. (append gv3 gv3 = gv3 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

20. (append gv3 gv2 = gv2 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

21. (append gv2 gv3 = gv2 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

22. (Nil = append gv3 gv3 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

23. (append gv3 l0 = l0 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

24. (append l0 gv3 = l0 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

25. (append gv3 gv3 = gv3 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

26. (Nil = append gv3 gv3 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

27. (append l0 gv3 = l0 -> gv0 = append gv0 gv3)

28. (append gv3 l0 = l0 -> gv0 = append gv0 gv3)

29. (append gv3 gv3 = gv3 -> gv0 = append gv0 gv3)

30. (append gv3 gv0 = gv0 -> gv0 = append gv0 gv3)

31. (Nil = append gv3 gv3 -> gv0 = append gv0 gv3)

32. (rev gv3 = append gv3 gv3 ->  append gv1 (Cons n gv3) = append (append gv1 (Cons n gv3)) gv3)

33. (rev gv3 = append gv3 gv3 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

34. (rev gv2 = append gv3 gv2 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

35. (rev gv2 = append gv2 gv3 ->  append (rev l0) gv2 = append (append (rev l0) gv2) gv3)

36. (rev gv3 = append gv3 gv3 ->  append (rev l0) (Cons n gv3) = append (append (rev l0) (Cons n gv3)) gv3)

37. (rev gv3 = append gv3 gv3 -> gv0 = append gv0 gv3)

38. (Cons n l0 = rev gv4 -> append (rev l0) (Cons n Nil) = gv4)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 154.564 seconds

Number of Result Pairs Returned: 38

1. (append gv1 (Cons n Nil) = append (append gv1 (Cons n Nil)) Nil)

2. (append gv1 gv2 = append (append gv1 gv2) Nil)

3. (gv0 = append gv0 Nil)

4. (append (rev l0) gv2 = append (append (rev l0) gv2) Nil)

5. (append (rev l0) (Cons n Nil) = append (append (rev l0) (Cons n Nil)) Nil)
