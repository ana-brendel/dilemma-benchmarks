Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + 1) v l r) = true)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.815 seconds

gv6 : bool = true
gv4 : nat = 1
gv1 : heap = (Heap (rank r + 1) v l r)
gv3 : nat = (rank r)
gv2 : nat = (rank r + 1)
gv0 : bool = (has_leftist_property (Heap (rank r + 1) v l r))
gv5 : nat = 0


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 226.477 seconds

Label: Generalization #0
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + 1) v l r) = true)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (0 = gv5)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + S gv5) v l r) = true)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (gv3 <= rank l)
 -- (has_leftist_property l = true)
 -- (rank r = gv3)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap (gv3 + 1) v l r) = true)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (rank r + 1 = gv2)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap gv2 v l r) = true)
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (has_leftist_property (Heap (rank r + 1) v l r) = gv0)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (gv0 = true)
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = gv6)
 -- (has_leftist_property r = gv6)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + 1) v l r) = gv6)
Case: Valid and Generalized

Label: Generalization #6
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = gv6)
 -- (0 = gv5)
 -- (has_leftist_property r = gv6)
 -- (true = gv6)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + S gv5) v l r) = gv6)
Case: Invalid and Generalized

Label: Generalization #7
Assumptions: 
 -- (gv3 <= rank l)
 -- (has_leftist_property l = gv6)
 -- (rank r = gv3)
 -- (has_leftist_property r = gv6)
 -- (true = gv6)

----------------------------------
Goal: (has_leftist_property (Heap (gv3 + 1) v l r) = gv6)
Case: Invalid and Generalized

Label: Generalization #8
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = gv6)
 -- (rank r + 1 = gv2)
 -- (has_leftist_property r = gv6)
 -- (true = gv6)

----------------------------------
Goal: (has_leftist_property (Heap gv2 v l r) = gv6)
Case: Invalid and Generalized

Label: Generalization #9
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = gv6)
 -- (1 = gv4)
 -- (has_leftist_property r = gv6)
 -- (true = gv6)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + gv4) v l r) = gv6)
Case: Invalid and Generalized

Label: Generalization #10
Assumptions: 
 -- (rank r <= rank l)
 -- (Heap (rank r + 1) v l r = gv1)
 -- (has_leftist_property l = gv6)
 -- (has_leftist_property r = gv6)
 -- (true = gv6)

----------------------------------
Goal: (has_leftist_property gv1 = gv6)
Case: Invalid and Generalized

Label: Generalization #11
Assumptions: 
 -- (rank r <= rank l)
 -- (has_leftist_property l = true)
 -- (1 = gv4)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property (Heap (rank r + gv4) v l r) = true)
Case: Invalid and Generalized

Label: Generalization #12
Assumptions: 
 -- (rank r <= rank l)
 -- (Heap (rank r + 1) v l r = gv1)
 -- (has_leftist_property l = true)
 -- (has_leftist_property r = true)

----------------------------------
Goal: (has_leftist_property gv1 = true)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 226.91 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
lst : Set
lst_rect : (forall P : lst -> Type,
 (forall (n : nat) (l : lst), P l -> P (Cons n l)) ->
 P Nil -> forall l : lst, P l)
lst_rec : (forall P : lst -> Set,
 (forall (n : nat) (l : lst), P l -> P (Cons n l)) ->
 P Nil -> forall l : lst, P l)
heap : Set
heap_rect : (forall P : heap -> Type,
 P Hleaf ->
 (forall (n n0 : nat) (h : heap),
  P h -> forall h0 : heap, P h0 -> P (Heap n n0 h h0)) ->
 forall h : heap, P h)
heap_rec : (forall P : heap -> Set,
 P Hleaf ->
 (forall (n n0 : nat) (h : heap),
  P h -> forall h0 : heap, P h0 -> P (Heap n n0 h h0)) ->
 forall h : heap, P h)
right_height : (heap -> nat)
rank : (heap -> nat)
has_leftist_property : (heap -> bool)
hsize : (heap -> nat)
mergea : (nat -> heap -> heap -> heap)
merge : (heap -> heap -> heap)
hinsert : (heap -> nat -> heap)
hinsert_all : (lst -> heap -> heap)
Cons : (nat -> lst -> lst)
Nil : lst
Hleaf : heap
Heap : (nat -> nat -> heap -> heap -> heap)
show_lst : (Show.Show lst)
show_heap : (Show.Show heap)

Label: 0 (0)
Abducted Assumption: (rank r <= rank l)
Positive Examples: 500
Negative Examples: 26

Label: 1 (1)
Abducted Assumption: (has_leftist_property l = true)
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Abducted Assumption: (has_leftist_property r = true)
Positive Examples: 500
Negative Examples: 275

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 82
Negative Examples: 76

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 75
Negative Examples: 31

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 67
Negative Examples: 71

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 64
Negative Examples: 29

Label: 7 (7)
Inferring Condition About Generalization
Positive Examples: 85
Negative Examples: 58

Label: 8 (8)
Inferring Condition About Generalization
Positive Examples: 87
Negative Examples: 23

Label: 9 (9)
Inferring Condition About Generalization
Positive Examples: 78
Negative Examples: 70

Label: 10 (10)
Inferring Condition About Generalization
Positive Examples: 85
Negative Examples: 48

Label: 11 (11)
Inferring Condition About Generalization
Positive Examples: 91
Negative Examples: 385

Label: 12 (12)
Inferring Condition About Generalization
Positive Examples: 64
Negative Examples: 62

Label: 13 (13)
Inferring Condition About Generalization
Positive Examples: 90
Negative Examples: 288


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 227.49 seconds


Label: 0 (0)
(v < v), (v <= v), (v = v), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (hsize l < v), (hsize l < hsize r), (hsize l < rank l)
(hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v)
(rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l)
(rank r < right_height r), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < v), (right_height r < hsize l), (right_height r < hsize r)
(right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r), (v <= right_height l), (v <= right_height r), (hsize l <= v)
(hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l)
(hsize r <= right_height r), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r), (rank r <= v), (rank r <= hsize l), (rank r <= hsize r)
(rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (~ v < v), (~ v <= v), (v <> v), (l <> l), (l <> r)
(r <> l), (r <> r), (None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = merge l l), (Heap v v l l = merge l r)
(Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v)
(Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v r l = l), (Heap v v r l = r)
(Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r)
(Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r)
(Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (hinsert l v = l), (hinsert l v = r), (hinsert r v = l), (hinsert r v = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert r v)
(merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert r v), (merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert r v), (merge r r = l), (merge r r = r)
(merge r r = hinsert l v), (merge r r = hinsert r v), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r)
(mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert r v), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r)
(mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v)
(mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = hinsert l v), (Hleaf = hinsert r v)
(Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (hsize l = v), (hsize r = v)
(rank l = v), (rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l)
(right_height l = rank r), (right_height r = v), (right_height r = hsize l), (right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some v)

Label: 1 (1)
(v < v), (v <= v), (v = v), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (hsize l < v), (hsize l < hsize r), (hsize l < rank l)
(hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v)
(rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l)
(rank r < right_height r), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < v), (right_height r < hsize l), (right_height r < hsize r)
(right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r), (v <= right_height l), (v <= right_height r), (hsize l <= v)
(hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l)
(hsize r <= right_height r), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r), (rank r <= v), (rank r <= hsize l), (rank r <= hsize r)
(rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (~ v < v), (~ v <= v), (v <> v), (l <> l), (l <> r)
(r <> l), (r <> r), (None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = merge l l), (Heap v v l l = merge l r)
(Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v)
(Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v r l = l), (Heap v v r l = r)
(Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r)
(Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r)
(Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (hinsert l v = l), (hinsert l v = r), (hinsert r v = l), (hinsert r v = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert r v)
(merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert r v), (merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert r v), (merge r r = l), (merge r r = r)
(merge r r = hinsert l v), (merge r r = hinsert r v), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r)
(mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert r v), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r)
(mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v)
(mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = hinsert l v), (Hleaf = hinsert r v)
(Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (hsize l = v), (hsize r = v)
(rank l = v), (rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l)
(right_height l = rank r), (right_height r = v), (right_height r = hsize l), (right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some v)

Label: 2 (2)
(v < v), (v <= v), (v = v), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l)
(true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (hsize l < v), (hsize l < hsize r), (hsize l < rank l)
(hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v)
(rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l)
(rank r < right_height r), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < v), (right_height r < hsize l), (right_height r < hsize r)
(right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r), (v <= right_height l), (v <= right_height r), (hsize l <= v)
(hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l)
(hsize r <= right_height r), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r), (rank r <= v), (rank r <= hsize l), (rank r <= hsize r)
(rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v)
(right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (~ v < v), (~ v <= v), (v <> v), (l <> l), (l <> r)
(r <> l), (r <> r), (None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = merge l l), (Heap v v l l = merge l r)
(Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v)
(Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v r l = l), (Heap v v r l = r)
(Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r)
(Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r)
(Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (hinsert l v = l), (hinsert l v = r), (hinsert r v = l), (hinsert r v = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert r v)
(merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert r v), (merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert r v), (merge r r = l), (merge r r = r)
(merge r r = hinsert l v), (merge r r = hinsert r v), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r)
(mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert r v), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r)
(mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v)
(mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = hinsert l v), (Hleaf = hinsert r v)
(Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (hsize l = v), (hsize r = v)
(rank l = v), (rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l)
(right_height l = rank r), (right_height r = v), (right_height r = hsize l), (right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some v)

Label: 3 (3)
(v < v), (v < gv5), (gv5 < v), (gv5 < gv5), (v <= v), (v <= gv5), (gv5 <= v), (gv5 <= gv5), (v = v), (v = gv5)
(gv5 = v), (gv5 = gv5), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l), (true = has_leftist_property r)
(v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (gv5 < hsize l), (gv5 < hsize r), (gv5 < rank l), (gv5 < rank r)
(gv5 < right_height l), (gv5 < right_height r), (hsize l < v), (hsize l < gv5), (hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v)
(hsize r < gv5), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v), (rank l < gv5), (rank l < hsize l), (rank l < hsize r)
(rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < gv5), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r)
(right_height l < v), (right_height l < gv5), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < v), (right_height r < gv5), (right_height r < hsize l)
(right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r), (v <= right_height l), (v <= right_height r)
(gv5 <= hsize l), (gv5 <= hsize r), (gv5 <= rank l), (gv5 <= rank r), (gv5 <= right_height l), (gv5 <= right_height r), (hsize l <= v), (hsize l <= gv5), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= gv5), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r)
(rank l <= v), (rank l <= gv5), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r), (rank r <= v), (rank r <= gv5), (rank r <= hsize l)
(rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= gv5), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height l <= right_height r), (right_height r <= v), (right_height r <= gv5), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (~ v < v), (~ v < gv5)
(~ gv5 < v), (~ gv5 < gv5), (~ v <= v), (~ v <= gv5), (~ gv5 <= v), (~ gv5 <= gv5), (v <> v), (v <> gv5), (gv5 <> v), (gv5 <> gv5)
(l <> l), (l <> r), (r <> l), (r <> r), (None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv5)
(Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv5), (Heap v v l l = merge l l), (Heap v v l l = merge l r), (Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r)
(Heap v v l l = mergea gv5 l l), (Heap v v l l = mergea gv5 l r), (Heap v v l l = mergea gv5 r l), (Heap v v l l = mergea gv5 r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv5), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv5)
(Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea gv5 l l), (Heap v v l r = mergea gv5 l r)
(Heap v v l r = mergea gv5 r l), (Heap v v l r = mergea gv5 r r), (Heap v v r l = l), (Heap v v r l = r), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv5), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv5), (Heap v v r l = merge l l), (Heap v v r l = merge l r)
(Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea gv5 l l), (Heap v v r l = mergea gv5 l r), (Heap v v r l = mergea gv5 r l), (Heap v v r l = mergea gv5 r r)
(Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv5), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv5), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r)
(Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea gv5 l l), (Heap v v r r = mergea gv5 l r), (Heap v v r r = mergea gv5 r l), (Heap v v r r = mergea gv5 r r), (Heap v gv5 l l = l), (Heap v gv5 l l = r)
(Heap v gv5 l l = hinsert l v), (Heap v gv5 l l = hinsert l gv5), (Heap v gv5 l l = hinsert r v), (Heap v gv5 l l = hinsert r gv5), (Heap v gv5 l l = merge l l), (Heap v gv5 l l = merge l r), (Heap v gv5 l l = merge r l), (Heap v gv5 l l = merge r r), (Heap v gv5 l l = mergea v l l), (Heap v gv5 l l = mergea v l r)
(Heap v gv5 l l = mergea v r l), (Heap v gv5 l l = mergea v r r), (Heap v gv5 l l = mergea gv5 l l), (Heap v gv5 l l = mergea gv5 l r), (Heap v gv5 l l = mergea gv5 r l), (Heap v gv5 l l = mergea gv5 r r), (Heap v gv5 l r = l), (Heap v gv5 l r = r), (Heap v gv5 l r = hinsert l v), (Heap v gv5 l r = hinsert l gv5)
(Heap v gv5 l r = hinsert r v), (Heap v gv5 l r = hinsert r gv5), (Heap v gv5 l r = merge l l), (Heap v gv5 l r = merge l r), (Heap v gv5 l r = merge r l), (Heap v gv5 l r = merge r r), (Heap v gv5 l r = mergea v l l), (Heap v gv5 l r = mergea v l r), (Heap v gv5 l r = mergea v r l), (Heap v gv5 l r = mergea v r r)
(Heap v gv5 l r = mergea gv5 l l), (Heap v gv5 l r = mergea gv5 l r), (Heap v gv5 l r = mergea gv5 r l), (Heap v gv5 l r = mergea gv5 r r), (Heap v gv5 r l = l), (Heap v gv5 r l = r), (Heap v gv5 r l = hinsert l v), (Heap v gv5 r l = hinsert l gv5), (Heap v gv5 r l = hinsert r v), (Heap v gv5 r l = hinsert r gv5)
(Heap v gv5 r l = merge l l), (Heap v gv5 r l = merge l r), (Heap v gv5 r l = merge r l), (Heap v gv5 r l = merge r r), (Heap v gv5 r l = mergea v l l), (Heap v gv5 r l = mergea v l r), (Heap v gv5 r l = mergea v r l), (Heap v gv5 r l = mergea v r r), (Heap v gv5 r l = mergea gv5 l l), (Heap v gv5 r l = mergea gv5 l r)
(Heap v gv5 r l = mergea gv5 r l), (Heap v gv5 r l = mergea gv5 r r), (Heap v gv5 r r = l), (Heap v gv5 r r = r), (Heap v gv5 r r = hinsert l v), (Heap v gv5 r r = hinsert l gv5), (Heap v gv5 r r = hinsert r v), (Heap v gv5 r r = hinsert r gv5), (Heap v gv5 r r = merge l l), (Heap v gv5 r r = merge l r)
(Heap v gv5 r r = merge r l), (Heap v gv5 r r = merge r r), (Heap v gv5 r r = mergea v l l), (Heap v gv5 r r = mergea v l r), (Heap v gv5 r r = mergea v r l), (Heap v gv5 r r = mergea v r r), (Heap v gv5 r r = mergea gv5 l l), (Heap v gv5 r r = mergea gv5 l r), (Heap v gv5 r r = mergea gv5 r l), (Heap v gv5 r r = mergea gv5 r r)
(Heap gv5 v l l = l), (Heap gv5 v l l = r), (Heap gv5 v l l = hinsert l v), (Heap gv5 v l l = hinsert l gv5), (Heap gv5 v l l = hinsert r v), (Heap gv5 v l l = hinsert r gv5), (Heap gv5 v l l = merge l l), (Heap gv5 v l l = merge l r), (Heap gv5 v l l = merge r l), (Heap gv5 v l l = merge r r)
(Heap gv5 v l l = mergea v l l), (Heap gv5 v l l = mergea v l r), (Heap gv5 v l l = mergea v r l), (Heap gv5 v l l = mergea v r r), (Heap gv5 v l l = mergea gv5 l l), (Heap gv5 v l l = mergea gv5 l r), (Heap gv5 v l l = mergea gv5 r l), (Heap gv5 v l l = mergea gv5 r r), (Heap gv5 v l r = l), (Heap gv5 v l r = r)
(Heap gv5 v l r = hinsert l v), (Heap gv5 v l r = hinsert l gv5), (Heap gv5 v l r = hinsert r v), (Heap gv5 v l r = hinsert r gv5), (Heap gv5 v l r = merge l l), (Heap gv5 v l r = merge l r), (Heap gv5 v l r = merge r l), (Heap gv5 v l r = merge r r), (Heap gv5 v l r = mergea v l l), (Heap gv5 v l r = mergea v l r)
(Heap gv5 v l r = mergea v r l), (Heap gv5 v l r = mergea v r r), (Heap gv5 v l r = mergea gv5 l l), (Heap gv5 v l r = mergea gv5 l r), (Heap gv5 v l r = mergea gv5 r l), (Heap gv5 v l r = mergea gv5 r r), (Heap gv5 v r l = l), (Heap gv5 v r l = r), (Heap gv5 v r l = hinsert l v), (Heap gv5 v r l = hinsert l gv5)
(Heap gv5 v r l = hinsert r v), (Heap gv5 v r l = hinsert r gv5), (Heap gv5 v r l = merge l l), (Heap gv5 v r l = merge l r), (Heap gv5 v r l = merge r l), (Heap gv5 v r l = merge r r), (Heap gv5 v r l = mergea v l l), (Heap gv5 v r l = mergea v l r), (Heap gv5 v r l = mergea v r l), (Heap gv5 v r l = mergea v r r)
(Heap gv5 v r l = mergea gv5 l l), (Heap gv5 v r l = mergea gv5 l r), (Heap gv5 v r l = mergea gv5 r l), (Heap gv5 v r l = mergea gv5 r r), (Heap gv5 v r r = l), (Heap gv5 v r r = r), (Heap gv5 v r r = hinsert l v), (Heap gv5 v r r = hinsert l gv5), (Heap gv5 v r r = hinsert r v), (Heap gv5 v r r = hinsert r gv5)
(Heap gv5 v r r = merge l l), (Heap gv5 v r r = merge l r), (Heap gv5 v r r = merge r l), (Heap gv5 v r r = merge r r), (Heap gv5 v r r = mergea v l l), (Heap gv5 v r r = mergea v l r), (Heap gv5 v r r = mergea v r l), (Heap gv5 v r r = mergea v r r), (Heap gv5 v r r = mergea gv5 l l), (Heap gv5 v r r = mergea gv5 l r)
(Heap gv5 v r r = mergea gv5 r l), (Heap gv5 v r r = mergea gv5 r r), (Heap gv5 gv5 l l = l), (Heap gv5 gv5 l l = r), (Heap gv5 gv5 l l = hinsert l v), (Heap gv5 gv5 l l = hinsert l gv5), (Heap gv5 gv5 l l = hinsert r v), (Heap gv5 gv5 l l = hinsert r gv5), (Heap gv5 gv5 l l = merge l l), (Heap gv5 gv5 l l = merge l r)
(Heap gv5 gv5 l l = merge r l), (Heap gv5 gv5 l l = merge r r), (Heap gv5 gv5 l l = mergea v l l), (Heap gv5 gv5 l l = mergea v l r), (Heap gv5 gv5 l l = mergea v r l), (Heap gv5 gv5 l l = mergea v r r), (Heap gv5 gv5 l l = mergea gv5 l l), (Heap gv5 gv5 l l = mergea gv5 l r), (Heap gv5 gv5 l l = mergea gv5 r l), (Heap gv5 gv5 l l = mergea gv5 r r)
(Heap gv5 gv5 l r = l), (Heap gv5 gv5 l r = r), (Heap gv5 gv5 l r = hinsert l v), (Heap gv5 gv5 l r = hinsert l gv5), (Heap gv5 gv5 l r = hinsert r v), (Heap gv5 gv5 l r = hinsert r gv5), (Heap gv5 gv5 l r = merge l l), (Heap gv5 gv5 l r = merge l r), (Heap gv5 gv5 l r = merge r l), (Heap gv5 gv5 l r = merge r r)
(Heap gv5 gv5 l r = mergea v l l), (Heap gv5 gv5 l r = mergea v l r), (Heap gv5 gv5 l r = mergea v r l), (Heap gv5 gv5 l r = mergea v r r), (Heap gv5 gv5 l r = mergea gv5 l l), (Heap gv5 gv5 l r = mergea gv5 l r), (Heap gv5 gv5 l r = mergea gv5 r l), (Heap gv5 gv5 l r = mergea gv5 r r), (Heap gv5 gv5 r l = l), (Heap gv5 gv5 r l = r)
(Heap gv5 gv5 r l = hinsert l v), (Heap gv5 gv5 r l = hinsert l gv5), (Heap gv5 gv5 r l = hinsert r v), (Heap gv5 gv5 r l = hinsert r gv5), (Heap gv5 gv5 r l = merge l l), (Heap gv5 gv5 r l = merge l r), (Heap gv5 gv5 r l = merge r l), (Heap gv5 gv5 r l = merge r r), (Heap gv5 gv5 r l = mergea v l l), (Heap gv5 gv5 r l = mergea v l r)
(Heap gv5 gv5 r l = mergea v r l), (Heap gv5 gv5 r l = mergea v r r), (Heap gv5 gv5 r l = mergea gv5 l l), (Heap gv5 gv5 r l = mergea gv5 l r), (Heap gv5 gv5 r l = mergea gv5 r l), (Heap gv5 gv5 r l = mergea gv5 r r), (Heap gv5 gv5 r r = l), (Heap gv5 gv5 r r = r), (Heap gv5 gv5 r r = hinsert l v), (Heap gv5 gv5 r r = hinsert l gv5)
(Heap gv5 gv5 r r = hinsert r v), (Heap gv5 gv5 r r = hinsert r gv5), (Heap gv5 gv5 r r = merge l l), (Heap gv5 gv5 r r = merge l r), (Heap gv5 gv5 r r = merge r l), (Heap gv5 gv5 r r = merge r r), (Heap gv5 gv5 r r = mergea v l l), (Heap gv5 gv5 r r = mergea v l r), (Heap gv5 gv5 r r = mergea v r l), (Heap gv5 gv5 r r = mergea v r r)
(Heap gv5 gv5 r r = mergea gv5 l l), (Heap gv5 gv5 r r = mergea gv5 l r), (Heap gv5 gv5 r r = mergea gv5 r l), (Heap gv5 gv5 r r = mergea gv5 r r), (hinsert l v = l), (hinsert l v = r), (hinsert l gv5 = l), (hinsert l gv5 = r), (hinsert r v = l), (hinsert r v = r)
(hinsert r gv5 = l), (hinsert r gv5 = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert l gv5), (merge l l = hinsert r v), (merge l l = hinsert r gv5), (merge l r = l), (merge l r = r)
(merge l r = hinsert l v), (merge l r = hinsert l gv5), (merge l r = hinsert r v), (merge l r = hinsert r gv5), (merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert l gv5), (merge r l = hinsert r v), (merge r l = hinsert r gv5)
(merge r r = l), (merge r r = r), (merge r r = hinsert l v), (merge r r = hinsert l gv5), (merge r r = hinsert r v), (merge r r = hinsert r gv5), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv5)
(mergea v l l = hinsert r v), (mergea v l l = hinsert r gv5), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv5)
(mergea v l r = hinsert r v), (mergea v l r = hinsert r gv5), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv5)
(mergea v r l = hinsert r v), (mergea v r l = hinsert r gv5), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv5)
(mergea v r r = hinsert r v), (mergea v r r = hinsert r gv5), (mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r), (mergea gv5 l l = l), (mergea gv5 l l = r), (mergea gv5 l l = hinsert l v), (mergea gv5 l l = hinsert l gv5)
(mergea gv5 l l = hinsert r v), (mergea gv5 l l = hinsert r gv5), (mergea gv5 l l = merge l l), (mergea gv5 l l = merge l r), (mergea gv5 l l = merge r l), (mergea gv5 l l = merge r r), (mergea gv5 l r = l), (mergea gv5 l r = r), (mergea gv5 l r = hinsert l v), (mergea gv5 l r = hinsert l gv5)
(mergea gv5 l r = hinsert r v), (mergea gv5 l r = hinsert r gv5), (mergea gv5 l r = merge l l), (mergea gv5 l r = merge l r), (mergea gv5 l r = merge r l), (mergea gv5 l r = merge r r), (mergea gv5 r l = l), (mergea gv5 r l = r), (mergea gv5 r l = hinsert l v), (mergea gv5 r l = hinsert l gv5)
(mergea gv5 r l = hinsert r v), (mergea gv5 r l = hinsert r gv5), (mergea gv5 r l = merge l l), (mergea gv5 r l = merge l r), (mergea gv5 r l = merge r l), (mergea gv5 r l = merge r r), (mergea gv5 r r = l), (mergea gv5 r r = r), (mergea gv5 r r = hinsert l v), (mergea gv5 r r = hinsert l gv5)
(mergea gv5 r r = hinsert r v), (mergea gv5 r r = hinsert r gv5), (mergea gv5 r r = merge l l), (mergea gv5 r r = merge l r), (mergea gv5 r r = merge r l), (mergea gv5 r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r)
(Hleaf = Heap v gv5 l l), (Hleaf = Heap v gv5 l r), (Hleaf = Heap v gv5 r l), (Hleaf = Heap v gv5 r r), (Hleaf = Heap gv5 v l l), (Hleaf = Heap gv5 v l r), (Hleaf = Heap gv5 v r l), (Hleaf = Heap gv5 v r r), (Hleaf = Heap gv5 gv5 l l), (Hleaf = Heap gv5 gv5 l r)
(Hleaf = Heap gv5 gv5 r l), (Hleaf = Heap gv5 gv5 r r), (Hleaf = hinsert l v), (Hleaf = hinsert l gv5), (Hleaf = hinsert r v), (Hleaf = hinsert r gv5), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r)
(Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (Hleaf = mergea gv5 l l), (Hleaf = mergea gv5 l r), (Hleaf = mergea gv5 r l), (Hleaf = mergea gv5 r r), (hsize l = v), (hsize l = gv5)
(hsize r = v), (hsize r = gv5), (rank l = v), (rank l = gv5), (rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = gv5), (rank r = hsize l), (rank r = hsize r)
(right_height l = v), (right_height l = gv5), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r), (right_height r = v), (right_height r = gv5), (right_height r = hsize l), (right_height r = hsize r)
(right_height r = rank l), (right_height r = rank r), (None = Some v), (None = Some gv5)

Label: 4 (4)
(v < v), (v < gv3), (gv3 < v), (gv3 < gv3), (v <= v), (v <= gv3), (gv3 <= v), (gv3 <= gv3), (r = r), (r = l)
(l = r), (l = l), (v = v), (v = gv3), (gv3 = v), (gv3 = gv3), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l)
(v < hsize r), (v < hsize l), (v < rank r), (v < rank l), (v < right_height r), (v < right_height l), (gv3 < hsize r), (gv3 < hsize l), (gv3 < rank r), (gv3 < rank l)
(gv3 < right_height r), (gv3 < right_height l), (hsize r < v), (hsize r < gv3), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < v)
(hsize l < gv3), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < v), (rank r < gv3), (rank r < hsize r), (rank r < hsize l)
(rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < v), (rank l < gv3), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l)
(right_height r < v), (right_height r < gv3), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < v), (right_height l < gv3), (right_height l < hsize r)
(right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (v <= hsize r), (v <= hsize l), (v <= rank r), (v <= rank l), (v <= right_height r), (v <= right_height l)
(gv3 <= hsize r), (gv3 <= hsize l), (gv3 <= rank r), (gv3 <= rank l), (gv3 <= right_height r), (gv3 <= right_height l), (hsize r <= v), (hsize r <= gv3), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= v), (hsize l <= gv3), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l)
(rank r <= v), (rank r <= gv3), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= v), (rank l <= gv3), (rank l <= hsize r)
(rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= v), (right_height r <= gv3), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height r <= right_height l), (right_height l <= v), (right_height l <= gv3), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ v < v), (~ v < gv3)
(~ gv3 < v), (~ gv3 < gv3), (~ v <= v), (~ v <= gv3), (~ gv3 <= v), (~ gv3 <= gv3), (r <> r), (r <> l), (l <> r), (l <> l)
(v <> v), (v <> gv3), (gv3 <> v), (gv3 <> gv3), (None = Some r), (None = Some l), (Heap v v r r = r), (Heap v v r r = l), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv3)
(Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv3), (Heap v v r r = merge r r), (Heap v v r r = merge r l), (Heap v v r r = merge l r), (Heap v v r r = merge l l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l l)
(Heap v v r r = mergea gv3 r r), (Heap v v r r = mergea gv3 r l), (Heap v v r r = mergea gv3 l r), (Heap v v r r = mergea gv3 l l), (Heap v v r l = r), (Heap v v r l = l), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv3), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv3)
(Heap v v r l = merge r r), (Heap v v r l = merge r l), (Heap v v r l = merge l r), (Heap v v r l = merge l l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea gv3 r r), (Heap v v r l = mergea gv3 r l)
(Heap v v r l = mergea gv3 l r), (Heap v v r l = mergea gv3 l l), (Heap v v l r = r), (Heap v v l r = l), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv3), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv3), (Heap v v l r = merge r r), (Heap v v l r = merge r l)
(Heap v v l r = merge l r), (Heap v v l r = merge l l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea gv3 r r), (Heap v v l r = mergea gv3 r l), (Heap v v l r = mergea gv3 l r), (Heap v v l r = mergea gv3 l l)
(Heap v v l l = r), (Heap v v l l = l), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv3), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv3), (Heap v v l l = merge r r), (Heap v v l l = merge r l), (Heap v v l l = merge l r), (Heap v v l l = merge l l)
(Heap v v l l = mergea v r r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea gv3 r r), (Heap v v l l = mergea gv3 r l), (Heap v v l l = mergea gv3 l r), (Heap v v l l = mergea gv3 l l), (Heap v gv3 r r = r), (Heap v gv3 r r = l)
(Heap v gv3 r r = hinsert r v), (Heap v gv3 r r = hinsert r gv3), (Heap v gv3 r r = hinsert l v), (Heap v gv3 r r = hinsert l gv3), (Heap v gv3 r r = merge r r), (Heap v gv3 r r = merge r l), (Heap v gv3 r r = merge l r), (Heap v gv3 r r = merge l l), (Heap v gv3 r r = mergea v r r), (Heap v gv3 r r = mergea v r l)
(Heap v gv3 r r = mergea v l r), (Heap v gv3 r r = mergea v l l), (Heap v gv3 r r = mergea gv3 r r), (Heap v gv3 r r = mergea gv3 r l), (Heap v gv3 r r = mergea gv3 l r), (Heap v gv3 r r = mergea gv3 l l), (Heap v gv3 r l = r), (Heap v gv3 r l = l), (Heap v gv3 r l = hinsert r v), (Heap v gv3 r l = hinsert r gv3)
(Heap v gv3 r l = hinsert l v), (Heap v gv3 r l = hinsert l gv3), (Heap v gv3 r l = merge r r), (Heap v gv3 r l = merge r l), (Heap v gv3 r l = merge l r), (Heap v gv3 r l = merge l l), (Heap v gv3 r l = mergea v r r), (Heap v gv3 r l = mergea v r l), (Heap v gv3 r l = mergea v l r), (Heap v gv3 r l = mergea v l l)
(Heap v gv3 r l = mergea gv3 r r), (Heap v gv3 r l = mergea gv3 r l), (Heap v gv3 r l = mergea gv3 l r), (Heap v gv3 r l = mergea gv3 l l), (Heap v gv3 l r = r), (Heap v gv3 l r = l), (Heap v gv3 l r = hinsert r v), (Heap v gv3 l r = hinsert r gv3), (Heap v gv3 l r = hinsert l v), (Heap v gv3 l r = hinsert l gv3)
(Heap v gv3 l r = merge r r), (Heap v gv3 l r = merge r l), (Heap v gv3 l r = merge l r), (Heap v gv3 l r = merge l l), (Heap v gv3 l r = mergea v r r), (Heap v gv3 l r = mergea v r l), (Heap v gv3 l r = mergea v l r), (Heap v gv3 l r = mergea v l l), (Heap v gv3 l r = mergea gv3 r r), (Heap v gv3 l r = mergea gv3 r l)
(Heap v gv3 l r = mergea gv3 l r), (Heap v gv3 l r = mergea gv3 l l), (Heap v gv3 l l = r), (Heap v gv3 l l = l), (Heap v gv3 l l = hinsert r v), (Heap v gv3 l l = hinsert r gv3), (Heap v gv3 l l = hinsert l v), (Heap v gv3 l l = hinsert l gv3), (Heap v gv3 l l = merge r r), (Heap v gv3 l l = merge r l)
(Heap v gv3 l l = merge l r), (Heap v gv3 l l = merge l l), (Heap v gv3 l l = mergea v r r), (Heap v gv3 l l = mergea v r l), (Heap v gv3 l l = mergea v l r), (Heap v gv3 l l = mergea v l l), (Heap v gv3 l l = mergea gv3 r r), (Heap v gv3 l l = mergea gv3 r l), (Heap v gv3 l l = mergea gv3 l r), (Heap v gv3 l l = mergea gv3 l l)
(Heap gv3 v r r = r), (Heap gv3 v r r = l), (Heap gv3 v r r = hinsert r v), (Heap gv3 v r r = hinsert r gv3), (Heap gv3 v r r = hinsert l v), (Heap gv3 v r r = hinsert l gv3), (Heap gv3 v r r = merge r r), (Heap gv3 v r r = merge r l), (Heap gv3 v r r = merge l r), (Heap gv3 v r r = merge l l)
(Heap gv3 v r r = mergea v r r), (Heap gv3 v r r = mergea v r l), (Heap gv3 v r r = mergea v l r), (Heap gv3 v r r = mergea v l l), (Heap gv3 v r r = mergea gv3 r r), (Heap gv3 v r r = mergea gv3 r l), (Heap gv3 v r r = mergea gv3 l r), (Heap gv3 v r r = mergea gv3 l l), (Heap gv3 v r l = r), (Heap gv3 v r l = l)
(Heap gv3 v r l = hinsert r v), (Heap gv3 v r l = hinsert r gv3), (Heap gv3 v r l = hinsert l v), (Heap gv3 v r l = hinsert l gv3), (Heap gv3 v r l = merge r r), (Heap gv3 v r l = merge r l), (Heap gv3 v r l = merge l r), (Heap gv3 v r l = merge l l), (Heap gv3 v r l = mergea v r r), (Heap gv3 v r l = mergea v r l)
(Heap gv3 v r l = mergea v l r), (Heap gv3 v r l = mergea v l l), (Heap gv3 v r l = mergea gv3 r r), (Heap gv3 v r l = mergea gv3 r l), (Heap gv3 v r l = mergea gv3 l r), (Heap gv3 v r l = mergea gv3 l l), (Heap gv3 v l r = r), (Heap gv3 v l r = l), (Heap gv3 v l r = hinsert r v), (Heap gv3 v l r = hinsert r gv3)
(Heap gv3 v l r = hinsert l v), (Heap gv3 v l r = hinsert l gv3), (Heap gv3 v l r = merge r r), (Heap gv3 v l r = merge r l), (Heap gv3 v l r = merge l r), (Heap gv3 v l r = merge l l), (Heap gv3 v l r = mergea v r r), (Heap gv3 v l r = mergea v r l), (Heap gv3 v l r = mergea v l r), (Heap gv3 v l r = mergea v l l)
(Heap gv3 v l r = mergea gv3 r r), (Heap gv3 v l r = mergea gv3 r l), (Heap gv3 v l r = mergea gv3 l r), (Heap gv3 v l r = mergea gv3 l l), (Heap gv3 v l l = r), (Heap gv3 v l l = l), (Heap gv3 v l l = hinsert r v), (Heap gv3 v l l = hinsert r gv3), (Heap gv3 v l l = hinsert l v), (Heap gv3 v l l = hinsert l gv3)
(Heap gv3 v l l = merge r r), (Heap gv3 v l l = merge r l), (Heap gv3 v l l = merge l r), (Heap gv3 v l l = merge l l), (Heap gv3 v l l = mergea v r r), (Heap gv3 v l l = mergea v r l), (Heap gv3 v l l = mergea v l r), (Heap gv3 v l l = mergea v l l), (Heap gv3 v l l = mergea gv3 r r), (Heap gv3 v l l = mergea gv3 r l)
(Heap gv3 v l l = mergea gv3 l r), (Heap gv3 v l l = mergea gv3 l l), (Heap gv3 gv3 r r = r), (Heap gv3 gv3 r r = l), (Heap gv3 gv3 r r = hinsert r v), (Heap gv3 gv3 r r = hinsert r gv3), (Heap gv3 gv3 r r = hinsert l v), (Heap gv3 gv3 r r = hinsert l gv3), (Heap gv3 gv3 r r = merge r r), (Heap gv3 gv3 r r = merge r l)
(Heap gv3 gv3 r r = merge l r), (Heap gv3 gv3 r r = merge l l), (Heap gv3 gv3 r r = mergea v r r), (Heap gv3 gv3 r r = mergea v r l), (Heap gv3 gv3 r r = mergea v l r), (Heap gv3 gv3 r r = mergea v l l), (Heap gv3 gv3 r r = mergea gv3 r r), (Heap gv3 gv3 r r = mergea gv3 r l), (Heap gv3 gv3 r r = mergea gv3 l r), (Heap gv3 gv3 r r = mergea gv3 l l)
(Heap gv3 gv3 r l = r), (Heap gv3 gv3 r l = l), (Heap gv3 gv3 r l = hinsert r v), (Heap gv3 gv3 r l = hinsert r gv3), (Heap gv3 gv3 r l = hinsert l v), (Heap gv3 gv3 r l = hinsert l gv3), (Heap gv3 gv3 r l = merge r r), (Heap gv3 gv3 r l = merge r l), (Heap gv3 gv3 r l = merge l r), (Heap gv3 gv3 r l = merge l l)
(Heap gv3 gv3 r l = mergea v r r), (Heap gv3 gv3 r l = mergea v r l), (Heap gv3 gv3 r l = mergea v l r), (Heap gv3 gv3 r l = mergea v l l), (Heap gv3 gv3 r l = mergea gv3 r r), (Heap gv3 gv3 r l = mergea gv3 r l), (Heap gv3 gv3 r l = mergea gv3 l r), (Heap gv3 gv3 r l = mergea gv3 l l), (Heap gv3 gv3 l r = r), (Heap gv3 gv3 l r = l)
(Heap gv3 gv3 l r = hinsert r v), (Heap gv3 gv3 l r = hinsert r gv3), (Heap gv3 gv3 l r = hinsert l v), (Heap gv3 gv3 l r = hinsert l gv3), (Heap gv3 gv3 l r = merge r r), (Heap gv3 gv3 l r = merge r l), (Heap gv3 gv3 l r = merge l r), (Heap gv3 gv3 l r = merge l l), (Heap gv3 gv3 l r = mergea v r r), (Heap gv3 gv3 l r = mergea v r l)
(Heap gv3 gv3 l r = mergea v l r), (Heap gv3 gv3 l r = mergea v l l), (Heap gv3 gv3 l r = mergea gv3 r r), (Heap gv3 gv3 l r = mergea gv3 r l), (Heap gv3 gv3 l r = mergea gv3 l r), (Heap gv3 gv3 l r = mergea gv3 l l), (Heap gv3 gv3 l l = r), (Heap gv3 gv3 l l = l), (Heap gv3 gv3 l l = hinsert r v), (Heap gv3 gv3 l l = hinsert r gv3)
(Heap gv3 gv3 l l = hinsert l v), (Heap gv3 gv3 l l = hinsert l gv3), (Heap gv3 gv3 l l = merge r r), (Heap gv3 gv3 l l = merge r l), (Heap gv3 gv3 l l = merge l r), (Heap gv3 gv3 l l = merge l l), (Heap gv3 gv3 l l = mergea v r r), (Heap gv3 gv3 l l = mergea v r l), (Heap gv3 gv3 l l = mergea v l r), (Heap gv3 gv3 l l = mergea v l l)
(Heap gv3 gv3 l l = mergea gv3 r r), (Heap gv3 gv3 l l = mergea gv3 r l), (Heap gv3 gv3 l l = mergea gv3 l r), (Heap gv3 gv3 l l = mergea gv3 l l), (hinsert r v = r), (hinsert r v = l), (hinsert r gv3 = r), (hinsert r gv3 = l), (hinsert l v = r), (hinsert l v = l)
(hinsert l gv3 = r), (hinsert l gv3 = l), (merge r r = r), (merge r r = l), (merge r r = hinsert r v), (merge r r = hinsert r gv3), (merge r r = hinsert l v), (merge r r = hinsert l gv3), (merge r l = r), (merge r l = l)
(merge r l = hinsert r v), (merge r l = hinsert r gv3), (merge r l = hinsert l v), (merge r l = hinsert l gv3), (merge l r = r), (merge l r = l), (merge l r = hinsert r v), (merge l r = hinsert r gv3), (merge l r = hinsert l v), (merge l r = hinsert l gv3)
(merge l l = r), (merge l l = l), (merge l l = hinsert r v), (merge l l = hinsert r gv3), (merge l l = hinsert l v), (merge l l = hinsert l gv3), (mergea v r r = r), (mergea v r r = l), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv3)
(mergea v r r = hinsert l v), (mergea v r r = hinsert l gv3), (mergea v r r = merge r r), (mergea v r r = merge r l), (mergea v r r = merge l r), (mergea v r r = merge l l), (mergea v r l = r), (mergea v r l = l), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv3)
(mergea v r l = hinsert l v), (mergea v r l = hinsert l gv3), (mergea v r l = merge r r), (mergea v r l = merge r l), (mergea v r l = merge l r), (mergea v r l = merge l l), (mergea v l r = r), (mergea v l r = l), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv3)
(mergea v l r = hinsert l v), (mergea v l r = hinsert l gv3), (mergea v l r = merge r r), (mergea v l r = merge r l), (mergea v l r = merge l r), (mergea v l r = merge l l), (mergea v l l = r), (mergea v l l = l), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv3)
(mergea v l l = hinsert l v), (mergea v l l = hinsert l gv3), (mergea v l l = merge r r), (mergea v l l = merge r l), (mergea v l l = merge l r), (mergea v l l = merge l l), (mergea gv3 r r = r), (mergea gv3 r r = l), (mergea gv3 r r = hinsert r v), (mergea gv3 r r = hinsert r gv3)
(mergea gv3 r r = hinsert l v), (mergea gv3 r r = hinsert l gv3), (mergea gv3 r r = merge r r), (mergea gv3 r r = merge r l), (mergea gv3 r r = merge l r), (mergea gv3 r r = merge l l), (mergea gv3 r l = r), (mergea gv3 r l = l), (mergea gv3 r l = hinsert r v), (mergea gv3 r l = hinsert r gv3)
(mergea gv3 r l = hinsert l v), (mergea gv3 r l = hinsert l gv3), (mergea gv3 r l = merge r r), (mergea gv3 r l = merge r l), (mergea gv3 r l = merge l r), (mergea gv3 r l = merge l l), (mergea gv3 l r = r), (mergea gv3 l r = l), (mergea gv3 l r = hinsert r v), (mergea gv3 l r = hinsert r gv3)
(mergea gv3 l r = hinsert l v), (mergea gv3 l r = hinsert l gv3), (mergea gv3 l r = merge r r), (mergea gv3 l r = merge r l), (mergea gv3 l r = merge l r), (mergea gv3 l r = merge l l), (mergea gv3 l l = r), (mergea gv3 l l = l), (mergea gv3 l l = hinsert r v), (mergea gv3 l l = hinsert r gv3)
(mergea gv3 l l = hinsert l v), (mergea gv3 l l = hinsert l gv3), (mergea gv3 l l = merge r r), (mergea gv3 l l = merge r l), (mergea gv3 l l = merge l r), (mergea gv3 l l = merge l l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l l)
(Hleaf = Heap v gv3 r r), (Hleaf = Heap v gv3 r l), (Hleaf = Heap v gv3 l r), (Hleaf = Heap v gv3 l l), (Hleaf = Heap gv3 v r r), (Hleaf = Heap gv3 v r l), (Hleaf = Heap gv3 v l r), (Hleaf = Heap gv3 v l l), (Hleaf = Heap gv3 gv3 r r), (Hleaf = Heap gv3 gv3 r l)
(Hleaf = Heap gv3 gv3 l r), (Hleaf = Heap gv3 gv3 l l), (Hleaf = hinsert r v), (Hleaf = hinsert r gv3), (Hleaf = hinsert l v), (Hleaf = hinsert l gv3), (Hleaf = merge r r), (Hleaf = merge r l), (Hleaf = merge l r), (Hleaf = merge l l)
(Hleaf = mergea v r r), (Hleaf = mergea v r l), (Hleaf = mergea v l r), (Hleaf = mergea v l l), (Hleaf = mergea gv3 r r), (Hleaf = mergea gv3 r l), (Hleaf = mergea gv3 l r), (Hleaf = mergea gv3 l l), (hsize r = v), (hsize r = gv3)
(hsize l = v), (hsize l = gv3), (rank r = v), (rank r = gv3), (rank r = hsize r), (rank r = hsize l), (rank l = v), (rank l = gv3), (rank l = hsize r), (rank l = hsize l)
(right_height r = v), (right_height r = gv3), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = v), (right_height l = gv3), (right_height l = hsize r), (right_height l = hsize l)
(right_height l = rank r), (right_height l = rank l), (None = Some v), (None = Some gv3)

Label: 5 (5)
(v < v), (v < gv2), (gv2 < v), (gv2 < gv2), (v <= v), (v <= gv2), (gv2 <= v), (gv2 <= gv2), (r = r), (r = l)
(l = r), (l = l), (v = v), (v = gv2), (gv2 = v), (gv2 = gv2), (false = has_leftist_property r), (false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l)
(v < hsize r), (v < hsize l), (v < rank r), (v < rank l), (v < right_height r), (v < right_height l), (gv2 < hsize r), (gv2 < hsize l), (gv2 < rank r), (gv2 < rank l)
(gv2 < right_height r), (gv2 < right_height l), (hsize r < v), (hsize r < gv2), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l), (hsize r < right_height r), (hsize r < right_height l), (hsize l < v)
(hsize l < gv2), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < v), (rank r < gv2), (rank r < hsize r), (rank r < hsize l)
(rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < v), (rank l < gv2), (rank l < hsize r), (rank l < hsize l), (rank l < rank r), (rank l < right_height r), (rank l < right_height l)
(right_height r < v), (right_height r < gv2), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l), (right_height r < right_height l), (right_height l < v), (right_height l < gv2), (right_height l < hsize r)
(right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (v <= hsize r), (v <= hsize l), (v <= rank r), (v <= rank l), (v <= right_height r), (v <= right_height l)
(gv2 <= hsize r), (gv2 <= hsize l), (gv2 <= rank r), (gv2 <= rank l), (gv2 <= right_height r), (gv2 <= right_height l), (hsize r <= v), (hsize r <= gv2), (hsize r <= hsize l), (hsize r <= rank r)
(hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= v), (hsize l <= gv2), (hsize l <= hsize r), (hsize l <= rank r), (hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l)
(rank r <= v), (rank r <= gv2), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l), (rank l <= v), (rank l <= gv2), (rank l <= hsize r)
(rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= v), (right_height r <= gv2), (right_height r <= hsize r), (right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l)
(right_height r <= right_height l), (right_height l <= v), (right_height l <= gv2), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l), (right_height l <= right_height r), (~ v < v), (~ v < gv2)
(~ gv2 < v), (~ gv2 < gv2), (~ v <= v), (~ v <= gv2), (~ gv2 <= v), (~ gv2 <= gv2), (r <> r), (r <> l), (l <> r), (l <> l)
(v <> v), (v <> gv2), (gv2 <> v), (gv2 <> gv2), (None = Some r), (None = Some l), (Heap v v r r = r), (Heap v v r r = l), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv2)
(Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv2), (Heap v v r r = merge r r), (Heap v v r r = merge r l), (Heap v v r r = merge l r), (Heap v v r r = merge l l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l l)
(Heap v v r r = mergea gv2 r r), (Heap v v r r = mergea gv2 r l), (Heap v v r r = mergea gv2 l r), (Heap v v r r = mergea gv2 l l), (Heap v v r l = r), (Heap v v r l = l), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv2), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv2)
(Heap v v r l = merge r r), (Heap v v r l = merge r l), (Heap v v r l = merge l r), (Heap v v r l = merge l l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea gv2 r r), (Heap v v r l = mergea gv2 r l)
(Heap v v r l = mergea gv2 l r), (Heap v v r l = mergea gv2 l l), (Heap v v l r = r), (Heap v v l r = l), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv2), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv2), (Heap v v l r = merge r r), (Heap v v l r = merge r l)
(Heap v v l r = merge l r), (Heap v v l r = merge l l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea gv2 r r), (Heap v v l r = mergea gv2 r l), (Heap v v l r = mergea gv2 l r), (Heap v v l r = mergea gv2 l l)
(Heap v v l l = r), (Heap v v l l = l), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv2), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv2), (Heap v v l l = merge r r), (Heap v v l l = merge r l), (Heap v v l l = merge l r), (Heap v v l l = merge l l)
(Heap v v l l = mergea v r r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea gv2 r r), (Heap v v l l = mergea gv2 r l), (Heap v v l l = mergea gv2 l r), (Heap v v l l = mergea gv2 l l), (Heap v gv2 r r = r), (Heap v gv2 r r = l)
(Heap v gv2 r r = hinsert r v), (Heap v gv2 r r = hinsert r gv2), (Heap v gv2 r r = hinsert l v), (Heap v gv2 r r = hinsert l gv2), (Heap v gv2 r r = merge r r), (Heap v gv2 r r = merge r l), (Heap v gv2 r r = merge l r), (Heap v gv2 r r = merge l l), (Heap v gv2 r r = mergea v r r), (Heap v gv2 r r = mergea v r l)
(Heap v gv2 r r = mergea v l r), (Heap v gv2 r r = mergea v l l), (Heap v gv2 r r = mergea gv2 r r), (Heap v gv2 r r = mergea gv2 r l), (Heap v gv2 r r = mergea gv2 l r), (Heap v gv2 r r = mergea gv2 l l), (Heap v gv2 r l = r), (Heap v gv2 r l = l), (Heap v gv2 r l = hinsert r v), (Heap v gv2 r l = hinsert r gv2)
(Heap v gv2 r l = hinsert l v), (Heap v gv2 r l = hinsert l gv2), (Heap v gv2 r l = merge r r), (Heap v gv2 r l = merge r l), (Heap v gv2 r l = merge l r), (Heap v gv2 r l = merge l l), (Heap v gv2 r l = mergea v r r), (Heap v gv2 r l = mergea v r l), (Heap v gv2 r l = mergea v l r), (Heap v gv2 r l = mergea v l l)
(Heap v gv2 r l = mergea gv2 r r), (Heap v gv2 r l = mergea gv2 r l), (Heap v gv2 r l = mergea gv2 l r), (Heap v gv2 r l = mergea gv2 l l), (Heap v gv2 l r = r), (Heap v gv2 l r = l), (Heap v gv2 l r = hinsert r v), (Heap v gv2 l r = hinsert r gv2), (Heap v gv2 l r = hinsert l v), (Heap v gv2 l r = hinsert l gv2)
(Heap v gv2 l r = merge r r), (Heap v gv2 l r = merge r l), (Heap v gv2 l r = merge l r), (Heap v gv2 l r = merge l l), (Heap v gv2 l r = mergea v r r), (Heap v gv2 l r = mergea v r l), (Heap v gv2 l r = mergea v l r), (Heap v gv2 l r = mergea v l l), (Heap v gv2 l r = mergea gv2 r r), (Heap v gv2 l r = mergea gv2 r l)
(Heap v gv2 l r = mergea gv2 l r), (Heap v gv2 l r = mergea gv2 l l), (Heap v gv2 l l = r), (Heap v gv2 l l = l), (Heap v gv2 l l = hinsert r v), (Heap v gv2 l l = hinsert r gv2), (Heap v gv2 l l = hinsert l v), (Heap v gv2 l l = hinsert l gv2), (Heap v gv2 l l = merge r r), (Heap v gv2 l l = merge r l)
(Heap v gv2 l l = merge l r), (Heap v gv2 l l = merge l l), (Heap v gv2 l l = mergea v r r), (Heap v gv2 l l = mergea v r l), (Heap v gv2 l l = mergea v l r), (Heap v gv2 l l = mergea v l l), (Heap v gv2 l l = mergea gv2 r r), (Heap v gv2 l l = mergea gv2 r l), (Heap v gv2 l l = mergea gv2 l r), (Heap v gv2 l l = mergea gv2 l l)
(Heap gv2 v r r = r), (Heap gv2 v r r = l), (Heap gv2 v r r = hinsert r v), (Heap gv2 v r r = hinsert r gv2), (Heap gv2 v r r = hinsert l v), (Heap gv2 v r r = hinsert l gv2), (Heap gv2 v r r = merge r r), (Heap gv2 v r r = merge r l), (Heap gv2 v r r = merge l r), (Heap gv2 v r r = merge l l)
(Heap gv2 v r r = mergea v r r), (Heap gv2 v r r = mergea v r l), (Heap gv2 v r r = mergea v l r), (Heap gv2 v r r = mergea v l l), (Heap gv2 v r r = mergea gv2 r r), (Heap gv2 v r r = mergea gv2 r l), (Heap gv2 v r r = mergea gv2 l r), (Heap gv2 v r r = mergea gv2 l l), (Heap gv2 v r l = r), (Heap gv2 v r l = l)
(Heap gv2 v r l = hinsert r v), (Heap gv2 v r l = hinsert r gv2), (Heap gv2 v r l = hinsert l v), (Heap gv2 v r l = hinsert l gv2), (Heap gv2 v r l = merge r r), (Heap gv2 v r l = merge r l), (Heap gv2 v r l = merge l r), (Heap gv2 v r l = merge l l), (Heap gv2 v r l = mergea v r r), (Heap gv2 v r l = mergea v r l)
(Heap gv2 v r l = mergea v l r), (Heap gv2 v r l = mergea v l l), (Heap gv2 v r l = mergea gv2 r r), (Heap gv2 v r l = mergea gv2 r l), (Heap gv2 v r l = mergea gv2 l r), (Heap gv2 v r l = mergea gv2 l l), (Heap gv2 v l r = r), (Heap gv2 v l r = l), (Heap gv2 v l r = hinsert r v), (Heap gv2 v l r = hinsert r gv2)
(Heap gv2 v l r = hinsert l v), (Heap gv2 v l r = hinsert l gv2), (Heap gv2 v l r = merge r r), (Heap gv2 v l r = merge r l), (Heap gv2 v l r = merge l r), (Heap gv2 v l r = merge l l), (Heap gv2 v l r = mergea v r r), (Heap gv2 v l r = mergea v r l), (Heap gv2 v l r = mergea v l r), (Heap gv2 v l r = mergea v l l)
(Heap gv2 v l r = mergea gv2 r r), (Heap gv2 v l r = mergea gv2 r l), (Heap gv2 v l r = mergea gv2 l r), (Heap gv2 v l r = mergea gv2 l l), (Heap gv2 v l l = r), (Heap gv2 v l l = l), (Heap gv2 v l l = hinsert r v), (Heap gv2 v l l = hinsert r gv2), (Heap gv2 v l l = hinsert l v), (Heap gv2 v l l = hinsert l gv2)
(Heap gv2 v l l = merge r r), (Heap gv2 v l l = merge r l), (Heap gv2 v l l = merge l r), (Heap gv2 v l l = merge l l), (Heap gv2 v l l = mergea v r r), (Heap gv2 v l l = mergea v r l), (Heap gv2 v l l = mergea v l r), (Heap gv2 v l l = mergea v l l), (Heap gv2 v l l = mergea gv2 r r), (Heap gv2 v l l = mergea gv2 r l)
(Heap gv2 v l l = mergea gv2 l r), (Heap gv2 v l l = mergea gv2 l l), (Heap gv2 gv2 r r = r), (Heap gv2 gv2 r r = l), (Heap gv2 gv2 r r = hinsert r v), (Heap gv2 gv2 r r = hinsert r gv2), (Heap gv2 gv2 r r = hinsert l v), (Heap gv2 gv2 r r = hinsert l gv2), (Heap gv2 gv2 r r = merge r r), (Heap gv2 gv2 r r = merge r l)
(Heap gv2 gv2 r r = merge l r), (Heap gv2 gv2 r r = merge l l), (Heap gv2 gv2 r r = mergea v r r), (Heap gv2 gv2 r r = mergea v r l), (Heap gv2 gv2 r r = mergea v l r), (Heap gv2 gv2 r r = mergea v l l), (Heap gv2 gv2 r r = mergea gv2 r r), (Heap gv2 gv2 r r = mergea gv2 r l), (Heap gv2 gv2 r r = mergea gv2 l r), (Heap gv2 gv2 r r = mergea gv2 l l)
(Heap gv2 gv2 r l = r), (Heap gv2 gv2 r l = l), (Heap gv2 gv2 r l = hinsert r v), (Heap gv2 gv2 r l = hinsert r gv2), (Heap gv2 gv2 r l = hinsert l v), (Heap gv2 gv2 r l = hinsert l gv2), (Heap gv2 gv2 r l = merge r r), (Heap gv2 gv2 r l = merge r l), (Heap gv2 gv2 r l = merge l r), (Heap gv2 gv2 r l = merge l l)
(Heap gv2 gv2 r l = mergea v r r), (Heap gv2 gv2 r l = mergea v r l), (Heap gv2 gv2 r l = mergea v l r), (Heap gv2 gv2 r l = mergea v l l), (Heap gv2 gv2 r l = mergea gv2 r r), (Heap gv2 gv2 r l = mergea gv2 r l), (Heap gv2 gv2 r l = mergea gv2 l r), (Heap gv2 gv2 r l = mergea gv2 l l), (Heap gv2 gv2 l r = r), (Heap gv2 gv2 l r = l)
(Heap gv2 gv2 l r = hinsert r v), (Heap gv2 gv2 l r = hinsert r gv2), (Heap gv2 gv2 l r = hinsert l v), (Heap gv2 gv2 l r = hinsert l gv2), (Heap gv2 gv2 l r = merge r r), (Heap gv2 gv2 l r = merge r l), (Heap gv2 gv2 l r = merge l r), (Heap gv2 gv2 l r = merge l l), (Heap gv2 gv2 l r = mergea v r r), (Heap gv2 gv2 l r = mergea v r l)
(Heap gv2 gv2 l r = mergea v l r), (Heap gv2 gv2 l r = mergea v l l), (Heap gv2 gv2 l r = mergea gv2 r r), (Heap gv2 gv2 l r = mergea gv2 r l), (Heap gv2 gv2 l r = mergea gv2 l r), (Heap gv2 gv2 l r = mergea gv2 l l), (Heap gv2 gv2 l l = r), (Heap gv2 gv2 l l = l), (Heap gv2 gv2 l l = hinsert r v), (Heap gv2 gv2 l l = hinsert r gv2)
(Heap gv2 gv2 l l = hinsert l v), (Heap gv2 gv2 l l = hinsert l gv2), (Heap gv2 gv2 l l = merge r r), (Heap gv2 gv2 l l = merge r l), (Heap gv2 gv2 l l = merge l r), (Heap gv2 gv2 l l = merge l l), (Heap gv2 gv2 l l = mergea v r r), (Heap gv2 gv2 l l = mergea v r l), (Heap gv2 gv2 l l = mergea v l r), (Heap gv2 gv2 l l = mergea v l l)
(Heap gv2 gv2 l l = mergea gv2 r r), (Heap gv2 gv2 l l = mergea gv2 r l), (Heap gv2 gv2 l l = mergea gv2 l r), (Heap gv2 gv2 l l = mergea gv2 l l), (hinsert r v = r), (hinsert r v = l), (hinsert r gv2 = r), (hinsert r gv2 = l), (hinsert l v = r), (hinsert l v = l)
(hinsert l gv2 = r), (hinsert l gv2 = l), (merge r r = r), (merge r r = l), (merge r r = hinsert r v), (merge r r = hinsert r gv2), (merge r r = hinsert l v), (merge r r = hinsert l gv2), (merge r l = r), (merge r l = l)
(merge r l = hinsert r v), (merge r l = hinsert r gv2), (merge r l = hinsert l v), (merge r l = hinsert l gv2), (merge l r = r), (merge l r = l), (merge l r = hinsert r v), (merge l r = hinsert r gv2), (merge l r = hinsert l v), (merge l r = hinsert l gv2)
(merge l l = r), (merge l l = l), (merge l l = hinsert r v), (merge l l = hinsert r gv2), (merge l l = hinsert l v), (merge l l = hinsert l gv2), (mergea v r r = r), (mergea v r r = l), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv2)
(mergea v r r = hinsert l v), (mergea v r r = hinsert l gv2), (mergea v r r = merge r r), (mergea v r r = merge r l), (mergea v r r = merge l r), (mergea v r r = merge l l), (mergea v r l = r), (mergea v r l = l), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv2)
(mergea v r l = hinsert l v), (mergea v r l = hinsert l gv2), (mergea v r l = merge r r), (mergea v r l = merge r l), (mergea v r l = merge l r), (mergea v r l = merge l l), (mergea v l r = r), (mergea v l r = l), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv2)
(mergea v l r = hinsert l v), (mergea v l r = hinsert l gv2), (mergea v l r = merge r r), (mergea v l r = merge r l), (mergea v l r = merge l r), (mergea v l r = merge l l), (mergea v l l = r), (mergea v l l = l), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv2)
(mergea v l l = hinsert l v), (mergea v l l = hinsert l gv2), (mergea v l l = merge r r), (mergea v l l = merge r l), (mergea v l l = merge l r), (mergea v l l = merge l l), (mergea gv2 r r = r), (mergea gv2 r r = l), (mergea gv2 r r = hinsert r v), (mergea gv2 r r = hinsert r gv2)
(mergea gv2 r r = hinsert l v), (mergea gv2 r r = hinsert l gv2), (mergea gv2 r r = merge r r), (mergea gv2 r r = merge r l), (mergea gv2 r r = merge l r), (mergea gv2 r r = merge l l), (mergea gv2 r l = r), (mergea gv2 r l = l), (mergea gv2 r l = hinsert r v), (mergea gv2 r l = hinsert r gv2)
(mergea gv2 r l = hinsert l v), (mergea gv2 r l = hinsert l gv2), (mergea gv2 r l = merge r r), (mergea gv2 r l = merge r l), (mergea gv2 r l = merge l r), (mergea gv2 r l = merge l l), (mergea gv2 l r = r), (mergea gv2 l r = l), (mergea gv2 l r = hinsert r v), (mergea gv2 l r = hinsert r gv2)
(mergea gv2 l r = hinsert l v), (mergea gv2 l r = hinsert l gv2), (mergea gv2 l r = merge r r), (mergea gv2 l r = merge r l), (mergea gv2 l r = merge l r), (mergea gv2 l r = merge l l), (mergea gv2 l l = r), (mergea gv2 l l = l), (mergea gv2 l l = hinsert r v), (mergea gv2 l l = hinsert r gv2)
(mergea gv2 l l = hinsert l v), (mergea gv2 l l = hinsert l gv2), (mergea gv2 l l = merge r r), (mergea gv2 l l = merge r l), (mergea gv2 l l = merge l r), (mergea gv2 l l = merge l l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l l)
(Hleaf = Heap v gv2 r r), (Hleaf = Heap v gv2 r l), (Hleaf = Heap v gv2 l r), (Hleaf = Heap v gv2 l l), (Hleaf = Heap gv2 v r r), (Hleaf = Heap gv2 v r l), (Hleaf = Heap gv2 v l r), (Hleaf = Heap gv2 v l l), (Hleaf = Heap gv2 gv2 r r), (Hleaf = Heap gv2 gv2 r l)
(Hleaf = Heap gv2 gv2 l r), (Hleaf = Heap gv2 gv2 l l), (Hleaf = hinsert r v), (Hleaf = hinsert r gv2), (Hleaf = hinsert l v), (Hleaf = hinsert l gv2), (Hleaf = merge r r), (Hleaf = merge r l), (Hleaf = merge l r), (Hleaf = merge l l)
(Hleaf = mergea v r r), (Hleaf = mergea v r l), (Hleaf = mergea v l r), (Hleaf = mergea v l l), (Hleaf = mergea gv2 r r), (Hleaf = mergea gv2 r l), (Hleaf = mergea gv2 l r), (Hleaf = mergea gv2 l l), (hsize r = v), (hsize r = gv2)
(hsize l = v), (hsize l = gv2), (rank r = v), (rank r = gv2), (rank r = hsize r), (rank r = hsize l), (rank l = v), (rank l = gv2), (rank l = hsize r), (rank l = hsize l)
(right_height r = v), (right_height r = gv2), (right_height r = hsize r), (right_height r = hsize l), (right_height r = rank r), (right_height r = rank l), (right_height l = v), (right_height l = gv2), (right_height l = hsize r), (right_height l = hsize l)
(right_height l = rank r), (right_height l = rank l), (None = Some v), (None = Some gv2)

Label: 6 (6)
(false = gv0), (true = gv0), (v < v), (v <= v), (v = v), (l = l), (l = r), (r = l), (r = r), (gv0 = gv0)
(false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l), (true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r)
(hsize l < v), (hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r)
(hsize r < right_height l), (hsize r < right_height r), (rank l < v), (rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < hsize l)
(rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r)
(right_height r < v), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r)
(v <= right_height l), (v <= right_height r), (hsize l <= v), (hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= hsize l)
(hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r)
(rank r <= v), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l)
(right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (false <> gv0), (true <> gv0)
(~ v < v), (~ v <= v), (v <> v), (l <> l), (l <> r), (r <> l), (r <> r), (gv0 <> gv0), (None = Some l), (None = Some r)
(Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = merge l l), (Heap v v l l = merge l r), (Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r)
(Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v), (Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r)
(Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v r l = l), (Heap v v r l = r), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v), (Heap v v r l = merge l l), (Heap v v r l = merge l r)
(Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v)
(Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (hinsert l v = l), (hinsert l v = r)
(hinsert r v = l), (hinsert r v = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert r v), (merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert r v)
(merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert r v), (merge r r = l), (merge r r = r), (merge r r = hinsert l v), (merge r r = hinsert r v), (mergea v l l = l), (mergea v l l = r)
(mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert r v)
(mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r), (mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = merge l l), (mergea v r l = merge l r)
(mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v), (mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r)
(Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = hinsert l v), (Hleaf = hinsert r v), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r)
(Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (hsize l = v), (hsize r = v), (rank l = v), (rank l = hsize l), (rank l = hsize r), (rank r = v)
(rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r), (right_height r = v), (right_height r = hsize l), (right_height r = hsize r)
(right_height r = rank l), (right_height r = rank r), (None = Some gv0), (None = Some v), (has_leftist_property l = gv0), (has_leftist_property r = gv0)

Label: 7 (7)
(false = gv6), (true = gv6), (v < v), (v < gv5), (gv5 < v), (gv5 < gv5), (v <= v), (v <= gv5), (gv5 <= v), (gv5 <= gv5)
(gv6 = gv6), (v = v), (v = gv5), (gv5 = v), (gv5 = gv5), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l)
(false = has_leftist_property r), (true = has_leftist_property l), (true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (gv5 < hsize l)
(gv5 < hsize r), (gv5 < rank l), (gv5 < rank r), (gv5 < right_height l), (gv5 < right_height r), (hsize l < v), (hsize l < gv5), (hsize l < hsize r), (hsize l < rank l), (hsize l < rank r)
(hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < gv5), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v)
(rank l < gv5), (rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < gv5), (rank r < hsize l), (rank r < hsize r)
(rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < v), (right_height l < gv5), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r)
(right_height r < v), (right_height r < gv5), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l)
(v <= rank r), (v <= right_height l), (v <= right_height r), (gv5 <= hsize l), (gv5 <= hsize r), (gv5 <= rank l), (gv5 <= rank r), (gv5 <= right_height l), (gv5 <= right_height r), (hsize l <= v)
(hsize l <= gv5), (hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= gv5), (hsize r <= hsize l), (hsize r <= rank l)
(hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= v), (rank l <= gv5), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r)
(rank r <= v), (rank r <= gv5), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= gv5), (right_height l <= hsize l)
(right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v), (right_height r <= gv5), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r)
(right_height r <= right_height l), (false <> gv6), (true <> gv6), (~ v < v), (~ v < gv5), (~ gv5 < v), (~ gv5 < gv5), (~ v <= v), (~ v <= gv5), (~ gv5 <= v)
(~ gv5 <= gv5), (gv6 <> gv6), (v <> v), (v <> gv5), (gv5 <> v), (gv5 <> gv5), (l <> l), (l <> r), (r <> l), (r <> r)
(None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv5), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv5), (Heap v v l l = merge l l), (Heap v v l l = merge l r)
(Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea gv5 l l), (Heap v v l l = mergea gv5 l r), (Heap v v l l = mergea gv5 r l), (Heap v v l l = mergea gv5 r r)
(Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv5), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv5), (Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r)
(Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea gv5 l l), (Heap v v l r = mergea gv5 l r), (Heap v v l r = mergea gv5 r l), (Heap v v l r = mergea gv5 r r), (Heap v v r l = l), (Heap v v r l = r)
(Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv5), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv5), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r)
(Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea gv5 l l), (Heap v v r l = mergea gv5 l r), (Heap v v r l = mergea gv5 r l), (Heap v v r l = mergea gv5 r r), (Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv5)
(Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv5), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r)
(Heap v v r r = mergea gv5 l l), (Heap v v r r = mergea gv5 l r), (Heap v v r r = mergea gv5 r l), (Heap v v r r = mergea gv5 r r), (Heap v gv5 l l = l), (Heap v gv5 l l = r), (Heap v gv5 l l = hinsert l v), (Heap v gv5 l l = hinsert l gv5), (Heap v gv5 l l = hinsert r v), (Heap v gv5 l l = hinsert r gv5)
(Heap v gv5 l l = merge l l), (Heap v gv5 l l = merge l r), (Heap v gv5 l l = merge r l), (Heap v gv5 l l = merge r r), (Heap v gv5 l l = mergea v l l), (Heap v gv5 l l = mergea v l r), (Heap v gv5 l l = mergea v r l), (Heap v gv5 l l = mergea v r r), (Heap v gv5 l l = mergea gv5 l l), (Heap v gv5 l l = mergea gv5 l r)
(Heap v gv5 l l = mergea gv5 r l), (Heap v gv5 l l = mergea gv5 r r), (Heap v gv5 l r = l), (Heap v gv5 l r = r), (Heap v gv5 l r = hinsert l v), (Heap v gv5 l r = hinsert l gv5), (Heap v gv5 l r = hinsert r v), (Heap v gv5 l r = hinsert r gv5), (Heap v gv5 l r = merge l l), (Heap v gv5 l r = merge l r)
(Heap v gv5 l r = merge r l), (Heap v gv5 l r = merge r r), (Heap v gv5 l r = mergea v l l), (Heap v gv5 l r = mergea v l r), (Heap v gv5 l r = mergea v r l), (Heap v gv5 l r = mergea v r r), (Heap v gv5 l r = mergea gv5 l l), (Heap v gv5 l r = mergea gv5 l r), (Heap v gv5 l r = mergea gv5 r l), (Heap v gv5 l r = mergea gv5 r r)
(Heap v gv5 r l = l), (Heap v gv5 r l = r), (Heap v gv5 r l = hinsert l v), (Heap v gv5 r l = hinsert l gv5), (Heap v gv5 r l = hinsert r v), (Heap v gv5 r l = hinsert r gv5), (Heap v gv5 r l = merge l l), (Heap v gv5 r l = merge l r), (Heap v gv5 r l = merge r l), (Heap v gv5 r l = merge r r)
(Heap v gv5 r l = mergea v l l), (Heap v gv5 r l = mergea v l r), (Heap v gv5 r l = mergea v r l), (Heap v gv5 r l = mergea v r r), (Heap v gv5 r l = mergea gv5 l l), (Heap v gv5 r l = mergea gv5 l r), (Heap v gv5 r l = mergea gv5 r l), (Heap v gv5 r l = mergea gv5 r r), (Heap v gv5 r r = l), (Heap v gv5 r r = r)
(Heap v gv5 r r = hinsert l v), (Heap v gv5 r r = hinsert l gv5), (Heap v gv5 r r = hinsert r v), (Heap v gv5 r r = hinsert r gv5), (Heap v gv5 r r = merge l l), (Heap v gv5 r r = merge l r), (Heap v gv5 r r = merge r l), (Heap v gv5 r r = merge r r), (Heap v gv5 r r = mergea v l l), (Heap v gv5 r r = mergea v l r)
(Heap v gv5 r r = mergea v r l), (Heap v gv5 r r = mergea v r r), (Heap v gv5 r r = mergea gv5 l l), (Heap v gv5 r r = mergea gv5 l r), (Heap v gv5 r r = mergea gv5 r l), (Heap v gv5 r r = mergea gv5 r r), (Heap gv5 v l l = l), (Heap gv5 v l l = r), (Heap gv5 v l l = hinsert l v), (Heap gv5 v l l = hinsert l gv5)
(Heap gv5 v l l = hinsert r v), (Heap gv5 v l l = hinsert r gv5), (Heap gv5 v l l = merge l l), (Heap gv5 v l l = merge l r), (Heap gv5 v l l = merge r l), (Heap gv5 v l l = merge r r), (Heap gv5 v l l = mergea v l l), (Heap gv5 v l l = mergea v l r), (Heap gv5 v l l = mergea v r l), (Heap gv5 v l l = mergea v r r)
(Heap gv5 v l l = mergea gv5 l l), (Heap gv5 v l l = mergea gv5 l r), (Heap gv5 v l l = mergea gv5 r l), (Heap gv5 v l l = mergea gv5 r r), (Heap gv5 v l r = l), (Heap gv5 v l r = r), (Heap gv5 v l r = hinsert l v), (Heap gv5 v l r = hinsert l gv5), (Heap gv5 v l r = hinsert r v), (Heap gv5 v l r = hinsert r gv5)
(Heap gv5 v l r = merge l l), (Heap gv5 v l r = merge l r), (Heap gv5 v l r = merge r l), (Heap gv5 v l r = merge r r), (Heap gv5 v l r = mergea v l l), (Heap gv5 v l r = mergea v l r), (Heap gv5 v l r = mergea v r l), (Heap gv5 v l r = mergea v r r), (Heap gv5 v l r = mergea gv5 l l), (Heap gv5 v l r = mergea gv5 l r)
(Heap gv5 v l r = mergea gv5 r l), (Heap gv5 v l r = mergea gv5 r r), (Heap gv5 v r l = l), (Heap gv5 v r l = r), (Heap gv5 v r l = hinsert l v), (Heap gv5 v r l = hinsert l gv5), (Heap gv5 v r l = hinsert r v), (Heap gv5 v r l = hinsert r gv5), (Heap gv5 v r l = merge l l), (Heap gv5 v r l = merge l r)
(Heap gv5 v r l = merge r l), (Heap gv5 v r l = merge r r), (Heap gv5 v r l = mergea v l l), (Heap gv5 v r l = mergea v l r), (Heap gv5 v r l = mergea v r l), (Heap gv5 v r l = mergea v r r), (Heap gv5 v r l = mergea gv5 l l), (Heap gv5 v r l = mergea gv5 l r), (Heap gv5 v r l = mergea gv5 r l), (Heap gv5 v r l = mergea gv5 r r)
(Heap gv5 v r r = l), (Heap gv5 v r r = r), (Heap gv5 v r r = hinsert l v), (Heap gv5 v r r = hinsert l gv5), (Heap gv5 v r r = hinsert r v), (Heap gv5 v r r = hinsert r gv5), (Heap gv5 v r r = merge l l), (Heap gv5 v r r = merge l r), (Heap gv5 v r r = merge r l), (Heap gv5 v r r = merge r r)
(Heap gv5 v r r = mergea v l l), (Heap gv5 v r r = mergea v l r), (Heap gv5 v r r = mergea v r l), (Heap gv5 v r r = mergea v r r), (Heap gv5 v r r = mergea gv5 l l), (Heap gv5 v r r = mergea gv5 l r), (Heap gv5 v r r = mergea gv5 r l), (Heap gv5 v r r = mergea gv5 r r), (Heap gv5 gv5 l l = l), (Heap gv5 gv5 l l = r)
(Heap gv5 gv5 l l = hinsert l v), (Heap gv5 gv5 l l = hinsert l gv5), (Heap gv5 gv5 l l = hinsert r v), (Heap gv5 gv5 l l = hinsert r gv5), (Heap gv5 gv5 l l = merge l l), (Heap gv5 gv5 l l = merge l r), (Heap gv5 gv5 l l = merge r l), (Heap gv5 gv5 l l = merge r r), (Heap gv5 gv5 l l = mergea v l l), (Heap gv5 gv5 l l = mergea v l r)
(Heap gv5 gv5 l l = mergea v r l), (Heap gv5 gv5 l l = mergea v r r), (Heap gv5 gv5 l l = mergea gv5 l l), (Heap gv5 gv5 l l = mergea gv5 l r), (Heap gv5 gv5 l l = mergea gv5 r l), (Heap gv5 gv5 l l = mergea gv5 r r), (Heap gv5 gv5 l r = l), (Heap gv5 gv5 l r = r), (Heap gv5 gv5 l r = hinsert l v), (Heap gv5 gv5 l r = hinsert l gv5)
(Heap gv5 gv5 l r = hinsert r v), (Heap gv5 gv5 l r = hinsert r gv5), (Heap gv5 gv5 l r = merge l l), (Heap gv5 gv5 l r = merge l r), (Heap gv5 gv5 l r = merge r l), (Heap gv5 gv5 l r = merge r r), (Heap gv5 gv5 l r = mergea v l l), (Heap gv5 gv5 l r = mergea v l r), (Heap gv5 gv5 l r = mergea v r l), (Heap gv5 gv5 l r = mergea v r r)
(Heap gv5 gv5 l r = mergea gv5 l l), (Heap gv5 gv5 l r = mergea gv5 l r), (Heap gv5 gv5 l r = mergea gv5 r l), (Heap gv5 gv5 l r = mergea gv5 r r), (Heap gv5 gv5 r l = l), (Heap gv5 gv5 r l = r), (Heap gv5 gv5 r l = hinsert l v), (Heap gv5 gv5 r l = hinsert l gv5), (Heap gv5 gv5 r l = hinsert r v), (Heap gv5 gv5 r l = hinsert r gv5)
(Heap gv5 gv5 r l = merge l l), (Heap gv5 gv5 r l = merge l r), (Heap gv5 gv5 r l = merge r l), (Heap gv5 gv5 r l = merge r r), (Heap gv5 gv5 r l = mergea v l l), (Heap gv5 gv5 r l = mergea v l r), (Heap gv5 gv5 r l = mergea v r l), (Heap gv5 gv5 r l = mergea v r r), (Heap gv5 gv5 r l = mergea gv5 l l), (Heap gv5 gv5 r l = mergea gv5 l r)
(Heap gv5 gv5 r l = mergea gv5 r l), (Heap gv5 gv5 r l = mergea gv5 r r), (Heap gv5 gv5 r r = l), (Heap gv5 gv5 r r = r), (Heap gv5 gv5 r r = hinsert l v), (Heap gv5 gv5 r r = hinsert l gv5), (Heap gv5 gv5 r r = hinsert r v), (Heap gv5 gv5 r r = hinsert r gv5), (Heap gv5 gv5 r r = merge l l), (Heap gv5 gv5 r r = merge l r)
(Heap gv5 gv5 r r = merge r l), (Heap gv5 gv5 r r = merge r r), (Heap gv5 gv5 r r = mergea v l l), (Heap gv5 gv5 r r = mergea v l r), (Heap gv5 gv5 r r = mergea v r l), (Heap gv5 gv5 r r = mergea v r r), (Heap gv5 gv5 r r = mergea gv5 l l), (Heap gv5 gv5 r r = mergea gv5 l r), (Heap gv5 gv5 r r = mergea gv5 r l), (Heap gv5 gv5 r r = mergea gv5 r r)
(hinsert l v = l), (hinsert l v = r), (hinsert l gv5 = l), (hinsert l gv5 = r), (hinsert r v = l), (hinsert r v = r), (hinsert r gv5 = l), (hinsert r gv5 = r), (merge l l = l), (merge l l = r)
(merge l l = hinsert l v), (merge l l = hinsert l gv5), (merge l l = hinsert r v), (merge l l = hinsert r gv5), (merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert l gv5), (merge l r = hinsert r v), (merge l r = hinsert r gv5)
(merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert l gv5), (merge r l = hinsert r v), (merge r l = hinsert r gv5), (merge r r = l), (merge r r = r), (merge r r = hinsert l v), (merge r r = hinsert l gv5)
(merge r r = hinsert r v), (merge r r = hinsert r gv5), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv5), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv5), (mergea v l l = merge l l), (mergea v l l = merge l r)
(mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv5), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv5), (mergea v l r = merge l l), (mergea v l r = merge l r)
(mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv5), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv5), (mergea v r l = merge l l), (mergea v r l = merge l r)
(mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv5), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv5), (mergea v r r = merge l l), (mergea v r r = merge l r)
(mergea v r r = merge r l), (mergea v r r = merge r r), (mergea gv5 l l = l), (mergea gv5 l l = r), (mergea gv5 l l = hinsert l v), (mergea gv5 l l = hinsert l gv5), (mergea gv5 l l = hinsert r v), (mergea gv5 l l = hinsert r gv5), (mergea gv5 l l = merge l l), (mergea gv5 l l = merge l r)
(mergea gv5 l l = merge r l), (mergea gv5 l l = merge r r), (mergea gv5 l r = l), (mergea gv5 l r = r), (mergea gv5 l r = hinsert l v), (mergea gv5 l r = hinsert l gv5), (mergea gv5 l r = hinsert r v), (mergea gv5 l r = hinsert r gv5), (mergea gv5 l r = merge l l), (mergea gv5 l r = merge l r)
(mergea gv5 l r = merge r l), (mergea gv5 l r = merge r r), (mergea gv5 r l = l), (mergea gv5 r l = r), (mergea gv5 r l = hinsert l v), (mergea gv5 r l = hinsert l gv5), (mergea gv5 r l = hinsert r v), (mergea gv5 r l = hinsert r gv5), (mergea gv5 r l = merge l l), (mergea gv5 r l = merge l r)
(mergea gv5 r l = merge r l), (mergea gv5 r l = merge r r), (mergea gv5 r r = l), (mergea gv5 r r = r), (mergea gv5 r r = hinsert l v), (mergea gv5 r r = hinsert l gv5), (mergea gv5 r r = hinsert r v), (mergea gv5 r r = hinsert r gv5), (mergea gv5 r r = merge l l), (mergea gv5 r r = merge l r)
(mergea gv5 r r = merge r l), (mergea gv5 r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = Heap v gv5 l l), (Hleaf = Heap v gv5 l r), (Hleaf = Heap v gv5 r l), (Hleaf = Heap v gv5 r r)
(Hleaf = Heap gv5 v l l), (Hleaf = Heap gv5 v l r), (Hleaf = Heap gv5 v r l), (Hleaf = Heap gv5 v r r), (Hleaf = Heap gv5 gv5 l l), (Hleaf = Heap gv5 gv5 l r), (Hleaf = Heap gv5 gv5 r l), (Hleaf = Heap gv5 gv5 r r), (Hleaf = hinsert l v), (Hleaf = hinsert l gv5)
(Hleaf = hinsert r v), (Hleaf = hinsert r gv5), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r)
(Hleaf = mergea gv5 l l), (Hleaf = mergea gv5 l r), (Hleaf = mergea gv5 r l), (Hleaf = mergea gv5 r r), (hsize l = v), (hsize l = gv5), (hsize r = v), (hsize r = gv5), (rank l = v), (rank l = gv5)
(rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = gv5), (rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = gv5), (right_height l = hsize l), (right_height l = hsize r)
(right_height l = rank l), (right_height l = rank r), (right_height r = v), (right_height r = gv5), (right_height r = hsize l), (right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv6), (None = Some v)
(None = Some gv5), (has_leftist_property l = gv6), (has_leftist_property r = gv6)

Label: 8 (8)
(false = gv6), (true = gv6), (v < v), (v < gv3), (gv3 < v), (gv3 < gv3), (v <= v), (v <= gv3), (gv3 <= v), (gv3 <= gv3)
(gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (v = v), (v = gv3), (gv3 = v), (gv3 = gv3), (false = has_leftist_property r)
(false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (v < hsize r), (v < hsize l), (v < rank r), (v < rank l), (v < right_height r), (v < right_height l), (gv3 < hsize r)
(gv3 < hsize l), (gv3 < rank r), (gv3 < rank l), (gv3 < right_height r), (gv3 < right_height l), (hsize r < v), (hsize r < gv3), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < v), (hsize l < gv3), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < v)
(rank r < gv3), (rank r < hsize r), (rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < v), (rank l < gv3), (rank l < hsize r), (rank l < hsize l)
(rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < v), (right_height r < gv3), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l), (right_height r < right_height l)
(right_height l < v), (right_height l < gv3), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (v <= hsize r), (v <= hsize l), (v <= rank r)
(v <= rank l), (v <= right_height r), (v <= right_height l), (gv3 <= hsize r), (gv3 <= hsize l), (gv3 <= rank r), (gv3 <= rank l), (gv3 <= right_height r), (gv3 <= right_height l), (hsize r <= v)
(hsize r <= gv3), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= v), (hsize l <= gv3), (hsize l <= hsize r), (hsize l <= rank r)
(hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= v), (rank r <= gv3), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l)
(rank l <= v), (rank l <= gv3), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= v), (right_height r <= gv3), (right_height r <= hsize r)
(right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= v), (right_height l <= gv3), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l)
(right_height l <= right_height r), (false <> gv6), (true <> gv6), (~ v < v), (~ v < gv3), (~ gv3 < v), (~ gv3 < gv3), (~ v <= v), (~ v <= gv3), (~ gv3 <= v)
(~ gv3 <= gv3), (gv6 <> gv6), (r <> r), (r <> l), (l <> r), (l <> l), (v <> v), (v <> gv3), (gv3 <> v), (gv3 <> gv3)
(None = Some r), (None = Some l), (Heap v v r r = r), (Heap v v r r = l), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv3), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv3), (Heap v v r r = merge r r), (Heap v v r r = merge r l)
(Heap v v r r = merge l r), (Heap v v r r = merge l l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea gv3 r r), (Heap v v r r = mergea gv3 r l), (Heap v v r r = mergea gv3 l r), (Heap v v r r = mergea gv3 l l)
(Heap v v r l = r), (Heap v v r l = l), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv3), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv3), (Heap v v r l = merge r r), (Heap v v r l = merge r l), (Heap v v r l = merge l r), (Heap v v r l = merge l l)
(Heap v v r l = mergea v r r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea gv3 r r), (Heap v v r l = mergea gv3 r l), (Heap v v r l = mergea gv3 l r), (Heap v v r l = mergea gv3 l l), (Heap v v l r = r), (Heap v v l r = l)
(Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv3), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv3), (Heap v v l r = merge r r), (Heap v v l r = merge r l), (Heap v v l r = merge l r), (Heap v v l r = merge l l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r l)
(Heap v v l r = mergea v l r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea gv3 r r), (Heap v v l r = mergea gv3 r l), (Heap v v l r = mergea gv3 l r), (Heap v v l r = mergea gv3 l l), (Heap v v l l = r), (Heap v v l l = l), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv3)
(Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv3), (Heap v v l l = merge r r), (Heap v v l l = merge r l), (Heap v v l l = merge l r), (Heap v v l l = merge l l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v l l)
(Heap v v l l = mergea gv3 r r), (Heap v v l l = mergea gv3 r l), (Heap v v l l = mergea gv3 l r), (Heap v v l l = mergea gv3 l l), (Heap v gv3 r r = r), (Heap v gv3 r r = l), (Heap v gv3 r r = hinsert r v), (Heap v gv3 r r = hinsert r gv3), (Heap v gv3 r r = hinsert l v), (Heap v gv3 r r = hinsert l gv3)
(Heap v gv3 r r = merge r r), (Heap v gv3 r r = merge r l), (Heap v gv3 r r = merge l r), (Heap v gv3 r r = merge l l), (Heap v gv3 r r = mergea v r r), (Heap v gv3 r r = mergea v r l), (Heap v gv3 r r = mergea v l r), (Heap v gv3 r r = mergea v l l), (Heap v gv3 r r = mergea gv3 r r), (Heap v gv3 r r = mergea gv3 r l)
(Heap v gv3 r r = mergea gv3 l r), (Heap v gv3 r r = mergea gv3 l l), (Heap v gv3 r l = r), (Heap v gv3 r l = l), (Heap v gv3 r l = hinsert r v), (Heap v gv3 r l = hinsert r gv3), (Heap v gv3 r l = hinsert l v), (Heap v gv3 r l = hinsert l gv3), (Heap v gv3 r l = merge r r), (Heap v gv3 r l = merge r l)
(Heap v gv3 r l = merge l r), (Heap v gv3 r l = merge l l), (Heap v gv3 r l = mergea v r r), (Heap v gv3 r l = mergea v r l), (Heap v gv3 r l = mergea v l r), (Heap v gv3 r l = mergea v l l), (Heap v gv3 r l = mergea gv3 r r), (Heap v gv3 r l = mergea gv3 r l), (Heap v gv3 r l = mergea gv3 l r), (Heap v gv3 r l = mergea gv3 l l)
(Heap v gv3 l r = r), (Heap v gv3 l r = l), (Heap v gv3 l r = hinsert r v), (Heap v gv3 l r = hinsert r gv3), (Heap v gv3 l r = hinsert l v), (Heap v gv3 l r = hinsert l gv3), (Heap v gv3 l r = merge r r), (Heap v gv3 l r = merge r l), (Heap v gv3 l r = merge l r), (Heap v gv3 l r = merge l l)
(Heap v gv3 l r = mergea v r r), (Heap v gv3 l r = mergea v r l), (Heap v gv3 l r = mergea v l r), (Heap v gv3 l r = mergea v l l), (Heap v gv3 l r = mergea gv3 r r), (Heap v gv3 l r = mergea gv3 r l), (Heap v gv3 l r = mergea gv3 l r), (Heap v gv3 l r = mergea gv3 l l), (Heap v gv3 l l = r), (Heap v gv3 l l = l)
(Heap v gv3 l l = hinsert r v), (Heap v gv3 l l = hinsert r gv3), (Heap v gv3 l l = hinsert l v), (Heap v gv3 l l = hinsert l gv3), (Heap v gv3 l l = merge r r), (Heap v gv3 l l = merge r l), (Heap v gv3 l l = merge l r), (Heap v gv3 l l = merge l l), (Heap v gv3 l l = mergea v r r), (Heap v gv3 l l = mergea v r l)
(Heap v gv3 l l = mergea v l r), (Heap v gv3 l l = mergea v l l), (Heap v gv3 l l = mergea gv3 r r), (Heap v gv3 l l = mergea gv3 r l), (Heap v gv3 l l = mergea gv3 l r), (Heap v gv3 l l = mergea gv3 l l), (Heap gv3 v r r = r), (Heap gv3 v r r = l), (Heap gv3 v r r = hinsert r v), (Heap gv3 v r r = hinsert r gv3)
(Heap gv3 v r r = hinsert l v), (Heap gv3 v r r = hinsert l gv3), (Heap gv3 v r r = merge r r), (Heap gv3 v r r = merge r l), (Heap gv3 v r r = merge l r), (Heap gv3 v r r = merge l l), (Heap gv3 v r r = mergea v r r), (Heap gv3 v r r = mergea v r l), (Heap gv3 v r r = mergea v l r), (Heap gv3 v r r = mergea v l l)
(Heap gv3 v r r = mergea gv3 r r), (Heap gv3 v r r = mergea gv3 r l), (Heap gv3 v r r = mergea gv3 l r), (Heap gv3 v r r = mergea gv3 l l), (Heap gv3 v r l = r), (Heap gv3 v r l = l), (Heap gv3 v r l = hinsert r v), (Heap gv3 v r l = hinsert r gv3), (Heap gv3 v r l = hinsert l v), (Heap gv3 v r l = hinsert l gv3)
(Heap gv3 v r l = merge r r), (Heap gv3 v r l = merge r l), (Heap gv3 v r l = merge l r), (Heap gv3 v r l = merge l l), (Heap gv3 v r l = mergea v r r), (Heap gv3 v r l = mergea v r l), (Heap gv3 v r l = mergea v l r), (Heap gv3 v r l = mergea v l l), (Heap gv3 v r l = mergea gv3 r r), (Heap gv3 v r l = mergea gv3 r l)
(Heap gv3 v r l = mergea gv3 l r), (Heap gv3 v r l = mergea gv3 l l), (Heap gv3 v l r = r), (Heap gv3 v l r = l), (Heap gv3 v l r = hinsert r v), (Heap gv3 v l r = hinsert r gv3), (Heap gv3 v l r = hinsert l v), (Heap gv3 v l r = hinsert l gv3), (Heap gv3 v l r = merge r r), (Heap gv3 v l r = merge r l)
(Heap gv3 v l r = merge l r), (Heap gv3 v l r = merge l l), (Heap gv3 v l r = mergea v r r), (Heap gv3 v l r = mergea v r l), (Heap gv3 v l r = mergea v l r), (Heap gv3 v l r = mergea v l l), (Heap gv3 v l r = mergea gv3 r r), (Heap gv3 v l r = mergea gv3 r l), (Heap gv3 v l r = mergea gv3 l r), (Heap gv3 v l r = mergea gv3 l l)
(Heap gv3 v l l = r), (Heap gv3 v l l = l), (Heap gv3 v l l = hinsert r v), (Heap gv3 v l l = hinsert r gv3), (Heap gv3 v l l = hinsert l v), (Heap gv3 v l l = hinsert l gv3), (Heap gv3 v l l = merge r r), (Heap gv3 v l l = merge r l), (Heap gv3 v l l = merge l r), (Heap gv3 v l l = merge l l)
(Heap gv3 v l l = mergea v r r), (Heap gv3 v l l = mergea v r l), (Heap gv3 v l l = mergea v l r), (Heap gv3 v l l = mergea v l l), (Heap gv3 v l l = mergea gv3 r r), (Heap gv3 v l l = mergea gv3 r l), (Heap gv3 v l l = mergea gv3 l r), (Heap gv3 v l l = mergea gv3 l l), (Heap gv3 gv3 r r = r), (Heap gv3 gv3 r r = l)
(Heap gv3 gv3 r r = hinsert r v), (Heap gv3 gv3 r r = hinsert r gv3), (Heap gv3 gv3 r r = hinsert l v), (Heap gv3 gv3 r r = hinsert l gv3), (Heap gv3 gv3 r r = merge r r), (Heap gv3 gv3 r r = merge r l), (Heap gv3 gv3 r r = merge l r), (Heap gv3 gv3 r r = merge l l), (Heap gv3 gv3 r r = mergea v r r), (Heap gv3 gv3 r r = mergea v r l)
(Heap gv3 gv3 r r = mergea v l r), (Heap gv3 gv3 r r = mergea v l l), (Heap gv3 gv3 r r = mergea gv3 r r), (Heap gv3 gv3 r r = mergea gv3 r l), (Heap gv3 gv3 r r = mergea gv3 l r), (Heap gv3 gv3 r r = mergea gv3 l l), (Heap gv3 gv3 r l = r), (Heap gv3 gv3 r l = l), (Heap gv3 gv3 r l = hinsert r v), (Heap gv3 gv3 r l = hinsert r gv3)
(Heap gv3 gv3 r l = hinsert l v), (Heap gv3 gv3 r l = hinsert l gv3), (Heap gv3 gv3 r l = merge r r), (Heap gv3 gv3 r l = merge r l), (Heap gv3 gv3 r l = merge l r), (Heap gv3 gv3 r l = merge l l), (Heap gv3 gv3 r l = mergea v r r), (Heap gv3 gv3 r l = mergea v r l), (Heap gv3 gv3 r l = mergea v l r), (Heap gv3 gv3 r l = mergea v l l)
(Heap gv3 gv3 r l = mergea gv3 r r), (Heap gv3 gv3 r l = mergea gv3 r l), (Heap gv3 gv3 r l = mergea gv3 l r), (Heap gv3 gv3 r l = mergea gv3 l l), (Heap gv3 gv3 l r = r), (Heap gv3 gv3 l r = l), (Heap gv3 gv3 l r = hinsert r v), (Heap gv3 gv3 l r = hinsert r gv3), (Heap gv3 gv3 l r = hinsert l v), (Heap gv3 gv3 l r = hinsert l gv3)
(Heap gv3 gv3 l r = merge r r), (Heap gv3 gv3 l r = merge r l), (Heap gv3 gv3 l r = merge l r), (Heap gv3 gv3 l r = merge l l), (Heap gv3 gv3 l r = mergea v r r), (Heap gv3 gv3 l r = mergea v r l), (Heap gv3 gv3 l r = mergea v l r), (Heap gv3 gv3 l r = mergea v l l), (Heap gv3 gv3 l r = mergea gv3 r r), (Heap gv3 gv3 l r = mergea gv3 r l)
(Heap gv3 gv3 l r = mergea gv3 l r), (Heap gv3 gv3 l r = mergea gv3 l l), (Heap gv3 gv3 l l = r), (Heap gv3 gv3 l l = l), (Heap gv3 gv3 l l = hinsert r v), (Heap gv3 gv3 l l = hinsert r gv3), (Heap gv3 gv3 l l = hinsert l v), (Heap gv3 gv3 l l = hinsert l gv3), (Heap gv3 gv3 l l = merge r r), (Heap gv3 gv3 l l = merge r l)
(Heap gv3 gv3 l l = merge l r), (Heap gv3 gv3 l l = merge l l), (Heap gv3 gv3 l l = mergea v r r), (Heap gv3 gv3 l l = mergea v r l), (Heap gv3 gv3 l l = mergea v l r), (Heap gv3 gv3 l l = mergea v l l), (Heap gv3 gv3 l l = mergea gv3 r r), (Heap gv3 gv3 l l = mergea gv3 r l), (Heap gv3 gv3 l l = mergea gv3 l r), (Heap gv3 gv3 l l = mergea gv3 l l)
(hinsert r v = r), (hinsert r v = l), (hinsert r gv3 = r), (hinsert r gv3 = l), (hinsert l v = r), (hinsert l v = l), (hinsert l gv3 = r), (hinsert l gv3 = l), (merge r r = r), (merge r r = l)
(merge r r = hinsert r v), (merge r r = hinsert r gv3), (merge r r = hinsert l v), (merge r r = hinsert l gv3), (merge r l = r), (merge r l = l), (merge r l = hinsert r v), (merge r l = hinsert r gv3), (merge r l = hinsert l v), (merge r l = hinsert l gv3)
(merge l r = r), (merge l r = l), (merge l r = hinsert r v), (merge l r = hinsert r gv3), (merge l r = hinsert l v), (merge l r = hinsert l gv3), (merge l l = r), (merge l l = l), (merge l l = hinsert r v), (merge l l = hinsert r gv3)
(merge l l = hinsert l v), (merge l l = hinsert l gv3), (mergea v r r = r), (mergea v r r = l), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv3), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv3), (mergea v r r = merge r r), (mergea v r r = merge r l)
(mergea v r r = merge l r), (mergea v r r = merge l l), (mergea v r l = r), (mergea v r l = l), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv3), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv3), (mergea v r l = merge r r), (mergea v r l = merge r l)
(mergea v r l = merge l r), (mergea v r l = merge l l), (mergea v l r = r), (mergea v l r = l), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv3), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv3), (mergea v l r = merge r r), (mergea v l r = merge r l)
(mergea v l r = merge l r), (mergea v l r = merge l l), (mergea v l l = r), (mergea v l l = l), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv3), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv3), (mergea v l l = merge r r), (mergea v l l = merge r l)
(mergea v l l = merge l r), (mergea v l l = merge l l), (mergea gv3 r r = r), (mergea gv3 r r = l), (mergea gv3 r r = hinsert r v), (mergea gv3 r r = hinsert r gv3), (mergea gv3 r r = hinsert l v), (mergea gv3 r r = hinsert l gv3), (mergea gv3 r r = merge r r), (mergea gv3 r r = merge r l)
(mergea gv3 r r = merge l r), (mergea gv3 r r = merge l l), (mergea gv3 r l = r), (mergea gv3 r l = l), (mergea gv3 r l = hinsert r v), (mergea gv3 r l = hinsert r gv3), (mergea gv3 r l = hinsert l v), (mergea gv3 r l = hinsert l gv3), (mergea gv3 r l = merge r r), (mergea gv3 r l = merge r l)
(mergea gv3 r l = merge l r), (mergea gv3 r l = merge l l), (mergea gv3 l r = r), (mergea gv3 l r = l), (mergea gv3 l r = hinsert r v), (mergea gv3 l r = hinsert r gv3), (mergea gv3 l r = hinsert l v), (mergea gv3 l r = hinsert l gv3), (mergea gv3 l r = merge r r), (mergea gv3 l r = merge r l)
(mergea gv3 l r = merge l r), (mergea gv3 l r = merge l l), (mergea gv3 l l = r), (mergea gv3 l l = l), (mergea gv3 l l = hinsert r v), (mergea gv3 l l = hinsert r gv3), (mergea gv3 l l = hinsert l v), (mergea gv3 l l = hinsert l gv3), (mergea gv3 l l = merge r r), (mergea gv3 l l = merge r l)
(mergea gv3 l l = merge l r), (mergea gv3 l l = merge l l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l l), (Hleaf = Heap v gv3 r r), (Hleaf = Heap v gv3 r l), (Hleaf = Heap v gv3 l r), (Hleaf = Heap v gv3 l l)
(Hleaf = Heap gv3 v r r), (Hleaf = Heap gv3 v r l), (Hleaf = Heap gv3 v l r), (Hleaf = Heap gv3 v l l), (Hleaf = Heap gv3 gv3 r r), (Hleaf = Heap gv3 gv3 r l), (Hleaf = Heap gv3 gv3 l r), (Hleaf = Heap gv3 gv3 l l), (Hleaf = hinsert r v), (Hleaf = hinsert r gv3)
(Hleaf = hinsert l v), (Hleaf = hinsert l gv3), (Hleaf = merge r r), (Hleaf = merge r l), (Hleaf = merge l r), (Hleaf = merge l l), (Hleaf = mergea v r r), (Hleaf = mergea v r l), (Hleaf = mergea v l r), (Hleaf = mergea v l l)
(Hleaf = mergea gv3 r r), (Hleaf = mergea gv3 r l), (Hleaf = mergea gv3 l r), (Hleaf = mergea gv3 l l), (hsize r = v), (hsize r = gv3), (hsize l = v), (hsize l = gv3), (rank r = v), (rank r = gv3)
(rank r = hsize r), (rank r = hsize l), (rank l = v), (rank l = gv3), (rank l = hsize r), (rank l = hsize l), (right_height r = v), (right_height r = gv3), (right_height r = hsize r), (right_height r = hsize l)
(right_height r = rank r), (right_height r = rank l), (right_height l = v), (right_height l = gv3), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv6), (None = Some v)
(None = Some gv3), (has_leftist_property r = gv6), (has_leftist_property l = gv6)

Label: 9 (9)
(false = gv6), (true = gv6), (v < v), (v < gv2), (gv2 < v), (gv2 < gv2), (v <= v), (v <= gv2), (gv2 <= v), (gv2 <= gv2)
(gv6 = gv6), (r = r), (r = l), (l = r), (l = l), (v = v), (v = gv2), (gv2 = v), (gv2 = gv2), (false = has_leftist_property r)
(false = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property l), (v < hsize r), (v < hsize l), (v < rank r), (v < rank l), (v < right_height r), (v < right_height l), (gv2 < hsize r)
(gv2 < hsize l), (gv2 < rank r), (gv2 < rank l), (gv2 < right_height r), (gv2 < right_height l), (hsize r < v), (hsize r < gv2), (hsize r < hsize l), (hsize r < rank r), (hsize r < rank l)
(hsize r < right_height r), (hsize r < right_height l), (hsize l < v), (hsize l < gv2), (hsize l < hsize r), (hsize l < rank r), (hsize l < rank l), (hsize l < right_height r), (hsize l < right_height l), (rank r < v)
(rank r < gv2), (rank r < hsize r), (rank r < hsize l), (rank r < rank l), (rank r < right_height r), (rank r < right_height l), (rank l < v), (rank l < gv2), (rank l < hsize r), (rank l < hsize l)
(rank l < rank r), (rank l < right_height r), (rank l < right_height l), (right_height r < v), (right_height r < gv2), (right_height r < hsize r), (right_height r < hsize l), (right_height r < rank r), (right_height r < rank l), (right_height r < right_height l)
(right_height l < v), (right_height l < gv2), (right_height l < hsize r), (right_height l < hsize l), (right_height l < rank r), (right_height l < rank l), (right_height l < right_height r), (v <= hsize r), (v <= hsize l), (v <= rank r)
(v <= rank l), (v <= right_height r), (v <= right_height l), (gv2 <= hsize r), (gv2 <= hsize l), (gv2 <= rank r), (gv2 <= rank l), (gv2 <= right_height r), (gv2 <= right_height l), (hsize r <= v)
(hsize r <= gv2), (hsize r <= hsize l), (hsize r <= rank r), (hsize r <= rank l), (hsize r <= right_height r), (hsize r <= right_height l), (hsize l <= v), (hsize l <= gv2), (hsize l <= hsize r), (hsize l <= rank r)
(hsize l <= rank l), (hsize l <= right_height r), (hsize l <= right_height l), (rank r <= v), (rank r <= gv2), (rank r <= hsize r), (rank r <= hsize l), (rank r <= rank l), (rank r <= right_height r), (rank r <= right_height l)
(rank l <= v), (rank l <= gv2), (rank l <= hsize r), (rank l <= hsize l), (rank l <= rank r), (rank l <= right_height r), (rank l <= right_height l), (right_height r <= v), (right_height r <= gv2), (right_height r <= hsize r)
(right_height r <= hsize l), (right_height r <= rank r), (right_height r <= rank l), (right_height r <= right_height l), (right_height l <= v), (right_height l <= gv2), (right_height l <= hsize r), (right_height l <= hsize l), (right_height l <= rank r), (right_height l <= rank l)
(right_height l <= right_height r), (false <> gv6), (true <> gv6), (~ v < v), (~ v < gv2), (~ gv2 < v), (~ gv2 < gv2), (~ v <= v), (~ v <= gv2), (~ gv2 <= v)
(~ gv2 <= gv2), (gv6 <> gv6), (r <> r), (r <> l), (l <> r), (l <> l), (v <> v), (v <> gv2), (gv2 <> v), (gv2 <> gv2)
(None = Some r), (None = Some l), (Heap v v r r = r), (Heap v v r r = l), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv2), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv2), (Heap v v r r = merge r r), (Heap v v r r = merge r l)
(Heap v v r r = merge l r), (Heap v v r r = merge l l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea gv2 r r), (Heap v v r r = mergea gv2 r l), (Heap v v r r = mergea gv2 l r), (Heap v v r r = mergea gv2 l l)
(Heap v v r l = r), (Heap v v r l = l), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv2), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv2), (Heap v v r l = merge r r), (Heap v v r l = merge r l), (Heap v v r l = merge l r), (Heap v v r l = merge l l)
(Heap v v r l = mergea v r r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea gv2 r r), (Heap v v r l = mergea gv2 r l), (Heap v v r l = mergea gv2 l r), (Heap v v r l = mergea gv2 l l), (Heap v v l r = r), (Heap v v l r = l)
(Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv2), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv2), (Heap v v l r = merge r r), (Heap v v l r = merge r l), (Heap v v l r = merge l r), (Heap v v l r = merge l l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r l)
(Heap v v l r = mergea v l r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea gv2 r r), (Heap v v l r = mergea gv2 r l), (Heap v v l r = mergea gv2 l r), (Heap v v l r = mergea gv2 l l), (Heap v v l l = r), (Heap v v l l = l), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv2)
(Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv2), (Heap v v l l = merge r r), (Heap v v l l = merge r l), (Heap v v l l = merge l r), (Heap v v l l = merge l l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v l l)
(Heap v v l l = mergea gv2 r r), (Heap v v l l = mergea gv2 r l), (Heap v v l l = mergea gv2 l r), (Heap v v l l = mergea gv2 l l), (Heap v gv2 r r = r), (Heap v gv2 r r = l), (Heap v gv2 r r = hinsert r v), (Heap v gv2 r r = hinsert r gv2), (Heap v gv2 r r = hinsert l v), (Heap v gv2 r r = hinsert l gv2)
(Heap v gv2 r r = merge r r), (Heap v gv2 r r = merge r l), (Heap v gv2 r r = merge l r), (Heap v gv2 r r = merge l l), (Heap v gv2 r r = mergea v r r), (Heap v gv2 r r = mergea v r l), (Heap v gv2 r r = mergea v l r), (Heap v gv2 r r = mergea v l l), (Heap v gv2 r r = mergea gv2 r r), (Heap v gv2 r r = mergea gv2 r l)
(Heap v gv2 r r = mergea gv2 l r), (Heap v gv2 r r = mergea gv2 l l), (Heap v gv2 r l = r), (Heap v gv2 r l = l), (Heap v gv2 r l = hinsert r v), (Heap v gv2 r l = hinsert r gv2), (Heap v gv2 r l = hinsert l v), (Heap v gv2 r l = hinsert l gv2), (Heap v gv2 r l = merge r r), (Heap v gv2 r l = merge r l)
(Heap v gv2 r l = merge l r), (Heap v gv2 r l = merge l l), (Heap v gv2 r l = mergea v r r), (Heap v gv2 r l = mergea v r l), (Heap v gv2 r l = mergea v l r), (Heap v gv2 r l = mergea v l l), (Heap v gv2 r l = mergea gv2 r r), (Heap v gv2 r l = mergea gv2 r l), (Heap v gv2 r l = mergea gv2 l r), (Heap v gv2 r l = mergea gv2 l l)
(Heap v gv2 l r = r), (Heap v gv2 l r = l), (Heap v gv2 l r = hinsert r v), (Heap v gv2 l r = hinsert r gv2), (Heap v gv2 l r = hinsert l v), (Heap v gv2 l r = hinsert l gv2), (Heap v gv2 l r = merge r r), (Heap v gv2 l r = merge r l), (Heap v gv2 l r = merge l r), (Heap v gv2 l r = merge l l)
(Heap v gv2 l r = mergea v r r), (Heap v gv2 l r = mergea v r l), (Heap v gv2 l r = mergea v l r), (Heap v gv2 l r = mergea v l l), (Heap v gv2 l r = mergea gv2 r r), (Heap v gv2 l r = mergea gv2 r l), (Heap v gv2 l r = mergea gv2 l r), (Heap v gv2 l r = mergea gv2 l l), (Heap v gv2 l l = r), (Heap v gv2 l l = l)
(Heap v gv2 l l = hinsert r v), (Heap v gv2 l l = hinsert r gv2), (Heap v gv2 l l = hinsert l v), (Heap v gv2 l l = hinsert l gv2), (Heap v gv2 l l = merge r r), (Heap v gv2 l l = merge r l), (Heap v gv2 l l = merge l r), (Heap v gv2 l l = merge l l), (Heap v gv2 l l = mergea v r r), (Heap v gv2 l l = mergea v r l)
(Heap v gv2 l l = mergea v l r), (Heap v gv2 l l = mergea v l l), (Heap v gv2 l l = mergea gv2 r r), (Heap v gv2 l l = mergea gv2 r l), (Heap v gv2 l l = mergea gv2 l r), (Heap v gv2 l l = mergea gv2 l l), (Heap gv2 v r r = r), (Heap gv2 v r r = l), (Heap gv2 v r r = hinsert r v), (Heap gv2 v r r = hinsert r gv2)
(Heap gv2 v r r = hinsert l v), (Heap gv2 v r r = hinsert l gv2), (Heap gv2 v r r = merge r r), (Heap gv2 v r r = merge r l), (Heap gv2 v r r = merge l r), (Heap gv2 v r r = merge l l), (Heap gv2 v r r = mergea v r r), (Heap gv2 v r r = mergea v r l), (Heap gv2 v r r = mergea v l r), (Heap gv2 v r r = mergea v l l)
(Heap gv2 v r r = mergea gv2 r r), (Heap gv2 v r r = mergea gv2 r l), (Heap gv2 v r r = mergea gv2 l r), (Heap gv2 v r r = mergea gv2 l l), (Heap gv2 v r l = r), (Heap gv2 v r l = l), (Heap gv2 v r l = hinsert r v), (Heap gv2 v r l = hinsert r gv2), (Heap gv2 v r l = hinsert l v), (Heap gv2 v r l = hinsert l gv2)
(Heap gv2 v r l = merge r r), (Heap gv2 v r l = merge r l), (Heap gv2 v r l = merge l r), (Heap gv2 v r l = merge l l), (Heap gv2 v r l = mergea v r r), (Heap gv2 v r l = mergea v r l), (Heap gv2 v r l = mergea v l r), (Heap gv2 v r l = mergea v l l), (Heap gv2 v r l = mergea gv2 r r), (Heap gv2 v r l = mergea gv2 r l)
(Heap gv2 v r l = mergea gv2 l r), (Heap gv2 v r l = mergea gv2 l l), (Heap gv2 v l r = r), (Heap gv2 v l r = l), (Heap gv2 v l r = hinsert r v), (Heap gv2 v l r = hinsert r gv2), (Heap gv2 v l r = hinsert l v), (Heap gv2 v l r = hinsert l gv2), (Heap gv2 v l r = merge r r), (Heap gv2 v l r = merge r l)
(Heap gv2 v l r = merge l r), (Heap gv2 v l r = merge l l), (Heap gv2 v l r = mergea v r r), (Heap gv2 v l r = mergea v r l), (Heap gv2 v l r = mergea v l r), (Heap gv2 v l r = mergea v l l), (Heap gv2 v l r = mergea gv2 r r), (Heap gv2 v l r = mergea gv2 r l), (Heap gv2 v l r = mergea gv2 l r), (Heap gv2 v l r = mergea gv2 l l)
(Heap gv2 v l l = r), (Heap gv2 v l l = l), (Heap gv2 v l l = hinsert r v), (Heap gv2 v l l = hinsert r gv2), (Heap gv2 v l l = hinsert l v), (Heap gv2 v l l = hinsert l gv2), (Heap gv2 v l l = merge r r), (Heap gv2 v l l = merge r l), (Heap gv2 v l l = merge l r), (Heap gv2 v l l = merge l l)
(Heap gv2 v l l = mergea v r r), (Heap gv2 v l l = mergea v r l), (Heap gv2 v l l = mergea v l r), (Heap gv2 v l l = mergea v l l), (Heap gv2 v l l = mergea gv2 r r), (Heap gv2 v l l = mergea gv2 r l), (Heap gv2 v l l = mergea gv2 l r), (Heap gv2 v l l = mergea gv2 l l), (Heap gv2 gv2 r r = r), (Heap gv2 gv2 r r = l)
(Heap gv2 gv2 r r = hinsert r v), (Heap gv2 gv2 r r = hinsert r gv2), (Heap gv2 gv2 r r = hinsert l v), (Heap gv2 gv2 r r = hinsert l gv2), (Heap gv2 gv2 r r = merge r r), (Heap gv2 gv2 r r = merge r l), (Heap gv2 gv2 r r = merge l r), (Heap gv2 gv2 r r = merge l l), (Heap gv2 gv2 r r = mergea v r r), (Heap gv2 gv2 r r = mergea v r l)
(Heap gv2 gv2 r r = mergea v l r), (Heap gv2 gv2 r r = mergea v l l), (Heap gv2 gv2 r r = mergea gv2 r r), (Heap gv2 gv2 r r = mergea gv2 r l), (Heap gv2 gv2 r r = mergea gv2 l r), (Heap gv2 gv2 r r = mergea gv2 l l), (Heap gv2 gv2 r l = r), (Heap gv2 gv2 r l = l), (Heap gv2 gv2 r l = hinsert r v), (Heap gv2 gv2 r l = hinsert r gv2)
(Heap gv2 gv2 r l = hinsert l v), (Heap gv2 gv2 r l = hinsert l gv2), (Heap gv2 gv2 r l = merge r r), (Heap gv2 gv2 r l = merge r l), (Heap gv2 gv2 r l = merge l r), (Heap gv2 gv2 r l = merge l l), (Heap gv2 gv2 r l = mergea v r r), (Heap gv2 gv2 r l = mergea v r l), (Heap gv2 gv2 r l = mergea v l r), (Heap gv2 gv2 r l = mergea v l l)
(Heap gv2 gv2 r l = mergea gv2 r r), (Heap gv2 gv2 r l = mergea gv2 r l), (Heap gv2 gv2 r l = mergea gv2 l r), (Heap gv2 gv2 r l = mergea gv2 l l), (Heap gv2 gv2 l r = r), (Heap gv2 gv2 l r = l), (Heap gv2 gv2 l r = hinsert r v), (Heap gv2 gv2 l r = hinsert r gv2), (Heap gv2 gv2 l r = hinsert l v), (Heap gv2 gv2 l r = hinsert l gv2)
(Heap gv2 gv2 l r = merge r r), (Heap gv2 gv2 l r = merge r l), (Heap gv2 gv2 l r = merge l r), (Heap gv2 gv2 l r = merge l l), (Heap gv2 gv2 l r = mergea v r r), (Heap gv2 gv2 l r = mergea v r l), (Heap gv2 gv2 l r = mergea v l r), (Heap gv2 gv2 l r = mergea v l l), (Heap gv2 gv2 l r = mergea gv2 r r), (Heap gv2 gv2 l r = mergea gv2 r l)
(Heap gv2 gv2 l r = mergea gv2 l r), (Heap gv2 gv2 l r = mergea gv2 l l), (Heap gv2 gv2 l l = r), (Heap gv2 gv2 l l = l), (Heap gv2 gv2 l l = hinsert r v), (Heap gv2 gv2 l l = hinsert r gv2), (Heap gv2 gv2 l l = hinsert l v), (Heap gv2 gv2 l l = hinsert l gv2), (Heap gv2 gv2 l l = merge r r), (Heap gv2 gv2 l l = merge r l)
(Heap gv2 gv2 l l = merge l r), (Heap gv2 gv2 l l = merge l l), (Heap gv2 gv2 l l = mergea v r r), (Heap gv2 gv2 l l = mergea v r l), (Heap gv2 gv2 l l = mergea v l r), (Heap gv2 gv2 l l = mergea v l l), (Heap gv2 gv2 l l = mergea gv2 r r), (Heap gv2 gv2 l l = mergea gv2 r l), (Heap gv2 gv2 l l = mergea gv2 l r), (Heap gv2 gv2 l l = mergea gv2 l l)
(hinsert r v = r), (hinsert r v = l), (hinsert r gv2 = r), (hinsert r gv2 = l), (hinsert l v = r), (hinsert l v = l), (hinsert l gv2 = r), (hinsert l gv2 = l), (merge r r = r), (merge r r = l)
(merge r r = hinsert r v), (merge r r = hinsert r gv2), (merge r r = hinsert l v), (merge r r = hinsert l gv2), (merge r l = r), (merge r l = l), (merge r l = hinsert r v), (merge r l = hinsert r gv2), (merge r l = hinsert l v), (merge r l = hinsert l gv2)
(merge l r = r), (merge l r = l), (merge l r = hinsert r v), (merge l r = hinsert r gv2), (merge l r = hinsert l v), (merge l r = hinsert l gv2), (merge l l = r), (merge l l = l), (merge l l = hinsert r v), (merge l l = hinsert r gv2)
(merge l l = hinsert l v), (merge l l = hinsert l gv2), (mergea v r r = r), (mergea v r r = l), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv2), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv2), (mergea v r r = merge r r), (mergea v r r = merge r l)
(mergea v r r = merge l r), (mergea v r r = merge l l), (mergea v r l = r), (mergea v r l = l), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv2), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv2), (mergea v r l = merge r r), (mergea v r l = merge r l)
(mergea v r l = merge l r), (mergea v r l = merge l l), (mergea v l r = r), (mergea v l r = l), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv2), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv2), (mergea v l r = merge r r), (mergea v l r = merge r l)
(mergea v l r = merge l r), (mergea v l r = merge l l), (mergea v l l = r), (mergea v l l = l), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv2), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv2), (mergea v l l = merge r r), (mergea v l l = merge r l)
(mergea v l l = merge l r), (mergea v l l = merge l l), (mergea gv2 r r = r), (mergea gv2 r r = l), (mergea gv2 r r = hinsert r v), (mergea gv2 r r = hinsert r gv2), (mergea gv2 r r = hinsert l v), (mergea gv2 r r = hinsert l gv2), (mergea gv2 r r = merge r r), (mergea gv2 r r = merge r l)
(mergea gv2 r r = merge l r), (mergea gv2 r r = merge l l), (mergea gv2 r l = r), (mergea gv2 r l = l), (mergea gv2 r l = hinsert r v), (mergea gv2 r l = hinsert r gv2), (mergea gv2 r l = hinsert l v), (mergea gv2 r l = hinsert l gv2), (mergea gv2 r l = merge r r), (mergea gv2 r l = merge r l)
(mergea gv2 r l = merge l r), (mergea gv2 r l = merge l l), (mergea gv2 l r = r), (mergea gv2 l r = l), (mergea gv2 l r = hinsert r v), (mergea gv2 l r = hinsert r gv2), (mergea gv2 l r = hinsert l v), (mergea gv2 l r = hinsert l gv2), (mergea gv2 l r = merge r r), (mergea gv2 l r = merge r l)
(mergea gv2 l r = merge l r), (mergea gv2 l r = merge l l), (mergea gv2 l l = r), (mergea gv2 l l = l), (mergea gv2 l l = hinsert r v), (mergea gv2 l l = hinsert r gv2), (mergea gv2 l l = hinsert l v), (mergea gv2 l l = hinsert l gv2), (mergea gv2 l l = merge r r), (mergea gv2 l l = merge r l)
(mergea gv2 l l = merge l r), (mergea gv2 l l = merge l l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l l), (Hleaf = Heap v gv2 r r), (Hleaf = Heap v gv2 r l), (Hleaf = Heap v gv2 l r), (Hleaf = Heap v gv2 l l)
(Hleaf = Heap gv2 v r r), (Hleaf = Heap gv2 v r l), (Hleaf = Heap gv2 v l r), (Hleaf = Heap gv2 v l l), (Hleaf = Heap gv2 gv2 r r), (Hleaf = Heap gv2 gv2 r l), (Hleaf = Heap gv2 gv2 l r), (Hleaf = Heap gv2 gv2 l l), (Hleaf = hinsert r v), (Hleaf = hinsert r gv2)
(Hleaf = hinsert l v), (Hleaf = hinsert l gv2), (Hleaf = merge r r), (Hleaf = merge r l), (Hleaf = merge l r), (Hleaf = merge l l), (Hleaf = mergea v r r), (Hleaf = mergea v r l), (Hleaf = mergea v l r), (Hleaf = mergea v l l)
(Hleaf = mergea gv2 r r), (Hleaf = mergea gv2 r l), (Hleaf = mergea gv2 l r), (Hleaf = mergea gv2 l l), (hsize r = v), (hsize r = gv2), (hsize l = v), (hsize l = gv2), (rank r = v), (rank r = gv2)
(rank r = hsize r), (rank r = hsize l), (rank l = v), (rank l = gv2), (rank l = hsize r), (rank l = hsize l), (right_height r = v), (right_height r = gv2), (right_height r = hsize r), (right_height r = hsize l)
(right_height r = rank r), (right_height r = rank l), (right_height l = v), (right_height l = gv2), (right_height l = hsize r), (right_height l = hsize l), (right_height l = rank r), (right_height l = rank l), (None = Some gv6), (None = Some v)
(None = Some gv2), (has_leftist_property r = gv6), (has_leftist_property l = gv6)

Label: 10 (10)
(false = gv6), (true = gv6), (v < v), (v < gv4), (gv4 < v), (gv4 < gv4), (v <= v), (v <= gv4), (gv4 <= v), (gv4 <= gv4)
(gv6 = gv6), (v = v), (v = gv4), (gv4 = v), (gv4 = gv4), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l)
(false = has_leftist_property r), (true = has_leftist_property l), (true = has_leftist_property r), (v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (gv4 < hsize l)
(gv4 < hsize r), (gv4 < rank l), (gv4 < rank r), (gv4 < right_height l), (gv4 < right_height r), (hsize l < v), (hsize l < gv4), (hsize l < hsize r), (hsize l < rank l), (hsize l < rank r)
(hsize l < right_height l), (hsize l < right_height r), (hsize r < v), (hsize r < gv4), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v)
(rank l < gv4), (rank l < hsize l), (rank l < hsize r), (rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < gv4), (rank r < hsize l), (rank r < hsize r)
(rank r < rank l), (rank r < right_height l), (rank r < right_height r), (right_height l < v), (right_height l < gv4), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r)
(right_height r < v), (right_height r < gv4), (right_height r < hsize l), (right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l)
(v <= rank r), (v <= right_height l), (v <= right_height r), (gv4 <= hsize l), (gv4 <= hsize r), (gv4 <= rank l), (gv4 <= rank r), (gv4 <= right_height l), (gv4 <= right_height r), (hsize l <= v)
(hsize l <= gv4), (hsize l <= hsize r), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= gv4), (hsize r <= hsize l), (hsize r <= rank l)
(hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r), (rank l <= v), (rank l <= gv4), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r)
(rank r <= v), (rank r <= gv4), (rank r <= hsize l), (rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= gv4), (right_height l <= hsize l)
(right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= right_height r), (right_height r <= v), (right_height r <= gv4), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r)
(right_height r <= right_height l), (false <> gv6), (true <> gv6), (~ v < v), (~ v < gv4), (~ gv4 < v), (~ gv4 < gv4), (~ v <= v), (~ v <= gv4), (~ gv4 <= v)
(~ gv4 <= gv4), (gv6 <> gv6), (v <> v), (v <> gv4), (gv4 <> v), (gv4 <> gv4), (l <> l), (l <> r), (r <> l), (r <> r)
(None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv4), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv4), (Heap v v l l = merge l l), (Heap v v l l = merge l r)
(Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea gv4 l l), (Heap v v l l = mergea gv4 l r), (Heap v v l l = mergea gv4 r l), (Heap v v l l = mergea gv4 r r)
(Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv4), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv4), (Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r)
(Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea gv4 l l), (Heap v v l r = mergea gv4 l r), (Heap v v l r = mergea gv4 r l), (Heap v v l r = mergea gv4 r r), (Heap v v r l = l), (Heap v v r l = r)
(Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv4), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv4), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r)
(Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea gv4 l l), (Heap v v r l = mergea gv4 l r), (Heap v v r l = mergea gv4 r l), (Heap v v r l = mergea gv4 r r), (Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv4)
(Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv4), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r)
(Heap v v r r = mergea gv4 l l), (Heap v v r r = mergea gv4 l r), (Heap v v r r = mergea gv4 r l), (Heap v v r r = mergea gv4 r r), (Heap v gv4 l l = l), (Heap v gv4 l l = r), (Heap v gv4 l l = hinsert l v), (Heap v gv4 l l = hinsert l gv4), (Heap v gv4 l l = hinsert r v), (Heap v gv4 l l = hinsert r gv4)
(Heap v gv4 l l = merge l l), (Heap v gv4 l l = merge l r), (Heap v gv4 l l = merge r l), (Heap v gv4 l l = merge r r), (Heap v gv4 l l = mergea v l l), (Heap v gv4 l l = mergea v l r), (Heap v gv4 l l = mergea v r l), (Heap v gv4 l l = mergea v r r), (Heap v gv4 l l = mergea gv4 l l), (Heap v gv4 l l = mergea gv4 l r)
(Heap v gv4 l l = mergea gv4 r l), (Heap v gv4 l l = mergea gv4 r r), (Heap v gv4 l r = l), (Heap v gv4 l r = r), (Heap v gv4 l r = hinsert l v), (Heap v gv4 l r = hinsert l gv4), (Heap v gv4 l r = hinsert r v), (Heap v gv4 l r = hinsert r gv4), (Heap v gv4 l r = merge l l), (Heap v gv4 l r = merge l r)
(Heap v gv4 l r = merge r l), (Heap v gv4 l r = merge r r), (Heap v gv4 l r = mergea v l l), (Heap v gv4 l r = mergea v l r), (Heap v gv4 l r = mergea v r l), (Heap v gv4 l r = mergea v r r), (Heap v gv4 l r = mergea gv4 l l), (Heap v gv4 l r = mergea gv4 l r), (Heap v gv4 l r = mergea gv4 r l), (Heap v gv4 l r = mergea gv4 r r)
(Heap v gv4 r l = l), (Heap v gv4 r l = r), (Heap v gv4 r l = hinsert l v), (Heap v gv4 r l = hinsert l gv4), (Heap v gv4 r l = hinsert r v), (Heap v gv4 r l = hinsert r gv4), (Heap v gv4 r l = merge l l), (Heap v gv4 r l = merge l r), (Heap v gv4 r l = merge r l), (Heap v gv4 r l = merge r r)
(Heap v gv4 r l = mergea v l l), (Heap v gv4 r l = mergea v l r), (Heap v gv4 r l = mergea v r l), (Heap v gv4 r l = mergea v r r), (Heap v gv4 r l = mergea gv4 l l), (Heap v gv4 r l = mergea gv4 l r), (Heap v gv4 r l = mergea gv4 r l), (Heap v gv4 r l = mergea gv4 r r), (Heap v gv4 r r = l), (Heap v gv4 r r = r)
(Heap v gv4 r r = hinsert l v), (Heap v gv4 r r = hinsert l gv4), (Heap v gv4 r r = hinsert r v), (Heap v gv4 r r = hinsert r gv4), (Heap v gv4 r r = merge l l), (Heap v gv4 r r = merge l r), (Heap v gv4 r r = merge r l), (Heap v gv4 r r = merge r r), (Heap v gv4 r r = mergea v l l), (Heap v gv4 r r = mergea v l r)
(Heap v gv4 r r = mergea v r l), (Heap v gv4 r r = mergea v r r), (Heap v gv4 r r = mergea gv4 l l), (Heap v gv4 r r = mergea gv4 l r), (Heap v gv4 r r = mergea gv4 r l), (Heap v gv4 r r = mergea gv4 r r), (Heap gv4 v l l = l), (Heap gv4 v l l = r), (Heap gv4 v l l = hinsert l v), (Heap gv4 v l l = hinsert l gv4)
(Heap gv4 v l l = hinsert r v), (Heap gv4 v l l = hinsert r gv4), (Heap gv4 v l l = merge l l), (Heap gv4 v l l = merge l r), (Heap gv4 v l l = merge r l), (Heap gv4 v l l = merge r r), (Heap gv4 v l l = mergea v l l), (Heap gv4 v l l = mergea v l r), (Heap gv4 v l l = mergea v r l), (Heap gv4 v l l = mergea v r r)
(Heap gv4 v l l = mergea gv4 l l), (Heap gv4 v l l = mergea gv4 l r), (Heap gv4 v l l = mergea gv4 r l), (Heap gv4 v l l = mergea gv4 r r), (Heap gv4 v l r = l), (Heap gv4 v l r = r), (Heap gv4 v l r = hinsert l v), (Heap gv4 v l r = hinsert l gv4), (Heap gv4 v l r = hinsert r v), (Heap gv4 v l r = hinsert r gv4)
(Heap gv4 v l r = merge l l), (Heap gv4 v l r = merge l r), (Heap gv4 v l r = merge r l), (Heap gv4 v l r = merge r r), (Heap gv4 v l r = mergea v l l), (Heap gv4 v l r = mergea v l r), (Heap gv4 v l r = mergea v r l), (Heap gv4 v l r = mergea v r r), (Heap gv4 v l r = mergea gv4 l l), (Heap gv4 v l r = mergea gv4 l r)
(Heap gv4 v l r = mergea gv4 r l), (Heap gv4 v l r = mergea gv4 r r), (Heap gv4 v r l = l), (Heap gv4 v r l = r), (Heap gv4 v r l = hinsert l v), (Heap gv4 v r l = hinsert l gv4), (Heap gv4 v r l = hinsert r v), (Heap gv4 v r l = hinsert r gv4), (Heap gv4 v r l = merge l l), (Heap gv4 v r l = merge l r)
(Heap gv4 v r l = merge r l), (Heap gv4 v r l = merge r r), (Heap gv4 v r l = mergea v l l), (Heap gv4 v r l = mergea v l r), (Heap gv4 v r l = mergea v r l), (Heap gv4 v r l = mergea v r r), (Heap gv4 v r l = mergea gv4 l l), (Heap gv4 v r l = mergea gv4 l r), (Heap gv4 v r l = mergea gv4 r l), (Heap gv4 v r l = mergea gv4 r r)
(Heap gv4 v r r = l), (Heap gv4 v r r = r), (Heap gv4 v r r = hinsert l v), (Heap gv4 v r r = hinsert l gv4), (Heap gv4 v r r = hinsert r v), (Heap gv4 v r r = hinsert r gv4), (Heap gv4 v r r = merge l l), (Heap gv4 v r r = merge l r), (Heap gv4 v r r = merge r l), (Heap gv4 v r r = merge r r)
(Heap gv4 v r r = mergea v l l), (Heap gv4 v r r = mergea v l r), (Heap gv4 v r r = mergea v r l), (Heap gv4 v r r = mergea v r r), (Heap gv4 v r r = mergea gv4 l l), (Heap gv4 v r r = mergea gv4 l r), (Heap gv4 v r r = mergea gv4 r l), (Heap gv4 v r r = mergea gv4 r r), (Heap gv4 gv4 l l = l), (Heap gv4 gv4 l l = r)
(Heap gv4 gv4 l l = hinsert l v), (Heap gv4 gv4 l l = hinsert l gv4), (Heap gv4 gv4 l l = hinsert r v), (Heap gv4 gv4 l l = hinsert r gv4), (Heap gv4 gv4 l l = merge l l), (Heap gv4 gv4 l l = merge l r), (Heap gv4 gv4 l l = merge r l), (Heap gv4 gv4 l l = merge r r), (Heap gv4 gv4 l l = mergea v l l), (Heap gv4 gv4 l l = mergea v l r)
(Heap gv4 gv4 l l = mergea v r l), (Heap gv4 gv4 l l = mergea v r r), (Heap gv4 gv4 l l = mergea gv4 l l), (Heap gv4 gv4 l l = mergea gv4 l r), (Heap gv4 gv4 l l = mergea gv4 r l), (Heap gv4 gv4 l l = mergea gv4 r r), (Heap gv4 gv4 l r = l), (Heap gv4 gv4 l r = r), (Heap gv4 gv4 l r = hinsert l v), (Heap gv4 gv4 l r = hinsert l gv4)
(Heap gv4 gv4 l r = hinsert r v), (Heap gv4 gv4 l r = hinsert r gv4), (Heap gv4 gv4 l r = merge l l), (Heap gv4 gv4 l r = merge l r), (Heap gv4 gv4 l r = merge r l), (Heap gv4 gv4 l r = merge r r), (Heap gv4 gv4 l r = mergea v l l), (Heap gv4 gv4 l r = mergea v l r), (Heap gv4 gv4 l r = mergea v r l), (Heap gv4 gv4 l r = mergea v r r)
(Heap gv4 gv4 l r = mergea gv4 l l), (Heap gv4 gv4 l r = mergea gv4 l r), (Heap gv4 gv4 l r = mergea gv4 r l), (Heap gv4 gv4 l r = mergea gv4 r r), (Heap gv4 gv4 r l = l), (Heap gv4 gv4 r l = r), (Heap gv4 gv4 r l = hinsert l v), (Heap gv4 gv4 r l = hinsert l gv4), (Heap gv4 gv4 r l = hinsert r v), (Heap gv4 gv4 r l = hinsert r gv4)
(Heap gv4 gv4 r l = merge l l), (Heap gv4 gv4 r l = merge l r), (Heap gv4 gv4 r l = merge r l), (Heap gv4 gv4 r l = merge r r), (Heap gv4 gv4 r l = mergea v l l), (Heap gv4 gv4 r l = mergea v l r), (Heap gv4 gv4 r l = mergea v r l), (Heap gv4 gv4 r l = mergea v r r), (Heap gv4 gv4 r l = mergea gv4 l l), (Heap gv4 gv4 r l = mergea gv4 l r)
(Heap gv4 gv4 r l = mergea gv4 r l), (Heap gv4 gv4 r l = mergea gv4 r r), (Heap gv4 gv4 r r = l), (Heap gv4 gv4 r r = r), (Heap gv4 gv4 r r = hinsert l v), (Heap gv4 gv4 r r = hinsert l gv4), (Heap gv4 gv4 r r = hinsert r v), (Heap gv4 gv4 r r = hinsert r gv4), (Heap gv4 gv4 r r = merge l l), (Heap gv4 gv4 r r = merge l r)
(Heap gv4 gv4 r r = merge r l), (Heap gv4 gv4 r r = merge r r), (Heap gv4 gv4 r r = mergea v l l), (Heap gv4 gv4 r r = mergea v l r), (Heap gv4 gv4 r r = mergea v r l), (Heap gv4 gv4 r r = mergea v r r), (Heap gv4 gv4 r r = mergea gv4 l l), (Heap gv4 gv4 r r = mergea gv4 l r), (Heap gv4 gv4 r r = mergea gv4 r l), (Heap gv4 gv4 r r = mergea gv4 r r)
(hinsert l v = l), (hinsert l v = r), (hinsert l gv4 = l), (hinsert l gv4 = r), (hinsert r v = l), (hinsert r v = r), (hinsert r gv4 = l), (hinsert r gv4 = r), (merge l l = l), (merge l l = r)
(merge l l = hinsert l v), (merge l l = hinsert l gv4), (merge l l = hinsert r v), (merge l l = hinsert r gv4), (merge l r = l), (merge l r = r), (merge l r = hinsert l v), (merge l r = hinsert l gv4), (merge l r = hinsert r v), (merge l r = hinsert r gv4)
(merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert l gv4), (merge r l = hinsert r v), (merge r l = hinsert r gv4), (merge r r = l), (merge r r = r), (merge r r = hinsert l v), (merge r r = hinsert l gv4)
(merge r r = hinsert r v), (merge r r = hinsert r gv4), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv4), (mergea v l l = hinsert r v), (mergea v l l = hinsert r gv4), (mergea v l l = merge l l), (mergea v l l = merge l r)
(mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv4), (mergea v l r = hinsert r v), (mergea v l r = hinsert r gv4), (mergea v l r = merge l l), (mergea v l r = merge l r)
(mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv4), (mergea v r l = hinsert r v), (mergea v r l = hinsert r gv4), (mergea v r l = merge l l), (mergea v r l = merge l r)
(mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv4), (mergea v r r = hinsert r v), (mergea v r r = hinsert r gv4), (mergea v r r = merge l l), (mergea v r r = merge l r)
(mergea v r r = merge r l), (mergea v r r = merge r r), (mergea gv4 l l = l), (mergea gv4 l l = r), (mergea gv4 l l = hinsert l v), (mergea gv4 l l = hinsert l gv4), (mergea gv4 l l = hinsert r v), (mergea gv4 l l = hinsert r gv4), (mergea gv4 l l = merge l l), (mergea gv4 l l = merge l r)
(mergea gv4 l l = merge r l), (mergea gv4 l l = merge r r), (mergea gv4 l r = l), (mergea gv4 l r = r), (mergea gv4 l r = hinsert l v), (mergea gv4 l r = hinsert l gv4), (mergea gv4 l r = hinsert r v), (mergea gv4 l r = hinsert r gv4), (mergea gv4 l r = merge l l), (mergea gv4 l r = merge l r)
(mergea gv4 l r = merge r l), (mergea gv4 l r = merge r r), (mergea gv4 r l = l), (mergea gv4 r l = r), (mergea gv4 r l = hinsert l v), (mergea gv4 r l = hinsert l gv4), (mergea gv4 r l = hinsert r v), (mergea gv4 r l = hinsert r gv4), (mergea gv4 r l = merge l l), (mergea gv4 r l = merge l r)
(mergea gv4 r l = merge r l), (mergea gv4 r l = merge r r), (mergea gv4 r r = l), (mergea gv4 r r = r), (mergea gv4 r r = hinsert l v), (mergea gv4 r r = hinsert l gv4), (mergea gv4 r r = hinsert r v), (mergea gv4 r r = hinsert r gv4), (mergea gv4 r r = merge l l), (mergea gv4 r r = merge l r)
(mergea gv4 r r = merge r l), (mergea gv4 r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = Heap v gv4 l l), (Hleaf = Heap v gv4 l r), (Hleaf = Heap v gv4 r l), (Hleaf = Heap v gv4 r r)
(Hleaf = Heap gv4 v l l), (Hleaf = Heap gv4 v l r), (Hleaf = Heap gv4 v r l), (Hleaf = Heap gv4 v r r), (Hleaf = Heap gv4 gv4 l l), (Hleaf = Heap gv4 gv4 l r), (Hleaf = Heap gv4 gv4 r l), (Hleaf = Heap gv4 gv4 r r), (Hleaf = hinsert l v), (Hleaf = hinsert l gv4)
(Hleaf = hinsert r v), (Hleaf = hinsert r gv4), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r)
(Hleaf = mergea gv4 l l), (Hleaf = mergea gv4 l r), (Hleaf = mergea gv4 r l), (Hleaf = mergea gv4 r r), (hsize l = v), (hsize l = gv4), (hsize r = v), (hsize r = gv4), (rank l = v), (rank l = gv4)
(rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = gv4), (rank r = hsize l), (rank r = hsize r), (right_height l = v), (right_height l = gv4), (right_height l = hsize l), (right_height l = hsize r)
(right_height l = rank l), (right_height l = rank r), (right_height r = v), (right_height r = gv4), (right_height r = hsize l), (right_height r = hsize r), (right_height r = rank l), (right_height r = rank r), (None = Some gv6), (None = Some v)
(None = Some gv4), (has_leftist_property l = gv6), (has_leftist_property r = gv6)

Label: 11 (11)
(false = gv6), (true = gv6), (v < v), (v <= v), (v = v), (gv6 = gv6), (l = l), (l = r), (l = gv1), (r = l)
(r = r), (r = gv1), (gv1 = l), (gv1 = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (false = has_leftist_property gv1), (true = has_leftist_property l), (true = has_leftist_property r)
(true = has_leftist_property gv1), (v < hsize l), (v < hsize r), (v < hsize gv1), (v < rank l), (v < rank r), (v < rank gv1), (v < right_height l), (v < right_height r), (v < right_height gv1)
(hsize l < v), (hsize l < hsize r), (hsize l < hsize gv1), (hsize l < rank l), (hsize l < rank r), (hsize l < rank gv1), (hsize l < right_height l), (hsize l < right_height r), (hsize l < right_height gv1), (hsize r < v)
(hsize r < hsize l), (hsize r < hsize gv1), (hsize r < rank l), (hsize r < rank r), (hsize r < rank gv1), (hsize r < right_height l), (hsize r < right_height r), (hsize r < right_height gv1), (hsize gv1 < v), (hsize gv1 < hsize l)
(hsize gv1 < hsize r), (hsize gv1 < rank l), (hsize gv1 < rank r), (hsize gv1 < rank gv1), (hsize gv1 < right_height l), (hsize gv1 < right_height r), (hsize gv1 < right_height gv1), (rank l < v), (rank l < hsize l), (rank l < hsize r)
(rank l < hsize gv1), (rank l < rank r), (rank l < rank gv1), (rank l < right_height l), (rank l < right_height r), (rank l < right_height gv1), (rank r < v), (rank r < hsize l), (rank r < hsize r), (rank r < hsize gv1)
(rank r < rank l), (rank r < rank gv1), (rank r < right_height l), (rank r < right_height r), (rank r < right_height gv1), (rank gv1 < v), (rank gv1 < hsize l), (rank gv1 < hsize r), (rank gv1 < hsize gv1), (rank gv1 < rank l)
(rank gv1 < rank r), (rank gv1 < right_height l), (rank gv1 < right_height r), (rank gv1 < right_height gv1), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < hsize gv1), (right_height l < rank l), (right_height l < rank r)
(right_height l < rank gv1), (right_height l < right_height r), (right_height l < right_height gv1), (right_height r < v), (right_height r < hsize l), (right_height r < hsize r), (right_height r < hsize gv1), (right_height r < rank l), (right_height r < rank r), (right_height r < rank gv1)
(right_height r < right_height l), (right_height r < right_height gv1), (right_height gv1 < v), (right_height gv1 < hsize l), (right_height gv1 < hsize r), (right_height gv1 < hsize gv1), (right_height gv1 < rank l), (right_height gv1 < rank r), (right_height gv1 < rank gv1), (right_height gv1 < right_height l)
(right_height gv1 < right_height r), (v <= hsize l), (v <= hsize r), (v <= hsize gv1), (v <= rank l), (v <= rank r), (v <= rank gv1), (v <= right_height l), (v <= right_height r), (v <= right_height gv1)
(hsize l <= v), (hsize l <= hsize r), (hsize l <= hsize gv1), (hsize l <= rank l), (hsize l <= rank r), (hsize l <= rank gv1), (hsize l <= right_height l), (hsize l <= right_height r), (hsize l <= right_height gv1), (hsize r <= v)
(hsize r <= hsize l), (hsize r <= hsize gv1), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= rank gv1), (hsize r <= right_height l), (hsize r <= right_height r), (hsize r <= right_height gv1), (hsize gv1 <= v), (hsize gv1 <= hsize l)
(hsize gv1 <= hsize r), (hsize gv1 <= rank l), (hsize gv1 <= rank r), (hsize gv1 <= rank gv1), (hsize gv1 <= right_height l), (hsize gv1 <= right_height r), (hsize gv1 <= right_height gv1), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r)
(rank l <= hsize gv1), (rank l <= rank r), (rank l <= rank gv1), (rank l <= right_height l), (rank l <= right_height r), (rank l <= right_height gv1), (rank r <= v), (rank r <= hsize l), (rank r <= hsize r), (rank r <= hsize gv1)
(rank r <= rank l), (rank r <= rank gv1), (rank r <= right_height l), (rank r <= right_height r), (rank r <= right_height gv1), (rank gv1 <= v), (rank gv1 <= hsize l), (rank gv1 <= hsize r), (rank gv1 <= hsize gv1), (rank gv1 <= rank l)
(rank gv1 <= rank r), (rank gv1 <= right_height l), (rank gv1 <= right_height r), (rank gv1 <= right_height gv1), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= hsize gv1), (right_height l <= rank l), (right_height l <= rank r)
(right_height l <= rank gv1), (right_height l <= right_height r), (right_height l <= right_height gv1), (right_height r <= v), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= hsize gv1), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= rank gv1)
(right_height r <= right_height l), (right_height r <= right_height gv1), (right_height gv1 <= v), (right_height gv1 <= hsize l), (right_height gv1 <= hsize r), (right_height gv1 <= hsize gv1), (right_height gv1 <= rank l), (right_height gv1 <= rank r), (right_height gv1 <= rank gv1), (right_height gv1 <= right_height l)
(right_height gv1 <= right_height r), (false <> gv6), (true <> gv6), (~ v < v), (~ v <= v), (v <> v), (gv6 <> gv6), (l <> l), (l <> r), (l <> gv1)
(r <> l), (r <> r), (r <> gv1), (gv1 <> l), (gv1 <> r), (gv1 <> gv1), (None = Some l), (None = Some r), (None = Some gv1), (Heap v v l l = l)
(Heap v v l l = r), (Heap v v l l = gv1), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert gv1 v), (Heap v v l l = merge l l), (Heap v v l l = merge l r), (Heap v v l l = merge l gv1), (Heap v v l l = merge r l), (Heap v v l l = merge r r)
(Heap v v l l = merge r gv1), (Heap v v l l = merge gv1 l), (Heap v v l l = merge gv1 r), (Heap v v l l = merge gv1 gv1), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v l gv1), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea v r gv1)
(Heap v v l l = mergea v gv1 l), (Heap v v l l = mergea v gv1 r), (Heap v v l l = mergea v gv1 gv1), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = gv1), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert gv1 v), (Heap v v l r = merge l l)
(Heap v v l r = merge l r), (Heap v v l r = merge l gv1), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = merge r gv1), (Heap v v l r = merge gv1 l), (Heap v v l r = merge gv1 r), (Heap v v l r = merge gv1 gv1), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r)
(Heap v v l r = mergea v l gv1), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r gv1), (Heap v v l r = mergea v gv1 l), (Heap v v l r = mergea v gv1 r), (Heap v v l r = mergea v gv1 gv1), (Heap v v l gv1 = l), (Heap v v l gv1 = r), (Heap v v l gv1 = gv1)
(Heap v v l gv1 = hinsert l v), (Heap v v l gv1 = hinsert r v), (Heap v v l gv1 = hinsert gv1 v), (Heap v v l gv1 = merge l l), (Heap v v l gv1 = merge l r), (Heap v v l gv1 = merge l gv1), (Heap v v l gv1 = merge r l), (Heap v v l gv1 = merge r r), (Heap v v l gv1 = merge r gv1), (Heap v v l gv1 = merge gv1 l)
(Heap v v l gv1 = merge gv1 r), (Heap v v l gv1 = merge gv1 gv1), (Heap v v l gv1 = mergea v l l), (Heap v v l gv1 = mergea v l r), (Heap v v l gv1 = mergea v l gv1), (Heap v v l gv1 = mergea v r l), (Heap v v l gv1 = mergea v r r), (Heap v v l gv1 = mergea v r gv1), (Heap v v l gv1 = mergea v gv1 l), (Heap v v l gv1 = mergea v gv1 r)
(Heap v v l gv1 = mergea v gv1 gv1), (Heap v v r l = l), (Heap v v r l = r), (Heap v v r l = gv1), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert gv1 v), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge l gv1)
(Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = merge r gv1), (Heap v v r l = merge gv1 l), (Heap v v r l = merge gv1 r), (Heap v v r l = merge gv1 gv1), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l gv1), (Heap v v r l = mergea v r l)
(Heap v v r l = mergea v r r), (Heap v v r l = mergea v r gv1), (Heap v v r l = mergea v gv1 l), (Heap v v r l = mergea v gv1 r), (Heap v v r l = mergea v gv1 gv1), (Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = gv1), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v)
(Heap v v r r = hinsert gv1 v), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge l gv1), (Heap v v r r = merge r l), (Heap v v r r = merge r r), (Heap v v r r = merge r gv1), (Heap v v r r = merge gv1 l), (Heap v v r r = merge gv1 r), (Heap v v r r = merge gv1 gv1)
(Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l gv1), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r gv1), (Heap v v r r = mergea v gv1 l), (Heap v v r r = mergea v gv1 r), (Heap v v r r = mergea v gv1 gv1), (Heap v v r gv1 = l)
(Heap v v r gv1 = r), (Heap v v r gv1 = gv1), (Heap v v r gv1 = hinsert l v), (Heap v v r gv1 = hinsert r v), (Heap v v r gv1 = hinsert gv1 v), (Heap v v r gv1 = merge l l), (Heap v v r gv1 = merge l r), (Heap v v r gv1 = merge l gv1), (Heap v v r gv1 = merge r l), (Heap v v r gv1 = merge r r)
(Heap v v r gv1 = merge r gv1), (Heap v v r gv1 = merge gv1 l), (Heap v v r gv1 = merge gv1 r), (Heap v v r gv1 = merge gv1 gv1), (Heap v v r gv1 = mergea v l l), (Heap v v r gv1 = mergea v l r), (Heap v v r gv1 = mergea v l gv1), (Heap v v r gv1 = mergea v r l), (Heap v v r gv1 = mergea v r r), (Heap v v r gv1 = mergea v r gv1)
(Heap v v r gv1 = mergea v gv1 l), (Heap v v r gv1 = mergea v gv1 r), (Heap v v r gv1 = mergea v gv1 gv1), (Heap v v gv1 l = l), (Heap v v gv1 l = r), (Heap v v gv1 l = gv1), (Heap v v gv1 l = hinsert l v), (Heap v v gv1 l = hinsert r v), (Heap v v gv1 l = hinsert gv1 v), (Heap v v gv1 l = merge l l)
(Heap v v gv1 l = merge l r), (Heap v v gv1 l = merge l gv1), (Heap v v gv1 l = merge r l), (Heap v v gv1 l = merge r r), (Heap v v gv1 l = merge r gv1), (Heap v v gv1 l = merge gv1 l), (Heap v v gv1 l = merge gv1 r), (Heap v v gv1 l = merge gv1 gv1), (Heap v v gv1 l = mergea v l l), (Heap v v gv1 l = mergea v l r)
(Heap v v gv1 l = mergea v l gv1), (Heap v v gv1 l = mergea v r l), (Heap v v gv1 l = mergea v r r), (Heap v v gv1 l = mergea v r gv1), (Heap v v gv1 l = mergea v gv1 l), (Heap v v gv1 l = mergea v gv1 r), (Heap v v gv1 l = mergea v gv1 gv1), (Heap v v gv1 r = l), (Heap v v gv1 r = r), (Heap v v gv1 r = gv1)
(Heap v v gv1 r = hinsert l v), (Heap v v gv1 r = hinsert r v), (Heap v v gv1 r = hinsert gv1 v), (Heap v v gv1 r = merge l l), (Heap v v gv1 r = merge l r), (Heap v v gv1 r = merge l gv1), (Heap v v gv1 r = merge r l), (Heap v v gv1 r = merge r r), (Heap v v gv1 r = merge r gv1), (Heap v v gv1 r = merge gv1 l)
(Heap v v gv1 r = merge gv1 r), (Heap v v gv1 r = merge gv1 gv1), (Heap v v gv1 r = mergea v l l), (Heap v v gv1 r = mergea v l r), (Heap v v gv1 r = mergea v l gv1), (Heap v v gv1 r = mergea v r l), (Heap v v gv1 r = mergea v r r), (Heap v v gv1 r = mergea v r gv1), (Heap v v gv1 r = mergea v gv1 l), (Heap v v gv1 r = mergea v gv1 r)
(Heap v v gv1 r = mergea v gv1 gv1), (Heap v v gv1 gv1 = l), (Heap v v gv1 gv1 = r), (Heap v v gv1 gv1 = gv1), (Heap v v gv1 gv1 = hinsert l v), (Heap v v gv1 gv1 = hinsert r v), (Heap v v gv1 gv1 = hinsert gv1 v), (Heap v v gv1 gv1 = merge l l), (Heap v v gv1 gv1 = merge l r), (Heap v v gv1 gv1 = merge l gv1)
(Heap v v gv1 gv1 = merge r l), (Heap v v gv1 gv1 = merge r r), (Heap v v gv1 gv1 = merge r gv1), (Heap v v gv1 gv1 = merge gv1 l), (Heap v v gv1 gv1 = merge gv1 r), (Heap v v gv1 gv1 = merge gv1 gv1), (Heap v v gv1 gv1 = mergea v l l), (Heap v v gv1 gv1 = mergea v l r), (Heap v v gv1 gv1 = mergea v l gv1), (Heap v v gv1 gv1 = mergea v r l)
(Heap v v gv1 gv1 = mergea v r r), (Heap v v gv1 gv1 = mergea v r gv1), (Heap v v gv1 gv1 = mergea v gv1 l), (Heap v v gv1 gv1 = mergea v gv1 r), (Heap v v gv1 gv1 = mergea v gv1 gv1), (hinsert l v = l), (hinsert l v = r), (hinsert l v = gv1), (hinsert r v = l), (hinsert r v = r)
(hinsert r v = gv1), (hinsert gv1 v = l), (hinsert gv1 v = r), (hinsert gv1 v = gv1), (merge l l = l), (merge l l = r), (merge l l = gv1), (merge l l = hinsert l v), (merge l l = hinsert r v), (merge l l = hinsert gv1 v)
(merge l r = l), (merge l r = r), (merge l r = gv1), (merge l r = hinsert l v), (merge l r = hinsert r v), (merge l r = hinsert gv1 v), (merge l gv1 = l), (merge l gv1 = r), (merge l gv1 = gv1), (merge l gv1 = hinsert l v)
(merge l gv1 = hinsert r v), (merge l gv1 = hinsert gv1 v), (merge r l = l), (merge r l = r), (merge r l = gv1), (merge r l = hinsert l v), (merge r l = hinsert r v), (merge r l = hinsert gv1 v), (merge r r = l), (merge r r = r)
(merge r r = gv1), (merge r r = hinsert l v), (merge r r = hinsert r v), (merge r r = hinsert gv1 v), (merge r gv1 = l), (merge r gv1 = r), (merge r gv1 = gv1), (merge r gv1 = hinsert l v), (merge r gv1 = hinsert r v), (merge r gv1 = hinsert gv1 v)
(merge gv1 l = l), (merge gv1 l = r), (merge gv1 l = gv1), (merge gv1 l = hinsert l v), (merge gv1 l = hinsert r v), (merge gv1 l = hinsert gv1 v), (merge gv1 r = l), (merge gv1 r = r), (merge gv1 r = gv1), (merge gv1 r = hinsert l v)
(merge gv1 r = hinsert r v), (merge gv1 r = hinsert gv1 v), (merge gv1 gv1 = l), (merge gv1 gv1 = r), (merge gv1 gv1 = gv1), (merge gv1 gv1 = hinsert l v), (merge gv1 gv1 = hinsert r v), (merge gv1 gv1 = hinsert gv1 v), (mergea v l l = l), (mergea v l l = r)
(mergea v l l = gv1), (mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = hinsert gv1 v), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge l gv1), (mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l l = merge r gv1)
(mergea v l l = merge gv1 l), (mergea v l l = merge gv1 r), (mergea v l l = merge gv1 gv1), (mergea v l r = l), (mergea v l r = r), (mergea v l r = gv1), (mergea v l r = hinsert l v), (mergea v l r = hinsert r v), (mergea v l r = hinsert gv1 v), (mergea v l r = merge l l)
(mergea v l r = merge l r), (mergea v l r = merge l gv1), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v l r = merge r gv1), (mergea v l r = merge gv1 l), (mergea v l r = merge gv1 r), (mergea v l r = merge gv1 gv1), (mergea v l gv1 = l), (mergea v l gv1 = r)
(mergea v l gv1 = gv1), (mergea v l gv1 = hinsert l v), (mergea v l gv1 = hinsert r v), (mergea v l gv1 = hinsert gv1 v), (mergea v l gv1 = merge l l), (mergea v l gv1 = merge l r), (mergea v l gv1 = merge l gv1), (mergea v l gv1 = merge r l), (mergea v l gv1 = merge r r), (mergea v l gv1 = merge r gv1)
(mergea v l gv1 = merge gv1 l), (mergea v l gv1 = merge gv1 r), (mergea v l gv1 = merge gv1 gv1), (mergea v r l = l), (mergea v r l = r), (mergea v r l = gv1), (mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = hinsert gv1 v), (mergea v r l = merge l l)
(mergea v r l = merge l r), (mergea v r l = merge l gv1), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r l = merge r gv1), (mergea v r l = merge gv1 l), (mergea v r l = merge gv1 r), (mergea v r l = merge gv1 gv1), (mergea v r r = l), (mergea v r r = r)
(mergea v r r = gv1), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v), (mergea v r r = hinsert gv1 v), (mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge l gv1), (mergea v r r = merge r l), (mergea v r r = merge r r), (mergea v r r = merge r gv1)
(mergea v r r = merge gv1 l), (mergea v r r = merge gv1 r), (mergea v r r = merge gv1 gv1), (mergea v r gv1 = l), (mergea v r gv1 = r), (mergea v r gv1 = gv1), (mergea v r gv1 = hinsert l v), (mergea v r gv1 = hinsert r v), (mergea v r gv1 = hinsert gv1 v), (mergea v r gv1 = merge l l)
(mergea v r gv1 = merge l r), (mergea v r gv1 = merge l gv1), (mergea v r gv1 = merge r l), (mergea v r gv1 = merge r r), (mergea v r gv1 = merge r gv1), (mergea v r gv1 = merge gv1 l), (mergea v r gv1 = merge gv1 r), (mergea v r gv1 = merge gv1 gv1), (mergea v gv1 l = l), (mergea v gv1 l = r)
(mergea v gv1 l = gv1), (mergea v gv1 l = hinsert l v), (mergea v gv1 l = hinsert r v), (mergea v gv1 l = hinsert gv1 v), (mergea v gv1 l = merge l l), (mergea v gv1 l = merge l r), (mergea v gv1 l = merge l gv1), (mergea v gv1 l = merge r l), (mergea v gv1 l = merge r r), (mergea v gv1 l = merge r gv1)
(mergea v gv1 l = merge gv1 l), (mergea v gv1 l = merge gv1 r), (mergea v gv1 l = merge gv1 gv1), (mergea v gv1 r = l), (mergea v gv1 r = r), (mergea v gv1 r = gv1), (mergea v gv1 r = hinsert l v), (mergea v gv1 r = hinsert r v), (mergea v gv1 r = hinsert gv1 v), (mergea v gv1 r = merge l l)
(mergea v gv1 r = merge l r), (mergea v gv1 r = merge l gv1), (mergea v gv1 r = merge r l), (mergea v gv1 r = merge r r), (mergea v gv1 r = merge r gv1), (mergea v gv1 r = merge gv1 l), (mergea v gv1 r = merge gv1 r), (mergea v gv1 r = merge gv1 gv1), (mergea v gv1 gv1 = l), (mergea v gv1 gv1 = r)
(mergea v gv1 gv1 = gv1), (mergea v gv1 gv1 = hinsert l v), (mergea v gv1 gv1 = hinsert r v), (mergea v gv1 gv1 = hinsert gv1 v), (mergea v gv1 gv1 = merge l l), (mergea v gv1 gv1 = merge l r), (mergea v gv1 gv1 = merge l gv1), (mergea v gv1 gv1 = merge r l), (mergea v gv1 gv1 = merge r r), (mergea v gv1 gv1 = merge r gv1)
(mergea v gv1 gv1 = merge gv1 l), (mergea v gv1 gv1 = merge gv1 r), (mergea v gv1 gv1 = merge gv1 gv1), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l gv1), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r gv1), (Hleaf = Heap v v gv1 l)
(Hleaf = Heap v v gv1 r), (Hleaf = Heap v v gv1 gv1), (Hleaf = hinsert l v), (Hleaf = hinsert r v), (Hleaf = hinsert gv1 v), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge l gv1), (Hleaf = merge r l), (Hleaf = merge r r)
(Hleaf = merge r gv1), (Hleaf = merge gv1 l), (Hleaf = merge gv1 r), (Hleaf = merge gv1 gv1), (Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v l gv1), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (Hleaf = mergea v r gv1)
(Hleaf = mergea v gv1 l), (Hleaf = mergea v gv1 r), (Hleaf = mergea v gv1 gv1), (hsize l = v), (hsize r = v), (hsize gv1 = v), (rank l = v), (rank l = hsize l), (rank l = hsize r), (rank l = hsize gv1)
(rank r = v), (rank r = hsize l), (rank r = hsize r), (rank r = hsize gv1), (rank gv1 = v), (rank gv1 = hsize l), (rank gv1 = hsize r), (rank gv1 = hsize gv1), (right_height l = v), (right_height l = hsize l)
(right_height l = hsize r), (right_height l = hsize gv1), (right_height l = rank l), (right_height l = rank r), (right_height l = rank gv1), (right_height r = v), (right_height r = hsize l), (right_height r = hsize r), (right_height r = hsize gv1), (right_height r = rank l)
(right_height r = rank r), (right_height r = rank gv1), (right_height gv1 = v), (right_height gv1 = hsize l), (right_height gv1 = hsize r), (right_height gv1 = hsize gv1), (right_height gv1 = rank l), (right_height gv1 = rank r), (right_height gv1 = rank gv1), (None = Some gv6)
(None = Some v), (has_leftist_property l = gv6), (has_leftist_property r = gv6), (has_leftist_property gv1 = gv6)

Label: 12 (12)
(v < v), (v < gv4), (gv4 < v), (gv4 < gv4), (v <= v), (v <= gv4), (gv4 <= v), (gv4 <= gv4), (v = v), (v = gv4)
(gv4 = v), (gv4 = gv4), (l = l), (l = r), (r = l), (r = r), (false = has_leftist_property l), (false = has_leftist_property r), (true = has_leftist_property l), (true = has_leftist_property r)
(v < hsize l), (v < hsize r), (v < rank l), (v < rank r), (v < right_height l), (v < right_height r), (gv4 < hsize l), (gv4 < hsize r), (gv4 < rank l), (gv4 < rank r)
(gv4 < right_height l), (gv4 < right_height r), (hsize l < v), (hsize l < gv4), (hsize l < hsize r), (hsize l < rank l), (hsize l < rank r), (hsize l < right_height l), (hsize l < right_height r), (hsize r < v)
(hsize r < gv4), (hsize r < hsize l), (hsize r < rank l), (hsize r < rank r), (hsize r < right_height l), (hsize r < right_height r), (rank l < v), (rank l < gv4), (rank l < hsize l), (rank l < hsize r)
(rank l < rank r), (rank l < right_height l), (rank l < right_height r), (rank r < v), (rank r < gv4), (rank r < hsize l), (rank r < hsize r), (rank r < rank l), (rank r < right_height l), (rank r < right_height r)
(right_height l < v), (right_height l < gv4), (right_height l < hsize l), (right_height l < hsize r), (right_height l < rank l), (right_height l < rank r), (right_height l < right_height r), (right_height r < v), (right_height r < gv4), (right_height r < hsize l)
(right_height r < hsize r), (right_height r < rank l), (right_height r < rank r), (right_height r < right_height l), (v <= hsize l), (v <= hsize r), (v <= rank l), (v <= rank r), (v <= right_height l), (v <= right_height r)
(gv4 <= hsize l), (gv4 <= hsize r), (gv4 <= rank l), (gv4 <= rank r), (gv4 <= right_height l), (gv4 <= right_height r), (hsize l <= v), (hsize l <= gv4), (hsize l <= hsize r), (hsize l <= rank l)
(hsize l <= rank r), (hsize l <= right_height l), (hsize l <= right_height r), (hsize r <= v), (hsize r <= gv4), (hsize r <= hsize l), (hsize r <= rank l), (hsize r <= rank r), (hsize r <= right_height l), (hsize r <= right_height r)
(rank l <= v), (rank l <= gv4), (rank l <= hsize l), (rank l <= hsize r), (rank l <= rank r), (rank l <= right_height l), (rank l <= right_height r), (rank r <= v), (rank r <= gv4), (rank r <= hsize l)
(rank r <= hsize r), (rank r <= rank l), (rank r <= right_height l), (rank r <= right_height r), (right_height l <= v), (right_height l <= gv4), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= rank l), (right_height l <= rank r)
(right_height l <= right_height r), (right_height r <= v), (right_height r <= gv4), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= right_height l), (~ v < v), (~ v < gv4)
(~ gv4 < v), (~ gv4 < gv4), (~ v <= v), (~ v <= gv4), (~ gv4 <= v), (~ gv4 <= gv4), (v <> v), (v <> gv4), (gv4 <> v), (gv4 <> gv4)
(l <> l), (l <> r), (r <> l), (r <> r), (None = Some l), (None = Some r), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert l gv4)
(Heap v v l l = hinsert r v), (Heap v v l l = hinsert r gv4), (Heap v v l l = merge l l), (Heap v v l l = merge l r), (Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r)
(Heap v v l l = mergea gv4 l l), (Heap v v l l = mergea gv4 l r), (Heap v v l l = mergea gv4 r l), (Heap v v l l = mergea gv4 r r), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = hinsert l v), (Heap v v l r = hinsert l gv4), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert r gv4)
(Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea gv4 l l), (Heap v v l r = mergea gv4 l r)
(Heap v v l r = mergea gv4 r l), (Heap v v l r = mergea gv4 r r), (Heap v v r l = l), (Heap v v r l = r), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert l gv4), (Heap v v r l = hinsert r v), (Heap v v r l = hinsert r gv4), (Heap v v r l = merge l l), (Heap v v r l = merge l r)
(Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea gv4 l l), (Heap v v r l = mergea gv4 l r), (Heap v v r l = mergea gv4 r l), (Heap v v r l = mergea gv4 r r)
(Heap v v r r = l), (Heap v v r r = r), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert l gv4), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert r gv4), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge r l), (Heap v v r r = merge r r)
(Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea gv4 l l), (Heap v v r r = mergea gv4 l r), (Heap v v r r = mergea gv4 r l), (Heap v v r r = mergea gv4 r r), (Heap v gv4 l l = l), (Heap v gv4 l l = r)
(Heap v gv4 l l = hinsert l v), (Heap v gv4 l l = hinsert l gv4), (Heap v gv4 l l = hinsert r v), (Heap v gv4 l l = hinsert r gv4), (Heap v gv4 l l = merge l l), (Heap v gv4 l l = merge l r), (Heap v gv4 l l = merge r l), (Heap v gv4 l l = merge r r), (Heap v gv4 l l = mergea v l l), (Heap v gv4 l l = mergea v l r)
(Heap v gv4 l l = mergea v r l), (Heap v gv4 l l = mergea v r r), (Heap v gv4 l l = mergea gv4 l l), (Heap v gv4 l l = mergea gv4 l r), (Heap v gv4 l l = mergea gv4 r l), (Heap v gv4 l l = mergea gv4 r r), (Heap v gv4 l r = l), (Heap v gv4 l r = r), (Heap v gv4 l r = hinsert l v), (Heap v gv4 l r = hinsert l gv4)
(Heap v gv4 l r = hinsert r v), (Heap v gv4 l r = hinsert r gv4), (Heap v gv4 l r = merge l l), (Heap v gv4 l r = merge l r), (Heap v gv4 l r = merge r l), (Heap v gv4 l r = merge r r), (Heap v gv4 l r = mergea v l l), (Heap v gv4 l r = mergea v l r), (Heap v gv4 l r = mergea v r l), (Heap v gv4 l r = mergea v r r)
(Heap v gv4 l r = mergea gv4 l l), (Heap v gv4 l r = mergea gv4 l r), (Heap v gv4 l r = mergea gv4 r l), (Heap v gv4 l r = mergea gv4 r r), (Heap v gv4 r l = l), (Heap v gv4 r l = r), (Heap v gv4 r l = hinsert l v), (Heap v gv4 r l = hinsert l gv4), (Heap v gv4 r l = hinsert r v), (Heap v gv4 r l = hinsert r gv4)
(Heap v gv4 r l = merge l l), (Heap v gv4 r l = merge l r), (Heap v gv4 r l = merge r l), (Heap v gv4 r l = merge r r), (Heap v gv4 r l = mergea v l l), (Heap v gv4 r l = mergea v l r), (Heap v gv4 r l = mergea v r l), (Heap v gv4 r l = mergea v r r), (Heap v gv4 r l = mergea gv4 l l), (Heap v gv4 r l = mergea gv4 l r)
(Heap v gv4 r l = mergea gv4 r l), (Heap v gv4 r l = mergea gv4 r r), (Heap v gv4 r r = l), (Heap v gv4 r r = r), (Heap v gv4 r r = hinsert l v), (Heap v gv4 r r = hinsert l gv4), (Heap v gv4 r r = hinsert r v), (Heap v gv4 r r = hinsert r gv4), (Heap v gv4 r r = merge l l), (Heap v gv4 r r = merge l r)
(Heap v gv4 r r = merge r l), (Heap v gv4 r r = merge r r), (Heap v gv4 r r = mergea v l l), (Heap v gv4 r r = mergea v l r), (Heap v gv4 r r = mergea v r l), (Heap v gv4 r r = mergea v r r), (Heap v gv4 r r = mergea gv4 l l), (Heap v gv4 r r = mergea gv4 l r), (Heap v gv4 r r = mergea gv4 r l), (Heap v gv4 r r = mergea gv4 r r)
(Heap gv4 v l l = l), (Heap gv4 v l l = r), (Heap gv4 v l l = hinsert l v), (Heap gv4 v l l = hinsert l gv4), (Heap gv4 v l l = hinsert r v), (Heap gv4 v l l = hinsert r gv4), (Heap gv4 v l l = merge l l), (Heap gv4 v l l = merge l r), (Heap gv4 v l l = merge r l), (Heap gv4 v l l = merge r r)
(Heap gv4 v l l = mergea v l l), (Heap gv4 v l l = mergea v l r), (Heap gv4 v l l = mergea v r l), (Heap gv4 v l l = mergea v r r), (Heap gv4 v l l = mergea gv4 l l), (Heap gv4 v l l = mergea gv4 l r), (Heap gv4 v l l = mergea gv4 r l), (Heap gv4 v l l = mergea gv4 r r), (Heap gv4 v l r = l), (Heap gv4 v l r = r)
(Heap gv4 v l r = hinsert l v), (Heap gv4 v l r = hinsert l gv4), (Heap gv4 v l r = hinsert r v), (Heap gv4 v l r = hinsert r gv4), (Heap gv4 v l r = merge l l), (Heap gv4 v l r = merge l r), (Heap gv4 v l r = merge r l), (Heap gv4 v l r = merge r r), (Heap gv4 v l r = mergea v l l), (Heap gv4 v l r = mergea v l r)
(Heap gv4 v l r = mergea v r l), (Heap gv4 v l r = mergea v r r), (Heap gv4 v l r = mergea gv4 l l), (Heap gv4 v l r = mergea gv4 l r), (Heap gv4 v l r = mergea gv4 r l), (Heap gv4 v l r = mergea gv4 r r), (Heap gv4 v r l = l), (Heap gv4 v r l = r), (Heap gv4 v r l = hinsert l v), (Heap gv4 v r l = hinsert l gv4)
(Heap gv4 v r l = hinsert r v), (Heap gv4 v r l = hinsert r gv4), (Heap gv4 v r l = merge l l), (Heap gv4 v r l = merge l r), (Heap gv4 v r l = merge r l), (Heap gv4 v r l = merge r r), (Heap gv4 v r l = mergea v l l), (Heap gv4 v r l = mergea v l r), (Heap gv4 v r l = mergea v r l), (Heap gv4 v r l = mergea v r r)
(Heap gv4 v r l = mergea gv4 l l), (Heap gv4 v r l = mergea gv4 l r), (Heap gv4 v r l = mergea gv4 r l), (Heap gv4 v r l = mergea gv4 r r), (Heap gv4 v r r = l), (Heap gv4 v r r = r), (Heap gv4 v r r = hinsert l v), (Heap gv4 v r r = hinsert l gv4), (Heap gv4 v r r = hinsert r v), (Heap gv4 v r r = hinsert r gv4)
(Heap gv4 v r r = merge l l), (Heap gv4 v r r = merge l r), (Heap gv4 v r r = merge r l), (Heap gv4 v r r = merge r r), (Heap gv4 v r r = mergea v l l), (Heap gv4 v r r = mergea v l r), (Heap gv4 v r r = mergea v r l), (Heap gv4 v r r = mergea v r r), (Heap gv4 v r r = mergea gv4 l l), (Heap gv4 v r r = mergea gv4 l r)
(Heap gv4 v r r = mergea gv4 r l), (Heap gv4 v r r = mergea gv4 r r), (Heap gv4 gv4 l l = l), (Heap gv4 gv4 l l = r), (Heap gv4 gv4 l l = hinsert l v), (Heap gv4 gv4 l l = hinsert l gv4), (Heap gv4 gv4 l l = hinsert r v), (Heap gv4 gv4 l l = hinsert r gv4), (Heap gv4 gv4 l l = merge l l), (Heap gv4 gv4 l l = merge l r)
(Heap gv4 gv4 l l = merge r l), (Heap gv4 gv4 l l = merge r r), (Heap gv4 gv4 l l = mergea v l l), (Heap gv4 gv4 l l = mergea v l r), (Heap gv4 gv4 l l = mergea v r l), (Heap gv4 gv4 l l = mergea v r r), (Heap gv4 gv4 l l = mergea gv4 l l), (Heap gv4 gv4 l l = mergea gv4 l r), (Heap gv4 gv4 l l = mergea gv4 r l), (Heap gv4 gv4 l l = mergea gv4 r r)
(Heap gv4 gv4 l r = l), (Heap gv4 gv4 l r = r), (Heap gv4 gv4 l r = hinsert l v), (Heap gv4 gv4 l r = hinsert l gv4), (Heap gv4 gv4 l r = hinsert r v), (Heap gv4 gv4 l r = hinsert r gv4), (Heap gv4 gv4 l r = merge l l), (Heap gv4 gv4 l r = merge l r), (Heap gv4 gv4 l r = merge r l), (Heap gv4 gv4 l r = merge r r)
(Heap gv4 gv4 l r = mergea v l l), (Heap gv4 gv4 l r = mergea v l r), (Heap gv4 gv4 l r = mergea v r l), (Heap gv4 gv4 l r = mergea v r r), (Heap gv4 gv4 l r = mergea gv4 l l), (Heap gv4 gv4 l r = mergea gv4 l r), (Heap gv4 gv4 l r = mergea gv4 r l), (Heap gv4 gv4 l r = mergea gv4 r r), (Heap gv4 gv4 r l = l), (Heap gv4 gv4 r l = r)
(Heap gv4 gv4 r l = hinsert l v), (Heap gv4 gv4 r l = hinsert l gv4), (Heap gv4 gv4 r l = hinsert r v), (Heap gv4 gv4 r l = hinsert r gv4), (Heap gv4 gv4 r l = merge l l), (Heap gv4 gv4 r l = merge l r), (Heap gv4 gv4 r l = merge r l), (Heap gv4 gv4 r l = merge r r), (Heap gv4 gv4 r l = mergea v l l), (Heap gv4 gv4 r l = mergea v l r)
(Heap gv4 gv4 r l = mergea v r l), (Heap gv4 gv4 r l = mergea v r r), (Heap gv4 gv4 r l = mergea gv4 l l), (Heap gv4 gv4 r l = mergea gv4 l r), (Heap gv4 gv4 r l = mergea gv4 r l), (Heap gv4 gv4 r l = mergea gv4 r r), (Heap gv4 gv4 r r = l), (Heap gv4 gv4 r r = r), (Heap gv4 gv4 r r = hinsert l v), (Heap gv4 gv4 r r = hinsert l gv4)
(Heap gv4 gv4 r r = hinsert r v), (Heap gv4 gv4 r r = hinsert r gv4), (Heap gv4 gv4 r r = merge l l), (Heap gv4 gv4 r r = merge l r), (Heap gv4 gv4 r r = merge r l), (Heap gv4 gv4 r r = merge r r), (Heap gv4 gv4 r r = mergea v l l), (Heap gv4 gv4 r r = mergea v l r), (Heap gv4 gv4 r r = mergea v r l), (Heap gv4 gv4 r r = mergea v r r)
(Heap gv4 gv4 r r = mergea gv4 l l), (Heap gv4 gv4 r r = mergea gv4 l r), (Heap gv4 gv4 r r = mergea gv4 r l), (Heap gv4 gv4 r r = mergea gv4 r r), (hinsert l v = l), (hinsert l v = r), (hinsert l gv4 = l), (hinsert l gv4 = r), (hinsert r v = l), (hinsert r v = r)
(hinsert r gv4 = l), (hinsert r gv4 = r), (merge l l = l), (merge l l = r), (merge l l = hinsert l v), (merge l l = hinsert l gv4), (merge l l = hinsert r v), (merge l l = hinsert r gv4), (merge l r = l), (merge l r = r)
(merge l r = hinsert l v), (merge l r = hinsert l gv4), (merge l r = hinsert r v), (merge l r = hinsert r gv4), (merge r l = l), (merge r l = r), (merge r l = hinsert l v), (merge r l = hinsert l gv4), (merge r l = hinsert r v), (merge r l = hinsert r gv4)
(merge r r = l), (merge r r = r), (merge r r = hinsert l v), (merge r r = hinsert l gv4), (merge r r = hinsert r v), (merge r r = hinsert r gv4), (mergea v l l = l), (mergea v l l = r), (mergea v l l = hinsert l v), (mergea v l l = hinsert l gv4)
(mergea v l l = hinsert r v), (mergea v l l = hinsert r gv4), (mergea v l l = merge l l), (mergea v l l = merge l r), (mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l r = l), (mergea v l r = r), (mergea v l r = hinsert l v), (mergea v l r = hinsert l gv4)
(mergea v l r = hinsert r v), (mergea v l r = hinsert r gv4), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v r l = l), (mergea v r l = r), (mergea v r l = hinsert l v), (mergea v r l = hinsert l gv4)
(mergea v r l = hinsert r v), (mergea v r l = hinsert r gv4), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r r = l), (mergea v r r = r), (mergea v r r = hinsert l v), (mergea v r r = hinsert l gv4)
(mergea v r r = hinsert r v), (mergea v r r = hinsert r gv4), (mergea v r r = merge l l), (mergea v r r = merge l r), (mergea v r r = merge r l), (mergea v r r = merge r r), (mergea gv4 l l = l), (mergea gv4 l l = r), (mergea gv4 l l = hinsert l v), (mergea gv4 l l = hinsert l gv4)
(mergea gv4 l l = hinsert r v), (mergea gv4 l l = hinsert r gv4), (mergea gv4 l l = merge l l), (mergea gv4 l l = merge l r), (mergea gv4 l l = merge r l), (mergea gv4 l l = merge r r), (mergea gv4 l r = l), (mergea gv4 l r = r), (mergea gv4 l r = hinsert l v), (mergea gv4 l r = hinsert l gv4)
(mergea gv4 l r = hinsert r v), (mergea gv4 l r = hinsert r gv4), (mergea gv4 l r = merge l l), (mergea gv4 l r = merge l r), (mergea gv4 l r = merge r l), (mergea gv4 l r = merge r r), (mergea gv4 r l = l), (mergea gv4 r l = r), (mergea gv4 r l = hinsert l v), (mergea gv4 r l = hinsert l gv4)
(mergea gv4 r l = hinsert r v), (mergea gv4 r l = hinsert r gv4), (mergea gv4 r l = merge l l), (mergea gv4 r l = merge l r), (mergea gv4 r l = merge r l), (mergea gv4 r l = merge r r), (mergea gv4 r r = l), (mergea gv4 r r = r), (mergea gv4 r r = hinsert l v), (mergea gv4 r r = hinsert l gv4)
(mergea gv4 r r = hinsert r v), (mergea gv4 r r = hinsert r gv4), (mergea gv4 r r = merge l l), (mergea gv4 r r = merge l r), (mergea gv4 r r = merge r l), (mergea gv4 r r = merge r r), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v r l), (Hleaf = Heap v v r r)
(Hleaf = Heap v gv4 l l), (Hleaf = Heap v gv4 l r), (Hleaf = Heap v gv4 r l), (Hleaf = Heap v gv4 r r), (Hleaf = Heap gv4 v l l), (Hleaf = Heap gv4 v l r), (Hleaf = Heap gv4 v r l), (Hleaf = Heap gv4 v r r), (Hleaf = Heap gv4 gv4 l l), (Hleaf = Heap gv4 gv4 l r)
(Hleaf = Heap gv4 gv4 r l), (Hleaf = Heap gv4 gv4 r r), (Hleaf = hinsert l v), (Hleaf = hinsert l gv4), (Hleaf = hinsert r v), (Hleaf = hinsert r gv4), (Hleaf = merge l l), (Hleaf = merge l r), (Hleaf = merge r l), (Hleaf = merge r r)
(Hleaf = mergea v l l), (Hleaf = mergea v l r), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (Hleaf = mergea gv4 l l), (Hleaf = mergea gv4 l r), (Hleaf = mergea gv4 r l), (Hleaf = mergea gv4 r r), (hsize l = v), (hsize l = gv4)
(hsize r = v), (hsize r = gv4), (rank l = v), (rank l = gv4), (rank l = hsize l), (rank l = hsize r), (rank r = v), (rank r = gv4), (rank r = hsize l), (rank r = hsize r)
(right_height l = v), (right_height l = gv4), (right_height l = hsize l), (right_height l = hsize r), (right_height l = rank l), (right_height l = rank r), (right_height r = v), (right_height r = gv4), (right_height r = hsize l), (right_height r = hsize r)
(right_height r = rank l), (right_height r = rank r), (None = Some v), (None = Some gv4)

Label: 13 (13)
(v < v), (v <= v), (v = v), (l = l), (l = r), (l = gv1), (r = l), (r = r), (r = gv1), (gv1 = l)
(gv1 = r), (gv1 = gv1), (false = has_leftist_property l), (false = has_leftist_property r), (false = has_leftist_property gv1), (true = has_leftist_property l), (true = has_leftist_property r), (true = has_leftist_property gv1), (v < hsize l), (v < hsize r)
(v < hsize gv1), (v < rank l), (v < rank r), (v < rank gv1), (v < right_height l), (v < right_height r), (v < right_height gv1), (hsize l < v), (hsize l < hsize r), (hsize l < hsize gv1)
(hsize l < rank l), (hsize l < rank r), (hsize l < rank gv1), (hsize l < right_height l), (hsize l < right_height r), (hsize l < right_height gv1), (hsize r < v), (hsize r < hsize l), (hsize r < hsize gv1), (hsize r < rank l)
(hsize r < rank r), (hsize r < rank gv1), (hsize r < right_height l), (hsize r < right_height r), (hsize r < right_height gv1), (hsize gv1 < v), (hsize gv1 < hsize l), (hsize gv1 < hsize r), (hsize gv1 < rank l), (hsize gv1 < rank r)
(hsize gv1 < rank gv1), (hsize gv1 < right_height l), (hsize gv1 < right_height r), (hsize gv1 < right_height gv1), (rank l < v), (rank l < hsize l), (rank l < hsize r), (rank l < hsize gv1), (rank l < rank r), (rank l < rank gv1)
(rank l < right_height l), (rank l < right_height r), (rank l < right_height gv1), (rank r < v), (rank r < hsize l), (rank r < hsize r), (rank r < hsize gv1), (rank r < rank l), (rank r < rank gv1), (rank r < right_height l)
(rank r < right_height r), (rank r < right_height gv1), (rank gv1 < v), (rank gv1 < hsize l), (rank gv1 < hsize r), (rank gv1 < hsize gv1), (rank gv1 < rank l), (rank gv1 < rank r), (rank gv1 < right_height l), (rank gv1 < right_height r)
(rank gv1 < right_height gv1), (right_height l < v), (right_height l < hsize l), (right_height l < hsize r), (right_height l < hsize gv1), (right_height l < rank l), (right_height l < rank r), (right_height l < rank gv1), (right_height l < right_height r), (right_height l < right_height gv1)
(right_height r < v), (right_height r < hsize l), (right_height r < hsize r), (right_height r < hsize gv1), (right_height r < rank l), (right_height r < rank r), (right_height r < rank gv1), (right_height r < right_height l), (right_height r < right_height gv1), (right_height gv1 < v)
(right_height gv1 < hsize l), (right_height gv1 < hsize r), (right_height gv1 < hsize gv1), (right_height gv1 < rank l), (right_height gv1 < rank r), (right_height gv1 < rank gv1), (right_height gv1 < right_height l), (right_height gv1 < right_height r), (v <= hsize l), (v <= hsize r)
(v <= hsize gv1), (v <= rank l), (v <= rank r), (v <= rank gv1), (v <= right_height l), (v <= right_height r), (v <= right_height gv1), (hsize l <= v), (hsize l <= hsize r), (hsize l <= hsize gv1)
(hsize l <= rank l), (hsize l <= rank r), (hsize l <= rank gv1), (hsize l <= right_height l), (hsize l <= right_height r), (hsize l <= right_height gv1), (hsize r <= v), (hsize r <= hsize l), (hsize r <= hsize gv1), (hsize r <= rank l)
(hsize r <= rank r), (hsize r <= rank gv1), (hsize r <= right_height l), (hsize r <= right_height r), (hsize r <= right_height gv1), (hsize gv1 <= v), (hsize gv1 <= hsize l), (hsize gv1 <= hsize r), (hsize gv1 <= rank l), (hsize gv1 <= rank r)
(hsize gv1 <= rank gv1), (hsize gv1 <= right_height l), (hsize gv1 <= right_height r), (hsize gv1 <= right_height gv1), (rank l <= v), (rank l <= hsize l), (rank l <= hsize r), (rank l <= hsize gv1), (rank l <= rank r), (rank l <= rank gv1)
(rank l <= right_height l), (rank l <= right_height r), (rank l <= right_height gv1), (rank r <= v), (rank r <= hsize l), (rank r <= hsize r), (rank r <= hsize gv1), (rank r <= rank l), (rank r <= rank gv1), (rank r <= right_height l)
(rank r <= right_height r), (rank r <= right_height gv1), (rank gv1 <= v), (rank gv1 <= hsize l), (rank gv1 <= hsize r), (rank gv1 <= hsize gv1), (rank gv1 <= rank l), (rank gv1 <= rank r), (rank gv1 <= right_height l), (rank gv1 <= right_height r)
(rank gv1 <= right_height gv1), (right_height l <= v), (right_height l <= hsize l), (right_height l <= hsize r), (right_height l <= hsize gv1), (right_height l <= rank l), (right_height l <= rank r), (right_height l <= rank gv1), (right_height l <= right_height r), (right_height l <= right_height gv1)
(right_height r <= v), (right_height r <= hsize l), (right_height r <= hsize r), (right_height r <= hsize gv1), (right_height r <= rank l), (right_height r <= rank r), (right_height r <= rank gv1), (right_height r <= right_height l), (right_height r <= right_height gv1), (right_height gv1 <= v)
(right_height gv1 <= hsize l), (right_height gv1 <= hsize r), (right_height gv1 <= hsize gv1), (right_height gv1 <= rank l), (right_height gv1 <= rank r), (right_height gv1 <= rank gv1), (right_height gv1 <= right_height l), (right_height gv1 <= right_height r), (~ v < v), (~ v <= v)
(v <> v), (l <> l), (l <> r), (l <> gv1), (r <> l), (r <> r), (r <> gv1), (gv1 <> l), (gv1 <> r), (gv1 <> gv1)
(None = Some l), (None = Some r), (None = Some gv1), (Heap v v l l = l), (Heap v v l l = r), (Heap v v l l = gv1), (Heap v v l l = hinsert l v), (Heap v v l l = hinsert r v), (Heap v v l l = hinsert gv1 v), (Heap v v l l = merge l l)
(Heap v v l l = merge l r), (Heap v v l l = merge l gv1), (Heap v v l l = merge r l), (Heap v v l l = merge r r), (Heap v v l l = merge r gv1), (Heap v v l l = merge gv1 l), (Heap v v l l = merge gv1 r), (Heap v v l l = merge gv1 gv1), (Heap v v l l = mergea v l l), (Heap v v l l = mergea v l r)
(Heap v v l l = mergea v l gv1), (Heap v v l l = mergea v r l), (Heap v v l l = mergea v r r), (Heap v v l l = mergea v r gv1), (Heap v v l l = mergea v gv1 l), (Heap v v l l = mergea v gv1 r), (Heap v v l l = mergea v gv1 gv1), (Heap v v l r = l), (Heap v v l r = r), (Heap v v l r = gv1)
(Heap v v l r = hinsert l v), (Heap v v l r = hinsert r v), (Heap v v l r = hinsert gv1 v), (Heap v v l r = merge l l), (Heap v v l r = merge l r), (Heap v v l r = merge l gv1), (Heap v v l r = merge r l), (Heap v v l r = merge r r), (Heap v v l r = merge r gv1), (Heap v v l r = merge gv1 l)
(Heap v v l r = merge gv1 r), (Heap v v l r = merge gv1 gv1), (Heap v v l r = mergea v l l), (Heap v v l r = mergea v l r), (Heap v v l r = mergea v l gv1), (Heap v v l r = mergea v r l), (Heap v v l r = mergea v r r), (Heap v v l r = mergea v r gv1), (Heap v v l r = mergea v gv1 l), (Heap v v l r = mergea v gv1 r)
(Heap v v l r = mergea v gv1 gv1), (Heap v v l gv1 = l), (Heap v v l gv1 = r), (Heap v v l gv1 = gv1), (Heap v v l gv1 = hinsert l v), (Heap v v l gv1 = hinsert r v), (Heap v v l gv1 = hinsert gv1 v), (Heap v v l gv1 = merge l l), (Heap v v l gv1 = merge l r), (Heap v v l gv1 = merge l gv1)
(Heap v v l gv1 = merge r l), (Heap v v l gv1 = merge r r), (Heap v v l gv1 = merge r gv1), (Heap v v l gv1 = merge gv1 l), (Heap v v l gv1 = merge gv1 r), (Heap v v l gv1 = merge gv1 gv1), (Heap v v l gv1 = mergea v l l), (Heap v v l gv1 = mergea v l r), (Heap v v l gv1 = mergea v l gv1), (Heap v v l gv1 = mergea v r l)
(Heap v v l gv1 = mergea v r r), (Heap v v l gv1 = mergea v r gv1), (Heap v v l gv1 = mergea v gv1 l), (Heap v v l gv1 = mergea v gv1 r), (Heap v v l gv1 = mergea v gv1 gv1), (Heap v v r l = l), (Heap v v r l = r), (Heap v v r l = gv1), (Heap v v r l = hinsert l v), (Heap v v r l = hinsert r v)
(Heap v v r l = hinsert gv1 v), (Heap v v r l = merge l l), (Heap v v r l = merge l r), (Heap v v r l = merge l gv1), (Heap v v r l = merge r l), (Heap v v r l = merge r r), (Heap v v r l = merge r gv1), (Heap v v r l = merge gv1 l), (Heap v v r l = merge gv1 r), (Heap v v r l = merge gv1 gv1)
(Heap v v r l = mergea v l l), (Heap v v r l = mergea v l r), (Heap v v r l = mergea v l gv1), (Heap v v r l = mergea v r l), (Heap v v r l = mergea v r r), (Heap v v r l = mergea v r gv1), (Heap v v r l = mergea v gv1 l), (Heap v v r l = mergea v gv1 r), (Heap v v r l = mergea v gv1 gv1), (Heap v v r r = l)
(Heap v v r r = r), (Heap v v r r = gv1), (Heap v v r r = hinsert l v), (Heap v v r r = hinsert r v), (Heap v v r r = hinsert gv1 v), (Heap v v r r = merge l l), (Heap v v r r = merge l r), (Heap v v r r = merge l gv1), (Heap v v r r = merge r l), (Heap v v r r = merge r r)
(Heap v v r r = merge r gv1), (Heap v v r r = merge gv1 l), (Heap v v r r = merge gv1 r), (Heap v v r r = merge gv1 gv1), (Heap v v r r = mergea v l l), (Heap v v r r = mergea v l r), (Heap v v r r = mergea v l gv1), (Heap v v r r = mergea v r l), (Heap v v r r = mergea v r r), (Heap v v r r = mergea v r gv1)
(Heap v v r r = mergea v gv1 l), (Heap v v r r = mergea v gv1 r), (Heap v v r r = mergea v gv1 gv1), (Heap v v r gv1 = l), (Heap v v r gv1 = r), (Heap v v r gv1 = gv1), (Heap v v r gv1 = hinsert l v), (Heap v v r gv1 = hinsert r v), (Heap v v r gv1 = hinsert gv1 v), (Heap v v r gv1 = merge l l)
(Heap v v r gv1 = merge l r), (Heap v v r gv1 = merge l gv1), (Heap v v r gv1 = merge r l), (Heap v v r gv1 = merge r r), (Heap v v r gv1 = merge r gv1), (Heap v v r gv1 = merge gv1 l), (Heap v v r gv1 = merge gv1 r), (Heap v v r gv1 = merge gv1 gv1), (Heap v v r gv1 = mergea v l l), (Heap v v r gv1 = mergea v l r)
(Heap v v r gv1 = mergea v l gv1), (Heap v v r gv1 = mergea v r l), (Heap v v r gv1 = mergea v r r), (Heap v v r gv1 = mergea v r gv1), (Heap v v r gv1 = mergea v gv1 l), (Heap v v r gv1 = mergea v gv1 r), (Heap v v r gv1 = mergea v gv1 gv1), (Heap v v gv1 l = l), (Heap v v gv1 l = r), (Heap v v gv1 l = gv1)
(Heap v v gv1 l = hinsert l v), (Heap v v gv1 l = hinsert r v), (Heap v v gv1 l = hinsert gv1 v), (Heap v v gv1 l = merge l l), (Heap v v gv1 l = merge l r), (Heap v v gv1 l = merge l gv1), (Heap v v gv1 l = merge r l), (Heap v v gv1 l = merge r r), (Heap v v gv1 l = merge r gv1), (Heap v v gv1 l = merge gv1 l)
(Heap v v gv1 l = merge gv1 r), (Heap v v gv1 l = merge gv1 gv1), (Heap v v gv1 l = mergea v l l), (Heap v v gv1 l = mergea v l r), (Heap v v gv1 l = mergea v l gv1), (Heap v v gv1 l = mergea v r l), (Heap v v gv1 l = mergea v r r), (Heap v v gv1 l = mergea v r gv1), (Heap v v gv1 l = mergea v gv1 l), (Heap v v gv1 l = mergea v gv1 r)
(Heap v v gv1 l = mergea v gv1 gv1), (Heap v v gv1 r = l), (Heap v v gv1 r = r), (Heap v v gv1 r = gv1), (Heap v v gv1 r = hinsert l v), (Heap v v gv1 r = hinsert r v), (Heap v v gv1 r = hinsert gv1 v), (Heap v v gv1 r = merge l l), (Heap v v gv1 r = merge l r), (Heap v v gv1 r = merge l gv1)
(Heap v v gv1 r = merge r l), (Heap v v gv1 r = merge r r), (Heap v v gv1 r = merge r gv1), (Heap v v gv1 r = merge gv1 l), (Heap v v gv1 r = merge gv1 r), (Heap v v gv1 r = merge gv1 gv1), (Heap v v gv1 r = mergea v l l), (Heap v v gv1 r = mergea v l r), (Heap v v gv1 r = mergea v l gv1), (Heap v v gv1 r = mergea v r l)
(Heap v v gv1 r = mergea v r r), (Heap v v gv1 r = mergea v r gv1), (Heap v v gv1 r = mergea v gv1 l), (Heap v v gv1 r = mergea v gv1 r), (Heap v v gv1 r = mergea v gv1 gv1), (Heap v v gv1 gv1 = l), (Heap v v gv1 gv1 = r), (Heap v v gv1 gv1 = gv1), (Heap v v gv1 gv1 = hinsert l v), (Heap v v gv1 gv1 = hinsert r v)
(Heap v v gv1 gv1 = hinsert gv1 v), (Heap v v gv1 gv1 = merge l l), (Heap v v gv1 gv1 = merge l r), (Heap v v gv1 gv1 = merge l gv1), (Heap v v gv1 gv1 = merge r l), (Heap v v gv1 gv1 = merge r r), (Heap v v gv1 gv1 = merge r gv1), (Heap v v gv1 gv1 = merge gv1 l), (Heap v v gv1 gv1 = merge gv1 r), (Heap v v gv1 gv1 = merge gv1 gv1)
(Heap v v gv1 gv1 = mergea v l l), (Heap v v gv1 gv1 = mergea v l r), (Heap v v gv1 gv1 = mergea v l gv1), (Heap v v gv1 gv1 = mergea v r l), (Heap v v gv1 gv1 = mergea v r r), (Heap v v gv1 gv1 = mergea v r gv1), (Heap v v gv1 gv1 = mergea v gv1 l), (Heap v v gv1 gv1 = mergea v gv1 r), (Heap v v gv1 gv1 = mergea v gv1 gv1), (hinsert l v = l)
(hinsert l v = r), (hinsert l v = gv1), (hinsert r v = l), (hinsert r v = r), (hinsert r v = gv1), (hinsert gv1 v = l), (hinsert gv1 v = r), (hinsert gv1 v = gv1), (merge l l = l), (merge l l = r)
(merge l l = gv1), (merge l l = hinsert l v), (merge l l = hinsert r v), (merge l l = hinsert gv1 v), (merge l r = l), (merge l r = r), (merge l r = gv1), (merge l r = hinsert l v), (merge l r = hinsert r v), (merge l r = hinsert gv1 v)
(merge l gv1 = l), (merge l gv1 = r), (merge l gv1 = gv1), (merge l gv1 = hinsert l v), (merge l gv1 = hinsert r v), (merge l gv1 = hinsert gv1 v), (merge r l = l), (merge r l = r), (merge r l = gv1), (merge r l = hinsert l v)
(merge r l = hinsert r v), (merge r l = hinsert gv1 v), (merge r r = l), (merge r r = r), (merge r r = gv1), (merge r r = hinsert l v), (merge r r = hinsert r v), (merge r r = hinsert gv1 v), (merge r gv1 = l), (merge r gv1 = r)
(merge r gv1 = gv1), (merge r gv1 = hinsert l v), (merge r gv1 = hinsert r v), (merge r gv1 = hinsert gv1 v), (merge gv1 l = l), (merge gv1 l = r), (merge gv1 l = gv1), (merge gv1 l = hinsert l v), (merge gv1 l = hinsert r v), (merge gv1 l = hinsert gv1 v)
(merge gv1 r = l), (merge gv1 r = r), (merge gv1 r = gv1), (merge gv1 r = hinsert l v), (merge gv1 r = hinsert r v), (merge gv1 r = hinsert gv1 v), (merge gv1 gv1 = l), (merge gv1 gv1 = r), (merge gv1 gv1 = gv1), (merge gv1 gv1 = hinsert l v)
(merge gv1 gv1 = hinsert r v), (merge gv1 gv1 = hinsert gv1 v), (mergea v l l = l), (mergea v l l = r), (mergea v l l = gv1), (mergea v l l = hinsert l v), (mergea v l l = hinsert r v), (mergea v l l = hinsert gv1 v), (mergea v l l = merge l l), (mergea v l l = merge l r)
(mergea v l l = merge l gv1), (mergea v l l = merge r l), (mergea v l l = merge r r), (mergea v l l = merge r gv1), (mergea v l l = merge gv1 l), (mergea v l l = merge gv1 r), (mergea v l l = merge gv1 gv1), (mergea v l r = l), (mergea v l r = r), (mergea v l r = gv1)
(mergea v l r = hinsert l v), (mergea v l r = hinsert r v), (mergea v l r = hinsert gv1 v), (mergea v l r = merge l l), (mergea v l r = merge l r), (mergea v l r = merge l gv1), (mergea v l r = merge r l), (mergea v l r = merge r r), (mergea v l r = merge r gv1), (mergea v l r = merge gv1 l)
(mergea v l r = merge gv1 r), (mergea v l r = merge gv1 gv1), (mergea v l gv1 = l), (mergea v l gv1 = r), (mergea v l gv1 = gv1), (mergea v l gv1 = hinsert l v), (mergea v l gv1 = hinsert r v), (mergea v l gv1 = hinsert gv1 v), (mergea v l gv1 = merge l l), (mergea v l gv1 = merge l r)
(mergea v l gv1 = merge l gv1), (mergea v l gv1 = merge r l), (mergea v l gv1 = merge r r), (mergea v l gv1 = merge r gv1), (mergea v l gv1 = merge gv1 l), (mergea v l gv1 = merge gv1 r), (mergea v l gv1 = merge gv1 gv1), (mergea v r l = l), (mergea v r l = r), (mergea v r l = gv1)
(mergea v r l = hinsert l v), (mergea v r l = hinsert r v), (mergea v r l = hinsert gv1 v), (mergea v r l = merge l l), (mergea v r l = merge l r), (mergea v r l = merge l gv1), (mergea v r l = merge r l), (mergea v r l = merge r r), (mergea v r l = merge r gv1), (mergea v r l = merge gv1 l)
(mergea v r l = merge gv1 r), (mergea v r l = merge gv1 gv1), (mergea v r r = l), (mergea v r r = r), (mergea v r r = gv1), (mergea v r r = hinsert l v), (mergea v r r = hinsert r v), (mergea v r r = hinsert gv1 v), (mergea v r r = merge l l), (mergea v r r = merge l r)
(mergea v r r = merge l gv1), (mergea v r r = merge r l), (mergea v r r = merge r r), (mergea v r r = merge r gv1), (mergea v r r = merge gv1 l), (mergea v r r = merge gv1 r), (mergea v r r = merge gv1 gv1), (mergea v r gv1 = l), (mergea v r gv1 = r), (mergea v r gv1 = gv1)
(mergea v r gv1 = hinsert l v), (mergea v r gv1 = hinsert r v), (mergea v r gv1 = hinsert gv1 v), (mergea v r gv1 = merge l l), (mergea v r gv1 = merge l r), (mergea v r gv1 = merge l gv1), (mergea v r gv1 = merge r l), (mergea v r gv1 = merge r r), (mergea v r gv1 = merge r gv1), (mergea v r gv1 = merge gv1 l)
(mergea v r gv1 = merge gv1 r), (mergea v r gv1 = merge gv1 gv1), (mergea v gv1 l = l), (mergea v gv1 l = r), (mergea v gv1 l = gv1), (mergea v gv1 l = hinsert l v), (mergea v gv1 l = hinsert r v), (mergea v gv1 l = hinsert gv1 v), (mergea v gv1 l = merge l l), (mergea v gv1 l = merge l r)
(mergea v gv1 l = merge l gv1), (mergea v gv1 l = merge r l), (mergea v gv1 l = merge r r), (mergea v gv1 l = merge r gv1), (mergea v gv1 l = merge gv1 l), (mergea v gv1 l = merge gv1 r), (mergea v gv1 l = merge gv1 gv1), (mergea v gv1 r = l), (mergea v gv1 r = r), (mergea v gv1 r = gv1)
(mergea v gv1 r = hinsert l v), (mergea v gv1 r = hinsert r v), (mergea v gv1 r = hinsert gv1 v), (mergea v gv1 r = merge l l), (mergea v gv1 r = merge l r), (mergea v gv1 r = merge l gv1), (mergea v gv1 r = merge r l), (mergea v gv1 r = merge r r), (mergea v gv1 r = merge r gv1), (mergea v gv1 r = merge gv1 l)
(mergea v gv1 r = merge gv1 r), (mergea v gv1 r = merge gv1 gv1), (mergea v gv1 gv1 = l), (mergea v gv1 gv1 = r), (mergea v gv1 gv1 = gv1), (mergea v gv1 gv1 = hinsert l v), (mergea v gv1 gv1 = hinsert r v), (mergea v gv1 gv1 = hinsert gv1 v), (mergea v gv1 gv1 = merge l l), (mergea v gv1 gv1 = merge l r)
(mergea v gv1 gv1 = merge l gv1), (mergea v gv1 gv1 = merge r l), (mergea v gv1 gv1 = merge r r), (mergea v gv1 gv1 = merge r gv1), (mergea v gv1 gv1 = merge gv1 l), (mergea v gv1 gv1 = merge gv1 r), (mergea v gv1 gv1 = merge gv1 gv1), (Hleaf = Heap v v l l), (Hleaf = Heap v v l r), (Hleaf = Heap v v l gv1)
(Hleaf = Heap v v r l), (Hleaf = Heap v v r r), (Hleaf = Heap v v r gv1), (Hleaf = Heap v v gv1 l), (Hleaf = Heap v v gv1 r), (Hleaf = Heap v v gv1 gv1), (Hleaf = hinsert l v), (Hleaf = hinsert r v), (Hleaf = hinsert gv1 v), (Hleaf = merge l l)
(Hleaf = merge l r), (Hleaf = merge l gv1), (Hleaf = merge r l), (Hleaf = merge r r), (Hleaf = merge r gv1), (Hleaf = merge gv1 l), (Hleaf = merge gv1 r), (Hleaf = merge gv1 gv1), (Hleaf = mergea v l l), (Hleaf = mergea v l r)
(Hleaf = mergea v l gv1), (Hleaf = mergea v r l), (Hleaf = mergea v r r), (Hleaf = mergea v r gv1), (Hleaf = mergea v gv1 l), (Hleaf = mergea v gv1 r), (Hleaf = mergea v gv1 gv1), (hsize l = v), (hsize r = v), (hsize gv1 = v)
(rank l = v), (rank l = hsize l), (rank l = hsize r), (rank l = hsize gv1), (rank r = v), (rank r = hsize l), (rank r = hsize r), (rank r = hsize gv1), (rank gv1 = v), (rank gv1 = hsize l)
(rank gv1 = hsize r), (rank gv1 = hsize gv1), (right_height l = v), (right_height l = hsize l), (right_height l = hsize r), (right_height l = hsize gv1), (right_height l = rank l), (right_height l = rank r), (right_height l = rank gv1), (right_height r = v)
(right_height r = hsize l), (right_height r = hsize r), (right_height r = hsize gv1), (right_height r = rank l), (right_height r = rank r), (right_height r = rank gv1), (right_height gv1 = v), (right_height gv1 = hsize l), (right_height gv1 = hsize r), (right_height gv1 = hsize gv1)
(right_height gv1 = rank l), (right_height gv1 = rank r), (right_height gv1 = rank gv1), (None = Some v)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 342.735 seconds


Label: 0 (0)
(rank r <= rank l)

Label: 1 (1)
(true = has_leftist_property l)

Label: 2 (2)
(true = has_leftist_property r)

Label: 3 (3)

Label: 4 (4)
(rank r = gv3), (hsize r = gv3), (right_height r = gv3)

Label: 5 (5)
(Heap gv2 v r r = mergea v r r), (Heap gv2 v l r = mergea v l r), (Heap gv2 gv2 r r = mergea gv2 r r), (Heap gv2 gv2 l r = mergea gv2 l r)

Label: 6 (6)
(true = gv0), (false <> gv0), (has_leftist_property l = gv0), (has_leftist_property r = gv0)

Label: 7 (7)

Label: 8 (8)
(rank r = gv3), (right_height r = gv3)

Label: 9 (9)
(Heap gv2 v r r = mergea v r r), (Heap gv2 v l r = mergea v l r), (Heap gv2 gv2 r r = mergea gv2 r r), (Heap gv2 gv2 l r = mergea gv2 l r)

Label: 10 (10)

Label: 11 (11)
(has_leftist_property gv1 = gv6), (mergea v l r = gv1)

Label: 12 (12)

Label: 13 (13)
(true = has_leftist_property gv1), (mergea v l r = gv1)


------------------------------ ALL RESULTS ------------------------------
1. (has_leftist_property r = gv6 ->  has_leftist_property l = gv6 ->  rank r <= rank l -> has_leftist_property (Heap (rank r + 1) v l r) = gv6)

2. (rank r <= rank l ->  has_leftist_property l = true ->  has_leftist_property r = true ->  has_leftist_property (Heap (rank r + 1) v l r) = true)

3. (false <> gv0 -> gv0 = true)

4. (mergea v l r = gv1 ->  has_leftist_property l = gv6 ->  has_leftist_property r = gv6 -> has_leftist_property gv1 = gv6)

5. (right_height r = gv3 ->  has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  gv3 <= rank l -> has_leftist_property (Heap (gv3 + 1) v l r) = gv6)

6. (has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  Heap gv2 v r r = mergea v r r ->  rank r <= rank l -> has_leftist_property (Heap gv2 v l r) = gv6)

7. (has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  Heap gv2 v l r = mergea v l r ->  rank r <= rank l -> has_leftist_property (Heap gv2 v l r) = gv6)

8. (has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  Heap gv2 gv2 r r = mergea gv2 r r ->  rank r <= rank l -> has_leftist_property (Heap gv2 v l r) = gv6)

9. (has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  Heap gv2 gv2 l r = mergea gv2 l r ->  rank r <= rank l -> has_leftist_property (Heap gv2 v l r) = gv6)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 412.847 seconds

Number of Result Pairs Returned: 9

1. (has_leftist_property r = gv6 ->  has_leftist_property l = gv6 ->  rank r <= rank l -> has_leftist_property (Heap (rank r + 1) v l r) = gv6)

2. (rank r <= rank l ->  has_leftist_property l = true ->  has_leftist_property r = true ->  has_leftist_property (Heap (rank r + 1) v l r) = true)

3. (false <> gv0 -> gv0 = true)

4. (mergea v l r = gv1 ->  has_leftist_property l = gv6 ->  has_leftist_property r = gv6 -> has_leftist_property gv1 = gv6)

5. (right_height r = gv3 ->  has_leftist_property l = gv6 ->  has_leftist_property r = gv6 ->  gv3 <= rank l -> has_leftist_property (Heap (gv3 + 1) v l r) = gv6)
