Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (Permutation ([] ++ l2) (merge [] l2))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 2.143 seconds

gv1 : (list nat) = []
gv2 : (list nat) = (merge [] l2)
gv0 : (list nat) = ([] ++ l2)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 31.401 seconds

Label: Generalization #0
Assumptions: 

----------------------------------
Goal: (Permutation ([] ++ l2) (merge [] l2))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (merge [] l2 = gv2)

----------------------------------
Goal: (Permutation ([] ++ l2) gv2)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- ([] ++ l2 = gv0)

----------------------------------
Goal: (Permutation gv0 (merge [] l2))
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 

----------------------------------
Goal: (Permutation (gv1 ++ l2) (merge gv1 l2))
Case: Valid and Generalized

Label: Generalization #4
Assumptions: 
 -- ([] = gv1)
 -- (merge gv1 l2 = gv2)

----------------------------------
Goal: (Permutation (gv1 ++ l2) gv2)
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- ([] = gv1)
 -- (gv1 ++ l2 = gv0)

----------------------------------
Goal: (Permutation gv0 (merge gv1 l2))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 31.535 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
@split : (forall X : Type, list X -> list X * list X)
merge : (list nat -> list nat -> list nat)
le_all : (nat -> list nat -> Prop)
list_ind2 : (forall (A : Type) (P : list A -> Prop),
 P [] ->
 (forall a : A, P [a]) ->
 (forall (a b : A) (l : list A), P l -> P (a :: b :: l)) ->
 forall l : list A, P l)

Label: 0 (0)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 500
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 31.781 seconds


Label: 0 (0)
(sorted gv2), (sorted l2), (Permutation gv2 gv2), (Permutation gv2 l2), (Permutation l2 gv2), (Permutation l2 l2), (gv2 = gv2), (gv2 = l2), (l2 = gv2), (l2 = l2)
(length gv2 <=* gv2), (length gv2 <=* l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l2)
(length gv2 <=* []), (length l2 <=* gv2), (length l2 <=* l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge l2 gv2), (length l2 <=* merge l2 l2), (length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l2), (length l2 <=* l2 ++ gv2)
(length l2 <=* l2 ++ l2), (length l2 <=* []), (sorted (merge gv2 gv2)), (sorted (merge gv2 l2)), (sorted (merge l2 gv2)), (sorted (merge l2 l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (l2 ++ gv2)), (sorted (l2 ++ l2))
(sorted []), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (l2 ++ gv2)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 [])
(Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge l2 gv2)), (Permutation l2 (merge l2 l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (l2 ++ l2)), (Permutation l2 []), (Permutation (merge gv2 gv2) gv2)
(Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge l2 gv2)), (Permutation (merge gv2 gv2) (merge l2 l2)), (Permutation (merge gv2 gv2) (gv2 ++ gv2)), (Permutation (merge gv2 gv2) (gv2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l2) gv2)
(Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (l2 ++ gv2)), (Permutation (merge gv2 l2) (l2 ++ l2)), (Permutation (merge gv2 l2) []), (Permutation (merge l2 gv2) gv2)
(Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ gv2)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l2) gv2)
(Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) []), (Permutation (gv2 ++ gv2) gv2)
(Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) (merge gv2 gv2)), (Permutation (gv2 ++ gv2) (merge gv2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l2) gv2)
(Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge l2 gv2)), (Permutation (gv2 ++ l2) (merge l2 l2)), (Permutation (gv2 ++ l2) (gv2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) []), (Permutation (l2 ++ gv2) gv2)
(Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge l2 gv2)), (Permutation (l2 ++ gv2) (merge l2 l2)), (Permutation (l2 ++ gv2) (gv2 ++ gv2)), (Permutation (l2 ++ gv2) (gv2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l2) gv2)
(Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 l2)), (Permutation (l2 ++ l2) (merge l2 gv2)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) []), (Permutation [] gv2)
(Permutation [] l2), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge l2 l2)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (l2 ++ gv2)), (Permutation [] (l2 ++ l2)), (In (length gv2) gv2)
(In (length gv2) l2), (In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l2)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l2)), (In (length gv2) (gv2 ++ gv2)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l2)), (In (length l2) gv2)
(In (length l2) l2), (In (length l2) (merge gv2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge l2 l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (l2 ++ l2)), (length gv2 < length l2)
(length l2 < length gv2), (length gv2 <= length l2), (length l2 <= length gv2), (~ sorted gv2), (~ sorted l2), (~ Permutation gv2 gv2), (~ Permutation gv2 l2), (~ Permutation l2 gv2), (~ Permutation l2 l2), (gv2 <> gv2)
(gv2 <> l2), (l2 <> gv2), (l2 <> l2), (None = Some gv2), (None = Some l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = l2 ++ gv2)
(merge gv2 gv2 = l2 ++ l2), (merge gv2 l2 = gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = l2 ++ gv2), (merge gv2 l2 = l2 ++ l2), (merge l2 gv2 = gv2), (merge l2 gv2 = l2), (merge l2 gv2 = gv2 ++ gv2)
(merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l2), (merge l2 l2 = gv2), (merge l2 l2 = l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = l2 ++ l2), (gv2 ++ gv2 = gv2)
(gv2 ++ gv2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l2), (l2 ++ l2 = gv2), (l2 ++ l2 = l2), ([] = gv2), ([] = l2), ([] = merge gv2 gv2)
([] = merge gv2 l2), ([] = merge l2 gv2), ([] = merge l2 l2), ([] = gv2 ++ gv2), ([] = gv2 ++ l2), ([] = l2 ++ gv2), ([] = l2 ++ l2), ((gv2, gv2) = split gv2), ((gv2, gv2) = split l2), ((gv2, l2) = split gv2)
((gv2, l2) = split l2), ((l2, gv2) = split gv2), ((l2, gv2) = split l2), ((l2, l2) = split gv2), ((l2, l2) = split l2)

Label: 1 (1)
(sorted l2), (sorted gv0), (Permutation l2 l2), (Permutation l2 gv0), (Permutation gv0 l2), (Permutation gv0 gv0), (l2 = l2), (l2 = gv0), (gv0 = l2), (gv0 = gv0)
(length l2 <=* l2), (length l2 <=* gv0), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv0), (length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ gv0), (length l2 <=* gv0 ++ l2), (length l2 <=* gv0 ++ gv0)
(length l2 <=* []), (length gv0 <=* l2), (length gv0 <=* gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ gv0), (length gv0 <=* gv0 ++ l2)
(length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted (merge l2 l2)), (sorted (merge l2 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv0 gv0)), (sorted (l2 ++ l2)), (sorted (l2 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ gv0))
(sorted []), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ gv0)), (Permutation l2 [])
(Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 gv0)), (Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (merge l2 l2) l2)
(Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ gv0)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv0) l2)
(Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge gv0 l2)), (Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ gv0)), (Permutation (merge l2 gv0) []), (Permutation (merge gv0 l2) l2)
(Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ gv0)), (Permutation (merge gv0 l2) []), (Permutation (merge gv0 gv0) l2)
(Permutation (merge gv0 gv0) gv0), (Permutation (merge gv0 gv0) (merge l2 l2)), (Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) l2)
(Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv0)), (Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv0) l2)
(Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 gv0)), (Permutation (l2 ++ gv0) (l2 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (gv0 ++ l2) l2)
(Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 gv0)), (Permutation (gv0 ++ l2) (l2 ++ l2)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ gv0) l2)
(Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l2)), (Permutation (gv0 ++ gv0) []), (Permutation [] l2)
(Permutation [] gv0), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 gv0)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ gv0)), (In (length l2) l2)
(In (length l2) gv0), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge gv0 l2)), (In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ gv0)), (In (length gv0) l2)
(In (length gv0) gv0), (In (length gv0) (merge l2 l2)), (In (length gv0) (merge l2 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ gv0)), (length l2 < length gv0)
(length gv0 < length l2), (length l2 <= length gv0), (length gv0 <= length l2), (~ sorted l2), (~ sorted gv0), (~ Permutation l2 l2), (~ Permutation l2 gv0), (~ Permutation gv0 l2), (~ Permutation gv0 gv0), (l2 <> l2)
(l2 <> gv0), (gv0 <> l2), (gv0 <> gv0), (None = Some l2), (None = Some gv0), (merge l2 l2 = l2), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = gv0 ++ l2)
(merge l2 l2 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = gv0), (merge gv0 l2 = l2 ++ l2)
(merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 gv0 = l2), (merge gv0 gv0 = gv0), (merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ gv0), (l2 ++ l2 = l2)
(l2 ++ l2 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = gv0), (gv0 ++ l2 = l2), (gv0 ++ l2 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = gv0), ([] = l2), ([] = gv0), ([] = merge l2 l2)
([] = merge l2 gv0), ([] = merge gv0 l2), ([] = merge gv0 gv0), ([] = l2 ++ l2), ([] = l2 ++ gv0), ([] = gv0 ++ l2), ([] = gv0 ++ gv0), ((l2, l2) = split l2), ((l2, l2) = split gv0), ((l2, gv0) = split l2)
((l2, gv0) = split gv0), ((gv0, l2) = split l2), ((gv0, l2) = split gv0), ((gv0, gv0) = split l2), ((gv0, gv0) = split gv0)

Label: 2 (2)
(sorted gv2), (sorted l2), (sorted gv1), (Permutation gv2 gv2), (Permutation gv2 l2), (Permutation gv2 gv1), (Permutation l2 gv2), (Permutation l2 l2), (Permutation l2 gv1), (Permutation gv1 gv2)
(Permutation gv1 l2), (Permutation gv1 gv1), (gv2 = gv2), (gv2 = l2), (gv2 = gv1), (l2 = gv2), (l2 = l2), (l2 = gv1), (gv1 = gv2), (gv1 = l2)
(gv1 = gv1), (length gv2 <=* gv2), (length gv2 <=* l2), (length gv2 <=* gv1), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv1), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv1)
(length gv2 <=* merge gv1 gv2), (length gv2 <=* merge gv1 l2), (length gv2 <=* merge gv1 gv1), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv1), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv1), (length gv2 <=* gv1 ++ gv2)
(length gv2 <=* gv1 ++ l2), (length gv2 <=* gv1 ++ gv1), (length gv2 <=* []), (length l2 <=* gv2), (length l2 <=* l2), (length l2 <=* gv1), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv1), (length l2 <=* merge l2 gv2)
(length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv1), (length l2 <=* merge gv1 gv2), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv1), (length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l2), (length l2 <=* gv2 ++ gv1), (length l2 <=* l2 ++ gv2), (length l2 <=* l2 ++ l2)
(length l2 <=* l2 ++ gv1), (length l2 <=* gv1 ++ gv2), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ gv1), (length l2 <=* []), (length gv1 <=* gv2), (length gv1 <=* l2), (length gv1 <=* gv1), (length gv1 <=* merge gv2 gv2), (length gv1 <=* merge gv2 l2)
(length gv1 <=* merge gv2 gv1), (length gv1 <=* merge l2 gv2), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge gv1 gv2), (length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 gv1), (length gv1 <=* gv2 ++ gv2), (length gv1 <=* gv2 ++ l2), (length gv1 <=* gv2 ++ gv1)
(length gv1 <=* l2 ++ gv2), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* gv1 ++ gv2), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* []), (sorted (merge gv2 gv2)), (sorted (merge gv2 l2)), (sorted (merge gv2 gv1))
(sorted (merge l2 gv2)), (sorted (merge l2 l2)), (sorted (merge l2 gv1)), (sorted (merge gv1 gv2)), (sorted (merge gv1 l2)), (sorted (merge gv1 gv1)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv1)), (sorted (l2 ++ gv2))
(sorted (l2 ++ l2)), (sorted (l2 ++ gv1)), (sorted (gv1 ++ gv2)), (sorted (gv1 ++ l2)), (sorted (gv1 ++ gv1)), (sorted []), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv1)), (Permutation gv2 (merge l2 gv2))
(Permutation gv2 (merge l2 l2)), (Permutation gv2 (merge l2 gv1)), (Permutation gv2 (merge gv1 gv2)), (Permutation gv2 (merge gv1 l2)), (Permutation gv2 (merge gv1 gv1)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv1)), (Permutation gv2 (l2 ++ gv2)), (Permutation gv2 (l2 ++ l2))
(Permutation gv2 (l2 ++ gv1)), (Permutation gv2 (gv1 ++ gv2)), (Permutation gv2 (gv1 ++ l2)), (Permutation gv2 (gv1 ++ gv1)), (Permutation gv2 []), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv1)), (Permutation l2 (merge l2 gv2)), (Permutation l2 (merge l2 l2))
(Permutation l2 (merge l2 gv1)), (Permutation l2 (merge gv1 gv2)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv1)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ gv1))
(Permutation l2 (gv1 ++ gv2)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv1)), (Permutation l2 []), (Permutation gv1 (merge gv2 gv2)), (Permutation gv1 (merge gv2 l2)), (Permutation gv1 (merge gv2 gv1)), (Permutation gv1 (merge l2 gv2)), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv1))
(Permutation gv1 (merge gv1 gv2)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (gv2 ++ gv2)), (Permutation gv1 (gv2 ++ l2)), (Permutation gv1 (gv2 ++ gv1)), (Permutation gv1 (l2 ++ gv2)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (gv1 ++ gv2))
(Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (merge gv2 gv2) gv2), (Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) gv1), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 gv1)), (Permutation (merge gv2 gv2) (merge l2 gv2)), (Permutation (merge gv2 gv2) (merge l2 l2))
(Permutation (merge gv2 gv2) (merge l2 gv1)), (Permutation (merge gv2 gv2) (merge gv1 gv2)), (Permutation (merge gv2 gv2) (merge gv1 l2)), (Permutation (merge gv2 gv2) (merge gv1 gv1)), (Permutation (merge gv2 gv2) (gv2 ++ gv2)), (Permutation (merge gv2 gv2) (gv2 ++ l2)), (Permutation (merge gv2 gv2) (gv2 ++ gv1)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv1))
(Permutation (merge gv2 gv2) (gv1 ++ gv2)), (Permutation (merge gv2 gv2) (gv1 ++ l2)), (Permutation (merge gv2 gv2) (gv1 ++ gv1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv1), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 gv1)), (Permutation (merge gv2 l2) (merge l2 gv2))
(Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv1)), (Permutation (merge gv2 l2) (merge gv1 gv2)), (Permutation (merge gv2 l2) (merge gv1 l2)), (Permutation (merge gv2 l2) (merge gv1 gv1)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv1)), (Permutation (merge gv2 l2) (l2 ++ gv2)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ gv1)), (Permutation (merge gv2 l2) (gv1 ++ gv2)), (Permutation (merge gv2 l2) (gv1 ++ l2)), (Permutation (merge gv2 l2) (gv1 ++ gv1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv1) gv2), (Permutation (merge gv2 gv1) l2), (Permutation (merge gv2 gv1) gv1), (Permutation (merge gv2 gv1) (merge gv2 gv2)), (Permutation (merge gv2 gv1) (merge gv2 l2))
(Permutation (merge gv2 gv1) (merge l2 gv2)), (Permutation (merge gv2 gv1) (merge l2 l2)), (Permutation (merge gv2 gv1) (merge l2 gv1)), (Permutation (merge gv2 gv1) (merge gv1 gv2)), (Permutation (merge gv2 gv1) (merge gv1 l2)), (Permutation (merge gv2 gv1) (merge gv1 gv1)), (Permutation (merge gv2 gv1) (gv2 ++ gv2)), (Permutation (merge gv2 gv1) (gv2 ++ l2)), (Permutation (merge gv2 gv1) (gv2 ++ gv1)), (Permutation (merge gv2 gv1) (l2 ++ gv2))
(Permutation (merge gv2 gv1) (l2 ++ l2)), (Permutation (merge gv2 gv1) (l2 ++ gv1)), (Permutation (merge gv2 gv1) (gv1 ++ gv2)), (Permutation (merge gv2 gv1) (gv1 ++ l2)), (Permutation (merge gv2 gv1) (gv1 ++ gv1)), (Permutation (merge gv2 gv1) []), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv1), (Permutation (merge l2 gv2) (merge gv2 gv2))
(Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 gv1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 gv1)), (Permutation (merge l2 gv2) (merge gv1 gv2)), (Permutation (merge l2 gv2) (merge gv1 l2)), (Permutation (merge l2 gv2) (merge gv1 gv1)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv1))
(Permutation (merge l2 gv2) (l2 ++ gv2)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ gv1)), (Permutation (merge l2 gv2) (gv1 ++ gv2)), (Permutation (merge l2 gv2) (gv1 ++ l2)), (Permutation (merge l2 gv2) (gv1 ++ gv1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) gv1)
(Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv1)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge gv1 gv2)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2))
(Permutation (merge l2 l2) (gv2 ++ gv1)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ gv2)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv1) gv2), (Permutation (merge l2 gv1) l2)
(Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (merge gv2 gv2)), (Permutation (merge l2 gv1) (merge gv2 l2)), (Permutation (merge l2 gv1) (merge gv2 gv1)), (Permutation (merge l2 gv1) (merge l2 gv2)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge gv1 gv2)), (Permutation (merge l2 gv1) (merge gv1 l2)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (gv2 ++ gv2))
(Permutation (merge l2 gv1) (gv2 ++ l2)), (Permutation (merge l2 gv1) (gv2 ++ gv1)), (Permutation (merge l2 gv1) (l2 ++ gv2)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv1)), (Permutation (merge l2 gv1) (gv1 ++ gv2)), (Permutation (merge l2 gv1) (gv1 ++ l2)), (Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge gv1 gv2) gv2)
(Permutation (merge gv1 gv2) l2), (Permutation (merge gv1 gv2) gv1), (Permutation (merge gv1 gv2) (merge gv2 gv2)), (Permutation (merge gv1 gv2) (merge gv2 l2)), (Permutation (merge gv1 gv2) (merge gv2 gv1)), (Permutation (merge gv1 gv2) (merge l2 gv2)), (Permutation (merge gv1 gv2) (merge l2 l2)), (Permutation (merge gv1 gv2) (merge l2 gv1)), (Permutation (merge gv1 gv2) (merge gv1 l2)), (Permutation (merge gv1 gv2) (merge gv1 gv1))
(Permutation (merge gv1 gv2) (gv2 ++ gv2)), (Permutation (merge gv1 gv2) (gv2 ++ l2)), (Permutation (merge gv1 gv2) (gv2 ++ gv1)), (Permutation (merge gv1 gv2) (l2 ++ gv2)), (Permutation (merge gv1 gv2) (l2 ++ l2)), (Permutation (merge gv1 gv2) (l2 ++ gv1)), (Permutation (merge gv1 gv2) (gv1 ++ gv2)), (Permutation (merge gv1 gv2) (gv1 ++ l2)), (Permutation (merge gv1 gv2) (gv1 ++ gv1)), (Permutation (merge gv1 gv2) [])
(Permutation (merge gv1 l2) gv2), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (merge gv2 gv2)), (Permutation (merge gv1 l2) (merge gv2 l2)), (Permutation (merge gv1 l2) (merge gv2 gv1)), (Permutation (merge gv1 l2) (merge l2 gv2)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 gv1)), (Permutation (merge gv1 l2) (merge gv1 gv2))
(Permutation (merge gv1 l2) (merge gv1 gv1)), (Permutation (merge gv1 l2) (gv2 ++ gv2)), (Permutation (merge gv1 l2) (gv2 ++ l2)), (Permutation (merge gv1 l2) (gv2 ++ gv1)), (Permutation (merge gv1 l2) (l2 ++ gv2)), (Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ gv2)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv1))
(Permutation (merge gv1 l2) []), (Permutation (merge gv1 gv1) gv2), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) (merge gv2 gv2)), (Permutation (merge gv1 gv1) (merge gv2 l2)), (Permutation (merge gv1 gv1) (merge gv2 gv1)), (Permutation (merge gv1 gv1) (merge l2 gv2)), (Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv1))
(Permutation (merge gv1 gv1) (merge gv1 gv2)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (gv2 ++ gv2)), (Permutation (merge gv1 gv1) (gv2 ++ l2)), (Permutation (merge gv1 gv1) (gv2 ++ gv1)), (Permutation (merge gv1 gv1) (l2 ++ gv2)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ gv2)), (Permutation (merge gv1 gv1) (gv1 ++ l2))
(Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv1), (Permutation (gv2 ++ gv2) (merge gv2 gv2)), (Permutation (gv2 ++ gv2) (merge gv2 l2)), (Permutation (gv2 ++ gv2) (merge gv2 gv1)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l2))
(Permutation (gv2 ++ gv2) (merge l2 gv1)), (Permutation (gv2 ++ gv2) (merge gv1 gv2)), (Permutation (gv2 ++ gv2) (merge gv1 l2)), (Permutation (gv2 ++ gv2) (merge gv1 gv1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ gv1)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv1)), (Permutation (gv2 ++ gv2) (gv1 ++ gv2))
(Permutation (gv2 ++ gv2) (gv1 ++ l2)), (Permutation (gv2 ++ gv2) (gv1 ++ gv1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l2) gv2), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv1), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv1)), (Permutation (gv2 ++ l2) (merge l2 gv2))
(Permutation (gv2 ++ l2) (merge l2 l2)), (Permutation (gv2 ++ l2) (merge l2 gv1)), (Permutation (gv2 ++ l2) (merge gv1 gv2)), (Permutation (gv2 ++ l2) (merge gv1 l2)), (Permutation (gv2 ++ l2) (merge gv1 gv1)), (Permutation (gv2 ++ l2) (gv2 ++ gv2)), (Permutation (gv2 ++ l2) (gv2 ++ gv1)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv1))
(Permutation (gv2 ++ l2) (gv1 ++ gv2)), (Permutation (gv2 ++ l2) (gv1 ++ l2)), (Permutation (gv2 ++ l2) (gv1 ++ gv1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv1) gv2), (Permutation (gv2 ++ gv1) l2), (Permutation (gv2 ++ gv1) gv1), (Permutation (gv2 ++ gv1) (merge gv2 gv2)), (Permutation (gv2 ++ gv1) (merge gv2 l2)), (Permutation (gv2 ++ gv1) (merge gv2 gv1))
(Permutation (gv2 ++ gv1) (merge l2 gv2)), (Permutation (gv2 ++ gv1) (merge l2 l2)), (Permutation (gv2 ++ gv1) (merge l2 gv1)), (Permutation (gv2 ++ gv1) (merge gv1 gv2)), (Permutation (gv2 ++ gv1) (merge gv1 l2)), (Permutation (gv2 ++ gv1) (merge gv1 gv1)), (Permutation (gv2 ++ gv1) (gv2 ++ gv2)), (Permutation (gv2 ++ gv1) (gv2 ++ l2)), (Permutation (gv2 ++ gv1) (l2 ++ gv2)), (Permutation (gv2 ++ gv1) (l2 ++ l2))
(Permutation (gv2 ++ gv1) (l2 ++ gv1)), (Permutation (gv2 ++ gv1) (gv1 ++ gv2)), (Permutation (gv2 ++ gv1) (gv1 ++ l2)), (Permutation (gv2 ++ gv1) (gv1 ++ gv1)), (Permutation (gv2 ++ gv1) []), (Permutation (l2 ++ gv2) gv2), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv1), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l2))
(Permutation (l2 ++ gv2) (merge gv2 gv1)), (Permutation (l2 ++ gv2) (merge l2 gv2)), (Permutation (l2 ++ gv2) (merge l2 l2)), (Permutation (l2 ++ gv2) (merge l2 gv1)), (Permutation (l2 ++ gv2) (merge gv1 gv2)), (Permutation (l2 ++ gv2) (merge gv1 l2)), (Permutation (l2 ++ gv2) (merge gv1 gv1)), (Permutation (l2 ++ gv2) (gv2 ++ gv2)), (Permutation (l2 ++ gv2) (gv2 ++ l2)), (Permutation (l2 ++ gv2) (gv2 ++ gv1))
(Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ gv1)), (Permutation (l2 ++ gv2) (gv1 ++ gv2)), (Permutation (l2 ++ gv2) (gv1 ++ l2)), (Permutation (l2 ++ gv2) (gv1 ++ gv1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (merge gv2 gv2))
(Permutation (l2 ++ l2) (merge gv2 l2)), (Permutation (l2 ++ l2) (merge gv2 gv1)), (Permutation (l2 ++ l2) (merge l2 gv2)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge gv1 gv2)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2))
(Permutation (l2 ++ l2) (gv2 ++ gv1)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ gv2)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv1) gv2), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv1)
(Permutation (l2 ++ gv1) (merge gv2 gv2)), (Permutation (l2 ++ gv1) (merge gv2 l2)), (Permutation (l2 ++ gv1) (merge gv2 gv1)), (Permutation (l2 ++ gv1) (merge l2 gv2)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv1)), (Permutation (l2 ++ gv1) (merge gv1 gv2)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (gv2 ++ gv2))
(Permutation (l2 ++ gv1) (gv2 ++ l2)), (Permutation (l2 ++ gv1) (gv2 ++ gv1)), (Permutation (l2 ++ gv1) (l2 ++ gv2)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv2)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (gv1 ++ gv2) gv2), (Permutation (gv1 ++ gv2) l2)
(Permutation (gv1 ++ gv2) gv1), (Permutation (gv1 ++ gv2) (merge gv2 gv2)), (Permutation (gv1 ++ gv2) (merge gv2 l2)), (Permutation (gv1 ++ gv2) (merge gv2 gv1)), (Permutation (gv1 ++ gv2) (merge l2 gv2)), (Permutation (gv1 ++ gv2) (merge l2 l2)), (Permutation (gv1 ++ gv2) (merge l2 gv1)), (Permutation (gv1 ++ gv2) (merge gv1 gv2)), (Permutation (gv1 ++ gv2) (merge gv1 l2)), (Permutation (gv1 ++ gv2) (merge gv1 gv1))
(Permutation (gv1 ++ gv2) (gv2 ++ gv2)), (Permutation (gv1 ++ gv2) (gv2 ++ l2)), (Permutation (gv1 ++ gv2) (gv2 ++ gv1)), (Permutation (gv1 ++ gv2) (l2 ++ gv2)), (Permutation (gv1 ++ gv2) (l2 ++ l2)), (Permutation (gv1 ++ gv2) (l2 ++ gv1)), (Permutation (gv1 ++ gv2) (gv1 ++ l2)), (Permutation (gv1 ++ gv2) (gv1 ++ gv1)), (Permutation (gv1 ++ gv2) []), (Permutation (gv1 ++ l2) gv2)
(Permutation (gv1 ++ l2) l2), (Permutation (gv1 ++ l2) gv1), (Permutation (gv1 ++ l2) (merge gv2 gv2)), (Permutation (gv1 ++ l2) (merge gv2 l2)), (Permutation (gv1 ++ l2) (merge gv2 gv1)), (Permutation (gv1 ++ l2) (merge l2 gv2)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv1)), (Permutation (gv1 ++ l2) (merge gv1 gv2)), (Permutation (gv1 ++ l2) (merge gv1 l2))
(Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (gv2 ++ gv2)), (Permutation (gv1 ++ l2) (gv2 ++ l2)), (Permutation (gv1 ++ l2) (gv2 ++ gv1)), (Permutation (gv1 ++ l2) (l2 ++ gv2)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv1)), (Permutation (gv1 ++ l2) (gv1 ++ gv2)), (Permutation (gv1 ++ l2) (gv1 ++ gv1)), (Permutation (gv1 ++ l2) [])
(Permutation (gv1 ++ gv1) gv2), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (merge gv2 gv2)), (Permutation (gv1 ++ gv1) (merge gv2 l2)), (Permutation (gv1 ++ gv1) (merge gv2 gv1)), (Permutation (gv1 ++ gv1) (merge l2 gv2)), (Permutation (gv1 ++ gv1) (merge l2 l2)), (Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 gv2))
(Permutation (gv1 ++ gv1) (merge gv1 l2)), (Permutation (gv1 ++ gv1) (merge gv1 gv1)), (Permutation (gv1 ++ gv1) (gv2 ++ gv2)), (Permutation (gv1 ++ gv1) (gv2 ++ l2)), (Permutation (gv1 ++ gv1) (gv2 ++ gv1)), (Permutation (gv1 ++ gv1) (l2 ++ gv2)), (Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ gv2)), (Permutation (gv1 ++ gv1) (gv1 ++ l2))
(Permutation (gv1 ++ gv1) []), (Permutation [] gv2), (Permutation [] l2), (Permutation [] gv1), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 gv1)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv1))
(Permutation [] (merge gv1 gv2)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv1)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv1)), (Permutation [] (l2 ++ gv2)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv1)), (Permutation [] (gv1 ++ gv2))
(Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv1)), (In (length gv2) gv2), (In (length gv2) l2), (In (length gv2) gv1), (In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l2)), (In (length gv2) (merge gv2 gv1)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l2))
(In (length gv2) (merge l2 gv1)), (In (length gv2) (merge gv1 gv2)), (In (length gv2) (merge gv1 l2)), (In (length gv2) (merge gv1 gv1)), (In (length gv2) (gv2 ++ gv2)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv1)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv1))
(In (length gv2) (gv1 ++ gv2)), (In (length gv2) (gv1 ++ l2)), (In (length gv2) (gv1 ++ gv1)), (In (length l2) gv2), (In (length l2) l2), (In (length l2) gv1), (In (length l2) (merge gv2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv1)), (In (length l2) (merge l2 gv2))
(In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge gv1 gv2)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv1)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv1)), (In (length l2) (l2 ++ gv2)), (In (length l2) (l2 ++ l2))
(In (length l2) (l2 ++ gv1)), (In (length l2) (gv1 ++ gv2)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv1)), (In (length gv1) gv2), (In (length gv1) l2), (In (length gv1) gv1), (In (length gv1) (merge gv2 gv2)), (In (length gv1) (merge gv2 l2)), (In (length gv1) (merge gv2 gv1))
(In (length gv1) (merge l2 gv2)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge gv1 gv2)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (gv2 ++ gv2)), (In (length gv1) (gv2 ++ l2)), (In (length gv1) (gv2 ++ gv1)), (In (length gv1) (l2 ++ gv2))
(In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (gv1 ++ gv2)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv1)), (length gv2 < length l2), (length gv2 < length gv1), (length l2 < length gv2), (length l2 < length gv1), (length gv1 < length gv2)
(length gv1 < length l2), (length gv2 <= length l2), (length gv2 <= length gv1), (length l2 <= length gv2), (length l2 <= length gv1), (length gv1 <= length gv2), (length gv1 <= length l2), (~ sorted gv2), (~ sorted l2), (~ sorted gv1)
(~ Permutation gv2 gv2), (~ Permutation gv2 l2), (~ Permutation gv2 gv1), (~ Permutation l2 gv2), (~ Permutation l2 l2), (~ Permutation l2 gv1), (~ Permutation gv1 gv2), (~ Permutation gv1 l2), (~ Permutation gv1 gv1), (gv2 <> gv2)
(gv2 <> l2), (gv2 <> gv1), (l2 <> gv2), (l2 <> l2), (l2 <> gv1), (gv1 <> gv2), (gv1 <> l2), (gv1 <> gv1), (None = Some gv2), (None = Some l2)
(None = Some gv1), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv1), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv1), (merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ l2), (merge gv2 gv2 = l2 ++ gv1)
(merge gv2 gv2 = gv1 ++ gv2), (merge gv2 gv2 = gv1 ++ l2), (merge gv2 gv2 = gv1 ++ gv1), (merge gv2 l2 = gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv1), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv1), (merge gv2 l2 = l2 ++ gv2)
(merge gv2 l2 = l2 ++ l2), (merge gv2 l2 = l2 ++ gv1), (merge gv2 l2 = gv1 ++ gv2), (merge gv2 l2 = gv1 ++ l2), (merge gv2 l2 = gv1 ++ gv1), (merge gv2 gv1 = gv2), (merge gv2 gv1 = l2), (merge gv2 gv1 = gv1), (merge gv2 gv1 = gv2 ++ gv2), (merge gv2 gv1 = gv2 ++ l2)
(merge gv2 gv1 = gv2 ++ gv1), (merge gv2 gv1 = l2 ++ gv2), (merge gv2 gv1 = l2 ++ l2), (merge gv2 gv1 = l2 ++ gv1), (merge gv2 gv1 = gv1 ++ gv2), (merge gv2 gv1 = gv1 ++ l2), (merge gv2 gv1 = gv1 ++ gv1), (merge l2 gv2 = gv2), (merge l2 gv2 = l2), (merge l2 gv2 = gv1)
(merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv1), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv1), (merge l2 gv2 = gv1 ++ gv2), (merge l2 gv2 = gv1 ++ l2), (merge l2 gv2 = gv1 ++ gv1), (merge l2 l2 = gv2)
(merge l2 l2 = l2), (merge l2 l2 = gv1), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv1), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = gv1 ++ gv2), (merge l2 l2 = gv1 ++ l2)
(merge l2 l2 = gv1 ++ gv1), (merge l2 gv1 = gv2), (merge l2 gv1 = l2), (merge l2 gv1 = gv1), (merge l2 gv1 = gv2 ++ gv2), (merge l2 gv1 = gv2 ++ l2), (merge l2 gv1 = gv2 ++ gv1), (merge l2 gv1 = l2 ++ gv2), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv1)
(merge l2 gv1 = gv1 ++ gv2), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ gv1), (merge gv1 gv2 = gv2), (merge gv1 gv2 = l2), (merge gv1 gv2 = gv1), (merge gv1 gv2 = gv2 ++ gv2), (merge gv1 gv2 = gv2 ++ l2), (merge gv1 gv2 = gv2 ++ gv1), (merge gv1 gv2 = l2 ++ gv2)
(merge gv1 gv2 = l2 ++ l2), (merge gv1 gv2 = l2 ++ gv1), (merge gv1 gv2 = gv1 ++ gv2), (merge gv1 gv2 = gv1 ++ l2), (merge gv1 gv2 = gv1 ++ gv1), (merge gv1 l2 = gv2), (merge gv1 l2 = l2), (merge gv1 l2 = gv1), (merge gv1 l2 = gv2 ++ gv2), (merge gv1 l2 = gv2 ++ l2)
(merge gv1 l2 = gv2 ++ gv1), (merge gv1 l2 = l2 ++ gv2), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = gv1 ++ gv2), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 gv1 = gv2), (merge gv1 gv1 = l2), (merge gv1 gv1 = gv1)
(merge gv1 gv1 = gv2 ++ gv2), (merge gv1 gv1 = gv2 ++ l2), (merge gv1 gv1 = gv2 ++ gv1), (merge gv1 gv1 = l2 ++ gv2), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = gv1 ++ gv2), (merge gv1 gv1 = gv1 ++ l2), (merge gv1 gv1 = gv1 ++ gv1), (gv2 ++ gv2 = gv2)
(gv2 ++ gv2 = l2), (gv2 ++ gv2 = gv1), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv1), (gv2 ++ gv1 = gv2), (gv2 ++ gv1 = l2), (gv2 ++ gv1 = gv1), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l2)
(l2 ++ gv2 = gv1), (l2 ++ l2 = gv2), (l2 ++ l2 = l2), (l2 ++ l2 = gv1), (l2 ++ gv1 = gv2), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv1), (gv1 ++ gv2 = gv2), (gv1 ++ gv2 = l2), (gv1 ++ gv2 = gv1)
(gv1 ++ l2 = gv2), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv1), (gv1 ++ gv1 = gv2), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv1), ([] = gv2), ([] = l2), ([] = gv1), ([] = merge gv2 gv2)
([] = merge gv2 l2), ([] = merge gv2 gv1), ([] = merge l2 gv2), ([] = merge l2 l2), ([] = merge l2 gv1), ([] = merge gv1 gv2), ([] = merge gv1 l2), ([] = merge gv1 gv1), ([] = gv2 ++ gv2), ([] = gv2 ++ l2)
([] = gv2 ++ gv1), ([] = l2 ++ gv2), ([] = l2 ++ l2), ([] = l2 ++ gv1), ([] = gv1 ++ gv2), ([] = gv1 ++ l2), ([] = gv1 ++ gv1), ((gv2, gv2) = split gv2), ((gv2, gv2) = split l2), ((gv2, gv2) = split gv1)
((gv2, l2) = split gv2), ((gv2, l2) = split l2), ((gv2, l2) = split gv1), ((gv2, gv1) = split gv2), ((gv2, gv1) = split l2), ((gv2, gv1) = split gv1), ((l2, gv2) = split gv2), ((l2, gv2) = split l2), ((l2, gv2) = split gv1), ((l2, l2) = split gv2)
((l2, l2) = split l2), ((l2, l2) = split gv1), ((l2, gv1) = split gv2), ((l2, gv1) = split l2), ((l2, gv1) = split gv1), ((gv1, gv2) = split gv2), ((gv1, gv2) = split l2), ((gv1, gv2) = split gv1), ((gv1, l2) = split gv2), ((gv1, l2) = split l2)
((gv1, l2) = split gv1), ((gv1, gv1) = split gv2), ((gv1, gv1) = split l2), ((gv1, gv1) = split gv1)

Label: 3 (3)
(sorted l2), (sorted gv1), (sorted gv0), (Permutation l2 l2), (Permutation l2 gv1), (Permutation l2 gv0), (Permutation gv1 l2), (Permutation gv1 gv1), (Permutation gv1 gv0), (Permutation gv0 l2)
(Permutation gv0 gv1), (Permutation gv0 gv0), (l2 = l2), (l2 = gv1), (l2 = gv0), (gv1 = l2), (gv1 = gv1), (gv1 = gv0), (gv0 = l2), (gv0 = gv1)
(gv0 = gv0), (length l2 <=* l2), (length l2 <=* gv1), (length l2 <=* gv0), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv1), (length l2 <=* merge l2 gv0), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv1), (length l2 <=* merge gv1 gv0)
(length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 gv1), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ gv1), (length l2 <=* l2 ++ gv0), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ gv1), (length l2 <=* gv1 ++ gv0), (length l2 <=* gv0 ++ l2)
(length l2 <=* gv0 ++ gv1), (length l2 <=* gv0 ++ gv0), (length l2 <=* []), (length gv1 <=* l2), (length gv1 <=* gv1), (length gv1 <=* gv0), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge l2 gv0), (length gv1 <=* merge gv1 l2)
(length gv1 <=* merge gv1 gv1), (length gv1 <=* merge gv1 gv0), (length gv1 <=* merge gv0 l2), (length gv1 <=* merge gv0 gv1), (length gv1 <=* merge gv0 gv0), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* l2 ++ gv0), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv1)
(length gv1 <=* gv1 ++ gv0), (length gv1 <=* gv0 ++ l2), (length gv1 <=* gv0 ++ gv1), (length gv1 <=* gv0 ++ gv0), (length gv1 <=* []), (length gv0 <=* l2), (length gv0 <=* gv1), (length gv0 <=* gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 gv1)
(length gv0 <=* merge l2 gv0), (length gv0 <=* merge gv1 l2), (length gv0 <=* merge gv1 gv1), (length gv0 <=* merge gv1 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 gv1), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ gv1), (length gv0 <=* l2 ++ gv0)
(length gv0 <=* gv1 ++ l2), (length gv0 <=* gv1 ++ gv1), (length gv0 <=* gv1 ++ gv0), (length gv0 <=* gv0 ++ l2), (length gv0 <=* gv0 ++ gv1), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted (merge l2 l2)), (sorted (merge l2 gv1)), (sorted (merge l2 gv0))
(sorted (merge gv1 l2)), (sorted (merge gv1 gv1)), (sorted (merge gv1 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv0 gv1)), (sorted (merge gv0 gv0)), (sorted (l2 ++ l2)), (sorted (l2 ++ gv1)), (sorted (l2 ++ gv0)), (sorted (gv1 ++ l2))
(sorted (gv1 ++ gv1)), (sorted (gv1 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ gv1)), (sorted (gv0 ++ gv0)), (sorted []), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge l2 gv0)), (Permutation l2 (merge gv1 l2))
(Permutation l2 (merge gv1 gv1)), (Permutation l2 (merge gv1 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 gv1)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv1))
(Permutation l2 (gv1 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ gv1)), (Permutation l2 (gv0 ++ gv0)), (Permutation l2 []), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge l2 gv0)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv1))
(Permutation gv1 (merge gv1 gv0)), (Permutation gv1 (merge gv0 l2)), (Permutation gv1 (merge gv0 gv1)), (Permutation gv1 (merge gv0 gv0)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (l2 ++ gv0)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ gv0))
(Permutation gv1 (gv0 ++ l2)), (Permutation gv1 (gv0 ++ gv1)), (Permutation gv1 (gv0 ++ gv0)), (Permutation gv1 []), (Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 gv1)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge gv1 l2)), (Permutation gv0 (merge gv1 gv1)), (Permutation gv0 (merge gv1 gv0))
(Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 gv1)), (Permutation gv0 (merge gv0 gv0)), (Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ gv1)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (gv1 ++ l2)), (Permutation gv0 (gv1 ++ gv1)), (Permutation gv0 (gv1 ++ gv0)), (Permutation gv0 (gv0 ++ l2))
(Permutation gv0 (gv0 ++ gv1)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv1))
(Permutation (merge l2 l2) (merge gv1 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 gv1)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ gv0))
(Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ gv1)), (Permutation (merge l2 l2) (gv0 ++ gv0)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv1) l2), (Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) gv0), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge l2 gv0)), (Permutation (merge l2 gv1) (merge gv1 l2))
(Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (merge gv1 gv0)), (Permutation (merge l2 gv1) (merge gv0 l2)), (Permutation (merge l2 gv1) (merge gv0 gv1)), (Permutation (merge l2 gv1) (merge gv0 gv0)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv1)), (Permutation (merge l2 gv1) (l2 ++ gv0)), (Permutation (merge l2 gv1) (gv1 ++ l2)), (Permutation (merge l2 gv1) (gv1 ++ gv1))
(Permutation (merge l2 gv1) (gv1 ++ gv0)), (Permutation (merge l2 gv1) (gv0 ++ l2)), (Permutation (merge l2 gv1) (gv0 ++ gv1)), (Permutation (merge l2 gv1) (gv0 ++ gv0)), (Permutation (merge l2 gv1) []), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) gv1), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 gv1))
(Permutation (merge l2 gv0) (merge gv1 l2)), (Permutation (merge l2 gv0) (merge gv1 gv1)), (Permutation (merge l2 gv0) (merge gv1 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2)), (Permutation (merge l2 gv0) (merge gv0 gv1)), (Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ gv1)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (gv1 ++ l2))
(Permutation (merge l2 gv0) (gv1 ++ gv1)), (Permutation (merge l2 gv0) (gv1 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ gv1)), (Permutation (merge l2 gv0) (gv0 ++ gv0)), (Permutation (merge l2 gv0) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) gv0), (Permutation (merge gv1 l2) (merge l2 l2))
(Permutation (merge gv1 l2) (merge l2 gv1)), (Permutation (merge gv1 l2) (merge l2 gv0)), (Permutation (merge gv1 l2) (merge gv1 gv1)), (Permutation (merge gv1 l2) (merge gv1 gv0)), (Permutation (merge gv1 l2) (merge gv0 l2)), (Permutation (merge gv1 l2) (merge gv0 gv1)), (Permutation (merge gv1 l2) (merge gv0 gv0)), (Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (l2 ++ gv0))
(Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ gv0)), (Permutation (merge gv1 l2) (gv0 ++ l2)), (Permutation (merge gv1 l2) (gv0 ++ gv1)), (Permutation (merge gv1 l2) (gv0 ++ gv0)), (Permutation (merge gv1 l2) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) gv0)
(Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv1)), (Permutation (merge gv1 gv1) (merge l2 gv0)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (merge gv1 gv0)), (Permutation (merge gv1 gv1) (merge gv0 l2)), (Permutation (merge gv1 gv1) (merge gv0 gv1)), (Permutation (merge gv1 gv1) (merge gv0 gv0)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv1))
(Permutation (merge gv1 gv1) (l2 ++ gv0)), (Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ gv0)), (Permutation (merge gv1 gv1) (gv0 ++ l2)), (Permutation (merge gv1 gv1) (gv0 ++ gv1)), (Permutation (merge gv1 gv1) (gv0 ++ gv0)), (Permutation (merge gv1 gv1) []), (Permutation (merge gv1 gv0) l2), (Permutation (merge gv1 gv0) gv1)
(Permutation (merge gv1 gv0) gv0), (Permutation (merge gv1 gv0) (merge l2 l2)), (Permutation (merge gv1 gv0) (merge l2 gv1)), (Permutation (merge gv1 gv0) (merge l2 gv0)), (Permutation (merge gv1 gv0) (merge gv1 l2)), (Permutation (merge gv1 gv0) (merge gv1 gv1)), (Permutation (merge gv1 gv0) (merge gv0 l2)), (Permutation (merge gv1 gv0) (merge gv0 gv1)), (Permutation (merge gv1 gv0) (merge gv0 gv0)), (Permutation (merge gv1 gv0) (l2 ++ l2))
(Permutation (merge gv1 gv0) (l2 ++ gv1)), (Permutation (merge gv1 gv0) (l2 ++ gv0)), (Permutation (merge gv1 gv0) (gv1 ++ l2)), (Permutation (merge gv1 gv0) (gv1 ++ gv1)), (Permutation (merge gv1 gv0) (gv1 ++ gv0)), (Permutation (merge gv1 gv0) (gv0 ++ l2)), (Permutation (merge gv1 gv0) (gv0 ++ gv1)), (Permutation (merge gv1 gv0) (gv0 ++ gv0)), (Permutation (merge gv1 gv0) []), (Permutation (merge gv0 l2) l2)
(Permutation (merge gv0 l2) gv1), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 gv1)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge gv1 l2)), (Permutation (merge gv0 l2) (merge gv1 gv1)), (Permutation (merge gv0 l2) (merge gv1 gv0)), (Permutation (merge gv0 l2) (merge gv0 gv1)), (Permutation (merge gv0 l2) (merge gv0 gv0))
(Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ gv1)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (gv1 ++ l2)), (Permutation (merge gv0 l2) (gv1 ++ gv1)), (Permutation (merge gv0 l2) (gv1 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ gv1)), (Permutation (merge gv0 l2) (gv0 ++ gv0)), (Permutation (merge gv0 l2) [])
(Permutation (merge gv0 gv1) l2), (Permutation (merge gv0 gv1) gv1), (Permutation (merge gv0 gv1) gv0), (Permutation (merge gv0 gv1) (merge l2 l2)), (Permutation (merge gv0 gv1) (merge l2 gv1)), (Permutation (merge gv0 gv1) (merge l2 gv0)), (Permutation (merge gv0 gv1) (merge gv1 l2)), (Permutation (merge gv0 gv1) (merge gv1 gv1)), (Permutation (merge gv0 gv1) (merge gv1 gv0)), (Permutation (merge gv0 gv1) (merge gv0 l2))
(Permutation (merge gv0 gv1) (merge gv0 gv0)), (Permutation (merge gv0 gv1) (l2 ++ l2)), (Permutation (merge gv0 gv1) (l2 ++ gv1)), (Permutation (merge gv0 gv1) (l2 ++ gv0)), (Permutation (merge gv0 gv1) (gv1 ++ l2)), (Permutation (merge gv0 gv1) (gv1 ++ gv1)), (Permutation (merge gv0 gv1) (gv1 ++ gv0)), (Permutation (merge gv0 gv1) (gv0 ++ l2)), (Permutation (merge gv0 gv1) (gv0 ++ gv1)), (Permutation (merge gv0 gv1) (gv0 ++ gv0))
(Permutation (merge gv0 gv1) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) gv1), (Permutation (merge gv0 gv0) gv0), (Permutation (merge gv0 gv0) (merge l2 l2)), (Permutation (merge gv0 gv0) (merge l2 gv1)), (Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge gv1 l2)), (Permutation (merge gv0 gv0) (merge gv1 gv1)), (Permutation (merge gv0 gv0) (merge gv1 gv0))
(Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 gv1)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ gv1)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (gv1 ++ l2)), (Permutation (merge gv0 gv0) (gv1 ++ gv1)), (Permutation (merge gv0 gv0) (gv1 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ gv1))
(Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge l2 gv0)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 gv1))
(Permutation (l2 ++ l2) (merge gv1 gv0)), (Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 gv1)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2))
(Permutation (l2 ++ l2) (gv0 ++ gv1)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) gv0), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv1)), (Permutation (l2 ++ gv1) (merge l2 gv0)), (Permutation (l2 ++ gv1) (merge gv1 l2))
(Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (merge gv1 gv0)), (Permutation (l2 ++ gv1) (merge gv0 l2)), (Permutation (l2 ++ gv1) (merge gv0 gv1)), (Permutation (l2 ++ gv1) (merge gv0 gv0)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (l2 ++ gv0)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) (gv1 ++ gv0))
(Permutation (l2 ++ gv1) (gv0 ++ l2)), (Permutation (l2 ++ gv1) (gv0 ++ gv1)), (Permutation (l2 ++ gv1) (gv0 ++ gv0)), (Permutation (l2 ++ gv1) []), (Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) gv1), (Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 gv1)), (Permutation (l2 ++ gv0) (merge l2 gv0))
(Permutation (l2 ++ gv0) (merge gv1 l2)), (Permutation (l2 ++ gv0) (merge gv1 gv1)), (Permutation (l2 ++ gv0) (merge gv1 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 gv1)), (Permutation (l2 ++ gv0) (merge gv0 gv0)), (Permutation (l2 ++ gv0) (l2 ++ l2)), (Permutation (l2 ++ gv0) (l2 ++ gv1)), (Permutation (l2 ++ gv0) (gv1 ++ l2)), (Permutation (l2 ++ gv0) (gv1 ++ gv1))
(Permutation (l2 ++ gv0) (gv1 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ gv1)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (gv1 ++ l2) l2), (Permutation (gv1 ++ l2) gv1), (Permutation (gv1 ++ l2) gv0), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv1))
(Permutation (gv1 ++ l2) (merge l2 gv0)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (merge gv1 gv0)), (Permutation (gv1 ++ l2) (merge gv0 l2)), (Permutation (gv1 ++ l2) (merge gv0 gv1)), (Permutation (gv1 ++ l2) (merge gv0 gv0)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv1)), (Permutation (gv1 ++ l2) (l2 ++ gv0))
(Permutation (gv1 ++ l2) (gv1 ++ gv1)), (Permutation (gv1 ++ l2) (gv1 ++ gv0)), (Permutation (gv1 ++ l2) (gv0 ++ l2)), (Permutation (gv1 ++ l2) (gv0 ++ gv1)), (Permutation (gv1 ++ l2) (gv0 ++ gv0)), (Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) gv0), (Permutation (gv1 ++ gv1) (merge l2 l2))
(Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge l2 gv0)), (Permutation (gv1 ++ gv1) (merge gv1 l2)), (Permutation (gv1 ++ gv1) (merge gv1 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 gv0)), (Permutation (gv1 ++ gv1) (merge gv0 l2)), (Permutation (gv1 ++ gv1) (merge gv0 gv1)), (Permutation (gv1 ++ gv1) (merge gv0 gv0)), (Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv1))
(Permutation (gv1 ++ gv1) (l2 ++ gv0)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) (gv1 ++ gv0)), (Permutation (gv1 ++ gv1) (gv0 ++ l2)), (Permutation (gv1 ++ gv1) (gv0 ++ gv1)), (Permutation (gv1 ++ gv1) (gv0 ++ gv0)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ gv0) l2), (Permutation (gv1 ++ gv0) gv1), (Permutation (gv1 ++ gv0) gv0)
(Permutation (gv1 ++ gv0) (merge l2 l2)), (Permutation (gv1 ++ gv0) (merge l2 gv1)), (Permutation (gv1 ++ gv0) (merge l2 gv0)), (Permutation (gv1 ++ gv0) (merge gv1 l2)), (Permutation (gv1 ++ gv0) (merge gv1 gv1)), (Permutation (gv1 ++ gv0) (merge gv1 gv0)), (Permutation (gv1 ++ gv0) (merge gv0 l2)), (Permutation (gv1 ++ gv0) (merge gv0 gv1)), (Permutation (gv1 ++ gv0) (merge gv0 gv0)), (Permutation (gv1 ++ gv0) (l2 ++ l2))
(Permutation (gv1 ++ gv0) (l2 ++ gv1)), (Permutation (gv1 ++ gv0) (l2 ++ gv0)), (Permutation (gv1 ++ gv0) (gv1 ++ l2)), (Permutation (gv1 ++ gv0) (gv1 ++ gv1)), (Permutation (gv1 ++ gv0) (gv0 ++ l2)), (Permutation (gv1 ++ gv0) (gv0 ++ gv1)), (Permutation (gv1 ++ gv0) (gv0 ++ gv0)), (Permutation (gv1 ++ gv0) []), (Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) gv1)
(Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 gv1)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge gv1 l2)), (Permutation (gv0 ++ l2) (merge gv1 gv1)), (Permutation (gv0 ++ l2) (merge gv1 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 gv1)), (Permutation (gv0 ++ l2) (merge gv0 gv0))
(Permutation (gv0 ++ l2) (l2 ++ l2)), (Permutation (gv0 ++ l2) (l2 ++ gv1)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (gv1 ++ l2)), (Permutation (gv0 ++ l2) (gv1 ++ gv1)), (Permutation (gv0 ++ l2) (gv1 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ gv1)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ gv1) l2)
(Permutation (gv0 ++ gv1) gv1), (Permutation (gv0 ++ gv1) gv0), (Permutation (gv0 ++ gv1) (merge l2 l2)), (Permutation (gv0 ++ gv1) (merge l2 gv1)), (Permutation (gv0 ++ gv1) (merge l2 gv0)), (Permutation (gv0 ++ gv1) (merge gv1 l2)), (Permutation (gv0 ++ gv1) (merge gv1 gv1)), (Permutation (gv0 ++ gv1) (merge gv1 gv0)), (Permutation (gv0 ++ gv1) (merge gv0 l2)), (Permutation (gv0 ++ gv1) (merge gv0 gv1))
(Permutation (gv0 ++ gv1) (merge gv0 gv0)), (Permutation (gv0 ++ gv1) (l2 ++ l2)), (Permutation (gv0 ++ gv1) (l2 ++ gv1)), (Permutation (gv0 ++ gv1) (l2 ++ gv0)), (Permutation (gv0 ++ gv1) (gv1 ++ l2)), (Permutation (gv0 ++ gv1) (gv1 ++ gv1)), (Permutation (gv0 ++ gv1) (gv1 ++ gv0)), (Permutation (gv0 ++ gv1) (gv0 ++ l2)), (Permutation (gv0 ++ gv1) (gv0 ++ gv0)), (Permutation (gv0 ++ gv1) [])
(Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) gv1), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 gv1)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge gv1 l2)), (Permutation (gv0 ++ gv0) (merge gv1 gv1)), (Permutation (gv0 ++ gv0) (merge gv1 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2))
(Permutation (gv0 ++ gv0) (merge gv0 gv1)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ gv1)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (gv1 ++ l2)), (Permutation (gv0 ++ gv0) (gv1 ++ gv1)), (Permutation (gv0 ++ gv0) (gv1 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l2)), (Permutation (gv0 ++ gv0) (gv0 ++ gv1))
(Permutation (gv0 ++ gv0) []), (Permutation [] l2), (Permutation [] gv1), (Permutation [] gv0), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv1)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv1)), (Permutation [] (merge gv1 gv0))
(Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 gv1)), (Permutation [] (merge gv0 gv0)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv1)), (Permutation [] (l2 ++ gv0)), (Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv1)), (Permutation [] (gv1 ++ gv0)), (Permutation [] (gv0 ++ l2))
(Permutation [] (gv0 ++ gv1)), (Permutation [] (gv0 ++ gv0)), (In (length l2) l2), (In (length l2) gv1), (In (length l2) gv0), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv1))
(In (length l2) (merge gv1 gv0)), (In (length l2) (merge gv0 l2)), (In (length l2) (merge gv0 gv1)), (In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ gv1)), (In (length l2) (l2 ++ gv0)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv1)), (In (length l2) (gv1 ++ gv0))
(In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ gv1)), (In (length l2) (gv0 ++ gv0)), (In (length gv1) l2), (In (length gv1) gv1), (In (length gv1) gv0), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge l2 gv0)), (In (length gv1) (merge gv1 l2))
(In (length gv1) (merge gv1 gv1)), (In (length gv1) (merge gv1 gv0)), (In (length gv1) (merge gv0 l2)), (In (length gv1) (merge gv0 gv1)), (In (length gv1) (merge gv0 gv0)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (l2 ++ gv0)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv1))
(In (length gv1) (gv1 ++ gv0)), (In (length gv1) (gv0 ++ l2)), (In (length gv1) (gv0 ++ gv1)), (In (length gv1) (gv0 ++ gv0)), (In (length gv0) l2), (In (length gv0) gv1), (In (length gv0) gv0), (In (length gv0) (merge l2 l2)), (In (length gv0) (merge l2 gv1)), (In (length gv0) (merge l2 gv0))
(In (length gv0) (merge gv1 l2)), (In (length gv0) (merge gv1 gv1)), (In (length gv0) (merge gv1 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 gv1)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ gv1)), (In (length gv0) (l2 ++ gv0)), (In (length gv0) (gv1 ++ l2))
(In (length gv0) (gv1 ++ gv1)), (In (length gv0) (gv1 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ gv1)), (In (length gv0) (gv0 ++ gv0)), (length l2 < length gv1), (length l2 < length gv0), (length gv1 < length l2), (length gv1 < length gv0), (length gv0 < length l2)
(length gv0 < length gv1), (length l2 <= length gv1), (length l2 <= length gv0), (length gv1 <= length l2), (length gv1 <= length gv0), (length gv0 <= length l2), (length gv0 <= length gv1), (~ sorted l2), (~ sorted gv1), (~ sorted gv0)
(~ Permutation l2 l2), (~ Permutation l2 gv1), (~ Permutation l2 gv0), (~ Permutation gv1 l2), (~ Permutation gv1 gv1), (~ Permutation gv1 gv0), (~ Permutation gv0 l2), (~ Permutation gv0 gv1), (~ Permutation gv0 gv0), (l2 <> l2)
(l2 <> gv1), (l2 <> gv0), (gv1 <> l2), (gv1 <> gv1), (gv1 <> gv0), (gv0 <> l2), (gv0 <> gv1), (gv0 <> gv0), (None = Some l2), (None = Some gv1)
(None = Some gv0), (merge l2 l2 = l2), (merge l2 l2 = gv1), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ gv1), (merge l2 l2 = gv1 ++ gv0)
(merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ gv1), (merge l2 l2 = gv0 ++ gv0), (merge l2 gv1 = l2), (merge l2 gv1 = gv1), (merge l2 gv1 = gv0), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = l2 ++ gv0), (merge l2 gv1 = gv1 ++ l2)
(merge l2 gv1 = gv1 ++ gv1), (merge l2 gv1 = gv1 ++ gv0), (merge l2 gv1 = gv0 ++ l2), (merge l2 gv1 = gv0 ++ gv1), (merge l2 gv1 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = gv1), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ gv1)
(merge l2 gv0 = l2 ++ gv0), (merge l2 gv0 = gv1 ++ l2), (merge l2 gv0 = gv1 ++ gv1), (merge l2 gv0 = gv1 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ gv1), (merge l2 gv0 = gv0 ++ gv0), (merge gv1 l2 = l2), (merge gv1 l2 = gv1), (merge gv1 l2 = gv0)
(merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = l2 ++ gv0), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 l2 = gv1 ++ gv0), (merge gv1 l2 = gv0 ++ l2), (merge gv1 l2 = gv0 ++ gv1), (merge gv1 l2 = gv0 ++ gv0), (merge gv1 gv1 = l2)
(merge gv1 gv1 = gv1), (merge gv1 gv1 = gv0), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = l2 ++ gv0), (merge gv1 gv1 = gv1 ++ l2), (merge gv1 gv1 = gv1 ++ gv1), (merge gv1 gv1 = gv1 ++ gv0), (merge gv1 gv1 = gv0 ++ l2), (merge gv1 gv1 = gv0 ++ gv1)
(merge gv1 gv1 = gv0 ++ gv0), (merge gv1 gv0 = l2), (merge gv1 gv0 = gv1), (merge gv1 gv0 = gv0), (merge gv1 gv0 = l2 ++ l2), (merge gv1 gv0 = l2 ++ gv1), (merge gv1 gv0 = l2 ++ gv0), (merge gv1 gv0 = gv1 ++ l2), (merge gv1 gv0 = gv1 ++ gv1), (merge gv1 gv0 = gv1 ++ gv0)
(merge gv1 gv0 = gv0 ++ l2), (merge gv1 gv0 = gv0 ++ gv1), (merge gv1 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = gv1), (merge gv0 l2 = gv0), (merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ gv1), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = gv1 ++ l2)
(merge gv0 l2 = gv1 ++ gv1), (merge gv0 l2 = gv1 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ gv1), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 gv1 = l2), (merge gv0 gv1 = gv1), (merge gv0 gv1 = gv0), (merge gv0 gv1 = l2 ++ l2), (merge gv0 gv1 = l2 ++ gv1)
(merge gv0 gv1 = l2 ++ gv0), (merge gv0 gv1 = gv1 ++ l2), (merge gv0 gv1 = gv1 ++ gv1), (merge gv0 gv1 = gv1 ++ gv0), (merge gv0 gv1 = gv0 ++ l2), (merge gv0 gv1 = gv0 ++ gv1), (merge gv0 gv1 = gv0 ++ gv0), (merge gv0 gv0 = l2), (merge gv0 gv0 = gv1), (merge gv0 gv0 = gv0)
(merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ gv1), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = gv1 ++ l2), (merge gv0 gv0 = gv1 ++ gv1), (merge gv0 gv0 = gv1 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ gv1), (merge gv0 gv0 = gv0 ++ gv0), (l2 ++ l2 = l2)
(l2 ++ l2 = gv1), (l2 ++ l2 = gv0), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv1), (l2 ++ gv1 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = gv1), (l2 ++ gv0 = gv0), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv1)
(gv1 ++ l2 = gv0), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv1), (gv1 ++ gv1 = gv0), (gv1 ++ gv0 = l2), (gv1 ++ gv0 = gv1), (gv1 ++ gv0 = gv0), (gv0 ++ l2 = l2), (gv0 ++ l2 = gv1), (gv0 ++ l2 = gv0)
(gv0 ++ gv1 = l2), (gv0 ++ gv1 = gv1), (gv0 ++ gv1 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = gv1), (gv0 ++ gv0 = gv0), ([] = l2), ([] = gv1), ([] = gv0), ([] = merge l2 l2)
([] = merge l2 gv1), ([] = merge l2 gv0), ([] = merge gv1 l2), ([] = merge gv1 gv1), ([] = merge gv1 gv0), ([] = merge gv0 l2), ([] = merge gv0 gv1), ([] = merge gv0 gv0), ([] = l2 ++ l2), ([] = l2 ++ gv1)
([] = l2 ++ gv0), ([] = gv1 ++ l2), ([] = gv1 ++ gv1), ([] = gv1 ++ gv0), ([] = gv0 ++ l2), ([] = gv0 ++ gv1), ([] = gv0 ++ gv0), ((l2, l2) = split l2), ((l2, l2) = split gv1), ((l2, l2) = split gv0)
((l2, gv1) = split l2), ((l2, gv1) = split gv1), ((l2, gv1) = split gv0), ((l2, gv0) = split l2), ((l2, gv0) = split gv1), ((l2, gv0) = split gv0), ((gv1, l2) = split l2), ((gv1, l2) = split gv1), ((gv1, l2) = split gv0), ((gv1, gv1) = split l2)
((gv1, gv1) = split gv1), ((gv1, gv1) = split gv0), ((gv1, gv0) = split l2), ((gv1, gv0) = split gv1), ((gv1, gv0) = split gv0), ((gv0, l2) = split l2), ((gv0, l2) = split gv1), ((gv0, l2) = split gv0), ((gv0, gv1) = split l2), ((gv0, gv1) = split gv1)
((gv0, gv1) = split gv0), ((gv0, gv0) = split l2), ((gv0, gv0) = split gv1), ((gv0, gv0) = split gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 39.879 seconds


Label: 0 (0)
(Permutation gv2 l2), (Permutation l2 gv2), (gv2 = l2), (l2 = gv2), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge gv2 gv2) (merge l2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2))
(Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (l2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ gv2) (merge l2 l2))

Label: 1 (1)
(Permutation l2 gv0), (Permutation gv0 l2), (l2 = gv0), (gv0 = l2), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge gv0 gv0) (merge l2 l2))
(Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (l2 ++ l2) (merge l2 gv0)), (Permutation (l2 ++ l2) (merge gv0 l2))

Label: 2 (2)
(Permutation gv2 (merge l2 gv1)), (Permutation gv2 (merge gv1 l2)), (Permutation (merge l2 gv1) gv2), (Permutation (merge gv1 l2) gv2), (merge l2 gv1 = gv2), (merge gv1 l2 = gv2), (Permutation gv2 (l2 ++ gv1)), (Permutation gv2 (gv1 ++ l2)), (Permutation (l2 ++ gv1) gv2), (Permutation (gv1 ++ l2) gv2)
(l2 ++ gv1 = gv2), (gv1 ++ l2 = gv2)

Label: 3 (3)
(Permutation gv0 (merge l2 gv1)), (Permutation gv0 (merge gv1 l2)), (Permutation (merge l2 gv1) gv0), (Permutation (merge gv1 l2) gv0), (merge l2 gv1 = gv0), (merge gv1 l2 = gv0), (Permutation gv0 (l2 ++ gv1)), (Permutation gv0 (gv1 ++ l2)), (Permutation (l2 ++ gv1) gv0), (Permutation (gv1 ++ l2) gv0)
(l2 ++ gv1 = gv0), (gv1 ++ l2 = gv0)


------------------------------ ALL RESULTS ------------------------------
1. (Permutation (gv1 ++ l2) (merge gv1 l2))

2. (Permutation ([] ++ l2) (merge [] l2))

3. (merge [] l2 = l2)

4. ([] ++ l2 = l2)

5. (Permutation l2 gv0 -> Permutation gv0 (merge [] l2))

6. (Permutation gv0 l2 -> Permutation gv0 (merge [] l2))

7. (gv2 = l2 -> Permutation ([] ++ l2) gv2)

8. (l2 = gv2 -> Permutation ([] ++ l2) gv2)

9. (l2 = gv0 -> Permutation gv0 (merge [] l2))

10. (gv0 = l2 -> Permutation gv0 (merge [] l2))

11. (Permutation gv2 (merge l2 gv1) -> Permutation (gv1 ++ l2) gv2)

12. (Permutation gv2 (merge gv1 l2) -> Permutation (gv1 ++ l2) gv2)

13. (Permutation (merge l2 gv1) gv2 -> Permutation (gv1 ++ l2) gv2)

14. (Permutation (merge gv1 l2) gv2 -> Permutation (gv1 ++ l2) gv2)

15. (Permutation gv0 (merge l2 gv1) -> Permutation gv0 (merge gv1 l2))

16. (Permutation (merge l2 gv1) gv0 -> Permutation gv0 (merge gv1 l2))

17. (merge l2 gv1 = gv2 -> Permutation (gv1 ++ l2) gv2)

18. (Permutation gv2 (l2 ++ gv1) -> Permutation (gv1 ++ l2) gv2)

19. (Permutation (l2 ++ gv1) gv2 -> Permutation (gv1 ++ l2) gv2)

20. (merge l2 gv1 = gv0 -> Permutation gv0 (merge gv1 l2))

21. (merge gv1 l2 = gv0 -> Permutation gv0 (merge gv1 l2))

22. (Permutation gv0 (l2 ++ gv1) -> Permutation gv0 (merge gv1 l2))

23. (Permutation gv0 (gv1 ++ l2) -> Permutation gv0 (merge gv1 l2))

24. (Permutation (l2 ++ gv1) gv0 -> Permutation gv0 (merge gv1 l2))

25. (Permutation (gv1 ++ l2) gv0 -> Permutation gv0 (merge gv1 l2))

26. (Permutation (merge gv2 l2) (merge l2 l2) -> Permutation ([] ++ l2) gv2)

27. (Permutation (merge l2 gv2) (merge l2 l2) -> Permutation ([] ++ l2) gv2)

28. (Permutation (merge l2 l2) (merge gv2 l2) -> Permutation ([] ++ l2) gv2)

29. (Permutation (merge l2 l2) (merge l2 gv2) -> Permutation ([] ++ l2) gv2)

30. (Permutation (merge gv2 gv2) (merge l2 l2) -> Permutation ([] ++ l2) gv2)

31. (Permutation (merge l2 l2) (merge gv2 gv2) -> Permutation ([] ++ l2) gv2)

32. (Permutation (merge gv2 gv2) (merge gv2 l2) -> Permutation ([] ++ l2) gv2)

33. (Permutation (merge gv2 gv2) (merge l2 gv2) -> Permutation ([] ++ l2) gv2)

34. (Permutation (merge gv2 l2) (merge gv2 gv2) -> Permutation ([] ++ l2) gv2)

35. (Permutation (merge l2 gv2) (merge gv2 gv2) -> Permutation ([] ++ l2) gv2)

36. (Permutation (merge l2 l2) (merge l2 gv0) -> Permutation gv0 (merge [] l2))

37. (Permutation (merge l2 l2) (merge gv0 l2) -> Permutation gv0 (merge [] l2))

38. (Permutation (merge l2 gv0) (merge l2 l2) -> Permutation gv0 (merge [] l2))

39. (Permutation (merge gv0 l2) (merge l2 l2) -> Permutation gv0 (merge [] l2))

40. (Permutation (merge l2 l2) (merge gv0 gv0) -> Permutation gv0 (merge [] l2))

41. (Permutation (merge gv0 gv0) (merge l2 l2) -> Permutation gv0 (merge [] l2))

42. (Permutation (merge l2 gv0) (merge gv0 gv0) -> Permutation gv0 (merge [] l2))

43. (Permutation (merge gv0 l2) (merge gv0 gv0) -> Permutation gv0 (merge [] l2))

44. (Permutation (merge gv0 gv0) (merge l2 gv0) -> Permutation gv0 (merge [] l2))

45. (Permutation (merge gv0 gv0) (merge gv0 l2) -> Permutation gv0 (merge [] l2))

46. (l2 ++ gv1 = gv2 -> Permutation (gv1 ++ l2) gv2)

47. (gv1 ++ l2 = gv2 -> Permutation (gv1 ++ l2) gv2)

48. (l2 ++ gv1 = gv0 -> Permutation gv0 (merge gv1 l2))

49. (Permutation (merge gv2 l2) (l2 ++ l2) -> Permutation ([] ++ l2) gv2)

50. (Permutation (merge l2 gv2) (l2 ++ l2) -> Permutation ([] ++ l2) gv2)

51. (Permutation (merge l2 l2) (gv2 ++ l2) -> Permutation ([] ++ l2) gv2)

52. (Permutation (merge l2 l2) (l2 ++ gv2) -> Permutation ([] ++ l2) gv2)

53. (Permutation (gv2 ++ l2) (merge l2 l2) -> Permutation ([] ++ l2) gv2)

54. (Permutation (l2 ++ gv2) (merge l2 l2) -> Permutation ([] ++ l2) gv2)

55. (Permutation (merge l2 l2) (l2 ++ gv0) -> Permutation gv0 (merge [] l2))

56. (Permutation (merge l2 l2) (gv0 ++ l2) -> Permutation gv0 (merge [] l2))

57. (Permutation (merge l2 gv0) (l2 ++ l2) -> Permutation gv0 (merge [] l2))

58. (Permutation (merge gv0 l2) (l2 ++ l2) -> Permutation gv0 (merge [] l2))

59. (Permutation (l2 ++ l2) (merge l2 gv0) -> Permutation gv0 (merge [] l2))

60. (Permutation (l2 ++ l2) (merge gv0 l2) -> Permutation gv0 (merge [] l2))



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 103.044 seconds

Number of Result Pairs Returned: 60

1. (Permutation (gv1 ++ l2) (merge gv1 l2))

2. (Permutation ([] ++ l2) (merge [] l2))

3. (merge [] l2 = l2)

4. ([] ++ l2 = l2)

5. (Permutation l2 gv0 -> Permutation gv0 (merge [] l2))
