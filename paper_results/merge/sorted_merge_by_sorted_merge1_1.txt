Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (sorted l2 -> sorted (merge (a :: n :: l1) l2))
 -- (sorted (a0 :: l2))
 -- (a <= a0)
 -- (sorted (n :: l1) ->
 forall l2 : list nat, sorted l2 -> sorted (merge (n :: l1) l2))
 -- (sorted (a :: n :: l1))

----------------------------------
Goal: (sorted (a :: merge (n :: l1) (a0 :: l2)))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.626 seconds

gv1 : (list nat) = (merge (n :: l1) (a0 :: l2))
gv3 : (list nat) = (a0 :: l2)
gv2 : (list nat) = (n :: l1)
gv0 : (list nat) = (a :: merge (n :: l1) (a0 :: l2))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 92.745 seconds

Label: Generalization #0
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (a <= a0)
 -- (sorted (a :: n :: l1))

----------------------------------
Goal: (sorted (a :: merge (n :: l1) (a0 :: l2)))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (a <= a0)
 -- (sorted (a :: gv2))

----------------------------------
Goal: (sorted (a :: merge gv2 (a0 :: l2)))
Case: Valid and Generalized

Label: Generalization #2
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (a <= a0)
 -- (a :: merge gv2 (a0 :: l2) = gv0)
 -- (sorted (a :: gv2))

----------------------------------
Goal: (sorted gv0)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (sorted gv3)
 -- (a <= a0)
 -- (a0 :: l2 = gv3)
 -- (n :: l1 = gv2)
 -- (sorted (a :: gv2))

----------------------------------
Goal: (sorted (a :: merge gv2 gv3))
Case: Invalid and Generalized

Label: Generalization #4
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (merge gv2 (a0 :: l2) = gv1)
 -- (a <= a0)
 -- (sorted (a :: gv2))

----------------------------------
Goal: (sorted (a :: gv1))
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (a <= a0)
 -- (a :: merge (n :: l1) (a0 :: l2) = gv0)
 -- (sorted (a :: n :: l1))

----------------------------------
Goal: (sorted gv0)
Case: Invalid and Generalized

Label: Generalization #6
Assumptions: 
 -- (sorted gv3)
 -- (a <= a0)
 -- (a0 :: l2 = gv3)
 -- (sorted (a :: n :: l1))

----------------------------------
Goal: (sorted (a :: merge (n :: l1) gv3))
Case: Invalid and Generalized

Label: Generalization #7
Assumptions: 
 -- (sorted (a0 :: l2))
 -- (merge (n :: l1) (a0 :: l2) = gv1)
 -- (a <= a0)
 -- (sorted (a :: n :: l1))

----------------------------------
Goal: (sorted (a :: gv1))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 93.003 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
@split : (forall X : Type, list X -> list X * list X)
merge : (list nat -> list nat -> list nat)
le_all : (nat -> list nat -> Prop)
list_ind2 : (forall (A : Type) (P : list A -> Prop),
 P [] ->
 (forall a : A, P [a]) ->
 (forall (a b : A) (l : list A), P l -> P (a :: b :: l)) ->
 forall l : list A, P l)

Label: 0 (0)
Abducted Assumption: (sorted (a0 :: l2))
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Abducted Assumption: (a <= a0)
Positive Examples: 500
Negative Examples: 144

Label: 2 (2)
Abducted Assumption: (sorted (a :: n :: l1))
Positive Examples: 500
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 166
Negative Examples: 239

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 144
Negative Examples: 243

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 179
Negative Examples: 301

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 111
Negative Examples: 144

Label: 7 (7)
Inferring Condition About Generalization
Positive Examples: 154
Negative Examples: 103

Label: 8 (8)
Inferring Condition About Generalization
Positive Examples: 126
Negative Examples: 181


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 94.239 seconds


Label: 0 (0)
(a0 <=* l2), (a0 <=* l1), (n <=* l2), (n <=* l1), (a <=* l2), (a <=* l1), (sorted l2), (sorted l1), (Permutation l2 l2), (Permutation l2 l1)
(Permutation l1 l2), (Permutation l1 l1), (In a0 l2), (In a0 l1), (In n l2), (In n l1), (In a l2), (In a l1), (a0 < a0), (a0 < n)
(a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0), (a0 <= n), (a0 <= a)
(n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1)
(a0 = a0), (a0 = n), (a0 = a), (n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2)
(a0 <=* a0 :: l1), (a0 <=* n :: l2), (a0 <=* n :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2)
(a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* n :: l2), (n <=* n :: l1), (n <=* a :: l2), (n <=* a :: l1)
(n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l1 l2), (n <=* merge l1 l1), (n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* []), (a <=* a0 :: l2)
(a <=* a0 :: l1), (a <=* n :: l2), (a <=* n :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* l2 ++ l2)
(a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* n :: l2), (length l2 <=* n :: l1)
(length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* n :: l2), (length l1 <=* n :: l1), (length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* merge l2 l2)
(length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1))
(sorted (n :: l2)), (sorted (n :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1))
(sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (merge l2 l2))
(Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 []), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1))
(Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1))
(Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2)
(Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2)), (Permutation (a0 :: l1) (merge l1 l1))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: l1)), (Permutation (n :: l2) (n :: l1))
(Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l1 l2)), (Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1))
(Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1))
(Permutation (n :: l1) (merge l1 l2)), (Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1)), (Permutation (n :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2))
(Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1))
(Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (a :: l2))
(Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (merge l2 l2) l2)
(Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1))
(Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (n :: l2))
(Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1))
(Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (merge l2 l2))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a0 :: l1)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1))
(Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (a :: l2))
(Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2)
(Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2))
(Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1)), (Permutation (l2 ++ l1) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (n :: l2))
(Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1))
(Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (merge l2 l2))
(Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] (a0 :: l2))
(Permutation [] (a0 :: l1)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (l2 ++ l2))
(Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (n :: l2)), (In a0 (n :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (merge l2 l2))
(In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (n :: l2))
(In n (n :: l1)), (In n (a :: l2)), (In n (a :: l1)), (In n (merge l2 l2)), (In n (merge l2 l1)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l1 ++ l2))
(In n (l1 ++ l1)), (In a (a0 :: l2)), (In a (a0 :: l1)), (In a (n :: l2)), (In a (n :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2))
(In a (merge l1 l1)), (In a (l2 ++ l2)), (In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1), (In (length l2) (a0 :: l2)), (In (length l2) (a0 :: l1)), (In (length l2) (n :: l2))
(In (length l2) (n :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l1 ++ l2))
(In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (merge l2 l2))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < length l2), (a0 < length l1), (n < length l2)
(n < length l1), (a < length l2), (a < length l1), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length l1), (length l1 < a0), (length l1 < n), (length l1 < a)
(length l1 < length l2), (a0 <= length l2), (a0 <= length l1), (n <= length l2), (n <= length l1), (a <= length l2), (a <= length l1), (length l2 <= a0), (length l2 <= n), (length l2 <= a)
(length l2 <= length l1), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (~ a0 <=* l2), (~ a0 <=* l1), (~ n <=* l2), (~ n <=* l1), (~ a <=* l2)
(~ a <=* l1), (~ sorted l2), (~ sorted l1), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l1 l2), (~ Permutation l1 l1), (~ In a0 l2), (~ In a0 l1), (~ In n l2)
(~ In n l1), (~ In a l2), (~ In a l1), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a), (~ a < a0)
(~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0), (~ a <= n)
(~ a <= a), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n)
(n <> a), (a <> a0), (a <> n), (a <> a), (None = Some l2), (None = Some l1), (a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1)
(a0 :: l2 = merge l1 l2), (a0 :: l2 = merge l1 l1), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = merge l2 l2)
(a0 :: l1 = merge l2 l1), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = []), (n :: l2 = l2), (n :: l2 = l1)
(n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = []), (n :: l1 = l2)
(n :: l1 = l1), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 l1), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ l1), (n :: l1 = [])
(a :: l2 = l2), (a :: l2 = l1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1)
(a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = l2 ++ l2), (a :: l1 = l2 ++ l1), (a :: l1 = l1 ++ l2)
(a :: l1 = l1 ++ l1), (a :: l1 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2), (merge l2 l1 = l1)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l2), (merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1)
(l1 ++ l2 = l2), (l1 ++ l2 = l1), (l1 ++ l1 = l2), (l1 ++ l1 = l1), ([] = l2), ([] = l1), ([] = merge l2 l2), ([] = merge l2 l1), ([] = merge l1 l2), ([] = merge l1 l1)
([] = l2 ++ l2), ([] = l2 ++ l1), ([] = l1 ++ l2), ([] = l1 ++ l1), (None = Some a0), (None = Some n), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l1) = split l2)
((l2, l1) = split l1), ((l1, l2) = split l2), ((l1, l2) = split l1), ((l1, l1) = split l2), ((l1, l1) = split l1), (length l2 = a0), (length l2 = n), (length l2 = a), (length l1 = a0), (length l1 = n)
(length l1 = a)

Label: 1 (1)
(a0 <=* l2), (a0 <=* l1), (n <=* l2), (n <=* l1), (a <=* l2), (a <=* l1), (sorted l2), (sorted l1), (Permutation l2 l2), (Permutation l2 l1)
(Permutation l1 l2), (Permutation l1 l1), (In a0 l2), (In a0 l1), (In n l2), (In n l1), (In a l2), (In a l1), (a0 < a0), (a0 < n)
(a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0), (a0 <= n), (a0 <= a)
(n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1)
(a0 = a0), (a0 = n), (a0 = a), (n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2)
(a0 <=* a0 :: l1), (a0 <=* n :: l2), (a0 <=* n :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2)
(a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* n :: l2), (n <=* n :: l1), (n <=* a :: l2), (n <=* a :: l1)
(n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l1 l2), (n <=* merge l1 l1), (n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* []), (a <=* a0 :: l2)
(a <=* a0 :: l1), (a <=* n :: l2), (a <=* n :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* l2 ++ l2)
(a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* n :: l2), (length l2 <=* n :: l1)
(length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* n :: l2), (length l1 <=* n :: l1), (length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* merge l2 l2)
(length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1))
(sorted (n :: l2)), (sorted (n :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1))
(sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (merge l2 l2))
(Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 []), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1))
(Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1))
(Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2)
(Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2)), (Permutation (a0 :: l1) (merge l1 l1))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: l1)), (Permutation (n :: l2) (n :: l1))
(Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l1 l2)), (Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1))
(Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1))
(Permutation (n :: l1) (merge l1 l2)), (Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1)), (Permutation (n :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2))
(Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1))
(Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (a :: l2))
(Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (merge l2 l2) l2)
(Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1))
(Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (n :: l2))
(Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1))
(Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (merge l2 l2))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a0 :: l1)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1))
(Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (a :: l2))
(Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2)
(Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2))
(Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1)), (Permutation (l2 ++ l1) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (n :: l2))
(Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1))
(Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (merge l2 l2))
(Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] (a0 :: l2))
(Permutation [] (a0 :: l1)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (l2 ++ l2))
(Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (n :: l2)), (In a0 (n :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (merge l2 l2))
(In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (n :: l2))
(In n (n :: l1)), (In n (a :: l2)), (In n (a :: l1)), (In n (merge l2 l2)), (In n (merge l2 l1)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l1 ++ l2))
(In n (l1 ++ l1)), (In a (a0 :: l2)), (In a (a0 :: l1)), (In a (n :: l2)), (In a (n :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2))
(In a (merge l1 l1)), (In a (l2 ++ l2)), (In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1), (In (length l2) (a0 :: l2)), (In (length l2) (a0 :: l1)), (In (length l2) (n :: l2))
(In (length l2) (n :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l1 ++ l2))
(In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (merge l2 l2))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < length l2), (a0 < length l1), (n < length l2)
(n < length l1), (a < length l2), (a < length l1), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length l1), (length l1 < a0), (length l1 < n), (length l1 < a)
(length l1 < length l2), (a0 <= length l2), (a0 <= length l1), (n <= length l2), (n <= length l1), (a <= length l2), (a <= length l1), (length l2 <= a0), (length l2 <= n), (length l2 <= a)
(length l2 <= length l1), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (~ a0 <=* l2), (~ a0 <=* l1), (~ n <=* l2), (~ n <=* l1), (~ a <=* l2)
(~ a <=* l1), (~ sorted l2), (~ sorted l1), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l1 l2), (~ Permutation l1 l1), (~ In a0 l2), (~ In a0 l1), (~ In n l2)
(~ In n l1), (~ In a l2), (~ In a l1), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a), (~ a < a0)
(~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0), (~ a <= n)
(~ a <= a), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n)
(n <> a), (a <> a0), (a <> n), (a <> a), (None = Some l2), (None = Some l1), (a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1)
(a0 :: l2 = merge l1 l2), (a0 :: l2 = merge l1 l1), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = merge l2 l2)
(a0 :: l1 = merge l2 l1), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = []), (n :: l2 = l2), (n :: l2 = l1)
(n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = []), (n :: l1 = l2)
(n :: l1 = l1), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 l1), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ l1), (n :: l1 = [])
(a :: l2 = l2), (a :: l2 = l1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1)
(a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = l2 ++ l2), (a :: l1 = l2 ++ l1), (a :: l1 = l1 ++ l2)
(a :: l1 = l1 ++ l1), (a :: l1 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2), (merge l2 l1 = l1)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l2), (merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1)
(l1 ++ l2 = l2), (l1 ++ l2 = l1), (l1 ++ l1 = l2), (l1 ++ l1 = l1), ([] = l2), ([] = l1), ([] = merge l2 l2), ([] = merge l2 l1), ([] = merge l1 l2), ([] = merge l1 l1)
([] = l2 ++ l2), ([] = l2 ++ l1), ([] = l1 ++ l2), ([] = l1 ++ l1), (None = Some a0), (None = Some n), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l1) = split l2)
((l2, l1) = split l1), ((l1, l2) = split l2), ((l1, l2) = split l1), ((l1, l1) = split l2), ((l1, l1) = split l1), (length l2 = a0), (length l2 = n), (length l2 = a), (length l1 = a0), (length l1 = n)
(length l1 = a)

Label: 2 (2)
(a0 <=* l2), (a0 <=* l1), (n <=* l2), (n <=* l1), (a <=* l2), (a <=* l1), (sorted l2), (sorted l1), (Permutation l2 l2), (Permutation l2 l1)
(Permutation l1 l2), (Permutation l1 l1), (In a0 l2), (In a0 l1), (In n l2), (In n l1), (In a l2), (In a l1), (a0 < a0), (a0 < n)
(a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0), (a0 <= n), (a0 <= a)
(n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (l2 = l2), (l2 = l1), (l1 = l2), (l1 = l1)
(a0 = a0), (a0 = n), (a0 = a), (n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2)
(a0 <=* a0 :: l1), (a0 <=* n :: l2), (a0 <=* n :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2)
(a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* n :: l2), (n <=* n :: l1), (n <=* a :: l2), (n <=* a :: l1)
(n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l1 l2), (n <=* merge l1 l1), (n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* []), (a <=* a0 :: l2)
(a <=* a0 :: l1), (a <=* n :: l2), (a <=* n :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* l2 ++ l2)
(a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* n :: l2), (length l2 <=* n :: l1)
(length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* n :: l2), (length l1 <=* n :: l1), (length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* merge l2 l2)
(length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1))
(sorted (n :: l2)), (sorted (n :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1))
(sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (merge l2 l2))
(Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 []), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1))
(Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1))
(Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2)
(Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2)), (Permutation (a0 :: l1) (merge l1 l1))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: l1)), (Permutation (n :: l2) (n :: l1))
(Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l1 l2)), (Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1))
(Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1))
(Permutation (n :: l1) (merge l1 l2)), (Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1)), (Permutation (n :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2))
(Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1))
(Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (a :: l2))
(Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (merge l2 l2) l2)
(Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1))
(Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (n :: l2))
(Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1))
(Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (merge l2 l2))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a0 :: l1)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1))
(Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (a :: l2))
(Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2)
(Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2))
(Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1)), (Permutation (l2 ++ l1) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (n :: l2))
(Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1))
(Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (merge l2 l2))
(Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] (a0 :: l2))
(Permutation [] (a0 :: l1)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (l2 ++ l2))
(Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (n :: l2)), (In a0 (n :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (merge l2 l2))
(In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (n :: l2))
(In n (n :: l1)), (In n (a :: l2)), (In n (a :: l1)), (In n (merge l2 l2)), (In n (merge l2 l1)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l1 ++ l2))
(In n (l1 ++ l1)), (In a (a0 :: l2)), (In a (a0 :: l1)), (In a (n :: l2)), (In a (n :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2))
(In a (merge l1 l1)), (In a (l2 ++ l2)), (In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1), (In (length l2) (a0 :: l2)), (In (length l2) (a0 :: l1)), (In (length l2) (n :: l2))
(In (length l2) (n :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l1 ++ l2))
(In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (merge l2 l2))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < length l2), (a0 < length l1), (n < length l2)
(n < length l1), (a < length l2), (a < length l1), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length l1), (length l1 < a0), (length l1 < n), (length l1 < a)
(length l1 < length l2), (a0 <= length l2), (a0 <= length l1), (n <= length l2), (n <= length l1), (a <= length l2), (a <= length l1), (length l2 <= a0), (length l2 <= n), (length l2 <= a)
(length l2 <= length l1), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (~ a0 <=* l2), (~ a0 <=* l1), (~ n <=* l2), (~ n <=* l1), (~ a <=* l2)
(~ a <=* l1), (~ sorted l2), (~ sorted l1), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l1 l2), (~ Permutation l1 l1), (~ In a0 l2), (~ In a0 l1), (~ In n l2)
(~ In n l1), (~ In a l2), (~ In a l1), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a), (~ a < a0)
(~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0), (~ a <= n)
(~ a <= a), (l2 <> l2), (l2 <> l1), (l1 <> l2), (l1 <> l1), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n)
(n <> a), (a <> a0), (a <> n), (a <> a), (None = Some l2), (None = Some l1), (a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1)
(a0 :: l2 = merge l1 l2), (a0 :: l2 = merge l1 l1), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = merge l2 l2)
(a0 :: l1 = merge l2 l1), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = []), (n :: l2 = l2), (n :: l2 = l1)
(n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = []), (n :: l1 = l2)
(n :: l1 = l1), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 l1), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ l1), (n :: l1 = [])
(a :: l2 = l2), (a :: l2 = l1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1)
(a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = l2 ++ l2), (a :: l1 = l2 ++ l1), (a :: l1 = l1 ++ l2)
(a :: l1 = l1 ++ l1), (a :: l1 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2), (merge l2 l1 = l1)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l2), (merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1)
(l1 ++ l2 = l2), (l1 ++ l2 = l1), (l1 ++ l1 = l2), (l1 ++ l1 = l1), ([] = l2), ([] = l1), ([] = merge l2 l2), ([] = merge l2 l1), ([] = merge l1 l2), ([] = merge l1 l1)
([] = l2 ++ l2), ([] = l2 ++ l1), ([] = l1 ++ l2), ([] = l1 ++ l1), (None = Some a0), (None = Some n), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l1) = split l2)
((l2, l1) = split l1), ((l1, l2) = split l2), ((l1, l2) = split l1), ((l1, l1) = split l2), ((l1, l1) = split l1), (length l2 = a0), (length l2 = n), (length l2 = a), (length l1 = a0), (length l1 = n)
(length l1 = a)

Label: 3 (3)
(a0 <=* l2), (a0 <=* gv2), (a0 <=* gv0), (a <=* l2), (a <=* gv2), (a <=* gv0), (sorted l2), (sorted gv2), (sorted gv0), (Permutation l2 l2)
(Permutation l2 gv2), (Permutation l2 gv0), (Permutation gv2 l2), (Permutation gv2 gv2), (Permutation gv2 gv0), (Permutation gv0 l2), (Permutation gv0 gv2), (Permutation gv0 gv0), (In a0 l2), (In a0 gv2)
(In a0 gv0), (In a l2), (In a gv2), (In a gv0), (a0 < a0), (a0 < a), (a < a0), (a < a), (a0 <= a0), (a0 <= a)
(a <= a0), (a <= a), (a0 = a0), (a0 = a), (a = a0), (a = a), (l2 = l2), (l2 = gv2), (l2 = gv0), (gv2 = l2)
(gv2 = gv2), (gv2 = gv0), (gv0 = l2), (gv0 = gv2), (gv0 = gv0), (a0 <=* a0 :: l2), (a0 <=* a0 :: gv2), (a0 <=* a0 :: gv0), (a0 <=* a :: l2), (a0 <=* a :: gv2)
(a0 <=* a :: gv0), (a0 <=* merge l2 l2), (a0 <=* merge l2 gv2), (a0 <=* merge l2 gv0), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 gv0), (a0 <=* merge gv0 l2), (a0 <=* merge gv0 gv2), (a0 <=* merge gv0 gv0)
(a0 <=* l2 ++ l2), (a0 <=* l2 ++ gv2), (a0 <=* l2 ++ gv0), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ gv0), (a0 <=* gv0 ++ l2), (a0 <=* gv0 ++ gv2), (a0 <=* gv0 ++ gv0), (a0 <=* [])
(a <=* a0 :: l2), (a <=* a0 :: gv2), (a <=* a0 :: gv0), (a <=* a :: l2), (a <=* a :: gv2), (a <=* a :: gv0), (a <=* merge l2 l2), (a <=* merge l2 gv2), (a <=* merge l2 gv0), (a <=* merge gv2 l2)
(a <=* merge gv2 gv2), (a <=* merge gv2 gv0), (a <=* merge gv0 l2), (a <=* merge gv0 gv2), (a <=* merge gv0 gv0), (a <=* l2 ++ l2), (a <=* l2 ++ gv2), (a <=* l2 ++ gv0), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2)
(a <=* gv2 ++ gv0), (a <=* gv0 ++ l2), (a <=* gv0 ++ gv2), (a <=* gv0 ++ gv0), (a <=* []), (length l2 <=* l2), (length l2 <=* gv2), (length l2 <=* gv0), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: gv2)
(length l2 <=* a0 :: gv0), (length l2 <=* a :: l2), (length l2 <=* a :: gv2), (length l2 <=* a :: gv0), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv2), (length l2 <=* merge l2 gv0), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 gv0)
(length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 gv2), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ gv2), (length l2 <=* l2 ++ gv0), (length l2 <=* gv2 ++ l2), (length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ gv0), (length l2 <=* gv0 ++ l2)
(length l2 <=* gv0 ++ gv2), (length l2 <=* gv0 ++ gv0), (length l2 <=* []), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* gv0), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: gv0), (length gv2 <=* a :: l2)
(length gv2 <=* a :: gv2), (length gv2 <=* a :: gv0), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 gv0), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 gv0), (length gv2 <=* merge gv0 l2), (length gv2 <=* merge gv0 gv2)
(length gv2 <=* merge gv0 gv0), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ gv0), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ gv0), (length gv2 <=* gv0 ++ l2), (length gv2 <=* gv0 ++ gv2), (length gv2 <=* gv0 ++ gv0)
(length gv2 <=* []), (length gv0 <=* l2), (length gv0 <=* gv2), (length gv0 <=* gv0), (length gv0 <=* a0 :: l2), (length gv0 <=* a0 :: gv2), (length gv0 <=* a0 :: gv0), (length gv0 <=* a :: l2), (length gv0 <=* a :: gv2), (length gv0 <=* a :: gv0)
(length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 gv2), (length gv0 <=* merge l2 gv0), (length gv0 <=* merge gv2 l2), (length gv0 <=* merge gv2 gv2), (length gv0 <=* merge gv2 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 gv2), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2)
(length gv0 <=* l2 ++ gv2), (length gv0 <=* l2 ++ gv0), (length gv0 <=* gv2 ++ l2), (length gv0 <=* gv2 ++ gv2), (length gv0 <=* gv2 ++ gv0), (length gv0 <=* gv0 ++ l2), (length gv0 <=* gv0 ++ gv2), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted (a0 :: l2))
(sorted (a0 :: gv2)), (sorted (a0 :: gv0)), (sorted (a :: l2)), (sorted (a :: gv2)), (sorted (a :: gv0)), (sorted (merge l2 l2)), (sorted (merge l2 gv2)), (sorted (merge l2 gv0)), (sorted (merge gv2 l2)), (sorted (merge gv2 gv2))
(sorted (merge gv2 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv0 gv2)), (sorted (merge gv0 gv0)), (sorted (l2 ++ l2)), (sorted (l2 ++ gv2)), (sorted (l2 ++ gv0)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ gv0))
(sorted (gv0 ++ l2)), (sorted (gv0 ++ gv2)), (sorted (gv0 ++ gv0)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a0 :: gv0)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: gv2)), (Permutation l2 (a :: gv0))
(Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 gv2)), (Permutation l2 (merge l2 gv0)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 gv2)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ l2))
(Permutation l2 (l2 ++ gv2)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ gv2)), (Permutation l2 (gv0 ++ gv0)), (Permutation l2 []), (Permutation gv2 (a0 :: l2))
(Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: gv0)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: gv0)), (Permutation gv2 (merge l2 l2)), (Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 gv0)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2))
(Permutation gv2 (merge gv2 gv0)), (Permutation gv2 (merge gv0 l2)), (Permutation gv2 (merge gv0 gv2)), (Permutation gv2 (merge gv0 gv0)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2)), (Permutation gv2 (l2 ++ gv0)), (Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ gv0))
(Permutation gv2 (gv0 ++ l2)), (Permutation gv2 (gv0 ++ gv2)), (Permutation gv2 (gv0 ++ gv0)), (Permutation gv2 []), (Permutation gv0 (a0 :: l2)), (Permutation gv0 (a0 :: gv2)), (Permutation gv0 (a0 :: gv0)), (Permutation gv0 (a :: l2)), (Permutation gv0 (a :: gv2)), (Permutation gv0 (a :: gv0))
(Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 gv2)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge gv2 l2)), (Permutation gv0 (merge gv2 gv2)), (Permutation gv0 (merge gv2 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 gv2)), (Permutation gv0 (merge gv0 gv0)), (Permutation gv0 (l2 ++ l2))
(Permutation gv0 (l2 ++ gv2)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (gv2 ++ l2)), (Permutation gv0 (gv2 ++ gv2)), (Permutation gv0 (gv2 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ gv2)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (a0 :: l2) l2)
(Permutation (a0 :: l2) gv2), (Permutation (a0 :: l2) gv0), (Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a0 :: gv0)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (a :: gv0)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge l2 gv0))
(Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 gv0)), (Permutation (a0 :: l2) (merge gv0 l2)), (Permutation (a0 :: l2) (merge gv0 gv2)), (Permutation (a0 :: l2) (merge gv0 gv0)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (l2 ++ gv0)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ gv0)), (Permutation (a0 :: l2) (gv0 ++ l2)), (Permutation (a0 :: l2) (gv0 ++ gv2)), (Permutation (a0 :: l2) (gv0 ++ gv0)), (Permutation (a0 :: l2) []), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) gv0), (Permutation (a0 :: gv2) (a0 :: l2))
(Permutation (a0 :: gv2) (a0 :: gv0)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: gv0)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 gv0)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 gv0))
(Permutation (a0 :: gv2) (merge gv0 l2)), (Permutation (a0 :: gv2) (merge gv0 gv2)), (Permutation (a0 :: gv2) (merge gv0 gv0)), (Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ gv0)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ gv0)), (Permutation (a0 :: gv2) (gv0 ++ l2))
(Permutation (a0 :: gv2) (gv0 ++ gv2)), (Permutation (a0 :: gv2) (gv0 ++ gv0)), (Permutation (a0 :: gv2) []), (Permutation (a0 :: gv0) l2), (Permutation (a0 :: gv0) gv2), (Permutation (a0 :: gv0) gv0), (Permutation (a0 :: gv0) (a0 :: l2)), (Permutation (a0 :: gv0) (a0 :: gv2)), (Permutation (a0 :: gv0) (a :: l2)), (Permutation (a0 :: gv0) (a :: gv2))
(Permutation (a0 :: gv0) (a :: gv0)), (Permutation (a0 :: gv0) (merge l2 l2)), (Permutation (a0 :: gv0) (merge l2 gv2)), (Permutation (a0 :: gv0) (merge l2 gv0)), (Permutation (a0 :: gv0) (merge gv2 l2)), (Permutation (a0 :: gv0) (merge gv2 gv2)), (Permutation (a0 :: gv0) (merge gv2 gv0)), (Permutation (a0 :: gv0) (merge gv0 l2)), (Permutation (a0 :: gv0) (merge gv0 gv2)), (Permutation (a0 :: gv0) (merge gv0 gv0))
(Permutation (a0 :: gv0) (l2 ++ l2)), (Permutation (a0 :: gv0) (l2 ++ gv2)), (Permutation (a0 :: gv0) (l2 ++ gv0)), (Permutation (a0 :: gv0) (gv2 ++ l2)), (Permutation (a0 :: gv0) (gv2 ++ gv2)), (Permutation (a0 :: gv0) (gv2 ++ gv0)), (Permutation (a0 :: gv0) (gv0 ++ l2)), (Permutation (a0 :: gv0) (gv0 ++ gv2)), (Permutation (a0 :: gv0) (gv0 ++ gv0)), (Permutation (a0 :: gv0) [])
(Permutation (a :: l2) l2), (Permutation (a :: l2) gv2), (Permutation (a :: l2) gv0), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a0 :: gv0)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (a :: gv0)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 gv2))
(Permutation (a :: l2) (merge l2 gv0)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 gv0)), (Permutation (a :: l2) (merge gv0 l2)), (Permutation (a :: l2) (merge gv0 gv2)), (Permutation (a :: l2) (merge gv0 gv0)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (l2 ++ gv0))
(Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ gv0)), (Permutation (a :: l2) (gv0 ++ l2)), (Permutation (a :: l2) (gv0 ++ gv2)), (Permutation (a :: l2) (gv0 ++ gv0)), (Permutation (a :: l2) []), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) gv0)
(Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2)), (Permutation (a :: gv2) (a0 :: gv0)), (Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: gv0)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 gv0)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge gv2 gv0)), (Permutation (a :: gv2) (merge gv0 l2)), (Permutation (a :: gv2) (merge gv0 gv2)), (Permutation (a :: gv2) (merge gv0 gv0)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ gv0)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ gv0))
(Permutation (a :: gv2) (gv0 ++ l2)), (Permutation (a :: gv2) (gv0 ++ gv2)), (Permutation (a :: gv2) (gv0 ++ gv0)), (Permutation (a :: gv2) []), (Permutation (a :: gv0) l2), (Permutation (a :: gv0) gv2), (Permutation (a :: gv0) gv0), (Permutation (a :: gv0) (a0 :: l2)), (Permutation (a :: gv0) (a0 :: gv2)), (Permutation (a :: gv0) (a0 :: gv0))
(Permutation (a :: gv0) (a :: l2)), (Permutation (a :: gv0) (a :: gv2)), (Permutation (a :: gv0) (merge l2 l2)), (Permutation (a :: gv0) (merge l2 gv2)), (Permutation (a :: gv0) (merge l2 gv0)), (Permutation (a :: gv0) (merge gv2 l2)), (Permutation (a :: gv0) (merge gv2 gv2)), (Permutation (a :: gv0) (merge gv2 gv0)), (Permutation (a :: gv0) (merge gv0 l2)), (Permutation (a :: gv0) (merge gv0 gv2))
(Permutation (a :: gv0) (merge gv0 gv0)), (Permutation (a :: gv0) (l2 ++ l2)), (Permutation (a :: gv0) (l2 ++ gv2)), (Permutation (a :: gv0) (l2 ++ gv0)), (Permutation (a :: gv0) (gv2 ++ l2)), (Permutation (a :: gv0) (gv2 ++ gv2)), (Permutation (a :: gv0) (gv2 ++ gv0)), (Permutation (a :: gv0) (gv0 ++ l2)), (Permutation (a :: gv0) (gv0 ++ gv2)), (Permutation (a :: gv0) (gv0 ++ gv0))
(Permutation (a :: gv0) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: gv2)), (Permutation (merge l2 l2) (a0 :: gv0)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: gv2)), (Permutation (merge l2 l2) (a :: gv0))
(Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 gv2)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv2))
(Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ gv2)), (Permutation (merge l2 l2) (gv0 ++ gv0)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2)
(Permutation (merge l2 gv2) gv0), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: gv0)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: gv0)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 gv0)), (Permutation (merge l2 gv2) (merge gv2 l2))
(Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 gv0)), (Permutation (merge l2 gv2) (merge gv0 l2)), (Permutation (merge l2 gv2) (merge gv0 gv2)), (Permutation (merge l2 gv2) (merge gv0 gv0)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ gv2)), (Permutation (merge l2 gv2) (l2 ++ gv0)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2))
(Permutation (merge l2 gv2) (gv2 ++ gv0)), (Permutation (merge l2 gv2) (gv0 ++ l2)), (Permutation (merge l2 gv2) (gv0 ++ gv2)), (Permutation (merge l2 gv2) (gv0 ++ gv0)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) gv2), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (a0 :: l2)), (Permutation (merge l2 gv0) (a0 :: gv2))
(Permutation (merge l2 gv0) (a0 :: gv0)), (Permutation (merge l2 gv0) (a :: l2)), (Permutation (merge l2 gv0) (a :: gv2)), (Permutation (merge l2 gv0) (a :: gv0)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 gv2)), (Permutation (merge l2 gv0) (merge gv2 l2)), (Permutation (merge l2 gv0) (merge gv2 gv2)), (Permutation (merge l2 gv0) (merge gv2 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2))
(Permutation (merge l2 gv0) (merge gv0 gv2)), (Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ gv2)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (gv2 ++ l2)), (Permutation (merge l2 gv0) (gv2 ++ gv2)), (Permutation (merge l2 gv0) (gv2 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ gv2))
(Permutation (merge l2 gv0) (gv0 ++ gv0)), (Permutation (merge l2 gv0) []), (Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) gv0), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: gv0)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2))
(Permutation (merge gv2 l2) (a :: gv0)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 gv0)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 gv0)), (Permutation (merge gv2 l2) (merge gv0 l2)), (Permutation (merge gv2 l2) (merge gv0 gv2)), (Permutation (merge gv2 l2) (merge gv0 gv0)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ gv2)), (Permutation (merge gv2 l2) (l2 ++ gv0)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ gv0)), (Permutation (merge gv2 l2) (gv0 ++ l2)), (Permutation (merge gv2 l2) (gv0 ++ gv2)), (Permutation (merge gv2 l2) (gv0 ++ gv0)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2)
(Permutation (merge gv2 gv2) gv2), (Permutation (merge gv2 gv2) gv0), (Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: gv0)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: gv0)), (Permutation (merge gv2 gv2) (merge l2 l2)), (Permutation (merge gv2 gv2) (merge l2 gv2))
(Permutation (merge gv2 gv2) (merge l2 gv0)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 gv0)), (Permutation (merge gv2 gv2) (merge gv0 l2)), (Permutation (merge gv2 gv2) (merge gv0 gv2)), (Permutation (merge gv2 gv2) (merge gv0 gv0)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ gv0)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ gv2)), (Permutation (merge gv2 gv2) (gv2 ++ gv0)), (Permutation (merge gv2 gv2) (gv0 ++ l2)), (Permutation (merge gv2 gv2) (gv0 ++ gv2)), (Permutation (merge gv2 gv2) (gv0 ++ gv0)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 gv0) l2), (Permutation (merge gv2 gv0) gv2), (Permutation (merge gv2 gv0) gv0), (Permutation (merge gv2 gv0) (a0 :: l2))
(Permutation (merge gv2 gv0) (a0 :: gv2)), (Permutation (merge gv2 gv0) (a0 :: gv0)), (Permutation (merge gv2 gv0) (a :: l2)), (Permutation (merge gv2 gv0) (a :: gv2)), (Permutation (merge gv2 gv0) (a :: gv0)), (Permutation (merge gv2 gv0) (merge l2 l2)), (Permutation (merge gv2 gv0) (merge l2 gv2)), (Permutation (merge gv2 gv0) (merge l2 gv0)), (Permutation (merge gv2 gv0) (merge gv2 l2)), (Permutation (merge gv2 gv0) (merge gv2 gv2))
(Permutation (merge gv2 gv0) (merge gv0 l2)), (Permutation (merge gv2 gv0) (merge gv0 gv2)), (Permutation (merge gv2 gv0) (merge gv0 gv0)), (Permutation (merge gv2 gv0) (l2 ++ l2)), (Permutation (merge gv2 gv0) (l2 ++ gv2)), (Permutation (merge gv2 gv0) (l2 ++ gv0)), (Permutation (merge gv2 gv0) (gv2 ++ l2)), (Permutation (merge gv2 gv0) (gv2 ++ gv2)), (Permutation (merge gv2 gv0) (gv2 ++ gv0)), (Permutation (merge gv2 gv0) (gv0 ++ l2))
(Permutation (merge gv2 gv0) (gv0 ++ gv2)), (Permutation (merge gv2 gv0) (gv0 ++ gv0)), (Permutation (merge gv2 gv0) []), (Permutation (merge gv0 l2) l2), (Permutation (merge gv0 l2) gv2), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (a0 :: l2)), (Permutation (merge gv0 l2) (a0 :: gv2)), (Permutation (merge gv0 l2) (a0 :: gv0)), (Permutation (merge gv0 l2) (a :: l2))
(Permutation (merge gv0 l2) (a :: gv2)), (Permutation (merge gv0 l2) (a :: gv0)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 gv2)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge gv2 l2)), (Permutation (merge gv0 l2) (merge gv2 gv2)), (Permutation (merge gv0 l2) (merge gv2 gv0)), (Permutation (merge gv0 l2) (merge gv0 gv2)), (Permutation (merge gv0 l2) (merge gv0 gv0))
(Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ gv2)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (gv2 ++ l2)), (Permutation (merge gv0 l2) (gv2 ++ gv2)), (Permutation (merge gv0 l2) (gv2 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ gv2)), (Permutation (merge gv0 l2) (gv0 ++ gv0)), (Permutation (merge gv0 l2) [])
(Permutation (merge gv0 gv2) l2), (Permutation (merge gv0 gv2) gv2), (Permutation (merge gv0 gv2) gv0), (Permutation (merge gv0 gv2) (a0 :: l2)), (Permutation (merge gv0 gv2) (a0 :: gv2)), (Permutation (merge gv0 gv2) (a0 :: gv0)), (Permutation (merge gv0 gv2) (a :: l2)), (Permutation (merge gv0 gv2) (a :: gv2)), (Permutation (merge gv0 gv2) (a :: gv0)), (Permutation (merge gv0 gv2) (merge l2 l2))
(Permutation (merge gv0 gv2) (merge l2 gv2)), (Permutation (merge gv0 gv2) (merge l2 gv0)), (Permutation (merge gv0 gv2) (merge gv2 l2)), (Permutation (merge gv0 gv2) (merge gv2 gv2)), (Permutation (merge gv0 gv2) (merge gv2 gv0)), (Permutation (merge gv0 gv2) (merge gv0 l2)), (Permutation (merge gv0 gv2) (merge gv0 gv0)), (Permutation (merge gv0 gv2) (l2 ++ l2)), (Permutation (merge gv0 gv2) (l2 ++ gv2)), (Permutation (merge gv0 gv2) (l2 ++ gv0))
(Permutation (merge gv0 gv2) (gv2 ++ l2)), (Permutation (merge gv0 gv2) (gv2 ++ gv2)), (Permutation (merge gv0 gv2) (gv2 ++ gv0)), (Permutation (merge gv0 gv2) (gv0 ++ l2)), (Permutation (merge gv0 gv2) (gv0 ++ gv2)), (Permutation (merge gv0 gv2) (gv0 ++ gv0)), (Permutation (merge gv0 gv2) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) gv2), (Permutation (merge gv0 gv0) gv0)
(Permutation (merge gv0 gv0) (a0 :: l2)), (Permutation (merge gv0 gv0) (a0 :: gv2)), (Permutation (merge gv0 gv0) (a0 :: gv0)), (Permutation (merge gv0 gv0) (a :: l2)), (Permutation (merge gv0 gv0) (a :: gv2)), (Permutation (merge gv0 gv0) (a :: gv0)), (Permutation (merge gv0 gv0) (merge l2 l2)), (Permutation (merge gv0 gv0) (merge l2 gv2)), (Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge gv2 l2))
(Permutation (merge gv0 gv0) (merge gv2 gv2)), (Permutation (merge gv0 gv0) (merge gv2 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 gv2)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ gv2)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (gv2 ++ l2)), (Permutation (merge gv0 gv0) (gv2 ++ gv2)), (Permutation (merge gv0 gv0) (gv2 ++ gv0))
(Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ gv2)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a0 :: gv0))
(Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (a :: gv0)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv2)), (Permutation (l2 ++ l2) (merge l2 gv0)), (Permutation (l2 ++ l2) (merge gv2 l2)), (Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 gv0)), (Permutation (l2 ++ l2) (merge gv0 l2))
(Permutation (l2 ++ l2) (merge gv0 gv2)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ gv2)), (Permutation (l2 ++ l2) (gv0 ++ gv0))
(Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2), (Permutation (l2 ++ gv2) gv0), (Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: gv0)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: gv0))
(Permutation (l2 ++ gv2) (merge l2 l2)), (Permutation (l2 ++ gv2) (merge l2 gv2)), (Permutation (l2 ++ gv2) (merge l2 gv0)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 gv0)), (Permutation (l2 ++ gv2) (merge gv0 l2)), (Permutation (l2 ++ gv2) (merge gv0 gv2)), (Permutation (l2 ++ gv2) (merge gv0 gv0)), (Permutation (l2 ++ gv2) (l2 ++ l2))
(Permutation (l2 ++ gv2) (l2 ++ gv0)), (Permutation (l2 ++ gv2) (gv2 ++ l2)), (Permutation (l2 ++ gv2) (gv2 ++ gv2)), (Permutation (l2 ++ gv2) (gv2 ++ gv0)), (Permutation (l2 ++ gv2) (gv0 ++ l2)), (Permutation (l2 ++ gv2) (gv0 ++ gv2)), (Permutation (l2 ++ gv2) (gv0 ++ gv0)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) gv2)
(Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (a0 :: l2)), (Permutation (l2 ++ gv0) (a0 :: gv2)), (Permutation (l2 ++ gv0) (a0 :: gv0)), (Permutation (l2 ++ gv0) (a :: l2)), (Permutation (l2 ++ gv0) (a :: gv2)), (Permutation (l2 ++ gv0) (a :: gv0)), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 gv2)), (Permutation (l2 ++ gv0) (merge l2 gv0))
(Permutation (l2 ++ gv0) (merge gv2 l2)), (Permutation (l2 ++ gv0) (merge gv2 gv2)), (Permutation (l2 ++ gv0) (merge gv2 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 gv2)), (Permutation (l2 ++ gv0) (merge gv0 gv0)), (Permutation (l2 ++ gv0) (l2 ++ l2)), (Permutation (l2 ++ gv0) (l2 ++ gv2)), (Permutation (l2 ++ gv0) (gv2 ++ l2)), (Permutation (l2 ++ gv0) (gv2 ++ gv2))
(Permutation (l2 ++ gv0) (gv2 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ gv2)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2), (Permutation (gv2 ++ l2) gv0), (Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2))
(Permutation (gv2 ++ l2) (a0 :: gv0)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: gv0)), (Permutation (gv2 ++ l2) (merge l2 l2)), (Permutation (gv2 ++ l2) (merge l2 gv2)), (Permutation (gv2 ++ l2) (merge l2 gv0)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 gv0))
(Permutation (gv2 ++ l2) (merge gv0 l2)), (Permutation (gv2 ++ l2) (merge gv0 gv2)), (Permutation (gv2 ++ l2) (merge gv0 gv0)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ gv0)), (Permutation (gv2 ++ l2) (gv2 ++ gv2)), (Permutation (gv2 ++ l2) (gv2 ++ gv0)), (Permutation (gv2 ++ l2) (gv0 ++ l2)), (Permutation (gv2 ++ l2) (gv0 ++ gv2))
(Permutation (gv2 ++ l2) (gv0 ++ gv0)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) gv0), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2)), (Permutation (gv2 ++ gv2) (a0 :: gv0)), (Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2))
(Permutation (gv2 ++ gv2) (a :: gv0)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 gv0)), (Permutation (gv2 ++ gv2) (merge gv2 l2)), (Permutation (gv2 ++ gv2) (merge gv2 gv2)), (Permutation (gv2 ++ gv2) (merge gv2 gv0)), (Permutation (gv2 ++ gv2) (merge gv0 l2)), (Permutation (gv2 ++ gv2) (merge gv0 gv2)), (Permutation (gv2 ++ gv2) (merge gv0 gv0))
(Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ gv0)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ gv0)), (Permutation (gv2 ++ gv2) (gv0 ++ l2)), (Permutation (gv2 ++ gv2) (gv0 ++ gv2)), (Permutation (gv2 ++ gv2) (gv0 ++ gv0)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ gv0) l2)
(Permutation (gv2 ++ gv0) gv2), (Permutation (gv2 ++ gv0) gv0), (Permutation (gv2 ++ gv0) (a0 :: l2)), (Permutation (gv2 ++ gv0) (a0 :: gv2)), (Permutation (gv2 ++ gv0) (a0 :: gv0)), (Permutation (gv2 ++ gv0) (a :: l2)), (Permutation (gv2 ++ gv0) (a :: gv2)), (Permutation (gv2 ++ gv0) (a :: gv0)), (Permutation (gv2 ++ gv0) (merge l2 l2)), (Permutation (gv2 ++ gv0) (merge l2 gv2))
(Permutation (gv2 ++ gv0) (merge l2 gv0)), (Permutation (gv2 ++ gv0) (merge gv2 l2)), (Permutation (gv2 ++ gv0) (merge gv2 gv2)), (Permutation (gv2 ++ gv0) (merge gv2 gv0)), (Permutation (gv2 ++ gv0) (merge gv0 l2)), (Permutation (gv2 ++ gv0) (merge gv0 gv2)), (Permutation (gv2 ++ gv0) (merge gv0 gv0)), (Permutation (gv2 ++ gv0) (l2 ++ l2)), (Permutation (gv2 ++ gv0) (l2 ++ gv2)), (Permutation (gv2 ++ gv0) (l2 ++ gv0))
(Permutation (gv2 ++ gv0) (gv2 ++ l2)), (Permutation (gv2 ++ gv0) (gv2 ++ gv2)), (Permutation (gv2 ++ gv0) (gv0 ++ l2)), (Permutation (gv2 ++ gv0) (gv0 ++ gv2)), (Permutation (gv2 ++ gv0) (gv0 ++ gv0)), (Permutation (gv2 ++ gv0) []), (Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) gv2), (Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (a0 :: l2))
(Permutation (gv0 ++ l2) (a0 :: gv2)), (Permutation (gv0 ++ l2) (a0 :: gv0)), (Permutation (gv0 ++ l2) (a :: l2)), (Permutation (gv0 ++ l2) (a :: gv2)), (Permutation (gv0 ++ l2) (a :: gv0)), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 gv2)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge gv2 l2)), (Permutation (gv0 ++ l2) (merge gv2 gv2))
(Permutation (gv0 ++ l2) (merge gv2 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 gv2)), (Permutation (gv0 ++ l2) (merge gv0 gv0)), (Permutation (gv0 ++ l2) (l2 ++ l2)), (Permutation (gv0 ++ l2) (l2 ++ gv2)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (gv2 ++ l2)), (Permutation (gv0 ++ l2) (gv2 ++ gv2)), (Permutation (gv0 ++ l2) (gv2 ++ gv0))
(Permutation (gv0 ++ l2) (gv0 ++ gv2)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ gv2) l2), (Permutation (gv0 ++ gv2) gv2), (Permutation (gv0 ++ gv2) gv0), (Permutation (gv0 ++ gv2) (a0 :: l2)), (Permutation (gv0 ++ gv2) (a0 :: gv2)), (Permutation (gv0 ++ gv2) (a0 :: gv0)), (Permutation (gv0 ++ gv2) (a :: l2))
(Permutation (gv0 ++ gv2) (a :: gv2)), (Permutation (gv0 ++ gv2) (a :: gv0)), (Permutation (gv0 ++ gv2) (merge l2 l2)), (Permutation (gv0 ++ gv2) (merge l2 gv2)), (Permutation (gv0 ++ gv2) (merge l2 gv0)), (Permutation (gv0 ++ gv2) (merge gv2 l2)), (Permutation (gv0 ++ gv2) (merge gv2 gv2)), (Permutation (gv0 ++ gv2) (merge gv2 gv0)), (Permutation (gv0 ++ gv2) (merge gv0 l2)), (Permutation (gv0 ++ gv2) (merge gv0 gv2))
(Permutation (gv0 ++ gv2) (merge gv0 gv0)), (Permutation (gv0 ++ gv2) (l2 ++ l2)), (Permutation (gv0 ++ gv2) (l2 ++ gv2)), (Permutation (gv0 ++ gv2) (l2 ++ gv0)), (Permutation (gv0 ++ gv2) (gv2 ++ l2)), (Permutation (gv0 ++ gv2) (gv2 ++ gv2)), (Permutation (gv0 ++ gv2) (gv2 ++ gv0)), (Permutation (gv0 ++ gv2) (gv0 ++ l2)), (Permutation (gv0 ++ gv2) (gv0 ++ gv0)), (Permutation (gv0 ++ gv2) [])
(Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) gv2), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (a0 :: l2)), (Permutation (gv0 ++ gv0) (a0 :: gv2)), (Permutation (gv0 ++ gv0) (a0 :: gv0)), (Permutation (gv0 ++ gv0) (a :: l2)), (Permutation (gv0 ++ gv0) (a :: gv2)), (Permutation (gv0 ++ gv0) (a :: gv0)), (Permutation (gv0 ++ gv0) (merge l2 l2))
(Permutation (gv0 ++ gv0) (merge l2 gv2)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge gv2 l2)), (Permutation (gv0 ++ gv0) (merge gv2 gv2)), (Permutation (gv0 ++ gv0) (merge gv2 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 gv2)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ gv2))
(Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (gv2 ++ l2)), (Permutation (gv0 ++ gv0) (gv2 ++ gv2)), (Permutation (gv0 ++ gv0) (gv2 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l2)), (Permutation (gv0 ++ gv0) (gv0 ++ gv2)), (Permutation (gv0 ++ gv0) []), (Permutation [] l2), (Permutation [] gv2), (Permutation [] gv0)
(Permutation [] (a0 :: l2)), (Permutation [] (a0 :: gv2)), (Permutation [] (a0 :: gv0)), (Permutation [] (a :: l2)), (Permutation [] (a :: gv2)), (Permutation [] (a :: gv0)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge gv2 l2))
(Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 gv2)), (Permutation [] (merge gv0 gv0)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv2)), (Permutation [] (l2 ++ gv0)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2))
(Permutation [] (gv2 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ gv2)), (Permutation [] (gv0 ++ gv0)), (In a0 (a0 :: l2)), (In a0 (a0 :: gv2)), (In a0 (a0 :: gv0)), (In a0 (a :: l2)), (In a0 (a :: gv2)), (In a0 (a :: gv0))
(In a0 (merge l2 l2)), (In a0 (merge l2 gv2)), (In a0 (merge l2 gv0)), (In a0 (merge gv2 l2)), (In a0 (merge gv2 gv2)), (In a0 (merge gv2 gv0)), (In a0 (merge gv0 l2)), (In a0 (merge gv0 gv2)), (In a0 (merge gv0 gv0)), (In a0 (l2 ++ l2))
(In a0 (l2 ++ gv2)), (In a0 (l2 ++ gv0)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ gv0)), (In a0 (gv0 ++ l2)), (In a0 (gv0 ++ gv2)), (In a0 (gv0 ++ gv0)), (In a (a0 :: l2)), (In a (a0 :: gv2))
(In a (a0 :: gv0)), (In a (a :: l2)), (In a (a :: gv2)), (In a (a :: gv0)), (In a (merge l2 l2)), (In a (merge l2 gv2)), (In a (merge l2 gv0)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 gv0))
(In a (merge gv0 l2)), (In a (merge gv0 gv2)), (In a (merge gv0 gv0)), (In a (l2 ++ l2)), (In a (l2 ++ gv2)), (In a (l2 ++ gv0)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ gv0)), (In a (gv0 ++ l2))
(In a (gv0 ++ gv2)), (In a (gv0 ++ gv0)), (In (length l2) l2), (In (length l2) gv2), (In (length l2) gv0), (In (length l2) (a0 :: l2)), (In (length l2) (a0 :: gv2)), (In (length l2) (a0 :: gv0)), (In (length l2) (a :: l2)), (In (length l2) (a :: gv2))
(In (length l2) (a :: gv0)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2)), (In (length l2) (merge gv2 gv0)), (In (length l2) (merge gv0 l2)), (In (length l2) (merge gv0 gv2)), (In (length l2) (merge gv0 gv0))
(In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (l2 ++ gv0)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ gv2)), (In (length l2) (gv0 ++ gv0)), (In (length gv2) l2)
(In (length gv2) gv2), (In (length gv2) gv0), (In (length gv2) (a0 :: l2)), (In (length gv2) (a0 :: gv2)), (In (length gv2) (a0 :: gv0)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: gv0)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2))
(In (length gv2) (merge l2 gv0)), (In (length gv2) (merge gv2 l2)), (In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 gv0)), (In (length gv2) (merge gv0 l2)), (In (length gv2) (merge gv0 gv2)), (In (length gv2) (merge gv0 gv0)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ gv0))
(In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2)), (In (length gv2) (gv2 ++ gv0)), (In (length gv2) (gv0 ++ l2)), (In (length gv2) (gv0 ++ gv2)), (In (length gv2) (gv0 ++ gv0)), (In (length gv0) l2), (In (length gv0) gv2), (In (length gv0) gv0), (In (length gv0) (a0 :: l2))
(In (length gv0) (a0 :: gv2)), (In (length gv0) (a0 :: gv0)), (In (length gv0) (a :: l2)), (In (length gv0) (a :: gv2)), (In (length gv0) (a :: gv0)), (In (length gv0) (merge l2 l2)), (In (length gv0) (merge l2 gv2)), (In (length gv0) (merge l2 gv0)), (In (length gv0) (merge gv2 l2)), (In (length gv0) (merge gv2 gv2))
(In (length gv0) (merge gv2 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 gv2)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ gv2)), (In (length gv0) (l2 ++ gv0)), (In (length gv0) (gv2 ++ l2)), (In (length gv0) (gv2 ++ gv2)), (In (length gv0) (gv2 ++ gv0))
(In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ gv2)), (In (length gv0) (gv0 ++ gv0)), (a0 < length l2), (a0 < length gv2), (a0 < length gv0), (a < length l2), (a < length gv2), (a < length gv0), (length l2 < a0)
(length l2 < a), (length l2 < length gv2), (length l2 < length gv0), (length gv2 < a0), (length gv2 < a), (length gv2 < length l2), (length gv2 < length gv0), (length gv0 < a0), (length gv0 < a), (length gv0 < length l2)
(length gv0 < length gv2), (a0 <= length l2), (a0 <= length gv2), (a0 <= length gv0), (a <= length l2), (a <= length gv2), (a <= length gv0), (length l2 <= a0), (length l2 <= a), (length l2 <= length gv2)
(length l2 <= length gv0), (length gv2 <= a0), (length gv2 <= a), (length gv2 <= length l2), (length gv2 <= length gv0), (length gv0 <= a0), (length gv0 <= a), (length gv0 <= length l2), (length gv0 <= length gv2), (~ a0 <=* l2)
(~ a0 <=* gv2), (~ a0 <=* gv0), (~ a <=* l2), (~ a <=* gv2), (~ a <=* gv0), (~ sorted l2), (~ sorted gv2), (~ sorted gv0), (~ Permutation l2 l2), (~ Permutation l2 gv2)
(~ Permutation l2 gv0), (~ Permutation gv2 l2), (~ Permutation gv2 gv2), (~ Permutation gv2 gv0), (~ Permutation gv0 l2), (~ Permutation gv0 gv2), (~ Permutation gv0 gv0), (~ In a0 l2), (~ In a0 gv2), (~ In a0 gv0)
(~ In a l2), (~ In a gv2), (~ In a gv0), (~ a0 < a0), (~ a0 < a), (~ a < a0), (~ a < a), (~ a0 <= a0), (~ a0 <= a), (~ a <= a0)
(~ a <= a), (a0 <> a0), (a0 <> a), (a <> a0), (a <> a), (l2 <> l2), (l2 <> gv2), (l2 <> gv0), (gv2 <> l2), (gv2 <> gv2)
(gv2 <> gv0), (gv0 <> l2), (gv0 <> gv2), (gv0 <> gv0), (None = Some l2), (None = Some gv2), (None = Some gv0), (a0 :: l2 = l2), (a0 :: l2 = gv2), (a0 :: l2 = gv0)
(a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 gv2), (a0 :: l2 = merge l2 gv0), (a0 :: l2 = merge gv2 l2), (a0 :: l2 = merge gv2 gv2), (a0 :: l2 = merge gv2 gv0), (a0 :: l2 = merge gv0 l2), (a0 :: l2 = merge gv0 gv2), (a0 :: l2 = merge gv0 gv0), (a0 :: l2 = l2 ++ l2)
(a0 :: l2 = l2 ++ gv2), (a0 :: l2 = l2 ++ gv0), (a0 :: l2 = gv2 ++ l2), (a0 :: l2 = gv2 ++ gv2), (a0 :: l2 = gv2 ++ gv0), (a0 :: l2 = gv0 ++ l2), (a0 :: l2 = gv0 ++ gv2), (a0 :: l2 = gv0 ++ gv0), (a0 :: l2 = []), (a0 :: gv2 = l2)
(a0 :: gv2 = gv2), (a0 :: gv2 = gv0), (a0 :: gv2 = merge l2 l2), (a0 :: gv2 = merge l2 gv2), (a0 :: gv2 = merge l2 gv0), (a0 :: gv2 = merge gv2 l2), (a0 :: gv2 = merge gv2 gv2), (a0 :: gv2 = merge gv2 gv0), (a0 :: gv2 = merge gv0 l2), (a0 :: gv2 = merge gv0 gv2)
(a0 :: gv2 = merge gv0 gv0), (a0 :: gv2 = l2 ++ l2), (a0 :: gv2 = l2 ++ gv2), (a0 :: gv2 = l2 ++ gv0), (a0 :: gv2 = gv2 ++ l2), (a0 :: gv2 = gv2 ++ gv2), (a0 :: gv2 = gv2 ++ gv0), (a0 :: gv2 = gv0 ++ l2), (a0 :: gv2 = gv0 ++ gv2), (a0 :: gv2 = gv0 ++ gv0)
(a0 :: gv2 = []), (a0 :: gv0 = l2), (a0 :: gv0 = gv2), (a0 :: gv0 = gv0), (a0 :: gv0 = merge l2 l2), (a0 :: gv0 = merge l2 gv2), (a0 :: gv0 = merge l2 gv0), (a0 :: gv0 = merge gv2 l2), (a0 :: gv0 = merge gv2 gv2), (a0 :: gv0 = merge gv2 gv0)
(a0 :: gv0 = merge gv0 l2), (a0 :: gv0 = merge gv0 gv2), (a0 :: gv0 = merge gv0 gv0), (a0 :: gv0 = l2 ++ l2), (a0 :: gv0 = l2 ++ gv2), (a0 :: gv0 = l2 ++ gv0), (a0 :: gv0 = gv2 ++ l2), (a0 :: gv0 = gv2 ++ gv2), (a0 :: gv0 = gv2 ++ gv0), (a0 :: gv0 = gv0 ++ l2)
(a0 :: gv0 = gv0 ++ gv2), (a0 :: gv0 = gv0 ++ gv0), (a0 :: gv0 = []), (a :: l2 = l2), (a :: l2 = gv2), (a :: l2 = gv0), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 gv2), (a :: l2 = merge l2 gv0), (a :: l2 = merge gv2 l2)
(a :: l2 = merge gv2 gv2), (a :: l2 = merge gv2 gv0), (a :: l2 = merge gv0 l2), (a :: l2 = merge gv0 gv2), (a :: l2 = merge gv0 gv0), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ gv2), (a :: l2 = l2 ++ gv0), (a :: l2 = gv2 ++ l2), (a :: l2 = gv2 ++ gv2)
(a :: l2 = gv2 ++ gv0), (a :: l2 = gv0 ++ l2), (a :: l2 = gv0 ++ gv2), (a :: l2 = gv0 ++ gv0), (a :: l2 = []), (a :: gv2 = l2), (a :: gv2 = gv2), (a :: gv2 = gv0), (a :: gv2 = merge l2 l2), (a :: gv2 = merge l2 gv2)
(a :: gv2 = merge l2 gv0), (a :: gv2 = merge gv2 l2), (a :: gv2 = merge gv2 gv2), (a :: gv2 = merge gv2 gv0), (a :: gv2 = merge gv0 l2), (a :: gv2 = merge gv0 gv2), (a :: gv2 = merge gv0 gv0), (a :: gv2 = l2 ++ l2), (a :: gv2 = l2 ++ gv2), (a :: gv2 = l2 ++ gv0)
(a :: gv2 = gv2 ++ l2), (a :: gv2 = gv2 ++ gv2), (a :: gv2 = gv2 ++ gv0), (a :: gv2 = gv0 ++ l2), (a :: gv2 = gv0 ++ gv2), (a :: gv2 = gv0 ++ gv0), (a :: gv2 = []), (a :: gv0 = l2), (a :: gv0 = gv2), (a :: gv0 = gv0)
(a :: gv0 = merge l2 l2), (a :: gv0 = merge l2 gv2), (a :: gv0 = merge l2 gv0), (a :: gv0 = merge gv2 l2), (a :: gv0 = merge gv2 gv2), (a :: gv0 = merge gv2 gv0), (a :: gv0 = merge gv0 l2), (a :: gv0 = merge gv0 gv2), (a :: gv0 = merge gv0 gv0), (a :: gv0 = l2 ++ l2)
(a :: gv0 = l2 ++ gv2), (a :: gv0 = l2 ++ gv0), (a :: gv0 = gv2 ++ l2), (a :: gv0 = gv2 ++ gv2), (a :: gv0 = gv2 ++ gv0), (a :: gv0 = gv0 ++ l2), (a :: gv0 = gv0 ++ gv2), (a :: gv0 = gv0 ++ gv0), (a :: gv0 = []), (merge l2 l2 = l2)
(merge l2 l2 = gv2), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ gv0), (merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ gv2)
(merge l2 l2 = gv0 ++ gv0), (merge l2 gv2 = l2), (merge l2 gv2 = gv2), (merge l2 gv2 = gv0), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ gv0), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ gv0)
(merge l2 gv2 = gv0 ++ l2), (merge l2 gv2 = gv0 ++ gv2), (merge l2 gv2 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = gv2), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ gv2), (merge l2 gv0 = l2 ++ gv0), (merge l2 gv0 = gv2 ++ l2)
(merge l2 gv0 = gv2 ++ gv2), (merge l2 gv0 = gv2 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ gv2), (merge l2 gv0 = gv0 ++ gv0), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = gv0), (merge gv2 l2 = l2 ++ l2), (merge gv2 l2 = l2 ++ gv2)
(merge gv2 l2 = l2 ++ gv0), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ gv0), (merge gv2 l2 = gv0 ++ l2), (merge gv2 l2 = gv0 ++ gv2), (merge gv2 l2 = gv0 ++ gv0), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = gv0)
(merge gv2 gv2 = l2 ++ l2), (merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ gv0), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ gv0), (merge gv2 gv2 = gv0 ++ l2), (merge gv2 gv2 = gv0 ++ gv2), (merge gv2 gv2 = gv0 ++ gv0), (merge gv2 gv0 = l2)
(merge gv2 gv0 = gv2), (merge gv2 gv0 = gv0), (merge gv2 gv0 = l2 ++ l2), (merge gv2 gv0 = l2 ++ gv2), (merge gv2 gv0 = l2 ++ gv0), (merge gv2 gv0 = gv2 ++ l2), (merge gv2 gv0 = gv2 ++ gv2), (merge gv2 gv0 = gv2 ++ gv0), (merge gv2 gv0 = gv0 ++ l2), (merge gv2 gv0 = gv0 ++ gv2)
(merge gv2 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = gv2), (merge gv0 l2 = gv0), (merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ gv2), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = gv2 ++ l2), (merge gv0 l2 = gv2 ++ gv2), (merge gv0 l2 = gv2 ++ gv0)
(merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ gv2), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 gv2 = l2), (merge gv0 gv2 = gv2), (merge gv0 gv2 = gv0), (merge gv0 gv2 = l2 ++ l2), (merge gv0 gv2 = l2 ++ gv2), (merge gv0 gv2 = l2 ++ gv0), (merge gv0 gv2 = gv2 ++ l2)
(merge gv0 gv2 = gv2 ++ gv2), (merge gv0 gv2 = gv2 ++ gv0), (merge gv0 gv2 = gv0 ++ l2), (merge gv0 gv2 = gv0 ++ gv2), (merge gv0 gv2 = gv0 ++ gv0), (merge gv0 gv0 = l2), (merge gv0 gv0 = gv2), (merge gv0 gv0 = gv0), (merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ gv2)
(merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = gv2 ++ l2), (merge gv0 gv0 = gv2 ++ gv2), (merge gv0 gv0 = gv2 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ gv2), (merge gv0 gv0 = gv0 ++ gv0), (l2 ++ l2 = l2), (l2 ++ l2 = gv2), (l2 ++ l2 = gv0)
(l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = gv2), (l2 ++ gv0 = gv0), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = gv0), (gv2 ++ gv2 = l2)
(gv2 ++ gv2 = gv2), (gv2 ++ gv2 = gv0), (gv2 ++ gv0 = l2), (gv2 ++ gv0 = gv2), (gv2 ++ gv0 = gv0), (gv0 ++ l2 = l2), (gv0 ++ l2 = gv2), (gv0 ++ l2 = gv0), (gv0 ++ gv2 = l2), (gv0 ++ gv2 = gv2)
(gv0 ++ gv2 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = gv2), (gv0 ++ gv0 = gv0), ([] = l2), ([] = gv2), ([] = gv0), ([] = merge l2 l2), ([] = merge l2 gv2), ([] = merge l2 gv0)
([] = merge gv2 l2), ([] = merge gv2 gv2), ([] = merge gv2 gv0), ([] = merge gv0 l2), ([] = merge gv0 gv2), ([] = merge gv0 gv0), ([] = l2 ++ l2), ([] = l2 ++ gv2), ([] = l2 ++ gv0), ([] = gv2 ++ l2)
([] = gv2 ++ gv2), ([] = gv2 ++ gv0), ([] = gv0 ++ l2), ([] = gv0 ++ gv2), ([] = gv0 ++ gv0), (None = Some a0), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split gv2), ((l2, l2) = split gv0)
((l2, gv2) = split l2), ((l2, gv2) = split gv2), ((l2, gv2) = split gv0), ((l2, gv0) = split l2), ((l2, gv0) = split gv2), ((l2, gv0) = split gv0), ((gv2, l2) = split l2), ((gv2, l2) = split gv2), ((gv2, l2) = split gv0), ((gv2, gv2) = split l2)
((gv2, gv2) = split gv2), ((gv2, gv2) = split gv0), ((gv2, gv0) = split l2), ((gv2, gv0) = split gv2), ((gv2, gv0) = split gv0), ((gv0, l2) = split l2), ((gv0, l2) = split gv2), ((gv0, l2) = split gv0), ((gv0, gv2) = split l2), ((gv0, gv2) = split gv2)
((gv0, gv2) = split gv0), ((gv0, gv0) = split l2), ((gv0, gv0) = split gv2), ((gv0, gv0) = split gv0), (length l2 = a0), (length l2 = a), (length gv2 = a0), (length gv2 = a), (length gv0 = a0), (length gv0 = a)

Label: 4 (4)
(a0 <=* l2), (a0 <=* l1), (a0 <=* gv3), (a0 <=* gv2), (n <=* l2), (n <=* l1), (n <=* gv3), (n <=* gv2), (a <=* l2), (a <=* l1)
(a <=* gv3), (a <=* gv2), (sorted l2), (sorted l1), (sorted gv3), (sorted gv2), (Permutation l2 l2), (Permutation l2 l1), (Permutation l2 gv3), (Permutation l2 gv2)
(Permutation l1 l2), (Permutation l1 l1), (Permutation l1 gv3), (Permutation l1 gv2), (Permutation gv3 l2), (Permutation gv3 l1), (Permutation gv3 gv3), (Permutation gv3 gv2), (Permutation gv2 l2), (Permutation gv2 l1)
(Permutation gv2 gv3), (Permutation gv2 gv2), (In a0 l2), (In a0 l1), (In a0 gv3), (In a0 gv2), (In n l2), (In n l1), (In n gv3), (In n gv2)
(In a l2), (In a l1), (In a gv3), (In a gv2), (a0 < a0), (a0 < n), (a0 < a), (n < a0), (n < n), (n < a)
(a < a0), (a < n), (a < a), (a0 <= a0), (a0 <= n), (a0 <= a), (n <= a0), (n <= n), (n <= a), (a <= a0)
(a <= n), (a <= a), (l2 = l2), (l2 = l1), (l2 = gv3), (l2 = gv2), (l1 = l2), (l1 = l1), (l1 = gv3), (l1 = gv2)
(gv3 = l2), (gv3 = l1), (gv3 = gv3), (gv3 = gv2), (gv2 = l2), (gv2 = l1), (gv2 = gv3), (gv2 = gv2), (a0 = a0), (a0 = n)
(a0 = a), (n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a0 :: gv3)
(a0 <=* a0 :: gv2), (a0 <=* n :: l2), (a0 <=* n :: l1), (a0 <=* n :: gv3), (a0 <=* n :: gv2), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* a :: gv3), (a0 <=* a :: gv2), (a0 <=* merge l2 l2)
(a0 <=* merge l2 l1), (a0 <=* merge l2 gv3), (a0 <=* merge l2 gv2), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* merge l1 gv3), (a0 <=* merge l1 gv2), (a0 <=* merge gv3 l2), (a0 <=* merge gv3 l1), (a0 <=* merge gv3 gv3)
(a0 <=* merge gv3 gv2), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 l1), (a0 <=* merge gv2 gv3), (a0 <=* merge gv2 gv2), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l2 ++ gv3), (a0 <=* l2 ++ gv2), (a0 <=* l1 ++ l2)
(a0 <=* l1 ++ l1), (a0 <=* l1 ++ gv3), (a0 <=* l1 ++ gv2), (a0 <=* gv3 ++ l2), (a0 <=* gv3 ++ l1), (a0 <=* gv3 ++ gv3), (a0 <=* gv3 ++ gv2), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ l1), (a0 <=* gv2 ++ gv3)
(a0 <=* gv2 ++ gv2), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* a0 :: gv3), (n <=* a0 :: gv2), (n <=* n :: l2), (n <=* n :: l1), (n <=* n :: gv3), (n <=* n :: gv2)
(n <=* a :: l2), (n <=* a :: l1), (n <=* a :: gv3), (n <=* a :: gv2), (n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l2 gv3), (n <=* merge l2 gv2), (n <=* merge l1 l2), (n <=* merge l1 l1)
(n <=* merge l1 gv3), (n <=* merge l1 gv2), (n <=* merge gv3 l2), (n <=* merge gv3 l1), (n <=* merge gv3 gv3), (n <=* merge gv3 gv2), (n <=* merge gv2 l2), (n <=* merge gv2 l1), (n <=* merge gv2 gv3), (n <=* merge gv2 gv2)
(n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l2 ++ gv3), (n <=* l2 ++ gv2), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* l1 ++ gv3), (n <=* l1 ++ gv2), (n <=* gv3 ++ l2), (n <=* gv3 ++ l1)
(n <=* gv3 ++ gv3), (n <=* gv3 ++ gv2), (n <=* gv2 ++ l2), (n <=* gv2 ++ l1), (n <=* gv2 ++ gv3), (n <=* gv2 ++ gv2), (n <=* []), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a0 :: gv3)
(a <=* a0 :: gv2), (a <=* n :: l2), (a <=* n :: l1), (a <=* n :: gv3), (a <=* n :: gv2), (a <=* a :: l2), (a <=* a :: l1), (a <=* a :: gv3), (a <=* a :: gv2), (a <=* merge l2 l2)
(a <=* merge l2 l1), (a <=* merge l2 gv3), (a <=* merge l2 gv2), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* merge l1 gv3), (a <=* merge l1 gv2), (a <=* merge gv3 l2), (a <=* merge gv3 l1), (a <=* merge gv3 gv3)
(a <=* merge gv3 gv2), (a <=* merge gv2 l2), (a <=* merge gv2 l1), (a <=* merge gv2 gv3), (a <=* merge gv2 gv2), (a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l2 ++ gv3), (a <=* l2 ++ gv2), (a <=* l1 ++ l2)
(a <=* l1 ++ l1), (a <=* l1 ++ gv3), (a <=* l1 ++ gv2), (a <=* gv3 ++ l2), (a <=* gv3 ++ l1), (a <=* gv3 ++ gv3), (a <=* gv3 ++ gv2), (a <=* gv2 ++ l2), (a <=* gv2 ++ l1), (a <=* gv2 ++ gv3)
(a <=* gv2 ++ gv2), (a <=* []), (length l2 <=* l2), (length l2 <=* l1), (length l2 <=* gv3), (length l2 <=* gv2), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a0 :: gv3), (length l2 <=* a0 :: gv2)
(length l2 <=* n :: l2), (length l2 <=* n :: l1), (length l2 <=* n :: gv3), (length l2 <=* n :: gv2), (length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* a :: gv3), (length l2 <=* a :: gv2), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1)
(length l2 <=* merge l2 gv3), (length l2 <=* merge l2 gv2), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* merge l1 gv3), (length l2 <=* merge l1 gv2), (length l2 <=* merge gv3 l2), (length l2 <=* merge gv3 l1), (length l2 <=* merge gv3 gv3), (length l2 <=* merge gv3 gv2)
(length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 l1), (length l2 <=* merge gv2 gv3), (length l2 <=* merge gv2 gv2), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l2 ++ gv3), (length l2 <=* l2 ++ gv2), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1)
(length l2 <=* l1 ++ gv3), (length l2 <=* l1 ++ gv2), (length l2 <=* gv3 ++ l2), (length l2 <=* gv3 ++ l1), (length l2 <=* gv3 ++ gv3), (length l2 <=* gv3 ++ gv2), (length l2 <=* gv2 ++ l2), (length l2 <=* gv2 ++ l1), (length l2 <=* gv2 ++ gv3), (length l2 <=* gv2 ++ gv2)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* gv3), (length l1 <=* gv2), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* a0 :: gv3), (length l1 <=* a0 :: gv2), (length l1 <=* n :: l2)
(length l1 <=* n :: l1), (length l1 <=* n :: gv3), (length l1 <=* n :: gv2), (length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* a :: gv3), (length l1 <=* a :: gv2), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l2 gv3)
(length l1 <=* merge l2 gv2), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* merge l1 gv3), (length l1 <=* merge l1 gv2), (length l1 <=* merge gv3 l2), (length l1 <=* merge gv3 l1), (length l1 <=* merge gv3 gv3), (length l1 <=* merge gv3 gv2), (length l1 <=* merge gv2 l2)
(length l1 <=* merge gv2 l1), (length l1 <=* merge gv2 gv3), (length l1 <=* merge gv2 gv2), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l2 ++ gv3), (length l1 <=* l2 ++ gv2), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* l1 ++ gv3)
(length l1 <=* l1 ++ gv2), (length l1 <=* gv3 ++ l2), (length l1 <=* gv3 ++ l1), (length l1 <=* gv3 ++ gv3), (length l1 <=* gv3 ++ gv2), (length l1 <=* gv2 ++ l2), (length l1 <=* gv2 ++ l1), (length l1 <=* gv2 ++ gv3), (length l1 <=* gv2 ++ gv2), (length l1 <=* [])
(length gv3 <=* l2), (length gv3 <=* l1), (length gv3 <=* gv3), (length gv3 <=* gv2), (length gv3 <=* a0 :: l2), (length gv3 <=* a0 :: l1), (length gv3 <=* a0 :: gv3), (length gv3 <=* a0 :: gv2), (length gv3 <=* n :: l2), (length gv3 <=* n :: l1)
(length gv3 <=* n :: gv3), (length gv3 <=* n :: gv2), (length gv3 <=* a :: l2), (length gv3 <=* a :: l1), (length gv3 <=* a :: gv3), (length gv3 <=* a :: gv2), (length gv3 <=* merge l2 l2), (length gv3 <=* merge l2 l1), (length gv3 <=* merge l2 gv3), (length gv3 <=* merge l2 gv2)
(length gv3 <=* merge l1 l2), (length gv3 <=* merge l1 l1), (length gv3 <=* merge l1 gv3), (length gv3 <=* merge l1 gv2), (length gv3 <=* merge gv3 l2), (length gv3 <=* merge gv3 l1), (length gv3 <=* merge gv3 gv3), (length gv3 <=* merge gv3 gv2), (length gv3 <=* merge gv2 l2), (length gv3 <=* merge gv2 l1)
(length gv3 <=* merge gv2 gv3), (length gv3 <=* merge gv2 gv2), (length gv3 <=* l2 ++ l2), (length gv3 <=* l2 ++ l1), (length gv3 <=* l2 ++ gv3), (length gv3 <=* l2 ++ gv2), (length gv3 <=* l1 ++ l2), (length gv3 <=* l1 ++ l1), (length gv3 <=* l1 ++ gv3), (length gv3 <=* l1 ++ gv2)
(length gv3 <=* gv3 ++ l2), (length gv3 <=* gv3 ++ l1), (length gv3 <=* gv3 ++ gv3), (length gv3 <=* gv3 ++ gv2), (length gv3 <=* gv2 ++ l2), (length gv3 <=* gv2 ++ l1), (length gv3 <=* gv2 ++ gv3), (length gv3 <=* gv2 ++ gv2), (length gv3 <=* []), (length gv2 <=* l2)
(length gv2 <=* l1), (length gv2 <=* gv3), (length gv2 <=* gv2), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: l1), (length gv2 <=* a0 :: gv3), (length gv2 <=* a0 :: gv2), (length gv2 <=* n :: l2), (length gv2 <=* n :: l1), (length gv2 <=* n :: gv3)
(length gv2 <=* n :: gv2), (length gv2 <=* a :: l2), (length gv2 <=* a :: l1), (length gv2 <=* a :: gv3), (length gv2 <=* a :: gv2), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 l1), (length gv2 <=* merge l2 gv3), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l1 l2)
(length gv2 <=* merge l1 l1), (length gv2 <=* merge l1 gv3), (length gv2 <=* merge l1 gv2), (length gv2 <=* merge gv3 l2), (length gv2 <=* merge gv3 l1), (length gv2 <=* merge gv3 gv3), (length gv2 <=* merge gv3 gv2), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 l1), (length gv2 <=* merge gv2 gv3)
(length gv2 <=* merge gv2 gv2), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ l1), (length gv2 <=* l2 ++ gv3), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l1 ++ l2), (length gv2 <=* l1 ++ l1), (length gv2 <=* l1 ++ gv3), (length gv2 <=* l1 ++ gv2), (length gv2 <=* gv3 ++ l2)
(length gv2 <=* gv3 ++ l1), (length gv2 <=* gv3 ++ gv3), (length gv2 <=* gv3 ++ gv2), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ l1), (length gv2 <=* gv2 ++ gv3), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1))
(sorted (a0 :: gv3)), (sorted (a0 :: gv2)), (sorted (n :: l2)), (sorted (n :: l1)), (sorted (n :: gv3)), (sorted (n :: gv2)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (a :: gv3)), (sorted (a :: gv2))
(sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l2 gv3)), (sorted (merge l2 gv2)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (merge l1 gv3)), (sorted (merge l1 gv2)), (sorted (merge gv3 l2)), (sorted (merge gv3 l1))
(sorted (merge gv3 gv3)), (sorted (merge gv3 gv2)), (sorted (merge gv2 l2)), (sorted (merge gv2 l1)), (sorted (merge gv2 gv3)), (sorted (merge gv2 gv2)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l2 ++ gv3)), (sorted (l2 ++ gv2))
(sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted (l1 ++ gv3)), (sorted (l1 ++ gv2)), (sorted (gv3 ++ l2)), (sorted (gv3 ++ l1)), (sorted (gv3 ++ gv3)), (sorted (gv3 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ l1))
(sorted (gv2 ++ gv3)), (sorted (gv2 ++ gv2)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (a0 :: gv3)), (Permutation l2 (a0 :: gv2)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (n :: gv3))
(Permutation l2 (n :: gv2)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (a :: gv3)), (Permutation l2 (a :: gv2)), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l2 gv3)), (Permutation l2 (merge l2 gv2)), (Permutation l2 (merge l1 l2))
(Permutation l2 (merge l1 l1)), (Permutation l2 (merge l1 gv3)), (Permutation l2 (merge l1 gv2)), (Permutation l2 (merge gv3 l2)), (Permutation l2 (merge gv3 l1)), (Permutation l2 (merge gv3 gv3)), (Permutation l2 (merge gv3 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 l1)), (Permutation l2 (merge gv2 gv3))
(Permutation l2 (merge gv2 gv2)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l2 ++ gv3)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 (l1 ++ gv3)), (Permutation l2 (l1 ++ gv2)), (Permutation l2 (gv3 ++ l2))
(Permutation l2 (gv3 ++ l1)), (Permutation l2 (gv3 ++ gv3)), (Permutation l2 (gv3 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ l1)), (Permutation l2 (gv2 ++ gv3)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 []), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1))
(Permutation l1 (a0 :: gv3)), (Permutation l1 (a0 :: gv2)), (Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (n :: gv3)), (Permutation l1 (n :: gv2)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (a :: gv3)), (Permutation l1 (a :: gv2))
(Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1)), (Permutation l1 (merge l2 gv3)), (Permutation l1 (merge l2 gv2)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (merge l1 gv3)), (Permutation l1 (merge l1 gv2)), (Permutation l1 (merge gv3 l2)), (Permutation l1 (merge gv3 l1))
(Permutation l1 (merge gv3 gv3)), (Permutation l1 (merge gv3 gv2)), (Permutation l1 (merge gv2 l2)), (Permutation l1 (merge gv2 l1)), (Permutation l1 (merge gv2 gv3)), (Permutation l1 (merge gv2 gv2)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l2 ++ gv3)), (Permutation l1 (l2 ++ gv2))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 (l1 ++ gv3)), (Permutation l1 (l1 ++ gv2)), (Permutation l1 (gv3 ++ l2)), (Permutation l1 (gv3 ++ l1)), (Permutation l1 (gv3 ++ gv3)), (Permutation l1 (gv3 ++ gv2)), (Permutation l1 (gv2 ++ l2)), (Permutation l1 (gv2 ++ l1))
(Permutation l1 (gv2 ++ gv3)), (Permutation l1 (gv2 ++ gv2)), (Permutation l1 []), (Permutation gv3 (a0 :: l2)), (Permutation gv3 (a0 :: l1)), (Permutation gv3 (a0 :: gv3)), (Permutation gv3 (a0 :: gv2)), (Permutation gv3 (n :: l2)), (Permutation gv3 (n :: l1)), (Permutation gv3 (n :: gv3))
(Permutation gv3 (n :: gv2)), (Permutation gv3 (a :: l2)), (Permutation gv3 (a :: l1)), (Permutation gv3 (a :: gv3)), (Permutation gv3 (a :: gv2)), (Permutation gv3 (merge l2 l2)), (Permutation gv3 (merge l2 l1)), (Permutation gv3 (merge l2 gv3)), (Permutation gv3 (merge l2 gv2)), (Permutation gv3 (merge l1 l2))
(Permutation gv3 (merge l1 l1)), (Permutation gv3 (merge l1 gv3)), (Permutation gv3 (merge l1 gv2)), (Permutation gv3 (merge gv3 l2)), (Permutation gv3 (merge gv3 l1)), (Permutation gv3 (merge gv3 gv3)), (Permutation gv3 (merge gv3 gv2)), (Permutation gv3 (merge gv2 l2)), (Permutation gv3 (merge gv2 l1)), (Permutation gv3 (merge gv2 gv3))
(Permutation gv3 (merge gv2 gv2)), (Permutation gv3 (l2 ++ l2)), (Permutation gv3 (l2 ++ l1)), (Permutation gv3 (l2 ++ gv3)), (Permutation gv3 (l2 ++ gv2)), (Permutation gv3 (l1 ++ l2)), (Permutation gv3 (l1 ++ l1)), (Permutation gv3 (l1 ++ gv3)), (Permutation gv3 (l1 ++ gv2)), (Permutation gv3 (gv3 ++ l2))
(Permutation gv3 (gv3 ++ l1)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ gv2)), (Permutation gv3 (gv2 ++ l2)), (Permutation gv3 (gv2 ++ l1)), (Permutation gv3 (gv2 ++ gv3)), (Permutation gv3 (gv2 ++ gv2)), (Permutation gv3 []), (Permutation gv2 (a0 :: l2)), (Permutation gv2 (a0 :: l1))
(Permutation gv2 (a0 :: gv3)), (Permutation gv2 (a0 :: gv2)), (Permutation gv2 (n :: l2)), (Permutation gv2 (n :: l1)), (Permutation gv2 (n :: gv3)), (Permutation gv2 (n :: gv2)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: l1)), (Permutation gv2 (a :: gv3)), (Permutation gv2 (a :: gv2))
(Permutation gv2 (merge l2 l2)), (Permutation gv2 (merge l2 l1)), (Permutation gv2 (merge l2 gv3)), (Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l1 l2)), (Permutation gv2 (merge l1 l1)), (Permutation gv2 (merge l1 gv3)), (Permutation gv2 (merge l1 gv2)), (Permutation gv2 (merge gv3 l2)), (Permutation gv2 (merge gv3 l1))
(Permutation gv2 (merge gv3 gv3)), (Permutation gv2 (merge gv3 gv2)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 l1)), (Permutation gv2 (merge gv2 gv3)), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ l1)), (Permutation gv2 (l2 ++ gv3)), (Permutation gv2 (l2 ++ gv2))
(Permutation gv2 (l1 ++ l2)), (Permutation gv2 (l1 ++ l1)), (Permutation gv2 (l1 ++ gv3)), (Permutation gv2 (l1 ++ gv2)), (Permutation gv2 (gv3 ++ l2)), (Permutation gv2 (gv3 ++ l1)), (Permutation gv2 (gv3 ++ gv3)), (Permutation gv2 (gv3 ++ gv2)), (Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ l1))
(Permutation gv2 (gv2 ++ gv3)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) gv3), (Permutation (a0 :: l2) gv2), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a0 :: gv3)), (Permutation (a0 :: l2) (a0 :: gv2))
(Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (n :: gv3)), (Permutation (a0 :: l2) (n :: gv2)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1)), (Permutation (a0 :: l2) (a :: gv3)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1))
(Permutation (a0 :: l2) (merge l2 gv3)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (merge l1 gv3)), (Permutation (a0 :: l2) (merge l1 gv2)), (Permutation (a0 :: l2) (merge gv3 l2)), (Permutation (a0 :: l2) (merge gv3 l1)), (Permutation (a0 :: l2) (merge gv3 gv3)), (Permutation (a0 :: l2) (merge gv3 gv2))
(Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 l1)), (Permutation (a0 :: l2) (merge gv2 gv3)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l2 ++ gv3)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l2) (l1 ++ gv3)), (Permutation (a0 :: l2) (l1 ++ gv2)), (Permutation (a0 :: l2) (gv3 ++ l2)), (Permutation (a0 :: l2) (gv3 ++ l1)), (Permutation (a0 :: l2) (gv3 ++ gv3)), (Permutation (a0 :: l2) (gv3 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ l2)), (Permutation (a0 :: l2) (gv2 ++ l1)), (Permutation (a0 :: l2) (gv2 ++ gv3)), (Permutation (a0 :: l2) (gv2 ++ gv2))
(Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) gv3), (Permutation (a0 :: l1) gv2), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a0 :: gv3)), (Permutation (a0 :: l1) (a0 :: gv2)), (Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1))
(Permutation (a0 :: l1) (n :: gv3)), (Permutation (a0 :: l1) (n :: gv2)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (a :: gv3)), (Permutation (a0 :: l1) (a :: gv2)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l2 gv3)), (Permutation (a0 :: l1) (merge l2 gv2))
(Permutation (a0 :: l1) (merge l1 l2)), (Permutation (a0 :: l1) (merge l1 l1)), (Permutation (a0 :: l1) (merge l1 gv3)), (Permutation (a0 :: l1) (merge l1 gv2)), (Permutation (a0 :: l1) (merge gv3 l2)), (Permutation (a0 :: l1) (merge gv3 l1)), (Permutation (a0 :: l1) (merge gv3 gv3)), (Permutation (a0 :: l1) (merge gv3 gv2)), (Permutation (a0 :: l1) (merge gv2 l2)), (Permutation (a0 :: l1) (merge gv2 l1))
(Permutation (a0 :: l1) (merge gv2 gv3)), (Permutation (a0 :: l1) (merge gv2 gv2)), (Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l2 ++ gv3)), (Permutation (a0 :: l1) (l2 ++ gv2)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) (l1 ++ gv3)), (Permutation (a0 :: l1) (l1 ++ gv2))
(Permutation (a0 :: l1) (gv3 ++ l2)), (Permutation (a0 :: l1) (gv3 ++ l1)), (Permutation (a0 :: l1) (gv3 ++ gv3)), (Permutation (a0 :: l1) (gv3 ++ gv2)), (Permutation (a0 :: l1) (gv2 ++ l2)), (Permutation (a0 :: l1) (gv2 ++ l1)), (Permutation (a0 :: l1) (gv2 ++ gv3)), (Permutation (a0 :: l1) (gv2 ++ gv2)), (Permutation (a0 :: l1) []), (Permutation (a0 :: gv3) l2)
(Permutation (a0 :: gv3) l1), (Permutation (a0 :: gv3) gv3), (Permutation (a0 :: gv3) gv2), (Permutation (a0 :: gv3) (a0 :: l2)), (Permutation (a0 :: gv3) (a0 :: l1)), (Permutation (a0 :: gv3) (a0 :: gv2)), (Permutation (a0 :: gv3) (n :: l2)), (Permutation (a0 :: gv3) (n :: l1)), (Permutation (a0 :: gv3) (n :: gv3)), (Permutation (a0 :: gv3) (n :: gv2))
(Permutation (a0 :: gv3) (a :: l2)), (Permutation (a0 :: gv3) (a :: l1)), (Permutation (a0 :: gv3) (a :: gv3)), (Permutation (a0 :: gv3) (a :: gv2)), (Permutation (a0 :: gv3) (merge l2 l2)), (Permutation (a0 :: gv3) (merge l2 l1)), (Permutation (a0 :: gv3) (merge l2 gv3)), (Permutation (a0 :: gv3) (merge l2 gv2)), (Permutation (a0 :: gv3) (merge l1 l2)), (Permutation (a0 :: gv3) (merge l1 l1))
(Permutation (a0 :: gv3) (merge l1 gv3)), (Permutation (a0 :: gv3) (merge l1 gv2)), (Permutation (a0 :: gv3) (merge gv3 l2)), (Permutation (a0 :: gv3) (merge gv3 l1)), (Permutation (a0 :: gv3) (merge gv3 gv3)), (Permutation (a0 :: gv3) (merge gv3 gv2)), (Permutation (a0 :: gv3) (merge gv2 l2)), (Permutation (a0 :: gv3) (merge gv2 l1)), (Permutation (a0 :: gv3) (merge gv2 gv3)), (Permutation (a0 :: gv3) (merge gv2 gv2))
(Permutation (a0 :: gv3) (l2 ++ l2)), (Permutation (a0 :: gv3) (l2 ++ l1)), (Permutation (a0 :: gv3) (l2 ++ gv3)), (Permutation (a0 :: gv3) (l2 ++ gv2)), (Permutation (a0 :: gv3) (l1 ++ l2)), (Permutation (a0 :: gv3) (l1 ++ l1)), (Permutation (a0 :: gv3) (l1 ++ gv3)), (Permutation (a0 :: gv3) (l1 ++ gv2)), (Permutation (a0 :: gv3) (gv3 ++ l2)), (Permutation (a0 :: gv3) (gv3 ++ l1))
(Permutation (a0 :: gv3) (gv3 ++ gv3)), (Permutation (a0 :: gv3) (gv3 ++ gv2)), (Permutation (a0 :: gv3) (gv2 ++ l2)), (Permutation (a0 :: gv3) (gv2 ++ l1)), (Permutation (a0 :: gv3) (gv2 ++ gv3)), (Permutation (a0 :: gv3) (gv2 ++ gv2)), (Permutation (a0 :: gv3) []), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) l1), (Permutation (a0 :: gv2) gv3)
(Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) (a0 :: l2)), (Permutation (a0 :: gv2) (a0 :: l1)), (Permutation (a0 :: gv2) (a0 :: gv3)), (Permutation (a0 :: gv2) (n :: l2)), (Permutation (a0 :: gv2) (n :: l1)), (Permutation (a0 :: gv2) (n :: gv3)), (Permutation (a0 :: gv2) (n :: gv2)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: l1))
(Permutation (a0 :: gv2) (a :: gv3)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 l1)), (Permutation (a0 :: gv2) (merge l2 gv3)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l1 l2)), (Permutation (a0 :: gv2) (merge l1 l1)), (Permutation (a0 :: gv2) (merge l1 gv3)), (Permutation (a0 :: gv2) (merge l1 gv2))
(Permutation (a0 :: gv2) (merge gv3 l2)), (Permutation (a0 :: gv2) (merge gv3 l1)), (Permutation (a0 :: gv2) (merge gv3 gv3)), (Permutation (a0 :: gv2) (merge gv3 gv2)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 l1)), (Permutation (a0 :: gv2) (merge gv2 gv3)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ l1))
(Permutation (a0 :: gv2) (l2 ++ gv3)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l1 ++ l2)), (Permutation (a0 :: gv2) (l1 ++ l1)), (Permutation (a0 :: gv2) (l1 ++ gv3)), (Permutation (a0 :: gv2) (l1 ++ gv2)), (Permutation (a0 :: gv2) (gv3 ++ l2)), (Permutation (a0 :: gv2) (gv3 ++ l1)), (Permutation (a0 :: gv2) (gv3 ++ gv3)), (Permutation (a0 :: gv2) (gv3 ++ gv2))
(Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ l1)), (Permutation (a0 :: gv2) (gv2 ++ gv3)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) gv3), (Permutation (n :: l2) gv2), (Permutation (n :: l2) (a0 :: l2))
(Permutation (n :: l2) (a0 :: l1)), (Permutation (n :: l2) (a0 :: gv3)), (Permutation (n :: l2) (a0 :: gv2)), (Permutation (n :: l2) (n :: l1)), (Permutation (n :: l2) (n :: gv3)), (Permutation (n :: l2) (n :: gv2)), (Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (a :: gv3)), (Permutation (n :: l2) (a :: gv2))
(Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l2 gv3)), (Permutation (n :: l2) (merge l2 gv2)), (Permutation (n :: l2) (merge l1 l2)), (Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (merge l1 gv3)), (Permutation (n :: l2) (merge l1 gv2)), (Permutation (n :: l2) (merge gv3 l2)), (Permutation (n :: l2) (merge gv3 l1))
(Permutation (n :: l2) (merge gv3 gv3)), (Permutation (n :: l2) (merge gv3 gv2)), (Permutation (n :: l2) (merge gv2 l2)), (Permutation (n :: l2) (merge gv2 l1)), (Permutation (n :: l2) (merge gv2 gv3)), (Permutation (n :: l2) (merge gv2 gv2)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l2 ++ gv3)), (Permutation (n :: l2) (l2 ++ gv2))
(Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1)), (Permutation (n :: l2) (l1 ++ gv3)), (Permutation (n :: l2) (l1 ++ gv2)), (Permutation (n :: l2) (gv3 ++ l2)), (Permutation (n :: l2) (gv3 ++ l1)), (Permutation (n :: l2) (gv3 ++ gv3)), (Permutation (n :: l2) (gv3 ++ gv2)), (Permutation (n :: l2) (gv2 ++ l2)), (Permutation (n :: l2) (gv2 ++ l1))
(Permutation (n :: l2) (gv2 ++ gv3)), (Permutation (n :: l2) (gv2 ++ gv2)), (Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) gv3), (Permutation (n :: l1) gv2), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1)), (Permutation (n :: l1) (a0 :: gv3))
(Permutation (n :: l1) (a0 :: gv2)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (n :: gv3)), (Permutation (n :: l1) (n :: gv2)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (a :: gv3)), (Permutation (n :: l1) (a :: gv2)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1))
(Permutation (n :: l1) (merge l2 gv3)), (Permutation (n :: l1) (merge l2 gv2)), (Permutation (n :: l1) (merge l1 l2)), (Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (merge l1 gv3)), (Permutation (n :: l1) (merge l1 gv2)), (Permutation (n :: l1) (merge gv3 l2)), (Permutation (n :: l1) (merge gv3 l1)), (Permutation (n :: l1) (merge gv3 gv3)), (Permutation (n :: l1) (merge gv3 gv2))
(Permutation (n :: l1) (merge gv2 l2)), (Permutation (n :: l1) (merge gv2 l1)), (Permutation (n :: l1) (merge gv2 gv3)), (Permutation (n :: l1) (merge gv2 gv2)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l2 ++ gv3)), (Permutation (n :: l1) (l2 ++ gv2)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1))
(Permutation (n :: l1) (l1 ++ gv3)), (Permutation (n :: l1) (l1 ++ gv2)), (Permutation (n :: l1) (gv3 ++ l2)), (Permutation (n :: l1) (gv3 ++ l1)), (Permutation (n :: l1) (gv3 ++ gv3)), (Permutation (n :: l1) (gv3 ++ gv2)), (Permutation (n :: l1) (gv2 ++ l2)), (Permutation (n :: l1) (gv2 ++ l1)), (Permutation (n :: l1) (gv2 ++ gv3)), (Permutation (n :: l1) (gv2 ++ gv2))
(Permutation (n :: l1) []), (Permutation (n :: gv3) l2), (Permutation (n :: gv3) l1), (Permutation (n :: gv3) gv3), (Permutation (n :: gv3) gv2), (Permutation (n :: gv3) (a0 :: l2)), (Permutation (n :: gv3) (a0 :: l1)), (Permutation (n :: gv3) (a0 :: gv3)), (Permutation (n :: gv3) (a0 :: gv2)), (Permutation (n :: gv3) (n :: l2))
(Permutation (n :: gv3) (n :: l1)), (Permutation (n :: gv3) (n :: gv2)), (Permutation (n :: gv3) (a :: l2)), (Permutation (n :: gv3) (a :: l1)), (Permutation (n :: gv3) (a :: gv3)), (Permutation (n :: gv3) (a :: gv2)), (Permutation (n :: gv3) (merge l2 l2)), (Permutation (n :: gv3) (merge l2 l1)), (Permutation (n :: gv3) (merge l2 gv3)), (Permutation (n :: gv3) (merge l2 gv2))
(Permutation (n :: gv3) (merge l1 l2)), (Permutation (n :: gv3) (merge l1 l1)), (Permutation (n :: gv3) (merge l1 gv3)), (Permutation (n :: gv3) (merge l1 gv2)), (Permutation (n :: gv3) (merge gv3 l2)), (Permutation (n :: gv3) (merge gv3 l1)), (Permutation (n :: gv3) (merge gv3 gv3)), (Permutation (n :: gv3) (merge gv3 gv2)), (Permutation (n :: gv3) (merge gv2 l2)), (Permutation (n :: gv3) (merge gv2 l1))
(Permutation (n :: gv3) (merge gv2 gv3)), (Permutation (n :: gv3) (merge gv2 gv2)), (Permutation (n :: gv3) (l2 ++ l2)), (Permutation (n :: gv3) (l2 ++ l1)), (Permutation (n :: gv3) (l2 ++ gv3)), (Permutation (n :: gv3) (l2 ++ gv2)), (Permutation (n :: gv3) (l1 ++ l2)), (Permutation (n :: gv3) (l1 ++ l1)), (Permutation (n :: gv3) (l1 ++ gv3)), (Permutation (n :: gv3) (l1 ++ gv2))
(Permutation (n :: gv3) (gv3 ++ l2)), (Permutation (n :: gv3) (gv3 ++ l1)), (Permutation (n :: gv3) (gv3 ++ gv3)), (Permutation (n :: gv3) (gv3 ++ gv2)), (Permutation (n :: gv3) (gv2 ++ l2)), (Permutation (n :: gv3) (gv2 ++ l1)), (Permutation (n :: gv3) (gv2 ++ gv3)), (Permutation (n :: gv3) (gv2 ++ gv2)), (Permutation (n :: gv3) []), (Permutation (n :: gv2) l2)
(Permutation (n :: gv2) l1), (Permutation (n :: gv2) gv3), (Permutation (n :: gv2) gv2), (Permutation (n :: gv2) (a0 :: l2)), (Permutation (n :: gv2) (a0 :: l1)), (Permutation (n :: gv2) (a0 :: gv3)), (Permutation (n :: gv2) (a0 :: gv2)), (Permutation (n :: gv2) (n :: l2)), (Permutation (n :: gv2) (n :: l1)), (Permutation (n :: gv2) (n :: gv3))
(Permutation (n :: gv2) (a :: l2)), (Permutation (n :: gv2) (a :: l1)), (Permutation (n :: gv2) (a :: gv3)), (Permutation (n :: gv2) (a :: gv2)), (Permutation (n :: gv2) (merge l2 l2)), (Permutation (n :: gv2) (merge l2 l1)), (Permutation (n :: gv2) (merge l2 gv3)), (Permutation (n :: gv2) (merge l2 gv2)), (Permutation (n :: gv2) (merge l1 l2)), (Permutation (n :: gv2) (merge l1 l1))
(Permutation (n :: gv2) (merge l1 gv3)), (Permutation (n :: gv2) (merge l1 gv2)), (Permutation (n :: gv2) (merge gv3 l2)), (Permutation (n :: gv2) (merge gv3 l1)), (Permutation (n :: gv2) (merge gv3 gv3)), (Permutation (n :: gv2) (merge gv3 gv2)), (Permutation (n :: gv2) (merge gv2 l2)), (Permutation (n :: gv2) (merge gv2 l1)), (Permutation (n :: gv2) (merge gv2 gv3)), (Permutation (n :: gv2) (merge gv2 gv2))
(Permutation (n :: gv2) (l2 ++ l2)), (Permutation (n :: gv2) (l2 ++ l1)), (Permutation (n :: gv2) (l2 ++ gv3)), (Permutation (n :: gv2) (l2 ++ gv2)), (Permutation (n :: gv2) (l1 ++ l2)), (Permutation (n :: gv2) (l1 ++ l1)), (Permutation (n :: gv2) (l1 ++ gv3)), (Permutation (n :: gv2) (l1 ++ gv2)), (Permutation (n :: gv2) (gv3 ++ l2)), (Permutation (n :: gv2) (gv3 ++ l1))
(Permutation (n :: gv2) (gv3 ++ gv3)), (Permutation (n :: gv2) (gv3 ++ gv2)), (Permutation (n :: gv2) (gv2 ++ l2)), (Permutation (n :: gv2) (gv2 ++ l1)), (Permutation (n :: gv2) (gv2 ++ gv3)), (Permutation (n :: gv2) (gv2 ++ gv2)), (Permutation (n :: gv2) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) gv3)
(Permutation (a :: l2) gv2), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (a0 :: gv3)), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (n :: gv3)), (Permutation (a :: l2) (n :: gv2)), (Permutation (a :: l2) (a :: l1))
(Permutation (a :: l2) (a :: gv3)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l2 gv3)), (Permutation (a :: l2) (merge l2 gv2)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (merge l1 gv3)), (Permutation (a :: l2) (merge l1 gv2))
(Permutation (a :: l2) (merge gv3 l2)), (Permutation (a :: l2) (merge gv3 l1)), (Permutation (a :: l2) (merge gv3 gv3)), (Permutation (a :: l2) (merge gv3 gv2)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 l1)), (Permutation (a :: l2) (merge gv2 gv3)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1))
(Permutation (a :: l2) (l2 ++ gv3)), (Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) (l1 ++ gv3)), (Permutation (a :: l2) (l1 ++ gv2)), (Permutation (a :: l2) (gv3 ++ l2)), (Permutation (a :: l2) (gv3 ++ l1)), (Permutation (a :: l2) (gv3 ++ gv3)), (Permutation (a :: l2) (gv3 ++ gv2))
(Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ l1)), (Permutation (a :: l2) (gv2 ++ gv3)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) gv3), (Permutation (a :: l1) gv2), (Permutation (a :: l1) (a0 :: l2))
(Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (a0 :: gv3)), (Permutation (a :: l1) (a0 :: gv2)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (n :: gv3)), (Permutation (a :: l1) (n :: gv2)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (a :: gv3)), (Permutation (a :: l1) (a :: gv2))
(Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l2 gv3)), (Permutation (a :: l1) (merge l2 gv2)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (merge l1 gv3)), (Permutation (a :: l1) (merge l1 gv2)), (Permutation (a :: l1) (merge gv3 l2)), (Permutation (a :: l1) (merge gv3 l1))
(Permutation (a :: l1) (merge gv3 gv3)), (Permutation (a :: l1) (merge gv3 gv2)), (Permutation (a :: l1) (merge gv2 l2)), (Permutation (a :: l1) (merge gv2 l1)), (Permutation (a :: l1) (merge gv2 gv3)), (Permutation (a :: l1) (merge gv2 gv2)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l2 ++ gv3)), (Permutation (a :: l1) (l2 ++ gv2))
(Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) (l1 ++ gv3)), (Permutation (a :: l1) (l1 ++ gv2)), (Permutation (a :: l1) (gv3 ++ l2)), (Permutation (a :: l1) (gv3 ++ l1)), (Permutation (a :: l1) (gv3 ++ gv3)), (Permutation (a :: l1) (gv3 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l2)), (Permutation (a :: l1) (gv2 ++ l1))
(Permutation (a :: l1) (gv2 ++ gv3)), (Permutation (a :: l1) (gv2 ++ gv2)), (Permutation (a :: l1) []), (Permutation (a :: gv3) l2), (Permutation (a :: gv3) l1), (Permutation (a :: gv3) gv3), (Permutation (a :: gv3) gv2), (Permutation (a :: gv3) (a0 :: l2)), (Permutation (a :: gv3) (a0 :: l1)), (Permutation (a :: gv3) (a0 :: gv3))
(Permutation (a :: gv3) (a0 :: gv2)), (Permutation (a :: gv3) (n :: l2)), (Permutation (a :: gv3) (n :: l1)), (Permutation (a :: gv3) (n :: gv3)), (Permutation (a :: gv3) (n :: gv2)), (Permutation (a :: gv3) (a :: l2)), (Permutation (a :: gv3) (a :: l1)), (Permutation (a :: gv3) (a :: gv2)), (Permutation (a :: gv3) (merge l2 l2)), (Permutation (a :: gv3) (merge l2 l1))
(Permutation (a :: gv3) (merge l2 gv3)), (Permutation (a :: gv3) (merge l2 gv2)), (Permutation (a :: gv3) (merge l1 l2)), (Permutation (a :: gv3) (merge l1 l1)), (Permutation (a :: gv3) (merge l1 gv3)), (Permutation (a :: gv3) (merge l1 gv2)), (Permutation (a :: gv3) (merge gv3 l2)), (Permutation (a :: gv3) (merge gv3 l1)), (Permutation (a :: gv3) (merge gv3 gv3)), (Permutation (a :: gv3) (merge gv3 gv2))
(Permutation (a :: gv3) (merge gv2 l2)), (Permutation (a :: gv3) (merge gv2 l1)), (Permutation (a :: gv3) (merge gv2 gv3)), (Permutation (a :: gv3) (merge gv2 gv2)), (Permutation (a :: gv3) (l2 ++ l2)), (Permutation (a :: gv3) (l2 ++ l1)), (Permutation (a :: gv3) (l2 ++ gv3)), (Permutation (a :: gv3) (l2 ++ gv2)), (Permutation (a :: gv3) (l1 ++ l2)), (Permutation (a :: gv3) (l1 ++ l1))
(Permutation (a :: gv3) (l1 ++ gv3)), (Permutation (a :: gv3) (l1 ++ gv2)), (Permutation (a :: gv3) (gv3 ++ l2)), (Permutation (a :: gv3) (gv3 ++ l1)), (Permutation (a :: gv3) (gv3 ++ gv3)), (Permutation (a :: gv3) (gv3 ++ gv2)), (Permutation (a :: gv3) (gv2 ++ l2)), (Permutation (a :: gv3) (gv2 ++ l1)), (Permutation (a :: gv3) (gv2 ++ gv3)), (Permutation (a :: gv3) (gv2 ++ gv2))
(Permutation (a :: gv3) []), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) l1), (Permutation (a :: gv2) gv3), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: l1)), (Permutation (a :: gv2) (a0 :: gv3)), (Permutation (a :: gv2) (a0 :: gv2)), (Permutation (a :: gv2) (n :: l2))
(Permutation (a :: gv2) (n :: l1)), (Permutation (a :: gv2) (n :: gv3)), (Permutation (a :: gv2) (n :: gv2)), (Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: l1)), (Permutation (a :: gv2) (a :: gv3)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 l1)), (Permutation (a :: gv2) (merge l2 gv3)), (Permutation (a :: gv2) (merge l2 gv2))
(Permutation (a :: gv2) (merge l1 l2)), (Permutation (a :: gv2) (merge l1 l1)), (Permutation (a :: gv2) (merge l1 gv3)), (Permutation (a :: gv2) (merge l1 gv2)), (Permutation (a :: gv2) (merge gv3 l2)), (Permutation (a :: gv2) (merge gv3 l1)), (Permutation (a :: gv2) (merge gv3 gv3)), (Permutation (a :: gv2) (merge gv3 gv2)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 l1))
(Permutation (a :: gv2) (merge gv2 gv3)), (Permutation (a :: gv2) (merge gv2 gv2)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ l1)), (Permutation (a :: gv2) (l2 ++ gv3)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l1 ++ l2)), (Permutation (a :: gv2) (l1 ++ l1)), (Permutation (a :: gv2) (l1 ++ gv3)), (Permutation (a :: gv2) (l1 ++ gv2))
(Permutation (a :: gv2) (gv3 ++ l2)), (Permutation (a :: gv2) (gv3 ++ l1)), (Permutation (a :: gv2) (gv3 ++ gv3)), (Permutation (a :: gv2) (gv3 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ l1)), (Permutation (a :: gv2) (gv2 ++ gv3)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) []), (Permutation (merge l2 l2) l2)
(Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) gv3), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (a0 :: gv3)), (Permutation (merge l2 l2) (a0 :: gv2)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (n :: gv3))
(Permutation (merge l2 l2) (n :: gv2)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (a :: gv3)), (Permutation (merge l2 l2) (a :: gv2)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l2 gv3)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1))
(Permutation (merge l2 l2) (merge l1 gv3)), (Permutation (merge l2 l2) (merge l1 gv2)), (Permutation (merge l2 l2) (merge gv3 l2)), (Permutation (merge l2 l2) (merge gv3 l1)), (Permutation (merge l2 l2) (merge gv3 gv3)), (Permutation (merge l2 l2) (merge gv3 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 l1)), (Permutation (merge l2 l2) (merge gv2 gv3)), (Permutation (merge l2 l2) (merge gv2 gv2))
(Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l2 ++ gv3)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) (l1 ++ gv3)), (Permutation (merge l2 l2) (l1 ++ gv2)), (Permutation (merge l2 l2) (gv3 ++ l2)), (Permutation (merge l2 l2) (gv3 ++ l1))
(Permutation (merge l2 l2) (gv3 ++ gv3)), (Permutation (merge l2 l2) (gv3 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ l1)), (Permutation (merge l2 l2) (gv2 ++ gv3)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) gv3)
(Permutation (merge l2 l1) gv2), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (a0 :: gv3)), (Permutation (merge l2 l1) (a0 :: gv2)), (Permutation (merge l2 l1) (n :: l2)), (Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (n :: gv3)), (Permutation (merge l2 l1) (n :: gv2)), (Permutation (merge l2 l1) (a :: l2))
(Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (a :: gv3)), (Permutation (merge l2 l1) (a :: gv2)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l2 gv3)), (Permutation (merge l2 l1) (merge l2 gv2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (merge l1 gv3)), (Permutation (merge l2 l1) (merge l1 gv2))
(Permutation (merge l2 l1) (merge gv3 l2)), (Permutation (merge l2 l1) (merge gv3 l1)), (Permutation (merge l2 l1) (merge gv3 gv3)), (Permutation (merge l2 l1) (merge gv3 gv2)), (Permutation (merge l2 l1) (merge gv2 l2)), (Permutation (merge l2 l1) (merge gv2 l1)), (Permutation (merge l2 l1) (merge gv2 gv3)), (Permutation (merge l2 l1) (merge gv2 gv2)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1))
(Permutation (merge l2 l1) (l2 ++ gv3)), (Permutation (merge l2 l1) (l2 ++ gv2)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1)), (Permutation (merge l2 l1) (l1 ++ gv3)), (Permutation (merge l2 l1) (l1 ++ gv2)), (Permutation (merge l2 l1) (gv3 ++ l2)), (Permutation (merge l2 l1) (gv3 ++ l1)), (Permutation (merge l2 l1) (gv3 ++ gv3)), (Permutation (merge l2 l1) (gv3 ++ gv2))
(Permutation (merge l2 l1) (gv2 ++ l2)), (Permutation (merge l2 l1) (gv2 ++ l1)), (Permutation (merge l2 l1) (gv2 ++ gv3)), (Permutation (merge l2 l1) (gv2 ++ gv2)), (Permutation (merge l2 l1) []), (Permutation (merge l2 gv3) l2), (Permutation (merge l2 gv3) l1), (Permutation (merge l2 gv3) gv3), (Permutation (merge l2 gv3) gv2), (Permutation (merge l2 gv3) (a0 :: l2))
(Permutation (merge l2 gv3) (a0 :: l1)), (Permutation (merge l2 gv3) (a0 :: gv3)), (Permutation (merge l2 gv3) (a0 :: gv2)), (Permutation (merge l2 gv3) (n :: l2)), (Permutation (merge l2 gv3) (n :: l1)), (Permutation (merge l2 gv3) (n :: gv3)), (Permutation (merge l2 gv3) (n :: gv2)), (Permutation (merge l2 gv3) (a :: l2)), (Permutation (merge l2 gv3) (a :: l1)), (Permutation (merge l2 gv3) (a :: gv3))
(Permutation (merge l2 gv3) (a :: gv2)), (Permutation (merge l2 gv3) (merge l2 l2)), (Permutation (merge l2 gv3) (merge l2 l1)), (Permutation (merge l2 gv3) (merge l2 gv2)), (Permutation (merge l2 gv3) (merge l1 l2)), (Permutation (merge l2 gv3) (merge l1 l1)), (Permutation (merge l2 gv3) (merge l1 gv3)), (Permutation (merge l2 gv3) (merge l1 gv2)), (Permutation (merge l2 gv3) (merge gv3 l2)), (Permutation (merge l2 gv3) (merge gv3 l1))
(Permutation (merge l2 gv3) (merge gv3 gv3)), (Permutation (merge l2 gv3) (merge gv3 gv2)), (Permutation (merge l2 gv3) (merge gv2 l2)), (Permutation (merge l2 gv3) (merge gv2 l1)), (Permutation (merge l2 gv3) (merge gv2 gv3)), (Permutation (merge l2 gv3) (merge gv2 gv2)), (Permutation (merge l2 gv3) (l2 ++ l2)), (Permutation (merge l2 gv3) (l2 ++ l1)), (Permutation (merge l2 gv3) (l2 ++ gv3)), (Permutation (merge l2 gv3) (l2 ++ gv2))
(Permutation (merge l2 gv3) (l1 ++ l2)), (Permutation (merge l2 gv3) (l1 ++ l1)), (Permutation (merge l2 gv3) (l1 ++ gv3)), (Permutation (merge l2 gv3) (l1 ++ gv2)), (Permutation (merge l2 gv3) (gv3 ++ l2)), (Permutation (merge l2 gv3) (gv3 ++ l1)), (Permutation (merge l2 gv3) (gv3 ++ gv3)), (Permutation (merge l2 gv3) (gv3 ++ gv2)), (Permutation (merge l2 gv3) (gv2 ++ l2)), (Permutation (merge l2 gv3) (gv2 ++ l1))
(Permutation (merge l2 gv3) (gv2 ++ gv3)), (Permutation (merge l2 gv3) (gv2 ++ gv2)), (Permutation (merge l2 gv3) []), (Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) l1), (Permutation (merge l2 gv2) gv3), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: l1)), (Permutation (merge l2 gv2) (a0 :: gv3))
(Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (n :: l2)), (Permutation (merge l2 gv2) (n :: l1)), (Permutation (merge l2 gv2) (n :: gv3)), (Permutation (merge l2 gv2) (n :: gv2)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: l1)), (Permutation (merge l2 gv2) (a :: gv3)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (merge l2 l2))
(Permutation (merge l2 gv2) (merge l2 l1)), (Permutation (merge l2 gv2) (merge l2 gv3)), (Permutation (merge l2 gv2) (merge l1 l2)), (Permutation (merge l2 gv2) (merge l1 l1)), (Permutation (merge l2 gv2) (merge l1 gv3)), (Permutation (merge l2 gv2) (merge l1 gv2)), (Permutation (merge l2 gv2) (merge gv3 l2)), (Permutation (merge l2 gv2) (merge gv3 l1)), (Permutation (merge l2 gv2) (merge gv3 gv3)), (Permutation (merge l2 gv2) (merge gv3 gv2))
(Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 l1)), (Permutation (merge l2 gv2) (merge gv2 gv3)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ l1)), (Permutation (merge l2 gv2) (l2 ++ gv3)), (Permutation (merge l2 gv2) (l2 ++ gv2)), (Permutation (merge l2 gv2) (l1 ++ l2)), (Permutation (merge l2 gv2) (l1 ++ l1))
(Permutation (merge l2 gv2) (l1 ++ gv3)), (Permutation (merge l2 gv2) (l1 ++ gv2)), (Permutation (merge l2 gv2) (gv3 ++ l2)), (Permutation (merge l2 gv2) (gv3 ++ l1)), (Permutation (merge l2 gv2) (gv3 ++ gv3)), (Permutation (merge l2 gv2) (gv3 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ l1)), (Permutation (merge l2 gv2) (gv2 ++ gv3)), (Permutation (merge l2 gv2) (gv2 ++ gv2))
(Permutation (merge l2 gv2) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) gv3), (Permutation (merge l1 l2) gv2), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (a0 :: gv3)), (Permutation (merge l1 l2) (a0 :: gv2)), (Permutation (merge l1 l2) (n :: l2))
(Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (n :: gv3)), (Permutation (merge l1 l2) (n :: gv2)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (a :: gv3)), (Permutation (merge l1 l2) (a :: gv2)), (Permutation (merge l1 l2) (merge l2 l2)), (Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l2 gv3))
(Permutation (merge l1 l2) (merge l2 gv2)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (merge l1 gv3)), (Permutation (merge l1 l2) (merge l1 gv2)), (Permutation (merge l1 l2) (merge gv3 l2)), (Permutation (merge l1 l2) (merge gv3 l1)), (Permutation (merge l1 l2) (merge gv3 gv3)), (Permutation (merge l1 l2) (merge gv3 gv2)), (Permutation (merge l1 l2) (merge gv2 l2)), (Permutation (merge l1 l2) (merge gv2 l1))
(Permutation (merge l1 l2) (merge gv2 gv3)), (Permutation (merge l1 l2) (merge gv2 gv2)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l2 ++ gv3)), (Permutation (merge l1 l2) (l2 ++ gv2)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) (l1 ++ gv3)), (Permutation (merge l1 l2) (l1 ++ gv2))
(Permutation (merge l1 l2) (gv3 ++ l2)), (Permutation (merge l1 l2) (gv3 ++ l1)), (Permutation (merge l1 l2) (gv3 ++ gv3)), (Permutation (merge l1 l2) (gv3 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l2)), (Permutation (merge l1 l2) (gv2 ++ l1)), (Permutation (merge l1 l2) (gv2 ++ gv3)), (Permutation (merge l1 l2) (gv2 ++ gv2)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2)
(Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) gv3), (Permutation (merge l1 l1) gv2), (Permutation (merge l1 l1) (a0 :: l2)), (Permutation (merge l1 l1) (a0 :: l1)), (Permutation (merge l1 l1) (a0 :: gv3)), (Permutation (merge l1 l1) (a0 :: gv2)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (n :: gv3))
(Permutation (merge l1 l1) (n :: gv2)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (a :: gv3)), (Permutation (merge l1 l1) (a :: gv2)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l2 gv3)), (Permutation (merge l1 l1) (merge l2 gv2)), (Permutation (merge l1 l1) (merge l1 l2))
(Permutation (merge l1 l1) (merge l1 gv3)), (Permutation (merge l1 l1) (merge l1 gv2)), (Permutation (merge l1 l1) (merge gv3 l2)), (Permutation (merge l1 l1) (merge gv3 l1)), (Permutation (merge l1 l1) (merge gv3 gv3)), (Permutation (merge l1 l1) (merge gv3 gv2)), (Permutation (merge l1 l1) (merge gv2 l2)), (Permutation (merge l1 l1) (merge gv2 l1)), (Permutation (merge l1 l1) (merge gv2 gv3)), (Permutation (merge l1 l1) (merge gv2 gv2))
(Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l2 ++ gv3)), (Permutation (merge l1 l1) (l2 ++ gv2)), (Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) (l1 ++ gv3)), (Permutation (merge l1 l1) (l1 ++ gv2)), (Permutation (merge l1 l1) (gv3 ++ l2)), (Permutation (merge l1 l1) (gv3 ++ l1))
(Permutation (merge l1 l1) (gv3 ++ gv3)), (Permutation (merge l1 l1) (gv3 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l2)), (Permutation (merge l1 l1) (gv2 ++ l1)), (Permutation (merge l1 l1) (gv2 ++ gv3)), (Permutation (merge l1 l1) (gv2 ++ gv2)), (Permutation (merge l1 l1) []), (Permutation (merge l1 gv3) l2), (Permutation (merge l1 gv3) l1), (Permutation (merge l1 gv3) gv3)
(Permutation (merge l1 gv3) gv2), (Permutation (merge l1 gv3) (a0 :: l2)), (Permutation (merge l1 gv3) (a0 :: l1)), (Permutation (merge l1 gv3) (a0 :: gv3)), (Permutation (merge l1 gv3) (a0 :: gv2)), (Permutation (merge l1 gv3) (n :: l2)), (Permutation (merge l1 gv3) (n :: l1)), (Permutation (merge l1 gv3) (n :: gv3)), (Permutation (merge l1 gv3) (n :: gv2)), (Permutation (merge l1 gv3) (a :: l2))
(Permutation (merge l1 gv3) (a :: l1)), (Permutation (merge l1 gv3) (a :: gv3)), (Permutation (merge l1 gv3) (a :: gv2)), (Permutation (merge l1 gv3) (merge l2 l2)), (Permutation (merge l1 gv3) (merge l2 l1)), (Permutation (merge l1 gv3) (merge l2 gv3)), (Permutation (merge l1 gv3) (merge l2 gv2)), (Permutation (merge l1 gv3) (merge l1 l2)), (Permutation (merge l1 gv3) (merge l1 l1)), (Permutation (merge l1 gv3) (merge l1 gv2))
(Permutation (merge l1 gv3) (merge gv3 l2)), (Permutation (merge l1 gv3) (merge gv3 l1)), (Permutation (merge l1 gv3) (merge gv3 gv3)), (Permutation (merge l1 gv3) (merge gv3 gv2)), (Permutation (merge l1 gv3) (merge gv2 l2)), (Permutation (merge l1 gv3) (merge gv2 l1)), (Permutation (merge l1 gv3) (merge gv2 gv3)), (Permutation (merge l1 gv3) (merge gv2 gv2)), (Permutation (merge l1 gv3) (l2 ++ l2)), (Permutation (merge l1 gv3) (l2 ++ l1))
(Permutation (merge l1 gv3) (l2 ++ gv3)), (Permutation (merge l1 gv3) (l2 ++ gv2)), (Permutation (merge l1 gv3) (l1 ++ l2)), (Permutation (merge l1 gv3) (l1 ++ l1)), (Permutation (merge l1 gv3) (l1 ++ gv3)), (Permutation (merge l1 gv3) (l1 ++ gv2)), (Permutation (merge l1 gv3) (gv3 ++ l2)), (Permutation (merge l1 gv3) (gv3 ++ l1)), (Permutation (merge l1 gv3) (gv3 ++ gv3)), (Permutation (merge l1 gv3) (gv3 ++ gv2))
(Permutation (merge l1 gv3) (gv2 ++ l2)), (Permutation (merge l1 gv3) (gv2 ++ l1)), (Permutation (merge l1 gv3) (gv2 ++ gv3)), (Permutation (merge l1 gv3) (gv2 ++ gv2)), (Permutation (merge l1 gv3) []), (Permutation (merge l1 gv2) l2), (Permutation (merge l1 gv2) l1), (Permutation (merge l1 gv2) gv3), (Permutation (merge l1 gv2) gv2), (Permutation (merge l1 gv2) (a0 :: l2))
(Permutation (merge l1 gv2) (a0 :: l1)), (Permutation (merge l1 gv2) (a0 :: gv3)), (Permutation (merge l1 gv2) (a0 :: gv2)), (Permutation (merge l1 gv2) (n :: l2)), (Permutation (merge l1 gv2) (n :: l1)), (Permutation (merge l1 gv2) (n :: gv3)), (Permutation (merge l1 gv2) (n :: gv2)), (Permutation (merge l1 gv2) (a :: l2)), (Permutation (merge l1 gv2) (a :: l1)), (Permutation (merge l1 gv2) (a :: gv3))
(Permutation (merge l1 gv2) (a :: gv2)), (Permutation (merge l1 gv2) (merge l2 l2)), (Permutation (merge l1 gv2) (merge l2 l1)), (Permutation (merge l1 gv2) (merge l2 gv3)), (Permutation (merge l1 gv2) (merge l2 gv2)), (Permutation (merge l1 gv2) (merge l1 l2)), (Permutation (merge l1 gv2) (merge l1 l1)), (Permutation (merge l1 gv2) (merge l1 gv3)), (Permutation (merge l1 gv2) (merge gv3 l2)), (Permutation (merge l1 gv2) (merge gv3 l1))
(Permutation (merge l1 gv2) (merge gv3 gv3)), (Permutation (merge l1 gv2) (merge gv3 gv2)), (Permutation (merge l1 gv2) (merge gv2 l2)), (Permutation (merge l1 gv2) (merge gv2 l1)), (Permutation (merge l1 gv2) (merge gv2 gv3)), (Permutation (merge l1 gv2) (merge gv2 gv2)), (Permutation (merge l1 gv2) (l2 ++ l2)), (Permutation (merge l1 gv2) (l2 ++ l1)), (Permutation (merge l1 gv2) (l2 ++ gv3)), (Permutation (merge l1 gv2) (l2 ++ gv2))
(Permutation (merge l1 gv2) (l1 ++ l2)), (Permutation (merge l1 gv2) (l1 ++ l1)), (Permutation (merge l1 gv2) (l1 ++ gv3)), (Permutation (merge l1 gv2) (l1 ++ gv2)), (Permutation (merge l1 gv2) (gv3 ++ l2)), (Permutation (merge l1 gv2) (gv3 ++ l1)), (Permutation (merge l1 gv2) (gv3 ++ gv3)), (Permutation (merge l1 gv2) (gv3 ++ gv2)), (Permutation (merge l1 gv2) (gv2 ++ l2)), (Permutation (merge l1 gv2) (gv2 ++ l1))
(Permutation (merge l1 gv2) (gv2 ++ gv3)), (Permutation (merge l1 gv2) (gv2 ++ gv2)), (Permutation (merge l1 gv2) []), (Permutation (merge gv3 l2) l2), (Permutation (merge gv3 l2) l1), (Permutation (merge gv3 l2) gv3), (Permutation (merge gv3 l2) gv2), (Permutation (merge gv3 l2) (a0 :: l2)), (Permutation (merge gv3 l2) (a0 :: l1)), (Permutation (merge gv3 l2) (a0 :: gv3))
(Permutation (merge gv3 l2) (a0 :: gv2)), (Permutation (merge gv3 l2) (n :: l2)), (Permutation (merge gv3 l2) (n :: l1)), (Permutation (merge gv3 l2) (n :: gv3)), (Permutation (merge gv3 l2) (n :: gv2)), (Permutation (merge gv3 l2) (a :: l2)), (Permutation (merge gv3 l2) (a :: l1)), (Permutation (merge gv3 l2) (a :: gv3)), (Permutation (merge gv3 l2) (a :: gv2)), (Permutation (merge gv3 l2) (merge l2 l2))
(Permutation (merge gv3 l2) (merge l2 l1)), (Permutation (merge gv3 l2) (merge l2 gv3)), (Permutation (merge gv3 l2) (merge l2 gv2)), (Permutation (merge gv3 l2) (merge l1 l2)), (Permutation (merge gv3 l2) (merge l1 l1)), (Permutation (merge gv3 l2) (merge l1 gv3)), (Permutation (merge gv3 l2) (merge l1 gv2)), (Permutation (merge gv3 l2) (merge gv3 l1)), (Permutation (merge gv3 l2) (merge gv3 gv3)), (Permutation (merge gv3 l2) (merge gv3 gv2))
(Permutation (merge gv3 l2) (merge gv2 l2)), (Permutation (merge gv3 l2) (merge gv2 l1)), (Permutation (merge gv3 l2) (merge gv2 gv3)), (Permutation (merge gv3 l2) (merge gv2 gv2)), (Permutation (merge gv3 l2) (l2 ++ l2)), (Permutation (merge gv3 l2) (l2 ++ l1)), (Permutation (merge gv3 l2) (l2 ++ gv3)), (Permutation (merge gv3 l2) (l2 ++ gv2)), (Permutation (merge gv3 l2) (l1 ++ l2)), (Permutation (merge gv3 l2) (l1 ++ l1))
(Permutation (merge gv3 l2) (l1 ++ gv3)), (Permutation (merge gv3 l2) (l1 ++ gv2)), (Permutation (merge gv3 l2) (gv3 ++ l2)), (Permutation (merge gv3 l2) (gv3 ++ l1)), (Permutation (merge gv3 l2) (gv3 ++ gv3)), (Permutation (merge gv3 l2) (gv3 ++ gv2)), (Permutation (merge gv3 l2) (gv2 ++ l2)), (Permutation (merge gv3 l2) (gv2 ++ l1)), (Permutation (merge gv3 l2) (gv2 ++ gv3)), (Permutation (merge gv3 l2) (gv2 ++ gv2))
(Permutation (merge gv3 l2) []), (Permutation (merge gv3 l1) l2), (Permutation (merge gv3 l1) l1), (Permutation (merge gv3 l1) gv3), (Permutation (merge gv3 l1) gv2), (Permutation (merge gv3 l1) (a0 :: l2)), (Permutation (merge gv3 l1) (a0 :: l1)), (Permutation (merge gv3 l1) (a0 :: gv3)), (Permutation (merge gv3 l1) (a0 :: gv2)), (Permutation (merge gv3 l1) (n :: l2))
(Permutation (merge gv3 l1) (n :: l1)), (Permutation (merge gv3 l1) (n :: gv3)), (Permutation (merge gv3 l1) (n :: gv2)), (Permutation (merge gv3 l1) (a :: l2)), (Permutation (merge gv3 l1) (a :: l1)), (Permutation (merge gv3 l1) (a :: gv3)), (Permutation (merge gv3 l1) (a :: gv2)), (Permutation (merge gv3 l1) (merge l2 l2)), (Permutation (merge gv3 l1) (merge l2 l1)), (Permutation (merge gv3 l1) (merge l2 gv3))
(Permutation (merge gv3 l1) (merge l2 gv2)), (Permutation (merge gv3 l1) (merge l1 l2)), (Permutation (merge gv3 l1) (merge l1 l1)), (Permutation (merge gv3 l1) (merge l1 gv3)), (Permutation (merge gv3 l1) (merge l1 gv2)), (Permutation (merge gv3 l1) (merge gv3 l2)), (Permutation (merge gv3 l1) (merge gv3 gv3)), (Permutation (merge gv3 l1) (merge gv3 gv2)), (Permutation (merge gv3 l1) (merge gv2 l2)), (Permutation (merge gv3 l1) (merge gv2 l1))
(Permutation (merge gv3 l1) (merge gv2 gv3)), (Permutation (merge gv3 l1) (merge gv2 gv2)), (Permutation (merge gv3 l1) (l2 ++ l2)), (Permutation (merge gv3 l1) (l2 ++ l1)), (Permutation (merge gv3 l1) (l2 ++ gv3)), (Permutation (merge gv3 l1) (l2 ++ gv2)), (Permutation (merge gv3 l1) (l1 ++ l2)), (Permutation (merge gv3 l1) (l1 ++ l1)), (Permutation (merge gv3 l1) (l1 ++ gv3)), (Permutation (merge gv3 l1) (l1 ++ gv2))
(Permutation (merge gv3 l1) (gv3 ++ l2)), (Permutation (merge gv3 l1) (gv3 ++ l1)), (Permutation (merge gv3 l1) (gv3 ++ gv3)), (Permutation (merge gv3 l1) (gv3 ++ gv2)), (Permutation (merge gv3 l1) (gv2 ++ l2)), (Permutation (merge gv3 l1) (gv2 ++ l1)), (Permutation (merge gv3 l1) (gv2 ++ gv3)), (Permutation (merge gv3 l1) (gv2 ++ gv2)), (Permutation (merge gv3 l1) []), (Permutation (merge gv3 gv3) l2)
(Permutation (merge gv3 gv3) l1), (Permutation (merge gv3 gv3) gv3), (Permutation (merge gv3 gv3) gv2), (Permutation (merge gv3 gv3) (a0 :: l2)), (Permutation (merge gv3 gv3) (a0 :: l1)), (Permutation (merge gv3 gv3) (a0 :: gv3)), (Permutation (merge gv3 gv3) (a0 :: gv2)), (Permutation (merge gv3 gv3) (n :: l2)), (Permutation (merge gv3 gv3) (n :: l1)), (Permutation (merge gv3 gv3) (n :: gv3))
(Permutation (merge gv3 gv3) (n :: gv2)), (Permutation (merge gv3 gv3) (a :: l2)), (Permutation (merge gv3 gv3) (a :: l1)), (Permutation (merge gv3 gv3) (a :: gv3)), (Permutation (merge gv3 gv3) (a :: gv2)), (Permutation (merge gv3 gv3) (merge l2 l2)), (Permutation (merge gv3 gv3) (merge l2 l1)), (Permutation (merge gv3 gv3) (merge l2 gv3)), (Permutation (merge gv3 gv3) (merge l2 gv2)), (Permutation (merge gv3 gv3) (merge l1 l2))
(Permutation (merge gv3 gv3) (merge l1 l1)), (Permutation (merge gv3 gv3) (merge l1 gv3)), (Permutation (merge gv3 gv3) (merge l1 gv2)), (Permutation (merge gv3 gv3) (merge gv3 l2)), (Permutation (merge gv3 gv3) (merge gv3 l1)), (Permutation (merge gv3 gv3) (merge gv3 gv2)), (Permutation (merge gv3 gv3) (merge gv2 l2)), (Permutation (merge gv3 gv3) (merge gv2 l1)), (Permutation (merge gv3 gv3) (merge gv2 gv3)), (Permutation (merge gv3 gv3) (merge gv2 gv2))
(Permutation (merge gv3 gv3) (l2 ++ l2)), (Permutation (merge gv3 gv3) (l2 ++ l1)), (Permutation (merge gv3 gv3) (l2 ++ gv3)), (Permutation (merge gv3 gv3) (l2 ++ gv2)), (Permutation (merge gv3 gv3) (l1 ++ l2)), (Permutation (merge gv3 gv3) (l1 ++ l1)), (Permutation (merge gv3 gv3) (l1 ++ gv3)), (Permutation (merge gv3 gv3) (l1 ++ gv2)), (Permutation (merge gv3 gv3) (gv3 ++ l2)), (Permutation (merge gv3 gv3) (gv3 ++ l1))
(Permutation (merge gv3 gv3) (gv3 ++ gv3)), (Permutation (merge gv3 gv3) (gv3 ++ gv2)), (Permutation (merge gv3 gv3) (gv2 ++ l2)), (Permutation (merge gv3 gv3) (gv2 ++ l1)), (Permutation (merge gv3 gv3) (gv2 ++ gv3)), (Permutation (merge gv3 gv3) (gv2 ++ gv2)), (Permutation (merge gv3 gv3) []), (Permutation (merge gv3 gv2) l2), (Permutation (merge gv3 gv2) l1), (Permutation (merge gv3 gv2) gv3)
(Permutation (merge gv3 gv2) gv2), (Permutation (merge gv3 gv2) (a0 :: l2)), (Permutation (merge gv3 gv2) (a0 :: l1)), (Permutation (merge gv3 gv2) (a0 :: gv3)), (Permutation (merge gv3 gv2) (a0 :: gv2)), (Permutation (merge gv3 gv2) (n :: l2)), (Permutation (merge gv3 gv2) (n :: l1)), (Permutation (merge gv3 gv2) (n :: gv3)), (Permutation (merge gv3 gv2) (n :: gv2)), (Permutation (merge gv3 gv2) (a :: l2))
(Permutation (merge gv3 gv2) (a :: l1)), (Permutation (merge gv3 gv2) (a :: gv3)), (Permutation (merge gv3 gv2) (a :: gv2)), (Permutation (merge gv3 gv2) (merge l2 l2)), (Permutation (merge gv3 gv2) (merge l2 l1)), (Permutation (merge gv3 gv2) (merge l2 gv3)), (Permutation (merge gv3 gv2) (merge l2 gv2)), (Permutation (merge gv3 gv2) (merge l1 l2)), (Permutation (merge gv3 gv2) (merge l1 l1)), (Permutation (merge gv3 gv2) (merge l1 gv3))
(Permutation (merge gv3 gv2) (merge l1 gv2)), (Permutation (merge gv3 gv2) (merge gv3 l2)), (Permutation (merge gv3 gv2) (merge gv3 l1)), (Permutation (merge gv3 gv2) (merge gv3 gv3)), (Permutation (merge gv3 gv2) (merge gv2 l2)), (Permutation (merge gv3 gv2) (merge gv2 l1)), (Permutation (merge gv3 gv2) (merge gv2 gv3)), (Permutation (merge gv3 gv2) (merge gv2 gv2)), (Permutation (merge gv3 gv2) (l2 ++ l2)), (Permutation (merge gv3 gv2) (l2 ++ l1))
(Permutation (merge gv3 gv2) (l2 ++ gv3)), (Permutation (merge gv3 gv2) (l2 ++ gv2)), (Permutation (merge gv3 gv2) (l1 ++ l2)), (Permutation (merge gv3 gv2) (l1 ++ l1)), (Permutation (merge gv3 gv2) (l1 ++ gv3)), (Permutation (merge gv3 gv2) (l1 ++ gv2)), (Permutation (merge gv3 gv2) (gv3 ++ l2)), (Permutation (merge gv3 gv2) (gv3 ++ l1)), (Permutation (merge gv3 gv2) (gv3 ++ gv3)), (Permutation (merge gv3 gv2) (gv3 ++ gv2))
(Permutation (merge gv3 gv2) (gv2 ++ l2)), (Permutation (merge gv3 gv2) (gv2 ++ l1)), (Permutation (merge gv3 gv2) (gv2 ++ gv3)), (Permutation (merge gv3 gv2) (gv2 ++ gv2)), (Permutation (merge gv3 gv2) []), (Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) l1), (Permutation (merge gv2 l2) gv3), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) (a0 :: l2))
(Permutation (merge gv2 l2) (a0 :: l1)), (Permutation (merge gv2 l2) (a0 :: gv3)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (n :: l2)), (Permutation (merge gv2 l2) (n :: l1)), (Permutation (merge gv2 l2) (n :: gv3)), (Permutation (merge gv2 l2) (n :: gv2)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: l1)), (Permutation (merge gv2 l2) (a :: gv3))
(Permutation (merge gv2 l2) (a :: gv2)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 l1)), (Permutation (merge gv2 l2) (merge l2 gv3)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l1 l2)), (Permutation (merge gv2 l2) (merge l1 l1)), (Permutation (merge gv2 l2) (merge l1 gv3)), (Permutation (merge gv2 l2) (merge l1 gv2)), (Permutation (merge gv2 l2) (merge gv3 l2))
(Permutation (merge gv2 l2) (merge gv3 l1)), (Permutation (merge gv2 l2) (merge gv3 gv3)), (Permutation (merge gv2 l2) (merge gv3 gv2)), (Permutation (merge gv2 l2) (merge gv2 l1)), (Permutation (merge gv2 l2) (merge gv2 gv3)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (l2 ++ l2)), (Permutation (merge gv2 l2) (l2 ++ l1)), (Permutation (merge gv2 l2) (l2 ++ gv3)), (Permutation (merge gv2 l2) (l2 ++ gv2))
(Permutation (merge gv2 l2) (l1 ++ l2)), (Permutation (merge gv2 l2) (l1 ++ l1)), (Permutation (merge gv2 l2) (l1 ++ gv3)), (Permutation (merge gv2 l2) (l1 ++ gv2)), (Permutation (merge gv2 l2) (gv3 ++ l2)), (Permutation (merge gv2 l2) (gv3 ++ l1)), (Permutation (merge gv2 l2) (gv3 ++ gv3)), (Permutation (merge gv2 l2) (gv3 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ l1))
(Permutation (merge gv2 l2) (gv2 ++ gv3)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 l1) l2), (Permutation (merge gv2 l1) l1), (Permutation (merge gv2 l1) gv3), (Permutation (merge gv2 l1) gv2), (Permutation (merge gv2 l1) (a0 :: l2)), (Permutation (merge gv2 l1) (a0 :: l1)), (Permutation (merge gv2 l1) (a0 :: gv3))
(Permutation (merge gv2 l1) (a0 :: gv2)), (Permutation (merge gv2 l1) (n :: l2)), (Permutation (merge gv2 l1) (n :: l1)), (Permutation (merge gv2 l1) (n :: gv3)), (Permutation (merge gv2 l1) (n :: gv2)), (Permutation (merge gv2 l1) (a :: l2)), (Permutation (merge gv2 l1) (a :: l1)), (Permutation (merge gv2 l1) (a :: gv3)), (Permutation (merge gv2 l1) (a :: gv2)), (Permutation (merge gv2 l1) (merge l2 l2))
(Permutation (merge gv2 l1) (merge l2 l1)), (Permutation (merge gv2 l1) (merge l2 gv3)), (Permutation (merge gv2 l1) (merge l2 gv2)), (Permutation (merge gv2 l1) (merge l1 l2)), (Permutation (merge gv2 l1) (merge l1 l1)), (Permutation (merge gv2 l1) (merge l1 gv3)), (Permutation (merge gv2 l1) (merge l1 gv2)), (Permutation (merge gv2 l1) (merge gv3 l2)), (Permutation (merge gv2 l1) (merge gv3 l1)), (Permutation (merge gv2 l1) (merge gv3 gv3))
(Permutation (merge gv2 l1) (merge gv3 gv2)), (Permutation (merge gv2 l1) (merge gv2 l2)), (Permutation (merge gv2 l1) (merge gv2 gv3)), (Permutation (merge gv2 l1) (merge gv2 gv2)), (Permutation (merge gv2 l1) (l2 ++ l2)), (Permutation (merge gv2 l1) (l2 ++ l1)), (Permutation (merge gv2 l1) (l2 ++ gv3)), (Permutation (merge gv2 l1) (l2 ++ gv2)), (Permutation (merge gv2 l1) (l1 ++ l2)), (Permutation (merge gv2 l1) (l1 ++ l1))
(Permutation (merge gv2 l1) (l1 ++ gv3)), (Permutation (merge gv2 l1) (l1 ++ gv2)), (Permutation (merge gv2 l1) (gv3 ++ l2)), (Permutation (merge gv2 l1) (gv3 ++ l1)), (Permutation (merge gv2 l1) (gv3 ++ gv3)), (Permutation (merge gv2 l1) (gv3 ++ gv2)), (Permutation (merge gv2 l1) (gv2 ++ l2)), (Permutation (merge gv2 l1) (gv2 ++ l1)), (Permutation (merge gv2 l1) (gv2 ++ gv3)), (Permutation (merge gv2 l1) (gv2 ++ gv2))
(Permutation (merge gv2 l1) []), (Permutation (merge gv2 gv3) l2), (Permutation (merge gv2 gv3) l1), (Permutation (merge gv2 gv3) gv3), (Permutation (merge gv2 gv3) gv2), (Permutation (merge gv2 gv3) (a0 :: l2)), (Permutation (merge gv2 gv3) (a0 :: l1)), (Permutation (merge gv2 gv3) (a0 :: gv3)), (Permutation (merge gv2 gv3) (a0 :: gv2)), (Permutation (merge gv2 gv3) (n :: l2))
(Permutation (merge gv2 gv3) (n :: l1)), (Permutation (merge gv2 gv3) (n :: gv3)), (Permutation (merge gv2 gv3) (n :: gv2)), (Permutation (merge gv2 gv3) (a :: l2)), (Permutation (merge gv2 gv3) (a :: l1)), (Permutation (merge gv2 gv3) (a :: gv3)), (Permutation (merge gv2 gv3) (a :: gv2)), (Permutation (merge gv2 gv3) (merge l2 l2)), (Permutation (merge gv2 gv3) (merge l2 l1)), (Permutation (merge gv2 gv3) (merge l2 gv3))
(Permutation (merge gv2 gv3) (merge l2 gv2)), (Permutation (merge gv2 gv3) (merge l1 l2)), (Permutation (merge gv2 gv3) (merge l1 l1)), (Permutation (merge gv2 gv3) (merge l1 gv3)), (Permutation (merge gv2 gv3) (merge l1 gv2)), (Permutation (merge gv2 gv3) (merge gv3 l2)), (Permutation (merge gv2 gv3) (merge gv3 l1)), (Permutation (merge gv2 gv3) (merge gv3 gv3)), (Permutation (merge gv2 gv3) (merge gv3 gv2)), (Permutation (merge gv2 gv3) (merge gv2 l2))
(Permutation (merge gv2 gv3) (merge gv2 l1)), (Permutation (merge gv2 gv3) (merge gv2 gv2)), (Permutation (merge gv2 gv3) (l2 ++ l2)), (Permutation (merge gv2 gv3) (l2 ++ l1)), (Permutation (merge gv2 gv3) (l2 ++ gv3)), (Permutation (merge gv2 gv3) (l2 ++ gv2)), (Permutation (merge gv2 gv3) (l1 ++ l2)), (Permutation (merge gv2 gv3) (l1 ++ l1)), (Permutation (merge gv2 gv3) (l1 ++ gv3)), (Permutation (merge gv2 gv3) (l1 ++ gv2))
(Permutation (merge gv2 gv3) (gv3 ++ l2)), (Permutation (merge gv2 gv3) (gv3 ++ l1)), (Permutation (merge gv2 gv3) (gv3 ++ gv3)), (Permutation (merge gv2 gv3) (gv3 ++ gv2)), (Permutation (merge gv2 gv3) (gv2 ++ l2)), (Permutation (merge gv2 gv3) (gv2 ++ l1)), (Permutation (merge gv2 gv3) (gv2 ++ gv3)), (Permutation (merge gv2 gv3) (gv2 ++ gv2)), (Permutation (merge gv2 gv3) []), (Permutation (merge gv2 gv2) l2)
(Permutation (merge gv2 gv2) l1), (Permutation (merge gv2 gv2) gv3), (Permutation (merge gv2 gv2) gv2), (Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: l1)), (Permutation (merge gv2 gv2) (a0 :: gv3)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (n :: l2)), (Permutation (merge gv2 gv2) (n :: l1)), (Permutation (merge gv2 gv2) (n :: gv3))
(Permutation (merge gv2 gv2) (n :: gv2)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: l1)), (Permutation (merge gv2 gv2) (a :: gv3)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (merge l2 l2)), (Permutation (merge gv2 gv2) (merge l2 l1)), (Permutation (merge gv2 gv2) (merge l2 gv3)), (Permutation (merge gv2 gv2) (merge l2 gv2)), (Permutation (merge gv2 gv2) (merge l1 l2))
(Permutation (merge gv2 gv2) (merge l1 l1)), (Permutation (merge gv2 gv2) (merge l1 gv3)), (Permutation (merge gv2 gv2) (merge l1 gv2)), (Permutation (merge gv2 gv2) (merge gv3 l2)), (Permutation (merge gv2 gv2) (merge gv3 l1)), (Permutation (merge gv2 gv2) (merge gv3 gv3)), (Permutation (merge gv2 gv2) (merge gv3 gv2)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 l1)), (Permutation (merge gv2 gv2) (merge gv2 gv3))
(Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ l1)), (Permutation (merge gv2 gv2) (l2 ++ gv3)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l1 ++ l2)), (Permutation (merge gv2 gv2) (l1 ++ l1)), (Permutation (merge gv2 gv2) (l1 ++ gv3)), (Permutation (merge gv2 gv2) (l1 ++ gv2)), (Permutation (merge gv2 gv2) (gv3 ++ l2)), (Permutation (merge gv2 gv2) (gv3 ++ l1))
(Permutation (merge gv2 gv2) (gv3 ++ gv3)), (Permutation (merge gv2 gv2) (gv3 ++ gv2)), (Permutation (merge gv2 gv2) (gv2 ++ l2)), (Permutation (merge gv2 gv2) (gv2 ++ l1)), (Permutation (merge gv2 gv2) (gv2 ++ gv3)), (Permutation (merge gv2 gv2) (gv2 ++ gv2)), (Permutation (merge gv2 gv2) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) gv3)
(Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (a0 :: gv3)), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (n :: gv3)), (Permutation (l2 ++ l2) (n :: gv2)), (Permutation (l2 ++ l2) (a :: l2))
(Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (a :: gv3)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l2 gv3)), (Permutation (l2 ++ l2) (merge l2 gv2)), (Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (merge l1 gv3))
(Permutation (l2 ++ l2) (merge l1 gv2)), (Permutation (l2 ++ l2) (merge gv3 l2)), (Permutation (l2 ++ l2) (merge gv3 l1)), (Permutation (l2 ++ l2) (merge gv3 gv3)), (Permutation (l2 ++ l2) (merge gv3 gv2)), (Permutation (l2 ++ l2) (merge gv2 l2)), (Permutation (l2 ++ l2) (merge gv2 l1)), (Permutation (l2 ++ l2) (merge gv2 gv3)), (Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (l2 ++ l1))
(Permutation (l2 ++ l2) (l2 ++ gv3)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ gv3)), (Permutation (l2 ++ l2) (l1 ++ gv2)), (Permutation (l2 ++ l2) (gv3 ++ l2)), (Permutation (l2 ++ l2) (gv3 ++ l1)), (Permutation (l2 ++ l2) (gv3 ++ gv3)), (Permutation (l2 ++ l2) (gv3 ++ gv2))
(Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ l1)), (Permutation (l2 ++ l2) (gv2 ++ gv3)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) gv3), (Permutation (l2 ++ l1) gv2), (Permutation (l2 ++ l1) (a0 :: l2))
(Permutation (l2 ++ l1) (a0 :: l1)), (Permutation (l2 ++ l1) (a0 :: gv3)), (Permutation (l2 ++ l1) (a0 :: gv2)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (n :: gv3)), (Permutation (l2 ++ l1) (n :: gv2)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (a :: gv3))
(Permutation (l2 ++ l1) (a :: gv2)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l2 gv3)), (Permutation (l2 ++ l1) (merge l2 gv2)), (Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (merge l1 gv3)), (Permutation (l2 ++ l1) (merge l1 gv2)), (Permutation (l2 ++ l1) (merge gv3 l2))
(Permutation (l2 ++ l1) (merge gv3 l1)), (Permutation (l2 ++ l1) (merge gv3 gv3)), (Permutation (l2 ++ l1) (merge gv3 gv2)), (Permutation (l2 ++ l1) (merge gv2 l2)), (Permutation (l2 ++ l1) (merge gv2 l1)), (Permutation (l2 ++ l1) (merge gv2 gv3)), (Permutation (l2 ++ l1) (merge gv2 gv2)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l2 ++ gv3)), (Permutation (l2 ++ l1) (l2 ++ gv2))
(Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ gv3)), (Permutation (l2 ++ l1) (l1 ++ gv2)), (Permutation (l2 ++ l1) (gv3 ++ l2)), (Permutation (l2 ++ l1) (gv3 ++ l1)), (Permutation (l2 ++ l1) (gv3 ++ gv3)), (Permutation (l2 ++ l1) (gv3 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l2)), (Permutation (l2 ++ l1) (gv2 ++ l1))
(Permutation (l2 ++ l1) (gv2 ++ gv3)), (Permutation (l2 ++ l1) (gv2 ++ gv2)), (Permutation (l2 ++ l1) []), (Permutation (l2 ++ gv3) l2), (Permutation (l2 ++ gv3) l1), (Permutation (l2 ++ gv3) gv3), (Permutation (l2 ++ gv3) gv2), (Permutation (l2 ++ gv3) (a0 :: l2)), (Permutation (l2 ++ gv3) (a0 :: l1)), (Permutation (l2 ++ gv3) (a0 :: gv3))
(Permutation (l2 ++ gv3) (a0 :: gv2)), (Permutation (l2 ++ gv3) (n :: l2)), (Permutation (l2 ++ gv3) (n :: l1)), (Permutation (l2 ++ gv3) (n :: gv3)), (Permutation (l2 ++ gv3) (n :: gv2)), (Permutation (l2 ++ gv3) (a :: l2)), (Permutation (l2 ++ gv3) (a :: l1)), (Permutation (l2 ++ gv3) (a :: gv3)), (Permutation (l2 ++ gv3) (a :: gv2)), (Permutation (l2 ++ gv3) (merge l2 l2))
(Permutation (l2 ++ gv3) (merge l2 l1)), (Permutation (l2 ++ gv3) (merge l2 gv3)), (Permutation (l2 ++ gv3) (merge l2 gv2)), (Permutation (l2 ++ gv3) (merge l1 l2)), (Permutation (l2 ++ gv3) (merge l1 l1)), (Permutation (l2 ++ gv3) (merge l1 gv3)), (Permutation (l2 ++ gv3) (merge l1 gv2)), (Permutation (l2 ++ gv3) (merge gv3 l2)), (Permutation (l2 ++ gv3) (merge gv3 l1)), (Permutation (l2 ++ gv3) (merge gv3 gv3))
(Permutation (l2 ++ gv3) (merge gv3 gv2)), (Permutation (l2 ++ gv3) (merge gv2 l2)), (Permutation (l2 ++ gv3) (merge gv2 l1)), (Permutation (l2 ++ gv3) (merge gv2 gv3)), (Permutation (l2 ++ gv3) (merge gv2 gv2)), (Permutation (l2 ++ gv3) (l2 ++ l2)), (Permutation (l2 ++ gv3) (l2 ++ l1)), (Permutation (l2 ++ gv3) (l2 ++ gv2)), (Permutation (l2 ++ gv3) (l1 ++ l2)), (Permutation (l2 ++ gv3) (l1 ++ l1))
(Permutation (l2 ++ gv3) (l1 ++ gv3)), (Permutation (l2 ++ gv3) (l1 ++ gv2)), (Permutation (l2 ++ gv3) (gv3 ++ l2)), (Permutation (l2 ++ gv3) (gv3 ++ l1)), (Permutation (l2 ++ gv3) (gv3 ++ gv3)), (Permutation (l2 ++ gv3) (gv3 ++ gv2)), (Permutation (l2 ++ gv3) (gv2 ++ l2)), (Permutation (l2 ++ gv3) (gv2 ++ l1)), (Permutation (l2 ++ gv3) (gv2 ++ gv3)), (Permutation (l2 ++ gv3) (gv2 ++ gv2))
(Permutation (l2 ++ gv3) []), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) l1), (Permutation (l2 ++ gv2) gv3), (Permutation (l2 ++ gv2) gv2), (Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: l1)), (Permutation (l2 ++ gv2) (a0 :: gv3)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (n :: l2))
(Permutation (l2 ++ gv2) (n :: l1)), (Permutation (l2 ++ gv2) (n :: gv3)), (Permutation (l2 ++ gv2) (n :: gv2)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: l1)), (Permutation (l2 ++ gv2) (a :: gv3)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (merge l2 l2)), (Permutation (l2 ++ gv2) (merge l2 l1)), (Permutation (l2 ++ gv2) (merge l2 gv3))
(Permutation (l2 ++ gv2) (merge l2 gv2)), (Permutation (l2 ++ gv2) (merge l1 l2)), (Permutation (l2 ++ gv2) (merge l1 l1)), (Permutation (l2 ++ gv2) (merge l1 gv3)), (Permutation (l2 ++ gv2) (merge l1 gv2)), (Permutation (l2 ++ gv2) (merge gv3 l2)), (Permutation (l2 ++ gv2) (merge gv3 l1)), (Permutation (l2 ++ gv2) (merge gv3 gv3)), (Permutation (l2 ++ gv2) (merge gv3 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l2))
(Permutation (l2 ++ gv2) (merge gv2 l1)), (Permutation (l2 ++ gv2) (merge gv2 gv3)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l1)), (Permutation (l2 ++ gv2) (l2 ++ gv3)), (Permutation (l2 ++ gv2) (l1 ++ l2)), (Permutation (l2 ++ gv2) (l1 ++ l1)), (Permutation (l2 ++ gv2) (l1 ++ gv3)), (Permutation (l2 ++ gv2) (l1 ++ gv2))
(Permutation (l2 ++ gv2) (gv3 ++ l2)), (Permutation (l2 ++ gv2) (gv3 ++ l1)), (Permutation (l2 ++ gv2) (gv3 ++ gv3)), (Permutation (l2 ++ gv2) (gv3 ++ gv2)), (Permutation (l2 ++ gv2) (gv2 ++ l2)), (Permutation (l2 ++ gv2) (gv2 ++ l1)), (Permutation (l2 ++ gv2) (gv2 ++ gv3)), (Permutation (l2 ++ gv2) (gv2 ++ gv2)), (Permutation (l2 ++ gv2) []), (Permutation (l1 ++ l2) l2)
(Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) gv3), (Permutation (l1 ++ l2) gv2), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (a0 :: gv3)), (Permutation (l1 ++ l2) (a0 :: gv2)), (Permutation (l1 ++ l2) (n :: l2)), (Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (n :: gv3))
(Permutation (l1 ++ l2) (n :: gv2)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (a :: gv3)), (Permutation (l1 ++ l2) (a :: gv2)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l2 gv3)), (Permutation (l1 ++ l2) (merge l2 gv2)), (Permutation (l1 ++ l2) (merge l1 l2))
(Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (merge l1 gv3)), (Permutation (l1 ++ l2) (merge l1 gv2)), (Permutation (l1 ++ l2) (merge gv3 l2)), (Permutation (l1 ++ l2) (merge gv3 l1)), (Permutation (l1 ++ l2) (merge gv3 gv3)), (Permutation (l1 ++ l2) (merge gv3 gv2)), (Permutation (l1 ++ l2) (merge gv2 l2)), (Permutation (l1 ++ l2) (merge gv2 l1)), (Permutation (l1 ++ l2) (merge gv2 gv3))
(Permutation (l1 ++ l2) (merge gv2 gv2)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l2 ++ gv3)), (Permutation (l1 ++ l2) (l2 ++ gv2)), (Permutation (l1 ++ l2) (l1 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv3)), (Permutation (l1 ++ l2) (l1 ++ gv2)), (Permutation (l1 ++ l2) (gv3 ++ l2)), (Permutation (l1 ++ l2) (gv3 ++ l1))
(Permutation (l1 ++ l2) (gv3 ++ gv3)), (Permutation (l1 ++ l2) (gv3 ++ gv2)), (Permutation (l1 ++ l2) (gv2 ++ l2)), (Permutation (l1 ++ l2) (gv2 ++ l1)), (Permutation (l1 ++ l2) (gv2 ++ gv3)), (Permutation (l1 ++ l2) (gv2 ++ gv2)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) gv3)
(Permutation (l1 ++ l1) gv2), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (a0 :: gv3)), (Permutation (l1 ++ l1) (a0 :: gv2)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (n :: gv3)), (Permutation (l1 ++ l1) (n :: gv2)), (Permutation (l1 ++ l1) (a :: l2))
(Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (a :: gv3)), (Permutation (l1 ++ l1) (a :: gv2)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l2 gv3)), (Permutation (l1 ++ l1) (merge l2 gv2)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (merge l1 gv3))
(Permutation (l1 ++ l1) (merge l1 gv2)), (Permutation (l1 ++ l1) (merge gv3 l2)), (Permutation (l1 ++ l1) (merge gv3 l1)), (Permutation (l1 ++ l1) (merge gv3 gv3)), (Permutation (l1 ++ l1) (merge gv3 gv2)), (Permutation (l1 ++ l1) (merge gv2 l2)), (Permutation (l1 ++ l1) (merge gv2 l1)), (Permutation (l1 ++ l1) (merge gv2 gv3)), (Permutation (l1 ++ l1) (merge gv2 gv2)), (Permutation (l1 ++ l1) (l2 ++ l2))
(Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l2 ++ gv3)), (Permutation (l1 ++ l1) (l2 ++ gv2)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) (l1 ++ gv3)), (Permutation (l1 ++ l1) (l1 ++ gv2)), (Permutation (l1 ++ l1) (gv3 ++ l2)), (Permutation (l1 ++ l1) (gv3 ++ l1)), (Permutation (l1 ++ l1) (gv3 ++ gv3)), (Permutation (l1 ++ l1) (gv3 ++ gv2))
(Permutation (l1 ++ l1) (gv2 ++ l2)), (Permutation (l1 ++ l1) (gv2 ++ l1)), (Permutation (l1 ++ l1) (gv2 ++ gv3)), (Permutation (l1 ++ l1) (gv2 ++ gv2)), (Permutation (l1 ++ l1) []), (Permutation (l1 ++ gv3) l2), (Permutation (l1 ++ gv3) l1), (Permutation (l1 ++ gv3) gv3), (Permutation (l1 ++ gv3) gv2), (Permutation (l1 ++ gv3) (a0 :: l2))
(Permutation (l1 ++ gv3) (a0 :: l1)), (Permutation (l1 ++ gv3) (a0 :: gv3)), (Permutation (l1 ++ gv3) (a0 :: gv2)), (Permutation (l1 ++ gv3) (n :: l2)), (Permutation (l1 ++ gv3) (n :: l1)), (Permutation (l1 ++ gv3) (n :: gv3)), (Permutation (l1 ++ gv3) (n :: gv2)), (Permutation (l1 ++ gv3) (a :: l2)), (Permutation (l1 ++ gv3) (a :: l1)), (Permutation (l1 ++ gv3) (a :: gv3))
(Permutation (l1 ++ gv3) (a :: gv2)), (Permutation (l1 ++ gv3) (merge l2 l2)), (Permutation (l1 ++ gv3) (merge l2 l1)), (Permutation (l1 ++ gv3) (merge l2 gv3)), (Permutation (l1 ++ gv3) (merge l2 gv2)), (Permutation (l1 ++ gv3) (merge l1 l2)), (Permutation (l1 ++ gv3) (merge l1 l1)), (Permutation (l1 ++ gv3) (merge l1 gv3)), (Permutation (l1 ++ gv3) (merge l1 gv2)), (Permutation (l1 ++ gv3) (merge gv3 l2))
(Permutation (l1 ++ gv3) (merge gv3 l1)), (Permutation (l1 ++ gv3) (merge gv3 gv3)), (Permutation (l1 ++ gv3) (merge gv3 gv2)), (Permutation (l1 ++ gv3) (merge gv2 l2)), (Permutation (l1 ++ gv3) (merge gv2 l1)), (Permutation (l1 ++ gv3) (merge gv2 gv3)), (Permutation (l1 ++ gv3) (merge gv2 gv2)), (Permutation (l1 ++ gv3) (l2 ++ l2)), (Permutation (l1 ++ gv3) (l2 ++ l1)), (Permutation (l1 ++ gv3) (l2 ++ gv3))
(Permutation (l1 ++ gv3) (l2 ++ gv2)), (Permutation (l1 ++ gv3) (l1 ++ l2)), (Permutation (l1 ++ gv3) (l1 ++ l1)), (Permutation (l1 ++ gv3) (l1 ++ gv2)), (Permutation (l1 ++ gv3) (gv3 ++ l2)), (Permutation (l1 ++ gv3) (gv3 ++ l1)), (Permutation (l1 ++ gv3) (gv3 ++ gv3)), (Permutation (l1 ++ gv3) (gv3 ++ gv2)), (Permutation (l1 ++ gv3) (gv2 ++ l2)), (Permutation (l1 ++ gv3) (gv2 ++ l1))
(Permutation (l1 ++ gv3) (gv2 ++ gv3)), (Permutation (l1 ++ gv3) (gv2 ++ gv2)), (Permutation (l1 ++ gv3) []), (Permutation (l1 ++ gv2) l2), (Permutation (l1 ++ gv2) l1), (Permutation (l1 ++ gv2) gv3), (Permutation (l1 ++ gv2) gv2), (Permutation (l1 ++ gv2) (a0 :: l2)), (Permutation (l1 ++ gv2) (a0 :: l1)), (Permutation (l1 ++ gv2) (a0 :: gv3))
(Permutation (l1 ++ gv2) (a0 :: gv2)), (Permutation (l1 ++ gv2) (n :: l2)), (Permutation (l1 ++ gv2) (n :: l1)), (Permutation (l1 ++ gv2) (n :: gv3)), (Permutation (l1 ++ gv2) (n :: gv2)), (Permutation (l1 ++ gv2) (a :: l2)), (Permutation (l1 ++ gv2) (a :: l1)), (Permutation (l1 ++ gv2) (a :: gv3)), (Permutation (l1 ++ gv2) (a :: gv2)), (Permutation (l1 ++ gv2) (merge l2 l2))
(Permutation (l1 ++ gv2) (merge l2 l1)), (Permutation (l1 ++ gv2) (merge l2 gv3)), (Permutation (l1 ++ gv2) (merge l2 gv2)), (Permutation (l1 ++ gv2) (merge l1 l2)), (Permutation (l1 ++ gv2) (merge l1 l1)), (Permutation (l1 ++ gv2) (merge l1 gv3)), (Permutation (l1 ++ gv2) (merge l1 gv2)), (Permutation (l1 ++ gv2) (merge gv3 l2)), (Permutation (l1 ++ gv2) (merge gv3 l1)), (Permutation (l1 ++ gv2) (merge gv3 gv3))
(Permutation (l1 ++ gv2) (merge gv3 gv2)), (Permutation (l1 ++ gv2) (merge gv2 l2)), (Permutation (l1 ++ gv2) (merge gv2 l1)), (Permutation (l1 ++ gv2) (merge gv2 gv3)), (Permutation (l1 ++ gv2) (merge gv2 gv2)), (Permutation (l1 ++ gv2) (l2 ++ l2)), (Permutation (l1 ++ gv2) (l2 ++ l1)), (Permutation (l1 ++ gv2) (l2 ++ gv3)), (Permutation (l1 ++ gv2) (l2 ++ gv2)), (Permutation (l1 ++ gv2) (l1 ++ l2))
(Permutation (l1 ++ gv2) (l1 ++ l1)), (Permutation (l1 ++ gv2) (l1 ++ gv3)), (Permutation (l1 ++ gv2) (gv3 ++ l2)), (Permutation (l1 ++ gv2) (gv3 ++ l1)), (Permutation (l1 ++ gv2) (gv3 ++ gv3)), (Permutation (l1 ++ gv2) (gv3 ++ gv2)), (Permutation (l1 ++ gv2) (gv2 ++ l2)), (Permutation (l1 ++ gv2) (gv2 ++ l1)), (Permutation (l1 ++ gv2) (gv2 ++ gv3)), (Permutation (l1 ++ gv2) (gv2 ++ gv2))
(Permutation (l1 ++ gv2) []), (Permutation (gv3 ++ l2) l2), (Permutation (gv3 ++ l2) l1), (Permutation (gv3 ++ l2) gv3), (Permutation (gv3 ++ l2) gv2), (Permutation (gv3 ++ l2) (a0 :: l2)), (Permutation (gv3 ++ l2) (a0 :: l1)), (Permutation (gv3 ++ l2) (a0 :: gv3)), (Permutation (gv3 ++ l2) (a0 :: gv2)), (Permutation (gv3 ++ l2) (n :: l2))
(Permutation (gv3 ++ l2) (n :: l1)), (Permutation (gv3 ++ l2) (n :: gv3)), (Permutation (gv3 ++ l2) (n :: gv2)), (Permutation (gv3 ++ l2) (a :: l2)), (Permutation (gv3 ++ l2) (a :: l1)), (Permutation (gv3 ++ l2) (a :: gv3)), (Permutation (gv3 ++ l2) (a :: gv2)), (Permutation (gv3 ++ l2) (merge l2 l2)), (Permutation (gv3 ++ l2) (merge l2 l1)), (Permutation (gv3 ++ l2) (merge l2 gv3))
(Permutation (gv3 ++ l2) (merge l2 gv2)), (Permutation (gv3 ++ l2) (merge l1 l2)), (Permutation (gv3 ++ l2) (merge l1 l1)), (Permutation (gv3 ++ l2) (merge l1 gv3)), (Permutation (gv3 ++ l2) (merge l1 gv2)), (Permutation (gv3 ++ l2) (merge gv3 l2)), (Permutation (gv3 ++ l2) (merge gv3 l1)), (Permutation (gv3 ++ l2) (merge gv3 gv3)), (Permutation (gv3 ++ l2) (merge gv3 gv2)), (Permutation (gv3 ++ l2) (merge gv2 l2))
(Permutation (gv3 ++ l2) (merge gv2 l1)), (Permutation (gv3 ++ l2) (merge gv2 gv3)), (Permutation (gv3 ++ l2) (merge gv2 gv2)), (Permutation (gv3 ++ l2) (l2 ++ l2)), (Permutation (gv3 ++ l2) (l2 ++ l1)), (Permutation (gv3 ++ l2) (l2 ++ gv3)), (Permutation (gv3 ++ l2) (l2 ++ gv2)), (Permutation (gv3 ++ l2) (l1 ++ l2)), (Permutation (gv3 ++ l2) (l1 ++ l1)), (Permutation (gv3 ++ l2) (l1 ++ gv3))
(Permutation (gv3 ++ l2) (l1 ++ gv2)), (Permutation (gv3 ++ l2) (gv3 ++ l1)), (Permutation (gv3 ++ l2) (gv3 ++ gv3)), (Permutation (gv3 ++ l2) (gv3 ++ gv2)), (Permutation (gv3 ++ l2) (gv2 ++ l2)), (Permutation (gv3 ++ l2) (gv2 ++ l1)), (Permutation (gv3 ++ l2) (gv2 ++ gv3)), (Permutation (gv3 ++ l2) (gv2 ++ gv2)), (Permutation (gv3 ++ l2) []), (Permutation (gv3 ++ l1) l2)
(Permutation (gv3 ++ l1) l1), (Permutation (gv3 ++ l1) gv3), (Permutation (gv3 ++ l1) gv2), (Permutation (gv3 ++ l1) (a0 :: l2)), (Permutation (gv3 ++ l1) (a0 :: l1)), (Permutation (gv3 ++ l1) (a0 :: gv3)), (Permutation (gv3 ++ l1) (a0 :: gv2)), (Permutation (gv3 ++ l1) (n :: l2)), (Permutation (gv3 ++ l1) (n :: l1)), (Permutation (gv3 ++ l1) (n :: gv3))
(Permutation (gv3 ++ l1) (n :: gv2)), (Permutation (gv3 ++ l1) (a :: l2)), (Permutation (gv3 ++ l1) (a :: l1)), (Permutation (gv3 ++ l1) (a :: gv3)), (Permutation (gv3 ++ l1) (a :: gv2)), (Permutation (gv3 ++ l1) (merge l2 l2)), (Permutation (gv3 ++ l1) (merge l2 l1)), (Permutation (gv3 ++ l1) (merge l2 gv3)), (Permutation (gv3 ++ l1) (merge l2 gv2)), (Permutation (gv3 ++ l1) (merge l1 l2))
(Permutation (gv3 ++ l1) (merge l1 l1)), (Permutation (gv3 ++ l1) (merge l1 gv3)), (Permutation (gv3 ++ l1) (merge l1 gv2)), (Permutation (gv3 ++ l1) (merge gv3 l2)), (Permutation (gv3 ++ l1) (merge gv3 l1)), (Permutation (gv3 ++ l1) (merge gv3 gv3)), (Permutation (gv3 ++ l1) (merge gv3 gv2)), (Permutation (gv3 ++ l1) (merge gv2 l2)), (Permutation (gv3 ++ l1) (merge gv2 l1)), (Permutation (gv3 ++ l1) (merge gv2 gv3))
(Permutation (gv3 ++ l1) (merge gv2 gv2)), (Permutation (gv3 ++ l1) (l2 ++ l2)), (Permutation (gv3 ++ l1) (l2 ++ l1)), (Permutation (gv3 ++ l1) (l2 ++ gv3)), (Permutation (gv3 ++ l1) (l2 ++ gv2)), (Permutation (gv3 ++ l1) (l1 ++ l2)), (Permutation (gv3 ++ l1) (l1 ++ l1)), (Permutation (gv3 ++ l1) (l1 ++ gv3)), (Permutation (gv3 ++ l1) (l1 ++ gv2)), (Permutation (gv3 ++ l1) (gv3 ++ l2))
(Permutation (gv3 ++ l1) (gv3 ++ gv3)), (Permutation (gv3 ++ l1) (gv3 ++ gv2)), (Permutation (gv3 ++ l1) (gv2 ++ l2)), (Permutation (gv3 ++ l1) (gv2 ++ l1)), (Permutation (gv3 ++ l1) (gv2 ++ gv3)), (Permutation (gv3 ++ l1) (gv2 ++ gv2)), (Permutation (gv3 ++ l1) []), (Permutation (gv3 ++ gv3) l2), (Permutation (gv3 ++ gv3) l1), (Permutation (gv3 ++ gv3) gv3)
(Permutation (gv3 ++ gv3) gv2), (Permutation (gv3 ++ gv3) (a0 :: l2)), (Permutation (gv3 ++ gv3) (a0 :: l1)), (Permutation (gv3 ++ gv3) (a0 :: gv3)), (Permutation (gv3 ++ gv3) (a0 :: gv2)), (Permutation (gv3 ++ gv3) (n :: l2)), (Permutation (gv3 ++ gv3) (n :: l1)), (Permutation (gv3 ++ gv3) (n :: gv3)), (Permutation (gv3 ++ gv3) (n :: gv2)), (Permutation (gv3 ++ gv3) (a :: l2))
(Permutation (gv3 ++ gv3) (a :: l1)), (Permutation (gv3 ++ gv3) (a :: gv3)), (Permutation (gv3 ++ gv3) (a :: gv2)), (Permutation (gv3 ++ gv3) (merge l2 l2)), (Permutation (gv3 ++ gv3) (merge l2 l1)), (Permutation (gv3 ++ gv3) (merge l2 gv3)), (Permutation (gv3 ++ gv3) (merge l2 gv2)), (Permutation (gv3 ++ gv3) (merge l1 l2)), (Permutation (gv3 ++ gv3) (merge l1 l1)), (Permutation (gv3 ++ gv3) (merge l1 gv3))
(Permutation (gv3 ++ gv3) (merge l1 gv2)), (Permutation (gv3 ++ gv3) (merge gv3 l2)), (Permutation (gv3 ++ gv3) (merge gv3 l1)), (Permutation (gv3 ++ gv3) (merge gv3 gv3)), (Permutation (gv3 ++ gv3) (merge gv3 gv2)), (Permutation (gv3 ++ gv3) (merge gv2 l2)), (Permutation (gv3 ++ gv3) (merge gv2 l1)), (Permutation (gv3 ++ gv3) (merge gv2 gv3)), (Permutation (gv3 ++ gv3) (merge gv2 gv2)), (Permutation (gv3 ++ gv3) (l2 ++ l2))
(Permutation (gv3 ++ gv3) (l2 ++ l1)), (Permutation (gv3 ++ gv3) (l2 ++ gv3)), (Permutation (gv3 ++ gv3) (l2 ++ gv2)), (Permutation (gv3 ++ gv3) (l1 ++ l2)), (Permutation (gv3 ++ gv3) (l1 ++ l1)), (Permutation (gv3 ++ gv3) (l1 ++ gv3)), (Permutation (gv3 ++ gv3) (l1 ++ gv2)), (Permutation (gv3 ++ gv3) (gv3 ++ l2)), (Permutation (gv3 ++ gv3) (gv3 ++ l1)), (Permutation (gv3 ++ gv3) (gv3 ++ gv2))
(Permutation (gv3 ++ gv3) (gv2 ++ l2)), (Permutation (gv3 ++ gv3) (gv2 ++ l1)), (Permutation (gv3 ++ gv3) (gv2 ++ gv3)), (Permutation (gv3 ++ gv3) (gv2 ++ gv2)), (Permutation (gv3 ++ gv3) []), (Permutation (gv3 ++ gv2) l2), (Permutation (gv3 ++ gv2) l1), (Permutation (gv3 ++ gv2) gv3), (Permutation (gv3 ++ gv2) gv2), (Permutation (gv3 ++ gv2) (a0 :: l2))
(Permutation (gv3 ++ gv2) (a0 :: l1)), (Permutation (gv3 ++ gv2) (a0 :: gv3)), (Permutation (gv3 ++ gv2) (a0 :: gv2)), (Permutation (gv3 ++ gv2) (n :: l2)), (Permutation (gv3 ++ gv2) (n :: l1)), (Permutation (gv3 ++ gv2) (n :: gv3)), (Permutation (gv3 ++ gv2) (n :: gv2)), (Permutation (gv3 ++ gv2) (a :: l2)), (Permutation (gv3 ++ gv2) (a :: l1)), (Permutation (gv3 ++ gv2) (a :: gv3))
(Permutation (gv3 ++ gv2) (a :: gv2)), (Permutation (gv3 ++ gv2) (merge l2 l2)), (Permutation (gv3 ++ gv2) (merge l2 l1)), (Permutation (gv3 ++ gv2) (merge l2 gv3)), (Permutation (gv3 ++ gv2) (merge l2 gv2)), (Permutation (gv3 ++ gv2) (merge l1 l2)), (Permutation (gv3 ++ gv2) (merge l1 l1)), (Permutation (gv3 ++ gv2) (merge l1 gv3)), (Permutation (gv3 ++ gv2) (merge l1 gv2)), (Permutation (gv3 ++ gv2) (merge gv3 l2))
(Permutation (gv3 ++ gv2) (merge gv3 l1)), (Permutation (gv3 ++ gv2) (merge gv3 gv3)), (Permutation (gv3 ++ gv2) (merge gv3 gv2)), (Permutation (gv3 ++ gv2) (merge gv2 l2)), (Permutation (gv3 ++ gv2) (merge gv2 l1)), (Permutation (gv3 ++ gv2) (merge gv2 gv3)), (Permutation (gv3 ++ gv2) (merge gv2 gv2)), (Permutation (gv3 ++ gv2) (l2 ++ l2)), (Permutation (gv3 ++ gv2) (l2 ++ l1)), (Permutation (gv3 ++ gv2) (l2 ++ gv3))
(Permutation (gv3 ++ gv2) (l2 ++ gv2)), (Permutation (gv3 ++ gv2) (l1 ++ l2)), (Permutation (gv3 ++ gv2) (l1 ++ l1)), (Permutation (gv3 ++ gv2) (l1 ++ gv3)), (Permutation (gv3 ++ gv2) (l1 ++ gv2)), (Permutation (gv3 ++ gv2) (gv3 ++ l2)), (Permutation (gv3 ++ gv2) (gv3 ++ l1)), (Permutation (gv3 ++ gv2) (gv3 ++ gv3)), (Permutation (gv3 ++ gv2) (gv2 ++ l2)), (Permutation (gv3 ++ gv2) (gv2 ++ l1))
(Permutation (gv3 ++ gv2) (gv2 ++ gv3)), (Permutation (gv3 ++ gv2) (gv2 ++ gv2)), (Permutation (gv3 ++ gv2) []), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) l1), (Permutation (gv2 ++ l2) gv3), (Permutation (gv2 ++ l2) gv2), (Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: l1)), (Permutation (gv2 ++ l2) (a0 :: gv3))
(Permutation (gv2 ++ l2) (a0 :: gv2)), (Permutation (gv2 ++ l2) (n :: l2)), (Permutation (gv2 ++ l2) (n :: l1)), (Permutation (gv2 ++ l2) (n :: gv3)), (Permutation (gv2 ++ l2) (n :: gv2)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: l1)), (Permutation (gv2 ++ l2) (a :: gv3)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (merge l2 l2))
(Permutation (gv2 ++ l2) (merge l2 l1)), (Permutation (gv2 ++ l2) (merge l2 gv3)), (Permutation (gv2 ++ l2) (merge l2 gv2)), (Permutation (gv2 ++ l2) (merge l1 l2)), (Permutation (gv2 ++ l2) (merge l1 l1)), (Permutation (gv2 ++ l2) (merge l1 gv3)), (Permutation (gv2 ++ l2) (merge l1 gv2)), (Permutation (gv2 ++ l2) (merge gv3 l2)), (Permutation (gv2 ++ l2) (merge gv3 l1)), (Permutation (gv2 ++ l2) (merge gv3 gv3))
(Permutation (gv2 ++ l2) (merge gv3 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 l1)), (Permutation (gv2 ++ l2) (merge gv2 gv3)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ l1)), (Permutation (gv2 ++ l2) (l2 ++ gv3)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l1 ++ l2))
(Permutation (gv2 ++ l2) (l1 ++ l1)), (Permutation (gv2 ++ l2) (l1 ++ gv3)), (Permutation (gv2 ++ l2) (l1 ++ gv2)), (Permutation (gv2 ++ l2) (gv3 ++ l2)), (Permutation (gv2 ++ l2) (gv3 ++ l1)), (Permutation (gv2 ++ l2) (gv3 ++ gv3)), (Permutation (gv2 ++ l2) (gv3 ++ gv2)), (Permutation (gv2 ++ l2) (gv2 ++ l1)), (Permutation (gv2 ++ l2) (gv2 ++ gv3)), (Permutation (gv2 ++ l2) (gv2 ++ gv2))
(Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ l1) l2), (Permutation (gv2 ++ l1) l1), (Permutation (gv2 ++ l1) gv3), (Permutation (gv2 ++ l1) gv2), (Permutation (gv2 ++ l1) (a0 :: l2)), (Permutation (gv2 ++ l1) (a0 :: l1)), (Permutation (gv2 ++ l1) (a0 :: gv3)), (Permutation (gv2 ++ l1) (a0 :: gv2)), (Permutation (gv2 ++ l1) (n :: l2))
(Permutation (gv2 ++ l1) (n :: l1)), (Permutation (gv2 ++ l1) (n :: gv3)), (Permutation (gv2 ++ l1) (n :: gv2)), (Permutation (gv2 ++ l1) (a :: l2)), (Permutation (gv2 ++ l1) (a :: l1)), (Permutation (gv2 ++ l1) (a :: gv3)), (Permutation (gv2 ++ l1) (a :: gv2)), (Permutation (gv2 ++ l1) (merge l2 l2)), (Permutation (gv2 ++ l1) (merge l2 l1)), (Permutation (gv2 ++ l1) (merge l2 gv3))
(Permutation (gv2 ++ l1) (merge l2 gv2)), (Permutation (gv2 ++ l1) (merge l1 l2)), (Permutation (gv2 ++ l1) (merge l1 l1)), (Permutation (gv2 ++ l1) (merge l1 gv3)), (Permutation (gv2 ++ l1) (merge l1 gv2)), (Permutation (gv2 ++ l1) (merge gv3 l2)), (Permutation (gv2 ++ l1) (merge gv3 l1)), (Permutation (gv2 ++ l1) (merge gv3 gv3)), (Permutation (gv2 ++ l1) (merge gv3 gv2)), (Permutation (gv2 ++ l1) (merge gv2 l2))
(Permutation (gv2 ++ l1) (merge gv2 l1)), (Permutation (gv2 ++ l1) (merge gv2 gv3)), (Permutation (gv2 ++ l1) (merge gv2 gv2)), (Permutation (gv2 ++ l1) (l2 ++ l2)), (Permutation (gv2 ++ l1) (l2 ++ l1)), (Permutation (gv2 ++ l1) (l2 ++ gv3)), (Permutation (gv2 ++ l1) (l2 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l2)), (Permutation (gv2 ++ l1) (l1 ++ l1)), (Permutation (gv2 ++ l1) (l1 ++ gv3))
(Permutation (gv2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l1) (gv3 ++ l2)), (Permutation (gv2 ++ l1) (gv3 ++ l1)), (Permutation (gv2 ++ l1) (gv3 ++ gv3)), (Permutation (gv2 ++ l1) (gv3 ++ gv2)), (Permutation (gv2 ++ l1) (gv2 ++ l2)), (Permutation (gv2 ++ l1) (gv2 ++ gv3)), (Permutation (gv2 ++ l1) (gv2 ++ gv2)), (Permutation (gv2 ++ l1) []), (Permutation (gv2 ++ gv3) l2)
(Permutation (gv2 ++ gv3) l1), (Permutation (gv2 ++ gv3) gv3), (Permutation (gv2 ++ gv3) gv2), (Permutation (gv2 ++ gv3) (a0 :: l2)), (Permutation (gv2 ++ gv3) (a0 :: l1)), (Permutation (gv2 ++ gv3) (a0 :: gv3)), (Permutation (gv2 ++ gv3) (a0 :: gv2)), (Permutation (gv2 ++ gv3) (n :: l2)), (Permutation (gv2 ++ gv3) (n :: l1)), (Permutation (gv2 ++ gv3) (n :: gv3))
(Permutation (gv2 ++ gv3) (n :: gv2)), (Permutation (gv2 ++ gv3) (a :: l2)), (Permutation (gv2 ++ gv3) (a :: l1)), (Permutation (gv2 ++ gv3) (a :: gv3)), (Permutation (gv2 ++ gv3) (a :: gv2)), (Permutation (gv2 ++ gv3) (merge l2 l2)), (Permutation (gv2 ++ gv3) (merge l2 l1)), (Permutation (gv2 ++ gv3) (merge l2 gv3)), (Permutation (gv2 ++ gv3) (merge l2 gv2)), (Permutation (gv2 ++ gv3) (merge l1 l2))
(Permutation (gv2 ++ gv3) (merge l1 l1)), (Permutation (gv2 ++ gv3) (merge l1 gv3)), (Permutation (gv2 ++ gv3) (merge l1 gv2)), (Permutation (gv2 ++ gv3) (merge gv3 l2)), (Permutation (gv2 ++ gv3) (merge gv3 l1)), (Permutation (gv2 ++ gv3) (merge gv3 gv3)), (Permutation (gv2 ++ gv3) (merge gv3 gv2)), (Permutation (gv2 ++ gv3) (merge gv2 l2)), (Permutation (gv2 ++ gv3) (merge gv2 l1)), (Permutation (gv2 ++ gv3) (merge gv2 gv3))
(Permutation (gv2 ++ gv3) (merge gv2 gv2)), (Permutation (gv2 ++ gv3) (l2 ++ l2)), (Permutation (gv2 ++ gv3) (l2 ++ l1)), (Permutation (gv2 ++ gv3) (l2 ++ gv3)), (Permutation (gv2 ++ gv3) (l2 ++ gv2)), (Permutation (gv2 ++ gv3) (l1 ++ l2)), (Permutation (gv2 ++ gv3) (l1 ++ l1)), (Permutation (gv2 ++ gv3) (l1 ++ gv3)), (Permutation (gv2 ++ gv3) (l1 ++ gv2)), (Permutation (gv2 ++ gv3) (gv3 ++ l2))
(Permutation (gv2 ++ gv3) (gv3 ++ l1)), (Permutation (gv2 ++ gv3) (gv3 ++ gv3)), (Permutation (gv2 ++ gv3) (gv3 ++ gv2)), (Permutation (gv2 ++ gv3) (gv2 ++ l2)), (Permutation (gv2 ++ gv3) (gv2 ++ l1)), (Permutation (gv2 ++ gv3) (gv2 ++ gv2)), (Permutation (gv2 ++ gv3) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) l1), (Permutation (gv2 ++ gv2) gv3)
(Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: l1)), (Permutation (gv2 ++ gv2) (a0 :: gv3)), (Permutation (gv2 ++ gv2) (a0 :: gv2)), (Permutation (gv2 ++ gv2) (n :: l2)), (Permutation (gv2 ++ gv2) (n :: l1)), (Permutation (gv2 ++ gv2) (n :: gv3)), (Permutation (gv2 ++ gv2) (n :: gv2)), (Permutation (gv2 ++ gv2) (a :: l2))
(Permutation (gv2 ++ gv2) (a :: l1)), (Permutation (gv2 ++ gv2) (a :: gv3)), (Permutation (gv2 ++ gv2) (a :: gv2)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 l1)), (Permutation (gv2 ++ gv2) (merge l2 gv3)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l1 l2)), (Permutation (gv2 ++ gv2) (merge l1 l1)), (Permutation (gv2 ++ gv2) (merge l1 gv3))
(Permutation (gv2 ++ gv2) (merge l1 gv2)), (Permutation (gv2 ++ gv2) (merge gv3 l2)), (Permutation (gv2 ++ gv2) (merge gv3 l1)), (Permutation (gv2 ++ gv2) (merge gv3 gv3)), (Permutation (gv2 ++ gv2) (merge gv3 gv2)), (Permutation (gv2 ++ gv2) (merge gv2 l2)), (Permutation (gv2 ++ gv2) (merge gv2 l1)), (Permutation (gv2 ++ gv2) (merge gv2 gv3)), (Permutation (gv2 ++ gv2) (merge gv2 gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l2))
(Permutation (gv2 ++ gv2) (l2 ++ l1)), (Permutation (gv2 ++ gv2) (l2 ++ gv3)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l1 ++ l2)), (Permutation (gv2 ++ gv2) (l1 ++ l1)), (Permutation (gv2 ++ gv2) (l1 ++ gv3)), (Permutation (gv2 ++ gv2) (l1 ++ gv2)), (Permutation (gv2 ++ gv2) (gv3 ++ l2)), (Permutation (gv2 ++ gv2) (gv3 ++ l1)), (Permutation (gv2 ++ gv2) (gv3 ++ gv3))
(Permutation (gv2 ++ gv2) (gv3 ++ gv2)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l1)), (Permutation (gv2 ++ gv2) (gv2 ++ gv3)), (Permutation (gv2 ++ gv2) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] gv3), (Permutation [] gv2), (Permutation [] (a0 :: l2))
(Permutation [] (a0 :: l1)), (Permutation [] (a0 :: gv3)), (Permutation [] (a0 :: gv2)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (n :: gv3)), (Permutation [] (n :: gv2)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (a :: gv3))
(Permutation [] (a :: gv2)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l2 gv3)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (merge l1 gv3)), (Permutation [] (merge l1 gv2)), (Permutation [] (merge gv3 l2))
(Permutation [] (merge gv3 l1)), (Permutation [] (merge gv3 gv3)), (Permutation [] (merge gv3 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 l1)), (Permutation [] (merge gv2 gv3)), (Permutation [] (merge gv2 gv2)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l2 ++ gv3))
(Permutation [] (l2 ++ gv2)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (Permutation [] (l1 ++ gv3)), (Permutation [] (l1 ++ gv2)), (Permutation [] (gv3 ++ l2)), (Permutation [] (gv3 ++ l1)), (Permutation [] (gv3 ++ gv3)), (Permutation [] (gv3 ++ gv2)), (Permutation [] (gv2 ++ l2))
(Permutation [] (gv2 ++ l1)), (Permutation [] (gv2 ++ gv3)), (Permutation [] (gv2 ++ gv2)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a0 :: gv3)), (In a0 (a0 :: gv2)), (In a0 (n :: l2)), (In a0 (n :: l1)), (In a0 (n :: gv3))
(In a0 (n :: gv2)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (a :: gv3)), (In a0 (a :: gv2)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l2 gv3)), (In a0 (merge l2 gv2)), (In a0 (merge l1 l2))
(In a0 (merge l1 l1)), (In a0 (merge l1 gv3)), (In a0 (merge l1 gv2)), (In a0 (merge gv3 l2)), (In a0 (merge gv3 l1)), (In a0 (merge gv3 gv3)), (In a0 (merge gv3 gv2)), (In a0 (merge gv2 l2)), (In a0 (merge gv2 l1)), (In a0 (merge gv2 gv3))
(In a0 (merge gv2 gv2)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l2 ++ gv3)), (In a0 (l2 ++ gv2)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a0 (l1 ++ gv3)), (In a0 (l1 ++ gv2)), (In a0 (gv3 ++ l2))
(In a0 (gv3 ++ l1)), (In a0 (gv3 ++ gv3)), (In a0 (gv3 ++ gv2)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ l1)), (In a0 (gv2 ++ gv3)), (In a0 (gv2 ++ gv2)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (a0 :: gv3))
(In n (a0 :: gv2)), (In n (n :: l2)), (In n (n :: l1)), (In n (n :: gv3)), (In n (n :: gv2)), (In n (a :: l2)), (In n (a :: l1)), (In n (a :: gv3)), (In n (a :: gv2)), (In n (merge l2 l2))
(In n (merge l2 l1)), (In n (merge l2 gv3)), (In n (merge l2 gv2)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (merge l1 gv3)), (In n (merge l1 gv2)), (In n (merge gv3 l2)), (In n (merge gv3 l1)), (In n (merge gv3 gv3))
(In n (merge gv3 gv2)), (In n (merge gv2 l2)), (In n (merge gv2 l1)), (In n (merge gv2 gv3)), (In n (merge gv2 gv2)), (In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l2 ++ gv3)), (In n (l2 ++ gv2)), (In n (l1 ++ l2))
(In n (l1 ++ l1)), (In n (l1 ++ gv3)), (In n (l1 ++ gv2)), (In n (gv3 ++ l2)), (In n (gv3 ++ l1)), (In n (gv3 ++ gv3)), (In n (gv3 ++ gv2)), (In n (gv2 ++ l2)), (In n (gv2 ++ l1)), (In n (gv2 ++ gv3))
(In n (gv2 ++ gv2)), (In a (a0 :: l2)), (In a (a0 :: l1)), (In a (a0 :: gv3)), (In a (a0 :: gv2)), (In a (n :: l2)), (In a (n :: l1)), (In a (n :: gv3)), (In a (n :: gv2)), (In a (a :: l2))
(In a (a :: l1)), (In a (a :: gv3)), (In a (a :: gv2)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l2 gv3)), (In a (merge l2 gv2)), (In a (merge l1 l2)), (In a (merge l1 l1)), (In a (merge l1 gv3))
(In a (merge l1 gv2)), (In a (merge gv3 l2)), (In a (merge gv3 l1)), (In a (merge gv3 gv3)), (In a (merge gv3 gv2)), (In a (merge gv2 l2)), (In a (merge gv2 l1)), (In a (merge gv2 gv3)), (In a (merge gv2 gv2)), (In a (l2 ++ l2))
(In a (l2 ++ l1)), (In a (l2 ++ gv3)), (In a (l2 ++ gv2)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In a (l1 ++ gv3)), (In a (l1 ++ gv2)), (In a (gv3 ++ l2)), (In a (gv3 ++ l1)), (In a (gv3 ++ gv3))
(In a (gv3 ++ gv2)), (In a (gv2 ++ l2)), (In a (gv2 ++ l1)), (In a (gv2 ++ gv3)), (In a (gv2 ++ gv2)), (In (length l2) l2), (In (length l2) l1), (In (length l2) gv3), (In (length l2) gv2), (In (length l2) (a0 :: l2))
(In (length l2) (a0 :: l1)), (In (length l2) (a0 :: gv3)), (In (length l2) (a0 :: gv2)), (In (length l2) (n :: l2)), (In (length l2) (n :: l1)), (In (length l2) (n :: gv3)), (In (length l2) (n :: gv2)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (a :: gv3))
(In (length l2) (a :: gv2)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l2 gv3)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (merge l1 gv3)), (In (length l2) (merge l1 gv2)), (In (length l2) (merge gv3 l2))
(In (length l2) (merge gv3 l1)), (In (length l2) (merge gv3 gv3)), (In (length l2) (merge gv3 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 l1)), (In (length l2) (merge gv2 gv3)), (In (length l2) (merge gv2 gv2)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l2 ++ gv3))
(In (length l2) (l2 ++ gv2)), (In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l2) (l1 ++ gv3)), (In (length l2) (l1 ++ gv2)), (In (length l2) (gv3 ++ l2)), (In (length l2) (gv3 ++ l1)), (In (length l2) (gv3 ++ gv3)), (In (length l2) (gv3 ++ gv2)), (In (length l2) (gv2 ++ l2))
(In (length l2) (gv2 ++ l1)), (In (length l2) (gv2 ++ gv3)), (In (length l2) (gv2 ++ gv2)), (In (length l1) l2), (In (length l1) l1), (In (length l1) gv3), (In (length l1) gv2), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (a0 :: gv3))
(In (length l1) (a0 :: gv2)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (n :: gv3)), (In (length l1) (n :: gv2)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (a :: gv3)), (In (length l1) (a :: gv2)), (In (length l1) (merge l2 l2))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l2 gv3)), (In (length l1) (merge l2 gv2)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (merge l1 gv3)), (In (length l1) (merge l1 gv2)), (In (length l1) (merge gv3 l2)), (In (length l1) (merge gv3 l1)), (In (length l1) (merge gv3 gv3))
(In (length l1) (merge gv3 gv2)), (In (length l1) (merge gv2 l2)), (In (length l1) (merge gv2 l1)), (In (length l1) (merge gv2 gv3)), (In (length l1) (merge gv2 gv2)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l2 ++ gv3)), (In (length l1) (l2 ++ gv2)), (In (length l1) (l1 ++ l2))
(In (length l1) (l1 ++ l1)), (In (length l1) (l1 ++ gv3)), (In (length l1) (l1 ++ gv2)), (In (length l1) (gv3 ++ l2)), (In (length l1) (gv3 ++ l1)), (In (length l1) (gv3 ++ gv3)), (In (length l1) (gv3 ++ gv2)), (In (length l1) (gv2 ++ l2)), (In (length l1) (gv2 ++ l1)), (In (length l1) (gv2 ++ gv3))
(In (length l1) (gv2 ++ gv2)), (In (length gv3) l2), (In (length gv3) l1), (In (length gv3) gv3), (In (length gv3) gv2), (In (length gv3) (a0 :: l2)), (In (length gv3) (a0 :: l1)), (In (length gv3) (a0 :: gv3)), (In (length gv3) (a0 :: gv2)), (In (length gv3) (n :: l2))
(In (length gv3) (n :: l1)), (In (length gv3) (n :: gv3)), (In (length gv3) (n :: gv2)), (In (length gv3) (a :: l2)), (In (length gv3) (a :: l1)), (In (length gv3) (a :: gv3)), (In (length gv3) (a :: gv2)), (In (length gv3) (merge l2 l2)), (In (length gv3) (merge l2 l1)), (In (length gv3) (merge l2 gv3))
(In (length gv3) (merge l2 gv2)), (In (length gv3) (merge l1 l2)), (In (length gv3) (merge l1 l1)), (In (length gv3) (merge l1 gv3)), (In (length gv3) (merge l1 gv2)), (In (length gv3) (merge gv3 l2)), (In (length gv3) (merge gv3 l1)), (In (length gv3) (merge gv3 gv3)), (In (length gv3) (merge gv3 gv2)), (In (length gv3) (merge gv2 l2))
(In (length gv3) (merge gv2 l1)), (In (length gv3) (merge gv2 gv3)), (In (length gv3) (merge gv2 gv2)), (In (length gv3) (l2 ++ l2)), (In (length gv3) (l2 ++ l1)), (In (length gv3) (l2 ++ gv3)), (In (length gv3) (l2 ++ gv2)), (In (length gv3) (l1 ++ l2)), (In (length gv3) (l1 ++ l1)), (In (length gv3) (l1 ++ gv3))
(In (length gv3) (l1 ++ gv2)), (In (length gv3) (gv3 ++ l2)), (In (length gv3) (gv3 ++ l1)), (In (length gv3) (gv3 ++ gv3)), (In (length gv3) (gv3 ++ gv2)), (In (length gv3) (gv2 ++ l2)), (In (length gv3) (gv2 ++ l1)), (In (length gv3) (gv2 ++ gv3)), (In (length gv3) (gv2 ++ gv2)), (In (length gv2) l2)
(In (length gv2) l1), (In (length gv2) gv3), (In (length gv2) gv2), (In (length gv2) (a0 :: l2)), (In (length gv2) (a0 :: l1)), (In (length gv2) (a0 :: gv3)), (In (length gv2) (a0 :: gv2)), (In (length gv2) (n :: l2)), (In (length gv2) (n :: l1)), (In (length gv2) (n :: gv3))
(In (length gv2) (n :: gv2)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: l1)), (In (length gv2) (a :: gv3)), (In (length gv2) (a :: gv2)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 l1)), (In (length gv2) (merge l2 gv3)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l1 l2))
(In (length gv2) (merge l1 l1)), (In (length gv2) (merge l1 gv3)), (In (length gv2) (merge l1 gv2)), (In (length gv2) (merge gv3 l2)), (In (length gv2) (merge gv3 l1)), (In (length gv2) (merge gv3 gv3)), (In (length gv2) (merge gv3 gv2)), (In (length gv2) (merge gv2 l2)), (In (length gv2) (merge gv2 l1)), (In (length gv2) (merge gv2 gv3))
(In (length gv2) (merge gv2 gv2)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ l1)), (In (length gv2) (l2 ++ gv3)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l1 ++ l2)), (In (length gv2) (l1 ++ l1)), (In (length gv2) (l1 ++ gv3)), (In (length gv2) (l1 ++ gv2)), (In (length gv2) (gv3 ++ l2))
(In (length gv2) (gv3 ++ l1)), (In (length gv2) (gv3 ++ gv3)), (In (length gv2) (gv3 ++ gv2)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ l1)), (In (length gv2) (gv2 ++ gv3)), (In (length gv2) (gv2 ++ gv2)), (a0 < length l2), (a0 < length l1), (a0 < length gv3)
(a0 < length gv2), (n < length l2), (n < length l1), (n < length gv3), (n < length gv2), (a < length l2), (a < length l1), (a < length gv3), (a < length gv2), (length l2 < a0)
(length l2 < n), (length l2 < a), (length l2 < length l1), (length l2 < length gv3), (length l2 < length gv2), (length l1 < a0), (length l1 < n), (length l1 < a), (length l1 < length l2), (length l1 < length gv3)
(length l1 < length gv2), (length gv3 < a0), (length gv3 < n), (length gv3 < a), (length gv3 < length l2), (length gv3 < length l1), (length gv3 < length gv2), (length gv2 < a0), (length gv2 < n), (length gv2 < a)
(length gv2 < length l2), (length gv2 < length l1), (length gv2 < length gv3), (a0 <= length l2), (a0 <= length l1), (a0 <= length gv3), (a0 <= length gv2), (n <= length l2), (n <= length l1), (n <= length gv3)
(n <= length gv2), (a <= length l2), (a <= length l1), (a <= length gv3), (a <= length gv2), (length l2 <= a0), (length l2 <= n), (length l2 <= a), (length l2 <= length l1), (length l2 <= length gv3)
(length l2 <= length gv2), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (length l1 <= length gv3), (length l1 <= length gv2), (length gv3 <= a0), (length gv3 <= n), (length gv3 <= a)
(length gv3 <= length l2), (length gv3 <= length l1), (length gv3 <= length gv2), (length gv2 <= a0), (length gv2 <= n), (length gv2 <= a), (length gv2 <= length l2), (length gv2 <= length l1), (length gv2 <= length gv3), (~ a0 <=* l2)
(~ a0 <=* l1), (~ a0 <=* gv3), (~ a0 <=* gv2), (~ n <=* l2), (~ n <=* l1), (~ n <=* gv3), (~ n <=* gv2), (~ a <=* l2), (~ a <=* l1), (~ a <=* gv3)
(~ a <=* gv2), (~ sorted l2), (~ sorted l1), (~ sorted gv3), (~ sorted gv2), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l2 gv3), (~ Permutation l2 gv2), (~ Permutation l1 l2)
(~ Permutation l1 l1), (~ Permutation l1 gv3), (~ Permutation l1 gv2), (~ Permutation gv3 l2), (~ Permutation gv3 l1), (~ Permutation gv3 gv3), (~ Permutation gv3 gv2), (~ Permutation gv2 l2), (~ Permutation gv2 l1), (~ Permutation gv2 gv3)
(~ Permutation gv2 gv2), (~ In a0 l2), (~ In a0 l1), (~ In a0 gv3), (~ In a0 gv2), (~ In n l2), (~ In n l1), (~ In n gv3), (~ In n gv2), (~ In a l2)
(~ In a l1), (~ In a gv3), (~ In a gv2), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a), (~ a < a0)
(~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0), (~ a <= n)
(~ a <= a), (l2 <> l2), (l2 <> l1), (l2 <> gv3), (l2 <> gv2), (l1 <> l2), (l1 <> l1), (l1 <> gv3), (l1 <> gv2), (gv3 <> l2)
(gv3 <> l1), (gv3 <> gv3), (gv3 <> gv2), (gv2 <> l2), (gv2 <> l1), (gv2 <> gv3), (gv2 <> gv2), (a0 <> a0), (a0 <> n), (a0 <> a)
(n <> a0), (n <> n), (n <> a), (a <> a0), (a <> n), (a <> a), (None = Some l2), (None = Some l1), (None = Some gv3), (None = Some gv2)
(a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = gv3), (a0 :: l2 = gv2), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1), (a0 :: l2 = merge l2 gv3), (a0 :: l2 = merge l2 gv2), (a0 :: l2 = merge l1 l2), (a0 :: l2 = merge l1 l1)
(a0 :: l2 = merge l1 gv3), (a0 :: l2 = merge l1 gv2), (a0 :: l2 = merge gv3 l2), (a0 :: l2 = merge gv3 l1), (a0 :: l2 = merge gv3 gv3), (a0 :: l2 = merge gv3 gv2), (a0 :: l2 = merge gv2 l2), (a0 :: l2 = merge gv2 l1), (a0 :: l2 = merge gv2 gv3), (a0 :: l2 = merge gv2 gv2)
(a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l2 ++ gv3), (a0 :: l2 = l2 ++ gv2), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1), (a0 :: l2 = l1 ++ gv3), (a0 :: l2 = l1 ++ gv2), (a0 :: l2 = gv3 ++ l2), (a0 :: l2 = gv3 ++ l1)
(a0 :: l2 = gv3 ++ gv3), (a0 :: l2 = gv3 ++ gv2), (a0 :: l2 = gv2 ++ l2), (a0 :: l2 = gv2 ++ l1), (a0 :: l2 = gv2 ++ gv3), (a0 :: l2 = gv2 ++ gv2), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = gv3)
(a0 :: l1 = gv2), (a0 :: l1 = merge l2 l2), (a0 :: l1 = merge l2 l1), (a0 :: l1 = merge l2 gv3), (a0 :: l1 = merge l2 gv2), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = merge l1 gv3), (a0 :: l1 = merge l1 gv2), (a0 :: l1 = merge gv3 l2)
(a0 :: l1 = merge gv3 l1), (a0 :: l1 = merge gv3 gv3), (a0 :: l1 = merge gv3 gv2), (a0 :: l1 = merge gv2 l2), (a0 :: l1 = merge gv2 l1), (a0 :: l1 = merge gv2 gv3), (a0 :: l1 = merge gv2 gv2), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l2 ++ gv3)
(a0 :: l1 = l2 ++ gv2), (a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = l1 ++ gv3), (a0 :: l1 = l1 ++ gv2), (a0 :: l1 = gv3 ++ l2), (a0 :: l1 = gv3 ++ l1), (a0 :: l1 = gv3 ++ gv3), (a0 :: l1 = gv3 ++ gv2), (a0 :: l1 = gv2 ++ l2)
(a0 :: l1 = gv2 ++ l1), (a0 :: l1 = gv2 ++ gv3), (a0 :: l1 = gv2 ++ gv2), (a0 :: l1 = []), (a0 :: gv3 = l2), (a0 :: gv3 = l1), (a0 :: gv3 = gv3), (a0 :: gv3 = gv2), (a0 :: gv3 = merge l2 l2), (a0 :: gv3 = merge l2 l1)
(a0 :: gv3 = merge l2 gv3), (a0 :: gv3 = merge l2 gv2), (a0 :: gv3 = merge l1 l2), (a0 :: gv3 = merge l1 l1), (a0 :: gv3 = merge l1 gv3), (a0 :: gv3 = merge l1 gv2), (a0 :: gv3 = merge gv3 l2), (a0 :: gv3 = merge gv3 l1), (a0 :: gv3 = merge gv3 gv3), (a0 :: gv3 = merge gv3 gv2)
(a0 :: gv3 = merge gv2 l2), (a0 :: gv3 = merge gv2 l1), (a0 :: gv3 = merge gv2 gv3), (a0 :: gv3 = merge gv2 gv2), (a0 :: gv3 = l2 ++ l2), (a0 :: gv3 = l2 ++ l1), (a0 :: gv3 = l2 ++ gv3), (a0 :: gv3 = l2 ++ gv2), (a0 :: gv3 = l1 ++ l2), (a0 :: gv3 = l1 ++ l1)
(a0 :: gv3 = l1 ++ gv3), (a0 :: gv3 = l1 ++ gv2), (a0 :: gv3 = gv3 ++ l2), (a0 :: gv3 = gv3 ++ l1), (a0 :: gv3 = gv3 ++ gv3), (a0 :: gv3 = gv3 ++ gv2), (a0 :: gv3 = gv2 ++ l2), (a0 :: gv3 = gv2 ++ l1), (a0 :: gv3 = gv2 ++ gv3), (a0 :: gv3 = gv2 ++ gv2)
(a0 :: gv3 = []), (a0 :: gv2 = l2), (a0 :: gv2 = l1), (a0 :: gv2 = gv3), (a0 :: gv2 = gv2), (a0 :: gv2 = merge l2 l2), (a0 :: gv2 = merge l2 l1), (a0 :: gv2 = merge l2 gv3), (a0 :: gv2 = merge l2 gv2), (a0 :: gv2 = merge l1 l2)
(a0 :: gv2 = merge l1 l1), (a0 :: gv2 = merge l1 gv3), (a0 :: gv2 = merge l1 gv2), (a0 :: gv2 = merge gv3 l2), (a0 :: gv2 = merge gv3 l1), (a0 :: gv2 = merge gv3 gv3), (a0 :: gv2 = merge gv3 gv2), (a0 :: gv2 = merge gv2 l2), (a0 :: gv2 = merge gv2 l1), (a0 :: gv2 = merge gv2 gv3)
(a0 :: gv2 = merge gv2 gv2), (a0 :: gv2 = l2 ++ l2), (a0 :: gv2 = l2 ++ l1), (a0 :: gv2 = l2 ++ gv3), (a0 :: gv2 = l2 ++ gv2), (a0 :: gv2 = l1 ++ l2), (a0 :: gv2 = l1 ++ l1), (a0 :: gv2 = l1 ++ gv3), (a0 :: gv2 = l1 ++ gv2), (a0 :: gv2 = gv3 ++ l2)
(a0 :: gv2 = gv3 ++ l1), (a0 :: gv2 = gv3 ++ gv3), (a0 :: gv2 = gv3 ++ gv2), (a0 :: gv2 = gv2 ++ l2), (a0 :: gv2 = gv2 ++ l1), (a0 :: gv2 = gv2 ++ gv3), (a0 :: gv2 = gv2 ++ gv2), (a0 :: gv2 = []), (n :: l2 = l2), (n :: l2 = l1)
(n :: l2 = gv3), (n :: l2 = gv2), (n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l2 gv3), (n :: l2 = merge l2 gv2), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = merge l1 gv3), (n :: l2 = merge l1 gv2)
(n :: l2 = merge gv3 l2), (n :: l2 = merge gv3 l1), (n :: l2 = merge gv3 gv3), (n :: l2 = merge gv3 gv2), (n :: l2 = merge gv2 l2), (n :: l2 = merge gv2 l1), (n :: l2 = merge gv2 gv3), (n :: l2 = merge gv2 gv2), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1)
(n :: l2 = l2 ++ gv3), (n :: l2 = l2 ++ gv2), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = l1 ++ gv3), (n :: l2 = l1 ++ gv2), (n :: l2 = gv3 ++ l2), (n :: l2 = gv3 ++ l1), (n :: l2 = gv3 ++ gv3), (n :: l2 = gv3 ++ gv2)
(n :: l2 = gv2 ++ l2), (n :: l2 = gv2 ++ l1), (n :: l2 = gv2 ++ gv3), (n :: l2 = gv2 ++ gv2), (n :: l2 = []), (n :: l1 = l2), (n :: l1 = l1), (n :: l1 = gv3), (n :: l1 = gv2), (n :: l1 = merge l2 l2)
(n :: l1 = merge l2 l1), (n :: l1 = merge l2 gv3), (n :: l1 = merge l2 gv2), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = merge l1 gv3), (n :: l1 = merge l1 gv2), (n :: l1 = merge gv3 l2), (n :: l1 = merge gv3 l1), (n :: l1 = merge gv3 gv3)
(n :: l1 = merge gv3 gv2), (n :: l1 = merge gv2 l2), (n :: l1 = merge gv2 l1), (n :: l1 = merge gv2 gv3), (n :: l1 = merge gv2 gv2), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l2 ++ gv3), (n :: l1 = l2 ++ gv2), (n :: l1 = l1 ++ l2)
(n :: l1 = l1 ++ l1), (n :: l1 = l1 ++ gv3), (n :: l1 = l1 ++ gv2), (n :: l1 = gv3 ++ l2), (n :: l1 = gv3 ++ l1), (n :: l1 = gv3 ++ gv3), (n :: l1 = gv3 ++ gv2), (n :: l1 = gv2 ++ l2), (n :: l1 = gv2 ++ l1), (n :: l1 = gv2 ++ gv3)
(n :: l1 = gv2 ++ gv2), (n :: l1 = []), (n :: gv3 = l2), (n :: gv3 = l1), (n :: gv3 = gv3), (n :: gv3 = gv2), (n :: gv3 = merge l2 l2), (n :: gv3 = merge l2 l1), (n :: gv3 = merge l2 gv3), (n :: gv3 = merge l2 gv2)
(n :: gv3 = merge l1 l2), (n :: gv3 = merge l1 l1), (n :: gv3 = merge l1 gv3), (n :: gv3 = merge l1 gv2), (n :: gv3 = merge gv3 l2), (n :: gv3 = merge gv3 l1), (n :: gv3 = merge gv3 gv3), (n :: gv3 = merge gv3 gv2), (n :: gv3 = merge gv2 l2), (n :: gv3 = merge gv2 l1)
(n :: gv3 = merge gv2 gv3), (n :: gv3 = merge gv2 gv2), (n :: gv3 = l2 ++ l2), (n :: gv3 = l2 ++ l1), (n :: gv3 = l2 ++ gv3), (n :: gv3 = l2 ++ gv2), (n :: gv3 = l1 ++ l2), (n :: gv3 = l1 ++ l1), (n :: gv3 = l1 ++ gv3), (n :: gv3 = l1 ++ gv2)
(n :: gv3 = gv3 ++ l2), (n :: gv3 = gv3 ++ l1), (n :: gv3 = gv3 ++ gv3), (n :: gv3 = gv3 ++ gv2), (n :: gv3 = gv2 ++ l2), (n :: gv3 = gv2 ++ l1), (n :: gv3 = gv2 ++ gv3), (n :: gv3 = gv2 ++ gv2), (n :: gv3 = []), (n :: gv2 = l2)
(n :: gv2 = l1), (n :: gv2 = gv3), (n :: gv2 = gv2), (n :: gv2 = merge l2 l2), (n :: gv2 = merge l2 l1), (n :: gv2 = merge l2 gv3), (n :: gv2 = merge l2 gv2), (n :: gv2 = merge l1 l2), (n :: gv2 = merge l1 l1), (n :: gv2 = merge l1 gv3)
(n :: gv2 = merge l1 gv2), (n :: gv2 = merge gv3 l2), (n :: gv2 = merge gv3 l1), (n :: gv2 = merge gv3 gv3), (n :: gv2 = merge gv3 gv2), (n :: gv2 = merge gv2 l2), (n :: gv2 = merge gv2 l1), (n :: gv2 = merge gv2 gv3), (n :: gv2 = merge gv2 gv2), (n :: gv2 = l2 ++ l2)
(n :: gv2 = l2 ++ l1), (n :: gv2 = l2 ++ gv3), (n :: gv2 = l2 ++ gv2), (n :: gv2 = l1 ++ l2), (n :: gv2 = l1 ++ l1), (n :: gv2 = l1 ++ gv3), (n :: gv2 = l1 ++ gv2), (n :: gv2 = gv3 ++ l2), (n :: gv2 = gv3 ++ l1), (n :: gv2 = gv3 ++ gv3)
(n :: gv2 = gv3 ++ gv2), (n :: gv2 = gv2 ++ l2), (n :: gv2 = gv2 ++ l1), (n :: gv2 = gv2 ++ gv3), (n :: gv2 = gv2 ++ gv2), (n :: gv2 = []), (a :: l2 = l2), (a :: l2 = l1), (a :: l2 = gv3), (a :: l2 = gv2)
(a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1), (a :: l2 = merge l2 gv3), (a :: l2 = merge l2 gv2), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = merge l1 gv3), (a :: l2 = merge l1 gv2), (a :: l2 = merge gv3 l2), (a :: l2 = merge gv3 l1)
(a :: l2 = merge gv3 gv3), (a :: l2 = merge gv3 gv2), (a :: l2 = merge gv2 l2), (a :: l2 = merge gv2 l1), (a :: l2 = merge gv2 gv3), (a :: l2 = merge gv2 gv2), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l2 ++ gv3), (a :: l2 = l2 ++ gv2)
(a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1), (a :: l2 = l1 ++ gv3), (a :: l2 = l1 ++ gv2), (a :: l2 = gv3 ++ l2), (a :: l2 = gv3 ++ l1), (a :: l2 = gv3 ++ gv3), (a :: l2 = gv3 ++ gv2), (a :: l2 = gv2 ++ l2), (a :: l2 = gv2 ++ l1)
(a :: l2 = gv2 ++ gv3), (a :: l2 = gv2 ++ gv2), (a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = gv3), (a :: l1 = gv2), (a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l2 gv3)
(a :: l1 = merge l2 gv2), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = merge l1 gv3), (a :: l1 = merge l1 gv2), (a :: l1 = merge gv3 l2), (a :: l1 = merge gv3 l1), (a :: l1 = merge gv3 gv3), (a :: l1 = merge gv3 gv2), (a :: l1 = merge gv2 l2)
(a :: l1 = merge gv2 l1), (a :: l1 = merge gv2 gv3), (a :: l1 = merge gv2 gv2), (a :: l1 = l2 ++ l2), (a :: l1 = l2 ++ l1), (a :: l1 = l2 ++ gv3), (a :: l1 = l2 ++ gv2), (a :: l1 = l1 ++ l2), (a :: l1 = l1 ++ l1), (a :: l1 = l1 ++ gv3)
(a :: l1 = l1 ++ gv2), (a :: l1 = gv3 ++ l2), (a :: l1 = gv3 ++ l1), (a :: l1 = gv3 ++ gv3), (a :: l1 = gv3 ++ gv2), (a :: l1 = gv2 ++ l2), (a :: l1 = gv2 ++ l1), (a :: l1 = gv2 ++ gv3), (a :: l1 = gv2 ++ gv2), (a :: l1 = [])
(a :: gv3 = l2), (a :: gv3 = l1), (a :: gv3 = gv3), (a :: gv3 = gv2), (a :: gv3 = merge l2 l2), (a :: gv3 = merge l2 l1), (a :: gv3 = merge l2 gv3), (a :: gv3 = merge l2 gv2), (a :: gv3 = merge l1 l2), (a :: gv3 = merge l1 l1)
(a :: gv3 = merge l1 gv3), (a :: gv3 = merge l1 gv2), (a :: gv3 = merge gv3 l2), (a :: gv3 = merge gv3 l1), (a :: gv3 = merge gv3 gv3), (a :: gv3 = merge gv3 gv2), (a :: gv3 = merge gv2 l2), (a :: gv3 = merge gv2 l1), (a :: gv3 = merge gv2 gv3), (a :: gv3 = merge gv2 gv2)
(a :: gv3 = l2 ++ l2), (a :: gv3 = l2 ++ l1), (a :: gv3 = l2 ++ gv3), (a :: gv3 = l2 ++ gv2), (a :: gv3 = l1 ++ l2), (a :: gv3 = l1 ++ l1), (a :: gv3 = l1 ++ gv3), (a :: gv3 = l1 ++ gv2), (a :: gv3 = gv3 ++ l2), (a :: gv3 = gv3 ++ l1)
(a :: gv3 = gv3 ++ gv3), (a :: gv3 = gv3 ++ gv2), (a :: gv3 = gv2 ++ l2), (a :: gv3 = gv2 ++ l1), (a :: gv3 = gv2 ++ gv3), (a :: gv3 = gv2 ++ gv2), (a :: gv3 = []), (a :: gv2 = l2), (a :: gv2 = l1), (a :: gv2 = gv3)
(a :: gv2 = gv2), (a :: gv2 = merge l2 l2), (a :: gv2 = merge l2 l1), (a :: gv2 = merge l2 gv3), (a :: gv2 = merge l2 gv2), (a :: gv2 = merge l1 l2), (a :: gv2 = merge l1 l1), (a :: gv2 = merge l1 gv3), (a :: gv2 = merge l1 gv2), (a :: gv2 = merge gv3 l2)
(a :: gv2 = merge gv3 l1), (a :: gv2 = merge gv3 gv3), (a :: gv2 = merge gv3 gv2), (a :: gv2 = merge gv2 l2), (a :: gv2 = merge gv2 l1), (a :: gv2 = merge gv2 gv3), (a :: gv2 = merge gv2 gv2), (a :: gv2 = l2 ++ l2), (a :: gv2 = l2 ++ l1), (a :: gv2 = l2 ++ gv3)
(a :: gv2 = l2 ++ gv2), (a :: gv2 = l1 ++ l2), (a :: gv2 = l1 ++ l1), (a :: gv2 = l1 ++ gv3), (a :: gv2 = l1 ++ gv2), (a :: gv2 = gv3 ++ l2), (a :: gv2 = gv3 ++ l1), (a :: gv2 = gv3 ++ gv3), (a :: gv2 = gv3 ++ gv2), (a :: gv2 = gv2 ++ l2)
(a :: gv2 = gv2 ++ l1), (a :: gv2 = gv2 ++ gv3), (a :: gv2 = gv2 ++ gv2), (a :: gv2 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = gv3), (merge l2 l2 = gv2), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1)
(merge l2 l2 = l2 ++ gv3), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l2 = l1 ++ gv3), (merge l2 l2 = l1 ++ gv2), (merge l2 l2 = gv3 ++ l2), (merge l2 l2 = gv3 ++ l1), (merge l2 l2 = gv3 ++ gv3), (merge l2 l2 = gv3 ++ gv2)
(merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ l1), (merge l2 l2 = gv2 ++ gv3), (merge l2 l2 = gv2 ++ gv2), (merge l2 l1 = l2), (merge l2 l1 = l1), (merge l2 l1 = gv3), (merge l2 l1 = gv2), (merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1)
(merge l2 l1 = l2 ++ gv3), (merge l2 l1 = l2 ++ gv2), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l2 l1 = l1 ++ gv3), (merge l2 l1 = l1 ++ gv2), (merge l2 l1 = gv3 ++ l2), (merge l2 l1 = gv3 ++ l1), (merge l2 l1 = gv3 ++ gv3), (merge l2 l1 = gv3 ++ gv2)
(merge l2 l1 = gv2 ++ l2), (merge l2 l1 = gv2 ++ l1), (merge l2 l1 = gv2 ++ gv3), (merge l2 l1 = gv2 ++ gv2), (merge l2 gv3 = l2), (merge l2 gv3 = l1), (merge l2 gv3 = gv3), (merge l2 gv3 = gv2), (merge l2 gv3 = l2 ++ l2), (merge l2 gv3 = l2 ++ l1)
(merge l2 gv3 = l2 ++ gv3), (merge l2 gv3 = l2 ++ gv2), (merge l2 gv3 = l1 ++ l2), (merge l2 gv3 = l1 ++ l1), (merge l2 gv3 = l1 ++ gv3), (merge l2 gv3 = l1 ++ gv2), (merge l2 gv3 = gv3 ++ l2), (merge l2 gv3 = gv3 ++ l1), (merge l2 gv3 = gv3 ++ gv3), (merge l2 gv3 = gv3 ++ gv2)
(merge l2 gv3 = gv2 ++ l2), (merge l2 gv3 = gv2 ++ l1), (merge l2 gv3 = gv2 ++ gv3), (merge l2 gv3 = gv2 ++ gv2), (merge l2 gv2 = l2), (merge l2 gv2 = l1), (merge l2 gv2 = gv3), (merge l2 gv2 = gv2), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ l1)
(merge l2 gv2 = l2 ++ gv3), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l1 ++ l2), (merge l2 gv2 = l1 ++ l1), (merge l2 gv2 = l1 ++ gv3), (merge l2 gv2 = l1 ++ gv2), (merge l2 gv2 = gv3 ++ l2), (merge l2 gv2 = gv3 ++ l1), (merge l2 gv2 = gv3 ++ gv3), (merge l2 gv2 = gv3 ++ gv2)
(merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ l1), (merge l2 gv2 = gv2 ++ gv3), (merge l2 gv2 = gv2 ++ gv2), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = gv3), (merge l1 l2 = gv2), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1)
(merge l1 l2 = l2 ++ gv3), (merge l1 l2 = l2 ++ gv2), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1), (merge l1 l2 = l1 ++ gv3), (merge l1 l2 = l1 ++ gv2), (merge l1 l2 = gv3 ++ l2), (merge l1 l2 = gv3 ++ l1), (merge l1 l2 = gv3 ++ gv3), (merge l1 l2 = gv3 ++ gv2)
(merge l1 l2 = gv2 ++ l2), (merge l1 l2 = gv2 ++ l1), (merge l1 l2 = gv2 ++ gv3), (merge l1 l2 = gv2 ++ gv2), (merge l1 l1 = l2), (merge l1 l1 = l1), (merge l1 l1 = gv3), (merge l1 l1 = gv2), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1)
(merge l1 l1 = l2 ++ gv3), (merge l1 l1 = l2 ++ gv2), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (merge l1 l1 = l1 ++ gv3), (merge l1 l1 = l1 ++ gv2), (merge l1 l1 = gv3 ++ l2), (merge l1 l1 = gv3 ++ l1), (merge l1 l1 = gv3 ++ gv3), (merge l1 l1 = gv3 ++ gv2)
(merge l1 l1 = gv2 ++ l2), (merge l1 l1 = gv2 ++ l1), (merge l1 l1 = gv2 ++ gv3), (merge l1 l1 = gv2 ++ gv2), (merge l1 gv3 = l2), (merge l1 gv3 = l1), (merge l1 gv3 = gv3), (merge l1 gv3 = gv2), (merge l1 gv3 = l2 ++ l2), (merge l1 gv3 = l2 ++ l1)
(merge l1 gv3 = l2 ++ gv3), (merge l1 gv3 = l2 ++ gv2), (merge l1 gv3 = l1 ++ l2), (merge l1 gv3 = l1 ++ l1), (merge l1 gv3 = l1 ++ gv3), (merge l1 gv3 = l1 ++ gv2), (merge l1 gv3 = gv3 ++ l2), (merge l1 gv3 = gv3 ++ l1), (merge l1 gv3 = gv3 ++ gv3), (merge l1 gv3 = gv3 ++ gv2)
(merge l1 gv3 = gv2 ++ l2), (merge l1 gv3 = gv2 ++ l1), (merge l1 gv3 = gv2 ++ gv3), (merge l1 gv3 = gv2 ++ gv2), (merge l1 gv2 = l2), (merge l1 gv2 = l1), (merge l1 gv2 = gv3), (merge l1 gv2 = gv2), (merge l1 gv2 = l2 ++ l2), (merge l1 gv2 = l2 ++ l1)
(merge l1 gv2 = l2 ++ gv3), (merge l1 gv2 = l2 ++ gv2), (merge l1 gv2 = l1 ++ l2), (merge l1 gv2 = l1 ++ l1), (merge l1 gv2 = l1 ++ gv3), (merge l1 gv2 = l1 ++ gv2), (merge l1 gv2 = gv3 ++ l2), (merge l1 gv2 = gv3 ++ l1), (merge l1 gv2 = gv3 ++ gv3), (merge l1 gv2 = gv3 ++ gv2)
(merge l1 gv2 = gv2 ++ l2), (merge l1 gv2 = gv2 ++ l1), (merge l1 gv2 = gv2 ++ gv3), (merge l1 gv2 = gv2 ++ gv2), (merge gv3 l2 = l2), (merge gv3 l2 = l1), (merge gv3 l2 = gv3), (merge gv3 l2 = gv2), (merge gv3 l2 = l2 ++ l2), (merge gv3 l2 = l2 ++ l1)
(merge gv3 l2 = l2 ++ gv3), (merge gv3 l2 = l2 ++ gv2), (merge gv3 l2 = l1 ++ l2), (merge gv3 l2 = l1 ++ l1), (merge gv3 l2 = l1 ++ gv3), (merge gv3 l2 = l1 ++ gv2), (merge gv3 l2 = gv3 ++ l2), (merge gv3 l2 = gv3 ++ l1), (merge gv3 l2 = gv3 ++ gv3), (merge gv3 l2 = gv3 ++ gv2)
(merge gv3 l2 = gv2 ++ l2), (merge gv3 l2 = gv2 ++ l1), (merge gv3 l2 = gv2 ++ gv3), (merge gv3 l2 = gv2 ++ gv2), (merge gv3 l1 = l2), (merge gv3 l1 = l1), (merge gv3 l1 = gv3), (merge gv3 l1 = gv2), (merge gv3 l1 = l2 ++ l2), (merge gv3 l1 = l2 ++ l1)
(merge gv3 l1 = l2 ++ gv3), (merge gv3 l1 = l2 ++ gv2), (merge gv3 l1 = l1 ++ l2), (merge gv3 l1 = l1 ++ l1), (merge gv3 l1 = l1 ++ gv3), (merge gv3 l1 = l1 ++ gv2), (merge gv3 l1 = gv3 ++ l2), (merge gv3 l1 = gv3 ++ l1), (merge gv3 l1 = gv3 ++ gv3), (merge gv3 l1 = gv3 ++ gv2)
(merge gv3 l1 = gv2 ++ l2), (merge gv3 l1 = gv2 ++ l1), (merge gv3 l1 = gv2 ++ gv3), (merge gv3 l1 = gv2 ++ gv2), (merge gv3 gv3 = l2), (merge gv3 gv3 = l1), (merge gv3 gv3 = gv3), (merge gv3 gv3 = gv2), (merge gv3 gv3 = l2 ++ l2), (merge gv3 gv3 = l2 ++ l1)
(merge gv3 gv3 = l2 ++ gv3), (merge gv3 gv3 = l2 ++ gv2), (merge gv3 gv3 = l1 ++ l2), (merge gv3 gv3 = l1 ++ l1), (merge gv3 gv3 = l1 ++ gv3), (merge gv3 gv3 = l1 ++ gv2), (merge gv3 gv3 = gv3 ++ l2), (merge gv3 gv3 = gv3 ++ l1), (merge gv3 gv3 = gv3 ++ gv3), (merge gv3 gv3 = gv3 ++ gv2)
(merge gv3 gv3 = gv2 ++ l2), (merge gv3 gv3 = gv2 ++ l1), (merge gv3 gv3 = gv2 ++ gv3), (merge gv3 gv3 = gv2 ++ gv2), (merge gv3 gv2 = l2), (merge gv3 gv2 = l1), (merge gv3 gv2 = gv3), (merge gv3 gv2 = gv2), (merge gv3 gv2 = l2 ++ l2), (merge gv3 gv2 = l2 ++ l1)
(merge gv3 gv2 = l2 ++ gv3), (merge gv3 gv2 = l2 ++ gv2), (merge gv3 gv2 = l1 ++ l2), (merge gv3 gv2 = l1 ++ l1), (merge gv3 gv2 = l1 ++ gv3), (merge gv3 gv2 = l1 ++ gv2), (merge gv3 gv2 = gv3 ++ l2), (merge gv3 gv2 = gv3 ++ l1), (merge gv3 gv2 = gv3 ++ gv3), (merge gv3 gv2 = gv3 ++ gv2)
(merge gv3 gv2 = gv2 ++ l2), (merge gv3 gv2 = gv2 ++ l1), (merge gv3 gv2 = gv2 ++ gv3), (merge gv3 gv2 = gv2 ++ gv2), (merge gv2 l2 = l2), (merge gv2 l2 = l1), (merge gv2 l2 = gv3), (merge gv2 l2 = gv2), (merge gv2 l2 = l2 ++ l2), (merge gv2 l2 = l2 ++ l1)
(merge gv2 l2 = l2 ++ gv3), (merge gv2 l2 = l2 ++ gv2), (merge gv2 l2 = l1 ++ l2), (merge gv2 l2 = l1 ++ l1), (merge gv2 l2 = l1 ++ gv3), (merge gv2 l2 = l1 ++ gv2), (merge gv2 l2 = gv3 ++ l2), (merge gv2 l2 = gv3 ++ l1), (merge gv2 l2 = gv3 ++ gv3), (merge gv2 l2 = gv3 ++ gv2)
(merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ l1), (merge gv2 l2 = gv2 ++ gv3), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l1 = l2), (merge gv2 l1 = l1), (merge gv2 l1 = gv3), (merge gv2 l1 = gv2), (merge gv2 l1 = l2 ++ l2), (merge gv2 l1 = l2 ++ l1)
(merge gv2 l1 = l2 ++ gv3), (merge gv2 l1 = l2 ++ gv2), (merge gv2 l1 = l1 ++ l2), (merge gv2 l1 = l1 ++ l1), (merge gv2 l1 = l1 ++ gv3), (merge gv2 l1 = l1 ++ gv2), (merge gv2 l1 = gv3 ++ l2), (merge gv2 l1 = gv3 ++ l1), (merge gv2 l1 = gv3 ++ gv3), (merge gv2 l1 = gv3 ++ gv2)
(merge gv2 l1 = gv2 ++ l2), (merge gv2 l1 = gv2 ++ l1), (merge gv2 l1 = gv2 ++ gv3), (merge gv2 l1 = gv2 ++ gv2), (merge gv2 gv3 = l2), (merge gv2 gv3 = l1), (merge gv2 gv3 = gv3), (merge gv2 gv3 = gv2), (merge gv2 gv3 = l2 ++ l2), (merge gv2 gv3 = l2 ++ l1)
(merge gv2 gv3 = l2 ++ gv3), (merge gv2 gv3 = l2 ++ gv2), (merge gv2 gv3 = l1 ++ l2), (merge gv2 gv3 = l1 ++ l1), (merge gv2 gv3 = l1 ++ gv3), (merge gv2 gv3 = l1 ++ gv2), (merge gv2 gv3 = gv3 ++ l2), (merge gv2 gv3 = gv3 ++ l1), (merge gv2 gv3 = gv3 ++ gv3), (merge gv2 gv3 = gv3 ++ gv2)
(merge gv2 gv3 = gv2 ++ l2), (merge gv2 gv3 = gv2 ++ l1), (merge gv2 gv3 = gv2 ++ gv3), (merge gv2 gv3 = gv2 ++ gv2), (merge gv2 gv2 = l2), (merge gv2 gv2 = l1), (merge gv2 gv2 = gv3), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l2 ++ l2), (merge gv2 gv2 = l2 ++ l1)
(merge gv2 gv2 = l2 ++ gv3), (merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l1 ++ l2), (merge gv2 gv2 = l1 ++ l1), (merge gv2 gv2 = l1 ++ gv3), (merge gv2 gv2 = l1 ++ gv2), (merge gv2 gv2 = gv3 ++ l2), (merge gv2 gv2 = gv3 ++ l1), (merge gv2 gv2 = gv3 ++ gv3), (merge gv2 gv2 = gv3 ++ gv2)
(merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ l1), (merge gv2 gv2 = gv2 ++ gv3), (merge gv2 gv2 = gv2 ++ gv2), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l2 = gv3), (l2 ++ l2 = gv2), (l2 ++ l1 = l2), (l2 ++ l1 = l1)
(l2 ++ l1 = gv3), (l2 ++ l1 = gv2), (l2 ++ gv3 = l2), (l2 ++ gv3 = l1), (l2 ++ gv3 = gv3), (l2 ++ gv3 = gv2), (l2 ++ gv2 = l2), (l2 ++ gv2 = l1), (l2 ++ gv2 = gv3), (l2 ++ gv2 = gv2)
(l1 ++ l2 = l2), (l1 ++ l2 = l1), (l1 ++ l2 = gv3), (l1 ++ l2 = gv2), (l1 ++ l1 = l2), (l1 ++ l1 = l1), (l1 ++ l1 = gv3), (l1 ++ l1 = gv2), (l1 ++ gv3 = l2), (l1 ++ gv3 = l1)
(l1 ++ gv3 = gv3), (l1 ++ gv3 = gv2), (l1 ++ gv2 = l2), (l1 ++ gv2 = l1), (l1 ++ gv2 = gv3), (l1 ++ gv2 = gv2), (gv3 ++ l2 = l2), (gv3 ++ l2 = l1), (gv3 ++ l2 = gv3), (gv3 ++ l2 = gv2)
(gv3 ++ l1 = l2), (gv3 ++ l1 = l1), (gv3 ++ l1 = gv3), (gv3 ++ l1 = gv2), (gv3 ++ gv3 = l2), (gv3 ++ gv3 = l1), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = gv2), (gv3 ++ gv2 = l2), (gv3 ++ gv2 = l1)
(gv3 ++ gv2 = gv3), (gv3 ++ gv2 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = l1), (gv2 ++ l2 = gv3), (gv2 ++ l2 = gv2), (gv2 ++ l1 = l2), (gv2 ++ l1 = l1), (gv2 ++ l1 = gv3), (gv2 ++ l1 = gv2)
(gv2 ++ gv3 = l2), (gv2 ++ gv3 = l1), (gv2 ++ gv3 = gv3), (gv2 ++ gv3 = gv2), (gv2 ++ gv2 = l2), (gv2 ++ gv2 = l1), (gv2 ++ gv2 = gv3), (gv2 ++ gv2 = gv2), ([] = l2), ([] = l1)
([] = gv3), ([] = gv2), ([] = merge l2 l2), ([] = merge l2 l1), ([] = merge l2 gv3), ([] = merge l2 gv2), ([] = merge l1 l2), ([] = merge l1 l1), ([] = merge l1 gv3), ([] = merge l1 gv2)
([] = merge gv3 l2), ([] = merge gv3 l1), ([] = merge gv3 gv3), ([] = merge gv3 gv2), ([] = merge gv2 l2), ([] = merge gv2 l1), ([] = merge gv2 gv3), ([] = merge gv2 gv2), ([] = l2 ++ l2), ([] = l2 ++ l1)
([] = l2 ++ gv3), ([] = l2 ++ gv2), ([] = l1 ++ l2), ([] = l1 ++ l1), ([] = l1 ++ gv3), ([] = l1 ++ gv2), ([] = gv3 ++ l2), ([] = gv3 ++ l1), ([] = gv3 ++ gv3), ([] = gv3 ++ gv2)
([] = gv2 ++ l2), ([] = gv2 ++ l1), ([] = gv2 ++ gv3), ([] = gv2 ++ gv2), (None = Some a0), (None = Some n), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l2) = split gv3)
((l2, l2) = split gv2), ((l2, l1) = split l2), ((l2, l1) = split l1), ((l2, l1) = split gv3), ((l2, l1) = split gv2), ((l2, gv3) = split l2), ((l2, gv3) = split l1), ((l2, gv3) = split gv3), ((l2, gv3) = split gv2), ((l2, gv2) = split l2)
((l2, gv2) = split l1), ((l2, gv2) = split gv3), ((l2, gv2) = split gv2), ((l1, l2) = split l2), ((l1, l2) = split l1), ((l1, l2) = split gv3), ((l1, l2) = split gv2), ((l1, l1) = split l2), ((l1, l1) = split l1), ((l1, l1) = split gv3)
((l1, l1) = split gv2), ((l1, gv3) = split l2), ((l1, gv3) = split l1), ((l1, gv3) = split gv3), ((l1, gv3) = split gv2), ((l1, gv2) = split l2), ((l1, gv2) = split l1), ((l1, gv2) = split gv3), ((l1, gv2) = split gv2), ((gv3, l2) = split l2)
((gv3, l2) = split l1), ((gv3, l2) = split gv3), ((gv3, l2) = split gv2), ((gv3, l1) = split l2), ((gv3, l1) = split l1), ((gv3, l1) = split gv3), ((gv3, l1) = split gv2), ((gv3, gv3) = split l2), ((gv3, gv3) = split l1), ((gv3, gv3) = split gv3)
((gv3, gv3) = split gv2), ((gv3, gv2) = split l2), ((gv3, gv2) = split l1), ((gv3, gv2) = split gv3), ((gv3, gv2) = split gv2), ((gv2, l2) = split l2), ((gv2, l2) = split l1), ((gv2, l2) = split gv3), ((gv2, l2) = split gv2), ((gv2, l1) = split l2)
((gv2, l1) = split l1), ((gv2, l1) = split gv3), ((gv2, l1) = split gv2), ((gv2, gv3) = split l2), ((gv2, gv3) = split l1), ((gv2, gv3) = split gv3), ((gv2, gv3) = split gv2), ((gv2, gv2) = split l2), ((gv2, gv2) = split l1), ((gv2, gv2) = split gv3)
((gv2, gv2) = split gv2), (length l2 = a0), (length l2 = n), (length l2 = a), (length l1 = a0), (length l1 = n), (length l1 = a), (length gv3 = a0), (length gv3 = n), (length gv3 = a)
(length gv2 = a0), (length gv2 = n), (length gv2 = a)

Label: 5 (5)
(a0 <=* l2), (a0 <=* gv2), (a0 <=* gv1), (a <=* l2), (a <=* gv2), (a <=* gv1), (sorted l2), (sorted gv2), (sorted gv1), (Permutation l2 l2)
(Permutation l2 gv2), (Permutation l2 gv1), (Permutation gv2 l2), (Permutation gv2 gv2), (Permutation gv2 gv1), (Permutation gv1 l2), (Permutation gv1 gv2), (Permutation gv1 gv1), (In a0 l2), (In a0 gv2)
(In a0 gv1), (In a l2), (In a gv2), (In a gv1), (a0 < a0), (a0 < a), (a < a0), (a < a), (a0 <= a0), (a0 <= a)
(a <= a0), (a <= a), (l2 = l2), (l2 = gv2), (l2 = gv1), (gv2 = l2), (gv2 = gv2), (gv2 = gv1), (gv1 = l2), (gv1 = gv2)
(gv1 = gv1), (a0 = a0), (a0 = a), (a = a0), (a = a), (a0 <=* a0 :: l2), (a0 <=* a0 :: gv2), (a0 <=* a0 :: gv1), (a0 <=* a :: l2), (a0 <=* a :: gv2)
(a0 <=* a :: gv1), (a0 <=* merge l2 l2), (a0 <=* merge l2 gv2), (a0 <=* merge l2 gv1), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 gv1), (a0 <=* merge gv1 l2), (a0 <=* merge gv1 gv2), (a0 <=* merge gv1 gv1)
(a0 <=* l2 ++ l2), (a0 <=* l2 ++ gv2), (a0 <=* l2 ++ gv1), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ gv1), (a0 <=* gv1 ++ l2), (a0 <=* gv1 ++ gv2), (a0 <=* gv1 ++ gv1), (a0 <=* [])
(a <=* a0 :: l2), (a <=* a0 :: gv2), (a <=* a0 :: gv1), (a <=* a :: l2), (a <=* a :: gv2), (a <=* a :: gv1), (a <=* merge l2 l2), (a <=* merge l2 gv2), (a <=* merge l2 gv1), (a <=* merge gv2 l2)
(a <=* merge gv2 gv2), (a <=* merge gv2 gv1), (a <=* merge gv1 l2), (a <=* merge gv1 gv2), (a <=* merge gv1 gv1), (a <=* l2 ++ l2), (a <=* l2 ++ gv2), (a <=* l2 ++ gv1), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2)
(a <=* gv2 ++ gv1), (a <=* gv1 ++ l2), (a <=* gv1 ++ gv2), (a <=* gv1 ++ gv1), (a <=* []), (length l2 <=* l2), (length l2 <=* gv2), (length l2 <=* gv1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: gv2)
(length l2 <=* a0 :: gv1), (length l2 <=* a :: l2), (length l2 <=* a :: gv2), (length l2 <=* a :: gv1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv2), (length l2 <=* merge l2 gv1), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 gv1)
(length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv2), (length l2 <=* merge gv1 gv1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ gv2), (length l2 <=* l2 ++ gv1), (length l2 <=* gv2 ++ l2), (length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ gv1), (length l2 <=* gv1 ++ l2)
(length l2 <=* gv1 ++ gv2), (length l2 <=* gv1 ++ gv1), (length l2 <=* []), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* gv1), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: gv1), (length gv2 <=* a :: l2)
(length gv2 <=* a :: gv2), (length gv2 <=* a :: gv1), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 gv1), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 gv1), (length gv2 <=* merge gv1 l2), (length gv2 <=* merge gv1 gv2)
(length gv2 <=* merge gv1 gv1), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ gv1), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ gv1), (length gv2 <=* gv1 ++ l2), (length gv2 <=* gv1 ++ gv2), (length gv2 <=* gv1 ++ gv1)
(length gv2 <=* []), (length gv1 <=* l2), (length gv1 <=* gv2), (length gv1 <=* gv1), (length gv1 <=* a0 :: l2), (length gv1 <=* a0 :: gv2), (length gv1 <=* a0 :: gv1), (length gv1 <=* a :: l2), (length gv1 <=* a :: gv2), (length gv1 <=* a :: gv1)
(length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge gv2 l2), (length gv1 <=* merge gv2 gv2), (length gv1 <=* merge gv2 gv1), (length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 gv2), (length gv1 <=* merge gv1 gv1), (length gv1 <=* l2 ++ l2)
(length gv1 <=* l2 ++ gv2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* gv2 ++ l2), (length gv1 <=* gv2 ++ gv2), (length gv1 <=* gv2 ++ gv1), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv2), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* []), (sorted (a0 :: l2))
(sorted (a0 :: gv2)), (sorted (a0 :: gv1)), (sorted (a :: l2)), (sorted (a :: gv2)), (sorted (a :: gv1)), (sorted (merge l2 l2)), (sorted (merge l2 gv2)), (sorted (merge l2 gv1)), (sorted (merge gv2 l2)), (sorted (merge gv2 gv2))
(sorted (merge gv2 gv1)), (sorted (merge gv1 l2)), (sorted (merge gv1 gv2)), (sorted (merge gv1 gv1)), (sorted (l2 ++ l2)), (sorted (l2 ++ gv2)), (sorted (l2 ++ gv1)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ gv1))
(sorted (gv1 ++ l2)), (sorted (gv1 ++ gv2)), (sorted (gv1 ++ gv1)), (sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a0 :: gv1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: gv2)), (Permutation l2 (a :: gv1))
(Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 gv2)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 gv1)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 gv2)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (l2 ++ l2))
(Permutation l2 (l2 ++ gv2)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ gv1)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv2)), (Permutation l2 (gv1 ++ gv1)), (Permutation l2 []), (Permutation gv2 (a0 :: l2))
(Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: gv1)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: gv1)), (Permutation gv2 (merge l2 l2)), (Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 gv1)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2))
(Permutation gv2 (merge gv2 gv1)), (Permutation gv2 (merge gv1 l2)), (Permutation gv2 (merge gv1 gv2)), (Permutation gv2 (merge gv1 gv1)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2)), (Permutation gv2 (l2 ++ gv1)), (Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ gv1))
(Permutation gv2 (gv1 ++ l2)), (Permutation gv2 (gv1 ++ gv2)), (Permutation gv2 (gv1 ++ gv1)), (Permutation gv2 []), (Permutation gv1 (a0 :: l2)), (Permutation gv1 (a0 :: gv2)), (Permutation gv1 (a0 :: gv1)), (Permutation gv1 (a :: l2)), (Permutation gv1 (a :: gv2)), (Permutation gv1 (a :: gv1))
(Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv2)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge gv2 l2)), (Permutation gv1 (merge gv2 gv2)), (Permutation gv1 (merge gv2 gv1)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv2)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (l2 ++ l2))
(Permutation gv1 (l2 ++ gv2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (gv2 ++ l2)), (Permutation gv1 (gv2 ++ gv2)), (Permutation gv1 (gv2 ++ gv1)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (a0 :: l2) l2)
(Permutation (a0 :: l2) gv2), (Permutation (a0 :: l2) gv1), (Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a0 :: gv1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (a :: gv1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge l2 gv1))
(Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 gv1)), (Permutation (a0 :: l2) (merge gv1 l2)), (Permutation (a0 :: l2) (merge gv1 gv2)), (Permutation (a0 :: l2) (merge gv1 gv1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (l2 ++ gv1)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ gv1)), (Permutation (a0 :: l2) (gv1 ++ l2)), (Permutation (a0 :: l2) (gv1 ++ gv2)), (Permutation (a0 :: l2) (gv1 ++ gv1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) gv1), (Permutation (a0 :: gv2) (a0 :: l2))
(Permutation (a0 :: gv2) (a0 :: gv1)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: gv1)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 gv1)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 gv1))
(Permutation (a0 :: gv2) (merge gv1 l2)), (Permutation (a0 :: gv2) (merge gv1 gv2)), (Permutation (a0 :: gv2) (merge gv1 gv1)), (Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ gv1)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ gv1)), (Permutation (a0 :: gv2) (gv1 ++ l2))
(Permutation (a0 :: gv2) (gv1 ++ gv2)), (Permutation (a0 :: gv2) (gv1 ++ gv1)), (Permutation (a0 :: gv2) []), (Permutation (a0 :: gv1) l2), (Permutation (a0 :: gv1) gv2), (Permutation (a0 :: gv1) gv1), (Permutation (a0 :: gv1) (a0 :: l2)), (Permutation (a0 :: gv1) (a0 :: gv2)), (Permutation (a0 :: gv1) (a :: l2)), (Permutation (a0 :: gv1) (a :: gv2))
(Permutation (a0 :: gv1) (a :: gv1)), (Permutation (a0 :: gv1) (merge l2 l2)), (Permutation (a0 :: gv1) (merge l2 gv2)), (Permutation (a0 :: gv1) (merge l2 gv1)), (Permutation (a0 :: gv1) (merge gv2 l2)), (Permutation (a0 :: gv1) (merge gv2 gv2)), (Permutation (a0 :: gv1) (merge gv2 gv1)), (Permutation (a0 :: gv1) (merge gv1 l2)), (Permutation (a0 :: gv1) (merge gv1 gv2)), (Permutation (a0 :: gv1) (merge gv1 gv1))
(Permutation (a0 :: gv1) (l2 ++ l2)), (Permutation (a0 :: gv1) (l2 ++ gv2)), (Permutation (a0 :: gv1) (l2 ++ gv1)), (Permutation (a0 :: gv1) (gv2 ++ l2)), (Permutation (a0 :: gv1) (gv2 ++ gv2)), (Permutation (a0 :: gv1) (gv2 ++ gv1)), (Permutation (a0 :: gv1) (gv1 ++ l2)), (Permutation (a0 :: gv1) (gv1 ++ gv2)), (Permutation (a0 :: gv1) (gv1 ++ gv1)), (Permutation (a0 :: gv1) [])
(Permutation (a :: l2) l2), (Permutation (a :: l2) gv2), (Permutation (a :: l2) gv1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a0 :: gv1)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (a :: gv1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 gv2))
(Permutation (a :: l2) (merge l2 gv1)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 gv1)), (Permutation (a :: l2) (merge gv1 l2)), (Permutation (a :: l2) (merge gv1 gv2)), (Permutation (a :: l2) (merge gv1 gv1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (l2 ++ gv1))
(Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ gv1)), (Permutation (a :: l2) (gv1 ++ l2)), (Permutation (a :: l2) (gv1 ++ gv2)), (Permutation (a :: l2) (gv1 ++ gv1)), (Permutation (a :: l2) []), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) gv1)
(Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2)), (Permutation (a :: gv2) (a0 :: gv1)), (Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: gv1)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 gv1)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge gv2 gv1)), (Permutation (a :: gv2) (merge gv1 l2)), (Permutation (a :: gv2) (merge gv1 gv2)), (Permutation (a :: gv2) (merge gv1 gv1)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ gv1)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ gv1))
(Permutation (a :: gv2) (gv1 ++ l2)), (Permutation (a :: gv2) (gv1 ++ gv2)), (Permutation (a :: gv2) (gv1 ++ gv1)), (Permutation (a :: gv2) []), (Permutation (a :: gv1) l2), (Permutation (a :: gv1) gv2), (Permutation (a :: gv1) gv1), (Permutation (a :: gv1) (a0 :: l2)), (Permutation (a :: gv1) (a0 :: gv2)), (Permutation (a :: gv1) (a0 :: gv1))
(Permutation (a :: gv1) (a :: l2)), (Permutation (a :: gv1) (a :: gv2)), (Permutation (a :: gv1) (merge l2 l2)), (Permutation (a :: gv1) (merge l2 gv2)), (Permutation (a :: gv1) (merge l2 gv1)), (Permutation (a :: gv1) (merge gv2 l2)), (Permutation (a :: gv1) (merge gv2 gv2)), (Permutation (a :: gv1) (merge gv2 gv1)), (Permutation (a :: gv1) (merge gv1 l2)), (Permutation (a :: gv1) (merge gv1 gv2))
(Permutation (a :: gv1) (merge gv1 gv1)), (Permutation (a :: gv1) (l2 ++ l2)), (Permutation (a :: gv1) (l2 ++ gv2)), (Permutation (a :: gv1) (l2 ++ gv1)), (Permutation (a :: gv1) (gv2 ++ l2)), (Permutation (a :: gv1) (gv2 ++ gv2)), (Permutation (a :: gv1) (gv2 ++ gv1)), (Permutation (a :: gv1) (gv1 ++ l2)), (Permutation (a :: gv1) (gv1 ++ gv2)), (Permutation (a :: gv1) (gv1 ++ gv1))
(Permutation (a :: gv1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: gv2)), (Permutation (merge l2 l2) (a0 :: gv1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: gv2)), (Permutation (merge l2 l2) (a :: gv1))
(Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 gv1)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv2)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv2))
(Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv2)), (Permutation (merge l2 l2) (gv1 ++ gv1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2)
(Permutation (merge l2 gv2) gv1), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: gv1)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: gv1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 gv1)), (Permutation (merge l2 gv2) (merge gv2 l2))
(Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 gv1)), (Permutation (merge l2 gv2) (merge gv1 l2)), (Permutation (merge l2 gv2) (merge gv1 gv2)), (Permutation (merge l2 gv2) (merge gv1 gv1)), (Permutation (merge l2 gv2) (l2 ++ l2)), (Permutation (merge l2 gv2) (l2 ++ gv2)), (Permutation (merge l2 gv2) (l2 ++ gv1)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2))
(Permutation (merge l2 gv2) (gv2 ++ gv1)), (Permutation (merge l2 gv2) (gv1 ++ l2)), (Permutation (merge l2 gv2) (gv1 ++ gv2)), (Permutation (merge l2 gv2) (gv1 ++ gv1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 gv1) l2), (Permutation (merge l2 gv1) gv2), (Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (a0 :: l2)), (Permutation (merge l2 gv1) (a0 :: gv2))
(Permutation (merge l2 gv1) (a0 :: gv1)), (Permutation (merge l2 gv1) (a :: l2)), (Permutation (merge l2 gv1) (a :: gv2)), (Permutation (merge l2 gv1) (a :: gv1)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge l2 gv2)), (Permutation (merge l2 gv1) (merge gv2 l2)), (Permutation (merge l2 gv1) (merge gv2 gv2)), (Permutation (merge l2 gv1) (merge gv2 gv1)), (Permutation (merge l2 gv1) (merge gv1 l2))
(Permutation (merge l2 gv1) (merge gv1 gv2)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv2)), (Permutation (merge l2 gv1) (l2 ++ gv1)), (Permutation (merge l2 gv1) (gv2 ++ l2)), (Permutation (merge l2 gv1) (gv2 ++ gv2)), (Permutation (merge l2 gv1) (gv2 ++ gv1)), (Permutation (merge l2 gv1) (gv1 ++ l2)), (Permutation (merge l2 gv1) (gv1 ++ gv2))
(Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) gv1), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: gv1)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2))
(Permutation (merge gv2 l2) (a :: gv1)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 gv1)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 gv1)), (Permutation (merge gv2 l2) (merge gv1 l2)), (Permutation (merge gv2 l2) (merge gv1 gv2)), (Permutation (merge gv2 l2) (merge gv1 gv1)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ gv2)), (Permutation (merge gv2 l2) (l2 ++ gv1)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ gv1)), (Permutation (merge gv2 l2) (gv1 ++ l2)), (Permutation (merge gv2 l2) (gv1 ++ gv2)), (Permutation (merge gv2 l2) (gv1 ++ gv1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2)
(Permutation (merge gv2 gv2) gv2), (Permutation (merge gv2 gv2) gv1), (Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: gv1)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: gv1)), (Permutation (merge gv2 gv2) (merge l2 l2)), (Permutation (merge gv2 gv2) (merge l2 gv2))
(Permutation (merge gv2 gv2) (merge l2 gv1)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 gv1)), (Permutation (merge gv2 gv2) (merge gv1 l2)), (Permutation (merge gv2 gv2) (merge gv1 gv2)), (Permutation (merge gv2 gv2) (merge gv1 gv1)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ gv1)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ gv2)), (Permutation (merge gv2 gv2) (gv2 ++ gv1)), (Permutation (merge gv2 gv2) (gv1 ++ l2)), (Permutation (merge gv2 gv2) (gv1 ++ gv2)), (Permutation (merge gv2 gv2) (gv1 ++ gv1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 gv1) l2), (Permutation (merge gv2 gv1) gv2), (Permutation (merge gv2 gv1) gv1), (Permutation (merge gv2 gv1) (a0 :: l2))
(Permutation (merge gv2 gv1) (a0 :: gv2)), (Permutation (merge gv2 gv1) (a0 :: gv1)), (Permutation (merge gv2 gv1) (a :: l2)), (Permutation (merge gv2 gv1) (a :: gv2)), (Permutation (merge gv2 gv1) (a :: gv1)), (Permutation (merge gv2 gv1) (merge l2 l2)), (Permutation (merge gv2 gv1) (merge l2 gv2)), (Permutation (merge gv2 gv1) (merge l2 gv1)), (Permutation (merge gv2 gv1) (merge gv2 l2)), (Permutation (merge gv2 gv1) (merge gv2 gv2))
(Permutation (merge gv2 gv1) (merge gv1 l2)), (Permutation (merge gv2 gv1) (merge gv1 gv2)), (Permutation (merge gv2 gv1) (merge gv1 gv1)), (Permutation (merge gv2 gv1) (l2 ++ l2)), (Permutation (merge gv2 gv1) (l2 ++ gv2)), (Permutation (merge gv2 gv1) (l2 ++ gv1)), (Permutation (merge gv2 gv1) (gv2 ++ l2)), (Permutation (merge gv2 gv1) (gv2 ++ gv2)), (Permutation (merge gv2 gv1) (gv2 ++ gv1)), (Permutation (merge gv2 gv1) (gv1 ++ l2))
(Permutation (merge gv2 gv1) (gv1 ++ gv2)), (Permutation (merge gv2 gv1) (gv1 ++ gv1)), (Permutation (merge gv2 gv1) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (a0 :: l2)), (Permutation (merge gv1 l2) (a0 :: gv2)), (Permutation (merge gv1 l2) (a0 :: gv1)), (Permutation (merge gv1 l2) (a :: l2))
(Permutation (merge gv1 l2) (a :: gv2)), (Permutation (merge gv1 l2) (a :: gv1)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 gv2)), (Permutation (merge gv1 l2) (merge l2 gv1)), (Permutation (merge gv1 l2) (merge gv2 l2)), (Permutation (merge gv1 l2) (merge gv2 gv2)), (Permutation (merge gv1 l2) (merge gv2 gv1)), (Permutation (merge gv1 l2) (merge gv1 gv2)), (Permutation (merge gv1 l2) (merge gv1 gv1))
(Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (gv2 ++ l2)), (Permutation (merge gv1 l2) (gv2 ++ gv2)), (Permutation (merge gv1 l2) (gv2 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv2)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) [])
(Permutation (merge gv1 gv2) l2), (Permutation (merge gv1 gv2) gv2), (Permutation (merge gv1 gv2) gv1), (Permutation (merge gv1 gv2) (a0 :: l2)), (Permutation (merge gv1 gv2) (a0 :: gv2)), (Permutation (merge gv1 gv2) (a0 :: gv1)), (Permutation (merge gv1 gv2) (a :: l2)), (Permutation (merge gv1 gv2) (a :: gv2)), (Permutation (merge gv1 gv2) (a :: gv1)), (Permutation (merge gv1 gv2) (merge l2 l2))
(Permutation (merge gv1 gv2) (merge l2 gv2)), (Permutation (merge gv1 gv2) (merge l2 gv1)), (Permutation (merge gv1 gv2) (merge gv2 l2)), (Permutation (merge gv1 gv2) (merge gv2 gv2)), (Permutation (merge gv1 gv2) (merge gv2 gv1)), (Permutation (merge gv1 gv2) (merge gv1 l2)), (Permutation (merge gv1 gv2) (merge gv1 gv1)), (Permutation (merge gv1 gv2) (l2 ++ l2)), (Permutation (merge gv1 gv2) (l2 ++ gv2)), (Permutation (merge gv1 gv2) (l2 ++ gv1))
(Permutation (merge gv1 gv2) (gv2 ++ l2)), (Permutation (merge gv1 gv2) (gv2 ++ gv2)), (Permutation (merge gv1 gv2) (gv2 ++ gv1)), (Permutation (merge gv1 gv2) (gv1 ++ l2)), (Permutation (merge gv1 gv2) (gv1 ++ gv2)), (Permutation (merge gv1 gv2) (gv1 ++ gv1)), (Permutation (merge gv1 gv2) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv2), (Permutation (merge gv1 gv1) gv1)
(Permutation (merge gv1 gv1) (a0 :: l2)), (Permutation (merge gv1 gv1) (a0 :: gv2)), (Permutation (merge gv1 gv1) (a0 :: gv1)), (Permutation (merge gv1 gv1) (a :: l2)), (Permutation (merge gv1 gv1) (a :: gv2)), (Permutation (merge gv1 gv1) (a :: gv1)), (Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv2)), (Permutation (merge gv1 gv1) (merge l2 gv1)), (Permutation (merge gv1 gv1) (merge gv2 l2))
(Permutation (merge gv1 gv1) (merge gv2 gv2)), (Permutation (merge gv1 gv1) (merge gv2 gv1)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (merge gv1 gv2)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv2)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (gv2 ++ l2)), (Permutation (merge gv1 gv1) (gv2 ++ gv2)), (Permutation (merge gv1 gv1) (gv2 ++ gv1))
(Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ gv2)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a0 :: gv1))
(Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (a :: gv1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv2)), (Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge gv2 l2)), (Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 gv1)), (Permutation (l2 ++ l2) (merge gv1 l2))
(Permutation (l2 ++ l2) (merge gv1 gv2)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv2)), (Permutation (l2 ++ l2) (gv1 ++ gv1))
(Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2), (Permutation (l2 ++ gv2) gv1), (Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: gv1)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: gv1))
(Permutation (l2 ++ gv2) (merge l2 l2)), (Permutation (l2 ++ gv2) (merge l2 gv2)), (Permutation (l2 ++ gv2) (merge l2 gv1)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 gv1)), (Permutation (l2 ++ gv2) (merge gv1 l2)), (Permutation (l2 ++ gv2) (merge gv1 gv2)), (Permutation (l2 ++ gv2) (merge gv1 gv1)), (Permutation (l2 ++ gv2) (l2 ++ l2))
(Permutation (l2 ++ gv2) (l2 ++ gv1)), (Permutation (l2 ++ gv2) (gv2 ++ l2)), (Permutation (l2 ++ gv2) (gv2 ++ gv2)), (Permutation (l2 ++ gv2) (gv2 ++ gv1)), (Permutation (l2 ++ gv2) (gv1 ++ l2)), (Permutation (l2 ++ gv2) (gv1 ++ gv2)), (Permutation (l2 ++ gv2) (gv1 ++ gv1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv2)
(Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) (a0 :: l2)), (Permutation (l2 ++ gv1) (a0 :: gv2)), (Permutation (l2 ++ gv1) (a0 :: gv1)), (Permutation (l2 ++ gv1) (a :: l2)), (Permutation (l2 ++ gv1) (a :: gv2)), (Permutation (l2 ++ gv1) (a :: gv1)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv2)), (Permutation (l2 ++ gv1) (merge l2 gv1))
(Permutation (l2 ++ gv1) (merge gv2 l2)), (Permutation (l2 ++ gv1) (merge gv2 gv2)), (Permutation (l2 ++ gv1) (merge gv2 gv1)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 gv2)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (l2 ++ gv2)), (Permutation (l2 ++ gv1) (gv2 ++ l2)), (Permutation (l2 ++ gv1) (gv2 ++ gv2))
(Permutation (l2 ++ gv1) (gv2 ++ gv1)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2), (Permutation (gv2 ++ l2) gv1), (Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2))
(Permutation (gv2 ++ l2) (a0 :: gv1)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: gv1)), (Permutation (gv2 ++ l2) (merge l2 l2)), (Permutation (gv2 ++ l2) (merge l2 gv2)), (Permutation (gv2 ++ l2) (merge l2 gv1)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 gv1))
(Permutation (gv2 ++ l2) (merge gv1 l2)), (Permutation (gv2 ++ l2) (merge gv1 gv2)), (Permutation (gv2 ++ l2) (merge gv1 gv1)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ gv1)), (Permutation (gv2 ++ l2) (gv2 ++ gv2)), (Permutation (gv2 ++ l2) (gv2 ++ gv1)), (Permutation (gv2 ++ l2) (gv1 ++ l2)), (Permutation (gv2 ++ l2) (gv1 ++ gv2))
(Permutation (gv2 ++ l2) (gv1 ++ gv1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) gv1), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2)), (Permutation (gv2 ++ gv2) (a0 :: gv1)), (Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2))
(Permutation (gv2 ++ gv2) (a :: gv1)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 gv1)), (Permutation (gv2 ++ gv2) (merge gv2 l2)), (Permutation (gv2 ++ gv2) (merge gv2 gv2)), (Permutation (gv2 ++ gv2) (merge gv2 gv1)), (Permutation (gv2 ++ gv2) (merge gv1 l2)), (Permutation (gv2 ++ gv2) (merge gv1 gv2)), (Permutation (gv2 ++ gv2) (merge gv1 gv1))
(Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ gv1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ gv1)), (Permutation (gv2 ++ gv2) (gv1 ++ l2)), (Permutation (gv2 ++ gv2) (gv1 ++ gv2)), (Permutation (gv2 ++ gv2) (gv1 ++ gv1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ gv1) l2)
(Permutation (gv2 ++ gv1) gv2), (Permutation (gv2 ++ gv1) gv1), (Permutation (gv2 ++ gv1) (a0 :: l2)), (Permutation (gv2 ++ gv1) (a0 :: gv2)), (Permutation (gv2 ++ gv1) (a0 :: gv1)), (Permutation (gv2 ++ gv1) (a :: l2)), (Permutation (gv2 ++ gv1) (a :: gv2)), (Permutation (gv2 ++ gv1) (a :: gv1)), (Permutation (gv2 ++ gv1) (merge l2 l2)), (Permutation (gv2 ++ gv1) (merge l2 gv2))
(Permutation (gv2 ++ gv1) (merge l2 gv1)), (Permutation (gv2 ++ gv1) (merge gv2 l2)), (Permutation (gv2 ++ gv1) (merge gv2 gv2)), (Permutation (gv2 ++ gv1) (merge gv2 gv1)), (Permutation (gv2 ++ gv1) (merge gv1 l2)), (Permutation (gv2 ++ gv1) (merge gv1 gv2)), (Permutation (gv2 ++ gv1) (merge gv1 gv1)), (Permutation (gv2 ++ gv1) (l2 ++ l2)), (Permutation (gv2 ++ gv1) (l2 ++ gv2)), (Permutation (gv2 ++ gv1) (l2 ++ gv1))
(Permutation (gv2 ++ gv1) (gv2 ++ l2)), (Permutation (gv2 ++ gv1) (gv2 ++ gv2)), (Permutation (gv2 ++ gv1) (gv1 ++ l2)), (Permutation (gv2 ++ gv1) (gv1 ++ gv2)), (Permutation (gv2 ++ gv1) (gv1 ++ gv1)), (Permutation (gv2 ++ gv1) []), (Permutation (gv1 ++ l2) l2), (Permutation (gv1 ++ l2) gv2), (Permutation (gv1 ++ l2) gv1), (Permutation (gv1 ++ l2) (a0 :: l2))
(Permutation (gv1 ++ l2) (a0 :: gv2)), (Permutation (gv1 ++ l2) (a0 :: gv1)), (Permutation (gv1 ++ l2) (a :: l2)), (Permutation (gv1 ++ l2) (a :: gv2)), (Permutation (gv1 ++ l2) (a :: gv1)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv2)), (Permutation (gv1 ++ l2) (merge l2 gv1)), (Permutation (gv1 ++ l2) (merge gv2 l2)), (Permutation (gv1 ++ l2) (merge gv2 gv2))
(Permutation (gv1 ++ l2) (merge gv2 gv1)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 gv2)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv2)), (Permutation (gv1 ++ l2) (l2 ++ gv1)), (Permutation (gv1 ++ l2) (gv2 ++ l2)), (Permutation (gv1 ++ l2) (gv2 ++ gv2)), (Permutation (gv1 ++ l2) (gv2 ++ gv1))
(Permutation (gv1 ++ l2) (gv1 ++ gv2)), (Permutation (gv1 ++ l2) (gv1 ++ gv1)), (Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ gv2) l2), (Permutation (gv1 ++ gv2) gv2), (Permutation (gv1 ++ gv2) gv1), (Permutation (gv1 ++ gv2) (a0 :: l2)), (Permutation (gv1 ++ gv2) (a0 :: gv2)), (Permutation (gv1 ++ gv2) (a0 :: gv1)), (Permutation (gv1 ++ gv2) (a :: l2))
(Permutation (gv1 ++ gv2) (a :: gv2)), (Permutation (gv1 ++ gv2) (a :: gv1)), (Permutation (gv1 ++ gv2) (merge l2 l2)), (Permutation (gv1 ++ gv2) (merge l2 gv2)), (Permutation (gv1 ++ gv2) (merge l2 gv1)), (Permutation (gv1 ++ gv2) (merge gv2 l2)), (Permutation (gv1 ++ gv2) (merge gv2 gv2)), (Permutation (gv1 ++ gv2) (merge gv2 gv1)), (Permutation (gv1 ++ gv2) (merge gv1 l2)), (Permutation (gv1 ++ gv2) (merge gv1 gv2))
(Permutation (gv1 ++ gv2) (merge gv1 gv1)), (Permutation (gv1 ++ gv2) (l2 ++ l2)), (Permutation (gv1 ++ gv2) (l2 ++ gv2)), (Permutation (gv1 ++ gv2) (l2 ++ gv1)), (Permutation (gv1 ++ gv2) (gv2 ++ l2)), (Permutation (gv1 ++ gv2) (gv2 ++ gv2)), (Permutation (gv1 ++ gv2) (gv2 ++ gv1)), (Permutation (gv1 ++ gv2) (gv1 ++ l2)), (Permutation (gv1 ++ gv2) (gv1 ++ gv1)), (Permutation (gv1 ++ gv2) [])
(Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (a0 :: l2)), (Permutation (gv1 ++ gv1) (a0 :: gv2)), (Permutation (gv1 ++ gv1) (a0 :: gv1)), (Permutation (gv1 ++ gv1) (a :: l2)), (Permutation (gv1 ++ gv1) (a :: gv2)), (Permutation (gv1 ++ gv1) (a :: gv1)), (Permutation (gv1 ++ gv1) (merge l2 l2))
(Permutation (gv1 ++ gv1) (merge l2 gv2)), (Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge gv2 l2)), (Permutation (gv1 ++ gv1) (merge gv2 gv2)), (Permutation (gv1 ++ gv1) (merge gv2 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 l2)), (Permutation (gv1 ++ gv1) (merge gv1 gv2)), (Permutation (gv1 ++ gv1) (merge gv1 gv1)), (Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv2))
(Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv2 ++ l2)), (Permutation (gv1 ++ gv1) (gv2 ++ gv2)), (Permutation (gv1 ++ gv1) (gv2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) (gv1 ++ gv2)), (Permutation (gv1 ++ gv1) []), (Permutation [] l2), (Permutation [] gv2), (Permutation [] gv1)
(Permutation [] (a0 :: l2)), (Permutation [] (a0 :: gv2)), (Permutation [] (a0 :: gv1)), (Permutation [] (a :: l2)), (Permutation [] (a :: gv2)), (Permutation [] (a :: gv1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge l2 gv1)), (Permutation [] (merge gv2 l2))
(Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 gv1)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv2)), (Permutation [] (merge gv1 gv1)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv2)), (Permutation [] (l2 ++ gv1)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2))
(Permutation [] (gv2 ++ gv1)), (Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv2)), (Permutation [] (gv1 ++ gv1)), (In a0 (a0 :: l2)), (In a0 (a0 :: gv2)), (In a0 (a0 :: gv1)), (In a0 (a :: l2)), (In a0 (a :: gv2)), (In a0 (a :: gv1))
(In a0 (merge l2 l2)), (In a0 (merge l2 gv2)), (In a0 (merge l2 gv1)), (In a0 (merge gv2 l2)), (In a0 (merge gv2 gv2)), (In a0 (merge gv2 gv1)), (In a0 (merge gv1 l2)), (In a0 (merge gv1 gv2)), (In a0 (merge gv1 gv1)), (In a0 (l2 ++ l2))
(In a0 (l2 ++ gv2)), (In a0 (l2 ++ gv1)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ gv1)), (In a0 (gv1 ++ l2)), (In a0 (gv1 ++ gv2)), (In a0 (gv1 ++ gv1)), (In a (a0 :: l2)), (In a (a0 :: gv2))
(In a (a0 :: gv1)), (In a (a :: l2)), (In a (a :: gv2)), (In a (a :: gv1)), (In a (merge l2 l2)), (In a (merge l2 gv2)), (In a (merge l2 gv1)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 gv1))
(In a (merge gv1 l2)), (In a (merge gv1 gv2)), (In a (merge gv1 gv1)), (In a (l2 ++ l2)), (In a (l2 ++ gv2)), (In a (l2 ++ gv1)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ gv1)), (In a (gv1 ++ l2))
(In a (gv1 ++ gv2)), (In a (gv1 ++ gv1)), (In (length l2) l2), (In (length l2) gv2), (In (length l2) gv1), (In (length l2) (a0 :: l2)), (In (length l2) (a0 :: gv2)), (In (length l2) (a0 :: gv1)), (In (length l2) (a :: l2)), (In (length l2) (a :: gv2))
(In (length l2) (a :: gv1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2)), (In (length l2) (merge gv2 gv1)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv2)), (In (length l2) (merge gv1 gv1))
(In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (l2 ++ gv1)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ gv1)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv2)), (In (length l2) (gv1 ++ gv1)), (In (length gv2) l2)
(In (length gv2) gv2), (In (length gv2) gv1), (In (length gv2) (a0 :: l2)), (In (length gv2) (a0 :: gv2)), (In (length gv2) (a0 :: gv1)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: gv1)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2))
(In (length gv2) (merge l2 gv1)), (In (length gv2) (merge gv2 l2)), (In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 gv1)), (In (length gv2) (merge gv1 l2)), (In (length gv2) (merge gv1 gv2)), (In (length gv2) (merge gv1 gv1)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ gv1))
(In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2)), (In (length gv2) (gv2 ++ gv1)), (In (length gv2) (gv1 ++ l2)), (In (length gv2) (gv1 ++ gv2)), (In (length gv2) (gv1 ++ gv1)), (In (length gv1) l2), (In (length gv1) gv2), (In (length gv1) gv1), (In (length gv1) (a0 :: l2))
(In (length gv1) (a0 :: gv2)), (In (length gv1) (a0 :: gv1)), (In (length gv1) (a :: l2)), (In (length gv1) (a :: gv2)), (In (length gv1) (a :: gv1)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge gv2 l2)), (In (length gv1) (merge gv2 gv2))
(In (length gv1) (merge gv2 gv1)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 gv2)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (gv2 ++ l2)), (In (length gv1) (gv2 ++ gv2)), (In (length gv1) (gv2 ++ gv1))
(In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv2)), (In (length gv1) (gv1 ++ gv1)), (a0 < length l2), (a0 < length gv2), (a0 < length gv1), (a < length l2), (a < length gv2), (a < length gv1), (length l2 < a0)
(length l2 < a), (length l2 < length gv2), (length l2 < length gv1), (length gv2 < a0), (length gv2 < a), (length gv2 < length l2), (length gv2 < length gv1), (length gv1 < a0), (length gv1 < a), (length gv1 < length l2)
(length gv1 < length gv2), (a0 <= length l2), (a0 <= length gv2), (a0 <= length gv1), (a <= length l2), (a <= length gv2), (a <= length gv1), (length l2 <= a0), (length l2 <= a), (length l2 <= length gv2)
(length l2 <= length gv1), (length gv2 <= a0), (length gv2 <= a), (length gv2 <= length l2), (length gv2 <= length gv1), (length gv1 <= a0), (length gv1 <= a), (length gv1 <= length l2), (length gv1 <= length gv2), (~ a0 <=* l2)
(~ a0 <=* gv2), (~ a0 <=* gv1), (~ a <=* l2), (~ a <=* gv2), (~ a <=* gv1), (~ sorted l2), (~ sorted gv2), (~ sorted gv1), (~ Permutation l2 l2), (~ Permutation l2 gv2)
(~ Permutation l2 gv1), (~ Permutation gv2 l2), (~ Permutation gv2 gv2), (~ Permutation gv2 gv1), (~ Permutation gv1 l2), (~ Permutation gv1 gv2), (~ Permutation gv1 gv1), (~ In a0 l2), (~ In a0 gv2), (~ In a0 gv1)
(~ In a l2), (~ In a gv2), (~ In a gv1), (~ a0 < a0), (~ a0 < a), (~ a < a0), (~ a < a), (~ a0 <= a0), (~ a0 <= a), (~ a <= a0)
(~ a <= a), (l2 <> l2), (l2 <> gv2), (l2 <> gv1), (gv2 <> l2), (gv2 <> gv2), (gv2 <> gv1), (gv1 <> l2), (gv1 <> gv2), (gv1 <> gv1)
(a0 <> a0), (a0 <> a), (a <> a0), (a <> a), (None = Some l2), (None = Some gv2), (None = Some gv1), (a0 :: l2 = l2), (a0 :: l2 = gv2), (a0 :: l2 = gv1)
(a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 gv2), (a0 :: l2 = merge l2 gv1), (a0 :: l2 = merge gv2 l2), (a0 :: l2 = merge gv2 gv2), (a0 :: l2 = merge gv2 gv1), (a0 :: l2 = merge gv1 l2), (a0 :: l2 = merge gv1 gv2), (a0 :: l2 = merge gv1 gv1), (a0 :: l2 = l2 ++ l2)
(a0 :: l2 = l2 ++ gv2), (a0 :: l2 = l2 ++ gv1), (a0 :: l2 = gv2 ++ l2), (a0 :: l2 = gv2 ++ gv2), (a0 :: l2 = gv2 ++ gv1), (a0 :: l2 = gv1 ++ l2), (a0 :: l2 = gv1 ++ gv2), (a0 :: l2 = gv1 ++ gv1), (a0 :: l2 = []), (a0 :: gv2 = l2)
(a0 :: gv2 = gv2), (a0 :: gv2 = gv1), (a0 :: gv2 = merge l2 l2), (a0 :: gv2 = merge l2 gv2), (a0 :: gv2 = merge l2 gv1), (a0 :: gv2 = merge gv2 l2), (a0 :: gv2 = merge gv2 gv2), (a0 :: gv2 = merge gv2 gv1), (a0 :: gv2 = merge gv1 l2), (a0 :: gv2 = merge gv1 gv2)
(a0 :: gv2 = merge gv1 gv1), (a0 :: gv2 = l2 ++ l2), (a0 :: gv2 = l2 ++ gv2), (a0 :: gv2 = l2 ++ gv1), (a0 :: gv2 = gv2 ++ l2), (a0 :: gv2 = gv2 ++ gv2), (a0 :: gv2 = gv2 ++ gv1), (a0 :: gv2 = gv1 ++ l2), (a0 :: gv2 = gv1 ++ gv2), (a0 :: gv2 = gv1 ++ gv1)
(a0 :: gv2 = []), (a0 :: gv1 = l2), (a0 :: gv1 = gv2), (a0 :: gv1 = gv1), (a0 :: gv1 = merge l2 l2), (a0 :: gv1 = merge l2 gv2), (a0 :: gv1 = merge l2 gv1), (a0 :: gv1 = merge gv2 l2), (a0 :: gv1 = merge gv2 gv2), (a0 :: gv1 = merge gv2 gv1)
(a0 :: gv1 = merge gv1 l2), (a0 :: gv1 = merge gv1 gv2), (a0 :: gv1 = merge gv1 gv1), (a0 :: gv1 = l2 ++ l2), (a0 :: gv1 = l2 ++ gv2), (a0 :: gv1 = l2 ++ gv1), (a0 :: gv1 = gv2 ++ l2), (a0 :: gv1 = gv2 ++ gv2), (a0 :: gv1 = gv2 ++ gv1), (a0 :: gv1 = gv1 ++ l2)
(a0 :: gv1 = gv1 ++ gv2), (a0 :: gv1 = gv1 ++ gv1), (a0 :: gv1 = []), (a :: l2 = l2), (a :: l2 = gv2), (a :: l2 = gv1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 gv2), (a :: l2 = merge l2 gv1), (a :: l2 = merge gv2 l2)
(a :: l2 = merge gv2 gv2), (a :: l2 = merge gv2 gv1), (a :: l2 = merge gv1 l2), (a :: l2 = merge gv1 gv2), (a :: l2 = merge gv1 gv1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ gv2), (a :: l2 = l2 ++ gv1), (a :: l2 = gv2 ++ l2), (a :: l2 = gv2 ++ gv2)
(a :: l2 = gv2 ++ gv1), (a :: l2 = gv1 ++ l2), (a :: l2 = gv1 ++ gv2), (a :: l2 = gv1 ++ gv1), (a :: l2 = []), (a :: gv2 = l2), (a :: gv2 = gv2), (a :: gv2 = gv1), (a :: gv2 = merge l2 l2), (a :: gv2 = merge l2 gv2)
(a :: gv2 = merge l2 gv1), (a :: gv2 = merge gv2 l2), (a :: gv2 = merge gv2 gv2), (a :: gv2 = merge gv2 gv1), (a :: gv2 = merge gv1 l2), (a :: gv2 = merge gv1 gv2), (a :: gv2 = merge gv1 gv1), (a :: gv2 = l2 ++ l2), (a :: gv2 = l2 ++ gv2), (a :: gv2 = l2 ++ gv1)
(a :: gv2 = gv2 ++ l2), (a :: gv2 = gv2 ++ gv2), (a :: gv2 = gv2 ++ gv1), (a :: gv2 = gv1 ++ l2), (a :: gv2 = gv1 ++ gv2), (a :: gv2 = gv1 ++ gv1), (a :: gv2 = []), (a :: gv1 = l2), (a :: gv1 = gv2), (a :: gv1 = gv1)
(a :: gv1 = merge l2 l2), (a :: gv1 = merge l2 gv2), (a :: gv1 = merge l2 gv1), (a :: gv1 = merge gv2 l2), (a :: gv1 = merge gv2 gv2), (a :: gv1 = merge gv2 gv1), (a :: gv1 = merge gv1 l2), (a :: gv1 = merge gv1 gv2), (a :: gv1 = merge gv1 gv1), (a :: gv1 = l2 ++ l2)
(a :: gv1 = l2 ++ gv2), (a :: gv1 = l2 ++ gv1), (a :: gv1 = gv2 ++ l2), (a :: gv1 = gv2 ++ gv2), (a :: gv1 = gv2 ++ gv1), (a :: gv1 = gv1 ++ l2), (a :: gv1 = gv1 ++ gv2), (a :: gv1 = gv1 ++ gv1), (a :: gv1 = []), (merge l2 l2 = l2)
(merge l2 l2 = gv2), (merge l2 l2 = gv1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ gv1), (merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ gv2)
(merge l2 l2 = gv1 ++ gv1), (merge l2 gv2 = l2), (merge l2 gv2 = gv2), (merge l2 gv2 = gv1), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ gv1), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ gv1)
(merge l2 gv2 = gv1 ++ l2), (merge l2 gv2 = gv1 ++ gv2), (merge l2 gv2 = gv1 ++ gv1), (merge l2 gv1 = l2), (merge l2 gv1 = gv2), (merge l2 gv1 = gv1), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv2), (merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = gv2 ++ l2)
(merge l2 gv1 = gv2 ++ gv2), (merge l2 gv1 = gv2 ++ gv1), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ gv2), (merge l2 gv1 = gv1 ++ gv1), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = gv1), (merge gv2 l2 = l2 ++ l2), (merge gv2 l2 = l2 ++ gv2)
(merge gv2 l2 = l2 ++ gv1), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ gv1), (merge gv2 l2 = gv1 ++ l2), (merge gv2 l2 = gv1 ++ gv2), (merge gv2 l2 = gv1 ++ gv1), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = gv1)
(merge gv2 gv2 = l2 ++ l2), (merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ gv1), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ gv1), (merge gv2 gv2 = gv1 ++ l2), (merge gv2 gv2 = gv1 ++ gv2), (merge gv2 gv2 = gv1 ++ gv1), (merge gv2 gv1 = l2)
(merge gv2 gv1 = gv2), (merge gv2 gv1 = gv1), (merge gv2 gv1 = l2 ++ l2), (merge gv2 gv1 = l2 ++ gv2), (merge gv2 gv1 = l2 ++ gv1), (merge gv2 gv1 = gv2 ++ l2), (merge gv2 gv1 = gv2 ++ gv2), (merge gv2 gv1 = gv2 ++ gv1), (merge gv2 gv1 = gv1 ++ l2), (merge gv2 gv1 = gv1 ++ gv2)
(merge gv2 gv1 = gv1 ++ gv1), (merge gv1 l2 = l2), (merge gv1 l2 = gv2), (merge gv1 l2 = gv1), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = gv2 ++ l2), (merge gv1 l2 = gv2 ++ gv2), (merge gv1 l2 = gv2 ++ gv1)
(merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 gv2 = l2), (merge gv1 gv2 = gv2), (merge gv1 gv2 = gv1), (merge gv1 gv2 = l2 ++ l2), (merge gv1 gv2 = l2 ++ gv2), (merge gv1 gv2 = l2 ++ gv1), (merge gv1 gv2 = gv2 ++ l2)
(merge gv1 gv2 = gv2 ++ gv2), (merge gv1 gv2 = gv2 ++ gv1), (merge gv1 gv2 = gv1 ++ l2), (merge gv1 gv2 = gv1 ++ gv2), (merge gv1 gv2 = gv1 ++ gv1), (merge gv1 gv1 = l2), (merge gv1 gv1 = gv2), (merge gv1 gv1 = gv1), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv2)
(merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = gv2 ++ l2), (merge gv1 gv1 = gv2 ++ gv2), (merge gv1 gv1 = gv2 ++ gv1), (merge gv1 gv1 = gv1 ++ l2), (merge gv1 gv1 = gv1 ++ gv2), (merge gv1 gv1 = gv1 ++ gv1), (l2 ++ l2 = l2), (l2 ++ l2 = gv2), (l2 ++ l2 = gv1)
(l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = gv1), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv2), (l2 ++ gv1 = gv1), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = gv1), (gv2 ++ gv2 = l2)
(gv2 ++ gv2 = gv2), (gv2 ++ gv2 = gv1), (gv2 ++ gv1 = l2), (gv2 ++ gv1 = gv2), (gv2 ++ gv1 = gv1), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv2), (gv1 ++ l2 = gv1), (gv1 ++ gv2 = l2), (gv1 ++ gv2 = gv2)
(gv1 ++ gv2 = gv1), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv2), (gv1 ++ gv1 = gv1), ([] = l2), ([] = gv2), ([] = gv1), ([] = merge l2 l2), ([] = merge l2 gv2), ([] = merge l2 gv1)
([] = merge gv2 l2), ([] = merge gv2 gv2), ([] = merge gv2 gv1), ([] = merge gv1 l2), ([] = merge gv1 gv2), ([] = merge gv1 gv1), ([] = l2 ++ l2), ([] = l2 ++ gv2), ([] = l2 ++ gv1), ([] = gv2 ++ l2)
([] = gv2 ++ gv2), ([] = gv2 ++ gv1), ([] = gv1 ++ l2), ([] = gv1 ++ gv2), ([] = gv1 ++ gv1), (None = Some a0), (None = Some a), ((l2, l2) = split l2), ((l2, l2) = split gv2), ((l2, l2) = split gv1)
((l2, gv2) = split l2), ((l2, gv2) = split gv2), ((l2, gv2) = split gv1), ((l2, gv1) = split l2), ((l2, gv1) = split gv2), ((l2, gv1) = split gv1), ((gv2, l2) = split l2), ((gv2, l2) = split gv2), ((gv2, l2) = split gv1), ((gv2, gv2) = split l2)
((gv2, gv2) = split gv2), ((gv2, gv2) = split gv1), ((gv2, gv1) = split l2), ((gv2, gv1) = split gv2), ((gv2, gv1) = split gv1), ((gv1, l2) = split l2), ((gv1, l2) = split gv2), ((gv1, l2) = split gv1), ((gv1, gv2) = split l2), ((gv1, gv2) = split gv2)
((gv1, gv2) = split gv1), ((gv1, gv1) = split l2), ((gv1, gv1) = split gv2), ((gv1, gv1) = split gv1), (length l2 = a0), (length l2 = a), (length gv2 = a0), (length gv2 = a), (length gv1 = a0), (length gv1 = a)

Label: 6 (6)
(a0 <=* l2), (a0 <=* l1), (a0 <=* gv0), (n <=* l2), (n <=* l1), (n <=* gv0), (a <=* l2), (a <=* l1), (a <=* gv0), (sorted l2)
(sorted l1), (sorted gv0), (Permutation l2 l2), (Permutation l2 l1), (Permutation l2 gv0), (Permutation l1 l2), (Permutation l1 l1), (Permutation l1 gv0), (Permutation gv0 l2), (Permutation gv0 l1)
(Permutation gv0 gv0), (In a0 l2), (In a0 l1), (In a0 gv0), (In n l2), (In n l1), (In n gv0), (In a l2), (In a l1), (In a gv0)
(a0 < a0), (a0 < n), (a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0)
(a0 <= n), (a0 <= a), (n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (a0 = a0), (a0 = n)
(a0 = a), (n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (l2 = l2), (l2 = l1), (l2 = gv0)
(l1 = l2), (l1 = l1), (l1 = gv0), (gv0 = l2), (gv0 = l1), (gv0 = gv0), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a0 :: gv0), (a0 <=* n :: l2)
(a0 <=* n :: l1), (a0 <=* n :: gv0), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* a :: gv0), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l2 gv0), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1)
(a0 <=* merge l1 gv0), (a0 <=* merge gv0 l2), (a0 <=* merge gv0 l1), (a0 <=* merge gv0 gv0), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l2 ++ gv0), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* l1 ++ gv0)
(a0 <=* gv0 ++ l2), (a0 <=* gv0 ++ l1), (a0 <=* gv0 ++ gv0), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* a0 :: gv0), (n <=* n :: l2), (n <=* n :: l1), (n <=* n :: gv0)
(n <=* a :: l2), (n <=* a :: l1), (n <=* a :: gv0), (n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l2 gv0), (n <=* merge l1 l2), (n <=* merge l1 l1), (n <=* merge l1 gv0), (n <=* merge gv0 l2)
(n <=* merge gv0 l1), (n <=* merge gv0 gv0), (n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l2 ++ gv0), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* l1 ++ gv0), (n <=* gv0 ++ l2), (n <=* gv0 ++ l1)
(n <=* gv0 ++ gv0), (n <=* []), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a0 :: gv0), (a <=* n :: l2), (a <=* n :: l1), (a <=* n :: gv0), (a <=* a :: l2), (a <=* a :: l1)
(a <=* a :: gv0), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l2 gv0), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* merge l1 gv0), (a <=* merge gv0 l2), (a <=* merge gv0 l1), (a <=* merge gv0 gv0)
(a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l2 ++ gv0), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* l1 ++ gv0), (a <=* gv0 ++ l2), (a <=* gv0 ++ l1), (a <=* gv0 ++ gv0), (a <=* [])
(length l2 <=* l2), (length l2 <=* l1), (length l2 <=* gv0), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a0 :: gv0), (length l2 <=* n :: l2), (length l2 <=* n :: l1), (length l2 <=* n :: gv0), (length l2 <=* a :: l2)
(length l2 <=* a :: l1), (length l2 <=* a :: gv0), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1), (length l2 <=* merge l2 gv0), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* merge l1 gv0), (length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 l1)
(length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l2 ++ gv0), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1), (length l2 <=* l1 ++ gv0), (length l2 <=* gv0 ++ l2), (length l2 <=* gv0 ++ l1), (length l2 <=* gv0 ++ gv0)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* gv0), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* a0 :: gv0), (length l1 <=* n :: l2), (length l1 <=* n :: l1), (length l1 <=* n :: gv0)
(length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* a :: gv0), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l2 gv0), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* merge l1 gv0), (length l1 <=* merge gv0 l2)
(length l1 <=* merge gv0 l1), (length l1 <=* merge gv0 gv0), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l2 ++ gv0), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* l1 ++ gv0), (length l1 <=* gv0 ++ l2), (length l1 <=* gv0 ++ l1)
(length l1 <=* gv0 ++ gv0), (length l1 <=* []), (length gv0 <=* l2), (length gv0 <=* l1), (length gv0 <=* gv0), (length gv0 <=* a0 :: l2), (length gv0 <=* a0 :: l1), (length gv0 <=* a0 :: gv0), (length gv0 <=* n :: l2), (length gv0 <=* n :: l1)
(length gv0 <=* n :: gv0), (length gv0 <=* a :: l2), (length gv0 <=* a :: l1), (length gv0 <=* a :: gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 l1), (length gv0 <=* merge l2 gv0), (length gv0 <=* merge l1 l2), (length gv0 <=* merge l1 l1), (length gv0 <=* merge l1 gv0)
(length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 l1), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ l1), (length gv0 <=* l2 ++ gv0), (length gv0 <=* l1 ++ l2), (length gv0 <=* l1 ++ l1), (length gv0 <=* l1 ++ gv0), (length gv0 <=* gv0 ++ l2)
(length gv0 <=* gv0 ++ l1), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1)), (sorted (a0 :: gv0)), (sorted (n :: l2)), (sorted (n :: l1)), (sorted (n :: gv0)), (sorted (a :: l2))
(sorted (a :: l1)), (sorted (a :: gv0)), (sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l2 gv0)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (merge l1 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv0 l1))
(sorted (merge gv0 gv0)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l2 ++ gv0)), (sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted (l1 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ l1)), (sorted (gv0 ++ gv0))
(sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (a0 :: gv0)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (n :: gv0)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (a :: gv0))
(Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l2 gv0)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (merge l1 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 l1)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ l2))
(Permutation l2 (l2 ++ l1)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 (l1 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ l1)), (Permutation l2 (gv0 ++ gv0)), (Permutation l2 []), (Permutation l1 (a0 :: l2))
(Permutation l1 (a0 :: l1)), (Permutation l1 (a0 :: gv0)), (Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (n :: gv0)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (a :: gv0)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1))
(Permutation l1 (merge l2 gv0)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (merge l1 gv0)), (Permutation l1 (merge gv0 l2)), (Permutation l1 (merge gv0 l1)), (Permutation l1 (merge gv0 gv0)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l2 ++ gv0))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 (l1 ++ gv0)), (Permutation l1 (gv0 ++ l2)), (Permutation l1 (gv0 ++ l1)), (Permutation l1 (gv0 ++ gv0)), (Permutation l1 []), (Permutation gv0 (a0 :: l2)), (Permutation gv0 (a0 :: l1)), (Permutation gv0 (a0 :: gv0))
(Permutation gv0 (n :: l2)), (Permutation gv0 (n :: l1)), (Permutation gv0 (n :: gv0)), (Permutation gv0 (a :: l2)), (Permutation gv0 (a :: l1)), (Permutation gv0 (a :: gv0)), (Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 l1)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge l1 l2))
(Permutation gv0 (merge l1 l1)), (Permutation gv0 (merge l1 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 l1)), (Permutation gv0 (merge gv0 gv0)), (Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ l1)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (l1 ++ l2)), (Permutation gv0 (l1 ++ l1))
(Permutation gv0 (l1 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ l1)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) gv0), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a0 :: gv0))
(Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (n :: gv0)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1)), (Permutation (a0 :: l2) (a :: gv0)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l2 gv0)), (Permutation (a0 :: l2) (merge l1 l2))
(Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (merge l1 gv0)), (Permutation (a0 :: l2) (merge gv0 l2)), (Permutation (a0 :: l2) (merge gv0 l1)), (Permutation (a0 :: l2) (merge gv0 gv0)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l2 ++ gv0)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l2) (l1 ++ gv0)), (Permutation (a0 :: l2) (gv0 ++ l2)), (Permutation (a0 :: l2) (gv0 ++ l1)), (Permutation (a0 :: l2) (gv0 ++ gv0)), (Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) gv0), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a0 :: gv0))
(Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (n :: gv0)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (a :: gv0)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l2 gv0)), (Permutation (a0 :: l1) (merge l1 l2))
(Permutation (a0 :: l1) (merge l1 l1)), (Permutation (a0 :: l1) (merge l1 gv0)), (Permutation (a0 :: l1) (merge gv0 l2)), (Permutation (a0 :: l1) (merge gv0 l1)), (Permutation (a0 :: l1) (merge gv0 gv0)), (Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l2 ++ gv0)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1))
(Permutation (a0 :: l1) (l1 ++ gv0)), (Permutation (a0 :: l1) (gv0 ++ l2)), (Permutation (a0 :: l1) (gv0 ++ l1)), (Permutation (a0 :: l1) (gv0 ++ gv0)), (Permutation (a0 :: l1) []), (Permutation (a0 :: gv0) l2), (Permutation (a0 :: gv0) l1), (Permutation (a0 :: gv0) gv0), (Permutation (a0 :: gv0) (a0 :: l2)), (Permutation (a0 :: gv0) (a0 :: l1))
(Permutation (a0 :: gv0) (n :: l2)), (Permutation (a0 :: gv0) (n :: l1)), (Permutation (a0 :: gv0) (n :: gv0)), (Permutation (a0 :: gv0) (a :: l2)), (Permutation (a0 :: gv0) (a :: l1)), (Permutation (a0 :: gv0) (a :: gv0)), (Permutation (a0 :: gv0) (merge l2 l2)), (Permutation (a0 :: gv0) (merge l2 l1)), (Permutation (a0 :: gv0) (merge l2 gv0)), (Permutation (a0 :: gv0) (merge l1 l2))
(Permutation (a0 :: gv0) (merge l1 l1)), (Permutation (a0 :: gv0) (merge l1 gv0)), (Permutation (a0 :: gv0) (merge gv0 l2)), (Permutation (a0 :: gv0) (merge gv0 l1)), (Permutation (a0 :: gv0) (merge gv0 gv0)), (Permutation (a0 :: gv0) (l2 ++ l2)), (Permutation (a0 :: gv0) (l2 ++ l1)), (Permutation (a0 :: gv0) (l2 ++ gv0)), (Permutation (a0 :: gv0) (l1 ++ l2)), (Permutation (a0 :: gv0) (l1 ++ l1))
(Permutation (a0 :: gv0) (l1 ++ gv0)), (Permutation (a0 :: gv0) (gv0 ++ l2)), (Permutation (a0 :: gv0) (gv0 ++ l1)), (Permutation (a0 :: gv0) (gv0 ++ gv0)), (Permutation (a0 :: gv0) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) gv0), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: l1))
(Permutation (n :: l2) (a0 :: gv0)), (Permutation (n :: l2) (n :: l1)), (Permutation (n :: l2) (n :: gv0)), (Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (a :: gv0)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l2 gv0)), (Permutation (n :: l2) (merge l1 l2))
(Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (merge l1 gv0)), (Permutation (n :: l2) (merge gv0 l2)), (Permutation (n :: l2) (merge gv0 l1)), (Permutation (n :: l2) (merge gv0 gv0)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l2 ++ gv0)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1))
(Permutation (n :: l2) (l1 ++ gv0)), (Permutation (n :: l2) (gv0 ++ l2)), (Permutation (n :: l2) (gv0 ++ l1)), (Permutation (n :: l2) (gv0 ++ gv0)), (Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) gv0), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1))
(Permutation (n :: l1) (a0 :: gv0)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (n :: gv0)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (a :: gv0)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1)), (Permutation (n :: l1) (merge l2 gv0)), (Permutation (n :: l1) (merge l1 l2))
(Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (merge l1 gv0)), (Permutation (n :: l1) (merge gv0 l2)), (Permutation (n :: l1) (merge gv0 l1)), (Permutation (n :: l1) (merge gv0 gv0)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l2 ++ gv0)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1))
(Permutation (n :: l1) (l1 ++ gv0)), (Permutation (n :: l1) (gv0 ++ l2)), (Permutation (n :: l1) (gv0 ++ l1)), (Permutation (n :: l1) (gv0 ++ gv0)), (Permutation (n :: l1) []), (Permutation (n :: gv0) l2), (Permutation (n :: gv0) l1), (Permutation (n :: gv0) gv0), (Permutation (n :: gv0) (a0 :: l2)), (Permutation (n :: gv0) (a0 :: l1))
(Permutation (n :: gv0) (a0 :: gv0)), (Permutation (n :: gv0) (n :: l2)), (Permutation (n :: gv0) (n :: l1)), (Permutation (n :: gv0) (a :: l2)), (Permutation (n :: gv0) (a :: l1)), (Permutation (n :: gv0) (a :: gv0)), (Permutation (n :: gv0) (merge l2 l2)), (Permutation (n :: gv0) (merge l2 l1)), (Permutation (n :: gv0) (merge l2 gv0)), (Permutation (n :: gv0) (merge l1 l2))
(Permutation (n :: gv0) (merge l1 l1)), (Permutation (n :: gv0) (merge l1 gv0)), (Permutation (n :: gv0) (merge gv0 l2)), (Permutation (n :: gv0) (merge gv0 l1)), (Permutation (n :: gv0) (merge gv0 gv0)), (Permutation (n :: gv0) (l2 ++ l2)), (Permutation (n :: gv0) (l2 ++ l1)), (Permutation (n :: gv0) (l2 ++ gv0)), (Permutation (n :: gv0) (l1 ++ l2)), (Permutation (n :: gv0) (l1 ++ l1))
(Permutation (n :: gv0) (l1 ++ gv0)), (Permutation (n :: gv0) (gv0 ++ l2)), (Permutation (n :: gv0) (gv0 ++ l1)), (Permutation (n :: gv0) (gv0 ++ gv0)), (Permutation (n :: gv0) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) gv0), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1))
(Permutation (a :: l2) (a0 :: gv0)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (n :: gv0)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (a :: gv0)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l2 gv0)), (Permutation (a :: l2) (merge l1 l2))
(Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (merge l1 gv0)), (Permutation (a :: l2) (merge gv0 l2)), (Permutation (a :: l2) (merge gv0 l1)), (Permutation (a :: l2) (merge gv0 gv0)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (l2 ++ gv0)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1))
(Permutation (a :: l2) (l1 ++ gv0)), (Permutation (a :: l2) (gv0 ++ l2)), (Permutation (a :: l2) (gv0 ++ l1)), (Permutation (a :: l2) (gv0 ++ gv0)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) gv0), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1))
(Permutation (a :: l1) (a0 :: gv0)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (n :: gv0)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (a :: gv0)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l2 gv0)), (Permutation (a :: l1) (merge l1 l2))
(Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (merge l1 gv0)), (Permutation (a :: l1) (merge gv0 l2)), (Permutation (a :: l1) (merge gv0 l1)), (Permutation (a :: l1) (merge gv0 gv0)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l2 ++ gv0)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1))
(Permutation (a :: l1) (l1 ++ gv0)), (Permutation (a :: l1) (gv0 ++ l2)), (Permutation (a :: l1) (gv0 ++ l1)), (Permutation (a :: l1) (gv0 ++ gv0)), (Permutation (a :: l1) []), (Permutation (a :: gv0) l2), (Permutation (a :: gv0) l1), (Permutation (a :: gv0) gv0), (Permutation (a :: gv0) (a0 :: l2)), (Permutation (a :: gv0) (a0 :: l1))
(Permutation (a :: gv0) (a0 :: gv0)), (Permutation (a :: gv0) (n :: l2)), (Permutation (a :: gv0) (n :: l1)), (Permutation (a :: gv0) (n :: gv0)), (Permutation (a :: gv0) (a :: l2)), (Permutation (a :: gv0) (a :: l1)), (Permutation (a :: gv0) (merge l2 l2)), (Permutation (a :: gv0) (merge l2 l1)), (Permutation (a :: gv0) (merge l2 gv0)), (Permutation (a :: gv0) (merge l1 l2))
(Permutation (a :: gv0) (merge l1 l1)), (Permutation (a :: gv0) (merge l1 gv0)), (Permutation (a :: gv0) (merge gv0 l2)), (Permutation (a :: gv0) (merge gv0 l1)), (Permutation (a :: gv0) (merge gv0 gv0)), (Permutation (a :: gv0) (l2 ++ l2)), (Permutation (a :: gv0) (l2 ++ l1)), (Permutation (a :: gv0) (l2 ++ gv0)), (Permutation (a :: gv0) (l1 ++ l2)), (Permutation (a :: gv0) (l1 ++ l1))
(Permutation (a :: gv0) (l1 ++ gv0)), (Permutation (a :: gv0) (gv0 ++ l2)), (Permutation (a :: gv0) (gv0 ++ l1)), (Permutation (a :: gv0) (gv0 ++ gv0)), (Permutation (a :: gv0) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1))
(Permutation (merge l2 l2) (a0 :: gv0)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (n :: gv0)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (a :: gv0)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge l1 l2))
(Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (merge l1 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 l1)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1))
(Permutation (merge l2 l2) (l1 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ l1)), (Permutation (merge l2 l2) (gv0 ++ gv0)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) gv0), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1))
(Permutation (merge l2 l1) (a0 :: gv0)), (Permutation (merge l2 l1) (n :: l2)), (Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (n :: gv0)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (a :: gv0)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l2 gv0)), (Permutation (merge l2 l1) (merge l1 l2))
(Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (merge l1 gv0)), (Permutation (merge l2 l1) (merge gv0 l2)), (Permutation (merge l2 l1) (merge gv0 l1)), (Permutation (merge l2 l1) (merge gv0 gv0)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (l2 ++ gv0)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1))
(Permutation (merge l2 l1) (l1 ++ gv0)), (Permutation (merge l2 l1) (gv0 ++ l2)), (Permutation (merge l2 l1) (gv0 ++ l1)), (Permutation (merge l2 l1) (gv0 ++ gv0)), (Permutation (merge l2 l1) []), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) l1), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (a0 :: l2)), (Permutation (merge l2 gv0) (a0 :: l1))
(Permutation (merge l2 gv0) (a0 :: gv0)), (Permutation (merge l2 gv0) (n :: l2)), (Permutation (merge l2 gv0) (n :: l1)), (Permutation (merge l2 gv0) (n :: gv0)), (Permutation (merge l2 gv0) (a :: l2)), (Permutation (merge l2 gv0) (a :: l1)), (Permutation (merge l2 gv0) (a :: gv0)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 l1)), (Permutation (merge l2 gv0) (merge l1 l2))
(Permutation (merge l2 gv0) (merge l1 l1)), (Permutation (merge l2 gv0) (merge l1 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2)), (Permutation (merge l2 gv0) (merge gv0 l1)), (Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ l1)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (l1 ++ l2)), (Permutation (merge l2 gv0) (l1 ++ l1))
(Permutation (merge l2 gv0) (l1 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ l1)), (Permutation (merge l2 gv0) (gv0 ++ gv0)), (Permutation (merge l2 gv0) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) gv0), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1))
(Permutation (merge l1 l2) (a0 :: gv0)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (n :: gv0)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (a :: gv0)), (Permutation (merge l1 l2) (merge l2 l2)), (Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l2 gv0))
(Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (merge l1 gv0)), (Permutation (merge l1 l2) (merge gv0 l2)), (Permutation (merge l1 l2) (merge gv0 l1)), (Permutation (merge l1 l2) (merge gv0 gv0)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l2 ++ gv0)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1))
(Permutation (merge l1 l2) (l1 ++ gv0)), (Permutation (merge l1 l2) (gv0 ++ l2)), (Permutation (merge l1 l2) (gv0 ++ l1)), (Permutation (merge l1 l2) (gv0 ++ gv0)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) gv0), (Permutation (merge l1 l1) (a0 :: l2)), (Permutation (merge l1 l1) (a0 :: l1))
(Permutation (merge l1 l1) (a0 :: gv0)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (n :: gv0)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (a :: gv0)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l2 gv0))
(Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (merge l1 gv0)), (Permutation (merge l1 l1) (merge gv0 l2)), (Permutation (merge l1 l1) (merge gv0 l1)), (Permutation (merge l1 l1) (merge gv0 gv0)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l2 ++ gv0)), (Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1))
(Permutation (merge l1 l1) (l1 ++ gv0)), (Permutation (merge l1 l1) (gv0 ++ l2)), (Permutation (merge l1 l1) (gv0 ++ l1)), (Permutation (merge l1 l1) (gv0 ++ gv0)), (Permutation (merge l1 l1) []), (Permutation (merge l1 gv0) l2), (Permutation (merge l1 gv0) l1), (Permutation (merge l1 gv0) gv0), (Permutation (merge l1 gv0) (a0 :: l2)), (Permutation (merge l1 gv0) (a0 :: l1))
(Permutation (merge l1 gv0) (a0 :: gv0)), (Permutation (merge l1 gv0) (n :: l2)), (Permutation (merge l1 gv0) (n :: l1)), (Permutation (merge l1 gv0) (n :: gv0)), (Permutation (merge l1 gv0) (a :: l2)), (Permutation (merge l1 gv0) (a :: l1)), (Permutation (merge l1 gv0) (a :: gv0)), (Permutation (merge l1 gv0) (merge l2 l2)), (Permutation (merge l1 gv0) (merge l2 l1)), (Permutation (merge l1 gv0) (merge l2 gv0))
(Permutation (merge l1 gv0) (merge l1 l2)), (Permutation (merge l1 gv0) (merge l1 l1)), (Permutation (merge l1 gv0) (merge gv0 l2)), (Permutation (merge l1 gv0) (merge gv0 l1)), (Permutation (merge l1 gv0) (merge gv0 gv0)), (Permutation (merge l1 gv0) (l2 ++ l2)), (Permutation (merge l1 gv0) (l2 ++ l1)), (Permutation (merge l1 gv0) (l2 ++ gv0)), (Permutation (merge l1 gv0) (l1 ++ l2)), (Permutation (merge l1 gv0) (l1 ++ l1))
(Permutation (merge l1 gv0) (l1 ++ gv0)), (Permutation (merge l1 gv0) (gv0 ++ l2)), (Permutation (merge l1 gv0) (gv0 ++ l1)), (Permutation (merge l1 gv0) (gv0 ++ gv0)), (Permutation (merge l1 gv0) []), (Permutation (merge gv0 l2) l2), (Permutation (merge gv0 l2) l1), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (a0 :: l2)), (Permutation (merge gv0 l2) (a0 :: l1))
(Permutation (merge gv0 l2) (a0 :: gv0)), (Permutation (merge gv0 l2) (n :: l2)), (Permutation (merge gv0 l2) (n :: l1)), (Permutation (merge gv0 l2) (n :: gv0)), (Permutation (merge gv0 l2) (a :: l2)), (Permutation (merge gv0 l2) (a :: l1)), (Permutation (merge gv0 l2) (a :: gv0)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 l1)), (Permutation (merge gv0 l2) (merge l2 gv0))
(Permutation (merge gv0 l2) (merge l1 l2)), (Permutation (merge gv0 l2) (merge l1 l1)), (Permutation (merge gv0 l2) (merge l1 gv0)), (Permutation (merge gv0 l2) (merge gv0 l1)), (Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ l1)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (l1 ++ l2)), (Permutation (merge gv0 l2) (l1 ++ l1))
(Permutation (merge gv0 l2) (l1 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ l1)), (Permutation (merge gv0 l2) (gv0 ++ gv0)), (Permutation (merge gv0 l2) []), (Permutation (merge gv0 l1) l2), (Permutation (merge gv0 l1) l1), (Permutation (merge gv0 l1) gv0), (Permutation (merge gv0 l1) (a0 :: l2)), (Permutation (merge gv0 l1) (a0 :: l1))
(Permutation (merge gv0 l1) (a0 :: gv0)), (Permutation (merge gv0 l1) (n :: l2)), (Permutation (merge gv0 l1) (n :: l1)), (Permutation (merge gv0 l1) (n :: gv0)), (Permutation (merge gv0 l1) (a :: l2)), (Permutation (merge gv0 l1) (a :: l1)), (Permutation (merge gv0 l1) (a :: gv0)), (Permutation (merge gv0 l1) (merge l2 l2)), (Permutation (merge gv0 l1) (merge l2 l1)), (Permutation (merge gv0 l1) (merge l2 gv0))
(Permutation (merge gv0 l1) (merge l1 l2)), (Permutation (merge gv0 l1) (merge l1 l1)), (Permutation (merge gv0 l1) (merge l1 gv0)), (Permutation (merge gv0 l1) (merge gv0 l2)), (Permutation (merge gv0 l1) (merge gv0 gv0)), (Permutation (merge gv0 l1) (l2 ++ l2)), (Permutation (merge gv0 l1) (l2 ++ l1)), (Permutation (merge gv0 l1) (l2 ++ gv0)), (Permutation (merge gv0 l1) (l1 ++ l2)), (Permutation (merge gv0 l1) (l1 ++ l1))
(Permutation (merge gv0 l1) (l1 ++ gv0)), (Permutation (merge gv0 l1) (gv0 ++ l2)), (Permutation (merge gv0 l1) (gv0 ++ l1)), (Permutation (merge gv0 l1) (gv0 ++ gv0)), (Permutation (merge gv0 l1) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) l1), (Permutation (merge gv0 gv0) gv0), (Permutation (merge gv0 gv0) (a0 :: l2)), (Permutation (merge gv0 gv0) (a0 :: l1))
(Permutation (merge gv0 gv0) (a0 :: gv0)), (Permutation (merge gv0 gv0) (n :: l2)), (Permutation (merge gv0 gv0) (n :: l1)), (Permutation (merge gv0 gv0) (n :: gv0)), (Permutation (merge gv0 gv0) (a :: l2)), (Permutation (merge gv0 gv0) (a :: l1)), (Permutation (merge gv0 gv0) (a :: gv0)), (Permutation (merge gv0 gv0) (merge l2 l2)), (Permutation (merge gv0 gv0) (merge l2 l1)), (Permutation (merge gv0 gv0) (merge l2 gv0))
(Permutation (merge gv0 gv0) (merge l1 l2)), (Permutation (merge gv0 gv0) (merge l1 l1)), (Permutation (merge gv0 gv0) (merge l1 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 l1)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ l1)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (l1 ++ l2)), (Permutation (merge gv0 gv0) (l1 ++ l1))
(Permutation (merge gv0 gv0) (l1 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ l1)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1))
(Permutation (l2 ++ l2) (a0 :: gv0)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (n :: gv0)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (a :: gv0)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l2 gv0))
(Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (merge l1 gv0)), (Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 l1)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1))
(Permutation (l2 ++ l2) (l1 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ l1)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) gv0), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1))
(Permutation (l2 ++ l1) (a0 :: gv0)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (n :: gv0)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (a :: gv0)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l2 gv0))
(Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (merge l1 gv0)), (Permutation (l2 ++ l1) (merge gv0 l2)), (Permutation (l2 ++ l1) (merge gv0 l1)), (Permutation (l2 ++ l1) (merge gv0 gv0)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l2 ++ gv0)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1))
(Permutation (l2 ++ l1) (l1 ++ gv0)), (Permutation (l2 ++ l1) (gv0 ++ l2)), (Permutation (l2 ++ l1) (gv0 ++ l1)), (Permutation (l2 ++ l1) (gv0 ++ gv0)), (Permutation (l2 ++ l1) []), (Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) l1), (Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (a0 :: l2)), (Permutation (l2 ++ gv0) (a0 :: l1))
(Permutation (l2 ++ gv0) (a0 :: gv0)), (Permutation (l2 ++ gv0) (n :: l2)), (Permutation (l2 ++ gv0) (n :: l1)), (Permutation (l2 ++ gv0) (n :: gv0)), (Permutation (l2 ++ gv0) (a :: l2)), (Permutation (l2 ++ gv0) (a :: l1)), (Permutation (l2 ++ gv0) (a :: gv0)), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 l1)), (Permutation (l2 ++ gv0) (merge l2 gv0))
(Permutation (l2 ++ gv0) (merge l1 l2)), (Permutation (l2 ++ gv0) (merge l1 l1)), (Permutation (l2 ++ gv0) (merge l1 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 l1)), (Permutation (l2 ++ gv0) (merge gv0 gv0)), (Permutation (l2 ++ gv0) (l2 ++ l2)), (Permutation (l2 ++ gv0) (l2 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ l2)), (Permutation (l2 ++ gv0) (l1 ++ l1))
(Permutation (l2 ++ gv0) (l1 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ l1)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) gv0), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1))
(Permutation (l1 ++ l2) (a0 :: gv0)), (Permutation (l1 ++ l2) (n :: l2)), (Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (n :: gv0)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (a :: gv0)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l2 gv0))
(Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (merge l1 gv0)), (Permutation (l1 ++ l2) (merge gv0 l2)), (Permutation (l1 ++ l2) (merge gv0 l1)), (Permutation (l1 ++ l2) (merge gv0 gv0)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l2 ++ gv0)), (Permutation (l1 ++ l2) (l1 ++ l1))
(Permutation (l1 ++ l2) (l1 ++ gv0)), (Permutation (l1 ++ l2) (gv0 ++ l2)), (Permutation (l1 ++ l2) (gv0 ++ l1)), (Permutation (l1 ++ l2) (gv0 ++ gv0)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) gv0), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1))
(Permutation (l1 ++ l1) (a0 :: gv0)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (n :: gv0)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (a :: gv0)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l2 gv0))
(Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (merge l1 gv0)), (Permutation (l1 ++ l1) (merge gv0 l2)), (Permutation (l1 ++ l1) (merge gv0 l1)), (Permutation (l1 ++ l1) (merge gv0 gv0)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l2 ++ gv0)), (Permutation (l1 ++ l1) (l1 ++ l2))
(Permutation (l1 ++ l1) (l1 ++ gv0)), (Permutation (l1 ++ l1) (gv0 ++ l2)), (Permutation (l1 ++ l1) (gv0 ++ l1)), (Permutation (l1 ++ l1) (gv0 ++ gv0)), (Permutation (l1 ++ l1) []), (Permutation (l1 ++ gv0) l2), (Permutation (l1 ++ gv0) l1), (Permutation (l1 ++ gv0) gv0), (Permutation (l1 ++ gv0) (a0 :: l2)), (Permutation (l1 ++ gv0) (a0 :: l1))
(Permutation (l1 ++ gv0) (a0 :: gv0)), (Permutation (l1 ++ gv0) (n :: l2)), (Permutation (l1 ++ gv0) (n :: l1)), (Permutation (l1 ++ gv0) (n :: gv0)), (Permutation (l1 ++ gv0) (a :: l2)), (Permutation (l1 ++ gv0) (a :: l1)), (Permutation (l1 ++ gv0) (a :: gv0)), (Permutation (l1 ++ gv0) (merge l2 l2)), (Permutation (l1 ++ gv0) (merge l2 l1)), (Permutation (l1 ++ gv0) (merge l2 gv0))
(Permutation (l1 ++ gv0) (merge l1 l2)), (Permutation (l1 ++ gv0) (merge l1 l1)), (Permutation (l1 ++ gv0) (merge l1 gv0)), (Permutation (l1 ++ gv0) (merge gv0 l2)), (Permutation (l1 ++ gv0) (merge gv0 l1)), (Permutation (l1 ++ gv0) (merge gv0 gv0)), (Permutation (l1 ++ gv0) (l2 ++ l2)), (Permutation (l1 ++ gv0) (l2 ++ l1)), (Permutation (l1 ++ gv0) (l2 ++ gv0)), (Permutation (l1 ++ gv0) (l1 ++ l2))
(Permutation (l1 ++ gv0) (l1 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ l2)), (Permutation (l1 ++ gv0) (gv0 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ gv0)), (Permutation (l1 ++ gv0) []), (Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) l1), (Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (a0 :: l2)), (Permutation (gv0 ++ l2) (a0 :: l1))
(Permutation (gv0 ++ l2) (a0 :: gv0)), (Permutation (gv0 ++ l2) (n :: l2)), (Permutation (gv0 ++ l2) (n :: l1)), (Permutation (gv0 ++ l2) (n :: gv0)), (Permutation (gv0 ++ l2) (a :: l2)), (Permutation (gv0 ++ l2) (a :: l1)), (Permutation (gv0 ++ l2) (a :: gv0)), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 l1)), (Permutation (gv0 ++ l2) (merge l2 gv0))
(Permutation (gv0 ++ l2) (merge l1 l2)), (Permutation (gv0 ++ l2) (merge l1 l1)), (Permutation (gv0 ++ l2) (merge l1 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 l1)), (Permutation (gv0 ++ l2) (merge gv0 gv0)), (Permutation (gv0 ++ l2) (l2 ++ l2)), (Permutation (gv0 ++ l2) (l2 ++ l1)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (l1 ++ l2))
(Permutation (gv0 ++ l2) (l1 ++ l1)), (Permutation (gv0 ++ l2) (l1 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ l1)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ l1) l2), (Permutation (gv0 ++ l1) l1), (Permutation (gv0 ++ l1) gv0), (Permutation (gv0 ++ l1) (a0 :: l2)), (Permutation (gv0 ++ l1) (a0 :: l1))
(Permutation (gv0 ++ l1) (a0 :: gv0)), (Permutation (gv0 ++ l1) (n :: l2)), (Permutation (gv0 ++ l1) (n :: l1)), (Permutation (gv0 ++ l1) (n :: gv0)), (Permutation (gv0 ++ l1) (a :: l2)), (Permutation (gv0 ++ l1) (a :: l1)), (Permutation (gv0 ++ l1) (a :: gv0)), (Permutation (gv0 ++ l1) (merge l2 l2)), (Permutation (gv0 ++ l1) (merge l2 l1)), (Permutation (gv0 ++ l1) (merge l2 gv0))
(Permutation (gv0 ++ l1) (merge l1 l2)), (Permutation (gv0 ++ l1) (merge l1 l1)), (Permutation (gv0 ++ l1) (merge l1 gv0)), (Permutation (gv0 ++ l1) (merge gv0 l2)), (Permutation (gv0 ++ l1) (merge gv0 l1)), (Permutation (gv0 ++ l1) (merge gv0 gv0)), (Permutation (gv0 ++ l1) (l2 ++ l2)), (Permutation (gv0 ++ l1) (l2 ++ l1)), (Permutation (gv0 ++ l1) (l2 ++ gv0)), (Permutation (gv0 ++ l1) (l1 ++ l2))
(Permutation (gv0 ++ l1) (l1 ++ l1)), (Permutation (gv0 ++ l1) (l1 ++ gv0)), (Permutation (gv0 ++ l1) (gv0 ++ l2)), (Permutation (gv0 ++ l1) (gv0 ++ gv0)), (Permutation (gv0 ++ l1) []), (Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) l1), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (a0 :: l2)), (Permutation (gv0 ++ gv0) (a0 :: l1))
(Permutation (gv0 ++ gv0) (a0 :: gv0)), (Permutation (gv0 ++ gv0) (n :: l2)), (Permutation (gv0 ++ gv0) (n :: l1)), (Permutation (gv0 ++ gv0) (n :: gv0)), (Permutation (gv0 ++ gv0) (a :: l2)), (Permutation (gv0 ++ gv0) (a :: l1)), (Permutation (gv0 ++ gv0) (a :: gv0)), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 l1)), (Permutation (gv0 ++ gv0) (merge l2 gv0))
(Permutation (gv0 ++ gv0) (merge l1 l2)), (Permutation (gv0 ++ gv0) (merge l1 l1)), (Permutation (gv0 ++ gv0) (merge l1 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 l1)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ l1)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (l1 ++ l2))
(Permutation (gv0 ++ gv0) (l1 ++ l1)), (Permutation (gv0 ++ gv0) (l1 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l2)), (Permutation (gv0 ++ gv0) (gv0 ++ l1)), (Permutation (gv0 ++ gv0) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] gv0), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: l1))
(Permutation [] (a0 :: gv0)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (n :: gv0)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (a :: gv0)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l2 gv0))
(Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (merge l1 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 l1)), (Permutation [] (merge gv0 gv0)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l2 ++ gv0)), (Permutation [] (l1 ++ l2))
(Permutation [] (l1 ++ l1)), (Permutation [] (l1 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ l1)), (Permutation [] (gv0 ++ gv0)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a0 :: gv0)), (In a0 (n :: l2)), (In a0 (n :: l1))
(In a0 (n :: gv0)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (a :: gv0)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l2 gv0)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (merge l1 gv0))
(In a0 (merge gv0 l2)), (In a0 (merge gv0 l1)), (In a0 (merge gv0 gv0)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l2 ++ gv0)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a0 (l1 ++ gv0)), (In a0 (gv0 ++ l2))
(In a0 (gv0 ++ l1)), (In a0 (gv0 ++ gv0)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (a0 :: gv0)), (In n (n :: l2)), (In n (n :: l1)), (In n (n :: gv0)), (In n (a :: l2)), (In n (a :: l1))
(In n (a :: gv0)), (In n (merge l2 l2)), (In n (merge l2 l1)), (In n (merge l2 gv0)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (merge l1 gv0)), (In n (merge gv0 l2)), (In n (merge gv0 l1)), (In n (merge gv0 gv0))
(In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l2 ++ gv0)), (In n (l1 ++ l2)), (In n (l1 ++ l1)), (In n (l1 ++ gv0)), (In n (gv0 ++ l2)), (In n (gv0 ++ l1)), (In n (gv0 ++ gv0)), (In a (a0 :: l2))
(In a (a0 :: l1)), (In a (a0 :: gv0)), (In a (n :: l2)), (In a (n :: l1)), (In a (n :: gv0)), (In a (a :: l2)), (In a (a :: l1)), (In a (a :: gv0)), (In a (merge l2 l2)), (In a (merge l2 l1))
(In a (merge l2 gv0)), (In a (merge l1 l2)), (In a (merge l1 l1)), (In a (merge l1 gv0)), (In a (merge gv0 l2)), (In a (merge gv0 l1)), (In a (merge gv0 gv0)), (In a (l2 ++ l2)), (In a (l2 ++ l1)), (In a (l2 ++ gv0))
(In a (l1 ++ l2)), (In a (l1 ++ l1)), (In a (l1 ++ gv0)), (In a (gv0 ++ l2)), (In a (gv0 ++ l1)), (In a (gv0 ++ gv0)), (In (length l2) l2), (In (length l2) l1), (In (length l2) gv0), (In (length l2) (a0 :: l2))
(In (length l2) (a0 :: l1)), (In (length l2) (a0 :: gv0)), (In (length l2) (n :: l2)), (In (length l2) (n :: l1)), (In (length l2) (n :: gv0)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (a :: gv0)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1))
(In (length l2) (merge l2 gv0)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (merge l1 gv0)), (In (length l2) (merge gv0 l2)), (In (length l2) (merge gv0 l1)), (In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l2 ++ gv0))
(In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l2) (l1 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ l1)), (In (length l2) (gv0 ++ gv0)), (In (length l1) l2), (In (length l1) l1), (In (length l1) gv0), (In (length l1) (a0 :: l2))
(In (length l1) (a0 :: l1)), (In (length l1) (a0 :: gv0)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (n :: gv0)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (a :: gv0)), (In (length l1) (merge l2 l2)), (In (length l1) (merge l2 l1))
(In (length l1) (merge l2 gv0)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (merge l1 gv0)), (In (length l1) (merge gv0 l2)), (In (length l1) (merge gv0 l1)), (In (length l1) (merge gv0 gv0)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l2 ++ gv0))
(In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (In (length l1) (l1 ++ gv0)), (In (length l1) (gv0 ++ l2)), (In (length l1) (gv0 ++ l1)), (In (length l1) (gv0 ++ gv0)), (In (length gv0) l2), (In (length gv0) l1), (In (length gv0) gv0), (In (length gv0) (a0 :: l2))
(In (length gv0) (a0 :: l1)), (In (length gv0) (a0 :: gv0)), (In (length gv0) (n :: l2)), (In (length gv0) (n :: l1)), (In (length gv0) (n :: gv0)), (In (length gv0) (a :: l2)), (In (length gv0) (a :: l1)), (In (length gv0) (a :: gv0)), (In (length gv0) (merge l2 l2)), (In (length gv0) (merge l2 l1))
(In (length gv0) (merge l2 gv0)), (In (length gv0) (merge l1 l2)), (In (length gv0) (merge l1 l1)), (In (length gv0) (merge l1 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 l1)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ l1)), (In (length gv0) (l2 ++ gv0))
(In (length gv0) (l1 ++ l2)), (In (length gv0) (l1 ++ l1)), (In (length gv0) (l1 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ l1)), (In (length gv0) (gv0 ++ gv0)), (a0 < length l2), (a0 < length l1), (a0 < length gv0), (n < length l2)
(n < length l1), (n < length gv0), (a < length l2), (a < length l1), (a < length gv0), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length l1), (length l2 < length gv0)
(length l1 < a0), (length l1 < n), (length l1 < a), (length l1 < length l2), (length l1 < length gv0), (length gv0 < a0), (length gv0 < n), (length gv0 < a), (length gv0 < length l2), (length gv0 < length l1)
(a0 <= length l2), (a0 <= length l1), (a0 <= length gv0), (n <= length l2), (n <= length l1), (n <= length gv0), (a <= length l2), (a <= length l1), (a <= length gv0), (length l2 <= a0)
(length l2 <= n), (length l2 <= a), (length l2 <= length l1), (length l2 <= length gv0), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (length l1 <= length gv0), (length gv0 <= a0)
(length gv0 <= n), (length gv0 <= a), (length gv0 <= length l2), (length gv0 <= length l1), (~ a0 <=* l2), (~ a0 <=* l1), (~ a0 <=* gv0), (~ n <=* l2), (~ n <=* l1), (~ n <=* gv0)
(~ a <=* l2), (~ a <=* l1), (~ a <=* gv0), (~ sorted l2), (~ sorted l1), (~ sorted gv0), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l2 gv0), (~ Permutation l1 l2)
(~ Permutation l1 l1), (~ Permutation l1 gv0), (~ Permutation gv0 l2), (~ Permutation gv0 l1), (~ Permutation gv0 gv0), (~ In a0 l2), (~ In a0 l1), (~ In a0 gv0), (~ In n l2), (~ In n l1)
(~ In n gv0), (~ In a l2), (~ In a l1), (~ In a gv0), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a)
(~ a < a0), (~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0)
(~ a <= n), (~ a <= a), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n), (n <> a), (a <> a0), (a <> n)
(a <> a), (l2 <> l2), (l2 <> l1), (l2 <> gv0), (l1 <> l2), (l1 <> l1), (l1 <> gv0), (gv0 <> l2), (gv0 <> l1), (gv0 <> gv0)
(None = Some l2), (None = Some l1), (None = Some gv0), (a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = gv0), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1), (a0 :: l2 = merge l2 gv0), (a0 :: l2 = merge l1 l2)
(a0 :: l2 = merge l1 l1), (a0 :: l2 = merge l1 gv0), (a0 :: l2 = merge gv0 l2), (a0 :: l2 = merge gv0 l1), (a0 :: l2 = merge gv0 gv0), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l2 ++ gv0), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1)
(a0 :: l2 = l1 ++ gv0), (a0 :: l2 = gv0 ++ l2), (a0 :: l2 = gv0 ++ l1), (a0 :: l2 = gv0 ++ gv0), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = gv0), (a0 :: l1 = merge l2 l2), (a0 :: l1 = merge l2 l1)
(a0 :: l1 = merge l2 gv0), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = merge l1 gv0), (a0 :: l1 = merge gv0 l2), (a0 :: l1 = merge gv0 l1), (a0 :: l1 = merge gv0 gv0), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l2 ++ gv0)
(a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = l1 ++ gv0), (a0 :: l1 = gv0 ++ l2), (a0 :: l1 = gv0 ++ l1), (a0 :: l1 = gv0 ++ gv0), (a0 :: l1 = []), (a0 :: gv0 = l2), (a0 :: gv0 = l1), (a0 :: gv0 = gv0)
(a0 :: gv0 = merge l2 l2), (a0 :: gv0 = merge l2 l1), (a0 :: gv0 = merge l2 gv0), (a0 :: gv0 = merge l1 l2), (a0 :: gv0 = merge l1 l1), (a0 :: gv0 = merge l1 gv0), (a0 :: gv0 = merge gv0 l2), (a0 :: gv0 = merge gv0 l1), (a0 :: gv0 = merge gv0 gv0), (a0 :: gv0 = l2 ++ l2)
(a0 :: gv0 = l2 ++ l1), (a0 :: gv0 = l2 ++ gv0), (a0 :: gv0 = l1 ++ l2), (a0 :: gv0 = l1 ++ l1), (a0 :: gv0 = l1 ++ gv0), (a0 :: gv0 = gv0 ++ l2), (a0 :: gv0 = gv0 ++ l1), (a0 :: gv0 = gv0 ++ gv0), (a0 :: gv0 = []), (n :: l2 = l2)
(n :: l2 = l1), (n :: l2 = gv0), (n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l2 gv0), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = merge l1 gv0), (n :: l2 = merge gv0 l2), (n :: l2 = merge gv0 l1)
(n :: l2 = merge gv0 gv0), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1), (n :: l2 = l2 ++ gv0), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = l1 ++ gv0), (n :: l2 = gv0 ++ l2), (n :: l2 = gv0 ++ l1), (n :: l2 = gv0 ++ gv0)
(n :: l2 = []), (n :: l1 = l2), (n :: l1 = l1), (n :: l1 = gv0), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 l1), (n :: l1 = merge l2 gv0), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = merge l1 gv0)
(n :: l1 = merge gv0 l2), (n :: l1 = merge gv0 l1), (n :: l1 = merge gv0 gv0), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l2 ++ gv0), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ l1), (n :: l1 = l1 ++ gv0), (n :: l1 = gv0 ++ l2)
(n :: l1 = gv0 ++ l1), (n :: l1 = gv0 ++ gv0), (n :: l1 = []), (n :: gv0 = l2), (n :: gv0 = l1), (n :: gv0 = gv0), (n :: gv0 = merge l2 l2), (n :: gv0 = merge l2 l1), (n :: gv0 = merge l2 gv0), (n :: gv0 = merge l1 l2)
(n :: gv0 = merge l1 l1), (n :: gv0 = merge l1 gv0), (n :: gv0 = merge gv0 l2), (n :: gv0 = merge gv0 l1), (n :: gv0 = merge gv0 gv0), (n :: gv0 = l2 ++ l2), (n :: gv0 = l2 ++ l1), (n :: gv0 = l2 ++ gv0), (n :: gv0 = l1 ++ l2), (n :: gv0 = l1 ++ l1)
(n :: gv0 = l1 ++ gv0), (n :: gv0 = gv0 ++ l2), (n :: gv0 = gv0 ++ l1), (n :: gv0 = gv0 ++ gv0), (n :: gv0 = []), (a :: l2 = l2), (a :: l2 = l1), (a :: l2 = gv0), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1)
(a :: l2 = merge l2 gv0), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = merge l1 gv0), (a :: l2 = merge gv0 l2), (a :: l2 = merge gv0 l1), (a :: l2 = merge gv0 gv0), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l2 ++ gv0)
(a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1), (a :: l2 = l1 ++ gv0), (a :: l2 = gv0 ++ l2), (a :: l2 = gv0 ++ l1), (a :: l2 = gv0 ++ gv0), (a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = gv0)
(a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l2 gv0), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = merge l1 gv0), (a :: l1 = merge gv0 l2), (a :: l1 = merge gv0 l1), (a :: l1 = merge gv0 gv0), (a :: l1 = l2 ++ l2)
(a :: l1 = l2 ++ l1), (a :: l1 = l2 ++ gv0), (a :: l1 = l1 ++ l2), (a :: l1 = l1 ++ l1), (a :: l1 = l1 ++ gv0), (a :: l1 = gv0 ++ l2), (a :: l1 = gv0 ++ l1), (a :: l1 = gv0 ++ gv0), (a :: l1 = []), (a :: gv0 = l2)
(a :: gv0 = l1), (a :: gv0 = gv0), (a :: gv0 = merge l2 l2), (a :: gv0 = merge l2 l1), (a :: gv0 = merge l2 gv0), (a :: gv0 = merge l1 l2), (a :: gv0 = merge l1 l1), (a :: gv0 = merge l1 gv0), (a :: gv0 = merge gv0 l2), (a :: gv0 = merge gv0 l1)
(a :: gv0 = merge gv0 gv0), (a :: gv0 = l2 ++ l2), (a :: gv0 = l2 ++ l1), (a :: gv0 = l2 ++ gv0), (a :: gv0 = l1 ++ l2), (a :: gv0 = l1 ++ l1), (a :: gv0 = l1 ++ gv0), (a :: gv0 = gv0 ++ l2), (a :: gv0 = gv0 ++ l1), (a :: gv0 = gv0 ++ gv0)
(a :: gv0 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l2 = l1 ++ gv0)
(merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ l1), (merge l2 l2 = gv0 ++ gv0), (merge l2 l1 = l2), (merge l2 l1 = l1), (merge l2 l1 = gv0), (merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l2 ++ gv0), (merge l2 l1 = l1 ++ l2)
(merge l2 l1 = l1 ++ l1), (merge l2 l1 = l1 ++ gv0), (merge l2 l1 = gv0 ++ l2), (merge l2 l1 = gv0 ++ l1), (merge l2 l1 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = l1), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ l1)
(merge l2 gv0 = l2 ++ gv0), (merge l2 gv0 = l1 ++ l2), (merge l2 gv0 = l1 ++ l1), (merge l2 gv0 = l1 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ l1), (merge l2 gv0 = gv0 ++ gv0), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = gv0)
(merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l2 ++ gv0), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1), (merge l1 l2 = l1 ++ gv0), (merge l1 l2 = gv0 ++ l2), (merge l1 l2 = gv0 ++ l1), (merge l1 l2 = gv0 ++ gv0), (merge l1 l1 = l2)
(merge l1 l1 = l1), (merge l1 l1 = gv0), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l2 ++ gv0), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (merge l1 l1 = l1 ++ gv0), (merge l1 l1 = gv0 ++ l2), (merge l1 l1 = gv0 ++ l1)
(merge l1 l1 = gv0 ++ gv0), (merge l1 gv0 = l2), (merge l1 gv0 = l1), (merge l1 gv0 = gv0), (merge l1 gv0 = l2 ++ l2), (merge l1 gv0 = l2 ++ l1), (merge l1 gv0 = l2 ++ gv0), (merge l1 gv0 = l1 ++ l2), (merge l1 gv0 = l1 ++ l1), (merge l1 gv0 = l1 ++ gv0)
(merge l1 gv0 = gv0 ++ l2), (merge l1 gv0 = gv0 ++ l1), (merge l1 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = l1), (merge gv0 l2 = gv0), (merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ l1), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = l1 ++ l2)
(merge gv0 l2 = l1 ++ l1), (merge gv0 l2 = l1 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ l1), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 l1 = l2), (merge gv0 l1 = l1), (merge gv0 l1 = gv0), (merge gv0 l1 = l2 ++ l2), (merge gv0 l1 = l2 ++ l1)
(merge gv0 l1 = l2 ++ gv0), (merge gv0 l1 = l1 ++ l2), (merge gv0 l1 = l1 ++ l1), (merge gv0 l1 = l1 ++ gv0), (merge gv0 l1 = gv0 ++ l2), (merge gv0 l1 = gv0 ++ l1), (merge gv0 l1 = gv0 ++ gv0), (merge gv0 gv0 = l2), (merge gv0 gv0 = l1), (merge gv0 gv0 = gv0)
(merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ l1), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = l1 ++ l2), (merge gv0 gv0 = l1 ++ l1), (merge gv0 gv0 = l1 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ l1), (merge gv0 gv0 = gv0 ++ gv0), (l2 ++ l2 = l2)
(l2 ++ l2 = l1), (l2 ++ l2 = gv0), (l2 ++ l1 = l2), (l2 ++ l1 = l1), (l2 ++ l1 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = l1), (l2 ++ gv0 = gv0), (l1 ++ l2 = l2), (l1 ++ l2 = l1)
(l1 ++ l2 = gv0), (l1 ++ l1 = l2), (l1 ++ l1 = l1), (l1 ++ l1 = gv0), (l1 ++ gv0 = l2), (l1 ++ gv0 = l1), (l1 ++ gv0 = gv0), (gv0 ++ l2 = l2), (gv0 ++ l2 = l1), (gv0 ++ l2 = gv0)
(gv0 ++ l1 = l2), (gv0 ++ l1 = l1), (gv0 ++ l1 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = l1), (gv0 ++ gv0 = gv0), ([] = l2), ([] = l1), ([] = gv0), ([] = merge l2 l2)
([] = merge l2 l1), ([] = merge l2 gv0), ([] = merge l1 l2), ([] = merge l1 l1), ([] = merge l1 gv0), ([] = merge gv0 l2), ([] = merge gv0 l1), ([] = merge gv0 gv0), ([] = l2 ++ l2), ([] = l2 ++ l1)
([] = l2 ++ gv0), ([] = l1 ++ l2), ([] = l1 ++ l1), ([] = l1 ++ gv0), ([] = gv0 ++ l2), ([] = gv0 ++ l1), ([] = gv0 ++ gv0), (None = Some a0), (None = Some n), (None = Some a)
((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l2) = split gv0), ((l2, l1) = split l2), ((l2, l1) = split l1), ((l2, l1) = split gv0), ((l2, gv0) = split l2), ((l2, gv0) = split l1), ((l2, gv0) = split gv0), ((l1, l2) = split l2)
((l1, l2) = split l1), ((l1, l2) = split gv0), ((l1, l1) = split l2), ((l1, l1) = split l1), ((l1, l1) = split gv0), ((l1, gv0) = split l2), ((l1, gv0) = split l1), ((l1, gv0) = split gv0), ((gv0, l2) = split l2), ((gv0, l2) = split l1)
((gv0, l2) = split gv0), ((gv0, l1) = split l2), ((gv0, l1) = split l1), ((gv0, l1) = split gv0), ((gv0, gv0) = split l2), ((gv0, gv0) = split l1), ((gv0, gv0) = split gv0), (length l2 = a0), (length l2 = n), (length l2 = a)
(length l1 = a0), (length l1 = n), (length l1 = a), (length gv0 = a0), (length gv0 = n), (length gv0 = a)

Label: 7 (7)
(a0 <=* l2), (a0 <=* gv3), (a0 <=* l1), (n <=* l2), (n <=* gv3), (n <=* l1), (a <=* l2), (a <=* gv3), (a <=* l1), (sorted l2)
(sorted gv3), (sorted l1), (Permutation l2 l2), (Permutation l2 gv3), (Permutation l2 l1), (Permutation gv3 l2), (Permutation gv3 gv3), (Permutation gv3 l1), (Permutation l1 l2), (Permutation l1 gv3)
(Permutation l1 l1), (In a0 l2), (In a0 gv3), (In a0 l1), (In n l2), (In n gv3), (In n l1), (In a l2), (In a gv3), (In a l1)
(a0 < a0), (a0 < n), (a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0)
(a0 <= n), (a0 <= a), (n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (l2 = l2), (l2 = gv3)
(l2 = l1), (gv3 = l2), (gv3 = gv3), (gv3 = l1), (l1 = l2), (l1 = gv3), (l1 = l1), (a0 = a0), (a0 = n), (a0 = a)
(n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2), (a0 <=* a0 :: gv3), (a0 <=* a0 :: l1), (a0 <=* n :: l2)
(a0 <=* n :: gv3), (a0 <=* n :: l1), (a0 <=* a :: l2), (a0 <=* a :: gv3), (a0 <=* a :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 gv3), (a0 <=* merge l2 l1), (a0 <=* merge gv3 l2), (a0 <=* merge gv3 gv3)
(a0 <=* merge gv3 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 gv3), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ gv3), (a0 <=* l2 ++ l1), (a0 <=* gv3 ++ l2), (a0 <=* gv3 ++ gv3), (a0 <=* gv3 ++ l1)
(a0 <=* l1 ++ l2), (a0 <=* l1 ++ gv3), (a0 <=* l1 ++ l1), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: gv3), (n <=* a0 :: l1), (n <=* n :: l2), (n <=* n :: gv3), (n <=* n :: l1)
(n <=* a :: l2), (n <=* a :: gv3), (n <=* a :: l1), (n <=* merge l2 l2), (n <=* merge l2 gv3), (n <=* merge l2 l1), (n <=* merge gv3 l2), (n <=* merge gv3 gv3), (n <=* merge gv3 l1), (n <=* merge l1 l2)
(n <=* merge l1 gv3), (n <=* merge l1 l1), (n <=* l2 ++ l2), (n <=* l2 ++ gv3), (n <=* l2 ++ l1), (n <=* gv3 ++ l2), (n <=* gv3 ++ gv3), (n <=* gv3 ++ l1), (n <=* l1 ++ l2), (n <=* l1 ++ gv3)
(n <=* l1 ++ l1), (n <=* []), (a <=* a0 :: l2), (a <=* a0 :: gv3), (a <=* a0 :: l1), (a <=* n :: l2), (a <=* n :: gv3), (a <=* n :: l1), (a <=* a :: l2), (a <=* a :: gv3)
(a <=* a :: l1), (a <=* merge l2 l2), (a <=* merge l2 gv3), (a <=* merge l2 l1), (a <=* merge gv3 l2), (a <=* merge gv3 gv3), (a <=* merge gv3 l1), (a <=* merge l1 l2), (a <=* merge l1 gv3), (a <=* merge l1 l1)
(a <=* l2 ++ l2), (a <=* l2 ++ gv3), (a <=* l2 ++ l1), (a <=* gv3 ++ l2), (a <=* gv3 ++ gv3), (a <=* gv3 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ gv3), (a <=* l1 ++ l1), (a <=* [])
(length l2 <=* l2), (length l2 <=* gv3), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: gv3), (length l2 <=* a0 :: l1), (length l2 <=* n :: l2), (length l2 <=* n :: gv3), (length l2 <=* n :: l1), (length l2 <=* a :: l2)
(length l2 <=* a :: gv3), (length l2 <=* a :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 gv3), (length l2 <=* merge l2 l1), (length l2 <=* merge gv3 l2), (length l2 <=* merge gv3 gv3), (length l2 <=* merge gv3 l1), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 gv3)
(length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ gv3), (length l2 <=* l2 ++ l1), (length l2 <=* gv3 ++ l2), (length l2 <=* gv3 ++ gv3), (length l2 <=* gv3 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ gv3), (length l2 <=* l1 ++ l1)
(length l2 <=* []), (length gv3 <=* l2), (length gv3 <=* gv3), (length gv3 <=* l1), (length gv3 <=* a0 :: l2), (length gv3 <=* a0 :: gv3), (length gv3 <=* a0 :: l1), (length gv3 <=* n :: l2), (length gv3 <=* n :: gv3), (length gv3 <=* n :: l1)
(length gv3 <=* a :: l2), (length gv3 <=* a :: gv3), (length gv3 <=* a :: l1), (length gv3 <=* merge l2 l2), (length gv3 <=* merge l2 gv3), (length gv3 <=* merge l2 l1), (length gv3 <=* merge gv3 l2), (length gv3 <=* merge gv3 gv3), (length gv3 <=* merge gv3 l1), (length gv3 <=* merge l1 l2)
(length gv3 <=* merge l1 gv3), (length gv3 <=* merge l1 l1), (length gv3 <=* l2 ++ l2), (length gv3 <=* l2 ++ gv3), (length gv3 <=* l2 ++ l1), (length gv3 <=* gv3 ++ l2), (length gv3 <=* gv3 ++ gv3), (length gv3 <=* gv3 ++ l1), (length gv3 <=* l1 ++ l2), (length gv3 <=* l1 ++ gv3)
(length gv3 <=* l1 ++ l1), (length gv3 <=* []), (length l1 <=* l2), (length l1 <=* gv3), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: gv3), (length l1 <=* a0 :: l1), (length l1 <=* n :: l2), (length l1 <=* n :: gv3)
(length l1 <=* n :: l1), (length l1 <=* a :: l2), (length l1 <=* a :: gv3), (length l1 <=* a :: l1), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 gv3), (length l1 <=* merge l2 l1), (length l1 <=* merge gv3 l2), (length l1 <=* merge gv3 gv3), (length l1 <=* merge gv3 l1)
(length l1 <=* merge l1 l2), (length l1 <=* merge l1 gv3), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ gv3), (length l1 <=* l2 ++ l1), (length l1 <=* gv3 ++ l2), (length l1 <=* gv3 ++ gv3), (length l1 <=* gv3 ++ l1), (length l1 <=* l1 ++ l2)
(length l1 <=* l1 ++ gv3), (length l1 <=* l1 ++ l1), (length l1 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: gv3)), (sorted (a0 :: l1)), (sorted (n :: l2)), (sorted (n :: gv3)), (sorted (n :: l1)), (sorted (a :: l2))
(sorted (a :: gv3)), (sorted (a :: l1)), (sorted (merge l2 l2)), (sorted (merge l2 gv3)), (sorted (merge l2 l1)), (sorted (merge gv3 l2)), (sorted (merge gv3 gv3)), (sorted (merge gv3 l1)), (sorted (merge l1 l2)), (sorted (merge l1 gv3))
(sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ gv3)), (sorted (l2 ++ l1)), (sorted (gv3 ++ l2)), (sorted (gv3 ++ gv3)), (sorted (gv3 ++ l1)), (sorted (l1 ++ l2)), (sorted (l1 ++ gv3)), (sorted (l1 ++ l1))
(sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: gv3)), (Permutation l2 (a0 :: l1)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: gv3)), (Permutation l2 (n :: l1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: gv3)), (Permutation l2 (a :: l1))
(Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 gv3)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge gv3 l2)), (Permutation l2 (merge gv3 gv3)), (Permutation l2 (merge gv3 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 gv3)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2))
(Permutation l2 (l2 ++ gv3)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (gv3 ++ l2)), (Permutation l2 (gv3 ++ gv3)), (Permutation l2 (gv3 ++ l1)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ gv3)), (Permutation l2 (l1 ++ l1)), (Permutation l2 []), (Permutation gv3 (a0 :: l2))
(Permutation gv3 (a0 :: gv3)), (Permutation gv3 (a0 :: l1)), (Permutation gv3 (n :: l2)), (Permutation gv3 (n :: gv3)), (Permutation gv3 (n :: l1)), (Permutation gv3 (a :: l2)), (Permutation gv3 (a :: gv3)), (Permutation gv3 (a :: l1)), (Permutation gv3 (merge l2 l2)), (Permutation gv3 (merge l2 gv3))
(Permutation gv3 (merge l2 l1)), (Permutation gv3 (merge gv3 l2)), (Permutation gv3 (merge gv3 gv3)), (Permutation gv3 (merge gv3 l1)), (Permutation gv3 (merge l1 l2)), (Permutation gv3 (merge l1 gv3)), (Permutation gv3 (merge l1 l1)), (Permutation gv3 (l2 ++ l2)), (Permutation gv3 (l2 ++ gv3)), (Permutation gv3 (l2 ++ l1))
(Permutation gv3 (gv3 ++ l2)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ l1)), (Permutation gv3 (l1 ++ l2)), (Permutation gv3 (l1 ++ gv3)), (Permutation gv3 (l1 ++ l1)), (Permutation gv3 []), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: gv3)), (Permutation l1 (a0 :: l1))
(Permutation l1 (n :: l2)), (Permutation l1 (n :: gv3)), (Permutation l1 (n :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: gv3)), (Permutation l1 (a :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 gv3)), (Permutation l1 (merge l2 l1)), (Permutation l1 (merge gv3 l2))
(Permutation l1 (merge gv3 gv3)), (Permutation l1 (merge gv3 l1)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 gv3)), (Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ gv3)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (gv3 ++ l2)), (Permutation l1 (gv3 ++ gv3))
(Permutation l1 (gv3 ++ l1)), (Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ gv3)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) gv3), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: gv3)), (Permutation (a0 :: l2) (a0 :: l1))
(Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: gv3)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: gv3)), (Permutation (a0 :: l2) (a :: l1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 gv3)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge gv3 l2))
(Permutation (a0 :: l2) (merge gv3 gv3)), (Permutation (a0 :: l2) (merge gv3 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 gv3)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ gv3)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (gv3 ++ l2)), (Permutation (a0 :: l2) (gv3 ++ gv3))
(Permutation (a0 :: l2) (gv3 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ gv3)), (Permutation (a0 :: l2) (l1 ++ l1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: gv3) l2), (Permutation (a0 :: gv3) gv3), (Permutation (a0 :: gv3) l1), (Permutation (a0 :: gv3) (a0 :: l2)), (Permutation (a0 :: gv3) (a0 :: l1))
(Permutation (a0 :: gv3) (n :: l2)), (Permutation (a0 :: gv3) (n :: gv3)), (Permutation (a0 :: gv3) (n :: l1)), (Permutation (a0 :: gv3) (a :: l2)), (Permutation (a0 :: gv3) (a :: gv3)), (Permutation (a0 :: gv3) (a :: l1)), (Permutation (a0 :: gv3) (merge l2 l2)), (Permutation (a0 :: gv3) (merge l2 gv3)), (Permutation (a0 :: gv3) (merge l2 l1)), (Permutation (a0 :: gv3) (merge gv3 l2))
(Permutation (a0 :: gv3) (merge gv3 gv3)), (Permutation (a0 :: gv3) (merge gv3 l1)), (Permutation (a0 :: gv3) (merge l1 l2)), (Permutation (a0 :: gv3) (merge l1 gv3)), (Permutation (a0 :: gv3) (merge l1 l1)), (Permutation (a0 :: gv3) (l2 ++ l2)), (Permutation (a0 :: gv3) (l2 ++ gv3)), (Permutation (a0 :: gv3) (l2 ++ l1)), (Permutation (a0 :: gv3) (gv3 ++ l2)), (Permutation (a0 :: gv3) (gv3 ++ gv3))
(Permutation (a0 :: gv3) (gv3 ++ l1)), (Permutation (a0 :: gv3) (l1 ++ l2)), (Permutation (a0 :: gv3) (l1 ++ gv3)), (Permutation (a0 :: gv3) (l1 ++ l1)), (Permutation (a0 :: gv3) []), (Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) gv3), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a0 :: gv3))
(Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: gv3)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: gv3)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 gv3)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge gv3 l2))
(Permutation (a0 :: l1) (merge gv3 gv3)), (Permutation (a0 :: l1) (merge gv3 l1)), (Permutation (a0 :: l1) (merge l1 l2)), (Permutation (a0 :: l1) (merge l1 gv3)), (Permutation (a0 :: l1) (merge l1 l1)), (Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ gv3)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (gv3 ++ l2)), (Permutation (a0 :: l1) (gv3 ++ gv3))
(Permutation (a0 :: l1) (gv3 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ gv3)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) gv3), (Permutation (n :: l2) l1), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: gv3))
(Permutation (n :: l2) (a0 :: l1)), (Permutation (n :: l2) (n :: gv3)), (Permutation (n :: l2) (n :: l1)), (Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: gv3)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 gv3)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge gv3 l2))
(Permutation (n :: l2) (merge gv3 gv3)), (Permutation (n :: l2) (merge gv3 l1)), (Permutation (n :: l2) (merge l1 l2)), (Permutation (n :: l2) (merge l1 gv3)), (Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ gv3)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (gv3 ++ l2)), (Permutation (n :: l2) (gv3 ++ gv3))
(Permutation (n :: l2) (gv3 ++ l1)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ gv3)), (Permutation (n :: l2) (l1 ++ l1)), (Permutation (n :: l2) []), (Permutation (n :: gv3) l2), (Permutation (n :: gv3) gv3), (Permutation (n :: gv3) l1), (Permutation (n :: gv3) (a0 :: l2)), (Permutation (n :: gv3) (a0 :: gv3))
(Permutation (n :: gv3) (a0 :: l1)), (Permutation (n :: gv3) (n :: l2)), (Permutation (n :: gv3) (n :: l1)), (Permutation (n :: gv3) (a :: l2)), (Permutation (n :: gv3) (a :: gv3)), (Permutation (n :: gv3) (a :: l1)), (Permutation (n :: gv3) (merge l2 l2)), (Permutation (n :: gv3) (merge l2 gv3)), (Permutation (n :: gv3) (merge l2 l1)), (Permutation (n :: gv3) (merge gv3 l2))
(Permutation (n :: gv3) (merge gv3 gv3)), (Permutation (n :: gv3) (merge gv3 l1)), (Permutation (n :: gv3) (merge l1 l2)), (Permutation (n :: gv3) (merge l1 gv3)), (Permutation (n :: gv3) (merge l1 l1)), (Permutation (n :: gv3) (l2 ++ l2)), (Permutation (n :: gv3) (l2 ++ gv3)), (Permutation (n :: gv3) (l2 ++ l1)), (Permutation (n :: gv3) (gv3 ++ l2)), (Permutation (n :: gv3) (gv3 ++ gv3))
(Permutation (n :: gv3) (gv3 ++ l1)), (Permutation (n :: gv3) (l1 ++ l2)), (Permutation (n :: gv3) (l1 ++ gv3)), (Permutation (n :: gv3) (l1 ++ l1)), (Permutation (n :: gv3) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) gv3), (Permutation (n :: l1) l1), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: gv3))
(Permutation (n :: l1) (a0 :: l1)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (n :: gv3)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: gv3)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 gv3)), (Permutation (n :: l1) (merge l2 l1)), (Permutation (n :: l1) (merge gv3 l2))
(Permutation (n :: l1) (merge gv3 gv3)), (Permutation (n :: l1) (merge gv3 l1)), (Permutation (n :: l1) (merge l1 l2)), (Permutation (n :: l1) (merge l1 gv3)), (Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ gv3)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (gv3 ++ l2)), (Permutation (n :: l1) (gv3 ++ gv3))
(Permutation (n :: l1) (gv3 ++ l1)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ gv3)), (Permutation (n :: l1) (l1 ++ l1)), (Permutation (n :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) gv3), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: gv3))
(Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: gv3)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (a :: gv3)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 gv3)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge gv3 l2))
(Permutation (a :: l2) (merge gv3 gv3)), (Permutation (a :: l2) (merge gv3 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 gv3)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ gv3)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (gv3 ++ l2)), (Permutation (a :: l2) (gv3 ++ gv3))
(Permutation (a :: l2) (gv3 ++ l1)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ gv3)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) []), (Permutation (a :: gv3) l2), (Permutation (a :: gv3) gv3), (Permutation (a :: gv3) l1), (Permutation (a :: gv3) (a0 :: l2)), (Permutation (a :: gv3) (a0 :: gv3))
(Permutation (a :: gv3) (a0 :: l1)), (Permutation (a :: gv3) (n :: l2)), (Permutation (a :: gv3) (n :: gv3)), (Permutation (a :: gv3) (n :: l1)), (Permutation (a :: gv3) (a :: l2)), (Permutation (a :: gv3) (a :: l1)), (Permutation (a :: gv3) (merge l2 l2)), (Permutation (a :: gv3) (merge l2 gv3)), (Permutation (a :: gv3) (merge l2 l1)), (Permutation (a :: gv3) (merge gv3 l2))
(Permutation (a :: gv3) (merge gv3 gv3)), (Permutation (a :: gv3) (merge gv3 l1)), (Permutation (a :: gv3) (merge l1 l2)), (Permutation (a :: gv3) (merge l1 gv3)), (Permutation (a :: gv3) (merge l1 l1)), (Permutation (a :: gv3) (l2 ++ l2)), (Permutation (a :: gv3) (l2 ++ gv3)), (Permutation (a :: gv3) (l2 ++ l1)), (Permutation (a :: gv3) (gv3 ++ l2)), (Permutation (a :: gv3) (gv3 ++ gv3))
(Permutation (a :: gv3) (gv3 ++ l1)), (Permutation (a :: gv3) (l1 ++ l2)), (Permutation (a :: gv3) (l1 ++ gv3)), (Permutation (a :: gv3) (l1 ++ l1)), (Permutation (a :: gv3) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) gv3), (Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: gv3))
(Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: gv3)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (a :: gv3)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 gv3)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge gv3 l2))
(Permutation (a :: l1) (merge gv3 gv3)), (Permutation (a :: l1) (merge gv3 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 gv3)), (Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ gv3)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (gv3 ++ l2)), (Permutation (a :: l1) (gv3 ++ gv3))
(Permutation (a :: l1) (gv3 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ gv3)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) gv3), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: gv3))
(Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: gv3)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: gv3)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (merge l2 gv3)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge gv3 l2))
(Permutation (merge l2 l2) (merge gv3 gv3)), (Permutation (merge l2 l2) (merge gv3 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 gv3)), (Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ gv3)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (gv3 ++ l2)), (Permutation (merge l2 l2) (gv3 ++ gv3))
(Permutation (merge l2 l2) (gv3 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ gv3)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 gv3) l2), (Permutation (merge l2 gv3) gv3), (Permutation (merge l2 gv3) l1), (Permutation (merge l2 gv3) (a0 :: l2)), (Permutation (merge l2 gv3) (a0 :: gv3))
(Permutation (merge l2 gv3) (a0 :: l1)), (Permutation (merge l2 gv3) (n :: l2)), (Permutation (merge l2 gv3) (n :: gv3)), (Permutation (merge l2 gv3) (n :: l1)), (Permutation (merge l2 gv3) (a :: l2)), (Permutation (merge l2 gv3) (a :: gv3)), (Permutation (merge l2 gv3) (a :: l1)), (Permutation (merge l2 gv3) (merge l2 l2)), (Permutation (merge l2 gv3) (merge l2 l1)), (Permutation (merge l2 gv3) (merge gv3 l2))
(Permutation (merge l2 gv3) (merge gv3 gv3)), (Permutation (merge l2 gv3) (merge gv3 l1)), (Permutation (merge l2 gv3) (merge l1 l2)), (Permutation (merge l2 gv3) (merge l1 gv3)), (Permutation (merge l2 gv3) (merge l1 l1)), (Permutation (merge l2 gv3) (l2 ++ l2)), (Permutation (merge l2 gv3) (l2 ++ gv3)), (Permutation (merge l2 gv3) (l2 ++ l1)), (Permutation (merge l2 gv3) (gv3 ++ l2)), (Permutation (merge l2 gv3) (gv3 ++ gv3))
(Permutation (merge l2 gv3) (gv3 ++ l1)), (Permutation (merge l2 gv3) (l1 ++ l2)), (Permutation (merge l2 gv3) (l1 ++ gv3)), (Permutation (merge l2 gv3) (l1 ++ l1)), (Permutation (merge l2 gv3) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) gv3), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: gv3))
(Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (n :: l2)), (Permutation (merge l2 l1) (n :: gv3)), (Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: gv3)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l2 gv3)), (Permutation (merge l2 l1) (merge gv3 l2))
(Permutation (merge l2 l1) (merge gv3 gv3)), (Permutation (merge l2 l1) (merge gv3 l1)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 gv3)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ gv3)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (gv3 ++ l2)), (Permutation (merge l2 l1) (gv3 ++ gv3))
(Permutation (merge l2 l1) (gv3 ++ l1)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ gv3)), (Permutation (merge l2 l1) (l1 ++ l1)), (Permutation (merge l2 l1) []), (Permutation (merge gv3 l2) l2), (Permutation (merge gv3 l2) gv3), (Permutation (merge gv3 l2) l1), (Permutation (merge gv3 l2) (a0 :: l2)), (Permutation (merge gv3 l2) (a0 :: gv3))
(Permutation (merge gv3 l2) (a0 :: l1)), (Permutation (merge gv3 l2) (n :: l2)), (Permutation (merge gv3 l2) (n :: gv3)), (Permutation (merge gv3 l2) (n :: l1)), (Permutation (merge gv3 l2) (a :: l2)), (Permutation (merge gv3 l2) (a :: gv3)), (Permutation (merge gv3 l2) (a :: l1)), (Permutation (merge gv3 l2) (merge l2 l2)), (Permutation (merge gv3 l2) (merge l2 gv3)), (Permutation (merge gv3 l2) (merge l2 l1))
(Permutation (merge gv3 l2) (merge gv3 gv3)), (Permutation (merge gv3 l2) (merge gv3 l1)), (Permutation (merge gv3 l2) (merge l1 l2)), (Permutation (merge gv3 l2) (merge l1 gv3)), (Permutation (merge gv3 l2) (merge l1 l1)), (Permutation (merge gv3 l2) (l2 ++ l2)), (Permutation (merge gv3 l2) (l2 ++ gv3)), (Permutation (merge gv3 l2) (l2 ++ l1)), (Permutation (merge gv3 l2) (gv3 ++ l2)), (Permutation (merge gv3 l2) (gv3 ++ gv3))
(Permutation (merge gv3 l2) (gv3 ++ l1)), (Permutation (merge gv3 l2) (l1 ++ l2)), (Permutation (merge gv3 l2) (l1 ++ gv3)), (Permutation (merge gv3 l2) (l1 ++ l1)), (Permutation (merge gv3 l2) []), (Permutation (merge gv3 gv3) l2), (Permutation (merge gv3 gv3) gv3), (Permutation (merge gv3 gv3) l1), (Permutation (merge gv3 gv3) (a0 :: l2)), (Permutation (merge gv3 gv3) (a0 :: gv3))
(Permutation (merge gv3 gv3) (a0 :: l1)), (Permutation (merge gv3 gv3) (n :: l2)), (Permutation (merge gv3 gv3) (n :: gv3)), (Permutation (merge gv3 gv3) (n :: l1)), (Permutation (merge gv3 gv3) (a :: l2)), (Permutation (merge gv3 gv3) (a :: gv3)), (Permutation (merge gv3 gv3) (a :: l1)), (Permutation (merge gv3 gv3) (merge l2 l2)), (Permutation (merge gv3 gv3) (merge l2 gv3)), (Permutation (merge gv3 gv3) (merge l2 l1))
(Permutation (merge gv3 gv3) (merge gv3 l2)), (Permutation (merge gv3 gv3) (merge gv3 l1)), (Permutation (merge gv3 gv3) (merge l1 l2)), (Permutation (merge gv3 gv3) (merge l1 gv3)), (Permutation (merge gv3 gv3) (merge l1 l1)), (Permutation (merge gv3 gv3) (l2 ++ l2)), (Permutation (merge gv3 gv3) (l2 ++ gv3)), (Permutation (merge gv3 gv3) (l2 ++ l1)), (Permutation (merge gv3 gv3) (gv3 ++ l2)), (Permutation (merge gv3 gv3) (gv3 ++ gv3))
(Permutation (merge gv3 gv3) (gv3 ++ l1)), (Permutation (merge gv3 gv3) (l1 ++ l2)), (Permutation (merge gv3 gv3) (l1 ++ gv3)), (Permutation (merge gv3 gv3) (l1 ++ l1)), (Permutation (merge gv3 gv3) []), (Permutation (merge gv3 l1) l2), (Permutation (merge gv3 l1) gv3), (Permutation (merge gv3 l1) l1), (Permutation (merge gv3 l1) (a0 :: l2)), (Permutation (merge gv3 l1) (a0 :: gv3))
(Permutation (merge gv3 l1) (a0 :: l1)), (Permutation (merge gv3 l1) (n :: l2)), (Permutation (merge gv3 l1) (n :: gv3)), (Permutation (merge gv3 l1) (n :: l1)), (Permutation (merge gv3 l1) (a :: l2)), (Permutation (merge gv3 l1) (a :: gv3)), (Permutation (merge gv3 l1) (a :: l1)), (Permutation (merge gv3 l1) (merge l2 l2)), (Permutation (merge gv3 l1) (merge l2 gv3)), (Permutation (merge gv3 l1) (merge l2 l1))
(Permutation (merge gv3 l1) (merge gv3 l2)), (Permutation (merge gv3 l1) (merge gv3 gv3)), (Permutation (merge gv3 l1) (merge l1 l2)), (Permutation (merge gv3 l1) (merge l1 gv3)), (Permutation (merge gv3 l1) (merge l1 l1)), (Permutation (merge gv3 l1) (l2 ++ l2)), (Permutation (merge gv3 l1) (l2 ++ gv3)), (Permutation (merge gv3 l1) (l2 ++ l1)), (Permutation (merge gv3 l1) (gv3 ++ l2)), (Permutation (merge gv3 l1) (gv3 ++ gv3))
(Permutation (merge gv3 l1) (gv3 ++ l1)), (Permutation (merge gv3 l1) (l1 ++ l2)), (Permutation (merge gv3 l1) (l1 ++ gv3)), (Permutation (merge gv3 l1) (l1 ++ l1)), (Permutation (merge gv3 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) gv3), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: gv3))
(Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: gv3)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: gv3)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (merge l2 l2)), (Permutation (merge l1 l2) (merge l2 gv3)), (Permutation (merge l1 l2) (merge l2 l1))
(Permutation (merge l1 l2) (merge gv3 l2)), (Permutation (merge l1 l2) (merge gv3 gv3)), (Permutation (merge l1 l2) (merge gv3 l1)), (Permutation (merge l1 l2) (merge l1 gv3)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ gv3)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (gv3 ++ l2)), (Permutation (merge l1 l2) (gv3 ++ gv3))
(Permutation (merge l1 l2) (gv3 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ gv3)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 gv3) l2), (Permutation (merge l1 gv3) gv3), (Permutation (merge l1 gv3) l1), (Permutation (merge l1 gv3) (a0 :: l2)), (Permutation (merge l1 gv3) (a0 :: gv3))
(Permutation (merge l1 gv3) (a0 :: l1)), (Permutation (merge l1 gv3) (n :: l2)), (Permutation (merge l1 gv3) (n :: gv3)), (Permutation (merge l1 gv3) (n :: l1)), (Permutation (merge l1 gv3) (a :: l2)), (Permutation (merge l1 gv3) (a :: gv3)), (Permutation (merge l1 gv3) (a :: l1)), (Permutation (merge l1 gv3) (merge l2 l2)), (Permutation (merge l1 gv3) (merge l2 gv3)), (Permutation (merge l1 gv3) (merge l2 l1))
(Permutation (merge l1 gv3) (merge gv3 l2)), (Permutation (merge l1 gv3) (merge gv3 gv3)), (Permutation (merge l1 gv3) (merge gv3 l1)), (Permutation (merge l1 gv3) (merge l1 l2)), (Permutation (merge l1 gv3) (merge l1 l1)), (Permutation (merge l1 gv3) (l2 ++ l2)), (Permutation (merge l1 gv3) (l2 ++ gv3)), (Permutation (merge l1 gv3) (l2 ++ l1)), (Permutation (merge l1 gv3) (gv3 ++ l2)), (Permutation (merge l1 gv3) (gv3 ++ gv3))
(Permutation (merge l1 gv3) (gv3 ++ l1)), (Permutation (merge l1 gv3) (l1 ++ l2)), (Permutation (merge l1 gv3) (l1 ++ gv3)), (Permutation (merge l1 gv3) (l1 ++ l1)), (Permutation (merge l1 gv3) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) gv3), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2)), (Permutation (merge l1 l1) (a0 :: gv3))
(Permutation (merge l1 l1) (a0 :: l1)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: gv3)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: gv3)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 gv3)), (Permutation (merge l1 l1) (merge l2 l1))
(Permutation (merge l1 l1) (merge gv3 l2)), (Permutation (merge l1 l1) (merge gv3 gv3)), (Permutation (merge l1 l1) (merge gv3 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (merge l1 gv3)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ gv3)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (gv3 ++ l2)), (Permutation (merge l1 l1) (gv3 ++ gv3))
(Permutation (merge l1 l1) (gv3 ++ l1)), (Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ gv3)), (Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) gv3), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: gv3))
(Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: gv3)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: gv3)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 gv3)), (Permutation (l2 ++ l2) (merge l2 l1))
(Permutation (l2 ++ l2) (merge gv3 l2)), (Permutation (l2 ++ l2) (merge gv3 gv3)), (Permutation (l2 ++ l2) (merge gv3 l1)), (Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 gv3)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ gv3)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (gv3 ++ l2)), (Permutation (l2 ++ l2) (gv3 ++ gv3))
(Permutation (l2 ++ l2) (gv3 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ gv3)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ gv3) l2), (Permutation (l2 ++ gv3) gv3), (Permutation (l2 ++ gv3) l1), (Permutation (l2 ++ gv3) (a0 :: l2)), (Permutation (l2 ++ gv3) (a0 :: gv3))
(Permutation (l2 ++ gv3) (a0 :: l1)), (Permutation (l2 ++ gv3) (n :: l2)), (Permutation (l2 ++ gv3) (n :: gv3)), (Permutation (l2 ++ gv3) (n :: l1)), (Permutation (l2 ++ gv3) (a :: l2)), (Permutation (l2 ++ gv3) (a :: gv3)), (Permutation (l2 ++ gv3) (a :: l1)), (Permutation (l2 ++ gv3) (merge l2 l2)), (Permutation (l2 ++ gv3) (merge l2 gv3)), (Permutation (l2 ++ gv3) (merge l2 l1))
(Permutation (l2 ++ gv3) (merge gv3 l2)), (Permutation (l2 ++ gv3) (merge gv3 gv3)), (Permutation (l2 ++ gv3) (merge gv3 l1)), (Permutation (l2 ++ gv3) (merge l1 l2)), (Permutation (l2 ++ gv3) (merge l1 gv3)), (Permutation (l2 ++ gv3) (merge l1 l1)), (Permutation (l2 ++ gv3) (l2 ++ l2)), (Permutation (l2 ++ gv3) (l2 ++ l1)), (Permutation (l2 ++ gv3) (gv3 ++ l2)), (Permutation (l2 ++ gv3) (gv3 ++ gv3))
(Permutation (l2 ++ gv3) (gv3 ++ l1)), (Permutation (l2 ++ gv3) (l1 ++ l2)), (Permutation (l2 ++ gv3) (l1 ++ gv3)), (Permutation (l2 ++ gv3) (l1 ++ l1)), (Permutation (l2 ++ gv3) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) gv3), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: gv3))
(Permutation (l2 ++ l1) (a0 :: l1)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: gv3)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: gv3)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 gv3)), (Permutation (l2 ++ l1) (merge l2 l1))
(Permutation (l2 ++ l1) (merge gv3 l2)), (Permutation (l2 ++ l1) (merge gv3 gv3)), (Permutation (l2 ++ l1) (merge gv3 l1)), (Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 gv3)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l2 ++ gv3)), (Permutation (l2 ++ l1) (gv3 ++ l2)), (Permutation (l2 ++ l1) (gv3 ++ gv3))
(Permutation (l2 ++ l1) (gv3 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ gv3)), (Permutation (l2 ++ l1) (l1 ++ l1)), (Permutation (l2 ++ l1) []), (Permutation (gv3 ++ l2) l2), (Permutation (gv3 ++ l2) gv3), (Permutation (gv3 ++ l2) l1), (Permutation (gv3 ++ l2) (a0 :: l2)), (Permutation (gv3 ++ l2) (a0 :: gv3))
(Permutation (gv3 ++ l2) (a0 :: l1)), (Permutation (gv3 ++ l2) (n :: l2)), (Permutation (gv3 ++ l2) (n :: gv3)), (Permutation (gv3 ++ l2) (n :: l1)), (Permutation (gv3 ++ l2) (a :: l2)), (Permutation (gv3 ++ l2) (a :: gv3)), (Permutation (gv3 ++ l2) (a :: l1)), (Permutation (gv3 ++ l2) (merge l2 l2)), (Permutation (gv3 ++ l2) (merge l2 gv3)), (Permutation (gv3 ++ l2) (merge l2 l1))
(Permutation (gv3 ++ l2) (merge gv3 l2)), (Permutation (gv3 ++ l2) (merge gv3 gv3)), (Permutation (gv3 ++ l2) (merge gv3 l1)), (Permutation (gv3 ++ l2) (merge l1 l2)), (Permutation (gv3 ++ l2) (merge l1 gv3)), (Permutation (gv3 ++ l2) (merge l1 l1)), (Permutation (gv3 ++ l2) (l2 ++ l2)), (Permutation (gv3 ++ l2) (l2 ++ gv3)), (Permutation (gv3 ++ l2) (l2 ++ l1)), (Permutation (gv3 ++ l2) (gv3 ++ gv3))
(Permutation (gv3 ++ l2) (gv3 ++ l1)), (Permutation (gv3 ++ l2) (l1 ++ l2)), (Permutation (gv3 ++ l2) (l1 ++ gv3)), (Permutation (gv3 ++ l2) (l1 ++ l1)), (Permutation (gv3 ++ l2) []), (Permutation (gv3 ++ gv3) l2), (Permutation (gv3 ++ gv3) gv3), (Permutation (gv3 ++ gv3) l1), (Permutation (gv3 ++ gv3) (a0 :: l2)), (Permutation (gv3 ++ gv3) (a0 :: gv3))
(Permutation (gv3 ++ gv3) (a0 :: l1)), (Permutation (gv3 ++ gv3) (n :: l2)), (Permutation (gv3 ++ gv3) (n :: gv3)), (Permutation (gv3 ++ gv3) (n :: l1)), (Permutation (gv3 ++ gv3) (a :: l2)), (Permutation (gv3 ++ gv3) (a :: gv3)), (Permutation (gv3 ++ gv3) (a :: l1)), (Permutation (gv3 ++ gv3) (merge l2 l2)), (Permutation (gv3 ++ gv3) (merge l2 gv3)), (Permutation (gv3 ++ gv3) (merge l2 l1))
(Permutation (gv3 ++ gv3) (merge gv3 l2)), (Permutation (gv3 ++ gv3) (merge gv3 gv3)), (Permutation (gv3 ++ gv3) (merge gv3 l1)), (Permutation (gv3 ++ gv3) (merge l1 l2)), (Permutation (gv3 ++ gv3) (merge l1 gv3)), (Permutation (gv3 ++ gv3) (merge l1 l1)), (Permutation (gv3 ++ gv3) (l2 ++ l2)), (Permutation (gv3 ++ gv3) (l2 ++ gv3)), (Permutation (gv3 ++ gv3) (l2 ++ l1)), (Permutation (gv3 ++ gv3) (gv3 ++ l2))
(Permutation (gv3 ++ gv3) (gv3 ++ l1)), (Permutation (gv3 ++ gv3) (l1 ++ l2)), (Permutation (gv3 ++ gv3) (l1 ++ gv3)), (Permutation (gv3 ++ gv3) (l1 ++ l1)), (Permutation (gv3 ++ gv3) []), (Permutation (gv3 ++ l1) l2), (Permutation (gv3 ++ l1) gv3), (Permutation (gv3 ++ l1) l1), (Permutation (gv3 ++ l1) (a0 :: l2)), (Permutation (gv3 ++ l1) (a0 :: gv3))
(Permutation (gv3 ++ l1) (a0 :: l1)), (Permutation (gv3 ++ l1) (n :: l2)), (Permutation (gv3 ++ l1) (n :: gv3)), (Permutation (gv3 ++ l1) (n :: l1)), (Permutation (gv3 ++ l1) (a :: l2)), (Permutation (gv3 ++ l1) (a :: gv3)), (Permutation (gv3 ++ l1) (a :: l1)), (Permutation (gv3 ++ l1) (merge l2 l2)), (Permutation (gv3 ++ l1) (merge l2 gv3)), (Permutation (gv3 ++ l1) (merge l2 l1))
(Permutation (gv3 ++ l1) (merge gv3 l2)), (Permutation (gv3 ++ l1) (merge gv3 gv3)), (Permutation (gv3 ++ l1) (merge gv3 l1)), (Permutation (gv3 ++ l1) (merge l1 l2)), (Permutation (gv3 ++ l1) (merge l1 gv3)), (Permutation (gv3 ++ l1) (merge l1 l1)), (Permutation (gv3 ++ l1) (l2 ++ l2)), (Permutation (gv3 ++ l1) (l2 ++ gv3)), (Permutation (gv3 ++ l1) (l2 ++ l1)), (Permutation (gv3 ++ l1) (gv3 ++ l2))
(Permutation (gv3 ++ l1) (gv3 ++ gv3)), (Permutation (gv3 ++ l1) (l1 ++ l2)), (Permutation (gv3 ++ l1) (l1 ++ gv3)), (Permutation (gv3 ++ l1) (l1 ++ l1)), (Permutation (gv3 ++ l1) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) gv3), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: gv3))
(Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (n :: l2)), (Permutation (l1 ++ l2) (n :: gv3)), (Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: gv3)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 gv3)), (Permutation (l1 ++ l2) (merge l2 l1))
(Permutation (l1 ++ l2) (merge gv3 l2)), (Permutation (l1 ++ l2) (merge gv3 gv3)), (Permutation (l1 ++ l2) (merge gv3 l1)), (Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 gv3)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ gv3)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (gv3 ++ l2))
(Permutation (l1 ++ l2) (gv3 ++ gv3)), (Permutation (l1 ++ l2) (gv3 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv3)), (Permutation (l1 ++ l2) (l1 ++ l1)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ gv3) l2), (Permutation (l1 ++ gv3) gv3), (Permutation (l1 ++ gv3) l1), (Permutation (l1 ++ gv3) (a0 :: l2)), (Permutation (l1 ++ gv3) (a0 :: gv3))
(Permutation (l1 ++ gv3) (a0 :: l1)), (Permutation (l1 ++ gv3) (n :: l2)), (Permutation (l1 ++ gv3) (n :: gv3)), (Permutation (l1 ++ gv3) (n :: l1)), (Permutation (l1 ++ gv3) (a :: l2)), (Permutation (l1 ++ gv3) (a :: gv3)), (Permutation (l1 ++ gv3) (a :: l1)), (Permutation (l1 ++ gv3) (merge l2 l2)), (Permutation (l1 ++ gv3) (merge l2 gv3)), (Permutation (l1 ++ gv3) (merge l2 l1))
(Permutation (l1 ++ gv3) (merge gv3 l2)), (Permutation (l1 ++ gv3) (merge gv3 gv3)), (Permutation (l1 ++ gv3) (merge gv3 l1)), (Permutation (l1 ++ gv3) (merge l1 l2)), (Permutation (l1 ++ gv3) (merge l1 gv3)), (Permutation (l1 ++ gv3) (merge l1 l1)), (Permutation (l1 ++ gv3) (l2 ++ l2)), (Permutation (l1 ++ gv3) (l2 ++ gv3)), (Permutation (l1 ++ gv3) (l2 ++ l1)), (Permutation (l1 ++ gv3) (gv3 ++ l2))
(Permutation (l1 ++ gv3) (gv3 ++ gv3)), (Permutation (l1 ++ gv3) (gv3 ++ l1)), (Permutation (l1 ++ gv3) (l1 ++ l2)), (Permutation (l1 ++ gv3) (l1 ++ l1)), (Permutation (l1 ++ gv3) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) gv3), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: gv3))
(Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: gv3)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: gv3)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 gv3)), (Permutation (l1 ++ l1) (merge l2 l1))
(Permutation (l1 ++ l1) (merge gv3 l2)), (Permutation (l1 ++ l1) (merge gv3 gv3)), (Permutation (l1 ++ l1) (merge gv3 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 gv3)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ gv3)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (gv3 ++ l2))
(Permutation (l1 ++ l1) (gv3 ++ gv3)), (Permutation (l1 ++ l1) (gv3 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) (l1 ++ gv3)), (Permutation (l1 ++ l1) []), (Permutation [] l2), (Permutation [] gv3), (Permutation [] l1), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: gv3))
(Permutation [] (a0 :: l1)), (Permutation [] (n :: l2)), (Permutation [] (n :: gv3)), (Permutation [] (n :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: gv3)), (Permutation [] (a :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 gv3)), (Permutation [] (merge l2 l1))
(Permutation [] (merge gv3 l2)), (Permutation [] (merge gv3 gv3)), (Permutation [] (merge gv3 l1)), (Permutation [] (merge l1 l2)), (Permutation [] (merge l1 gv3)), (Permutation [] (merge l1 l1)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ gv3)), (Permutation [] (l2 ++ l1)), (Permutation [] (gv3 ++ l2))
(Permutation [] (gv3 ++ gv3)), (Permutation [] (gv3 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ gv3)), (Permutation [] (l1 ++ l1)), (In a0 (a0 :: l2)), (In a0 (a0 :: gv3)), (In a0 (a0 :: l1)), (In a0 (n :: l2)), (In a0 (n :: gv3))
(In a0 (n :: l1)), (In a0 (a :: l2)), (In a0 (a :: gv3)), (In a0 (a :: l1)), (In a0 (merge l2 l2)), (In a0 (merge l2 gv3)), (In a0 (merge l2 l1)), (In a0 (merge gv3 l2)), (In a0 (merge gv3 gv3)), (In a0 (merge gv3 l1))
(In a0 (merge l1 l2)), (In a0 (merge l1 gv3)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ gv3)), (In a0 (l2 ++ l1)), (In a0 (gv3 ++ l2)), (In a0 (gv3 ++ gv3)), (In a0 (gv3 ++ l1)), (In a0 (l1 ++ l2))
(In a0 (l1 ++ gv3)), (In a0 (l1 ++ l1)), (In n (a0 :: l2)), (In n (a0 :: gv3)), (In n (a0 :: l1)), (In n (n :: l2)), (In n (n :: gv3)), (In n (n :: l1)), (In n (a :: l2)), (In n (a :: gv3))
(In n (a :: l1)), (In n (merge l2 l2)), (In n (merge l2 gv3)), (In n (merge l2 l1)), (In n (merge gv3 l2)), (In n (merge gv3 gv3)), (In n (merge gv3 l1)), (In n (merge l1 l2)), (In n (merge l1 gv3)), (In n (merge l1 l1))
(In n (l2 ++ l2)), (In n (l2 ++ gv3)), (In n (l2 ++ l1)), (In n (gv3 ++ l2)), (In n (gv3 ++ gv3)), (In n (gv3 ++ l1)), (In n (l1 ++ l2)), (In n (l1 ++ gv3)), (In n (l1 ++ l1)), (In a (a0 :: l2))
(In a (a0 :: gv3)), (In a (a0 :: l1)), (In a (n :: l2)), (In a (n :: gv3)), (In a (n :: l1)), (In a (a :: l2)), (In a (a :: gv3)), (In a (a :: l1)), (In a (merge l2 l2)), (In a (merge l2 gv3))
(In a (merge l2 l1)), (In a (merge gv3 l2)), (In a (merge gv3 gv3)), (In a (merge gv3 l1)), (In a (merge l1 l2)), (In a (merge l1 gv3)), (In a (merge l1 l1)), (In a (l2 ++ l2)), (In a (l2 ++ gv3)), (In a (l2 ++ l1))
(In a (gv3 ++ l2)), (In a (gv3 ++ gv3)), (In a (gv3 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ gv3)), (In a (l1 ++ l1)), (In (length l2) l2), (In (length l2) gv3), (In (length l2) l1), (In (length l2) (a0 :: l2))
(In (length l2) (a0 :: gv3)), (In (length l2) (a0 :: l1)), (In (length l2) (n :: l2)), (In (length l2) (n :: gv3)), (In (length l2) (n :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: gv3)), (In (length l2) (a :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 gv3))
(In (length l2) (merge l2 l1)), (In (length l2) (merge gv3 l2)), (In (length l2) (merge gv3 gv3)), (In (length l2) (merge gv3 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 gv3)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ gv3)), (In (length l2) (l2 ++ l1))
(In (length l2) (gv3 ++ l2)), (In (length l2) (gv3 ++ gv3)), (In (length l2) (gv3 ++ l1)), (In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ gv3)), (In (length l2) (l1 ++ l1)), (In (length gv3) l2), (In (length gv3) gv3), (In (length gv3) l1), (In (length gv3) (a0 :: l2))
(In (length gv3) (a0 :: gv3)), (In (length gv3) (a0 :: l1)), (In (length gv3) (n :: l2)), (In (length gv3) (n :: gv3)), (In (length gv3) (n :: l1)), (In (length gv3) (a :: l2)), (In (length gv3) (a :: gv3)), (In (length gv3) (a :: l1)), (In (length gv3) (merge l2 l2)), (In (length gv3) (merge l2 gv3))
(In (length gv3) (merge l2 l1)), (In (length gv3) (merge gv3 l2)), (In (length gv3) (merge gv3 gv3)), (In (length gv3) (merge gv3 l1)), (In (length gv3) (merge l1 l2)), (In (length gv3) (merge l1 gv3)), (In (length gv3) (merge l1 l1)), (In (length gv3) (l2 ++ l2)), (In (length gv3) (l2 ++ gv3)), (In (length gv3) (l2 ++ l1))
(In (length gv3) (gv3 ++ l2)), (In (length gv3) (gv3 ++ gv3)), (In (length gv3) (gv3 ++ l1)), (In (length gv3) (l1 ++ l2)), (In (length gv3) (l1 ++ gv3)), (In (length gv3) (l1 ++ l1)), (In (length l1) l2), (In (length l1) gv3), (In (length l1) l1), (In (length l1) (a0 :: l2))
(In (length l1) (a0 :: gv3)), (In (length l1) (a0 :: l1)), (In (length l1) (n :: l2)), (In (length l1) (n :: gv3)), (In (length l1) (n :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: gv3)), (In (length l1) (a :: l1)), (In (length l1) (merge l2 l2)), (In (length l1) (merge l2 gv3))
(In (length l1) (merge l2 l1)), (In (length l1) (merge gv3 l2)), (In (length l1) (merge gv3 gv3)), (In (length l1) (merge gv3 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 gv3)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ gv3)), (In (length l1) (l2 ++ l1))
(In (length l1) (gv3 ++ l2)), (In (length l1) (gv3 ++ gv3)), (In (length l1) (gv3 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ gv3)), (In (length l1) (l1 ++ l1)), (a0 < length l2), (a0 < length gv3), (a0 < length l1), (n < length l2)
(n < length gv3), (n < length l1), (a < length l2), (a < length gv3), (a < length l1), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length gv3), (length l2 < length l1)
(length gv3 < a0), (length gv3 < n), (length gv3 < a), (length gv3 < length l2), (length gv3 < length l1), (length l1 < a0), (length l1 < n), (length l1 < a), (length l1 < length l2), (length l1 < length gv3)
(a0 <= length l2), (a0 <= length gv3), (a0 <= length l1), (n <= length l2), (n <= length gv3), (n <= length l1), (a <= length l2), (a <= length gv3), (a <= length l1), (length l2 <= a0)
(length l2 <= n), (length l2 <= a), (length l2 <= length gv3), (length l2 <= length l1), (length gv3 <= a0), (length gv3 <= n), (length gv3 <= a), (length gv3 <= length l2), (length gv3 <= length l1), (length l1 <= a0)
(length l1 <= n), (length l1 <= a), (length l1 <= length l2), (length l1 <= length gv3), (~ a0 <=* l2), (~ a0 <=* gv3), (~ a0 <=* l1), (~ n <=* l2), (~ n <=* gv3), (~ n <=* l1)
(~ a <=* l2), (~ a <=* gv3), (~ a <=* l1), (~ sorted l2), (~ sorted gv3), (~ sorted l1), (~ Permutation l2 l2), (~ Permutation l2 gv3), (~ Permutation l2 l1), (~ Permutation gv3 l2)
(~ Permutation gv3 gv3), (~ Permutation gv3 l1), (~ Permutation l1 l2), (~ Permutation l1 gv3), (~ Permutation l1 l1), (~ In a0 l2), (~ In a0 gv3), (~ In a0 l1), (~ In n l2), (~ In n gv3)
(~ In n l1), (~ In a l2), (~ In a gv3), (~ In a l1), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a)
(~ a < a0), (~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0)
(~ a <= n), (~ a <= a), (l2 <> l2), (l2 <> gv3), (l2 <> l1), (gv3 <> l2), (gv3 <> gv3), (gv3 <> l1), (l1 <> l2), (l1 <> gv3)
(l1 <> l1), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n), (n <> a), (a <> a0), (a <> n), (a <> a)
(None = Some l2), (None = Some gv3), (None = Some l1), (a0 :: l2 = l2), (a0 :: l2 = gv3), (a0 :: l2 = l1), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 gv3), (a0 :: l2 = merge l2 l1), (a0 :: l2 = merge gv3 l2)
(a0 :: l2 = merge gv3 gv3), (a0 :: l2 = merge gv3 l1), (a0 :: l2 = merge l1 l2), (a0 :: l2 = merge l1 gv3), (a0 :: l2 = merge l1 l1), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ gv3), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = gv3 ++ l2), (a0 :: l2 = gv3 ++ gv3)
(a0 :: l2 = gv3 ++ l1), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ gv3), (a0 :: l2 = l1 ++ l1), (a0 :: l2 = []), (a0 :: gv3 = l2), (a0 :: gv3 = gv3), (a0 :: gv3 = l1), (a0 :: gv3 = merge l2 l2), (a0 :: gv3 = merge l2 gv3)
(a0 :: gv3 = merge l2 l1), (a0 :: gv3 = merge gv3 l2), (a0 :: gv3 = merge gv3 gv3), (a0 :: gv3 = merge gv3 l1), (a0 :: gv3 = merge l1 l2), (a0 :: gv3 = merge l1 gv3), (a0 :: gv3 = merge l1 l1), (a0 :: gv3 = l2 ++ l2), (a0 :: gv3 = l2 ++ gv3), (a0 :: gv3 = l2 ++ l1)
(a0 :: gv3 = gv3 ++ l2), (a0 :: gv3 = gv3 ++ gv3), (a0 :: gv3 = gv3 ++ l1), (a0 :: gv3 = l1 ++ l2), (a0 :: gv3 = l1 ++ gv3), (a0 :: gv3 = l1 ++ l1), (a0 :: gv3 = []), (a0 :: l1 = l2), (a0 :: l1 = gv3), (a0 :: l1 = l1)
(a0 :: l1 = merge l2 l2), (a0 :: l1 = merge l2 gv3), (a0 :: l1 = merge l2 l1), (a0 :: l1 = merge gv3 l2), (a0 :: l1 = merge gv3 gv3), (a0 :: l1 = merge gv3 l1), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 gv3), (a0 :: l1 = merge l1 l1), (a0 :: l1 = l2 ++ l2)
(a0 :: l1 = l2 ++ gv3), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = gv3 ++ l2), (a0 :: l1 = gv3 ++ gv3), (a0 :: l1 = gv3 ++ l1), (a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ gv3), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = []), (n :: l2 = l2)
(n :: l2 = gv3), (n :: l2 = l1), (n :: l2 = merge l2 l2), (n :: l2 = merge l2 gv3), (n :: l2 = merge l2 l1), (n :: l2 = merge gv3 l2), (n :: l2 = merge gv3 gv3), (n :: l2 = merge gv3 l1), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 gv3)
(n :: l2 = merge l1 l1), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ gv3), (n :: l2 = l2 ++ l1), (n :: l2 = gv3 ++ l2), (n :: l2 = gv3 ++ gv3), (n :: l2 = gv3 ++ l1), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ gv3), (n :: l2 = l1 ++ l1)
(n :: l2 = []), (n :: gv3 = l2), (n :: gv3 = gv3), (n :: gv3 = l1), (n :: gv3 = merge l2 l2), (n :: gv3 = merge l2 gv3), (n :: gv3 = merge l2 l1), (n :: gv3 = merge gv3 l2), (n :: gv3 = merge gv3 gv3), (n :: gv3 = merge gv3 l1)
(n :: gv3 = merge l1 l2), (n :: gv3 = merge l1 gv3), (n :: gv3 = merge l1 l1), (n :: gv3 = l2 ++ l2), (n :: gv3 = l2 ++ gv3), (n :: gv3 = l2 ++ l1), (n :: gv3 = gv3 ++ l2), (n :: gv3 = gv3 ++ gv3), (n :: gv3 = gv3 ++ l1), (n :: gv3 = l1 ++ l2)
(n :: gv3 = l1 ++ gv3), (n :: gv3 = l1 ++ l1), (n :: gv3 = []), (n :: l1 = l2), (n :: l1 = gv3), (n :: l1 = l1), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 gv3), (n :: l1 = merge l2 l1), (n :: l1 = merge gv3 l2)
(n :: l1 = merge gv3 gv3), (n :: l1 = merge gv3 l1), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 gv3), (n :: l1 = merge l1 l1), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ gv3), (n :: l1 = l2 ++ l1), (n :: l1 = gv3 ++ l2), (n :: l1 = gv3 ++ gv3)
(n :: l1 = gv3 ++ l1), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ gv3), (n :: l1 = l1 ++ l1), (n :: l1 = []), (a :: l2 = l2), (a :: l2 = gv3), (a :: l2 = l1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 gv3)
(a :: l2 = merge l2 l1), (a :: l2 = merge gv3 l2), (a :: l2 = merge gv3 gv3), (a :: l2 = merge gv3 l1), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 gv3), (a :: l2 = merge l1 l1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ gv3), (a :: l2 = l2 ++ l1)
(a :: l2 = gv3 ++ l2), (a :: l2 = gv3 ++ gv3), (a :: l2 = gv3 ++ l1), (a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ gv3), (a :: l2 = l1 ++ l1), (a :: l2 = []), (a :: gv3 = l2), (a :: gv3 = gv3), (a :: gv3 = l1)
(a :: gv3 = merge l2 l2), (a :: gv3 = merge l2 gv3), (a :: gv3 = merge l2 l1), (a :: gv3 = merge gv3 l2), (a :: gv3 = merge gv3 gv3), (a :: gv3 = merge gv3 l1), (a :: gv3 = merge l1 l2), (a :: gv3 = merge l1 gv3), (a :: gv3 = merge l1 l1), (a :: gv3 = l2 ++ l2)
(a :: gv3 = l2 ++ gv3), (a :: gv3 = l2 ++ l1), (a :: gv3 = gv3 ++ l2), (a :: gv3 = gv3 ++ gv3), (a :: gv3 = gv3 ++ l1), (a :: gv3 = l1 ++ l2), (a :: gv3 = l1 ++ gv3), (a :: gv3 = l1 ++ l1), (a :: gv3 = []), (a :: l1 = l2)
(a :: l1 = gv3), (a :: l1 = l1), (a :: l1 = merge l2 l2), (a :: l1 = merge l2 gv3), (a :: l1 = merge l2 l1), (a :: l1 = merge gv3 l2), (a :: l1 = merge gv3 gv3), (a :: l1 = merge gv3 l1), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 gv3)
(a :: l1 = merge l1 l1), (a :: l1 = l2 ++ l2), (a :: l1 = l2 ++ gv3), (a :: l1 = l2 ++ l1), (a :: l1 = gv3 ++ l2), (a :: l1 = gv3 ++ gv3), (a :: l1 = gv3 ++ l1), (a :: l1 = l1 ++ l2), (a :: l1 = l1 ++ gv3), (a :: l1 = l1 ++ l1)
(a :: l1 = []), (merge l2 l2 = l2), (merge l2 l2 = gv3), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ gv3), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = gv3 ++ l2), (merge l2 l2 = gv3 ++ gv3), (merge l2 l2 = gv3 ++ l1)
(merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ gv3), (merge l2 l2 = l1 ++ l1), (merge l2 gv3 = l2), (merge l2 gv3 = gv3), (merge l2 gv3 = l1), (merge l2 gv3 = l2 ++ l2), (merge l2 gv3 = l2 ++ gv3), (merge l2 gv3 = l2 ++ l1), (merge l2 gv3 = gv3 ++ l2)
(merge l2 gv3 = gv3 ++ gv3), (merge l2 gv3 = gv3 ++ l1), (merge l2 gv3 = l1 ++ l2), (merge l2 gv3 = l1 ++ gv3), (merge l2 gv3 = l1 ++ l1), (merge l2 l1 = l2), (merge l2 l1 = gv3), (merge l2 l1 = l1), (merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ gv3)
(merge l2 l1 = l2 ++ l1), (merge l2 l1 = gv3 ++ l2), (merge l2 l1 = gv3 ++ gv3), (merge l2 l1 = gv3 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ gv3), (merge l2 l1 = l1 ++ l1), (merge gv3 l2 = l2), (merge gv3 l2 = gv3), (merge gv3 l2 = l1)
(merge gv3 l2 = l2 ++ l2), (merge gv3 l2 = l2 ++ gv3), (merge gv3 l2 = l2 ++ l1), (merge gv3 l2 = gv3 ++ l2), (merge gv3 l2 = gv3 ++ gv3), (merge gv3 l2 = gv3 ++ l1), (merge gv3 l2 = l1 ++ l2), (merge gv3 l2 = l1 ++ gv3), (merge gv3 l2 = l1 ++ l1), (merge gv3 gv3 = l2)
(merge gv3 gv3 = gv3), (merge gv3 gv3 = l1), (merge gv3 gv3 = l2 ++ l2), (merge gv3 gv3 = l2 ++ gv3), (merge gv3 gv3 = l2 ++ l1), (merge gv3 gv3 = gv3 ++ l2), (merge gv3 gv3 = gv3 ++ gv3), (merge gv3 gv3 = gv3 ++ l1), (merge gv3 gv3 = l1 ++ l2), (merge gv3 gv3 = l1 ++ gv3)
(merge gv3 gv3 = l1 ++ l1), (merge gv3 l1 = l2), (merge gv3 l1 = gv3), (merge gv3 l1 = l1), (merge gv3 l1 = l2 ++ l2), (merge gv3 l1 = l2 ++ gv3), (merge gv3 l1 = l2 ++ l1), (merge gv3 l1 = gv3 ++ l2), (merge gv3 l1 = gv3 ++ gv3), (merge gv3 l1 = gv3 ++ l1)
(merge gv3 l1 = l1 ++ l2), (merge gv3 l1 = l1 ++ gv3), (merge gv3 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = gv3), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ gv3), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = gv3 ++ l2)
(merge l1 l2 = gv3 ++ gv3), (merge l1 l2 = gv3 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ gv3), (merge l1 l2 = l1 ++ l1), (merge l1 gv3 = l2), (merge l1 gv3 = gv3), (merge l1 gv3 = l1), (merge l1 gv3 = l2 ++ l2), (merge l1 gv3 = l2 ++ gv3)
(merge l1 gv3 = l2 ++ l1), (merge l1 gv3 = gv3 ++ l2), (merge l1 gv3 = gv3 ++ gv3), (merge l1 gv3 = gv3 ++ l1), (merge l1 gv3 = l1 ++ l2), (merge l1 gv3 = l1 ++ gv3), (merge l1 gv3 = l1 ++ l1), (merge l1 l1 = l2), (merge l1 l1 = gv3), (merge l1 l1 = l1)
(merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ gv3), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = gv3 ++ l2), (merge l1 l1 = gv3 ++ gv3), (merge l1 l1 = gv3 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ gv3), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2)
(l2 ++ l2 = gv3), (l2 ++ l2 = l1), (l2 ++ gv3 = l2), (l2 ++ gv3 = gv3), (l2 ++ gv3 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = gv3), (l2 ++ l1 = l1), (gv3 ++ l2 = l2), (gv3 ++ l2 = gv3)
(gv3 ++ l2 = l1), (gv3 ++ gv3 = l2), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = l1), (gv3 ++ l1 = l2), (gv3 ++ l1 = gv3), (gv3 ++ l1 = l1), (l1 ++ l2 = l2), (l1 ++ l2 = gv3), (l1 ++ l2 = l1)
(l1 ++ gv3 = l2), (l1 ++ gv3 = gv3), (l1 ++ gv3 = l1), (l1 ++ l1 = l2), (l1 ++ l1 = gv3), (l1 ++ l1 = l1), ([] = l2), ([] = gv3), ([] = l1), ([] = merge l2 l2)
([] = merge l2 gv3), ([] = merge l2 l1), ([] = merge gv3 l2), ([] = merge gv3 gv3), ([] = merge gv3 l1), ([] = merge l1 l2), ([] = merge l1 gv3), ([] = merge l1 l1), ([] = l2 ++ l2), ([] = l2 ++ gv3)
([] = l2 ++ l1), ([] = gv3 ++ l2), ([] = gv3 ++ gv3), ([] = gv3 ++ l1), ([] = l1 ++ l2), ([] = l1 ++ gv3), ([] = l1 ++ l1), (None = Some a0), (None = Some n), (None = Some a)
((l2, l2) = split l2), ((l2, l2) = split gv3), ((l2, l2) = split l1), ((l2, gv3) = split l2), ((l2, gv3) = split gv3), ((l2, gv3) = split l1), ((l2, l1) = split l2), ((l2, l1) = split gv3), ((l2, l1) = split l1), ((gv3, l2) = split l2)
((gv3, l2) = split gv3), ((gv3, l2) = split l1), ((gv3, gv3) = split l2), ((gv3, gv3) = split gv3), ((gv3, gv3) = split l1), ((gv3, l1) = split l2), ((gv3, l1) = split gv3), ((gv3, l1) = split l1), ((l1, l2) = split l2), ((l1, l2) = split gv3)
((l1, l2) = split l1), ((l1, gv3) = split l2), ((l1, gv3) = split gv3), ((l1, gv3) = split l1), ((l1, l1) = split l2), ((l1, l1) = split gv3), ((l1, l1) = split l1), (length l2 = a0), (length l2 = n), (length l2 = a)
(length gv3 = a0), (length gv3 = n), (length gv3 = a), (length l1 = a0), (length l1 = n), (length l1 = a)

Label: 8 (8)
(a0 <=* l2), (a0 <=* l1), (a0 <=* gv1), (n <=* l2), (n <=* l1), (n <=* gv1), (a <=* l2), (a <=* l1), (a <=* gv1), (sorted l2)
(sorted l1), (sorted gv1), (Permutation l2 l2), (Permutation l2 l1), (Permutation l2 gv1), (Permutation l1 l2), (Permutation l1 l1), (Permutation l1 gv1), (Permutation gv1 l2), (Permutation gv1 l1)
(Permutation gv1 gv1), (In a0 l2), (In a0 l1), (In a0 gv1), (In n l2), (In n l1), (In n gv1), (In a l2), (In a l1), (In a gv1)
(a0 < a0), (a0 < n), (a0 < a), (n < a0), (n < n), (n < a), (a < a0), (a < n), (a < a), (a0 <= a0)
(a0 <= n), (a0 <= a), (n <= a0), (n <= n), (n <= a), (a <= a0), (a <= n), (a <= a), (l2 = l2), (l2 = l1)
(l2 = gv1), (l1 = l2), (l1 = l1), (l1 = gv1), (gv1 = l2), (gv1 = l1), (gv1 = gv1), (a0 = a0), (a0 = n), (a0 = a)
(n = a0), (n = n), (n = a), (a = a0), (a = n), (a = a), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a0 :: gv1), (a0 <=* n :: l2)
(a0 <=* n :: l1), (a0 <=* n :: gv1), (a0 <=* a :: l2), (a0 <=* a :: l1), (a0 <=* a :: gv1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l2 gv1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1)
(a0 <=* merge l1 gv1), (a0 <=* merge gv1 l2), (a0 <=* merge gv1 l1), (a0 <=* merge gv1 gv1), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l2 ++ gv1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* l1 ++ gv1)
(a0 <=* gv1 ++ l2), (a0 <=* gv1 ++ l1), (a0 <=* gv1 ++ gv1), (a0 <=* []), (n <=* a0 :: l2), (n <=* a0 :: l1), (n <=* a0 :: gv1), (n <=* n :: l2), (n <=* n :: l1), (n <=* n :: gv1)
(n <=* a :: l2), (n <=* a :: l1), (n <=* a :: gv1), (n <=* merge l2 l2), (n <=* merge l2 l1), (n <=* merge l2 gv1), (n <=* merge l1 l2), (n <=* merge l1 l1), (n <=* merge l1 gv1), (n <=* merge gv1 l2)
(n <=* merge gv1 l1), (n <=* merge gv1 gv1), (n <=* l2 ++ l2), (n <=* l2 ++ l1), (n <=* l2 ++ gv1), (n <=* l1 ++ l2), (n <=* l1 ++ l1), (n <=* l1 ++ gv1), (n <=* gv1 ++ l2), (n <=* gv1 ++ l1)
(n <=* gv1 ++ gv1), (n <=* []), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a0 :: gv1), (a <=* n :: l2), (a <=* n :: l1), (a <=* n :: gv1), (a <=* a :: l2), (a <=* a :: l1)
(a <=* a :: gv1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l2 gv1), (a <=* merge l1 l2), (a <=* merge l1 l1), (a <=* merge l1 gv1), (a <=* merge gv1 l2), (a <=* merge gv1 l1), (a <=* merge gv1 gv1)
(a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l2 ++ gv1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* l1 ++ gv1), (a <=* gv1 ++ l2), (a <=* gv1 ++ l1), (a <=* gv1 ++ gv1), (a <=* [])
(length l2 <=* l2), (length l2 <=* l1), (length l2 <=* gv1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a0 :: gv1), (length l2 <=* n :: l2), (length l2 <=* n :: l1), (length l2 <=* n :: gv1), (length l2 <=* a :: l2)
(length l2 <=* a :: l1), (length l2 <=* a :: gv1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1), (length l2 <=* merge l2 gv1), (length l2 <=* merge l1 l2), (length l2 <=* merge l1 l1), (length l2 <=* merge l1 gv1), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 l1)
(length l2 <=* merge gv1 gv1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l2 ++ gv1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1), (length l2 <=* l1 ++ gv1), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ l1), (length l2 <=* gv1 ++ gv1)
(length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* gv1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1), (length l1 <=* a0 :: gv1), (length l1 <=* n :: l2), (length l1 <=* n :: l1), (length l1 <=* n :: gv1)
(length l1 <=* a :: l2), (length l1 <=* a :: l1), (length l1 <=* a :: gv1), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l2 gv1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* merge l1 gv1), (length l1 <=* merge gv1 l2)
(length l1 <=* merge gv1 l1), (length l1 <=* merge gv1 gv1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l2 ++ gv1), (length l1 <=* l1 ++ l2), (length l1 <=* l1 ++ l1), (length l1 <=* l1 ++ gv1), (length l1 <=* gv1 ++ l2), (length l1 <=* gv1 ++ l1)
(length l1 <=* gv1 ++ gv1), (length l1 <=* []), (length gv1 <=* l2), (length gv1 <=* l1), (length gv1 <=* gv1), (length gv1 <=* a0 :: l2), (length gv1 <=* a0 :: l1), (length gv1 <=* a0 :: gv1), (length gv1 <=* n :: l2), (length gv1 <=* n :: l1)
(length gv1 <=* n :: gv1), (length gv1 <=* a :: l2), (length gv1 <=* a :: l1), (length gv1 <=* a :: gv1), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 l1), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge l1 l2), (length gv1 <=* merge l1 l1), (length gv1 <=* merge l1 gv1)
(length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 l1), (length gv1 <=* merge gv1 gv1), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ l1), (length gv1 <=* l2 ++ gv1), (length gv1 <=* l1 ++ l2), (length gv1 <=* l1 ++ l1), (length gv1 <=* l1 ++ gv1), (length gv1 <=* gv1 ++ l2)
(length gv1 <=* gv1 ++ l1), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* []), (sorted (a0 :: l2)), (sorted (a0 :: l1)), (sorted (a0 :: gv1)), (sorted (n :: l2)), (sorted (n :: l1)), (sorted (n :: gv1)), (sorted (a :: l2))
(sorted (a :: l1)), (sorted (a :: gv1)), (sorted (merge l2 l2)), (sorted (merge l2 l1)), (sorted (merge l2 gv1)), (sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (merge l1 gv1)), (sorted (merge gv1 l2)), (sorted (merge gv1 l1))
(sorted (merge gv1 gv1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l2 ++ gv1)), (sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted (l1 ++ gv1)), (sorted (gv1 ++ l2)), (sorted (gv1 ++ l1)), (sorted (gv1 ++ gv1))
(sorted []), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1)), (Permutation l2 (a0 :: gv1)), (Permutation l2 (n :: l2)), (Permutation l2 (n :: l1)), (Permutation l2 (n :: gv1)), (Permutation l2 (a :: l2)), (Permutation l2 (a :: l1)), (Permutation l2 (a :: gv1))
(Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (merge l1 gv1)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 l1)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (l2 ++ l2))
(Permutation l2 (l2 ++ l1)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (l1 ++ l2)), (Permutation l2 (l1 ++ l1)), (Permutation l2 (l1 ++ gv1)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ l1)), (Permutation l2 (gv1 ++ gv1)), (Permutation l2 []), (Permutation l1 (a0 :: l2))
(Permutation l1 (a0 :: l1)), (Permutation l1 (a0 :: gv1)), (Permutation l1 (n :: l2)), (Permutation l1 (n :: l1)), (Permutation l1 (n :: gv1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (a :: gv1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1))
(Permutation l1 (merge l2 gv1)), (Permutation l1 (merge l1 l2)), (Permutation l1 (merge l1 l1)), (Permutation l1 (merge l1 gv1)), (Permutation l1 (merge gv1 l2)), (Permutation l1 (merge gv1 l1)), (Permutation l1 (merge gv1 gv1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l2 ++ gv1))
(Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 (l1 ++ gv1)), (Permutation l1 (gv1 ++ l2)), (Permutation l1 (gv1 ++ l1)), (Permutation l1 (gv1 ++ gv1)), (Permutation l1 []), (Permutation gv1 (a0 :: l2)), (Permutation gv1 (a0 :: l1)), (Permutation gv1 (a0 :: gv1))
(Permutation gv1 (n :: l2)), (Permutation gv1 (n :: l1)), (Permutation gv1 (n :: gv1)), (Permutation gv1 (a :: l2)), (Permutation gv1 (a :: l1)), (Permutation gv1 (a :: gv1)), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 l1)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge l1 l2))
(Permutation gv1 (merge l1 l1)), (Permutation gv1 (merge l1 gv1)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 l1)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ l1)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (l1 ++ l2)), (Permutation gv1 (l1 ++ l1))
(Permutation gv1 (l1 ++ gv1)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ l1)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) gv1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a0 :: gv1))
(Permutation (a0 :: l2) (n :: l2)), (Permutation (a0 :: l2) (n :: l1)), (Permutation (a0 :: l2) (n :: gv1)), (Permutation (a0 :: l2) (a :: l2)), (Permutation (a0 :: l2) (a :: l1)), (Permutation (a0 :: l2) (a :: gv1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l2 gv1)), (Permutation (a0 :: l2) (merge l1 l2))
(Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (merge l1 gv1)), (Permutation (a0 :: l2) (merge gv1 l2)), (Permutation (a0 :: l2) (merge gv1 l1)), (Permutation (a0 :: l2) (merge gv1 gv1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l2 ++ gv1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l2) (l1 ++ gv1)), (Permutation (a0 :: l2) (gv1 ++ l2)), (Permutation (a0 :: l2) (gv1 ++ l1)), (Permutation (a0 :: l2) (gv1 ++ gv1)), (Permutation (a0 :: l2) []), (Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) gv1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a0 :: gv1))
(Permutation (a0 :: l1) (n :: l2)), (Permutation (a0 :: l1) (n :: l1)), (Permutation (a0 :: l1) (n :: gv1)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (a :: gv1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l2 gv1)), (Permutation (a0 :: l1) (merge l1 l2))
(Permutation (a0 :: l1) (merge l1 l1)), (Permutation (a0 :: l1) (merge l1 gv1)), (Permutation (a0 :: l1) (merge gv1 l2)), (Permutation (a0 :: l1) (merge gv1 l1)), (Permutation (a0 :: l1) (merge gv1 gv1)), (Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l2 ++ gv1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1))
(Permutation (a0 :: l1) (l1 ++ gv1)), (Permutation (a0 :: l1) (gv1 ++ l2)), (Permutation (a0 :: l1) (gv1 ++ l1)), (Permutation (a0 :: l1) (gv1 ++ gv1)), (Permutation (a0 :: l1) []), (Permutation (a0 :: gv1) l2), (Permutation (a0 :: gv1) l1), (Permutation (a0 :: gv1) gv1), (Permutation (a0 :: gv1) (a0 :: l2)), (Permutation (a0 :: gv1) (a0 :: l1))
(Permutation (a0 :: gv1) (n :: l2)), (Permutation (a0 :: gv1) (n :: l1)), (Permutation (a0 :: gv1) (n :: gv1)), (Permutation (a0 :: gv1) (a :: l2)), (Permutation (a0 :: gv1) (a :: l1)), (Permutation (a0 :: gv1) (a :: gv1)), (Permutation (a0 :: gv1) (merge l2 l2)), (Permutation (a0 :: gv1) (merge l2 l1)), (Permutation (a0 :: gv1) (merge l2 gv1)), (Permutation (a0 :: gv1) (merge l1 l2))
(Permutation (a0 :: gv1) (merge l1 l1)), (Permutation (a0 :: gv1) (merge l1 gv1)), (Permutation (a0 :: gv1) (merge gv1 l2)), (Permutation (a0 :: gv1) (merge gv1 l1)), (Permutation (a0 :: gv1) (merge gv1 gv1)), (Permutation (a0 :: gv1) (l2 ++ l2)), (Permutation (a0 :: gv1) (l2 ++ l1)), (Permutation (a0 :: gv1) (l2 ++ gv1)), (Permutation (a0 :: gv1) (l1 ++ l2)), (Permutation (a0 :: gv1) (l1 ++ l1))
(Permutation (a0 :: gv1) (l1 ++ gv1)), (Permutation (a0 :: gv1) (gv1 ++ l2)), (Permutation (a0 :: gv1) (gv1 ++ l1)), (Permutation (a0 :: gv1) (gv1 ++ gv1)), (Permutation (a0 :: gv1) []), (Permutation (n :: l2) l2), (Permutation (n :: l2) l1), (Permutation (n :: l2) gv1), (Permutation (n :: l2) (a0 :: l2)), (Permutation (n :: l2) (a0 :: l1))
(Permutation (n :: l2) (a0 :: gv1)), (Permutation (n :: l2) (n :: l1)), (Permutation (n :: l2) (n :: gv1)), (Permutation (n :: l2) (a :: l2)), (Permutation (n :: l2) (a :: l1)), (Permutation (n :: l2) (a :: gv1)), (Permutation (n :: l2) (merge l2 l2)), (Permutation (n :: l2) (merge l2 l1)), (Permutation (n :: l2) (merge l2 gv1)), (Permutation (n :: l2) (merge l1 l2))
(Permutation (n :: l2) (merge l1 l1)), (Permutation (n :: l2) (merge l1 gv1)), (Permutation (n :: l2) (merge gv1 l2)), (Permutation (n :: l2) (merge gv1 l1)), (Permutation (n :: l2) (merge gv1 gv1)), (Permutation (n :: l2) (l2 ++ l2)), (Permutation (n :: l2) (l2 ++ l1)), (Permutation (n :: l2) (l2 ++ gv1)), (Permutation (n :: l2) (l1 ++ l2)), (Permutation (n :: l2) (l1 ++ l1))
(Permutation (n :: l2) (l1 ++ gv1)), (Permutation (n :: l2) (gv1 ++ l2)), (Permutation (n :: l2) (gv1 ++ l1)), (Permutation (n :: l2) (gv1 ++ gv1)), (Permutation (n :: l2) []), (Permutation (n :: l1) l2), (Permutation (n :: l1) l1), (Permutation (n :: l1) gv1), (Permutation (n :: l1) (a0 :: l2)), (Permutation (n :: l1) (a0 :: l1))
(Permutation (n :: l1) (a0 :: gv1)), (Permutation (n :: l1) (n :: l2)), (Permutation (n :: l1) (n :: gv1)), (Permutation (n :: l1) (a :: l2)), (Permutation (n :: l1) (a :: l1)), (Permutation (n :: l1) (a :: gv1)), (Permutation (n :: l1) (merge l2 l2)), (Permutation (n :: l1) (merge l2 l1)), (Permutation (n :: l1) (merge l2 gv1)), (Permutation (n :: l1) (merge l1 l2))
(Permutation (n :: l1) (merge l1 l1)), (Permutation (n :: l1) (merge l1 gv1)), (Permutation (n :: l1) (merge gv1 l2)), (Permutation (n :: l1) (merge gv1 l1)), (Permutation (n :: l1) (merge gv1 gv1)), (Permutation (n :: l1) (l2 ++ l2)), (Permutation (n :: l1) (l2 ++ l1)), (Permutation (n :: l1) (l2 ++ gv1)), (Permutation (n :: l1) (l1 ++ l2)), (Permutation (n :: l1) (l1 ++ l1))
(Permutation (n :: l1) (l1 ++ gv1)), (Permutation (n :: l1) (gv1 ++ l2)), (Permutation (n :: l1) (gv1 ++ l1)), (Permutation (n :: l1) (gv1 ++ gv1)), (Permutation (n :: l1) []), (Permutation (n :: gv1) l2), (Permutation (n :: gv1) l1), (Permutation (n :: gv1) gv1), (Permutation (n :: gv1) (a0 :: l2)), (Permutation (n :: gv1) (a0 :: l1))
(Permutation (n :: gv1) (a0 :: gv1)), (Permutation (n :: gv1) (n :: l2)), (Permutation (n :: gv1) (n :: l1)), (Permutation (n :: gv1) (a :: l2)), (Permutation (n :: gv1) (a :: l1)), (Permutation (n :: gv1) (a :: gv1)), (Permutation (n :: gv1) (merge l2 l2)), (Permutation (n :: gv1) (merge l2 l1)), (Permutation (n :: gv1) (merge l2 gv1)), (Permutation (n :: gv1) (merge l1 l2))
(Permutation (n :: gv1) (merge l1 l1)), (Permutation (n :: gv1) (merge l1 gv1)), (Permutation (n :: gv1) (merge gv1 l2)), (Permutation (n :: gv1) (merge gv1 l1)), (Permutation (n :: gv1) (merge gv1 gv1)), (Permutation (n :: gv1) (l2 ++ l2)), (Permutation (n :: gv1) (l2 ++ l1)), (Permutation (n :: gv1) (l2 ++ gv1)), (Permutation (n :: gv1) (l1 ++ l2)), (Permutation (n :: gv1) (l1 ++ l1))
(Permutation (n :: gv1) (l1 ++ gv1)), (Permutation (n :: gv1) (gv1 ++ l2)), (Permutation (n :: gv1) (gv1 ++ l1)), (Permutation (n :: gv1) (gv1 ++ gv1)), (Permutation (n :: gv1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) gv1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1))
(Permutation (a :: l2) (a0 :: gv1)), (Permutation (a :: l2) (n :: l2)), (Permutation (a :: l2) (n :: l1)), (Permutation (a :: l2) (n :: gv1)), (Permutation (a :: l2) (a :: l1)), (Permutation (a :: l2) (a :: gv1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l2 gv1)), (Permutation (a :: l2) (merge l1 l2))
(Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (merge l1 gv1)), (Permutation (a :: l2) (merge gv1 l2)), (Permutation (a :: l2) (merge gv1 l1)), (Permutation (a :: l2) (merge gv1 gv1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (l2 ++ gv1)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1))
(Permutation (a :: l2) (l1 ++ gv1)), (Permutation (a :: l2) (gv1 ++ l2)), (Permutation (a :: l2) (gv1 ++ l1)), (Permutation (a :: l2) (gv1 ++ gv1)), (Permutation (a :: l2) []), (Permutation (a :: l1) l2), (Permutation (a :: l1) l1), (Permutation (a :: l1) gv1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1))
(Permutation (a :: l1) (a0 :: gv1)), (Permutation (a :: l1) (n :: l2)), (Permutation (a :: l1) (n :: l1)), (Permutation (a :: l1) (n :: gv1)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (a :: gv1)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l2 gv1)), (Permutation (a :: l1) (merge l1 l2))
(Permutation (a :: l1) (merge l1 l1)), (Permutation (a :: l1) (merge l1 gv1)), (Permutation (a :: l1) (merge gv1 l2)), (Permutation (a :: l1) (merge gv1 l1)), (Permutation (a :: l1) (merge gv1 gv1)), (Permutation (a :: l1) (l2 ++ l2)), (Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l2 ++ gv1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1))
(Permutation (a :: l1) (l1 ++ gv1)), (Permutation (a :: l1) (gv1 ++ l2)), (Permutation (a :: l1) (gv1 ++ l1)), (Permutation (a :: l1) (gv1 ++ gv1)), (Permutation (a :: l1) []), (Permutation (a :: gv1) l2), (Permutation (a :: gv1) l1), (Permutation (a :: gv1) gv1), (Permutation (a :: gv1) (a0 :: l2)), (Permutation (a :: gv1) (a0 :: l1))
(Permutation (a :: gv1) (a0 :: gv1)), (Permutation (a :: gv1) (n :: l2)), (Permutation (a :: gv1) (n :: l1)), (Permutation (a :: gv1) (n :: gv1)), (Permutation (a :: gv1) (a :: l2)), (Permutation (a :: gv1) (a :: l1)), (Permutation (a :: gv1) (merge l2 l2)), (Permutation (a :: gv1) (merge l2 l1)), (Permutation (a :: gv1) (merge l2 gv1)), (Permutation (a :: gv1) (merge l1 l2))
(Permutation (a :: gv1) (merge l1 l1)), (Permutation (a :: gv1) (merge l1 gv1)), (Permutation (a :: gv1) (merge gv1 l2)), (Permutation (a :: gv1) (merge gv1 l1)), (Permutation (a :: gv1) (merge gv1 gv1)), (Permutation (a :: gv1) (l2 ++ l2)), (Permutation (a :: gv1) (l2 ++ l1)), (Permutation (a :: gv1) (l2 ++ gv1)), (Permutation (a :: gv1) (l1 ++ l2)), (Permutation (a :: gv1) (l1 ++ l1))
(Permutation (a :: gv1) (l1 ++ gv1)), (Permutation (a :: gv1) (gv1 ++ l2)), (Permutation (a :: gv1) (gv1 ++ l1)), (Permutation (a :: gv1) (gv1 ++ gv1)), (Permutation (a :: gv1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1))
(Permutation (merge l2 l2) (a0 :: gv1)), (Permutation (merge l2 l2) (n :: l2)), (Permutation (merge l2 l2) (n :: l1)), (Permutation (merge l2 l2) (n :: gv1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (a :: gv1)), (Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge l1 l2))
(Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (merge l1 gv1)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 l1)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1))
(Permutation (merge l2 l2) (l1 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ l1)), (Permutation (merge l2 l2) (gv1 ++ gv1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1), (Permutation (merge l2 l1) gv1), (Permutation (merge l2 l1) (a0 :: l2)), (Permutation (merge l2 l1) (a0 :: l1))
(Permutation (merge l2 l1) (a0 :: gv1)), (Permutation (merge l2 l1) (n :: l2)), (Permutation (merge l2 l1) (n :: l1)), (Permutation (merge l2 l1) (n :: gv1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (a :: gv1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l2 gv1)), (Permutation (merge l2 l1) (merge l1 l2))
(Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (merge l1 gv1)), (Permutation (merge l2 l1) (merge gv1 l2)), (Permutation (merge l2 l1) (merge gv1 l1)), (Permutation (merge l2 l1) (merge gv1 gv1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1)), (Permutation (merge l2 l1) (l2 ++ gv1)), (Permutation (merge l2 l1) (l1 ++ l2)), (Permutation (merge l2 l1) (l1 ++ l1))
(Permutation (merge l2 l1) (l1 ++ gv1)), (Permutation (merge l2 l1) (gv1 ++ l2)), (Permutation (merge l2 l1) (gv1 ++ l1)), (Permutation (merge l2 l1) (gv1 ++ gv1)), (Permutation (merge l2 l1) []), (Permutation (merge l2 gv1) l2), (Permutation (merge l2 gv1) l1), (Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (a0 :: l2)), (Permutation (merge l2 gv1) (a0 :: l1))
(Permutation (merge l2 gv1) (a0 :: gv1)), (Permutation (merge l2 gv1) (n :: l2)), (Permutation (merge l2 gv1) (n :: l1)), (Permutation (merge l2 gv1) (n :: gv1)), (Permutation (merge l2 gv1) (a :: l2)), (Permutation (merge l2 gv1) (a :: l1)), (Permutation (merge l2 gv1) (a :: gv1)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge l2 l1)), (Permutation (merge l2 gv1) (merge l1 l2))
(Permutation (merge l2 gv1) (merge l1 l1)), (Permutation (merge l2 gv1) (merge l1 gv1)), (Permutation (merge l2 gv1) (merge gv1 l2)), (Permutation (merge l2 gv1) (merge gv1 l1)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ l1)), (Permutation (merge l2 gv1) (l2 ++ gv1)), (Permutation (merge l2 gv1) (l1 ++ l2)), (Permutation (merge l2 gv1) (l1 ++ l1))
(Permutation (merge l2 gv1) (l1 ++ gv1)), (Permutation (merge l2 gv1) (gv1 ++ l2)), (Permutation (merge l2 gv1) (gv1 ++ l1)), (Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) gv1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1))
(Permutation (merge l1 l2) (a0 :: gv1)), (Permutation (merge l1 l2) (n :: l2)), (Permutation (merge l1 l2) (n :: l1)), (Permutation (merge l1 l2) (n :: gv1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (a :: gv1)), (Permutation (merge l1 l2) (merge l2 l2)), (Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l2 gv1))
(Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (merge l1 gv1)), (Permutation (merge l1 l2) (merge gv1 l2)), (Permutation (merge l1 l2) (merge gv1 l1)), (Permutation (merge l1 l2) (merge gv1 gv1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l2 ++ gv1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1))
(Permutation (merge l1 l2) (l1 ++ gv1)), (Permutation (merge l1 l2) (gv1 ++ l2)), (Permutation (merge l1 l2) (gv1 ++ l1)), (Permutation (merge l1 l2) (gv1 ++ gv1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) gv1), (Permutation (merge l1 l1) (a0 :: l2)), (Permutation (merge l1 l1) (a0 :: l1))
(Permutation (merge l1 l1) (a0 :: gv1)), (Permutation (merge l1 l1) (n :: l2)), (Permutation (merge l1 l1) (n :: l1)), (Permutation (merge l1 l1) (n :: gv1)), (Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (a :: gv1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l2 gv1))
(Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (merge l1 gv1)), (Permutation (merge l1 l1) (merge gv1 l2)), (Permutation (merge l1 l1) (merge gv1 l1)), (Permutation (merge l1 l1) (merge gv1 gv1)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l2 ++ gv1)), (Permutation (merge l1 l1) (l1 ++ l2)), (Permutation (merge l1 l1) (l1 ++ l1))
(Permutation (merge l1 l1) (l1 ++ gv1)), (Permutation (merge l1 l1) (gv1 ++ l2)), (Permutation (merge l1 l1) (gv1 ++ l1)), (Permutation (merge l1 l1) (gv1 ++ gv1)), (Permutation (merge l1 l1) []), (Permutation (merge l1 gv1) l2), (Permutation (merge l1 gv1) l1), (Permutation (merge l1 gv1) gv1), (Permutation (merge l1 gv1) (a0 :: l2)), (Permutation (merge l1 gv1) (a0 :: l1))
(Permutation (merge l1 gv1) (a0 :: gv1)), (Permutation (merge l1 gv1) (n :: l2)), (Permutation (merge l1 gv1) (n :: l1)), (Permutation (merge l1 gv1) (n :: gv1)), (Permutation (merge l1 gv1) (a :: l2)), (Permutation (merge l1 gv1) (a :: l1)), (Permutation (merge l1 gv1) (a :: gv1)), (Permutation (merge l1 gv1) (merge l2 l2)), (Permutation (merge l1 gv1) (merge l2 l1)), (Permutation (merge l1 gv1) (merge l2 gv1))
(Permutation (merge l1 gv1) (merge l1 l2)), (Permutation (merge l1 gv1) (merge l1 l1)), (Permutation (merge l1 gv1) (merge gv1 l2)), (Permutation (merge l1 gv1) (merge gv1 l1)), (Permutation (merge l1 gv1) (merge gv1 gv1)), (Permutation (merge l1 gv1) (l2 ++ l2)), (Permutation (merge l1 gv1) (l2 ++ l1)), (Permutation (merge l1 gv1) (l2 ++ gv1)), (Permutation (merge l1 gv1) (l1 ++ l2)), (Permutation (merge l1 gv1) (l1 ++ l1))
(Permutation (merge l1 gv1) (l1 ++ gv1)), (Permutation (merge l1 gv1) (gv1 ++ l2)), (Permutation (merge l1 gv1) (gv1 ++ l1)), (Permutation (merge l1 gv1) (gv1 ++ gv1)), (Permutation (merge l1 gv1) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) l1), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (a0 :: l2)), (Permutation (merge gv1 l2) (a0 :: l1))
(Permutation (merge gv1 l2) (a0 :: gv1)), (Permutation (merge gv1 l2) (n :: l2)), (Permutation (merge gv1 l2) (n :: l1)), (Permutation (merge gv1 l2) (n :: gv1)), (Permutation (merge gv1 l2) (a :: l2)), (Permutation (merge gv1 l2) (a :: l1)), (Permutation (merge gv1 l2) (a :: gv1)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 l1)), (Permutation (merge gv1 l2) (merge l2 gv1))
(Permutation (merge gv1 l2) (merge l1 l2)), (Permutation (merge gv1 l2) (merge l1 l1)), (Permutation (merge gv1 l2) (merge l1 gv1)), (Permutation (merge gv1 l2) (merge gv1 l1)), (Permutation (merge gv1 l2) (merge gv1 gv1)), (Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ l1)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (l1 ++ l2)), (Permutation (merge gv1 l2) (l1 ++ l1))
(Permutation (merge gv1 l2) (l1 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ l1)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) []), (Permutation (merge gv1 l1) l2), (Permutation (merge gv1 l1) l1), (Permutation (merge gv1 l1) gv1), (Permutation (merge gv1 l1) (a0 :: l2)), (Permutation (merge gv1 l1) (a0 :: l1))
(Permutation (merge gv1 l1) (a0 :: gv1)), (Permutation (merge gv1 l1) (n :: l2)), (Permutation (merge gv1 l1) (n :: l1)), (Permutation (merge gv1 l1) (n :: gv1)), (Permutation (merge gv1 l1) (a :: l2)), (Permutation (merge gv1 l1) (a :: l1)), (Permutation (merge gv1 l1) (a :: gv1)), (Permutation (merge gv1 l1) (merge l2 l2)), (Permutation (merge gv1 l1) (merge l2 l1)), (Permutation (merge gv1 l1) (merge l2 gv1))
(Permutation (merge gv1 l1) (merge l1 l2)), (Permutation (merge gv1 l1) (merge l1 l1)), (Permutation (merge gv1 l1) (merge l1 gv1)), (Permutation (merge gv1 l1) (merge gv1 l2)), (Permutation (merge gv1 l1) (merge gv1 gv1)), (Permutation (merge gv1 l1) (l2 ++ l2)), (Permutation (merge gv1 l1) (l2 ++ l1)), (Permutation (merge gv1 l1) (l2 ++ gv1)), (Permutation (merge gv1 l1) (l1 ++ l2)), (Permutation (merge gv1 l1) (l1 ++ l1))
(Permutation (merge gv1 l1) (l1 ++ gv1)), (Permutation (merge gv1 l1) (gv1 ++ l2)), (Permutation (merge gv1 l1) (gv1 ++ l1)), (Permutation (merge gv1 l1) (gv1 ++ gv1)), (Permutation (merge gv1 l1) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) l1), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) (a0 :: l2)), (Permutation (merge gv1 gv1) (a0 :: l1))
(Permutation (merge gv1 gv1) (a0 :: gv1)), (Permutation (merge gv1 gv1) (n :: l2)), (Permutation (merge gv1 gv1) (n :: l1)), (Permutation (merge gv1 gv1) (n :: gv1)), (Permutation (merge gv1 gv1) (a :: l2)), (Permutation (merge gv1 gv1) (a :: l1)), (Permutation (merge gv1 gv1) (a :: gv1)), (Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 l1)), (Permutation (merge gv1 gv1) (merge l2 gv1))
(Permutation (merge gv1 gv1) (merge l1 l2)), (Permutation (merge gv1 gv1) (merge l1 l1)), (Permutation (merge gv1 gv1) (merge l1 gv1)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (merge gv1 l1)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ l1)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (l1 ++ l2)), (Permutation (merge gv1 gv1) (l1 ++ l1))
(Permutation (merge gv1 gv1) (l1 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ l1)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1))
(Permutation (l2 ++ l2) (a0 :: gv1)), (Permutation (l2 ++ l2) (n :: l2)), (Permutation (l2 ++ l2) (n :: l1)), (Permutation (l2 ++ l2) (n :: gv1)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (a :: gv1)), (Permutation (l2 ++ l2) (merge l2 l2)), (Permutation (l2 ++ l2) (merge l2 l1)), (Permutation (l2 ++ l2) (merge l2 gv1))
(Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (merge l1 gv1)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 l1)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1))
(Permutation (l2 ++ l2) (l1 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ l1)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) gv1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1))
(Permutation (l2 ++ l1) (a0 :: gv1)), (Permutation (l2 ++ l1) (n :: l2)), (Permutation (l2 ++ l1) (n :: l1)), (Permutation (l2 ++ l1) (n :: gv1)), (Permutation (l2 ++ l1) (a :: l2)), (Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (a :: gv1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l2 gv1))
(Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (merge l1 gv1)), (Permutation (l2 ++ l1) (merge gv1 l2)), (Permutation (l2 ++ l1) (merge gv1 l1)), (Permutation (l2 ++ l1) (merge gv1 gv1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l2 ++ gv1)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1))
(Permutation (l2 ++ l1) (l1 ++ gv1)), (Permutation (l2 ++ l1) (gv1 ++ l2)), (Permutation (l2 ++ l1) (gv1 ++ l1)), (Permutation (l2 ++ l1) (gv1 ++ gv1)), (Permutation (l2 ++ l1) []), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) l1), (Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) (a0 :: l2)), (Permutation (l2 ++ gv1) (a0 :: l1))
(Permutation (l2 ++ gv1) (a0 :: gv1)), (Permutation (l2 ++ gv1) (n :: l2)), (Permutation (l2 ++ gv1) (n :: l1)), (Permutation (l2 ++ gv1) (n :: gv1)), (Permutation (l2 ++ gv1) (a :: l2)), (Permutation (l2 ++ gv1) (a :: l1)), (Permutation (l2 ++ gv1) (a :: gv1)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 l1)), (Permutation (l2 ++ gv1) (merge l2 gv1))
(Permutation (l2 ++ gv1) (merge l1 l2)), (Permutation (l2 ++ gv1) (merge l1 l1)), (Permutation (l2 ++ gv1) (merge l1 gv1)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 l1)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (l2 ++ l1)), (Permutation (l2 ++ gv1) (l1 ++ l2)), (Permutation (l2 ++ gv1) (l1 ++ l1))
(Permutation (l2 ++ gv1) (l1 ++ gv1)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ l1)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) gv1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1))
(Permutation (l1 ++ l2) (a0 :: gv1)), (Permutation (l1 ++ l2) (n :: l2)), (Permutation (l1 ++ l2) (n :: l1)), (Permutation (l1 ++ l2) (n :: gv1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (a :: gv1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1)), (Permutation (l1 ++ l2) (merge l2 gv1))
(Permutation (l1 ++ l2) (merge l1 l2)), (Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (merge l1 gv1)), (Permutation (l1 ++ l2) (merge gv1 l2)), (Permutation (l1 ++ l2) (merge gv1 l1)), (Permutation (l1 ++ l2) (merge gv1 gv1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l2 ++ gv1)), (Permutation (l1 ++ l2) (l1 ++ l1))
(Permutation (l1 ++ l2) (l1 ++ gv1)), (Permutation (l1 ++ l2) (gv1 ++ l2)), (Permutation (l1 ++ l2) (gv1 ++ l1)), (Permutation (l1 ++ l2) (gv1 ++ gv1)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) gv1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1))
(Permutation (l1 ++ l1) (a0 :: gv1)), (Permutation (l1 ++ l1) (n :: l2)), (Permutation (l1 ++ l1) (n :: l1)), (Permutation (l1 ++ l1) (n :: gv1)), (Permutation (l1 ++ l1) (a :: l2)), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (a :: gv1)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l2 gv1))
(Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (merge l1 gv1)), (Permutation (l1 ++ l1) (merge gv1 l2)), (Permutation (l1 ++ l1) (merge gv1 l1)), (Permutation (l1 ++ l1) (merge gv1 gv1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l2 ++ gv1)), (Permutation (l1 ++ l1) (l1 ++ l2))
(Permutation (l1 ++ l1) (l1 ++ gv1)), (Permutation (l1 ++ l1) (gv1 ++ l2)), (Permutation (l1 ++ l1) (gv1 ++ l1)), (Permutation (l1 ++ l1) (gv1 ++ gv1)), (Permutation (l1 ++ l1) []), (Permutation (l1 ++ gv1) l2), (Permutation (l1 ++ gv1) l1), (Permutation (l1 ++ gv1) gv1), (Permutation (l1 ++ gv1) (a0 :: l2)), (Permutation (l1 ++ gv1) (a0 :: l1))
(Permutation (l1 ++ gv1) (a0 :: gv1)), (Permutation (l1 ++ gv1) (n :: l2)), (Permutation (l1 ++ gv1) (n :: l1)), (Permutation (l1 ++ gv1) (n :: gv1)), (Permutation (l1 ++ gv1) (a :: l2)), (Permutation (l1 ++ gv1) (a :: l1)), (Permutation (l1 ++ gv1) (a :: gv1)), (Permutation (l1 ++ gv1) (merge l2 l2)), (Permutation (l1 ++ gv1) (merge l2 l1)), (Permutation (l1 ++ gv1) (merge l2 gv1))
(Permutation (l1 ++ gv1) (merge l1 l2)), (Permutation (l1 ++ gv1) (merge l1 l1)), (Permutation (l1 ++ gv1) (merge l1 gv1)), (Permutation (l1 ++ gv1) (merge gv1 l2)), (Permutation (l1 ++ gv1) (merge gv1 l1)), (Permutation (l1 ++ gv1) (merge gv1 gv1)), (Permutation (l1 ++ gv1) (l2 ++ l2)), (Permutation (l1 ++ gv1) (l2 ++ l1)), (Permutation (l1 ++ gv1) (l2 ++ gv1)), (Permutation (l1 ++ gv1) (l1 ++ l2))
(Permutation (l1 ++ gv1) (l1 ++ l1)), (Permutation (l1 ++ gv1) (gv1 ++ l2)), (Permutation (l1 ++ gv1) (gv1 ++ l1)), (Permutation (l1 ++ gv1) (gv1 ++ gv1)), (Permutation (l1 ++ gv1) []), (Permutation (gv1 ++ l2) l2), (Permutation (gv1 ++ l2) l1), (Permutation (gv1 ++ l2) gv1), (Permutation (gv1 ++ l2) (a0 :: l2)), (Permutation (gv1 ++ l2) (a0 :: l1))
(Permutation (gv1 ++ l2) (a0 :: gv1)), (Permutation (gv1 ++ l2) (n :: l2)), (Permutation (gv1 ++ l2) (n :: l1)), (Permutation (gv1 ++ l2) (n :: gv1)), (Permutation (gv1 ++ l2) (a :: l2)), (Permutation (gv1 ++ l2) (a :: l1)), (Permutation (gv1 ++ l2) (a :: gv1)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 l1)), (Permutation (gv1 ++ l2) (merge l2 gv1))
(Permutation (gv1 ++ l2) (merge l1 l2)), (Permutation (gv1 ++ l2) (merge l1 l1)), (Permutation (gv1 ++ l2) (merge l1 gv1)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 l1)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ l1)), (Permutation (gv1 ++ l2) (l2 ++ gv1)), (Permutation (gv1 ++ l2) (l1 ++ l2))
(Permutation (gv1 ++ l2) (l1 ++ l1)), (Permutation (gv1 ++ l2) (l1 ++ gv1)), (Permutation (gv1 ++ l2) (gv1 ++ l1)), (Permutation (gv1 ++ l2) (gv1 ++ gv1)), (Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ l1) l2), (Permutation (gv1 ++ l1) l1), (Permutation (gv1 ++ l1) gv1), (Permutation (gv1 ++ l1) (a0 :: l2)), (Permutation (gv1 ++ l1) (a0 :: l1))
(Permutation (gv1 ++ l1) (a0 :: gv1)), (Permutation (gv1 ++ l1) (n :: l2)), (Permutation (gv1 ++ l1) (n :: l1)), (Permutation (gv1 ++ l1) (n :: gv1)), (Permutation (gv1 ++ l1) (a :: l2)), (Permutation (gv1 ++ l1) (a :: l1)), (Permutation (gv1 ++ l1) (a :: gv1)), (Permutation (gv1 ++ l1) (merge l2 l2)), (Permutation (gv1 ++ l1) (merge l2 l1)), (Permutation (gv1 ++ l1) (merge l2 gv1))
(Permutation (gv1 ++ l1) (merge l1 l2)), (Permutation (gv1 ++ l1) (merge l1 l1)), (Permutation (gv1 ++ l1) (merge l1 gv1)), (Permutation (gv1 ++ l1) (merge gv1 l2)), (Permutation (gv1 ++ l1) (merge gv1 l1)), (Permutation (gv1 ++ l1) (merge gv1 gv1)), (Permutation (gv1 ++ l1) (l2 ++ l2)), (Permutation (gv1 ++ l1) (l2 ++ l1)), (Permutation (gv1 ++ l1) (l2 ++ gv1)), (Permutation (gv1 ++ l1) (l1 ++ l2))
(Permutation (gv1 ++ l1) (l1 ++ l1)), (Permutation (gv1 ++ l1) (l1 ++ gv1)), (Permutation (gv1 ++ l1) (gv1 ++ l2)), (Permutation (gv1 ++ l1) (gv1 ++ gv1)), (Permutation (gv1 ++ l1) []), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) l1), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (a0 :: l2)), (Permutation (gv1 ++ gv1) (a0 :: l1))
(Permutation (gv1 ++ gv1) (a0 :: gv1)), (Permutation (gv1 ++ gv1) (n :: l2)), (Permutation (gv1 ++ gv1) (n :: l1)), (Permutation (gv1 ++ gv1) (n :: gv1)), (Permutation (gv1 ++ gv1) (a :: l2)), (Permutation (gv1 ++ gv1) (a :: l1)), (Permutation (gv1 ++ gv1) (a :: gv1)), (Permutation (gv1 ++ gv1) (merge l2 l2)), (Permutation (gv1 ++ gv1) (merge l2 l1)), (Permutation (gv1 ++ gv1) (merge l2 gv1))
(Permutation (gv1 ++ gv1) (merge l1 l2)), (Permutation (gv1 ++ gv1) (merge l1 l1)), (Permutation (gv1 ++ gv1) (merge l1 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 l2)), (Permutation (gv1 ++ gv1) (merge gv1 l1)), (Permutation (gv1 ++ gv1) (merge gv1 gv1)), (Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ l1)), (Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (l1 ++ l2))
(Permutation (gv1 ++ gv1) (l1 ++ l1)), (Permutation (gv1 ++ gv1) (l1 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) (gv1 ++ l1)), (Permutation (gv1 ++ gv1) []), (Permutation [] l2), (Permutation [] l1), (Permutation [] gv1), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: l1))
(Permutation [] (a0 :: gv1)), (Permutation [] (n :: l2)), (Permutation [] (n :: l1)), (Permutation [] (n :: gv1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (a :: gv1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l2 gv1))
(Permutation [] (merge l1 l2)), (Permutation [] (merge l1 l1)), (Permutation [] (merge l1 gv1)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 l1)), (Permutation [] (merge gv1 gv1)), (Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l2 ++ gv1)), (Permutation [] (l1 ++ l2))
(Permutation [] (l1 ++ l1)), (Permutation [] (l1 ++ gv1)), (Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ l1)), (Permutation [] (gv1 ++ gv1)), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a0 :: gv1)), (In a0 (n :: l2)), (In a0 (n :: l1))
(In a0 (n :: gv1)), (In a0 (a :: l2)), (In a0 (a :: l1)), (In a0 (a :: gv1)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l2 gv1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (merge l1 gv1))
(In a0 (merge gv1 l2)), (In a0 (merge gv1 l1)), (In a0 (merge gv1 gv1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l2 ++ gv1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a0 (l1 ++ gv1)), (In a0 (gv1 ++ l2))
(In a0 (gv1 ++ l1)), (In a0 (gv1 ++ gv1)), (In n (a0 :: l2)), (In n (a0 :: l1)), (In n (a0 :: gv1)), (In n (n :: l2)), (In n (n :: l1)), (In n (n :: gv1)), (In n (a :: l2)), (In n (a :: l1))
(In n (a :: gv1)), (In n (merge l2 l2)), (In n (merge l2 l1)), (In n (merge l2 gv1)), (In n (merge l1 l2)), (In n (merge l1 l1)), (In n (merge l1 gv1)), (In n (merge gv1 l2)), (In n (merge gv1 l1)), (In n (merge gv1 gv1))
(In n (l2 ++ l2)), (In n (l2 ++ l1)), (In n (l2 ++ gv1)), (In n (l1 ++ l2)), (In n (l1 ++ l1)), (In n (l1 ++ gv1)), (In n (gv1 ++ l2)), (In n (gv1 ++ l1)), (In n (gv1 ++ gv1)), (In a (a0 :: l2))
(In a (a0 :: l1)), (In a (a0 :: gv1)), (In a (n :: l2)), (In a (n :: l1)), (In a (n :: gv1)), (In a (a :: l2)), (In a (a :: l1)), (In a (a :: gv1)), (In a (merge l2 l2)), (In a (merge l2 l1))
(In a (merge l2 gv1)), (In a (merge l1 l2)), (In a (merge l1 l1)), (In a (merge l1 gv1)), (In a (merge gv1 l2)), (In a (merge gv1 l1)), (In a (merge gv1 gv1)), (In a (l2 ++ l2)), (In a (l2 ++ l1)), (In a (l2 ++ gv1))
(In a (l1 ++ l2)), (In a (l1 ++ l1)), (In a (l1 ++ gv1)), (In a (gv1 ++ l2)), (In a (gv1 ++ l1)), (In a (gv1 ++ gv1)), (In (length l2) l2), (In (length l2) l1), (In (length l2) gv1), (In (length l2) (a0 :: l2))
(In (length l2) (a0 :: l1)), (In (length l2) (a0 :: gv1)), (In (length l2) (n :: l2)), (In (length l2) (n :: l1)), (In (length l2) (n :: gv1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (a :: gv1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1))
(In (length l2) (merge l2 gv1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (merge l1 gv1)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 l1)), (In (length l2) (merge gv1 gv1)), (In (length l2) (l2 ++ l2)), (In (length l2) (l2 ++ l1)), (In (length l2) (l2 ++ gv1))
(In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l2) (l1 ++ gv1)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ l1)), (In (length l2) (gv1 ++ gv1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) gv1), (In (length l1) (a0 :: l2))
(In (length l1) (a0 :: l1)), (In (length l1) (a0 :: gv1)), (In (length l1) (n :: l2)), (In (length l1) (n :: l1)), (In (length l1) (n :: gv1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (a :: gv1)), (In (length l1) (merge l2 l2)), (In (length l1) (merge l2 l1))
(In (length l1) (merge l2 gv1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (merge l1 gv1)), (In (length l1) (merge gv1 l2)), (In (length l1) (merge gv1 l1)), (In (length l1) (merge gv1 gv1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l2 ++ gv1))
(In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (In (length l1) (l1 ++ gv1)), (In (length l1) (gv1 ++ l2)), (In (length l1) (gv1 ++ l1)), (In (length l1) (gv1 ++ gv1)), (In (length gv1) l2), (In (length gv1) l1), (In (length gv1) gv1), (In (length gv1) (a0 :: l2))
(In (length gv1) (a0 :: l1)), (In (length gv1) (a0 :: gv1)), (In (length gv1) (n :: l2)), (In (length gv1) (n :: l1)), (In (length gv1) (n :: gv1)), (In (length gv1) (a :: l2)), (In (length gv1) (a :: l1)), (In (length gv1) (a :: gv1)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 l1))
(In (length gv1) (merge l2 gv1)), (In (length gv1) (merge l1 l2)), (In (length gv1) (merge l1 l1)), (In (length gv1) (merge l1 gv1)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 l1)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ l1)), (In (length gv1) (l2 ++ gv1))
(In (length gv1) (l1 ++ l2)), (In (length gv1) (l1 ++ l1)), (In (length gv1) (l1 ++ gv1)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ l1)), (In (length gv1) (gv1 ++ gv1)), (a0 < length l2), (a0 < length l1), (a0 < length gv1), (n < length l2)
(n < length l1), (n < length gv1), (a < length l2), (a < length l1), (a < length gv1), (length l2 < a0), (length l2 < n), (length l2 < a), (length l2 < length l1), (length l2 < length gv1)
(length l1 < a0), (length l1 < n), (length l1 < a), (length l1 < length l2), (length l1 < length gv1), (length gv1 < a0), (length gv1 < n), (length gv1 < a), (length gv1 < length l2), (length gv1 < length l1)
(a0 <= length l2), (a0 <= length l1), (a0 <= length gv1), (n <= length l2), (n <= length l1), (n <= length gv1), (a <= length l2), (a <= length l1), (a <= length gv1), (length l2 <= a0)
(length l2 <= n), (length l2 <= a), (length l2 <= length l1), (length l2 <= length gv1), (length l1 <= a0), (length l1 <= n), (length l1 <= a), (length l1 <= length l2), (length l1 <= length gv1), (length gv1 <= a0)
(length gv1 <= n), (length gv1 <= a), (length gv1 <= length l2), (length gv1 <= length l1), (~ a0 <=* l2), (~ a0 <=* l1), (~ a0 <=* gv1), (~ n <=* l2), (~ n <=* l1), (~ n <=* gv1)
(~ a <=* l2), (~ a <=* l1), (~ a <=* gv1), (~ sorted l2), (~ sorted l1), (~ sorted gv1), (~ Permutation l2 l2), (~ Permutation l2 l1), (~ Permutation l2 gv1), (~ Permutation l1 l2)
(~ Permutation l1 l1), (~ Permutation l1 gv1), (~ Permutation gv1 l2), (~ Permutation gv1 l1), (~ Permutation gv1 gv1), (~ In a0 l2), (~ In a0 l1), (~ In a0 gv1), (~ In n l2), (~ In n l1)
(~ In n gv1), (~ In a l2), (~ In a l1), (~ In a gv1), (~ a0 < a0), (~ a0 < n), (~ a0 < a), (~ n < a0), (~ n < n), (~ n < a)
(~ a < a0), (~ a < n), (~ a < a), (~ a0 <= a0), (~ a0 <= n), (~ a0 <= a), (~ n <= a0), (~ n <= n), (~ n <= a), (~ a <= a0)
(~ a <= n), (~ a <= a), (l2 <> l2), (l2 <> l1), (l2 <> gv1), (l1 <> l2), (l1 <> l1), (l1 <> gv1), (gv1 <> l2), (gv1 <> l1)
(gv1 <> gv1), (a0 <> a0), (a0 <> n), (a0 <> a), (n <> a0), (n <> n), (n <> a), (a <> a0), (a <> n), (a <> a)
(None = Some l2), (None = Some l1), (None = Some gv1), (a0 :: l2 = l2), (a0 :: l2 = l1), (a0 :: l2 = gv1), (a0 :: l2 = merge l2 l2), (a0 :: l2 = merge l2 l1), (a0 :: l2 = merge l2 gv1), (a0 :: l2 = merge l1 l2)
(a0 :: l2 = merge l1 l1), (a0 :: l2 = merge l1 gv1), (a0 :: l2 = merge gv1 l2), (a0 :: l2 = merge gv1 l1), (a0 :: l2 = merge gv1 gv1), (a0 :: l2 = l2 ++ l2), (a0 :: l2 = l2 ++ l1), (a0 :: l2 = l2 ++ gv1), (a0 :: l2 = l1 ++ l2), (a0 :: l2 = l1 ++ l1)
(a0 :: l2 = l1 ++ gv1), (a0 :: l2 = gv1 ++ l2), (a0 :: l2 = gv1 ++ l1), (a0 :: l2 = gv1 ++ gv1), (a0 :: l2 = []), (a0 :: l1 = l2), (a0 :: l1 = l1), (a0 :: l1 = gv1), (a0 :: l1 = merge l2 l2), (a0 :: l1 = merge l2 l1)
(a0 :: l1 = merge l2 gv1), (a0 :: l1 = merge l1 l2), (a0 :: l1 = merge l1 l1), (a0 :: l1 = merge l1 gv1), (a0 :: l1 = merge gv1 l2), (a0 :: l1 = merge gv1 l1), (a0 :: l1 = merge gv1 gv1), (a0 :: l1 = l2 ++ l2), (a0 :: l1 = l2 ++ l1), (a0 :: l1 = l2 ++ gv1)
(a0 :: l1 = l1 ++ l2), (a0 :: l1 = l1 ++ l1), (a0 :: l1 = l1 ++ gv1), (a0 :: l1 = gv1 ++ l2), (a0 :: l1 = gv1 ++ l1), (a0 :: l1 = gv1 ++ gv1), (a0 :: l1 = []), (a0 :: gv1 = l2), (a0 :: gv1 = l1), (a0 :: gv1 = gv1)
(a0 :: gv1 = merge l2 l2), (a0 :: gv1 = merge l2 l1), (a0 :: gv1 = merge l2 gv1), (a0 :: gv1 = merge l1 l2), (a0 :: gv1 = merge l1 l1), (a0 :: gv1 = merge l1 gv1), (a0 :: gv1 = merge gv1 l2), (a0 :: gv1 = merge gv1 l1), (a0 :: gv1 = merge gv1 gv1), (a0 :: gv1 = l2 ++ l2)
(a0 :: gv1 = l2 ++ l1), (a0 :: gv1 = l2 ++ gv1), (a0 :: gv1 = l1 ++ l2), (a0 :: gv1 = l1 ++ l1), (a0 :: gv1 = l1 ++ gv1), (a0 :: gv1 = gv1 ++ l2), (a0 :: gv1 = gv1 ++ l1), (a0 :: gv1 = gv1 ++ gv1), (a0 :: gv1 = []), (n :: l2 = l2)
(n :: l2 = l1), (n :: l2 = gv1), (n :: l2 = merge l2 l2), (n :: l2 = merge l2 l1), (n :: l2 = merge l2 gv1), (n :: l2 = merge l1 l2), (n :: l2 = merge l1 l1), (n :: l2 = merge l1 gv1), (n :: l2 = merge gv1 l2), (n :: l2 = merge gv1 l1)
(n :: l2 = merge gv1 gv1), (n :: l2 = l2 ++ l2), (n :: l2 = l2 ++ l1), (n :: l2 = l2 ++ gv1), (n :: l2 = l1 ++ l2), (n :: l2 = l1 ++ l1), (n :: l2 = l1 ++ gv1), (n :: l2 = gv1 ++ l2), (n :: l2 = gv1 ++ l1), (n :: l2 = gv1 ++ gv1)
(n :: l2 = []), (n :: l1 = l2), (n :: l1 = l1), (n :: l1 = gv1), (n :: l1 = merge l2 l2), (n :: l1 = merge l2 l1), (n :: l1 = merge l2 gv1), (n :: l1 = merge l1 l2), (n :: l1 = merge l1 l1), (n :: l1 = merge l1 gv1)
(n :: l1 = merge gv1 l2), (n :: l1 = merge gv1 l1), (n :: l1 = merge gv1 gv1), (n :: l1 = l2 ++ l2), (n :: l1 = l2 ++ l1), (n :: l1 = l2 ++ gv1), (n :: l1 = l1 ++ l2), (n :: l1 = l1 ++ l1), (n :: l1 = l1 ++ gv1), (n :: l1 = gv1 ++ l2)
(n :: l1 = gv1 ++ l1), (n :: l1 = gv1 ++ gv1), (n :: l1 = []), (n :: gv1 = l2), (n :: gv1 = l1), (n :: gv1 = gv1), (n :: gv1 = merge l2 l2), (n :: gv1 = merge l2 l1), (n :: gv1 = merge l2 gv1), (n :: gv1 = merge l1 l2)
(n :: gv1 = merge l1 l1), (n :: gv1 = merge l1 gv1), (n :: gv1 = merge gv1 l2), (n :: gv1 = merge gv1 l1), (n :: gv1 = merge gv1 gv1), (n :: gv1 = l2 ++ l2), (n :: gv1 = l2 ++ l1), (n :: gv1 = l2 ++ gv1), (n :: gv1 = l1 ++ l2), (n :: gv1 = l1 ++ l1)
(n :: gv1 = l1 ++ gv1), (n :: gv1 = gv1 ++ l2), (n :: gv1 = gv1 ++ l1), (n :: gv1 = gv1 ++ gv1), (n :: gv1 = []), (a :: l2 = l2), (a :: l2 = l1), (a :: l2 = gv1), (a :: l2 = merge l2 l2), (a :: l2 = merge l2 l1)
(a :: l2 = merge l2 gv1), (a :: l2 = merge l1 l2), (a :: l2 = merge l1 l1), (a :: l2 = merge l1 gv1), (a :: l2 = merge gv1 l2), (a :: l2 = merge gv1 l1), (a :: l2 = merge gv1 gv1), (a :: l2 = l2 ++ l2), (a :: l2 = l2 ++ l1), (a :: l2 = l2 ++ gv1)
(a :: l2 = l1 ++ l2), (a :: l2 = l1 ++ l1), (a :: l2 = l1 ++ gv1), (a :: l2 = gv1 ++ l2), (a :: l2 = gv1 ++ l1), (a :: l2 = gv1 ++ gv1), (a :: l2 = []), (a :: l1 = l2), (a :: l1 = l1), (a :: l1 = gv1)
(a :: l1 = merge l2 l2), (a :: l1 = merge l2 l1), (a :: l1 = merge l2 gv1), (a :: l1 = merge l1 l2), (a :: l1 = merge l1 l1), (a :: l1 = merge l1 gv1), (a :: l1 = merge gv1 l2), (a :: l1 = merge gv1 l1), (a :: l1 = merge gv1 gv1), (a :: l1 = l2 ++ l2)
(a :: l1 = l2 ++ l1), (a :: l1 = l2 ++ gv1), (a :: l1 = l1 ++ l2), (a :: l1 = l1 ++ l1), (a :: l1 = l1 ++ gv1), (a :: l1 = gv1 ++ l2), (a :: l1 = gv1 ++ l1), (a :: l1 = gv1 ++ gv1), (a :: l1 = []), (a :: gv1 = l2)
(a :: gv1 = l1), (a :: gv1 = gv1), (a :: gv1 = merge l2 l2), (a :: gv1 = merge l2 l1), (a :: gv1 = merge l2 gv1), (a :: gv1 = merge l1 l2), (a :: gv1 = merge l1 l1), (a :: gv1 = merge l1 gv1), (a :: gv1 = merge gv1 l2), (a :: gv1 = merge gv1 l1)
(a :: gv1 = merge gv1 gv1), (a :: gv1 = l2 ++ l2), (a :: gv1 = l2 ++ l1), (a :: gv1 = l2 ++ gv1), (a :: gv1 = l1 ++ l2), (a :: gv1 = l1 ++ l1), (a :: gv1 = l1 ++ gv1), (a :: gv1 = gv1 ++ l2), (a :: gv1 = gv1 ++ l1), (a :: gv1 = gv1 ++ gv1)
(a :: gv1 = []), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = gv1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l2 = l1 ++ gv1)
(merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ l1), (merge l2 l2 = gv1 ++ gv1), (merge l2 l1 = l2), (merge l2 l1 = l1), (merge l2 l1 = gv1), (merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l2 ++ gv1), (merge l2 l1 = l1 ++ l2)
(merge l2 l1 = l1 ++ l1), (merge l2 l1 = l1 ++ gv1), (merge l2 l1 = gv1 ++ l2), (merge l2 l1 = gv1 ++ l1), (merge l2 l1 = gv1 ++ gv1), (merge l2 gv1 = l2), (merge l2 gv1 = l1), (merge l2 gv1 = gv1), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ l1)
(merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = l1 ++ l2), (merge l2 gv1 = l1 ++ l1), (merge l2 gv1 = l1 ++ gv1), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ l1), (merge l2 gv1 = gv1 ++ gv1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = gv1)
(merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l2 ++ gv1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1), (merge l1 l2 = l1 ++ gv1), (merge l1 l2 = gv1 ++ l2), (merge l1 l2 = gv1 ++ l1), (merge l1 l2 = gv1 ++ gv1), (merge l1 l1 = l2)
(merge l1 l1 = l1), (merge l1 l1 = gv1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l2 ++ gv1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (merge l1 l1 = l1 ++ gv1), (merge l1 l1 = gv1 ++ l2), (merge l1 l1 = gv1 ++ l1)
(merge l1 l1 = gv1 ++ gv1), (merge l1 gv1 = l2), (merge l1 gv1 = l1), (merge l1 gv1 = gv1), (merge l1 gv1 = l2 ++ l2), (merge l1 gv1 = l2 ++ l1), (merge l1 gv1 = l2 ++ gv1), (merge l1 gv1 = l1 ++ l2), (merge l1 gv1 = l1 ++ l1), (merge l1 gv1 = l1 ++ gv1)
(merge l1 gv1 = gv1 ++ l2), (merge l1 gv1 = gv1 ++ l1), (merge l1 gv1 = gv1 ++ gv1), (merge gv1 l2 = l2), (merge gv1 l2 = l1), (merge gv1 l2 = gv1), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ l1), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = l1 ++ l2)
(merge gv1 l2 = l1 ++ l1), (merge gv1 l2 = l1 ++ gv1), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ l1), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 l1 = l2), (merge gv1 l1 = l1), (merge gv1 l1 = gv1), (merge gv1 l1 = l2 ++ l2), (merge gv1 l1 = l2 ++ l1)
(merge gv1 l1 = l2 ++ gv1), (merge gv1 l1 = l1 ++ l2), (merge gv1 l1 = l1 ++ l1), (merge gv1 l1 = l1 ++ gv1), (merge gv1 l1 = gv1 ++ l2), (merge gv1 l1 = gv1 ++ l1), (merge gv1 l1 = gv1 ++ gv1), (merge gv1 gv1 = l2), (merge gv1 gv1 = l1), (merge gv1 gv1 = gv1)
(merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ l1), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = l1 ++ l2), (merge gv1 gv1 = l1 ++ l1), (merge gv1 gv1 = l1 ++ gv1), (merge gv1 gv1 = gv1 ++ l2), (merge gv1 gv1 = gv1 ++ l1), (merge gv1 gv1 = gv1 ++ gv1), (l2 ++ l2 = l2)
(l2 ++ l2 = l1), (l2 ++ l2 = gv1), (l2 ++ l1 = l2), (l2 ++ l1 = l1), (l2 ++ l1 = gv1), (l2 ++ gv1 = l2), (l2 ++ gv1 = l1), (l2 ++ gv1 = gv1), (l1 ++ l2 = l2), (l1 ++ l2 = l1)
(l1 ++ l2 = gv1), (l1 ++ l1 = l2), (l1 ++ l1 = l1), (l1 ++ l1 = gv1), (l1 ++ gv1 = l2), (l1 ++ gv1 = l1), (l1 ++ gv1 = gv1), (gv1 ++ l2 = l2), (gv1 ++ l2 = l1), (gv1 ++ l2 = gv1)
(gv1 ++ l1 = l2), (gv1 ++ l1 = l1), (gv1 ++ l1 = gv1), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = l1), (gv1 ++ gv1 = gv1), ([] = l2), ([] = l1), ([] = gv1), ([] = merge l2 l2)
([] = merge l2 l1), ([] = merge l2 gv1), ([] = merge l1 l2), ([] = merge l1 l1), ([] = merge l1 gv1), ([] = merge gv1 l2), ([] = merge gv1 l1), ([] = merge gv1 gv1), ([] = l2 ++ l2), ([] = l2 ++ l1)
([] = l2 ++ gv1), ([] = l1 ++ l2), ([] = l1 ++ l1), ([] = l1 ++ gv1), ([] = gv1 ++ l2), ([] = gv1 ++ l1), ([] = gv1 ++ gv1), (None = Some a0), (None = Some n), (None = Some a)
((l2, l2) = split l2), ((l2, l2) = split l1), ((l2, l2) = split gv1), ((l2, l1) = split l2), ((l2, l1) = split l1), ((l2, l1) = split gv1), ((l2, gv1) = split l2), ((l2, gv1) = split l1), ((l2, gv1) = split gv1), ((l1, l2) = split l2)
((l1, l2) = split l1), ((l1, l2) = split gv1), ((l1, l1) = split l2), ((l1, l1) = split l1), ((l1, l1) = split gv1), ((l1, gv1) = split l2), ((l1, gv1) = split l1), ((l1, gv1) = split gv1), ((gv1, l2) = split l2), ((gv1, l2) = split l1)
((gv1, l2) = split gv1), ((gv1, l1) = split l2), ((gv1, l1) = split l1), ((gv1, l1) = split gv1), ((gv1, gv1) = split l2), ((gv1, gv1) = split l1), ((gv1, gv1) = split gv1), (length l2 = a0), (length l2 = n), (length l2 = a)
(length l1 = a0), (length l1 = n), (length l1 = a), (length gv1 = a0), (length gv1 = n), (length gv1 = a)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 123.47 seconds


Label: 0 (0)
(sorted (a0 :: l2))

Label: 1 (1)
(a <= a0), (~ a0 < a)

Label: 2 (2)

Label: 3 (3)
(sorted gv0), (sorted (merge l2 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv2 gv0)), (sorted (merge gv0 gv2)), (sorted (merge gv0 gv0)), (sorted (a :: gv0))

Label: 4 (4)
(a <=* gv3), (a0 <=* gv3), (sorted (a :: gv3)), (a <=* merge l2 gv3), (a <=* merge l1 gv3), (a <=* merge gv3 l2), (a <=* merge gv3 l1), (sorted (a0 :: gv3)), (a0 <=* merge l2 gv3), (a0 <=* merge gv3 l2)
(a <=* merge gv3 gv3), (a <=* merge gv3 gv2), (a <=* merge gv2 gv3), (a0 <=* merge gv3 gv3), (a <=* n :: gv3), (a <=* a :: gv3), (a <=* a0 :: gv3), (a <=* l2 ++ gv3), (a <=* l1 ++ gv3), (a <=* gv3 ++ l2)

Label: 5 (5)
(sorted (a :: gv1))

Label: 6 (6)
(sorted gv0), (sorted (merge l2 gv0)), (sorted (merge l1 gv0)), (sorted (merge gv0 l2)), (sorted (merge gv0 l1)), (sorted (merge gv0 gv0)), (sorted (a :: gv0))

Label: 7 (7)
(a <=* gv3), (a0 <=* gv3), (sorted (a :: gv3)), (a <=* merge l2 gv3), (a <=* merge gv3 l2), (a <=* merge gv3 l1), (a <=* merge l1 gv3), (sorted (a0 :: gv3)), (a0 <=* merge l2 gv3), (a0 <=* merge gv3 l2)
(a <=* merge gv3 gv3), (a0 <=* merge gv3 gv3), (a <=* n :: gv3), (a <=* a :: gv3), (a <=* a0 :: gv3), (a <=* l2 ++ gv3), (a <=* gv3 ++ l2), (a <=* gv3 ++ l1), (a <=* l1 ++ gv3), (a0 <=* a0 :: gv3)

Label: 8 (8)
(sorted (a :: gv1))


------------------------------ ALL RESULTS ------------------------------
1. (sorted (a :: gv2) ->  a <= a0 -> sorted (a0 :: l2) -> sorted (a :: merge gv2 (a0 :: l2)))

2. (sorted (a0 :: l2) ->  a <= a0 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) (a0 :: l2)))

3. (a <= a0 -> ~ a0 < a)
(~ a0 < a ->  sorted (a0 :: l2) ->  sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) (a0 :: l2)))

4. (sorted (merge l2 gv0) -> sorted gv0)

5. (sorted (merge gv0 l2) -> sorted gv0)

6. (sorted (merge gv2 gv0) -> sorted gv0)

7. (sorted (merge gv0 gv2) -> sorted gv0)

8. (sorted (merge gv0 gv0) -> sorted gv0)

9. (sorted (merge l1 gv0) -> sorted gv0)

10. (sorted (merge gv0 l1) -> sorted gv0)

11. (sorted (a :: gv0) -> sorted gv0)

12. (a <=* gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

13. (a0 <=* gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

14. (a <= a0 ->  sorted gv3 ->  sorted (a :: gv2) -> sorted (a :: gv3) -> sorted (a :: merge gv2 gv3))

15. (a <=* merge l2 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

16. (a <=* merge l1 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

17. (a <=* merge gv3 l2 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

18. (a <=* merge gv3 l1 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

19. (a <= a0 ->  sorted gv3 ->  sorted (a :: gv2) -> sorted (a0 :: gv3) -> sorted (a :: merge gv2 gv3))

20. (a0 <=* merge l2 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

21. (a0 <=* merge gv3 l2 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

22. (a <=* merge gv3 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

23. (a <=* merge gv3 gv2 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

24. (a <=* merge gv2 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

25. (a0 <=* merge gv3 gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

26. (a <=* n :: gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

27. (a <=* a :: gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

28. (a <=* a0 :: gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

29. (a <=* l2 ++ gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

30. (a <=* l1 ++ gv3 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

31. (a <=* gv3 ++ l2 ->  a <= a0 -> sorted gv3 -> sorted (a :: gv2) -> sorted (a :: merge gv2 gv3))

32. (a <=* gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

33. (a0 <=* gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

34. (a <= a0 ->  sorted gv3 ->  sorted (a :: gv3) ->  sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

35. (a <=* merge l2 gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

36. (a <=* merge gv3 l2 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

37. (a <=* merge gv3 l1 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

38. (a <=* merge l1 gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

39. (a <= a0 ->  sorted gv3 ->  sorted (a0 :: gv3) ->  sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

40. (a0 <=* merge l2 gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

41. (a0 <=* merge gv3 l2 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

42. (a <=* merge gv3 gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

43. (a0 <=* merge gv3 gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

44. (a <=* n :: gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

45. (a <=* a :: gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

46. (a <=* a0 :: gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

47. (a <=* l2 ++ gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

48. (a <=* gv3 ++ l2 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

49. (a <=* gv3 ++ l1 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

50. (a <=* l1 ++ gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))

51. (a0 <=* a0 :: gv3 ->  a <= a0 ->  sorted gv3 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) gv3))



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 184.028 seconds

Number of Result Pairs Returned: 51

1. (sorted (a :: gv2) ->  a <= a0 -> sorted (a0 :: l2) -> sorted (a :: merge gv2 (a0 :: l2)))

2. (sorted (a0 :: l2) ->  a <= a0 -> sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) (a0 :: l2)))

3. (a <= a0 -> ~ a0 < a)
(~ a0 < a ->  sorted (a0 :: l2) ->  sorted (a :: n :: l1) -> sorted (a :: merge (n :: l1) (a0 :: l2)))

4. (sorted (merge l2 gv0) -> sorted gv0)

5. (sorted (merge gv0 l2) -> sorted gv0)
