Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (RB t Red n)

----------------------------------
Goal: (RB (ins k v t) Black n)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.879 seconds

gv1 : color = Black
gv0 : tree = (ins k v t)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 59.522 seconds

Label: Generalization #0
Assumptions: 
 -- (RB t Red n)

----------------------------------
Goal: (RB (ins k v t) Black n)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (RB t Red n)
 -- (ins k v t = gv0)

----------------------------------
Goal: (RB gv0 Black n)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (RB t Red n)
 -- (Black = gv1)

----------------------------------
Goal: (RB (ins k v t) gv1 n)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 59.666 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
value : Set
value_rect : (forall P : value -> Type,
 (forall n : nat, P (Positive n)) ->
 (forall n : nat, P (Negative n)) -> forall v : value, P v)
value_rec : (forall P : value -> Set,
 (forall n : nat, P (Positive n)) ->
 (forall n : nat, P (Negative n)) -> forall v : value, P v)
color : Set
color_rect : (forall P : color -> Type, P Red -> P Black -> forall c : color, P c)
color_rec : (forall P : color -> Set, P Red -> P Black -> forall c : color, P c)
tree : Set
tree_rect : (forall P : tree -> Type,
 P E ->
 (forall (c : color) (t : tree),
  P t -> forall (n : nat) (v : value) (t0 : tree), P t0 -> P (T c t n v t0)) ->
 forall t : tree, P t)
tree_rec : (forall P : tree -> Set,
 P E ->
 (forall (c : color) (t : tree),
  P t -> forall (n : nat) (v : value) (t0 : tree), P t0 -> P (T c t n v t0)) ->
 forall t : tree, P t)
empty_tree : tree
lookup : (value -> nat -> tree -> value)
balance : (color -> tree -> nat -> value -> tree -> tree)
ins : (nat -> value -> tree -> tree)
make_black : (tree -> tree)
insert : (nat -> value -> tree -> tree)
elements_tr : (tree -> list (nat * value) -> list (nat * value))
elements : (tree -> list (nat * value))
ForallT : ((nat -> value -> Prop) -> tree -> Prop)
BST : (tree -> Prop)
RB : (tree -> color -> nat -> Prop)
NearlyRB : (tree -> nat -> Prop)
height : (tree -> nat)
mindepth : (tree -> nat)
Positive : (nat -> value)
Negative : (nat -> value)
Red : color
Black : color
E : tree
T : (color -> tree -> nat -> value -> tree -> tree)

Label: 0 (0)
Abducted Assumption: (RB t Red n)
Positive Examples: 257
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 122
Negative Examples: 481

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 247
Negative Examples: 57


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 59.854 seconds


Label: 0 (0)
(NearlyRB t n), (NearlyRB t k), (BST t), (n < n), (n < k), (k < n), (k < k), (n <= n), (n <= k), (k <= n)
(k <= k), (t = t), (v = v), (n = n), (n = k), (k = n), (k = k), (NearlyRB t (mindepth t)), (NearlyRB t (height t)), (NearlyRB (insert n v t) n)
(NearlyRB (insert n v t) k), (NearlyRB (insert n v t) (mindepth t)), (NearlyRB (insert n v t) (height t)), (NearlyRB (insert k v t) n), (NearlyRB (insert k v t) k), (NearlyRB (insert k v t) (mindepth t)), (NearlyRB (insert k v t) (height t)), (NearlyRB (make_black t) n), (NearlyRB (make_black t) k), (NearlyRB (make_black t) (mindepth t))
(NearlyRB (make_black t) (height t)), (NearlyRB (ins n v t) n), (NearlyRB (ins n v t) k), (NearlyRB (ins n v t) (mindepth t)), (NearlyRB (ins n v t) (height t)), (NearlyRB (ins k v t) n), (NearlyRB (ins k v t) k), (NearlyRB (ins k v t) (mindepth t)), (NearlyRB (ins k v t) (height t)), (NearlyRB empty_tree n)
(NearlyRB empty_tree k), (NearlyRB empty_tree (mindepth t)), (NearlyRB empty_tree (height t)), (NearlyRB E n), (NearlyRB E k), (NearlyRB E (mindepth t)), (NearlyRB E (height t)), (RB t Red n), (RB t Red k), (RB t Red (mindepth t))
(RB t Red (height t)), (RB t Black n), (RB t Black k), (RB t Black (mindepth t)), (RB t Black (height t)), (RB (insert n v t) Red n), (RB (insert n v t) Red k), (RB (insert n v t) Red (mindepth t)), (RB (insert n v t) Red (height t)), (RB (insert n v t) Black n)
(RB (insert n v t) Black k), (RB (insert n v t) Black (mindepth t)), (RB (insert n v t) Black (height t)), (RB (insert k v t) Red n), (RB (insert k v t) Red k), (RB (insert k v t) Red (mindepth t)), (RB (insert k v t) Red (height t)), (RB (insert k v t) Black n), (RB (insert k v t) Black k), (RB (insert k v t) Black (mindepth t))
(RB (insert k v t) Black (height t)), (RB (make_black t) Red n), (RB (make_black t) Red k), (RB (make_black t) Red (mindepth t)), (RB (make_black t) Red (height t)), (RB (make_black t) Black n), (RB (make_black t) Black k), (RB (make_black t) Black (mindepth t)), (RB (make_black t) Black (height t)), (RB (ins n v t) Red n)
(RB (ins n v t) Red k), (RB (ins n v t) Red (mindepth t)), (RB (ins n v t) Red (height t)), (RB (ins n v t) Black n), (RB (ins n v t) Black k), (RB (ins n v t) Black (mindepth t)), (RB (ins n v t) Black (height t)), (RB (ins k v t) Red n), (RB (ins k v t) Red k), (RB (ins k v t) Red (mindepth t))
(RB (ins k v t) Red (height t)), (RB (ins k v t) Black n), (RB (ins k v t) Black k), (RB (ins k v t) Black (mindepth t)), (RB (ins k v t) Black (height t)), (RB empty_tree Red n), (RB empty_tree Red k), (RB empty_tree Red (mindepth t)), (RB empty_tree Red (height t)), (RB empty_tree Black n)
(RB empty_tree Black k), (RB empty_tree Black (mindepth t)), (RB empty_tree Black (height t)), (RB E Red n), (RB E Red k), (RB E Red (mindepth t)), (RB E Red (height t)), (RB E Black n), (RB E Black k), (RB E Black (mindepth t))
(RB E Black (height t)), (BST (insert n v t)), (BST (insert k v t)), (BST (make_black t)), (BST (ins n v t)), (BST (ins k v t)), (BST empty_tree), (BST E), (In (n, v) (elements t)), (In (k, v) (elements t))
(n < mindepth t), (n < height t), (k < mindepth t), (k < height t), (mindepth t < n), (mindepth t < k), (mindepth t < height t), (height t < n), (height t < k), (height t < mindepth t)
(n <= mindepth t), (n <= height t), (k <= mindepth t), (k <= height t), (mindepth t <= n), (mindepth t <= k), (mindepth t <= height t), (height t <= n), (height t <= k), (height t <= mindepth t)
(~ NearlyRB t n), (~ NearlyRB t k), (~ BST t), (~ n < n), (~ n < k), (~ k < n), (~ k < k), (~ n <= n), (~ n <= k), (~ k <= n)
(~ k <= k), (t <> t), (v <> v), (n <> n), (n <> k), (k <> n), (k <> k), (None = Some t), (None = Some v), (Negative n = v)
(Negative n = Positive n), (Negative n = Positive k), (Negative n = lookup v n t), (Negative n = lookup v k t), (Negative k = v), (Negative k = Positive n), (Negative k = Positive k), (Negative k = lookup v n t), (Negative k = lookup v k t), (Positive n = v)
(Positive n = lookup v n t), (Positive n = lookup v k t), (Positive k = v), (Positive k = lookup v n t), (Positive k = lookup v k t), (lookup v n t = v), (lookup v k t = v), (mindepth t = n), (mindepth t = k), (mindepth t = height t)
(height t = n), (height t = k), (None = Some n), (None = Some k), (insert n v t = t), (insert n v t = ins n v t), (insert n v t = ins k v t), (insert k v t = t), (insert k v t = ins n v t), (insert k v t = ins k v t)
(make_black t = t), (make_black t = insert n v t), (make_black t = insert k v t), (make_black t = ins n v t), (make_black t = ins k v t), (ins n v t = t), (ins k v t = t), (empty_tree = insert n v t), (empty_tree = insert k v t), (empty_tree = make_black t)
(empty_tree = ins n v t), (empty_tree = ins k v t), (E = insert n v t), (E = insert k v t), (E = make_black t), (E = ins n v t), (E = ins k v t)

Label: 1 (1)
(NearlyRB t k), (NearlyRB t n), (NearlyRB gv0 k), (NearlyRB gv0 n), (BST t), (BST gv0), (k < k), (k < n), (n < k), (n < n)
(k <= k), (k <= n), (n <= k), (n <= n), (v = v), (k = k), (k = n), (n = k), (n = n), (t = t)
(t = gv0), (gv0 = t), (gv0 = gv0), (NearlyRB t (mindepth t)), (NearlyRB t (mindepth gv0)), (NearlyRB t (height t)), (NearlyRB t (height gv0)), (NearlyRB gv0 (mindepth t)), (NearlyRB gv0 (mindepth gv0)), (NearlyRB gv0 (height t))
(NearlyRB gv0 (height gv0)), (NearlyRB (insert k v t) k), (NearlyRB (insert k v t) n), (NearlyRB (insert k v t) (mindepth t)), (NearlyRB (insert k v t) (mindepth gv0)), (NearlyRB (insert k v t) (height t)), (NearlyRB (insert k v t) (height gv0)), (NearlyRB (insert k v gv0) k), (NearlyRB (insert k v gv0) n), (NearlyRB (insert k v gv0) (mindepth t))
(NearlyRB (insert k v gv0) (mindepth gv0)), (NearlyRB (insert k v gv0) (height t)), (NearlyRB (insert k v gv0) (height gv0)), (NearlyRB (insert n v t) k), (NearlyRB (insert n v t) n), (NearlyRB (insert n v t) (mindepth t)), (NearlyRB (insert n v t) (mindepth gv0)), (NearlyRB (insert n v t) (height t)), (NearlyRB (insert n v t) (height gv0)), (NearlyRB (insert n v gv0) k)
(NearlyRB (insert n v gv0) n), (NearlyRB (insert n v gv0) (mindepth t)), (NearlyRB (insert n v gv0) (mindepth gv0)), (NearlyRB (insert n v gv0) (height t)), (NearlyRB (insert n v gv0) (height gv0)), (NearlyRB (make_black t) k), (NearlyRB (make_black t) n), (NearlyRB (make_black t) (mindepth t)), (NearlyRB (make_black t) (mindepth gv0)), (NearlyRB (make_black t) (height t))
(NearlyRB (make_black t) (height gv0)), (NearlyRB (make_black gv0) k), (NearlyRB (make_black gv0) n), (NearlyRB (make_black gv0) (mindepth t)), (NearlyRB (make_black gv0) (mindepth gv0)), (NearlyRB (make_black gv0) (height t)), (NearlyRB (make_black gv0) (height gv0)), (NearlyRB (ins k v t) k), (NearlyRB (ins k v t) n), (NearlyRB (ins k v t) (mindepth t))
(NearlyRB (ins k v t) (mindepth gv0)), (NearlyRB (ins k v t) (height t)), (NearlyRB (ins k v t) (height gv0)), (NearlyRB (ins k v gv0) k), (NearlyRB (ins k v gv0) n), (NearlyRB (ins k v gv0) (mindepth t)), (NearlyRB (ins k v gv0) (mindepth gv0)), (NearlyRB (ins k v gv0) (height t)), (NearlyRB (ins k v gv0) (height gv0)), (NearlyRB (ins n v t) k)
(NearlyRB (ins n v t) n), (NearlyRB (ins n v t) (mindepth t)), (NearlyRB (ins n v t) (mindepth gv0)), (NearlyRB (ins n v t) (height t)), (NearlyRB (ins n v t) (height gv0)), (NearlyRB (ins n v gv0) k), (NearlyRB (ins n v gv0) n), (NearlyRB (ins n v gv0) (mindepth t)), (NearlyRB (ins n v gv0) (mindepth gv0)), (NearlyRB (ins n v gv0) (height t))
(NearlyRB (ins n v gv0) (height gv0)), (NearlyRB empty_tree k), (NearlyRB empty_tree n), (NearlyRB empty_tree (mindepth t)), (NearlyRB empty_tree (mindepth gv0)), (NearlyRB empty_tree (height t)), (NearlyRB empty_tree (height gv0)), (NearlyRB E k), (NearlyRB E n), (NearlyRB E (mindepth t))
(NearlyRB E (mindepth gv0)), (NearlyRB E (height t)), (NearlyRB E (height gv0)), (RB t Red k), (RB t Red n), (RB t Red (mindepth t)), (RB t Red (mindepth gv0)), (RB t Red (height t)), (RB t Red (height gv0)), (RB t Black k)
(RB t Black n), (RB t Black (mindepth t)), (RB t Black (mindepth gv0)), (RB t Black (height t)), (RB t Black (height gv0)), (RB gv0 Red k), (RB gv0 Red n), (RB gv0 Red (mindepth t)), (RB gv0 Red (mindepth gv0)), (RB gv0 Red (height t))
(RB gv0 Red (height gv0)), (RB gv0 Black k), (RB gv0 Black n), (RB gv0 Black (mindepth t)), (RB gv0 Black (mindepth gv0)), (RB gv0 Black (height t)), (RB gv0 Black (height gv0)), (RB (insert k v t) Red k), (RB (insert k v t) Red n), (RB (insert k v t) Red (mindepth t))
(RB (insert k v t) Red (mindepth gv0)), (RB (insert k v t) Red (height t)), (RB (insert k v t) Red (height gv0)), (RB (insert k v t) Black k), (RB (insert k v t) Black n), (RB (insert k v t) Black (mindepth t)), (RB (insert k v t) Black (mindepth gv0)), (RB (insert k v t) Black (height t)), (RB (insert k v t) Black (height gv0)), (RB (insert k v gv0) Red k)
(RB (insert k v gv0) Red n), (RB (insert k v gv0) Red (mindepth t)), (RB (insert k v gv0) Red (mindepth gv0)), (RB (insert k v gv0) Red (height t)), (RB (insert k v gv0) Red (height gv0)), (RB (insert k v gv0) Black k), (RB (insert k v gv0) Black n), (RB (insert k v gv0) Black (mindepth t)), (RB (insert k v gv0) Black (mindepth gv0)), (RB (insert k v gv0) Black (height t))
(RB (insert k v gv0) Black (height gv0)), (RB (insert n v t) Red k), (RB (insert n v t) Red n), (RB (insert n v t) Red (mindepth t)), (RB (insert n v t) Red (mindepth gv0)), (RB (insert n v t) Red (height t)), (RB (insert n v t) Red (height gv0)), (RB (insert n v t) Black k), (RB (insert n v t) Black n), (RB (insert n v t) Black (mindepth t))
(RB (insert n v t) Black (mindepth gv0)), (RB (insert n v t) Black (height t)), (RB (insert n v t) Black (height gv0)), (RB (insert n v gv0) Red k), (RB (insert n v gv0) Red n), (RB (insert n v gv0) Red (mindepth t)), (RB (insert n v gv0) Red (mindepth gv0)), (RB (insert n v gv0) Red (height t)), (RB (insert n v gv0) Red (height gv0)), (RB (insert n v gv0) Black k)
(RB (insert n v gv0) Black n), (RB (insert n v gv0) Black (mindepth t)), (RB (insert n v gv0) Black (mindepth gv0)), (RB (insert n v gv0) Black (height t)), (RB (insert n v gv0) Black (height gv0)), (RB (make_black t) Red k), (RB (make_black t) Red n), (RB (make_black t) Red (mindepth t)), (RB (make_black t) Red (mindepth gv0)), (RB (make_black t) Red (height t))
(RB (make_black t) Red (height gv0)), (RB (make_black t) Black k), (RB (make_black t) Black n), (RB (make_black t) Black (mindepth t)), (RB (make_black t) Black (mindepth gv0)), (RB (make_black t) Black (height t)), (RB (make_black t) Black (height gv0)), (RB (make_black gv0) Red k), (RB (make_black gv0) Red n), (RB (make_black gv0) Red (mindepth t))
(RB (make_black gv0) Red (mindepth gv0)), (RB (make_black gv0) Red (height t)), (RB (make_black gv0) Red (height gv0)), (RB (make_black gv0) Black k), (RB (make_black gv0) Black n), (RB (make_black gv0) Black (mindepth t)), (RB (make_black gv0) Black (mindepth gv0)), (RB (make_black gv0) Black (height t)), (RB (make_black gv0) Black (height gv0)), (RB (ins k v t) Red k)
(RB (ins k v t) Red n), (RB (ins k v t) Red (mindepth t)), (RB (ins k v t) Red (mindepth gv0)), (RB (ins k v t) Red (height t)), (RB (ins k v t) Red (height gv0)), (RB (ins k v t) Black k), (RB (ins k v t) Black n), (RB (ins k v t) Black (mindepth t)), (RB (ins k v t) Black (mindepth gv0)), (RB (ins k v t) Black (height t))
(RB (ins k v t) Black (height gv0)), (RB (ins k v gv0) Red k), (RB (ins k v gv0) Red n), (RB (ins k v gv0) Red (mindepth t)), (RB (ins k v gv0) Red (mindepth gv0)), (RB (ins k v gv0) Red (height t)), (RB (ins k v gv0) Red (height gv0)), (RB (ins k v gv0) Black k), (RB (ins k v gv0) Black n), (RB (ins k v gv0) Black (mindepth t))
(RB (ins k v gv0) Black (mindepth gv0)), (RB (ins k v gv0) Black (height t)), (RB (ins k v gv0) Black (height gv0)), (RB (ins n v t) Red k), (RB (ins n v t) Red n), (RB (ins n v t) Red (mindepth t)), (RB (ins n v t) Red (mindepth gv0)), (RB (ins n v t) Red (height t)), (RB (ins n v t) Red (height gv0)), (RB (ins n v t) Black k)
(RB (ins n v t) Black n), (RB (ins n v t) Black (mindepth t)), (RB (ins n v t) Black (mindepth gv0)), (RB (ins n v t) Black (height t)), (RB (ins n v t) Black (height gv0)), (RB (ins n v gv0) Red k), (RB (ins n v gv0) Red n), (RB (ins n v gv0) Red (mindepth t)), (RB (ins n v gv0) Red (mindepth gv0)), (RB (ins n v gv0) Red (height t))
(RB (ins n v gv0) Red (height gv0)), (RB (ins n v gv0) Black k), (RB (ins n v gv0) Black n), (RB (ins n v gv0) Black (mindepth t)), (RB (ins n v gv0) Black (mindepth gv0)), (RB (ins n v gv0) Black (height t)), (RB (ins n v gv0) Black (height gv0)), (RB empty_tree Red k), (RB empty_tree Red n), (RB empty_tree Red (mindepth t))
(RB empty_tree Red (mindepth gv0)), (RB empty_tree Red (height t)), (RB empty_tree Red (height gv0)), (RB empty_tree Black k), (RB empty_tree Black n), (RB empty_tree Black (mindepth t)), (RB empty_tree Black (mindepth gv0)), (RB empty_tree Black (height t)), (RB empty_tree Black (height gv0)), (RB E Red k)
(RB E Red n), (RB E Red (mindepth t)), (RB E Red (mindepth gv0)), (RB E Red (height t)), (RB E Red (height gv0)), (RB E Black k), (RB E Black n), (RB E Black (mindepth t)), (RB E Black (mindepth gv0)), (RB E Black (height t))
(RB E Black (height gv0)), (BST (insert k v t)), (BST (insert k v gv0)), (BST (insert n v t)), (BST (insert n v gv0)), (BST (make_black t)), (BST (make_black gv0)), (BST (ins k v t)), (BST (ins k v gv0)), (BST (ins n v t))
(BST (ins n v gv0)), (BST empty_tree), (BST E), (In (k, v) (elements t)), (In (k, v) (elements gv0)), (In (n, v) (elements t)), (In (n, v) (elements gv0)), (k < mindepth t), (k < mindepth gv0), (k < height t)
(k < height gv0), (n < mindepth t), (n < mindepth gv0), (n < height t), (n < height gv0), (mindepth t < k), (mindepth t < n), (mindepth t < mindepth gv0), (mindepth t < height t), (mindepth t < height gv0)
(mindepth gv0 < k), (mindepth gv0 < n), (mindepth gv0 < mindepth t), (mindepth gv0 < height t), (mindepth gv0 < height gv0), (height t < k), (height t < n), (height t < mindepth t), (height t < mindepth gv0), (height t < height gv0)
(height gv0 < k), (height gv0 < n), (height gv0 < mindepth t), (height gv0 < mindepth gv0), (height gv0 < height t), (k <= mindepth t), (k <= mindepth gv0), (k <= height t), (k <= height gv0), (n <= mindepth t)
(n <= mindepth gv0), (n <= height t), (n <= height gv0), (mindepth t <= k), (mindepth t <= n), (mindepth t <= mindepth gv0), (mindepth t <= height t), (mindepth t <= height gv0), (mindepth gv0 <= k), (mindepth gv0 <= n)
(mindepth gv0 <= mindepth t), (mindepth gv0 <= height t), (mindepth gv0 <= height gv0), (height t <= k), (height t <= n), (height t <= mindepth t), (height t <= mindepth gv0), (height t <= height gv0), (height gv0 <= k), (height gv0 <= n)
(height gv0 <= mindepth t), (height gv0 <= mindepth gv0), (height gv0 <= height t), (~ NearlyRB t k), (~ NearlyRB t n), (~ NearlyRB gv0 k), (~ NearlyRB gv0 n), (~ BST t), (~ BST gv0), (~ k < k)
(~ k < n), (~ n < k), (~ n < n), (~ k <= k), (~ k <= n), (~ n <= k), (~ n <= n), (v <> v), (k <> k), (k <> n)
(n <> k), (n <> n), (t <> t), (t <> gv0), (gv0 <> t), (gv0 <> gv0), (None = Some t), (None = Some gv0), (None = Some v), (Negative k = v)
(Negative k = Positive k), (Negative k = Positive n), (Negative k = lookup v k t), (Negative k = lookup v k gv0), (Negative k = lookup v n t), (Negative k = lookup v n gv0), (Negative n = v), (Negative n = Positive k), (Negative n = Positive n), (Negative n = lookup v k t)
(Negative n = lookup v k gv0), (Negative n = lookup v n t), (Negative n = lookup v n gv0), (Positive k = v), (Positive k = lookup v k t), (Positive k = lookup v k gv0), (Positive k = lookup v n t), (Positive k = lookup v n gv0), (Positive n = v), (Positive n = lookup v k t)
(Positive n = lookup v k gv0), (Positive n = lookup v n t), (Positive n = lookup v n gv0), (lookup v k t = v), (lookup v k gv0 = v), (lookup v n t = v), (lookup v n gv0 = v), (mindepth t = k), (mindepth t = n), (mindepth t = height t)
(mindepth t = height gv0), (mindepth gv0 = k), (mindepth gv0 = n), (mindepth gv0 = height t), (mindepth gv0 = height gv0), (height t = k), (height t = n), (height gv0 = k), (height gv0 = n), (None = Some k)
(None = Some n), (insert k v t = t), (insert k v t = gv0), (insert k v t = ins k v t), (insert k v t = ins k v gv0), (insert k v t = ins n v t), (insert k v t = ins n v gv0), (insert k v gv0 = t), (insert k v gv0 = gv0), (insert k v gv0 = ins k v t)
(insert k v gv0 = ins k v gv0), (insert k v gv0 = ins n v t), (insert k v gv0 = ins n v gv0), (insert n v t = t), (insert n v t = gv0), (insert n v t = ins k v t), (insert n v t = ins k v gv0), (insert n v t = ins n v t), (insert n v t = ins n v gv0), (insert n v gv0 = t)
(insert n v gv0 = gv0), (insert n v gv0 = ins k v t), (insert n v gv0 = ins k v gv0), (insert n v gv0 = ins n v t), (insert n v gv0 = ins n v gv0), (make_black t = t), (make_black t = gv0), (make_black t = insert k v t), (make_black t = insert k v gv0), (make_black t = insert n v t)
(make_black t = insert n v gv0), (make_black t = ins k v t), (make_black t = ins k v gv0), (make_black t = ins n v t), (make_black t = ins n v gv0), (make_black gv0 = t), (make_black gv0 = gv0), (make_black gv0 = insert k v t), (make_black gv0 = insert k v gv0), (make_black gv0 = insert n v t)
(make_black gv0 = insert n v gv0), (make_black gv0 = ins k v t), (make_black gv0 = ins k v gv0), (make_black gv0 = ins n v t), (make_black gv0 = ins n v gv0), (ins k v t = t), (ins k v t = gv0), (ins k v gv0 = t), (ins k v gv0 = gv0), (ins n v t = t)
(ins n v t = gv0), (ins n v gv0 = t), (ins n v gv0 = gv0), (empty_tree = insert k v t), (empty_tree = insert k v gv0), (empty_tree = insert n v t), (empty_tree = insert n v gv0), (empty_tree = make_black t), (empty_tree = make_black gv0), (empty_tree = ins k v t)
(empty_tree = ins k v gv0), (empty_tree = ins n v t), (empty_tree = ins n v gv0), (E = insert k v t), (E = insert k v gv0), (E = insert n v t), (E = insert n v gv0), (E = make_black t), (E = make_black gv0), (E = ins k v t)
(E = ins k v gv0), (E = ins n v t), (E = ins n v gv0)

Label: 2 (2)
(NearlyRB t n), (NearlyRB t k), (RB t gv1 n), (RB t gv1 k), (BST t), (n < n), (n < k), (k < n), (k < k), (n <= n)
(n <= k), (k <= n), (k <= k), (gv1 = gv1), (t = t), (v = v), (n = n), (n = k), (k = n), (k = k)
(NearlyRB t (mindepth t)), (NearlyRB t (height t)), (NearlyRB (T gv1 t n v t) n), (NearlyRB (T gv1 t n v t) k), (NearlyRB (T gv1 t n v t) (mindepth t)), (NearlyRB (T gv1 t n v t) (height t)), (NearlyRB (T gv1 t k v t) n), (NearlyRB (T gv1 t k v t) k), (NearlyRB (T gv1 t k v t) (mindepth t)), (NearlyRB (T gv1 t k v t) (height t))
(NearlyRB (insert n v t) n), (NearlyRB (insert n v t) k), (NearlyRB (insert n v t) (mindepth t)), (NearlyRB (insert n v t) (height t)), (NearlyRB (insert k v t) n), (NearlyRB (insert k v t) k), (NearlyRB (insert k v t) (mindepth t)), (NearlyRB (insert k v t) (height t)), (NearlyRB (make_black t) n), (NearlyRB (make_black t) k)
(NearlyRB (make_black t) (mindepth t)), (NearlyRB (make_black t) (height t)), (NearlyRB (ins n v t) n), (NearlyRB (ins n v t) k), (NearlyRB (ins n v t) (mindepth t)), (NearlyRB (ins n v t) (height t)), (NearlyRB (ins k v t) n), (NearlyRB (ins k v t) k), (NearlyRB (ins k v t) (mindepth t)), (NearlyRB (ins k v t) (height t))
(NearlyRB (balance gv1 t n v t) n), (NearlyRB (balance gv1 t n v t) k), (NearlyRB (balance gv1 t n v t) (mindepth t)), (NearlyRB (balance gv1 t n v t) (height t)), (NearlyRB (balance gv1 t k v t) n), (NearlyRB (balance gv1 t k v t) k), (NearlyRB (balance gv1 t k v t) (mindepth t)), (NearlyRB (balance gv1 t k v t) (height t)), (NearlyRB empty_tree n), (NearlyRB empty_tree k)
(NearlyRB empty_tree (mindepth t)), (NearlyRB empty_tree (height t)), (NearlyRB E n), (NearlyRB E k), (NearlyRB E (mindepth t)), (NearlyRB E (height t)), (RB t gv1 (mindepth t)), (RB t gv1 (height t)), (RB t Red n), (RB t Red k)
(RB t Red (mindepth t)), (RB t Red (height t)), (RB t Black n), (RB t Black k), (RB t Black (mindepth t)), (RB t Black (height t)), (RB (T gv1 t n v t) gv1 n), (RB (T gv1 t n v t) gv1 k), (RB (T gv1 t n v t) gv1 (mindepth t)), (RB (T gv1 t n v t) gv1 (height t))
(RB (T gv1 t n v t) Red n), (RB (T gv1 t n v t) Red k), (RB (T gv1 t n v t) Red (mindepth t)), (RB (T gv1 t n v t) Red (height t)), (RB (T gv1 t n v t) Black n), (RB (T gv1 t n v t) Black k), (RB (T gv1 t n v t) Black (mindepth t)), (RB (T gv1 t n v t) Black (height t)), (RB (T gv1 t k v t) gv1 n), (RB (T gv1 t k v t) gv1 k)
(RB (T gv1 t k v t) gv1 (mindepth t)), (RB (T gv1 t k v t) gv1 (height t)), (RB (T gv1 t k v t) Red n), (RB (T gv1 t k v t) Red k), (RB (T gv1 t k v t) Red (mindepth t)), (RB (T gv1 t k v t) Red (height t)), (RB (T gv1 t k v t) Black n), (RB (T gv1 t k v t) Black k), (RB (T gv1 t k v t) Black (mindepth t)), (RB (T gv1 t k v t) Black (height t))
(RB (insert n v t) gv1 n), (RB (insert n v t) gv1 k), (RB (insert n v t) gv1 (mindepth t)), (RB (insert n v t) gv1 (height t)), (RB (insert n v t) Red n), (RB (insert n v t) Red k), (RB (insert n v t) Red (mindepth t)), (RB (insert n v t) Red (height t)), (RB (insert n v t) Black n), (RB (insert n v t) Black k)
(RB (insert n v t) Black (mindepth t)), (RB (insert n v t) Black (height t)), (RB (insert k v t) gv1 n), (RB (insert k v t) gv1 k), (RB (insert k v t) gv1 (mindepth t)), (RB (insert k v t) gv1 (height t)), (RB (insert k v t) Red n), (RB (insert k v t) Red k), (RB (insert k v t) Red (mindepth t)), (RB (insert k v t) Red (height t))
(RB (insert k v t) Black n), (RB (insert k v t) Black k), (RB (insert k v t) Black (mindepth t)), (RB (insert k v t) Black (height t)), (RB (make_black t) gv1 n), (RB (make_black t) gv1 k), (RB (make_black t) gv1 (mindepth t)), (RB (make_black t) gv1 (height t)), (RB (make_black t) Red n), (RB (make_black t) Red k)
(RB (make_black t) Red (mindepth t)), (RB (make_black t) Red (height t)), (RB (make_black t) Black n), (RB (make_black t) Black k), (RB (make_black t) Black (mindepth t)), (RB (make_black t) Black (height t)), (RB (ins n v t) gv1 n), (RB (ins n v t) gv1 k), (RB (ins n v t) gv1 (mindepth t)), (RB (ins n v t) gv1 (height t))
(RB (ins n v t) Red n), (RB (ins n v t) Red k), (RB (ins n v t) Red (mindepth t)), (RB (ins n v t) Red (height t)), (RB (ins n v t) Black n), (RB (ins n v t) Black k), (RB (ins n v t) Black (mindepth t)), (RB (ins n v t) Black (height t)), (RB (ins k v t) gv1 n), (RB (ins k v t) gv1 k)
(RB (ins k v t) gv1 (mindepth t)), (RB (ins k v t) gv1 (height t)), (RB (ins k v t) Red n), (RB (ins k v t) Red k), (RB (ins k v t) Red (mindepth t)), (RB (ins k v t) Red (height t)), (RB (ins k v t) Black n), (RB (ins k v t) Black k), (RB (ins k v t) Black (mindepth t)), (RB (ins k v t) Black (height t))
(RB (balance gv1 t n v t) gv1 n), (RB (balance gv1 t n v t) gv1 k), (RB (balance gv1 t n v t) gv1 (mindepth t)), (RB (balance gv1 t n v t) gv1 (height t)), (RB (balance gv1 t n v t) Red n), (RB (balance gv1 t n v t) Red k), (RB (balance gv1 t n v t) Red (mindepth t)), (RB (balance gv1 t n v t) Red (height t)), (RB (balance gv1 t n v t) Black n), (RB (balance gv1 t n v t) Black k)
(RB (balance gv1 t n v t) Black (mindepth t)), (RB (balance gv1 t n v t) Black (height t)), (RB (balance gv1 t k v t) gv1 n), (RB (balance gv1 t k v t) gv1 k), (RB (balance gv1 t k v t) gv1 (mindepth t)), (RB (balance gv1 t k v t) gv1 (height t)), (RB (balance gv1 t k v t) Red n), (RB (balance gv1 t k v t) Red k), (RB (balance gv1 t k v t) Red (mindepth t)), (RB (balance gv1 t k v t) Red (height t))
(RB (balance gv1 t k v t) Black n), (RB (balance gv1 t k v t) Black k), (RB (balance gv1 t k v t) Black (mindepth t)), (RB (balance gv1 t k v t) Black (height t)), (RB empty_tree gv1 n), (RB empty_tree gv1 k), (RB empty_tree gv1 (mindepth t)), (RB empty_tree gv1 (height t)), (RB empty_tree Red n), (RB empty_tree Red k)
(RB empty_tree Red (mindepth t)), (RB empty_tree Red (height t)), (RB empty_tree Black n), (RB empty_tree Black k), (RB empty_tree Black (mindepth t)), (RB empty_tree Black (height t)), (RB E gv1 n), (RB E gv1 k), (RB E gv1 (mindepth t)), (RB E gv1 (height t))
(RB E Red n), (RB E Red k), (RB E Red (mindepth t)), (RB E Red (height t)), (RB E Black n), (RB E Black k), (RB E Black (mindepth t)), (RB E Black (height t)), (BST (T gv1 t n v t)), (BST (T gv1 t k v t))
(BST (insert n v t)), (BST (insert k v t)), (BST (make_black t)), (BST (ins n v t)), (BST (ins k v t)), (BST (balance gv1 t n v t)), (BST (balance gv1 t k v t)), (BST empty_tree), (BST E), (In (n, v) (elements t))
(In (k, v) (elements t)), (n < mindepth t), (n < height t), (k < mindepth t), (k < height t), (mindepth t < n), (mindepth t < k), (mindepth t < height t), (height t < n), (height t < k)
(height t < mindepth t), (n <= mindepth t), (n <= height t), (k <= mindepth t), (k <= height t), (mindepth t <= n), (mindepth t <= k), (mindepth t <= height t), (height t <= n), (height t <= k)
(height t <= mindepth t), (~ NearlyRB t n), (~ NearlyRB t k), (~ RB t gv1 n), (~ RB t gv1 k), (~ BST t), (~ n < n), (~ n < k), (~ k < n), (~ k < k)
(~ n <= n), (~ n <= k), (~ k <= n), (~ k <= k), (gv1 <> gv1), (t <> t), (v <> v), (n <> n), (n <> k), (k <> n)
(k <> k), (None = Some v), (Negative n = v), (Negative n = Positive n), (Negative n = Positive k), (Negative n = lookup v n t), (Negative n = lookup v k t), (Negative k = v), (Negative k = Positive n), (Negative k = Positive k)
(Negative k = lookup v n t), (Negative k = lookup v k t), (Positive n = v), (Positive n = lookup v n t), (Positive n = lookup v k t), (Positive k = v), (Positive k = lookup v n t), (Positive k = lookup v k t), (lookup v n t = v), (lookup v k t = v)
(None = Some n), (None = Some k), (T gv1 t n v t = t), (T gv1 t n v t = insert n v t), (T gv1 t n v t = insert k v t), (T gv1 t n v t = make_black t), (T gv1 t n v t = ins n v t), (T gv1 t n v t = ins k v t), (T gv1 t n v t = balance gv1 t n v t), (T gv1 t n v t = balance gv1 t k v t)
(T gv1 t k v t = t), (T gv1 t k v t = insert n v t), (T gv1 t k v t = insert k v t), (T gv1 t k v t = make_black t), (T gv1 t k v t = ins n v t), (T gv1 t k v t = ins k v t), (T gv1 t k v t = balance gv1 t n v t), (T gv1 t k v t = balance gv1 t k v t), (insert n v t = t), (insert n v t = ins n v t)
(insert n v t = ins k v t), (insert n v t = balance gv1 t n v t), (insert n v t = balance gv1 t k v t), (insert k v t = t), (insert k v t = ins n v t), (insert k v t = ins k v t), (insert k v t = balance gv1 t n v t), (insert k v t = balance gv1 t k v t), (make_black t = t), (make_black t = insert n v t)
(make_black t = insert k v t), (make_black t = ins n v t), (make_black t = ins k v t), (make_black t = balance gv1 t n v t), (make_black t = balance gv1 t k v t), (ins n v t = t), (ins n v t = balance gv1 t n v t), (ins n v t = balance gv1 t k v t), (ins k v t = t), (ins k v t = balance gv1 t n v t)
(ins k v t = balance gv1 t k v t), (balance gv1 t n v t = t), (balance gv1 t k v t = t), (empty_tree = T gv1 t n v t), (empty_tree = T gv1 t k v t), (empty_tree = insert n v t), (empty_tree = insert k v t), (empty_tree = make_black t), (empty_tree = ins n v t), (empty_tree = ins k v t)
(empty_tree = balance gv1 t n v t), (empty_tree = balance gv1 t k v t), (E = T gv1 t n v t), (E = T gv1 t k v t), (E = insert n v t), (E = insert k v t), (E = make_black t), (E = ins n v t), (E = ins k v t), (E = balance gv1 t n v t)
(E = balance gv1 t k v t), (None = Some t), (None = Some gv1), (mindepth t = n), (mindepth t = k), (mindepth t = height t), (height t = n), (height t = k)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 79.528 seconds


Label: 0 (0)
(RB t Red n), (RB (ins k v t) Black n)

Label: 1 (1)
(RB gv0 Black n), (ins k v t = gv0), (RB (ins k v gv0) Black n)

Label: 2 (2)
(RB (ins n v t) gv1 n), (RB (ins k v t) gv1 n)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 108.716 seconds

Number of Result Pairs Returned: 3

1. (RB t Red n -> RB (ins k v t) Black n)
