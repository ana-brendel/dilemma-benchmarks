Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- ((forall v : value, ~ In (k, v) (elements l)) -> bound k l = false)
 -- (In (k, v0) (elements l))
 -- (BST r)
 -- (forall v0 : value, ~ In (k, v0) (elements l ++ (x, v) :: elements r))
 -- ((forall v : value, ~ In (k, v) (elements r)) -> bound k r = false)
 -- (ForallT (fun (y : nat) (_ : value) => y > x) r)
 -- (BST l)
 -- (k < x)
 -- (ForallT (fun (y : nat) (_ : value) => y < x) l)

----------------------------------
Goal: (In (k, v0) (elements l ++ (x, v) :: elements r))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 4.959 seconds

gv3 : (list (nat * value)) = ((x, v) :: elements r)
gv2 : (list (nat * value)) = (elements l)
gv0 : (nat * value)%type = (k, v0)
gv5 : (list (nat * value)) = (elements r)
gv4 : (nat * value)%type = (x, v)
gv1 : (list (nat * value)) = (elements l ++ (x, v) :: elements r)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 257.56 seconds

Label: Generalization #0
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ (x, v) :: elements r))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ (x, v) :: gv5))
Case: Valid and Generalized

Label: Generalization #2
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv4 :: gv5))
Case: Valid and Generalized

Label: Generalization #4
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ gv4 :: gv5))
Case: Valid and Generalized

Label: Generalization #5
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #6
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ gv4 :: gv5))
Case: Valid and Generalized

Label: Generalization #7
Assumptions: 
 -- (In (k, v0) (elements l))
 -- (elements l ++ (x, v) :: gv5 = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized

Label: Generalization #8
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ (x, v) :: gv5))
Case: Valid and Generalized

Label: Generalization #10
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #11
Assumptions: 
 -- (In gv0 gv2)

----------------------------------
Goal: (In gv0 (gv2 ++ (x, v) :: gv5))
Case: Valid and Generalized

Label: Generalization #12
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #14
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ gv3))
Case: Valid and Generalized

Label: Generalization #15
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ (x, v) :: gv5))
Case: Valid and Generalized

Label: Generalization #17
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv4 :: elements r))
Case: Valid and Generalized

Label: Generalization #18
Assumptions: 
 -- (In (k, v0) (elements l))
 -- (elements l ++ gv4 :: elements r = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized

Label: Generalization #19
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ gv4 :: elements r))
Case: Valid and Generalized

Label: Generalization #21
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #22
Assumptions: 
 -- (In gv0 gv2)

----------------------------------
Goal: (In gv0 (gv2 ++ gv4 :: elements r))
Case: Valid and Generalized

Label: Generalization #23
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #24
Assumptions: 
 -- (In (k, v0) (elements l))
 -- (elements l ++ gv3 = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized

Label: Generalization #25
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ gv3))
Case: Valid and Generalized

Label: Generalization #26
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ gv4 :: elements r))
Case: Valid and Generalized

Label: Generalization #28
Assumptions: 
 -- (In (k, v0) (elements l))
 -- (elements l ++ (x, v) :: elements r = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized

Label: Generalization #29
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ (x, v) :: elements r))
Case: Valid and Generalized

Label: Generalization #30
Assumptions: 
 -- (In gv0 (elements l))
 -- (elements l ++ (x, v) :: elements r = gv1)
 -- ((k, v0) = gv0)

----------------------------------
Goal: (In gv0 gv1)
Case: Invalid and Generalized

Label: Generalization #31
Assumptions: 
 -- (In gv0 (elements l))

----------------------------------
Goal: (In gv0 (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #33
Assumptions: 
 -- (In gv0 gv2)

----------------------------------
Goal: (In gv0 (gv2 ++ gv3))
Case: Valid and Generalized

Label: Generalization #34
Assumptions: 
 -- (In gv0 gv2)

----------------------------------
Goal: (In gv0 (gv2 ++ (x, v) :: elements r))
Case: Valid and Generalized

Label: Generalization #36
Assumptions: 
 -- (In (k, v0) (elements l))

----------------------------------
Goal: (In (k, v0) (elements l ++ gv3))
Case: Valid and Generalized

Label: Generalization #37
Assumptions: 
 -- (In (k, v0) (elements l))
 -- (elements l ++ gv3 = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized

Label: Generalization #38
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ gv3))
Case: Valid and Generalized

Label: Generalization #40
Assumptions: 
 -- (In (k, v0) gv2)

----------------------------------
Goal: (In (k, v0) (gv2 ++ (x, v) :: elements r))
Case: Valid and Generalized

Label: Generalization #41
Assumptions: 
 -- (In (k, v0) gv2)
 -- (gv2 ++ (x, v) :: elements r = gv1)

----------------------------------
Goal: (In (k, v0) gv1)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 257.76 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
Datatypes.length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
value : Set
value_rect : (forall P : value -> Type,
 P Red -> P Green -> P Blue -> forall v : value, P v)
value_rec : (forall P : value -> Set, P Red -> P Green -> P Blue -> forall v : value, P v)
tree : Set
tree_rect : (forall P : tree -> Type,
 P E ->
 (forall l : tree,
  P l -> forall (k : nat) (v : value) (r : tree), P r -> P (T l k v r)) ->
 forall t : tree, P t)
tree_rec : (forall P : tree -> Set,
 P E ->
 (forall l : tree,
  P l -> forall (k : nat) (v : value) (r : tree), P r -> P (T l k v r)) ->
 forall t : tree, P t)
empty_tree : tree
bound : (nat -> tree -> bool)
lookup : (value -> nat -> tree -> value)
insert : (nat -> value -> tree -> tree)
ForallT : ((nat -> value -> Prop) -> tree -> Prop)
BST : (tree -> Prop)
elements : (tree -> list (nat * value))
@uncurry : (forall X Y Z : Type, (X -> Y -> Z) -> X * Y -> Z)
@list_keys : (forall V : Type, list (nat * V) -> list nat)
@disjoint : (forall X : Type, list X -> list X -> Prop)
fast_elements_tr : (tree -> list (nat * value) -> list (nat * value))
fast_elements : (tree -> list (nat * value))
kvs_insert : (nat -> value -> list (nat * value) -> list (nat * value))
Red : value
Green : value
Blue : value
E : tree
T : (tree -> nat -> value -> tree -> tree)

Label: 0 (0)
Abducted Assumption: (In (k, v0) (elements l))
Positive Examples: 500
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 263
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 254
Negative Examples: 500

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 297
Negative Examples: 500

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 278
Negative Examples: 500

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 265
Negative Examples: 500

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 269
Negative Examples: 500

Label: 7 (7)
Inferring Condition About Generalization
Positive Examples: 123
Negative Examples: 500


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 258.084 seconds


Label: 0 (0)
(BST r), (BST l), (x < x), (x < k), (k < x), (k < k), (x <= x), (x <= k), (k <= x), (k <= k)
(r = r), (r = l), (l = r), (l = l), (v = v), (v = v0), (v0 = v), (v0 = v0), (x = x), (x = k)
(k = x), (k = k), (false = bound x r), (false = bound x l), (false = bound k r), (false = bound k l), (true = bound x r), (true = bound x l), (true = bound k r), (true = bound k l)
(disjoint (fast_elements r) (fast_elements l)), (disjoint (fast_elements r) (elements r)), (disjoint (fast_elements r) (elements l)), (disjoint (fast_elements l) (fast_elements r)), (disjoint (fast_elements l) (elements r)), (disjoint (fast_elements l) (elements l)), (disjoint (elements r) (fast_elements r)), (disjoint (elements r) (fast_elements l)), (disjoint (elements r) (elements l)), (disjoint (elements l) (fast_elements r))
(disjoint (elements l) (fast_elements l)), (disjoint (elements l) (elements r)), (BST (T r x v r)), (BST (T r x v l)), (BST (T r x v0 r)), (BST (T r x v0 l)), (BST (T r k v r)), (BST (T r k v l)), (BST (T r k v0 r)), (BST (T r k v0 l))
(BST (T l x v r)), (BST (T l x v l)), (BST (T l x v0 r)), (BST (T l x v0 l)), (BST (T l k v r)), (BST (T l k v l)), (BST (T l k v0 r)), (BST (T l k v0 l)), (BST (insert x v r)), (BST (insert x v l))
(BST (insert x v0 r)), (BST (insert x v0 l)), (BST (insert k v r)), (BST (insert k v l)), (BST (insert k v0 r)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (x <=* []), (k <=* [])
(sorted []), (Permutation (fast_elements r) (fast_elements l)), (Permutation (fast_elements r) (elements r)), (Permutation (fast_elements r) (elements l)), (Permutation (fast_elements l) (fast_elements r)), (Permutation (fast_elements l) (elements r)), (Permutation (fast_elements l) (elements l)), (Permutation (elements r) (fast_elements r)), (Permutation (elements r) (fast_elements l)), (Permutation (elements r) (elements l))
(Permutation (elements l) (fast_elements r)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (elements r)), (In (x, v) (fast_elements r)), (In (x, v) (fast_elements l)), (In (x, v) (elements r)), (In (x, v) (elements l)), (In (x, v0) (fast_elements r)), (In (x, v0) (fast_elements l)), (In (x, v0) (elements r))
(In (x, v0) (elements l)), (In (k, v) (fast_elements r)), (In (k, v) (fast_elements l)), (In (k, v) (elements r)), (In (k, v) (elements l)), (In (k, v0) (fast_elements r)), (In (k, v0) (fast_elements l)), (In (k, v0) (elements r)), (In (k, v0) (elements l)), (~ BST r)
(~ BST l), (~ x < x), (~ x < k), (~ k < x), (~ k < k), (~ x <= x), (~ x <= k), (~ k <= x), (~ k <= k), (r <> r)
(r <> l), (l <> r), (l <> l), (v <> v), (v <> v0), (v0 <> v), (v0 <> v0), (x <> x), (x <> k), (k <> x)
(k <> k), (lookup v x r = v), (lookup v x r = v0), (lookup v x l = v), (lookup v x l = v0), (lookup v k r = v), (lookup v k r = v0), (lookup v k l = v), (lookup v k l = v0), (lookup v0 x r = v)
(lookup v0 x r = v0), (lookup v0 x l = v), (lookup v0 x l = v0), (lookup v0 k r = v), (lookup v0 k r = v0), (lookup v0 k l = v), (lookup v0 k l = v0), (Red = lookup v x r), (Red = lookup v x l), (Red = lookup v k r)
(Red = lookup v k l), (Red = lookup v0 x r), (Red = lookup v0 x l), (Red = lookup v0 k r), (Red = lookup v0 k l), (Green = lookup v x r), (Green = lookup v x l), (Green = lookup v k r), (Green = lookup v k l), (Green = lookup v0 x r)
(Green = lookup v0 x l), (Green = lookup v0 k r), (Green = lookup v0 k l), (Blue = lookup v x r), (Blue = lookup v x l), (Blue = lookup v k r), (Blue = lookup v k l), (Blue = lookup v0 x r), (Blue = lookup v0 x l), (Blue = lookup v0 k r)
(Blue = lookup v0 k l), (fast_elements r = elements r), (fast_elements r = elements l), (fast_elements l = elements r), (fast_elements l = elements l), (None = Some x), (None = Some k), (None = Some r), (None = Some l), (T r x v r = r)
(T r x v r = l), (T r x v r = insert x v r), (T r x v r = insert x v l), (T r x v r = insert x v0 r), (T r x v r = insert x v0 l), (T r x v r = insert k v r), (T r x v r = insert k v l), (T r x v r = insert k v0 r), (T r x v r = insert k v0 l), (T r x v l = r)
(T r x v l = l), (T r x v l = insert x v r), (T r x v l = insert x v l), (T r x v l = insert x v0 r), (T r x v l = insert x v0 l), (T r x v l = insert k v r), (T r x v l = insert k v l), (T r x v l = insert k v0 r), (T r x v l = insert k v0 l), (T r x v0 r = r)
(T r x v0 r = l), (T r x v0 r = insert x v r), (T r x v0 r = insert x v l), (T r x v0 r = insert x v0 r), (T r x v0 r = insert x v0 l), (T r x v0 r = insert k v r), (T r x v0 r = insert k v l), (T r x v0 r = insert k v0 r), (T r x v0 r = insert k v0 l), (T r x v0 l = r)
(T r x v0 l = l), (T r x v0 l = insert x v r), (T r x v0 l = insert x v l), (T r x v0 l = insert x v0 r), (T r x v0 l = insert x v0 l), (T r x v0 l = insert k v r), (T r x v0 l = insert k v l), (T r x v0 l = insert k v0 r), (T r x v0 l = insert k v0 l), (T r k v r = r)
(T r k v r = l), (T r k v r = insert x v r), (T r k v r = insert x v l), (T r k v r = insert x v0 r), (T r k v r = insert x v0 l), (T r k v r = insert k v r), (T r k v r = insert k v l), (T r k v r = insert k v0 r), (T r k v r = insert k v0 l), (T r k v l = r)
(T r k v l = l), (T r k v l = insert x v r), (T r k v l = insert x v l), (T r k v l = insert x v0 r), (T r k v l = insert x v0 l), (T r k v l = insert k v r), (T r k v l = insert k v l), (T r k v l = insert k v0 r), (T r k v l = insert k v0 l), (T r k v0 r = r)
(T r k v0 r = l), (T r k v0 r = insert x v r), (T r k v0 r = insert x v l), (T r k v0 r = insert x v0 r), (T r k v0 r = insert x v0 l), (T r k v0 r = insert k v r), (T r k v0 r = insert k v l), (T r k v0 r = insert k v0 r), (T r k v0 r = insert k v0 l), (T r k v0 l = r)
(T r k v0 l = l), (T r k v0 l = insert x v r), (T r k v0 l = insert x v l), (T r k v0 l = insert x v0 r), (T r k v0 l = insert x v0 l), (T r k v0 l = insert k v r), (T r k v0 l = insert k v l), (T r k v0 l = insert k v0 r), (T r k v0 l = insert k v0 l), (T l x v r = r)
(T l x v r = l), (T l x v r = insert x v r), (T l x v r = insert x v l), (T l x v r = insert x v0 r), (T l x v r = insert x v0 l), (T l x v r = insert k v r), (T l x v r = insert k v l), (T l x v r = insert k v0 r), (T l x v r = insert k v0 l), (T l x v l = r)
(T l x v l = l), (T l x v l = insert x v r), (T l x v l = insert x v l), (T l x v l = insert x v0 r), (T l x v l = insert x v0 l), (T l x v l = insert k v r), (T l x v l = insert k v l), (T l x v l = insert k v0 r), (T l x v l = insert k v0 l), (T l x v0 r = r)
(T l x v0 r = l), (T l x v0 r = insert x v r), (T l x v0 r = insert x v l), (T l x v0 r = insert x v0 r), (T l x v0 r = insert x v0 l), (T l x v0 r = insert k v r), (T l x v0 r = insert k v l), (T l x v0 r = insert k v0 r), (T l x v0 r = insert k v0 l), (T l x v0 l = r)
(T l x v0 l = l), (T l x v0 l = insert x v r), (T l x v0 l = insert x v l), (T l x v0 l = insert x v0 r), (T l x v0 l = insert x v0 l), (T l x v0 l = insert k v r), (T l x v0 l = insert k v l), (T l x v0 l = insert k v0 r), (T l x v0 l = insert k v0 l), (T l k v r = r)
(T l k v r = l), (T l k v r = insert x v r), (T l k v r = insert x v l), (T l k v r = insert x v0 r), (T l k v r = insert x v0 l), (T l k v r = insert k v r), (T l k v r = insert k v l), (T l k v r = insert k v0 r), (T l k v r = insert k v0 l), (T l k v l = r)
(T l k v l = l), (T l k v l = insert x v r), (T l k v l = insert x v l), (T l k v l = insert x v0 r), (T l k v l = insert x v0 l), (T l k v l = insert k v r), (T l k v l = insert k v l), (T l k v l = insert k v0 r), (T l k v l = insert k v0 l), (T l k v0 r = r)
(T l k v0 r = l), (T l k v0 r = insert x v r), (T l k v0 r = insert x v l), (T l k v0 r = insert x v0 r), (T l k v0 r = insert x v0 l), (T l k v0 r = insert k v r), (T l k v0 r = insert k v l), (T l k v0 r = insert k v0 r), (T l k v0 r = insert k v0 l), (T l k v0 l = r)
(T l k v0 l = l), (T l k v0 l = insert x v r), (T l k v0 l = insert x v l), (T l k v0 l = insert x v0 r), (T l k v0 l = insert x v0 l), (T l k v0 l = insert k v r), (T l k v0 l = insert k v l), (T l k v0 l = insert k v0 r), (T l k v0 l = insert k v0 l), (insert x v r = r)
(insert x v r = l), (insert x v l = r), (insert x v l = l), (insert x v0 r = r), (insert x v0 r = l), (insert x v0 l = r), (insert x v0 l = l), (insert k v r = r), (insert k v r = l), (insert k v l = r)
(insert k v l = l), (insert k v0 r = r), (insert k v0 r = l), (insert k v0 l = r), (insert k v0 l = l), (empty_tree = T r x v r), (empty_tree = T r x v l), (empty_tree = T r x v0 r), (empty_tree = T r x v0 l), (empty_tree = T r k v r)
(empty_tree = T r k v l), (empty_tree = T r k v0 r), (empty_tree = T r k v0 l), (empty_tree = T l x v r), (empty_tree = T l x v l), (empty_tree = T l x v0 r), (empty_tree = T l x v0 l), (empty_tree = T l k v r), (empty_tree = T l k v l), (empty_tree = T l k v0 r)
(empty_tree = T l k v0 l), (empty_tree = insert x v r), (empty_tree = insert x v l), (empty_tree = insert x v0 r), (empty_tree = insert x v0 l), (empty_tree = insert k v r), (empty_tree = insert k v l), (empty_tree = insert k v0 r), (empty_tree = insert k v0 l), (E = T r x v r)
(E = T r x v l), (E = T r x v0 r), (E = T r x v0 l), (E = T r k v r), (E = T r k v l), (E = T r k v0 r), (E = T r k v0 l), (E = T l x v r), (E = T l x v l), (E = T l x v0 r)
(E = T l x v0 l), (E = T l k v r), (E = T l k v l), (E = T l k v0 r), (E = T l k v0 l), (E = insert x v r), (E = insert x v l), (E = insert x v0 r), (E = insert x v0 l), (E = insert k v r)
(E = insert k v l), (E = insert k v0 r), (E = insert k v0 l), (None = Some v), (None = Some v0)

Label: 1 (1)
(disjoint gv5 gv5), (disjoint gv5 gv1), (disjoint gv1 gv5), (disjoint gv1 gv1), (BST l), (Permutation gv5 gv5), (Permutation gv5 gv1), (Permutation gv1 gv5), (Permutation gv1 gv1), (x < x)
(x < k), (k < x), (k < k), (x <= x), (x <= k), (k <= x), (k <= k), (l = l), (gv5 = gv5), (gv5 = gv1)
(gv1 = gv5), (gv1 = gv1), (v = v), (v = v0), (v0 = v), (v0 = v0), (x = x), (x = k), (k = x), (k = k)
(false = bound x l), (false = bound k l), (true = bound x l), (true = bound k l), (disjoint (list_keys gv5) (list_keys gv1)), (disjoint (list_keys gv5) []), (disjoint (list_keys gv1) (list_keys gv5)), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv5)), (disjoint [] (list_keys gv1))
(disjoint gv5 (kvs_insert x v gv5)), (disjoint gv5 (kvs_insert x v gv1)), (disjoint gv5 (kvs_insert x v0 gv5)), (disjoint gv5 (kvs_insert x v0 gv1)), (disjoint gv5 (kvs_insert k v gv5)), (disjoint gv5 (kvs_insert k v gv1)), (disjoint gv5 (kvs_insert k v0 gv5)), (disjoint gv5 (kvs_insert k v0 gv1)), (disjoint gv5 (fast_elements l)), (disjoint gv5 (fast_elements_tr l gv5))
(disjoint gv5 (fast_elements_tr l gv1)), (disjoint gv5 (elements l)), (disjoint gv5 (gv5 ++ gv5)), (disjoint gv5 (gv5 ++ gv1)), (disjoint gv5 (gv1 ++ gv5)), (disjoint gv5 (gv1 ++ gv1)), (disjoint gv5 []), (disjoint gv1 (kvs_insert x v gv5)), (disjoint gv1 (kvs_insert x v gv1)), (disjoint gv1 (kvs_insert x v0 gv5))
(disjoint gv1 (kvs_insert x v0 gv1)), (disjoint gv1 (kvs_insert k v gv5)), (disjoint gv1 (kvs_insert k v gv1)), (disjoint gv1 (kvs_insert k v0 gv5)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements l)), (disjoint gv1 (fast_elements_tr l gv5)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements l)), (disjoint gv1 (gv5 ++ gv5))
(disjoint gv1 (gv5 ++ gv1)), (disjoint gv1 (gv1 ++ gv5)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 []), (disjoint (kvs_insert x v gv5) gv5), (disjoint (kvs_insert x v gv5) gv1), (disjoint (kvs_insert x v gv5) (kvs_insert x v gv1)), (disjoint (kvs_insert x v gv5) (kvs_insert x v0 gv5)), (disjoint (kvs_insert x v gv5) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv5) (kvs_insert k v gv5))
(disjoint (kvs_insert x v gv5) (kvs_insert k v gv1)), (disjoint (kvs_insert x v gv5) (kvs_insert k v0 gv5)), (disjoint (kvs_insert x v gv5) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv5) (fast_elements l)), (disjoint (kvs_insert x v gv5) (fast_elements_tr l gv5)), (disjoint (kvs_insert x v gv5) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v gv5) (elements l)), (disjoint (kvs_insert x v gv5) (gv5 ++ gv5)), (disjoint (kvs_insert x v gv5) (gv5 ++ gv1)), (disjoint (kvs_insert x v gv5) (gv1 ++ gv5))
(disjoint (kvs_insert x v gv5) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv5) []), (disjoint (kvs_insert x v gv1) gv5), (disjoint (kvs_insert x v gv1) gv1), (disjoint (kvs_insert x v gv1) (kvs_insert x v gv5)), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv5)), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv5)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv5))
(disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv1) (fast_elements l)), (disjoint (kvs_insert x v gv1) (fast_elements_tr l gv5)), (disjoint (kvs_insert x v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v gv1) (elements l)), (disjoint (kvs_insert x v gv1) (gv5 ++ gv5)), (disjoint (kvs_insert x v gv1) (gv5 ++ gv1)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv5)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv1) [])
(disjoint (kvs_insert x v0 gv5) gv5), (disjoint (kvs_insert x v0 gv5) gv1), (disjoint (kvs_insert x v0 gv5) (kvs_insert x v gv5)), (disjoint (kvs_insert x v0 gv5) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv5) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v0 gv5) (kvs_insert k v gv5)), (disjoint (kvs_insert x v0 gv5) (kvs_insert k v gv1)), (disjoint (kvs_insert x v0 gv5) (kvs_insert k v0 gv5)), (disjoint (kvs_insert x v0 gv5) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv5) (fast_elements l))
(disjoint (kvs_insert x v0 gv5) (fast_elements_tr l gv5)), (disjoint (kvs_insert x v0 gv5) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v0 gv5) (elements l)), (disjoint (kvs_insert x v0 gv5) (gv5 ++ gv5)), (disjoint (kvs_insert x v0 gv5) (gv5 ++ gv1)), (disjoint (kvs_insert x v0 gv5) (gv1 ++ gv5)), (disjoint (kvs_insert x v0 gv5) (gv1 ++ gv1)), (disjoint (kvs_insert x v0 gv5) []), (disjoint (kvs_insert x v0 gv1) gv5), (disjoint (kvs_insert x v0 gv1) gv1)
(disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv5)), (disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert x v0 gv5)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv5)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv5)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements l)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr l gv5)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr l gv1))
(disjoint (kvs_insert x v0 gv1) (elements l)), (disjoint (kvs_insert x v0 gv1) (gv5 ++ gv5)), (disjoint (kvs_insert x v0 gv1) (gv5 ++ gv1)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv5)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v0 gv1) []), (disjoint (kvs_insert k v gv5) gv5), (disjoint (kvs_insert k v gv5) gv1), (disjoint (kvs_insert k v gv5) (kvs_insert x v gv5)), (disjoint (kvs_insert k v gv5) (kvs_insert x v gv1))
(disjoint (kvs_insert k v gv5) (kvs_insert x v0 gv5)), (disjoint (kvs_insert k v gv5) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v gv5) (kvs_insert k v gv1)), (disjoint (kvs_insert k v gv5) (kvs_insert k v0 gv5)), (disjoint (kvs_insert k v gv5) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv5) (fast_elements l)), (disjoint (kvs_insert k v gv5) (fast_elements_tr l gv5)), (disjoint (kvs_insert k v gv5) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v gv5) (elements l)), (disjoint (kvs_insert k v gv5) (gv5 ++ gv5))
(disjoint (kvs_insert k v gv5) (gv5 ++ gv1)), (disjoint (kvs_insert k v gv5) (gv1 ++ gv5)), (disjoint (kvs_insert k v gv5) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv5) []), (disjoint (kvs_insert k v gv1) gv5), (disjoint (kvs_insert k v gv1) gv1), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv5)), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv5)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv1))
(disjoint (kvs_insert k v gv1) (kvs_insert k v gv5)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv5)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv1) (fast_elements l)), (disjoint (kvs_insert k v gv1) (fast_elements_tr l gv5)), (disjoint (kvs_insert k v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v gv1) (elements l)), (disjoint (kvs_insert k v gv1) (gv5 ++ gv5)), (disjoint (kvs_insert k v gv1) (gv5 ++ gv1)), (disjoint (kvs_insert k v gv1) (gv1 ++ gv5))
(disjoint (kvs_insert k v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv1) []), (disjoint (kvs_insert k v0 gv5) gv5), (disjoint (kvs_insert k v0 gv5) gv1), (disjoint (kvs_insert k v0 gv5) (kvs_insert x v gv5)), (disjoint (kvs_insert k v0 gv5) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv5) (kvs_insert x v0 gv5)), (disjoint (kvs_insert k v0 gv5) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv5) (kvs_insert k v gv5)), (disjoint (kvs_insert k v0 gv5) (kvs_insert k v gv1))
(disjoint (kvs_insert k v0 gv5) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v0 gv5) (fast_elements l)), (disjoint (kvs_insert k v0 gv5) (fast_elements_tr l gv5)), (disjoint (kvs_insert k v0 gv5) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv5) (elements l)), (disjoint (kvs_insert k v0 gv5) (gv5 ++ gv5)), (disjoint (kvs_insert k v0 gv5) (gv5 ++ gv1)), (disjoint (kvs_insert k v0 gv5) (gv1 ++ gv5)), (disjoint (kvs_insert k v0 gv5) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv5) [])
(disjoint (kvs_insert k v0 gv1) gv5), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv5)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv5)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv5)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v0 gv5)), (disjoint (kvs_insert k v0 gv1) (fast_elements l))
(disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv5)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv5 ++ gv5)), (disjoint (kvs_insert k v0 gv1) (gv5 ++ gv1)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv5)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements l) gv5), (disjoint (fast_elements l) gv1)
(disjoint (fast_elements l) (kvs_insert x v gv5)), (disjoint (fast_elements l) (kvs_insert x v gv1)), (disjoint (fast_elements l) (kvs_insert x v0 gv5)), (disjoint (fast_elements l) (kvs_insert x v0 gv1)), (disjoint (fast_elements l) (kvs_insert k v gv5)), (disjoint (fast_elements l) (kvs_insert k v gv1)), (disjoint (fast_elements l) (kvs_insert k v0 gv5)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv5)), (disjoint (fast_elements l) (fast_elements_tr l gv1))
(disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv5 ++ gv5)), (disjoint (fast_elements l) (gv5 ++ gv1)), (disjoint (fast_elements l) (gv1 ++ gv5)), (disjoint (fast_elements l) (gv1 ++ gv1)), (disjoint (fast_elements l) []), (disjoint (fast_elements_tr l gv5) gv5), (disjoint (fast_elements_tr l gv5) gv1), (disjoint (fast_elements_tr l gv5) (kvs_insert x v gv5)), (disjoint (fast_elements_tr l gv5) (kvs_insert x v gv1))
(disjoint (fast_elements_tr l gv5) (kvs_insert x v0 gv5)), (disjoint (fast_elements_tr l gv5) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr l gv5) (kvs_insert k v gv5)), (disjoint (fast_elements_tr l gv5) (kvs_insert k v gv1)), (disjoint (fast_elements_tr l gv5) (kvs_insert k v0 gv5)), (disjoint (fast_elements_tr l gv5) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv5) (fast_elements l)), (disjoint (fast_elements_tr l gv5) (fast_elements_tr l gv1)), (disjoint (fast_elements_tr l gv5) (elements l)), (disjoint (fast_elements_tr l gv5) (gv5 ++ gv5))
(disjoint (fast_elements_tr l gv5) (gv5 ++ gv1)), (disjoint (fast_elements_tr l gv5) (gv1 ++ gv5)), (disjoint (fast_elements_tr l gv5) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv5) []), (disjoint (fast_elements_tr l gv1) gv5), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (kvs_insert x v gv5)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v0 gv5)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v0 gv1))
(disjoint (fast_elements_tr l gv1) (kvs_insert k v gv5)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv5)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr l gv5)), (disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv5 ++ gv5)), (disjoint (fast_elements_tr l gv1) (gv5 ++ gv1)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv5))
(disjoint (fast_elements_tr l gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv1) []), (disjoint (elements l) gv5), (disjoint (elements l) gv1), (disjoint (elements l) (kvs_insert x v gv5)), (disjoint (elements l) (kvs_insert x v gv1)), (disjoint (elements l) (kvs_insert x v0 gv5)), (disjoint (elements l) (kvs_insert x v0 gv1)), (disjoint (elements l) (kvs_insert k v gv5)), (disjoint (elements l) (kvs_insert k v gv1))
(disjoint (elements l) (kvs_insert k v0 gv5)), (disjoint (elements l) (kvs_insert k v0 gv1)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr l gv5)), (disjoint (elements l) (fast_elements_tr l gv1)), (disjoint (elements l) (gv5 ++ gv5)), (disjoint (elements l) (gv5 ++ gv1)), (disjoint (elements l) (gv1 ++ gv5)), (disjoint (elements l) (gv1 ++ gv1)), (disjoint (elements l) [])
(disjoint (gv5 ++ gv5) gv5), (disjoint (gv5 ++ gv5) gv1), (disjoint (gv5 ++ gv5) (kvs_insert x v gv5)), (disjoint (gv5 ++ gv5) (kvs_insert x v gv1)), (disjoint (gv5 ++ gv5) (kvs_insert x v0 gv5)), (disjoint (gv5 ++ gv5) (kvs_insert x v0 gv1)), (disjoint (gv5 ++ gv5) (kvs_insert k v gv5)), (disjoint (gv5 ++ gv5) (kvs_insert k v gv1)), (disjoint (gv5 ++ gv5) (kvs_insert k v0 gv5)), (disjoint (gv5 ++ gv5) (kvs_insert k v0 gv1))
(disjoint (gv5 ++ gv5) (fast_elements l)), (disjoint (gv5 ++ gv5) (fast_elements_tr l gv5)), (disjoint (gv5 ++ gv5) (fast_elements_tr l gv1)), (disjoint (gv5 ++ gv5) (elements l)), (disjoint (gv5 ++ gv5) (gv5 ++ gv1)), (disjoint (gv5 ++ gv5) (gv1 ++ gv5)), (disjoint (gv5 ++ gv5) (gv1 ++ gv1)), (disjoint (gv5 ++ gv5) []), (disjoint (gv5 ++ gv1) gv5), (disjoint (gv5 ++ gv1) gv1)
(disjoint (gv5 ++ gv1) (kvs_insert x v gv5)), (disjoint (gv5 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv5 ++ gv1) (kvs_insert x v0 gv5)), (disjoint (gv5 ++ gv1) (kvs_insert x v0 gv1)), (disjoint (gv5 ++ gv1) (kvs_insert k v gv5)), (disjoint (gv5 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv5 ++ gv1) (kvs_insert k v0 gv5)), (disjoint (gv5 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv5 ++ gv1) (fast_elements l)), (disjoint (gv5 ++ gv1) (fast_elements_tr l gv5))
(disjoint (gv5 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv5 ++ gv1) (elements l)), (disjoint (gv5 ++ gv1) (gv5 ++ gv5)), (disjoint (gv5 ++ gv1) (gv1 ++ gv5)), (disjoint (gv5 ++ gv1) (gv1 ++ gv1)), (disjoint (gv5 ++ gv1) []), (disjoint (gv1 ++ gv5) gv5), (disjoint (gv1 ++ gv5) gv1), (disjoint (gv1 ++ gv5) (kvs_insert x v gv5)), (disjoint (gv1 ++ gv5) (kvs_insert x v gv1))
(disjoint (gv1 ++ gv5) (kvs_insert x v0 gv5)), (disjoint (gv1 ++ gv5) (kvs_insert x v0 gv1)), (disjoint (gv1 ++ gv5) (kvs_insert k v gv5)), (disjoint (gv1 ++ gv5) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv5) (kvs_insert k v0 gv5)), (disjoint (gv1 ++ gv5) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv5) (fast_elements l)), (disjoint (gv1 ++ gv5) (fast_elements_tr l gv5)), (disjoint (gv1 ++ gv5) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv5) (elements l))
(disjoint (gv1 ++ gv5) (gv5 ++ gv5)), (disjoint (gv1 ++ gv5) (gv5 ++ gv1)), (disjoint (gv1 ++ gv5) (gv1 ++ gv1)), (disjoint (gv1 ++ gv5) []), (disjoint (gv1 ++ gv1) gv5), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (kvs_insert x v gv5)), (disjoint (gv1 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv5)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv1))
(disjoint (gv1 ++ gv1) (kvs_insert k v gv5)), (disjoint (gv1 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv5)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv5)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements l)), (disjoint (gv1 ++ gv1) (gv5 ++ gv5)), (disjoint (gv1 ++ gv1) (gv5 ++ gv1))
(disjoint (gv1 ++ gv1) (gv1 ++ gv5)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv5), (disjoint [] gv1), (disjoint [] (kvs_insert x v gv5)), (disjoint [] (kvs_insert x v gv1)), (disjoint [] (kvs_insert x v0 gv5)), (disjoint [] (kvs_insert x v0 gv1)), (disjoint [] (kvs_insert k v gv5)), (disjoint [] (kvs_insert k v gv1))
(disjoint [] (kvs_insert k v0 gv5)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr l gv5)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements l)), (disjoint [] (gv5 ++ gv5)), (disjoint [] (gv5 ++ gv1)), (disjoint [] (gv1 ++ gv5)), (disjoint [] (gv1 ++ gv1))
(BST (T l x v l)), (BST (T l x v0 l)), (BST (T l k v l)), (BST (T l k v0 l)), (BST (insert x v l)), (BST (insert x v0 l)), (BST (insert k v l)), (BST (insert k v0 l)), (BST empty_tree), (BST E)
(x <=* list_keys gv5), (x <=* list_keys gv1), (x <=* []), (k <=* list_keys gv5), (k <=* list_keys gv1), (k <=* []), (Datatypes.length gv5 <=* list_keys gv5), (Datatypes.length gv5 <=* list_keys gv1), (Datatypes.length gv5 <=* []), (Datatypes.length gv1 <=* list_keys gv5)
(Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv5)), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv5) (list_keys gv1)), (Permutation (list_keys gv5) []), (Permutation (list_keys gv1) (list_keys gv5)), (Permutation (list_keys gv1) []), (Permutation [] (list_keys gv5))
(Permutation [] (list_keys gv1)), (Permutation gv5 (kvs_insert x v gv5)), (Permutation gv5 (kvs_insert x v gv1)), (Permutation gv5 (kvs_insert x v0 gv5)), (Permutation gv5 (kvs_insert x v0 gv1)), (Permutation gv5 (kvs_insert k v gv5)), (Permutation gv5 (kvs_insert k v gv1)), (Permutation gv5 (kvs_insert k v0 gv5)), (Permutation gv5 (kvs_insert k v0 gv1)), (Permutation gv5 (fast_elements l))
(Permutation gv5 (fast_elements_tr l gv5)), (Permutation gv5 (fast_elements_tr l gv1)), (Permutation gv5 (elements l)), (Permutation gv5 (gv5 ++ gv5)), (Permutation gv5 (gv5 ++ gv1)), (Permutation gv5 (gv1 ++ gv5)), (Permutation gv5 (gv1 ++ gv1)), (Permutation gv5 []), (Permutation gv1 (kvs_insert x v gv5)), (Permutation gv1 (kvs_insert x v gv1))
(Permutation gv1 (kvs_insert x v0 gv5)), (Permutation gv1 (kvs_insert x v0 gv1)), (Permutation gv1 (kvs_insert k v gv5)), (Permutation gv1 (kvs_insert k v gv1)), (Permutation gv1 (kvs_insert k v0 gv5)), (Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr l gv5)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements l))
(Permutation gv1 (gv5 ++ gv5)), (Permutation gv1 (gv5 ++ gv1)), (Permutation gv1 (gv1 ++ gv5)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (kvs_insert x v gv5) gv5), (Permutation (kvs_insert x v gv5) gv1), (Permutation (kvs_insert x v gv5) (kvs_insert x v gv1)), (Permutation (kvs_insert x v gv5) (kvs_insert x v0 gv5)), (Permutation (kvs_insert x v gv5) (kvs_insert x v0 gv1))
(Permutation (kvs_insert x v gv5) (kvs_insert k v gv5)), (Permutation (kvs_insert x v gv5) (kvs_insert k v gv1)), (Permutation (kvs_insert x v gv5) (kvs_insert k v0 gv5)), (Permutation (kvs_insert x v gv5) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv5) (fast_elements l)), (Permutation (kvs_insert x v gv5) (fast_elements_tr l gv5)), (Permutation (kvs_insert x v gv5) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v gv5) (elements l)), (Permutation (kvs_insert x v gv5) (gv5 ++ gv5)), (Permutation (kvs_insert x v gv5) (gv5 ++ gv1))
(Permutation (kvs_insert x v gv5) (gv1 ++ gv5)), (Permutation (kvs_insert x v gv5) (gv1 ++ gv1)), (Permutation (kvs_insert x v gv5) []), (Permutation (kvs_insert x v gv1) gv5), (Permutation (kvs_insert x v gv1) gv1), (Permutation (kvs_insert x v gv1) (kvs_insert x v gv5)), (Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv5)), (Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv5)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv1))
(Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv5)), (Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv1) (fast_elements l)), (Permutation (kvs_insert x v gv1) (fast_elements_tr l gv5)), (Permutation (kvs_insert x v gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v gv1) (elements l)), (Permutation (kvs_insert x v gv1) (gv5 ++ gv5)), (Permutation (kvs_insert x v gv1) (gv5 ++ gv1)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv5)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv1))
(Permutation (kvs_insert x v gv1) []), (Permutation (kvs_insert x v0 gv5) gv5), (Permutation (kvs_insert x v0 gv5) gv1), (Permutation (kvs_insert x v0 gv5) (kvs_insert x v gv5)), (Permutation (kvs_insert x v0 gv5) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv5) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v0 gv5) (kvs_insert k v gv5)), (Permutation (kvs_insert x v0 gv5) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv5) (kvs_insert k v0 gv5)), (Permutation (kvs_insert x v0 gv5) (kvs_insert k v0 gv1))
(Permutation (kvs_insert x v0 gv5) (fast_elements l)), (Permutation (kvs_insert x v0 gv5) (fast_elements_tr l gv5)), (Permutation (kvs_insert x v0 gv5) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v0 gv5) (elements l)), (Permutation (kvs_insert x v0 gv5) (gv5 ++ gv5)), (Permutation (kvs_insert x v0 gv5) (gv5 ++ gv1)), (Permutation (kvs_insert x v0 gv5) (gv1 ++ gv5)), (Permutation (kvs_insert x v0 gv5) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv5) []), (Permutation (kvs_insert x v0 gv1) gv5)
(Permutation (kvs_insert x v0 gv1) gv1), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv5)), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v0 gv5)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv5)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv5)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements l)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr l gv5))
(Permutation (kvs_insert x v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v0 gv1) (elements l)), (Permutation (kvs_insert x v0 gv1) (gv5 ++ gv5)), (Permutation (kvs_insert x v0 gv1) (gv5 ++ gv1)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv5)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv1) []), (Permutation (kvs_insert k v gv5) gv5), (Permutation (kvs_insert k v gv5) gv1), (Permutation (kvs_insert k v gv5) (kvs_insert x v gv5))
(Permutation (kvs_insert k v gv5) (kvs_insert x v gv1)), (Permutation (kvs_insert k v gv5) (kvs_insert x v0 gv5)), (Permutation (kvs_insert k v gv5) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv5) (kvs_insert k v gv1)), (Permutation (kvs_insert k v gv5) (kvs_insert k v0 gv5)), (Permutation (kvs_insert k v gv5) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv5) (fast_elements l)), (Permutation (kvs_insert k v gv5) (fast_elements_tr l gv5)), (Permutation (kvs_insert k v gv5) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v gv5) (elements l))
(Permutation (kvs_insert k v gv5) (gv5 ++ gv5)), (Permutation (kvs_insert k v gv5) (gv5 ++ gv1)), (Permutation (kvs_insert k v gv5) (gv1 ++ gv5)), (Permutation (kvs_insert k v gv5) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv5) []), (Permutation (kvs_insert k v gv1) gv5), (Permutation (kvs_insert k v gv1) gv1), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv5)), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv5))
(Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert k v gv5)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv5)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv1) (fast_elements l)), (Permutation (kvs_insert k v gv1) (fast_elements_tr l gv5)), (Permutation (kvs_insert k v gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v gv1) (elements l)), (Permutation (kvs_insert k v gv1) (gv5 ++ gv5)), (Permutation (kvs_insert k v gv1) (gv5 ++ gv1))
(Permutation (kvs_insert k v gv1) (gv1 ++ gv5)), (Permutation (kvs_insert k v gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv1) []), (Permutation (kvs_insert k v0 gv5) gv5), (Permutation (kvs_insert k v0 gv5) gv1), (Permutation (kvs_insert k v0 gv5) (kvs_insert x v gv5)), (Permutation (kvs_insert k v0 gv5) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv5) (kvs_insert x v0 gv5)), (Permutation (kvs_insert k v0 gv5) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv5) (kvs_insert k v gv5))
(Permutation (kvs_insert k v0 gv5) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv5) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v0 gv5) (fast_elements l)), (Permutation (kvs_insert k v0 gv5) (fast_elements_tr l gv5)), (Permutation (kvs_insert k v0 gv5) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv5) (elements l)), (Permutation (kvs_insert k v0 gv5) (gv5 ++ gv5)), (Permutation (kvs_insert k v0 gv5) (gv5 ++ gv1)), (Permutation (kvs_insert k v0 gv5) (gv1 ++ gv5)), (Permutation (kvs_insert k v0 gv5) (gv1 ++ gv1))
(Permutation (kvs_insert k v0 gv5) []), (Permutation (kvs_insert k v0 gv1) gv5), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv5)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv5)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv5)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v0 gv5))
(Permutation (kvs_insert k v0 gv1) (fast_elements l)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv5)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv5 ++ gv5)), (Permutation (kvs_insert k v0 gv1) (gv5 ++ gv1)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv5)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements l) gv5)
(Permutation (fast_elements l) gv1), (Permutation (fast_elements l) (kvs_insert x v gv5)), (Permutation (fast_elements l) (kvs_insert x v gv1)), (Permutation (fast_elements l) (kvs_insert x v0 gv5)), (Permutation (fast_elements l) (kvs_insert x v0 gv1)), (Permutation (fast_elements l) (kvs_insert k v gv5)), (Permutation (fast_elements l) (kvs_insert k v gv1)), (Permutation (fast_elements l) (kvs_insert k v0 gv5)), (Permutation (fast_elements l) (kvs_insert k v0 gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv5))
(Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv5 ++ gv5)), (Permutation (fast_elements l) (gv5 ++ gv1)), (Permutation (fast_elements l) (gv1 ++ gv5)), (Permutation (fast_elements l) (gv1 ++ gv1)), (Permutation (fast_elements l) []), (Permutation (fast_elements_tr l gv5) gv5), (Permutation (fast_elements_tr l gv5) gv1), (Permutation (fast_elements_tr l gv5) (kvs_insert x v gv5))
(Permutation (fast_elements_tr l gv5) (kvs_insert x v gv1)), (Permutation (fast_elements_tr l gv5) (kvs_insert x v0 gv5)), (Permutation (fast_elements_tr l gv5) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr l gv5) (kvs_insert k v gv5)), (Permutation (fast_elements_tr l gv5) (kvs_insert k v gv1)), (Permutation (fast_elements_tr l gv5) (kvs_insert k v0 gv5)), (Permutation (fast_elements_tr l gv5) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv5) (fast_elements l)), (Permutation (fast_elements_tr l gv5) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr l gv5) (elements l))
(Permutation (fast_elements_tr l gv5) (gv5 ++ gv5)), (Permutation (fast_elements_tr l gv5) (gv5 ++ gv1)), (Permutation (fast_elements_tr l gv5) (gv1 ++ gv5)), (Permutation (fast_elements_tr l gv5) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv5) []), (Permutation (fast_elements_tr l gv1) gv5), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (kvs_insert x v gv5)), (Permutation (fast_elements_tr l gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert x v0 gv5))
(Permutation (fast_elements_tr l gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v gv5)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv5)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv1) (fast_elements l)), (Permutation (fast_elements_tr l gv1) (fast_elements_tr l gv5)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv5 ++ gv5)), (Permutation (fast_elements_tr l gv1) (gv5 ++ gv1))
(Permutation (fast_elements_tr l gv1) (gv1 ++ gv5)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements l) gv5), (Permutation (elements l) gv1), (Permutation (elements l) (kvs_insert x v gv5)), (Permutation (elements l) (kvs_insert x v gv1)), (Permutation (elements l) (kvs_insert x v0 gv5)), (Permutation (elements l) (kvs_insert x v0 gv1)), (Permutation (elements l) (kvs_insert k v gv5))
(Permutation (elements l) (kvs_insert k v gv1)), (Permutation (elements l) (kvs_insert k v0 gv5)), (Permutation (elements l) (kvs_insert k v0 gv1)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr l gv5)), (Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (gv5 ++ gv5)), (Permutation (elements l) (gv5 ++ gv1)), (Permutation (elements l) (gv1 ++ gv5)), (Permutation (elements l) (gv1 ++ gv1))
(Permutation (elements l) []), (Permutation (gv5 ++ gv5) gv5), (Permutation (gv5 ++ gv5) gv1), (Permutation (gv5 ++ gv5) (kvs_insert x v gv5)), (Permutation (gv5 ++ gv5) (kvs_insert x v gv1)), (Permutation (gv5 ++ gv5) (kvs_insert x v0 gv5)), (Permutation (gv5 ++ gv5) (kvs_insert x v0 gv1)), (Permutation (gv5 ++ gv5) (kvs_insert k v gv5)), (Permutation (gv5 ++ gv5) (kvs_insert k v gv1)), (Permutation (gv5 ++ gv5) (kvs_insert k v0 gv5))
(Permutation (gv5 ++ gv5) (kvs_insert k v0 gv1)), (Permutation (gv5 ++ gv5) (fast_elements l)), (Permutation (gv5 ++ gv5) (fast_elements_tr l gv5)), (Permutation (gv5 ++ gv5) (fast_elements_tr l gv1)), (Permutation (gv5 ++ gv5) (elements l)), (Permutation (gv5 ++ gv5) (gv5 ++ gv1)), (Permutation (gv5 ++ gv5) (gv1 ++ gv5)), (Permutation (gv5 ++ gv5) (gv1 ++ gv1)), (Permutation (gv5 ++ gv5) []), (Permutation (gv5 ++ gv1) gv5)
(Permutation (gv5 ++ gv1) gv1), (Permutation (gv5 ++ gv1) (kvs_insert x v gv5)), (Permutation (gv5 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv5 ++ gv1) (kvs_insert x v0 gv5)), (Permutation (gv5 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv5 ++ gv1) (kvs_insert k v gv5)), (Permutation (gv5 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv5 ++ gv1) (kvs_insert k v0 gv5)), (Permutation (gv5 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv5 ++ gv1) (fast_elements l))
(Permutation (gv5 ++ gv1) (fast_elements_tr l gv5)), (Permutation (gv5 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv5 ++ gv1) (elements l)), (Permutation (gv5 ++ gv1) (gv5 ++ gv5)), (Permutation (gv5 ++ gv1) (gv1 ++ gv5)), (Permutation (gv5 ++ gv1) (gv1 ++ gv1)), (Permutation (gv5 ++ gv1) []), (Permutation (gv1 ++ gv5) gv5), (Permutation (gv1 ++ gv5) gv1), (Permutation (gv1 ++ gv5) (kvs_insert x v gv5))
(Permutation (gv1 ++ gv5) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv5) (kvs_insert x v0 gv5)), (Permutation (gv1 ++ gv5) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv5) (kvs_insert k v gv5)), (Permutation (gv1 ++ gv5) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv5) (kvs_insert k v0 gv5)), (Permutation (gv1 ++ gv5) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv5) (fast_elements l)), (Permutation (gv1 ++ gv5) (fast_elements_tr l gv5)), (Permutation (gv1 ++ gv5) (fast_elements_tr l gv1))
(Permutation (gv1 ++ gv5) (elements l)), (Permutation (gv1 ++ gv5) (gv5 ++ gv5)), (Permutation (gv1 ++ gv5) (gv5 ++ gv1)), (Permutation (gv1 ++ gv5) (gv1 ++ gv1)), (Permutation (gv1 ++ gv5) []), (Permutation (gv1 ++ gv1) gv5), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (kvs_insert x v gv5)), (Permutation (gv1 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert x v0 gv5))
(Permutation (gv1 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv5)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv5)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv5)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements l)), (Permutation (gv1 ++ gv1) (gv5 ++ gv5))
(Permutation (gv1 ++ gv1) (gv5 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ gv5)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv5), (Permutation [] gv1), (Permutation [] (kvs_insert x v gv5)), (Permutation [] (kvs_insert x v gv1)), (Permutation [] (kvs_insert x v0 gv5)), (Permutation [] (kvs_insert x v0 gv1)), (Permutation [] (kvs_insert k v gv5))
(Permutation [] (kvs_insert k v gv1)), (Permutation [] (kvs_insert k v0 gv5)), (Permutation [] (kvs_insert k v0 gv1)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr l gv5)), (Permutation [] (fast_elements_tr l gv1)), (Permutation [] (elements l)), (Permutation [] (gv5 ++ gv5)), (Permutation [] (gv5 ++ gv1)), (Permutation [] (gv1 ++ gv5))
(Permutation [] (gv1 ++ gv1)), (In x (list_keys gv5)), (In x (list_keys gv1)), (In k (list_keys gv5)), (In k (list_keys gv1)), (In (Datatypes.length gv5) (list_keys gv5)), (In (Datatypes.length gv5) (list_keys gv1)), (In (Datatypes.length gv1) (list_keys gv5)), (In (Datatypes.length gv1) (list_keys gv1)), (In (x, v) gv5)
(In (x, v) gv1), (In (x, v) (kvs_insert x v gv5)), (In (x, v) (kvs_insert x v gv1)), (In (x, v) (kvs_insert x v0 gv5)), (In (x, v) (kvs_insert x v0 gv1)), (In (x, v) (kvs_insert k v gv5)), (In (x, v) (kvs_insert k v gv1)), (In (x, v) (kvs_insert k v0 gv5)), (In (x, v) (kvs_insert k v0 gv1)), (In (x, v) (fast_elements l))
(In (x, v) (fast_elements_tr l gv5)), (In (x, v) (fast_elements_tr l gv1)), (In (x, v) (elements l)), (In (x, v) (gv5 ++ gv5)), (In (x, v) (gv5 ++ gv1)), (In (x, v) (gv1 ++ gv5)), (In (x, v) (gv1 ++ gv1)), (In (x, v0) gv5), (In (x, v0) gv1), (In (x, v0) (kvs_insert x v gv5))
(In (x, v0) (kvs_insert x v gv1)), (In (x, v0) (kvs_insert x v0 gv5)), (In (x, v0) (kvs_insert x v0 gv1)), (In (x, v0) (kvs_insert k v gv5)), (In (x, v0) (kvs_insert k v gv1)), (In (x, v0) (kvs_insert k v0 gv5)), (In (x, v0) (kvs_insert k v0 gv1)), (In (x, v0) (fast_elements l)), (In (x, v0) (fast_elements_tr l gv5)), (In (x, v0) (fast_elements_tr l gv1))
(In (x, v0) (elements l)), (In (x, v0) (gv5 ++ gv5)), (In (x, v0) (gv5 ++ gv1)), (In (x, v0) (gv1 ++ gv5)), (In (x, v0) (gv1 ++ gv1)), (In (k, v) gv5), (In (k, v) gv1), (In (k, v) (kvs_insert x v gv5)), (In (k, v) (kvs_insert x v gv1)), (In (k, v) (kvs_insert x v0 gv5))
(In (k, v) (kvs_insert x v0 gv1)), (In (k, v) (kvs_insert k v gv5)), (In (k, v) (kvs_insert k v gv1)), (In (k, v) (kvs_insert k v0 gv5)), (In (k, v) (kvs_insert k v0 gv1)), (In (k, v) (fast_elements l)), (In (k, v) (fast_elements_tr l gv5)), (In (k, v) (fast_elements_tr l gv1)), (In (k, v) (elements l)), (In (k, v) (gv5 ++ gv5))
(In (k, v) (gv5 ++ gv1)), (In (k, v) (gv1 ++ gv5)), (In (k, v) (gv1 ++ gv1)), (In (k, v0) gv5), (In (k, v0) gv1), (In (k, v0) (kvs_insert x v gv5)), (In (k, v0) (kvs_insert x v gv1)), (In (k, v0) (kvs_insert x v0 gv5)), (In (k, v0) (kvs_insert x v0 gv1)), (In (k, v0) (kvs_insert k v gv5))
(In (k, v0) (kvs_insert k v gv1)), (In (k, v0) (kvs_insert k v0 gv5)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr l gv5)), (In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements l)), (In (k, v0) (gv5 ++ gv5)), (In (k, v0) (gv5 ++ gv1)), (In (k, v0) (gv1 ++ gv5))
(In (k, v0) (gv1 ++ gv1)), (x < Datatypes.length gv5), (x < Datatypes.length gv1), (k < Datatypes.length gv5), (k < Datatypes.length gv1), (Datatypes.length gv5 < x), (Datatypes.length gv5 < k), (Datatypes.length gv5 < Datatypes.length gv1), (Datatypes.length gv1 < x), (Datatypes.length gv1 < k)
(Datatypes.length gv1 < Datatypes.length gv5), (x <= Datatypes.length gv5), (x <= Datatypes.length gv1), (k <= Datatypes.length gv5), (k <= Datatypes.length gv1), (Datatypes.length gv5 <= x), (Datatypes.length gv5 <= k), (Datatypes.length gv5 <= Datatypes.length gv1), (Datatypes.length gv1 <= x), (Datatypes.length gv1 <= k)
(Datatypes.length gv1 <= Datatypes.length gv5), (~ disjoint gv5 gv5), (~ disjoint gv5 gv1), (~ disjoint gv1 gv5), (~ disjoint gv1 gv1), (~ BST l), (~ Permutation gv5 gv5), (~ Permutation gv5 gv1), (~ Permutation gv1 gv5), (~ Permutation gv1 gv1)
(~ x < x), (~ x < k), (~ k < x), (~ k < k), (~ x <= x), (~ x <= k), (~ k <= x), (~ k <= k), (l <> l), (gv5 <> gv5)
(gv5 <> gv1), (gv1 <> gv5), (gv1 <> gv1), (v <> v), (v <> v0), (v0 <> v), (v0 <> v0), (x <> x), (x <> k), (k <> x)
(k <> k), (kvs_insert x v gv5 = gv5), (kvs_insert x v gv5 = gv1), (kvs_insert x v gv5 = fast_elements l), (kvs_insert x v gv5 = fast_elements_tr l gv5), (kvs_insert x v gv5 = fast_elements_tr l gv1), (kvs_insert x v gv5 = elements l), (kvs_insert x v gv5 = gv5 ++ gv5), (kvs_insert x v gv5 = gv5 ++ gv1), (kvs_insert x v gv5 = gv1 ++ gv5)
(kvs_insert x v gv5 = gv1 ++ gv1), (kvs_insert x v gv1 = gv5), (kvs_insert x v gv1 = gv1), (kvs_insert x v gv1 = fast_elements l), (kvs_insert x v gv1 = fast_elements_tr l gv5), (kvs_insert x v gv1 = fast_elements_tr l gv1), (kvs_insert x v gv1 = elements l), (kvs_insert x v gv1 = gv5 ++ gv5), (kvs_insert x v gv1 = gv5 ++ gv1), (kvs_insert x v gv1 = gv1 ++ gv5)
(kvs_insert x v gv1 = gv1 ++ gv1), (kvs_insert x v0 gv5 = gv5), (kvs_insert x v0 gv5 = gv1), (kvs_insert x v0 gv5 = fast_elements l), (kvs_insert x v0 gv5 = fast_elements_tr l gv5), (kvs_insert x v0 gv5 = fast_elements_tr l gv1), (kvs_insert x v0 gv5 = elements l), (kvs_insert x v0 gv5 = gv5 ++ gv5), (kvs_insert x v0 gv5 = gv5 ++ gv1), (kvs_insert x v0 gv5 = gv1 ++ gv5)
(kvs_insert x v0 gv5 = gv1 ++ gv1), (kvs_insert x v0 gv1 = gv5), (kvs_insert x v0 gv1 = gv1), (kvs_insert x v0 gv1 = fast_elements l), (kvs_insert x v0 gv1 = fast_elements_tr l gv5), (kvs_insert x v0 gv1 = fast_elements_tr l gv1), (kvs_insert x v0 gv1 = elements l), (kvs_insert x v0 gv1 = gv5 ++ gv5), (kvs_insert x v0 gv1 = gv5 ++ gv1), (kvs_insert x v0 gv1 = gv1 ++ gv5)
(kvs_insert x v0 gv1 = gv1 ++ gv1), (kvs_insert k v gv5 = gv5), (kvs_insert k v gv5 = gv1), (kvs_insert k v gv5 = fast_elements l), (kvs_insert k v gv5 = fast_elements_tr l gv5), (kvs_insert k v gv5 = fast_elements_tr l gv1), (kvs_insert k v gv5 = elements l), (kvs_insert k v gv5 = gv5 ++ gv5), (kvs_insert k v gv5 = gv5 ++ gv1), (kvs_insert k v gv5 = gv1 ++ gv5)
(kvs_insert k v gv5 = gv1 ++ gv1), (kvs_insert k v gv1 = gv5), (kvs_insert k v gv1 = gv1), (kvs_insert k v gv1 = fast_elements l), (kvs_insert k v gv1 = fast_elements_tr l gv5), (kvs_insert k v gv1 = fast_elements_tr l gv1), (kvs_insert k v gv1 = elements l), (kvs_insert k v gv1 = gv5 ++ gv5), (kvs_insert k v gv1 = gv5 ++ gv1), (kvs_insert k v gv1 = gv1 ++ gv5)
(kvs_insert k v gv1 = gv1 ++ gv1), (kvs_insert k v0 gv5 = gv5), (kvs_insert k v0 gv5 = gv1), (kvs_insert k v0 gv5 = fast_elements l), (kvs_insert k v0 gv5 = fast_elements_tr l gv5), (kvs_insert k v0 gv5 = fast_elements_tr l gv1), (kvs_insert k v0 gv5 = elements l), (kvs_insert k v0 gv5 = gv5 ++ gv5), (kvs_insert k v0 gv5 = gv5 ++ gv1), (kvs_insert k v0 gv5 = gv1 ++ gv5)
(kvs_insert k v0 gv5 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv5), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements l), (kvs_insert k v0 gv1 = fast_elements_tr l gv5), (kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements l), (kvs_insert k v0 gv1 = gv5 ++ gv5), (kvs_insert k v0 gv1 = gv5 ++ gv1), (kvs_insert k v0 gv1 = gv1 ++ gv5)
(kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements l = gv5), (fast_elements l = gv1), (fast_elements l = elements l), (fast_elements l = gv5 ++ gv5), (fast_elements l = gv5 ++ gv1), (fast_elements l = gv1 ++ gv5), (fast_elements l = gv1 ++ gv1), (fast_elements_tr l gv5 = gv5), (fast_elements_tr l gv5 = gv1)
(fast_elements_tr l gv5 = fast_elements l), (fast_elements_tr l gv5 = elements l), (fast_elements_tr l gv5 = gv5 ++ gv5), (fast_elements_tr l gv5 = gv5 ++ gv1), (fast_elements_tr l gv5 = gv1 ++ gv5), (fast_elements_tr l gv5 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv5), (fast_elements_tr l gv1 = gv1), (fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements l)
(fast_elements_tr l gv1 = gv5 ++ gv5), (fast_elements_tr l gv1 = gv5 ++ gv1), (fast_elements_tr l gv1 = gv1 ++ gv5), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements l = gv5), (elements l = gv1), (elements l = gv5 ++ gv5), (elements l = gv5 ++ gv1), (elements l = gv1 ++ gv5), (elements l = gv1 ++ gv1)
(gv5 ++ gv5 = gv5), (gv5 ++ gv5 = gv1), (gv5 ++ gv1 = gv5), (gv5 ++ gv1 = gv1), (gv1 ++ gv5 = gv5), (gv1 ++ gv5 = gv1), (gv1 ++ gv1 = gv5), (gv1 ++ gv1 = gv1), ([] = gv5), ([] = gv1)
([] = kvs_insert x v gv5), ([] = kvs_insert x v gv1), ([] = kvs_insert x v0 gv5), ([] = kvs_insert x v0 gv1), ([] = kvs_insert k v gv5), ([] = kvs_insert k v gv1), ([] = kvs_insert k v0 gv5), ([] = kvs_insert k v0 gv1), ([] = fast_elements l), ([] = fast_elements_tr l gv5)
([] = fast_elements_tr l gv1), ([] = elements l), ([] = gv5 ++ gv5), ([] = gv5 ++ gv1), ([] = gv1 ++ gv5), ([] = gv1 ++ gv1), ([] = list_keys gv5), ([] = list_keys gv1), (None = Some x), (None = Some k)
(None = Some gv5), (None = Some gv1), (lookup v x l = v), (lookup v x l = v0), (lookup v k l = v), (lookup v k l = v0), (lookup v0 x l = v), (lookup v0 x l = v0), (lookup v0 k l = v), (lookup v0 k l = v0)
(Red = lookup v x l), (Red = lookup v k l), (Red = lookup v0 x l), (Red = lookup v0 k l), (Green = lookup v x l), (Green = lookup v k l), (Green = lookup v0 x l), (Green = lookup v0 k l), (Blue = lookup v x l), (Blue = lookup v k l)
(Blue = lookup v0 x l), (Blue = lookup v0 k l), (Datatypes.length gv5 = x), (Datatypes.length gv5 = k), (Datatypes.length gv1 = x), (Datatypes.length gv1 = k), (None = Some l), (T l x v l = l), (T l x v l = insert x v l), (T l x v l = insert x v0 l)
(T l x v l = insert k v l), (T l x v l = insert k v0 l), (T l x v0 l = l), (T l x v0 l = insert x v l), (T l x v0 l = insert x v0 l), (T l x v0 l = insert k v l), (T l x v0 l = insert k v0 l), (T l k v l = l), (T l k v l = insert x v l), (T l k v l = insert x v0 l)
(T l k v l = insert k v l), (T l k v l = insert k v0 l), (T l k v0 l = l), (T l k v0 l = insert x v l), (T l k v0 l = insert x v0 l), (T l k v0 l = insert k v l), (T l k v0 l = insert k v0 l), (insert x v l = l), (insert x v0 l = l), (insert k v l = l)
(insert k v0 l = l), (empty_tree = T l x v l), (empty_tree = T l x v0 l), (empty_tree = T l k v l), (empty_tree = T l k v0 l), (empty_tree = insert x v l), (empty_tree = insert x v0 l), (empty_tree = insert k v l), (empty_tree = insert k v0 l), (E = T l x v l)
(E = T l x v0 l), (E = T l k v l), (E = T l k v0 l), (E = insert x v l), (E = insert x v0 l), (E = insert k v l), (E = insert k v0 l), (None = Some v), (None = Some v0)

Label: 2 (2)
(disjoint gv1 gv1), (BST r), (BST l), (Permutation gv1 gv1), (In gv4 gv1), (k < k), (k <= k), (gv4 = gv4), (r = r), (r = l)
(l = r), (l = l), (gv1 = gv1), (v0 = v0), (k = k), (false = bound k r), (false = bound k l), (true = bound k r), (true = bound k l), (disjoint (list_keys gv1) [])
(disjoint [] (list_keys gv1)), (disjoint gv1 (gv4 :: gv1)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements r)), (disjoint gv1 (fast_elements l)), (disjoint gv1 (fast_elements_tr r gv1)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements r)), (disjoint gv1 (elements l)), (disjoint gv1 (gv1 ++ gv1))
(disjoint gv1 []), (disjoint (gv4 :: gv1) gv1), (disjoint (gv4 :: gv1) (kvs_insert k v0 gv1)), (disjoint (gv4 :: gv1) (fast_elements r)), (disjoint (gv4 :: gv1) (fast_elements l)), (disjoint (gv4 :: gv1) (fast_elements_tr r gv1)), (disjoint (gv4 :: gv1) (fast_elements_tr l gv1)), (disjoint (gv4 :: gv1) (elements r)), (disjoint (gv4 :: gv1) (elements l)), (disjoint (gv4 :: gv1) (gv1 ++ gv1))
(disjoint (gv4 :: gv1) []), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (gv4 :: gv1)), (disjoint (kvs_insert k v0 gv1) (fast_elements r)), (disjoint (kvs_insert k v0 gv1) (fast_elements l)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements r)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1))
(disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements r) gv1), (disjoint (fast_elements r) (gv4 :: gv1)), (disjoint (fast_elements r) (kvs_insert k v0 gv1)), (disjoint (fast_elements r) (fast_elements l)), (disjoint (fast_elements r) (fast_elements_tr r gv1)), (disjoint (fast_elements r) (fast_elements_tr l gv1)), (disjoint (fast_elements r) (elements r)), (disjoint (fast_elements r) (elements l)), (disjoint (fast_elements r) (gv1 ++ gv1))
(disjoint (fast_elements r) []), (disjoint (fast_elements l) gv1), (disjoint (fast_elements l) (gv4 :: gv1)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements r)), (disjoint (fast_elements l) (fast_elements_tr r gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv1)), (disjoint (fast_elements l) (elements r)), (disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv1 ++ gv1))
(disjoint (fast_elements l) []), (disjoint (fast_elements_tr r gv1) gv1), (disjoint (fast_elements_tr r gv1) (gv4 :: gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr r gv1) (fast_elements r)), (disjoint (fast_elements_tr r gv1) (fast_elements l)), (disjoint (fast_elements_tr r gv1) (fast_elements_tr l gv1)), (disjoint (fast_elements_tr r gv1) (elements r)), (disjoint (fast_elements_tr r gv1) (elements l)), (disjoint (fast_elements_tr r gv1) (gv1 ++ gv1))
(disjoint (fast_elements_tr r gv1) []), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (gv4 :: gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv1) (fast_elements r)), (disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (disjoint (fast_elements_tr l gv1) (elements r)), (disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv1))
(disjoint (fast_elements_tr l gv1) []), (disjoint (elements r) gv1), (disjoint (elements r) (gv4 :: gv1)), (disjoint (elements r) (kvs_insert k v0 gv1)), (disjoint (elements r) (fast_elements r)), (disjoint (elements r) (fast_elements l)), (disjoint (elements r) (fast_elements_tr r gv1)), (disjoint (elements r) (fast_elements_tr l gv1)), (disjoint (elements r) (elements l)), (disjoint (elements r) (gv1 ++ gv1))
(disjoint (elements r) []), (disjoint (elements l) gv1), (disjoint (elements l) (gv4 :: gv1)), (disjoint (elements l) (kvs_insert k v0 gv1)), (disjoint (elements l) (fast_elements r)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr r gv1)), (disjoint (elements l) (fast_elements_tr l gv1)), (disjoint (elements l) (elements r)), (disjoint (elements l) (gv1 ++ gv1))
(disjoint (elements l) []), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (gv4 :: gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv1) (fast_elements r)), (disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr r gv1)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements r)), (disjoint (gv1 ++ gv1) (elements l))
(disjoint (gv1 ++ gv1) []), (disjoint [] gv1), (disjoint [] (gv4 :: gv1)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements r)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr r gv1)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements r)), (disjoint [] (elements l))
(disjoint [] (gv1 ++ gv1)), (BST (T r k v0 r)), (BST (T r k v0 l)), (BST (T l k v0 r)), (BST (T l k v0 l)), (BST (insert k v0 r)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (k <=* list_keys gv1)
(k <=* []), (Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv1) []), (Permutation [] (list_keys gv1)), (Permutation gv1 (gv4 :: gv1)), (Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements r))
(Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr r gv1)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements r)), (Permutation gv1 (elements l)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (gv4 :: gv1) gv1), (Permutation (gv4 :: gv1) (kvs_insert k v0 gv1)), (Permutation (gv4 :: gv1) (fast_elements r))
(Permutation (gv4 :: gv1) (fast_elements l)), (Permutation (gv4 :: gv1) (fast_elements_tr r gv1)), (Permutation (gv4 :: gv1) (fast_elements_tr l gv1)), (Permutation (gv4 :: gv1) (elements r)), (Permutation (gv4 :: gv1) (elements l)), (Permutation (gv4 :: gv1) (gv1 ++ gv1)), (Permutation (gv4 :: gv1) []), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (gv4 :: gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements r))
(Permutation (kvs_insert k v0 gv1) (fast_elements l)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements r)), (Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements r) gv1), (Permutation (fast_elements r) (gv4 :: gv1)), (Permutation (fast_elements r) (kvs_insert k v0 gv1))
(Permutation (fast_elements r) (fast_elements l)), (Permutation (fast_elements r) (fast_elements_tr r gv1)), (Permutation (fast_elements r) (fast_elements_tr l gv1)), (Permutation (fast_elements r) (elements r)), (Permutation (fast_elements r) (elements l)), (Permutation (fast_elements r) (gv1 ++ gv1)), (Permutation (fast_elements r) []), (Permutation (fast_elements l) gv1), (Permutation (fast_elements l) (gv4 :: gv1)), (Permutation (fast_elements l) (kvs_insert k v0 gv1))
(Permutation (fast_elements l) (fast_elements r)), (Permutation (fast_elements l) (fast_elements_tr r gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements r)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv1 ++ gv1)), (Permutation (fast_elements l) []), (Permutation (fast_elements_tr r gv1) gv1), (Permutation (fast_elements_tr r gv1) (gv4 :: gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v0 gv1))
(Permutation (fast_elements_tr r gv1) (fast_elements r)), (Permutation (fast_elements_tr r gv1) (fast_elements l)), (Permutation (fast_elements_tr r gv1) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr r gv1) (elements r)), (Permutation (fast_elements_tr r gv1) (elements l)), (Permutation (fast_elements_tr r gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr r gv1) []), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (gv4 :: gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1))
(Permutation (fast_elements_tr l gv1) (fast_elements r)), (Permutation (fast_elements_tr l gv1) (fast_elements l)), (Permutation (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (Permutation (fast_elements_tr l gv1) (elements r)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements r) gv1), (Permutation (elements r) (gv4 :: gv1)), (Permutation (elements r) (kvs_insert k v0 gv1))
(Permutation (elements r) (fast_elements r)), (Permutation (elements r) (fast_elements l)), (Permutation (elements r) (fast_elements_tr r gv1)), (Permutation (elements r) (fast_elements_tr l gv1)), (Permutation (elements r) (elements l)), (Permutation (elements r) (gv1 ++ gv1)), (Permutation (elements r) []), (Permutation (elements l) gv1), (Permutation (elements l) (gv4 :: gv1)), (Permutation (elements l) (kvs_insert k v0 gv1))
(Permutation (elements l) (fast_elements r)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr r gv1)), (Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (elements r)), (Permutation (elements l) (gv1 ++ gv1)), (Permutation (elements l) []), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (gv4 :: gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1))
(Permutation (gv1 ++ gv1) (fast_elements r)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr r gv1)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements r)), (Permutation (gv1 ++ gv1) (elements l)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (gv4 :: gv1)), (Permutation [] (kvs_insert k v0 gv1))
(Permutation [] (fast_elements r)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr r gv1)), (Permutation [] (fast_elements_tr l gv1)), (Permutation [] (elements r)), (Permutation [] (elements l)), (Permutation [] (gv1 ++ gv1)), (In k (list_keys gv1)), (In (Datatypes.length gv1) (list_keys gv1)), (In gv4 (gv4 :: gv1))
(In gv4 (kvs_insert k v0 gv1)), (In gv4 (fast_elements r)), (In gv4 (fast_elements l)), (In gv4 (fast_elements_tr r gv1)), (In gv4 (fast_elements_tr l gv1)), (In gv4 (elements r)), (In gv4 (elements l)), (In gv4 (gv1 ++ gv1)), (In (k, v0) gv1), (In (k, v0) (gv4 :: gv1))
(In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements r)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr r gv1)), (In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements r)), (In (k, v0) (elements l)), (In (k, v0) (gv1 ++ gv1)), (k < Datatypes.length gv1), (Datatypes.length gv1 < k)
(k <= Datatypes.length gv1), (Datatypes.length gv1 <= k), (~ disjoint gv1 gv1), (~ BST r), (~ BST l), (~ Permutation gv1 gv1), (~ In gv4 gv1), (~ k < k), (~ k <= k), (gv4 <> gv4)
(r <> r), (r <> l), (l <> r), (l <> l), (gv1 <> gv1), (v0 <> v0), (k <> k), (gv4 :: gv1 = gv1), (gv4 :: gv1 = kvs_insert k v0 gv1), (gv4 :: gv1 = fast_elements r)
(gv4 :: gv1 = fast_elements l), (gv4 :: gv1 = fast_elements_tr r gv1), (gv4 :: gv1 = fast_elements_tr l gv1), (gv4 :: gv1 = elements r), (gv4 :: gv1 = elements l), (gv4 :: gv1 = gv1 ++ gv1), (gv4 :: gv1 = []), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements r), (kvs_insert k v0 gv1 = fast_elements l)
(kvs_insert k v0 gv1 = fast_elements_tr r gv1), (kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements r), (kvs_insert k v0 gv1 = elements l), (kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements r = gv1), (fast_elements r = elements r), (fast_elements r = elements l), (fast_elements r = gv1 ++ gv1), (fast_elements l = gv1)
(fast_elements l = elements r), (fast_elements l = elements l), (fast_elements l = gv1 ++ gv1), (fast_elements_tr r gv1 = gv1), (fast_elements_tr r gv1 = fast_elements r), (fast_elements_tr r gv1 = fast_elements l), (fast_elements_tr r gv1 = elements r), (fast_elements_tr r gv1 = elements l), (fast_elements_tr r gv1 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv1)
(fast_elements_tr l gv1 = fast_elements r), (fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements r), (fast_elements_tr l gv1 = elements l), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements r = gv1), (elements r = gv1 ++ gv1), (elements l = gv1), (elements l = gv1 ++ gv1), (gv1 ++ gv1 = gv1)
([] = gv1), ([] = kvs_insert k v0 gv1), ([] = fast_elements r), ([] = fast_elements l), ([] = fast_elements_tr r gv1), ([] = fast_elements_tr l gv1), ([] = elements r), ([] = elements l), ([] = gv1 ++ gv1), ([] = list_keys gv1)
(None = Some k), (None = Some gv1), (None = Some gv4), (lookup v0 k r = v0), (lookup v0 k l = v0), (Red = lookup v0 k r), (Red = lookup v0 k l), (Green = lookup v0 k r), (Green = lookup v0 k l), (Blue = lookup v0 k r)
(Blue = lookup v0 k l), (Datatypes.length gv1 = k), (None = Some r), (None = Some l), (T r k v0 r = r), (T r k v0 r = l), (T r k v0 r = insert k v0 r), (T r k v0 r = insert k v0 l), (T r k v0 l = r), (T r k v0 l = l)
(T r k v0 l = insert k v0 r), (T r k v0 l = insert k v0 l), (T l k v0 r = r), (T l k v0 r = l), (T l k v0 r = insert k v0 r), (T l k v0 r = insert k v0 l), (T l k v0 l = r), (T l k v0 l = l), (T l k v0 l = insert k v0 r), (T l k v0 l = insert k v0 l)
(insert k v0 r = r), (insert k v0 r = l), (insert k v0 l = r), (insert k v0 l = l), (empty_tree = T r k v0 r), (empty_tree = T r k v0 l), (empty_tree = T l k v0 r), (empty_tree = T l k v0 l), (empty_tree = insert k v0 r), (empty_tree = insert k v0 l)
(E = T r k v0 r), (E = T r k v0 l), (E = T l k v0 r), (E = T l k v0 l), (E = insert k v0 r), (E = insert k v0 l), (None = Some v0), ((k, v0) = gv4)

Label: 3 (3)
(disjoint gv3 gv3), (disjoint gv3 gv1), (disjoint gv1 gv3), (disjoint gv1 gv1), (BST l), (Permutation gv3 gv3), (Permutation gv3 gv1), (Permutation gv1 gv3), (Permutation gv1 gv1), (k < k)
(k <= k), (l = l), (gv3 = gv3), (gv3 = gv1), (gv1 = gv3), (gv1 = gv1), (v0 = v0), (k = k), (false = bound k l), (true = bound k l)
(disjoint (list_keys gv3) (list_keys gv1)), (disjoint (list_keys gv3) []), (disjoint (list_keys gv1) (list_keys gv3)), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv3)), (disjoint [] (list_keys gv1)), (disjoint gv3 (kvs_insert k v0 gv3)), (disjoint gv3 (kvs_insert k v0 gv1)), (disjoint gv3 (fast_elements l)), (disjoint gv3 (fast_elements_tr l gv3))
(disjoint gv3 (fast_elements_tr l gv1)), (disjoint gv3 (elements l)), (disjoint gv3 (gv3 ++ gv3)), (disjoint gv3 (gv3 ++ gv1)), (disjoint gv3 (gv1 ++ gv3)), (disjoint gv3 (gv1 ++ gv1)), (disjoint gv3 []), (disjoint gv1 (kvs_insert k v0 gv3)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements l))
(disjoint gv1 (fast_elements_tr l gv3)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements l)), (disjoint gv1 (gv3 ++ gv3)), (disjoint gv1 (gv3 ++ gv1)), (disjoint gv1 (gv1 ++ gv3)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 []), (disjoint (kvs_insert k v0 gv3) gv3), (disjoint (kvs_insert k v0 gv3) gv1)
(disjoint (kvs_insert k v0 gv3) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v0 gv3) (fast_elements l)), (disjoint (kvs_insert k v0 gv3) (fast_elements_tr l gv3)), (disjoint (kvs_insert k v0 gv3) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv3) (elements l)), (disjoint (kvs_insert k v0 gv3) (gv3 ++ gv3)), (disjoint (kvs_insert k v0 gv3) (gv3 ++ gv1)), (disjoint (kvs_insert k v0 gv3) (gv1 ++ gv3)), (disjoint (kvs_insert k v0 gv3) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv3) [])
(disjoint (kvs_insert k v0 gv1) gv3), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v0 gv3)), (disjoint (kvs_insert k v0 gv1) (fast_elements l)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv3)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv3 ++ gv3)), (disjoint (kvs_insert k v0 gv1) (gv3 ++ gv1)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv3))
(disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements l) gv3), (disjoint (fast_elements l) gv1), (disjoint (fast_elements l) (kvs_insert k v0 gv3)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv3)), (disjoint (fast_elements l) (fast_elements_tr l gv1)), (disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv3 ++ gv3))
(disjoint (fast_elements l) (gv3 ++ gv1)), (disjoint (fast_elements l) (gv1 ++ gv3)), (disjoint (fast_elements l) (gv1 ++ gv1)), (disjoint (fast_elements l) []), (disjoint (fast_elements_tr l gv3) gv3), (disjoint (fast_elements_tr l gv3) gv1), (disjoint (fast_elements_tr l gv3) (kvs_insert k v0 gv3)), (disjoint (fast_elements_tr l gv3) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv3) (fast_elements l)), (disjoint (fast_elements_tr l gv3) (fast_elements_tr l gv1))
(disjoint (fast_elements_tr l gv3) (elements l)), (disjoint (fast_elements_tr l gv3) (gv3 ++ gv3)), (disjoint (fast_elements_tr l gv3) (gv3 ++ gv1)), (disjoint (fast_elements_tr l gv3) (gv1 ++ gv3)), (disjoint (fast_elements_tr l gv3) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv3) []), (disjoint (fast_elements_tr l gv1) gv3), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv3)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1))
(disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr l gv3)), (disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv3 ++ gv3)), (disjoint (fast_elements_tr l gv1) (gv3 ++ gv1)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv3)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv1) []), (disjoint (elements l) gv3), (disjoint (elements l) gv1)
(disjoint (elements l) (kvs_insert k v0 gv3)), (disjoint (elements l) (kvs_insert k v0 gv1)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr l gv3)), (disjoint (elements l) (fast_elements_tr l gv1)), (disjoint (elements l) (gv3 ++ gv3)), (disjoint (elements l) (gv3 ++ gv1)), (disjoint (elements l) (gv1 ++ gv3)), (disjoint (elements l) (gv1 ++ gv1)), (disjoint (elements l) [])
(disjoint (gv3 ++ gv3) gv3), (disjoint (gv3 ++ gv3) gv1), (disjoint (gv3 ++ gv3) (kvs_insert k v0 gv3)), (disjoint (gv3 ++ gv3) (kvs_insert k v0 gv1)), (disjoint (gv3 ++ gv3) (fast_elements l)), (disjoint (gv3 ++ gv3) (fast_elements_tr l gv3)), (disjoint (gv3 ++ gv3) (fast_elements_tr l gv1)), (disjoint (gv3 ++ gv3) (elements l)), (disjoint (gv3 ++ gv3) (gv3 ++ gv1)), (disjoint (gv3 ++ gv3) (gv1 ++ gv3))
(disjoint (gv3 ++ gv3) (gv1 ++ gv1)), (disjoint (gv3 ++ gv3) []), (disjoint (gv3 ++ gv1) gv3), (disjoint (gv3 ++ gv1) gv1), (disjoint (gv3 ++ gv1) (kvs_insert k v0 gv3)), (disjoint (gv3 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv3 ++ gv1) (fast_elements l)), (disjoint (gv3 ++ gv1) (fast_elements_tr l gv3)), (disjoint (gv3 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv3 ++ gv1) (elements l))
(disjoint (gv3 ++ gv1) (gv3 ++ gv3)), (disjoint (gv3 ++ gv1) (gv1 ++ gv3)), (disjoint (gv3 ++ gv1) (gv1 ++ gv1)), (disjoint (gv3 ++ gv1) []), (disjoint (gv1 ++ gv3) gv3), (disjoint (gv1 ++ gv3) gv1), (disjoint (gv1 ++ gv3) (kvs_insert k v0 gv3)), (disjoint (gv1 ++ gv3) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv3) (fast_elements l)), (disjoint (gv1 ++ gv3) (fast_elements_tr l gv3))
(disjoint (gv1 ++ gv3) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv3) (elements l)), (disjoint (gv1 ++ gv3) (gv3 ++ gv3)), (disjoint (gv1 ++ gv3) (gv3 ++ gv1)), (disjoint (gv1 ++ gv3) (gv1 ++ gv1)), (disjoint (gv1 ++ gv3) []), (disjoint (gv1 ++ gv1) gv3), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv3)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1))
(disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv3)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements l)), (disjoint (gv1 ++ gv1) (gv3 ++ gv3)), (disjoint (gv1 ++ gv1) (gv3 ++ gv1)), (disjoint (gv1 ++ gv1) (gv1 ++ gv3)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv3), (disjoint [] gv1)
(disjoint [] (kvs_insert k v0 gv3)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr l gv3)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements l)), (disjoint [] (gv3 ++ gv3)), (disjoint [] (gv3 ++ gv1)), (disjoint [] (gv1 ++ gv3)), (disjoint [] (gv1 ++ gv1))
(BST (T l k v0 l)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (k <=* list_keys gv3), (k <=* list_keys gv1), (k <=* []), (Datatypes.length gv3 <=* list_keys gv3), (Datatypes.length gv3 <=* list_keys gv1), (Datatypes.length gv3 <=* [])
(Datatypes.length gv1 <=* list_keys gv3), (Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv3)), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv3) (list_keys gv1)), (Permutation (list_keys gv3) []), (Permutation (list_keys gv1) (list_keys gv3)), (Permutation (list_keys gv1) [])
(Permutation [] (list_keys gv3)), (Permutation [] (list_keys gv1)), (Permutation gv3 (kvs_insert k v0 gv3)), (Permutation gv3 (kvs_insert k v0 gv1)), (Permutation gv3 (fast_elements l)), (Permutation gv3 (fast_elements_tr l gv3)), (Permutation gv3 (fast_elements_tr l gv1)), (Permutation gv3 (elements l)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ gv1))
(Permutation gv3 (gv1 ++ gv3)), (Permutation gv3 (gv1 ++ gv1)), (Permutation gv3 []), (Permutation gv1 (kvs_insert k v0 gv3)), (Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr l gv3)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements l)), (Permutation gv1 (gv3 ++ gv3))
(Permutation gv1 (gv3 ++ gv1)), (Permutation gv1 (gv1 ++ gv3)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (kvs_insert k v0 gv3) gv3), (Permutation (kvs_insert k v0 gv3) gv1), (Permutation (kvs_insert k v0 gv3) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v0 gv3) (fast_elements l)), (Permutation (kvs_insert k v0 gv3) (fast_elements_tr l gv3)), (Permutation (kvs_insert k v0 gv3) (fast_elements_tr l gv1))
(Permutation (kvs_insert k v0 gv3) (elements l)), (Permutation (kvs_insert k v0 gv3) (gv3 ++ gv3)), (Permutation (kvs_insert k v0 gv3) (gv3 ++ gv1)), (Permutation (kvs_insert k v0 gv3) (gv1 ++ gv3)), (Permutation (kvs_insert k v0 gv3) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv3) []), (Permutation (kvs_insert k v0 gv1) gv3), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v0 gv3)), (Permutation (kvs_insert k v0 gv1) (fast_elements l))
(Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv3)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv3 ++ gv3)), (Permutation (kvs_insert k v0 gv1) (gv3 ++ gv1)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv3)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements l) gv3), (Permutation (fast_elements l) gv1)
(Permutation (fast_elements l) (kvs_insert k v0 gv3)), (Permutation (fast_elements l) (kvs_insert k v0 gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv3)), (Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv3 ++ gv3)), (Permutation (fast_elements l) (gv3 ++ gv1)), (Permutation (fast_elements l) (gv1 ++ gv3)), (Permutation (fast_elements l) (gv1 ++ gv1)), (Permutation (fast_elements l) [])
(Permutation (fast_elements_tr l gv3) gv3), (Permutation (fast_elements_tr l gv3) gv1), (Permutation (fast_elements_tr l gv3) (kvs_insert k v0 gv3)), (Permutation (fast_elements_tr l gv3) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv3) (fast_elements l)), (Permutation (fast_elements_tr l gv3) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr l gv3) (elements l)), (Permutation (fast_elements_tr l gv3) (gv3 ++ gv3)), (Permutation (fast_elements_tr l gv3) (gv3 ++ gv1)), (Permutation (fast_elements_tr l gv3) (gv1 ++ gv3))
(Permutation (fast_elements_tr l gv3) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv3) []), (Permutation (fast_elements_tr l gv1) gv3), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv3)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv1) (fast_elements l)), (Permutation (fast_elements_tr l gv1) (fast_elements_tr l gv3)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv3 ++ gv3))
(Permutation (fast_elements_tr l gv1) (gv3 ++ gv1)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv3)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements l) gv3), (Permutation (elements l) gv1), (Permutation (elements l) (kvs_insert k v0 gv3)), (Permutation (elements l) (kvs_insert k v0 gv1)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr l gv3))
(Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (gv3 ++ gv3)), (Permutation (elements l) (gv3 ++ gv1)), (Permutation (elements l) (gv1 ++ gv3)), (Permutation (elements l) (gv1 ++ gv1)), (Permutation (elements l) []), (Permutation (gv3 ++ gv3) gv3), (Permutation (gv3 ++ gv3) gv1), (Permutation (gv3 ++ gv3) (kvs_insert k v0 gv3)), (Permutation (gv3 ++ gv3) (kvs_insert k v0 gv1))
(Permutation (gv3 ++ gv3) (fast_elements l)), (Permutation (gv3 ++ gv3) (fast_elements_tr l gv3)), (Permutation (gv3 ++ gv3) (fast_elements_tr l gv1)), (Permutation (gv3 ++ gv3) (elements l)), (Permutation (gv3 ++ gv3) (gv3 ++ gv1)), (Permutation (gv3 ++ gv3) (gv1 ++ gv3)), (Permutation (gv3 ++ gv3) (gv1 ++ gv1)), (Permutation (gv3 ++ gv3) []), (Permutation (gv3 ++ gv1) gv3), (Permutation (gv3 ++ gv1) gv1)
(Permutation (gv3 ++ gv1) (kvs_insert k v0 gv3)), (Permutation (gv3 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv3 ++ gv1) (fast_elements l)), (Permutation (gv3 ++ gv1) (fast_elements_tr l gv3)), (Permutation (gv3 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv3 ++ gv1) (elements l)), (Permutation (gv3 ++ gv1) (gv3 ++ gv3)), (Permutation (gv3 ++ gv1) (gv1 ++ gv3)), (Permutation (gv3 ++ gv1) (gv1 ++ gv1)), (Permutation (gv3 ++ gv1) [])
(Permutation (gv1 ++ gv3) gv3), (Permutation (gv1 ++ gv3) gv1), (Permutation (gv1 ++ gv3) (kvs_insert k v0 gv3)), (Permutation (gv1 ++ gv3) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv3) (fast_elements l)), (Permutation (gv1 ++ gv3) (fast_elements_tr l gv3)), (Permutation (gv1 ++ gv3) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv3) (elements l)), (Permutation (gv1 ++ gv3) (gv3 ++ gv3)), (Permutation (gv1 ++ gv3) (gv3 ++ gv1))
(Permutation (gv1 ++ gv3) (gv1 ++ gv1)), (Permutation (gv1 ++ gv3) []), (Permutation (gv1 ++ gv1) gv3), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv3)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv3)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements l))
(Permutation (gv1 ++ gv1) (gv3 ++ gv3)), (Permutation (gv1 ++ gv1) (gv3 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ gv3)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv3), (Permutation [] gv1), (Permutation [] (kvs_insert k v0 gv3)), (Permutation [] (kvs_insert k v0 gv1)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr l gv3))
(Permutation [] (fast_elements_tr l gv1)), (Permutation [] (elements l)), (Permutation [] (gv3 ++ gv3)), (Permutation [] (gv3 ++ gv1)), (Permutation [] (gv1 ++ gv3)), (Permutation [] (gv1 ++ gv1)), (In k (list_keys gv3)), (In k (list_keys gv1)), (In (Datatypes.length gv3) (list_keys gv3)), (In (Datatypes.length gv3) (list_keys gv1))
(In (Datatypes.length gv1) (list_keys gv3)), (In (Datatypes.length gv1) (list_keys gv1)), (In (k, v0) gv3), (In (k, v0) gv1), (In (k, v0) (kvs_insert k v0 gv3)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr l gv3)), (In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements l))
(In (k, v0) (gv3 ++ gv3)), (In (k, v0) (gv3 ++ gv1)), (In (k, v0) (gv1 ++ gv3)), (In (k, v0) (gv1 ++ gv1)), (k < Datatypes.length gv3), (k < Datatypes.length gv1), (Datatypes.length gv3 < k), (Datatypes.length gv3 < Datatypes.length gv1), (Datatypes.length gv1 < k), (Datatypes.length gv1 < Datatypes.length gv3)
(k <= Datatypes.length gv3), (k <= Datatypes.length gv1), (Datatypes.length gv3 <= k), (Datatypes.length gv3 <= Datatypes.length gv1), (Datatypes.length gv1 <= k), (Datatypes.length gv1 <= Datatypes.length gv3), (~ disjoint gv3 gv3), (~ disjoint gv3 gv1), (~ disjoint gv1 gv3), (~ disjoint gv1 gv1)
(~ BST l), (~ Permutation gv3 gv3), (~ Permutation gv3 gv1), (~ Permutation gv1 gv3), (~ Permutation gv1 gv1), (~ k < k), (~ k <= k), (l <> l), (gv3 <> gv3), (gv3 <> gv1)
(gv1 <> gv3), (gv1 <> gv1), (v0 <> v0), (k <> k), (kvs_insert k v0 gv3 = gv3), (kvs_insert k v0 gv3 = gv1), (kvs_insert k v0 gv3 = fast_elements l), (kvs_insert k v0 gv3 = fast_elements_tr l gv3), (kvs_insert k v0 gv3 = fast_elements_tr l gv1), (kvs_insert k v0 gv3 = elements l)
(kvs_insert k v0 gv3 = gv3 ++ gv3), (kvs_insert k v0 gv3 = gv3 ++ gv1), (kvs_insert k v0 gv3 = gv1 ++ gv3), (kvs_insert k v0 gv3 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv3), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements l), (kvs_insert k v0 gv1 = fast_elements_tr l gv3), (kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements l)
(kvs_insert k v0 gv1 = gv3 ++ gv3), (kvs_insert k v0 gv1 = gv3 ++ gv1), (kvs_insert k v0 gv1 = gv1 ++ gv3), (kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements l = gv3), (fast_elements l = gv1), (fast_elements l = elements l), (fast_elements l = gv3 ++ gv3), (fast_elements l = gv3 ++ gv1), (fast_elements l = gv1 ++ gv3)
(fast_elements l = gv1 ++ gv1), (fast_elements_tr l gv3 = gv3), (fast_elements_tr l gv3 = gv1), (fast_elements_tr l gv3 = fast_elements l), (fast_elements_tr l gv3 = elements l), (fast_elements_tr l gv3 = gv3 ++ gv3), (fast_elements_tr l gv3 = gv3 ++ gv1), (fast_elements_tr l gv3 = gv1 ++ gv3), (fast_elements_tr l gv3 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv3)
(fast_elements_tr l gv1 = gv1), (fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements l), (fast_elements_tr l gv1 = gv3 ++ gv3), (fast_elements_tr l gv1 = gv3 ++ gv1), (fast_elements_tr l gv1 = gv1 ++ gv3), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements l = gv3), (elements l = gv1), (elements l = gv3 ++ gv3)
(elements l = gv3 ++ gv1), (elements l = gv1 ++ gv3), (elements l = gv1 ++ gv1), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = gv1), (gv3 ++ gv1 = gv3), (gv3 ++ gv1 = gv1), (gv1 ++ gv3 = gv3), (gv1 ++ gv3 = gv1), (gv1 ++ gv1 = gv3)
(gv1 ++ gv1 = gv1), ([] = gv3), ([] = gv1), ([] = kvs_insert k v0 gv3), ([] = kvs_insert k v0 gv1), ([] = fast_elements l), ([] = fast_elements_tr l gv3), ([] = fast_elements_tr l gv1), ([] = elements l), ([] = gv3 ++ gv3)
([] = gv3 ++ gv1), ([] = gv1 ++ gv3), ([] = gv1 ++ gv1), ([] = list_keys gv3), ([] = list_keys gv1), (None = Some k), (None = Some gv3), (None = Some gv1), (lookup v0 k l = v0), (Red = lookup v0 k l)
(Green = lookup v0 k l), (Blue = lookup v0 k l), (Datatypes.length gv3 = k), (Datatypes.length gv1 = k), (None = Some l), (T l k v0 l = l), (T l k v0 l = insert k v0 l), (insert k v0 l = l), (empty_tree = T l k v0 l), (empty_tree = insert k v0 l)
(E = T l k v0 l), (E = insert k v0 l), (None = Some v0)

Label: 4 (4)
(disjoint gv1 gv1), (BST r), (BST l), (Permutation gv1 gv1), (x < x), (x < k), (k < x), (k < k), (x <= x), (x <= k)
(k <= x), (k <= k), (r = r), (r = l), (l = r), (l = l), (gv1 = gv1), (v = v), (v = v0), (v0 = v)
(v0 = v0), (x = x), (x = k), (k = x), (k = k), (false = bound x r), (false = bound x l), (false = bound k r), (false = bound k l), (true = bound x r)
(true = bound x l), (true = bound k r), (true = bound k l), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv1)), (disjoint gv1 (kvs_insert x v gv1)), (disjoint gv1 (kvs_insert x v0 gv1)), (disjoint gv1 (kvs_insert k v gv1)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements r))
(disjoint gv1 (fast_elements l)), (disjoint gv1 (fast_elements_tr r gv1)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements r)), (disjoint gv1 (elements l)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 []), (disjoint (kvs_insert x v gv1) gv1), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv1))
(disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv1) (fast_elements r)), (disjoint (kvs_insert x v gv1) (fast_elements l)), (disjoint (kvs_insert x v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v gv1) (elements r)), (disjoint (kvs_insert x v gv1) (elements l)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv1) []), (disjoint (kvs_insert x v0 gv1) gv1)
(disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements r)), (disjoint (kvs_insert x v0 gv1) (fast_elements l)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v0 gv1) (elements r)), (disjoint (kvs_insert x v0 gv1) (elements l)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv1))
(disjoint (kvs_insert x v0 gv1) []), (disjoint (kvs_insert k v gv1) gv1), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv1) (fast_elements r)), (disjoint (kvs_insert k v gv1) (fast_elements l)), (disjoint (kvs_insert k v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v gv1) (elements r))
(disjoint (kvs_insert k v gv1) (elements l)), (disjoint (kvs_insert k v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv1) []), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert k v0 gv1) (fast_elements r)), (disjoint (kvs_insert k v0 gv1) (fast_elements l)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr r gv1))
(disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements r)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements r) gv1), (disjoint (fast_elements r) (kvs_insert x v gv1)), (disjoint (fast_elements r) (kvs_insert x v0 gv1)), (disjoint (fast_elements r) (kvs_insert k v gv1)), (disjoint (fast_elements r) (kvs_insert k v0 gv1))
(disjoint (fast_elements r) (fast_elements l)), (disjoint (fast_elements r) (fast_elements_tr r gv1)), (disjoint (fast_elements r) (fast_elements_tr l gv1)), (disjoint (fast_elements r) (elements r)), (disjoint (fast_elements r) (elements l)), (disjoint (fast_elements r) (gv1 ++ gv1)), (disjoint (fast_elements r) []), (disjoint (fast_elements l) gv1), (disjoint (fast_elements l) (kvs_insert x v gv1)), (disjoint (fast_elements l) (kvs_insert x v0 gv1))
(disjoint (fast_elements l) (kvs_insert k v gv1)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements r)), (disjoint (fast_elements l) (fast_elements_tr r gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv1)), (disjoint (fast_elements l) (elements r)), (disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv1 ++ gv1)), (disjoint (fast_elements l) []), (disjoint (fast_elements_tr r gv1) gv1)
(disjoint (fast_elements_tr r gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr r gv1) (fast_elements r)), (disjoint (fast_elements_tr r gv1) (fast_elements l)), (disjoint (fast_elements_tr r gv1) (fast_elements_tr l gv1)), (disjoint (fast_elements_tr r gv1) (elements r)), (disjoint (fast_elements_tr r gv1) (elements l)), (disjoint (fast_elements_tr r gv1) (gv1 ++ gv1))
(disjoint (fast_elements_tr r gv1) []), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv1) (fast_elements r)), (disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (disjoint (fast_elements_tr l gv1) (elements r))
(disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv1) []), (disjoint (elements r) gv1), (disjoint (elements r) (kvs_insert x v gv1)), (disjoint (elements r) (kvs_insert x v0 gv1)), (disjoint (elements r) (kvs_insert k v gv1)), (disjoint (elements r) (kvs_insert k v0 gv1)), (disjoint (elements r) (fast_elements r)), (disjoint (elements r) (fast_elements l))
(disjoint (elements r) (fast_elements_tr r gv1)), (disjoint (elements r) (fast_elements_tr l gv1)), (disjoint (elements r) (elements l)), (disjoint (elements r) (gv1 ++ gv1)), (disjoint (elements r) []), (disjoint (elements l) gv1), (disjoint (elements l) (kvs_insert x v gv1)), (disjoint (elements l) (kvs_insert x v0 gv1)), (disjoint (elements l) (kvs_insert k v gv1)), (disjoint (elements l) (kvs_insert k v0 gv1))
(disjoint (elements l) (fast_elements r)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr r gv1)), (disjoint (elements l) (fast_elements_tr l gv1)), (disjoint (elements l) (elements r)), (disjoint (elements l) (gv1 ++ gv1)), (disjoint (elements l) []), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv1))
(disjoint (gv1 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv1) (fast_elements r)), (disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr r gv1)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements r)), (disjoint (gv1 ++ gv1) (elements l)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv1)
(disjoint [] (kvs_insert x v gv1)), (disjoint [] (kvs_insert x v0 gv1)), (disjoint [] (kvs_insert k v gv1)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements r)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr r gv1)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements r)), (disjoint [] (elements l))
(disjoint [] (gv1 ++ gv1)), (BST (T r x v r)), (BST (T r x v l)), (BST (T r x v0 r)), (BST (T r x v0 l)), (BST (T r k v r)), (BST (T r k v l)), (BST (T r k v0 r)), (BST (T r k v0 l)), (BST (T l x v r))
(BST (T l x v l)), (BST (T l x v0 r)), (BST (T l x v0 l)), (BST (T l k v r)), (BST (T l k v l)), (BST (T l k v0 r)), (BST (T l k v0 l)), (BST (insert x v r)), (BST (insert x v l)), (BST (insert x v0 r))
(BST (insert x v0 l)), (BST (insert k v r)), (BST (insert k v l)), (BST (insert k v0 r)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (x <=* list_keys gv1), (x <=* []), (k <=* list_keys gv1)
(k <=* []), (Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv1) []), (Permutation [] (list_keys gv1)), (Permutation gv1 (kvs_insert x v gv1)), (Permutation gv1 (kvs_insert x v0 gv1)), (Permutation gv1 (kvs_insert k v gv1))
(Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements r)), (Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr r gv1)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements r)), (Permutation gv1 (elements l)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (kvs_insert x v gv1) gv1)
(Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv1) (fast_elements r)), (Permutation (kvs_insert x v gv1) (fast_elements l)), (Permutation (kvs_insert x v gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v gv1) (elements r)), (Permutation (kvs_insert x v gv1) (elements l)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv1))
(Permutation (kvs_insert x v gv1) []), (Permutation (kvs_insert x v0 gv1) gv1), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements r)), (Permutation (kvs_insert x v0 gv1) (fast_elements l)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v0 gv1) (elements r))
(Permutation (kvs_insert x v0 gv1) (elements l)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv1) []), (Permutation (kvs_insert k v gv1) gv1), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv1) (fast_elements r)), (Permutation (kvs_insert k v gv1) (fast_elements l)), (Permutation (kvs_insert k v gv1) (fast_elements_tr r gv1))
(Permutation (kvs_insert k v gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v gv1) (elements r)), (Permutation (kvs_insert k v gv1) (elements l)), (Permutation (kvs_insert k v gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv1) []), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements r))
(Permutation (kvs_insert k v0 gv1) (fast_elements l)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements r)), (Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements r) gv1), (Permutation (fast_elements r) (kvs_insert x v gv1)), (Permutation (fast_elements r) (kvs_insert x v0 gv1))
(Permutation (fast_elements r) (kvs_insert k v gv1)), (Permutation (fast_elements r) (kvs_insert k v0 gv1)), (Permutation (fast_elements r) (fast_elements l)), (Permutation (fast_elements r) (fast_elements_tr r gv1)), (Permutation (fast_elements r) (fast_elements_tr l gv1)), (Permutation (fast_elements r) (elements r)), (Permutation (fast_elements r) (elements l)), (Permutation (fast_elements r) (gv1 ++ gv1)), (Permutation (fast_elements r) []), (Permutation (fast_elements l) gv1)
(Permutation (fast_elements l) (kvs_insert x v gv1)), (Permutation (fast_elements l) (kvs_insert x v0 gv1)), (Permutation (fast_elements l) (kvs_insert k v gv1)), (Permutation (fast_elements l) (kvs_insert k v0 gv1)), (Permutation (fast_elements l) (fast_elements r)), (Permutation (fast_elements l) (fast_elements_tr r gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements r)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv1 ++ gv1))
(Permutation (fast_elements l) []), (Permutation (fast_elements_tr r gv1) gv1), (Permutation (fast_elements_tr r gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr r gv1) (fast_elements r)), (Permutation (fast_elements_tr r gv1) (fast_elements l)), (Permutation (fast_elements_tr r gv1) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr r gv1) (elements r))
(Permutation (fast_elements_tr r gv1) (elements l)), (Permutation (fast_elements_tr r gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr r gv1) []), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv1) (fast_elements r)), (Permutation (fast_elements_tr l gv1) (fast_elements l))
(Permutation (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (Permutation (fast_elements_tr l gv1) (elements r)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements r) gv1), (Permutation (elements r) (kvs_insert x v gv1)), (Permutation (elements r) (kvs_insert x v0 gv1)), (Permutation (elements r) (kvs_insert k v gv1)), (Permutation (elements r) (kvs_insert k v0 gv1))
(Permutation (elements r) (fast_elements r)), (Permutation (elements r) (fast_elements l)), (Permutation (elements r) (fast_elements_tr r gv1)), (Permutation (elements r) (fast_elements_tr l gv1)), (Permutation (elements r) (elements l)), (Permutation (elements r) (gv1 ++ gv1)), (Permutation (elements r) []), (Permutation (elements l) gv1), (Permutation (elements l) (kvs_insert x v gv1)), (Permutation (elements l) (kvs_insert x v0 gv1))
(Permutation (elements l) (kvs_insert k v gv1)), (Permutation (elements l) (kvs_insert k v0 gv1)), (Permutation (elements l) (fast_elements r)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr r gv1)), (Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (elements r)), (Permutation (elements l) (gv1 ++ gv1)), (Permutation (elements l) []), (Permutation (gv1 ++ gv1) gv1)
(Permutation (gv1 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements r)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr r gv1)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements r)), (Permutation (gv1 ++ gv1) (elements l))
(Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (kvs_insert x v gv1)), (Permutation [] (kvs_insert x v0 gv1)), (Permutation [] (kvs_insert k v gv1)), (Permutation [] (kvs_insert k v0 gv1)), (Permutation [] (fast_elements r)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr r gv1)), (Permutation [] (fast_elements_tr l gv1))
(Permutation [] (elements r)), (Permutation [] (elements l)), (Permutation [] (gv1 ++ gv1)), (In x (list_keys gv1)), (In k (list_keys gv1)), (In (Datatypes.length gv1) (list_keys gv1)), (In (x, v) gv1), (In (x, v) (kvs_insert x v gv1)), (In (x, v) (kvs_insert x v0 gv1)), (In (x, v) (kvs_insert k v gv1))
(In (x, v) (kvs_insert k v0 gv1)), (In (x, v) (fast_elements r)), (In (x, v) (fast_elements l)), (In (x, v) (fast_elements_tr r gv1)), (In (x, v) (fast_elements_tr l gv1)), (In (x, v) (elements r)), (In (x, v) (elements l)), (In (x, v) (gv1 ++ gv1)), (In (x, v0) gv1), (In (x, v0) (kvs_insert x v gv1))
(In (x, v0) (kvs_insert x v0 gv1)), (In (x, v0) (kvs_insert k v gv1)), (In (x, v0) (kvs_insert k v0 gv1)), (In (x, v0) (fast_elements r)), (In (x, v0) (fast_elements l)), (In (x, v0) (fast_elements_tr r gv1)), (In (x, v0) (fast_elements_tr l gv1)), (In (x, v0) (elements r)), (In (x, v0) (elements l)), (In (x, v0) (gv1 ++ gv1))
(In (k, v) gv1), (In (k, v) (kvs_insert x v gv1)), (In (k, v) (kvs_insert x v0 gv1)), (In (k, v) (kvs_insert k v gv1)), (In (k, v) (kvs_insert k v0 gv1)), (In (k, v) (fast_elements r)), (In (k, v) (fast_elements l)), (In (k, v) (fast_elements_tr r gv1)), (In (k, v) (fast_elements_tr l gv1)), (In (k, v) (elements r))
(In (k, v) (elements l)), (In (k, v) (gv1 ++ gv1)), (In (k, v0) gv1), (In (k, v0) (kvs_insert x v gv1)), (In (k, v0) (kvs_insert x v0 gv1)), (In (k, v0) (kvs_insert k v gv1)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements r)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr r gv1))
(In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements r)), (In (k, v0) (elements l)), (In (k, v0) (gv1 ++ gv1)), (x < Datatypes.length gv1), (k < Datatypes.length gv1), (Datatypes.length gv1 < x), (Datatypes.length gv1 < k), (x <= Datatypes.length gv1), (k <= Datatypes.length gv1)
(Datatypes.length gv1 <= x), (Datatypes.length gv1 <= k), (~ disjoint gv1 gv1), (~ BST r), (~ BST l), (~ Permutation gv1 gv1), (~ x < x), (~ x < k), (~ k < x), (~ k < k)
(~ x <= x), (~ x <= k), (~ k <= x), (~ k <= k), (r <> r), (r <> l), (l <> r), (l <> l), (gv1 <> gv1), (v <> v)
(v <> v0), (v0 <> v), (v0 <> v0), (x <> x), (x <> k), (k <> x), (k <> k), (kvs_insert x v gv1 = gv1), (kvs_insert x v gv1 = fast_elements r), (kvs_insert x v gv1 = fast_elements l)
(kvs_insert x v gv1 = fast_elements_tr r gv1), (kvs_insert x v gv1 = fast_elements_tr l gv1), (kvs_insert x v gv1 = elements r), (kvs_insert x v gv1 = elements l), (kvs_insert x v gv1 = gv1 ++ gv1), (kvs_insert x v0 gv1 = gv1), (kvs_insert x v0 gv1 = fast_elements r), (kvs_insert x v0 gv1 = fast_elements l), (kvs_insert x v0 gv1 = fast_elements_tr r gv1), (kvs_insert x v0 gv1 = fast_elements_tr l gv1)
(kvs_insert x v0 gv1 = elements r), (kvs_insert x v0 gv1 = elements l), (kvs_insert x v0 gv1 = gv1 ++ gv1), (kvs_insert k v gv1 = gv1), (kvs_insert k v gv1 = fast_elements r), (kvs_insert k v gv1 = fast_elements l), (kvs_insert k v gv1 = fast_elements_tr r gv1), (kvs_insert k v gv1 = fast_elements_tr l gv1), (kvs_insert k v gv1 = elements r), (kvs_insert k v gv1 = elements l)
(kvs_insert k v gv1 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements r), (kvs_insert k v0 gv1 = fast_elements l), (kvs_insert k v0 gv1 = fast_elements_tr r gv1), (kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements r), (kvs_insert k v0 gv1 = elements l), (kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements r = gv1)
(fast_elements r = elements r), (fast_elements r = elements l), (fast_elements r = gv1 ++ gv1), (fast_elements l = gv1), (fast_elements l = elements r), (fast_elements l = elements l), (fast_elements l = gv1 ++ gv1), (fast_elements_tr r gv1 = gv1), (fast_elements_tr r gv1 = fast_elements r), (fast_elements_tr r gv1 = fast_elements l)
(fast_elements_tr r gv1 = elements r), (fast_elements_tr r gv1 = elements l), (fast_elements_tr r gv1 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv1), (fast_elements_tr l gv1 = fast_elements r), (fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements r), (fast_elements_tr l gv1 = elements l), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements r = gv1)
(elements r = gv1 ++ gv1), (elements l = gv1), (elements l = gv1 ++ gv1), (gv1 ++ gv1 = gv1), ([] = gv1), ([] = kvs_insert x v gv1), ([] = kvs_insert x v0 gv1), ([] = kvs_insert k v gv1), ([] = kvs_insert k v0 gv1), ([] = fast_elements r)
([] = fast_elements l), ([] = fast_elements_tr r gv1), ([] = fast_elements_tr l gv1), ([] = elements r), ([] = elements l), ([] = gv1 ++ gv1), ([] = list_keys gv1), (None = Some x), (None = Some k), (None = Some gv1)
(lookup v x r = v), (lookup v x r = v0), (lookup v x l = v), (lookup v x l = v0), (lookup v k r = v), (lookup v k r = v0), (lookup v k l = v), (lookup v k l = v0), (lookup v0 x r = v), (lookup v0 x r = v0)
(lookup v0 x l = v), (lookup v0 x l = v0), (lookup v0 k r = v), (lookup v0 k r = v0), (lookup v0 k l = v), (lookup v0 k l = v0), (Red = lookup v x r), (Red = lookup v x l), (Red = lookup v k r), (Red = lookup v k l)
(Red = lookup v0 x r), (Red = lookup v0 x l), (Red = lookup v0 k r), (Red = lookup v0 k l), (Green = lookup v x r), (Green = lookup v x l), (Green = lookup v k r), (Green = lookup v k l), (Green = lookup v0 x r), (Green = lookup v0 x l)
(Green = lookup v0 k r), (Green = lookup v0 k l), (Blue = lookup v x r), (Blue = lookup v x l), (Blue = lookup v k r), (Blue = lookup v k l), (Blue = lookup v0 x r), (Blue = lookup v0 x l), (Blue = lookup v0 k r), (Blue = lookup v0 k l)
(Datatypes.length gv1 = x), (Datatypes.length gv1 = k), (None = Some r), (None = Some l), (T r x v r = r), (T r x v r = l), (T r x v r = insert x v r), (T r x v r = insert x v l), (T r x v r = insert x v0 r), (T r x v r = insert x v0 l)
(T r x v r = insert k v r), (T r x v r = insert k v l), (T r x v r = insert k v0 r), (T r x v r = insert k v0 l), (T r x v l = r), (T r x v l = l), (T r x v l = insert x v r), (T r x v l = insert x v l), (T r x v l = insert x v0 r), (T r x v l = insert x v0 l)
(T r x v l = insert k v r), (T r x v l = insert k v l), (T r x v l = insert k v0 r), (T r x v l = insert k v0 l), (T r x v0 r = r), (T r x v0 r = l), (T r x v0 r = insert x v r), (T r x v0 r = insert x v l), (T r x v0 r = insert x v0 r), (T r x v0 r = insert x v0 l)
(T r x v0 r = insert k v r), (T r x v0 r = insert k v l), (T r x v0 r = insert k v0 r), (T r x v0 r = insert k v0 l), (T r x v0 l = r), (T r x v0 l = l), (T r x v0 l = insert x v r), (T r x v0 l = insert x v l), (T r x v0 l = insert x v0 r), (T r x v0 l = insert x v0 l)
(T r x v0 l = insert k v r), (T r x v0 l = insert k v l), (T r x v0 l = insert k v0 r), (T r x v0 l = insert k v0 l), (T r k v r = r), (T r k v r = l), (T r k v r = insert x v r), (T r k v r = insert x v l), (T r k v r = insert x v0 r), (T r k v r = insert x v0 l)
(T r k v r = insert k v r), (T r k v r = insert k v l), (T r k v r = insert k v0 r), (T r k v r = insert k v0 l), (T r k v l = r), (T r k v l = l), (T r k v l = insert x v r), (T r k v l = insert x v l), (T r k v l = insert x v0 r), (T r k v l = insert x v0 l)
(T r k v l = insert k v r), (T r k v l = insert k v l), (T r k v l = insert k v0 r), (T r k v l = insert k v0 l), (T r k v0 r = r), (T r k v0 r = l), (T r k v0 r = insert x v r), (T r k v0 r = insert x v l), (T r k v0 r = insert x v0 r), (T r k v0 r = insert x v0 l)
(T r k v0 r = insert k v r), (T r k v0 r = insert k v l), (T r k v0 r = insert k v0 r), (T r k v0 r = insert k v0 l), (T r k v0 l = r), (T r k v0 l = l), (T r k v0 l = insert x v r), (T r k v0 l = insert x v l), (T r k v0 l = insert x v0 r), (T r k v0 l = insert x v0 l)
(T r k v0 l = insert k v r), (T r k v0 l = insert k v l), (T r k v0 l = insert k v0 r), (T r k v0 l = insert k v0 l), (T l x v r = r), (T l x v r = l), (T l x v r = insert x v r), (T l x v r = insert x v l), (T l x v r = insert x v0 r), (T l x v r = insert x v0 l)
(T l x v r = insert k v r), (T l x v r = insert k v l), (T l x v r = insert k v0 r), (T l x v r = insert k v0 l), (T l x v l = r), (T l x v l = l), (T l x v l = insert x v r), (T l x v l = insert x v l), (T l x v l = insert x v0 r), (T l x v l = insert x v0 l)
(T l x v l = insert k v r), (T l x v l = insert k v l), (T l x v l = insert k v0 r), (T l x v l = insert k v0 l), (T l x v0 r = r), (T l x v0 r = l), (T l x v0 r = insert x v r), (T l x v0 r = insert x v l), (T l x v0 r = insert x v0 r), (T l x v0 r = insert x v0 l)
(T l x v0 r = insert k v r), (T l x v0 r = insert k v l), (T l x v0 r = insert k v0 r), (T l x v0 r = insert k v0 l), (T l x v0 l = r), (T l x v0 l = l), (T l x v0 l = insert x v r), (T l x v0 l = insert x v l), (T l x v0 l = insert x v0 r), (T l x v0 l = insert x v0 l)
(T l x v0 l = insert k v r), (T l x v0 l = insert k v l), (T l x v0 l = insert k v0 r), (T l x v0 l = insert k v0 l), (T l k v r = r), (T l k v r = l), (T l k v r = insert x v r), (T l k v r = insert x v l), (T l k v r = insert x v0 r), (T l k v r = insert x v0 l)
(T l k v r = insert k v r), (T l k v r = insert k v l), (T l k v r = insert k v0 r), (T l k v r = insert k v0 l), (T l k v l = r), (T l k v l = l), (T l k v l = insert x v r), (T l k v l = insert x v l), (T l k v l = insert x v0 r), (T l k v l = insert x v0 l)
(T l k v l = insert k v r), (T l k v l = insert k v l), (T l k v l = insert k v0 r), (T l k v l = insert k v0 l), (T l k v0 r = r), (T l k v0 r = l), (T l k v0 r = insert x v r), (T l k v0 r = insert x v l), (T l k v0 r = insert x v0 r), (T l k v0 r = insert x v0 l)
(T l k v0 r = insert k v r), (T l k v0 r = insert k v l), (T l k v0 r = insert k v0 r), (T l k v0 r = insert k v0 l), (T l k v0 l = r), (T l k v0 l = l), (T l k v0 l = insert x v r), (T l k v0 l = insert x v l), (T l k v0 l = insert x v0 r), (T l k v0 l = insert x v0 l)
(T l k v0 l = insert k v r), (T l k v0 l = insert k v l), (T l k v0 l = insert k v0 r), (T l k v0 l = insert k v0 l), (insert x v r = r), (insert x v r = l), (insert x v l = r), (insert x v l = l), (insert x v0 r = r), (insert x v0 r = l)
(insert x v0 l = r), (insert x v0 l = l), (insert k v r = r), (insert k v r = l), (insert k v l = r), (insert k v l = l), (insert k v0 r = r), (insert k v0 r = l), (insert k v0 l = r), (insert k v0 l = l)
(empty_tree = T r x v r), (empty_tree = T r x v l), (empty_tree = T r x v0 r), (empty_tree = T r x v0 l), (empty_tree = T r k v r), (empty_tree = T r k v l), (empty_tree = T r k v0 r), (empty_tree = T r k v0 l), (empty_tree = T l x v r), (empty_tree = T l x v l)
(empty_tree = T l x v0 r), (empty_tree = T l x v0 l), (empty_tree = T l k v r), (empty_tree = T l k v l), (empty_tree = T l k v0 r), (empty_tree = T l k v0 l), (empty_tree = insert x v r), (empty_tree = insert x v l), (empty_tree = insert x v0 r), (empty_tree = insert x v0 l)
(empty_tree = insert k v r), (empty_tree = insert k v l), (empty_tree = insert k v0 r), (empty_tree = insert k v0 l), (E = T r x v r), (E = T r x v l), (E = T r x v0 r), (E = T r x v0 l), (E = T r k v r), (E = T r k v l)
(E = T r k v0 r), (E = T r k v0 l), (E = T l x v r), (E = T l x v l), (E = T l x v0 r), (E = T l x v0 l), (E = T l k v r), (E = T l k v l), (E = T l k v0 r), (E = T l k v0 l)
(E = insert x v r), (E = insert x v l), (E = insert x v0 r), (E = insert x v0 l), (E = insert k v r), (E = insert k v l), (E = insert k v0 r), (E = insert k v0 l), (None = Some v), (None = Some v0)

Label: 5 (5)
(disjoint gv1 gv1), (BST r), (BST l), (Permutation gv1 gv1), (In gv0 gv1), (x < x), (x < k), (k < x), (k < k), (x <= x)
(x <= k), (k <= x), (k <= k), (r = r), (r = l), (l = r), (l = l), (v = v), (v = v0), (v0 = v)
(v0 = v0), (x = x), (x = k), (k = x), (k = k), (gv1 = gv1), (gv0 = gv0), (false = bound x r), (false = bound x l), (false = bound k r)
(false = bound k l), (true = bound x r), (true = bound x l), (true = bound k r), (true = bound k l), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv1)), (disjoint gv1 (gv0 :: gv1)), (disjoint gv1 (kvs_insert x v gv1)), (disjoint gv1 (kvs_insert x v0 gv1))
(disjoint gv1 (kvs_insert k v gv1)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements r)), (disjoint gv1 (fast_elements l)), (disjoint gv1 (fast_elements_tr r gv1)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements r)), (disjoint gv1 (elements l)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 [])
(disjoint (gv0 :: gv1) gv1), (disjoint (gv0 :: gv1) (kvs_insert x v gv1)), (disjoint (gv0 :: gv1) (kvs_insert x v0 gv1)), (disjoint (gv0 :: gv1) (kvs_insert k v gv1)), (disjoint (gv0 :: gv1) (kvs_insert k v0 gv1)), (disjoint (gv0 :: gv1) (fast_elements r)), (disjoint (gv0 :: gv1) (fast_elements l)), (disjoint (gv0 :: gv1) (fast_elements_tr r gv1)), (disjoint (gv0 :: gv1) (fast_elements_tr l gv1)), (disjoint (gv0 :: gv1) (elements r))
(disjoint (gv0 :: gv1) (elements l)), (disjoint (gv0 :: gv1) (gv1 ++ gv1)), (disjoint (gv0 :: gv1) []), (disjoint (kvs_insert x v gv1) gv1), (disjoint (kvs_insert x v gv1) (gv0 :: gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv1) (fast_elements r)), (disjoint (kvs_insert x v gv1) (fast_elements l))
(disjoint (kvs_insert x v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v gv1) (elements r)), (disjoint (kvs_insert x v gv1) (elements l)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv1) []), (disjoint (kvs_insert x v0 gv1) gv1), (disjoint (kvs_insert x v0 gv1) (gv0 :: gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv1))
(disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements r)), (disjoint (kvs_insert x v0 gv1) (fast_elements l)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert x v0 gv1) (elements r)), (disjoint (kvs_insert x v0 gv1) (elements l)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v0 gv1) []), (disjoint (kvs_insert k v gv1) gv1)
(disjoint (kvs_insert k v gv1) (gv0 :: gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv1) (fast_elements r)), (disjoint (kvs_insert k v gv1) (fast_elements l)), (disjoint (kvs_insert k v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v gv1) (elements r)), (disjoint (kvs_insert k v gv1) (elements l))
(disjoint (kvs_insert k v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv1) []), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (gv0 :: gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert k v0 gv1) (fast_elements r)), (disjoint (kvs_insert k v0 gv1) (fast_elements l)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr r gv1))
(disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements r)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements r) gv1), (disjoint (fast_elements r) (gv0 :: gv1)), (disjoint (fast_elements r) (kvs_insert x v gv1)), (disjoint (fast_elements r) (kvs_insert x v0 gv1)), (disjoint (fast_elements r) (kvs_insert k v gv1))
(disjoint (fast_elements r) (kvs_insert k v0 gv1)), (disjoint (fast_elements r) (fast_elements l)), (disjoint (fast_elements r) (fast_elements_tr r gv1)), (disjoint (fast_elements r) (fast_elements_tr l gv1)), (disjoint (fast_elements r) (elements r)), (disjoint (fast_elements r) (elements l)), (disjoint (fast_elements r) (gv1 ++ gv1)), (disjoint (fast_elements r) []), (disjoint (fast_elements l) gv1), (disjoint (fast_elements l) (gv0 :: gv1))
(disjoint (fast_elements l) (kvs_insert x v gv1)), (disjoint (fast_elements l) (kvs_insert x v0 gv1)), (disjoint (fast_elements l) (kvs_insert k v gv1)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements r)), (disjoint (fast_elements l) (fast_elements_tr r gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv1)), (disjoint (fast_elements l) (elements r)), (disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv1 ++ gv1))
(disjoint (fast_elements l) []), (disjoint (fast_elements_tr r gv1) gv1), (disjoint (fast_elements_tr r gv1) (gv0 :: gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr r gv1) (fast_elements r)), (disjoint (fast_elements_tr r gv1) (fast_elements l)), (disjoint (fast_elements_tr r gv1) (fast_elements_tr l gv1))
(disjoint (fast_elements_tr r gv1) (elements r)), (disjoint (fast_elements_tr r gv1) (elements l)), (disjoint (fast_elements_tr r gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr r gv1) []), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (gv0 :: gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1))
(disjoint (fast_elements_tr l gv1) (fast_elements r)), (disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (disjoint (fast_elements_tr l gv1) (elements r)), (disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv1) []), (disjoint (elements r) gv1), (disjoint (elements r) (gv0 :: gv1)), (disjoint (elements r) (kvs_insert x v gv1))
(disjoint (elements r) (kvs_insert x v0 gv1)), (disjoint (elements r) (kvs_insert k v gv1)), (disjoint (elements r) (kvs_insert k v0 gv1)), (disjoint (elements r) (fast_elements r)), (disjoint (elements r) (fast_elements l)), (disjoint (elements r) (fast_elements_tr r gv1)), (disjoint (elements r) (fast_elements_tr l gv1)), (disjoint (elements r) (elements l)), (disjoint (elements r) (gv1 ++ gv1)), (disjoint (elements r) [])
(disjoint (elements l) gv1), (disjoint (elements l) (gv0 :: gv1)), (disjoint (elements l) (kvs_insert x v gv1)), (disjoint (elements l) (kvs_insert x v0 gv1)), (disjoint (elements l) (kvs_insert k v gv1)), (disjoint (elements l) (kvs_insert k v0 gv1)), (disjoint (elements l) (fast_elements r)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr r gv1)), (disjoint (elements l) (fast_elements_tr l gv1))
(disjoint (elements l) (elements r)), (disjoint (elements l) (gv1 ++ gv1)), (disjoint (elements l) []), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (gv0 :: gv1)), (disjoint (gv1 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv1) (fast_elements r))
(disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr r gv1)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements r)), (disjoint (gv1 ++ gv1) (elements l)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv1), (disjoint [] (gv0 :: gv1)), (disjoint [] (kvs_insert x v gv1)), (disjoint [] (kvs_insert x v0 gv1))
(disjoint [] (kvs_insert k v gv1)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements r)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr r gv1)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements r)), (disjoint [] (elements l)), (disjoint [] (gv1 ++ gv1)), (BST (T r x v r))
(BST (T r x v l)), (BST (T r x v0 r)), (BST (T r x v0 l)), (BST (T r k v r)), (BST (T r k v l)), (BST (T r k v0 r)), (BST (T r k v0 l)), (BST (T l x v r)), (BST (T l x v l)), (BST (T l x v0 r))
(BST (T l x v0 l)), (BST (T l k v r)), (BST (T l k v l)), (BST (T l k v0 r)), (BST (T l k v0 l)), (BST (insert x v r)), (BST (insert x v l)), (BST (insert x v0 r)), (BST (insert x v0 l)), (BST (insert k v r))
(BST (insert k v l)), (BST (insert k v0 r)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (x <=* list_keys gv1), (x <=* []), (k <=* list_keys gv1), (k <=* []), (Datatypes.length gv1 <=* list_keys gv1)
(Datatypes.length gv1 <=* []), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv1) []), (Permutation [] (list_keys gv1)), (Permutation gv1 (gv0 :: gv1)), (Permutation gv1 (kvs_insert x v gv1)), (Permutation gv1 (kvs_insert x v0 gv1)), (Permutation gv1 (kvs_insert k v gv1)), (Permutation gv1 (kvs_insert k v0 gv1))
(Permutation gv1 (fast_elements r)), (Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr r gv1)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements r)), (Permutation gv1 (elements l)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (gv0 :: gv1) gv1), (Permutation (gv0 :: gv1) (kvs_insert x v gv1))
(Permutation (gv0 :: gv1) (kvs_insert x v0 gv1)), (Permutation (gv0 :: gv1) (kvs_insert k v gv1)), (Permutation (gv0 :: gv1) (kvs_insert k v0 gv1)), (Permutation (gv0 :: gv1) (fast_elements r)), (Permutation (gv0 :: gv1) (fast_elements l)), (Permutation (gv0 :: gv1) (fast_elements_tr r gv1)), (Permutation (gv0 :: gv1) (fast_elements_tr l gv1)), (Permutation (gv0 :: gv1) (elements r)), (Permutation (gv0 :: gv1) (elements l)), (Permutation (gv0 :: gv1) (gv1 ++ gv1))
(Permutation (gv0 :: gv1) []), (Permutation (kvs_insert x v gv1) gv1), (Permutation (kvs_insert x v gv1) (gv0 :: gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv1) (fast_elements r)), (Permutation (kvs_insert x v gv1) (fast_elements l)), (Permutation (kvs_insert x v gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v gv1) (fast_elements_tr l gv1))
(Permutation (kvs_insert x v gv1) (elements r)), (Permutation (kvs_insert x v gv1) (elements l)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv1)), (Permutation (kvs_insert x v gv1) []), (Permutation (kvs_insert x v0 gv1) gv1), (Permutation (kvs_insert x v0 gv1) (gv0 :: gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements r))
(Permutation (kvs_insert x v0 gv1) (fast_elements l)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert x v0 gv1) (elements r)), (Permutation (kvs_insert x v0 gv1) (elements l)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv1) []), (Permutation (kvs_insert k v gv1) gv1), (Permutation (kvs_insert k v gv1) (gv0 :: gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv1))
(Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv1) (fast_elements r)), (Permutation (kvs_insert k v gv1) (fast_elements l)), (Permutation (kvs_insert k v gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v gv1) (elements r)), (Permutation (kvs_insert k v gv1) (elements l)), (Permutation (kvs_insert k v gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv1) [])
(Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (gv0 :: gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements r)), (Permutation (kvs_insert k v0 gv1) (fast_elements l)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements r))
(Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements r) gv1), (Permutation (fast_elements r) (gv0 :: gv1)), (Permutation (fast_elements r) (kvs_insert x v gv1)), (Permutation (fast_elements r) (kvs_insert x v0 gv1)), (Permutation (fast_elements r) (kvs_insert k v gv1)), (Permutation (fast_elements r) (kvs_insert k v0 gv1)), (Permutation (fast_elements r) (fast_elements l))
(Permutation (fast_elements r) (fast_elements_tr r gv1)), (Permutation (fast_elements r) (fast_elements_tr l gv1)), (Permutation (fast_elements r) (elements r)), (Permutation (fast_elements r) (elements l)), (Permutation (fast_elements r) (gv1 ++ gv1)), (Permutation (fast_elements r) []), (Permutation (fast_elements l) gv1), (Permutation (fast_elements l) (gv0 :: gv1)), (Permutation (fast_elements l) (kvs_insert x v gv1)), (Permutation (fast_elements l) (kvs_insert x v0 gv1))
(Permutation (fast_elements l) (kvs_insert k v gv1)), (Permutation (fast_elements l) (kvs_insert k v0 gv1)), (Permutation (fast_elements l) (fast_elements r)), (Permutation (fast_elements l) (fast_elements_tr r gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements r)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv1 ++ gv1)), (Permutation (fast_elements l) []), (Permutation (fast_elements_tr r gv1) gv1)
(Permutation (fast_elements_tr r gv1) (gv0 :: gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr r gv1) (fast_elements r)), (Permutation (fast_elements_tr r gv1) (fast_elements l)), (Permutation (fast_elements_tr r gv1) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr r gv1) (elements r)), (Permutation (fast_elements_tr r gv1) (elements l))
(Permutation (fast_elements_tr r gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr r gv1) []), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (gv0 :: gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv1) (fast_elements r)), (Permutation (fast_elements_tr l gv1) (fast_elements l))
(Permutation (fast_elements_tr l gv1) (fast_elements_tr r gv1)), (Permutation (fast_elements_tr l gv1) (elements r)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements r) gv1), (Permutation (elements r) (gv0 :: gv1)), (Permutation (elements r) (kvs_insert x v gv1)), (Permutation (elements r) (kvs_insert x v0 gv1)), (Permutation (elements r) (kvs_insert k v gv1))
(Permutation (elements r) (kvs_insert k v0 gv1)), (Permutation (elements r) (fast_elements r)), (Permutation (elements r) (fast_elements l)), (Permutation (elements r) (fast_elements_tr r gv1)), (Permutation (elements r) (fast_elements_tr l gv1)), (Permutation (elements r) (elements l)), (Permutation (elements r) (gv1 ++ gv1)), (Permutation (elements r) []), (Permutation (elements l) gv1), (Permutation (elements l) (gv0 :: gv1))
(Permutation (elements l) (kvs_insert x v gv1)), (Permutation (elements l) (kvs_insert x v0 gv1)), (Permutation (elements l) (kvs_insert k v gv1)), (Permutation (elements l) (kvs_insert k v0 gv1)), (Permutation (elements l) (fast_elements r)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr r gv1)), (Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (elements r)), (Permutation (elements l) (gv1 ++ gv1))
(Permutation (elements l) []), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (gv0 :: gv1)), (Permutation (gv1 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements r)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr r gv1))
(Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements r)), (Permutation (gv1 ++ gv1) (elements l)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (gv0 :: gv1)), (Permutation [] (kvs_insert x v gv1)), (Permutation [] (kvs_insert x v0 gv1)), (Permutation [] (kvs_insert k v gv1)), (Permutation [] (kvs_insert k v0 gv1))
(Permutation [] (fast_elements r)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr r gv1)), (Permutation [] (fast_elements_tr l gv1)), (Permutation [] (elements r)), (Permutation [] (elements l)), (Permutation [] (gv1 ++ gv1)), (In x (list_keys gv1)), (In k (list_keys gv1)), (In (Datatypes.length gv1) (list_keys gv1))
(In gv0 (gv0 :: gv1)), (In gv0 (kvs_insert x v gv1)), (In gv0 (kvs_insert x v0 gv1)), (In gv0 (kvs_insert k v gv1)), (In gv0 (kvs_insert k v0 gv1)), (In gv0 (fast_elements r)), (In gv0 (fast_elements l)), (In gv0 (fast_elements_tr r gv1)), (In gv0 (fast_elements_tr l gv1)), (In gv0 (elements r))
(In gv0 (elements l)), (In gv0 (gv1 ++ gv1)), (In (x, v) gv1), (In (x, v) (gv0 :: gv1)), (In (x, v) (kvs_insert x v gv1)), (In (x, v) (kvs_insert x v0 gv1)), (In (x, v) (kvs_insert k v gv1)), (In (x, v) (kvs_insert k v0 gv1)), (In (x, v) (fast_elements r)), (In (x, v) (fast_elements l))
(In (x, v) (fast_elements_tr r gv1)), (In (x, v) (fast_elements_tr l gv1)), (In (x, v) (elements r)), (In (x, v) (elements l)), (In (x, v) (gv1 ++ gv1)), (In (x, v0) gv1), (In (x, v0) (gv0 :: gv1)), (In (x, v0) (kvs_insert x v gv1)), (In (x, v0) (kvs_insert x v0 gv1)), (In (x, v0) (kvs_insert k v gv1))
(In (x, v0) (kvs_insert k v0 gv1)), (In (x, v0) (fast_elements r)), (In (x, v0) (fast_elements l)), (In (x, v0) (fast_elements_tr r gv1)), (In (x, v0) (fast_elements_tr l gv1)), (In (x, v0) (elements r)), (In (x, v0) (elements l)), (In (x, v0) (gv1 ++ gv1)), (In (k, v) gv1), (In (k, v) (gv0 :: gv1))
(In (k, v) (kvs_insert x v gv1)), (In (k, v) (kvs_insert x v0 gv1)), (In (k, v) (kvs_insert k v gv1)), (In (k, v) (kvs_insert k v0 gv1)), (In (k, v) (fast_elements r)), (In (k, v) (fast_elements l)), (In (k, v) (fast_elements_tr r gv1)), (In (k, v) (fast_elements_tr l gv1)), (In (k, v) (elements r)), (In (k, v) (elements l))
(In (k, v) (gv1 ++ gv1)), (In (k, v0) gv1), (In (k, v0) (gv0 :: gv1)), (In (k, v0) (kvs_insert x v gv1)), (In (k, v0) (kvs_insert x v0 gv1)), (In (k, v0) (kvs_insert k v gv1)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements r)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr r gv1))
(In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements r)), (In (k, v0) (elements l)), (In (k, v0) (gv1 ++ gv1)), (x < Datatypes.length gv1), (k < Datatypes.length gv1), (Datatypes.length gv1 < x), (Datatypes.length gv1 < k), (x <= Datatypes.length gv1), (k <= Datatypes.length gv1)
(Datatypes.length gv1 <= x), (Datatypes.length gv1 <= k), (~ disjoint gv1 gv1), (~ BST r), (~ BST l), (~ Permutation gv1 gv1), (~ In gv0 gv1), (~ x < x), (~ x < k), (~ k < x)
(~ k < k), (~ x <= x), (~ x <= k), (~ k <= x), (~ k <= k), (r <> r), (r <> l), (l <> r), (l <> l), (v <> v)
(v <> v0), (v0 <> v), (v0 <> v0), (x <> x), (x <> k), (k <> x), (k <> k), (gv1 <> gv1), (gv0 <> gv0), (gv0 :: gv1 = gv1)
(gv0 :: gv1 = kvs_insert x v gv1), (gv0 :: gv1 = kvs_insert x v0 gv1), (gv0 :: gv1 = kvs_insert k v gv1), (gv0 :: gv1 = kvs_insert k v0 gv1), (gv0 :: gv1 = fast_elements r), (gv0 :: gv1 = fast_elements l), (gv0 :: gv1 = fast_elements_tr r gv1), (gv0 :: gv1 = fast_elements_tr l gv1), (gv0 :: gv1 = elements r), (gv0 :: gv1 = elements l)
(gv0 :: gv1 = gv1 ++ gv1), (gv0 :: gv1 = []), (kvs_insert x v gv1 = gv1), (kvs_insert x v gv1 = fast_elements r), (kvs_insert x v gv1 = fast_elements l), (kvs_insert x v gv1 = fast_elements_tr r gv1), (kvs_insert x v gv1 = fast_elements_tr l gv1), (kvs_insert x v gv1 = elements r), (kvs_insert x v gv1 = elements l), (kvs_insert x v gv1 = gv1 ++ gv1)
(kvs_insert x v0 gv1 = gv1), (kvs_insert x v0 gv1 = fast_elements r), (kvs_insert x v0 gv1 = fast_elements l), (kvs_insert x v0 gv1 = fast_elements_tr r gv1), (kvs_insert x v0 gv1 = fast_elements_tr l gv1), (kvs_insert x v0 gv1 = elements r), (kvs_insert x v0 gv1 = elements l), (kvs_insert x v0 gv1 = gv1 ++ gv1), (kvs_insert k v gv1 = gv1), (kvs_insert k v gv1 = fast_elements r)
(kvs_insert k v gv1 = fast_elements l), (kvs_insert k v gv1 = fast_elements_tr r gv1), (kvs_insert k v gv1 = fast_elements_tr l gv1), (kvs_insert k v gv1 = elements r), (kvs_insert k v gv1 = elements l), (kvs_insert k v gv1 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements r), (kvs_insert k v0 gv1 = fast_elements l), (kvs_insert k v0 gv1 = fast_elements_tr r gv1)
(kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements r), (kvs_insert k v0 gv1 = elements l), (kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements r = gv1), (fast_elements r = elements r), (fast_elements r = elements l), (fast_elements r = gv1 ++ gv1), (fast_elements l = gv1), (fast_elements l = elements r)
(fast_elements l = elements l), (fast_elements l = gv1 ++ gv1), (fast_elements_tr r gv1 = gv1), (fast_elements_tr r gv1 = fast_elements r), (fast_elements_tr r gv1 = fast_elements l), (fast_elements_tr r gv1 = elements r), (fast_elements_tr r gv1 = elements l), (fast_elements_tr r gv1 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv1), (fast_elements_tr l gv1 = fast_elements r)
(fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements r), (fast_elements_tr l gv1 = elements l), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements r = gv1), (elements r = gv1 ++ gv1), (elements l = gv1), (elements l = gv1 ++ gv1), (gv1 ++ gv1 = gv1), ([] = gv1)
([] = kvs_insert x v gv1), ([] = kvs_insert x v0 gv1), ([] = kvs_insert k v gv1), ([] = kvs_insert k v0 gv1), ([] = fast_elements r), ([] = fast_elements l), ([] = fast_elements_tr r gv1), ([] = fast_elements_tr l gv1), ([] = elements r), ([] = elements l)
([] = gv1 ++ gv1), ([] = list_keys gv1), (None = Some x), (None = Some k), (None = Some gv1), (None = Some gv0), (lookup v x r = v), (lookup v x r = v0), (lookup v x l = v), (lookup v x l = v0)
(lookup v k r = v), (lookup v k r = v0), (lookup v k l = v), (lookup v k l = v0), (lookup v0 x r = v), (lookup v0 x r = v0), (lookup v0 x l = v), (lookup v0 x l = v0), (lookup v0 k r = v), (lookup v0 k r = v0)
(lookup v0 k l = v), (lookup v0 k l = v0), (Red = lookup v x r), (Red = lookup v x l), (Red = lookup v k r), (Red = lookup v k l), (Red = lookup v0 x r), (Red = lookup v0 x l), (Red = lookup v0 k r), (Red = lookup v0 k l)
(Green = lookup v x r), (Green = lookup v x l), (Green = lookup v k r), (Green = lookup v k l), (Green = lookup v0 x r), (Green = lookup v0 x l), (Green = lookup v0 k r), (Green = lookup v0 k l), (Blue = lookup v x r), (Blue = lookup v x l)
(Blue = lookup v k r), (Blue = lookup v k l), (Blue = lookup v0 x r), (Blue = lookup v0 x l), (Blue = lookup v0 k r), (Blue = lookup v0 k l), (Datatypes.length gv1 = x), (Datatypes.length gv1 = k), (None = Some r), (None = Some l)
(T r x v r = r), (T r x v r = l), (T r x v r = insert x v r), (T r x v r = insert x v l), (T r x v r = insert x v0 r), (T r x v r = insert x v0 l), (T r x v r = insert k v r), (T r x v r = insert k v l), (T r x v r = insert k v0 r), (T r x v r = insert k v0 l)
(T r x v l = r), (T r x v l = l), (T r x v l = insert x v r), (T r x v l = insert x v l), (T r x v l = insert x v0 r), (T r x v l = insert x v0 l), (T r x v l = insert k v r), (T r x v l = insert k v l), (T r x v l = insert k v0 r), (T r x v l = insert k v0 l)
(T r x v0 r = r), (T r x v0 r = l), (T r x v0 r = insert x v r), (T r x v0 r = insert x v l), (T r x v0 r = insert x v0 r), (T r x v0 r = insert x v0 l), (T r x v0 r = insert k v r), (T r x v0 r = insert k v l), (T r x v0 r = insert k v0 r), (T r x v0 r = insert k v0 l)
(T r x v0 l = r), (T r x v0 l = l), (T r x v0 l = insert x v r), (T r x v0 l = insert x v l), (T r x v0 l = insert x v0 r), (T r x v0 l = insert x v0 l), (T r x v0 l = insert k v r), (T r x v0 l = insert k v l), (T r x v0 l = insert k v0 r), (T r x v0 l = insert k v0 l)
(T r k v r = r), (T r k v r = l), (T r k v r = insert x v r), (T r k v r = insert x v l), (T r k v r = insert x v0 r), (T r k v r = insert x v0 l), (T r k v r = insert k v r), (T r k v r = insert k v l), (T r k v r = insert k v0 r), (T r k v r = insert k v0 l)
(T r k v l = r), (T r k v l = l), (T r k v l = insert x v r), (T r k v l = insert x v l), (T r k v l = insert x v0 r), (T r k v l = insert x v0 l), (T r k v l = insert k v r), (T r k v l = insert k v l), (T r k v l = insert k v0 r), (T r k v l = insert k v0 l)
(T r k v0 r = r), (T r k v0 r = l), (T r k v0 r = insert x v r), (T r k v0 r = insert x v l), (T r k v0 r = insert x v0 r), (T r k v0 r = insert x v0 l), (T r k v0 r = insert k v r), (T r k v0 r = insert k v l), (T r k v0 r = insert k v0 r), (T r k v0 r = insert k v0 l)
(T r k v0 l = r), (T r k v0 l = l), (T r k v0 l = insert x v r), (T r k v0 l = insert x v l), (T r k v0 l = insert x v0 r), (T r k v0 l = insert x v0 l), (T r k v0 l = insert k v r), (T r k v0 l = insert k v l), (T r k v0 l = insert k v0 r), (T r k v0 l = insert k v0 l)
(T l x v r = r), (T l x v r = l), (T l x v r = insert x v r), (T l x v r = insert x v l), (T l x v r = insert x v0 r), (T l x v r = insert x v0 l), (T l x v r = insert k v r), (T l x v r = insert k v l), (T l x v r = insert k v0 r), (T l x v r = insert k v0 l)
(T l x v l = r), (T l x v l = l), (T l x v l = insert x v r), (T l x v l = insert x v l), (T l x v l = insert x v0 r), (T l x v l = insert x v0 l), (T l x v l = insert k v r), (T l x v l = insert k v l), (T l x v l = insert k v0 r), (T l x v l = insert k v0 l)
(T l x v0 r = r), (T l x v0 r = l), (T l x v0 r = insert x v r), (T l x v0 r = insert x v l), (T l x v0 r = insert x v0 r), (T l x v0 r = insert x v0 l), (T l x v0 r = insert k v r), (T l x v0 r = insert k v l), (T l x v0 r = insert k v0 r), (T l x v0 r = insert k v0 l)
(T l x v0 l = r), (T l x v0 l = l), (T l x v0 l = insert x v r), (T l x v0 l = insert x v l), (T l x v0 l = insert x v0 r), (T l x v0 l = insert x v0 l), (T l x v0 l = insert k v r), (T l x v0 l = insert k v l), (T l x v0 l = insert k v0 r), (T l x v0 l = insert k v0 l)
(T l k v r = r), (T l k v r = l), (T l k v r = insert x v r), (T l k v r = insert x v l), (T l k v r = insert x v0 r), (T l k v r = insert x v0 l), (T l k v r = insert k v r), (T l k v r = insert k v l), (T l k v r = insert k v0 r), (T l k v r = insert k v0 l)
(T l k v l = r), (T l k v l = l), (T l k v l = insert x v r), (T l k v l = insert x v l), (T l k v l = insert x v0 r), (T l k v l = insert x v0 l), (T l k v l = insert k v r), (T l k v l = insert k v l), (T l k v l = insert k v0 r), (T l k v l = insert k v0 l)
(T l k v0 r = r), (T l k v0 r = l), (T l k v0 r = insert x v r), (T l k v0 r = insert x v l), (T l k v0 r = insert x v0 r), (T l k v0 r = insert x v0 l), (T l k v0 r = insert k v r), (T l k v0 r = insert k v l), (T l k v0 r = insert k v0 r), (T l k v0 r = insert k v0 l)
(T l k v0 l = r), (T l k v0 l = l), (T l k v0 l = insert x v r), (T l k v0 l = insert x v l), (T l k v0 l = insert x v0 r), (T l k v0 l = insert x v0 l), (T l k v0 l = insert k v r), (T l k v0 l = insert k v l), (T l k v0 l = insert k v0 r), (T l k v0 l = insert k v0 l)
(insert x v r = r), (insert x v r = l), (insert x v l = r), (insert x v l = l), (insert x v0 r = r), (insert x v0 r = l), (insert x v0 l = r), (insert x v0 l = l), (insert k v r = r), (insert k v r = l)
(insert k v l = r), (insert k v l = l), (insert k v0 r = r), (insert k v0 r = l), (insert k v0 l = r), (insert k v0 l = l), (empty_tree = T r x v r), (empty_tree = T r x v l), (empty_tree = T r x v0 r), (empty_tree = T r x v0 l)
(empty_tree = T r k v r), (empty_tree = T r k v l), (empty_tree = T r k v0 r), (empty_tree = T r k v0 l), (empty_tree = T l x v r), (empty_tree = T l x v l), (empty_tree = T l x v0 r), (empty_tree = T l x v0 l), (empty_tree = T l k v r), (empty_tree = T l k v l)
(empty_tree = T l k v0 r), (empty_tree = T l k v0 l), (empty_tree = insert x v r), (empty_tree = insert x v l), (empty_tree = insert x v0 r), (empty_tree = insert x v0 l), (empty_tree = insert k v r), (empty_tree = insert k v l), (empty_tree = insert k v0 r), (empty_tree = insert k v0 l)
(E = T r x v r), (E = T r x v l), (E = T r x v0 r), (E = T r x v0 l), (E = T r k v r), (E = T r k v l), (E = T r k v0 r), (E = T r k v0 l), (E = T l x v r), (E = T l x v l)
(E = T l x v0 r), (E = T l x v0 l), (E = T l k v r), (E = T l k v l), (E = T l k v0 r), (E = T l k v0 l), (E = insert x v r), (E = insert x v l), (E = insert x v0 r), (E = insert x v0 l)
(E = insert k v r), (E = insert k v l), (E = insert k v0 r), (E = insert k v0 l), (None = Some v), (None = Some v0), ((x, v) = gv0), ((x, v0) = gv0), ((k, v) = gv0), ((k, v0) = gv0)

Label: 6 (6)
(disjoint gv3 gv3), (disjoint gv3 gv1), (disjoint gv1 gv3), (disjoint gv1 gv1), (BST l), (Permutation gv3 gv3), (Permutation gv3 gv1), (Permutation gv1 gv3), (Permutation gv1 gv1), (k < k)
(k <= k), (l = l), (gv3 = gv3), (gv3 = gv1), (gv1 = gv3), (gv1 = gv1), (v0 = v0), (k = k), (false = bound k l), (true = bound k l)
(disjoint (list_keys gv3) (list_keys gv1)), (disjoint (list_keys gv3) []), (disjoint (list_keys gv1) (list_keys gv3)), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv3)), (disjoint [] (list_keys gv1)), (disjoint gv3 (kvs_insert k v0 gv3)), (disjoint gv3 (kvs_insert k v0 gv1)), (disjoint gv3 (fast_elements l)), (disjoint gv3 (fast_elements_tr l gv3))
(disjoint gv3 (fast_elements_tr l gv1)), (disjoint gv3 (elements l)), (disjoint gv3 (gv3 ++ gv3)), (disjoint gv3 (gv3 ++ gv1)), (disjoint gv3 (gv1 ++ gv3)), (disjoint gv3 (gv1 ++ gv1)), (disjoint gv3 []), (disjoint gv1 (kvs_insert k v0 gv3)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements l))
(disjoint gv1 (fast_elements_tr l gv3)), (disjoint gv1 (fast_elements_tr l gv1)), (disjoint gv1 (elements l)), (disjoint gv1 (gv3 ++ gv3)), (disjoint gv1 (gv3 ++ gv1)), (disjoint gv1 (gv1 ++ gv3)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 []), (disjoint (kvs_insert k v0 gv3) gv3), (disjoint (kvs_insert k v0 gv3) gv1)
(disjoint (kvs_insert k v0 gv3) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v0 gv3) (fast_elements l)), (disjoint (kvs_insert k v0 gv3) (fast_elements_tr l gv3)), (disjoint (kvs_insert k v0 gv3) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv3) (elements l)), (disjoint (kvs_insert k v0 gv3) (gv3 ++ gv3)), (disjoint (kvs_insert k v0 gv3) (gv3 ++ gv1)), (disjoint (kvs_insert k v0 gv3) (gv1 ++ gv3)), (disjoint (kvs_insert k v0 gv3) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv3) [])
(disjoint (kvs_insert k v0 gv1) gv3), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v0 gv3)), (disjoint (kvs_insert k v0 gv1) (fast_elements l)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv3)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (disjoint (kvs_insert k v0 gv1) (elements l)), (disjoint (kvs_insert k v0 gv1) (gv3 ++ gv3)), (disjoint (kvs_insert k v0 gv1) (gv3 ++ gv1)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv3))
(disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements l) gv3), (disjoint (fast_elements l) gv1), (disjoint (fast_elements l) (kvs_insert k v0 gv3)), (disjoint (fast_elements l) (kvs_insert k v0 gv1)), (disjoint (fast_elements l) (fast_elements_tr l gv3)), (disjoint (fast_elements l) (fast_elements_tr l gv1)), (disjoint (fast_elements l) (elements l)), (disjoint (fast_elements l) (gv3 ++ gv3))
(disjoint (fast_elements l) (gv3 ++ gv1)), (disjoint (fast_elements l) (gv1 ++ gv3)), (disjoint (fast_elements l) (gv1 ++ gv1)), (disjoint (fast_elements l) []), (disjoint (fast_elements_tr l gv3) gv3), (disjoint (fast_elements_tr l gv3) gv1), (disjoint (fast_elements_tr l gv3) (kvs_insert k v0 gv3)), (disjoint (fast_elements_tr l gv3) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr l gv3) (fast_elements l)), (disjoint (fast_elements_tr l gv3) (fast_elements_tr l gv1))
(disjoint (fast_elements_tr l gv3) (elements l)), (disjoint (fast_elements_tr l gv3) (gv3 ++ gv3)), (disjoint (fast_elements_tr l gv3) (gv3 ++ gv1)), (disjoint (fast_elements_tr l gv3) (gv1 ++ gv3)), (disjoint (fast_elements_tr l gv3) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv3) []), (disjoint (fast_elements_tr l gv1) gv3), (disjoint (fast_elements_tr l gv1) gv1), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv3)), (disjoint (fast_elements_tr l gv1) (kvs_insert k v0 gv1))
(disjoint (fast_elements_tr l gv1) (fast_elements l)), (disjoint (fast_elements_tr l gv1) (fast_elements_tr l gv3)), (disjoint (fast_elements_tr l gv1) (elements l)), (disjoint (fast_elements_tr l gv1) (gv3 ++ gv3)), (disjoint (fast_elements_tr l gv1) (gv3 ++ gv1)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv3)), (disjoint (fast_elements_tr l gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr l gv1) []), (disjoint (elements l) gv3), (disjoint (elements l) gv1)
(disjoint (elements l) (kvs_insert k v0 gv3)), (disjoint (elements l) (kvs_insert k v0 gv1)), (disjoint (elements l) (fast_elements l)), (disjoint (elements l) (fast_elements_tr l gv3)), (disjoint (elements l) (fast_elements_tr l gv1)), (disjoint (elements l) (gv3 ++ gv3)), (disjoint (elements l) (gv3 ++ gv1)), (disjoint (elements l) (gv1 ++ gv3)), (disjoint (elements l) (gv1 ++ gv1)), (disjoint (elements l) [])
(disjoint (gv3 ++ gv3) gv3), (disjoint (gv3 ++ gv3) gv1), (disjoint (gv3 ++ gv3) (kvs_insert k v0 gv3)), (disjoint (gv3 ++ gv3) (kvs_insert k v0 gv1)), (disjoint (gv3 ++ gv3) (fast_elements l)), (disjoint (gv3 ++ gv3) (fast_elements_tr l gv3)), (disjoint (gv3 ++ gv3) (fast_elements_tr l gv1)), (disjoint (gv3 ++ gv3) (elements l)), (disjoint (gv3 ++ gv3) (gv3 ++ gv1)), (disjoint (gv3 ++ gv3) (gv1 ++ gv3))
(disjoint (gv3 ++ gv3) (gv1 ++ gv1)), (disjoint (gv3 ++ gv3) []), (disjoint (gv3 ++ gv1) gv3), (disjoint (gv3 ++ gv1) gv1), (disjoint (gv3 ++ gv1) (kvs_insert k v0 gv3)), (disjoint (gv3 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv3 ++ gv1) (fast_elements l)), (disjoint (gv3 ++ gv1) (fast_elements_tr l gv3)), (disjoint (gv3 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv3 ++ gv1) (elements l))
(disjoint (gv3 ++ gv1) (gv3 ++ gv3)), (disjoint (gv3 ++ gv1) (gv1 ++ gv3)), (disjoint (gv3 ++ gv1) (gv1 ++ gv1)), (disjoint (gv3 ++ gv1) []), (disjoint (gv1 ++ gv3) gv3), (disjoint (gv1 ++ gv3) gv1), (disjoint (gv1 ++ gv3) (kvs_insert k v0 gv3)), (disjoint (gv1 ++ gv3) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv3) (fast_elements l)), (disjoint (gv1 ++ gv3) (fast_elements_tr l gv3))
(disjoint (gv1 ++ gv3) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv3) (elements l)), (disjoint (gv1 ++ gv3) (gv3 ++ gv3)), (disjoint (gv1 ++ gv3) (gv3 ++ gv1)), (disjoint (gv1 ++ gv3) (gv1 ++ gv1)), (disjoint (gv1 ++ gv3) []), (disjoint (gv1 ++ gv1) gv3), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv3)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1))
(disjoint (gv1 ++ gv1) (fast_elements l)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv3)), (disjoint (gv1 ++ gv1) (fast_elements_tr l gv1)), (disjoint (gv1 ++ gv1) (elements l)), (disjoint (gv1 ++ gv1) (gv3 ++ gv3)), (disjoint (gv1 ++ gv1) (gv3 ++ gv1)), (disjoint (gv1 ++ gv1) (gv1 ++ gv3)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv3), (disjoint [] gv1)
(disjoint [] (kvs_insert k v0 gv3)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements l)), (disjoint [] (fast_elements_tr l gv3)), (disjoint [] (fast_elements_tr l gv1)), (disjoint [] (elements l)), (disjoint [] (gv3 ++ gv3)), (disjoint [] (gv3 ++ gv1)), (disjoint [] (gv1 ++ gv3)), (disjoint [] (gv1 ++ gv1))
(BST (T l k v0 l)), (BST (insert k v0 l)), (BST empty_tree), (BST E), (k <=* list_keys gv3), (k <=* list_keys gv1), (k <=* []), (Datatypes.length gv3 <=* list_keys gv3), (Datatypes.length gv3 <=* list_keys gv1), (Datatypes.length gv3 <=* [])
(Datatypes.length gv1 <=* list_keys gv3), (Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv3)), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv3) (list_keys gv1)), (Permutation (list_keys gv3) []), (Permutation (list_keys gv1) (list_keys gv3)), (Permutation (list_keys gv1) [])
(Permutation [] (list_keys gv3)), (Permutation [] (list_keys gv1)), (Permutation gv3 (kvs_insert k v0 gv3)), (Permutation gv3 (kvs_insert k v0 gv1)), (Permutation gv3 (fast_elements l)), (Permutation gv3 (fast_elements_tr l gv3)), (Permutation gv3 (fast_elements_tr l gv1)), (Permutation gv3 (elements l)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ gv1))
(Permutation gv3 (gv1 ++ gv3)), (Permutation gv3 (gv1 ++ gv1)), (Permutation gv3 []), (Permutation gv1 (kvs_insert k v0 gv3)), (Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements l)), (Permutation gv1 (fast_elements_tr l gv3)), (Permutation gv1 (fast_elements_tr l gv1)), (Permutation gv1 (elements l)), (Permutation gv1 (gv3 ++ gv3))
(Permutation gv1 (gv3 ++ gv1)), (Permutation gv1 (gv1 ++ gv3)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (kvs_insert k v0 gv3) gv3), (Permutation (kvs_insert k v0 gv3) gv1), (Permutation (kvs_insert k v0 gv3) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v0 gv3) (fast_elements l)), (Permutation (kvs_insert k v0 gv3) (fast_elements_tr l gv3)), (Permutation (kvs_insert k v0 gv3) (fast_elements_tr l gv1))
(Permutation (kvs_insert k v0 gv3) (elements l)), (Permutation (kvs_insert k v0 gv3) (gv3 ++ gv3)), (Permutation (kvs_insert k v0 gv3) (gv3 ++ gv1)), (Permutation (kvs_insert k v0 gv3) (gv1 ++ gv3)), (Permutation (kvs_insert k v0 gv3) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv3) []), (Permutation (kvs_insert k v0 gv1) gv3), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v0 gv3)), (Permutation (kvs_insert k v0 gv1) (fast_elements l))
(Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv3)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr l gv1)), (Permutation (kvs_insert k v0 gv1) (elements l)), (Permutation (kvs_insert k v0 gv1) (gv3 ++ gv3)), (Permutation (kvs_insert k v0 gv1) (gv3 ++ gv1)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv3)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements l) gv3), (Permutation (fast_elements l) gv1)
(Permutation (fast_elements l) (kvs_insert k v0 gv3)), (Permutation (fast_elements l) (kvs_insert k v0 gv1)), (Permutation (fast_elements l) (fast_elements_tr l gv3)), (Permutation (fast_elements l) (fast_elements_tr l gv1)), (Permutation (fast_elements l) (elements l)), (Permutation (fast_elements l) (gv3 ++ gv3)), (Permutation (fast_elements l) (gv3 ++ gv1)), (Permutation (fast_elements l) (gv1 ++ gv3)), (Permutation (fast_elements l) (gv1 ++ gv1)), (Permutation (fast_elements l) [])
(Permutation (fast_elements_tr l gv3) gv3), (Permutation (fast_elements_tr l gv3) gv1), (Permutation (fast_elements_tr l gv3) (kvs_insert k v0 gv3)), (Permutation (fast_elements_tr l gv3) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv3) (fast_elements l)), (Permutation (fast_elements_tr l gv3) (fast_elements_tr l gv1)), (Permutation (fast_elements_tr l gv3) (elements l)), (Permutation (fast_elements_tr l gv3) (gv3 ++ gv3)), (Permutation (fast_elements_tr l gv3) (gv3 ++ gv1)), (Permutation (fast_elements_tr l gv3) (gv1 ++ gv3))
(Permutation (fast_elements_tr l gv3) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv3) []), (Permutation (fast_elements_tr l gv1) gv3), (Permutation (fast_elements_tr l gv1) gv1), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv3)), (Permutation (fast_elements_tr l gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr l gv1) (fast_elements l)), (Permutation (fast_elements_tr l gv1) (fast_elements_tr l gv3)), (Permutation (fast_elements_tr l gv1) (elements l)), (Permutation (fast_elements_tr l gv1) (gv3 ++ gv3))
(Permutation (fast_elements_tr l gv1) (gv3 ++ gv1)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv3)), (Permutation (fast_elements_tr l gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr l gv1) []), (Permutation (elements l) gv3), (Permutation (elements l) gv1), (Permutation (elements l) (kvs_insert k v0 gv3)), (Permutation (elements l) (kvs_insert k v0 gv1)), (Permutation (elements l) (fast_elements l)), (Permutation (elements l) (fast_elements_tr l gv3))
(Permutation (elements l) (fast_elements_tr l gv1)), (Permutation (elements l) (gv3 ++ gv3)), (Permutation (elements l) (gv3 ++ gv1)), (Permutation (elements l) (gv1 ++ gv3)), (Permutation (elements l) (gv1 ++ gv1)), (Permutation (elements l) []), (Permutation (gv3 ++ gv3) gv3), (Permutation (gv3 ++ gv3) gv1), (Permutation (gv3 ++ gv3) (kvs_insert k v0 gv3)), (Permutation (gv3 ++ gv3) (kvs_insert k v0 gv1))
(Permutation (gv3 ++ gv3) (fast_elements l)), (Permutation (gv3 ++ gv3) (fast_elements_tr l gv3)), (Permutation (gv3 ++ gv3) (fast_elements_tr l gv1)), (Permutation (gv3 ++ gv3) (elements l)), (Permutation (gv3 ++ gv3) (gv3 ++ gv1)), (Permutation (gv3 ++ gv3) (gv1 ++ gv3)), (Permutation (gv3 ++ gv3) (gv1 ++ gv1)), (Permutation (gv3 ++ gv3) []), (Permutation (gv3 ++ gv1) gv3), (Permutation (gv3 ++ gv1) gv1)
(Permutation (gv3 ++ gv1) (kvs_insert k v0 gv3)), (Permutation (gv3 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv3 ++ gv1) (fast_elements l)), (Permutation (gv3 ++ gv1) (fast_elements_tr l gv3)), (Permutation (gv3 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv3 ++ gv1) (elements l)), (Permutation (gv3 ++ gv1) (gv3 ++ gv3)), (Permutation (gv3 ++ gv1) (gv1 ++ gv3)), (Permutation (gv3 ++ gv1) (gv1 ++ gv1)), (Permutation (gv3 ++ gv1) [])
(Permutation (gv1 ++ gv3) gv3), (Permutation (gv1 ++ gv3) gv1), (Permutation (gv1 ++ gv3) (kvs_insert k v0 gv3)), (Permutation (gv1 ++ gv3) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv3) (fast_elements l)), (Permutation (gv1 ++ gv3) (fast_elements_tr l gv3)), (Permutation (gv1 ++ gv3) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv3) (elements l)), (Permutation (gv1 ++ gv3) (gv3 ++ gv3)), (Permutation (gv1 ++ gv3) (gv3 ++ gv1))
(Permutation (gv1 ++ gv3) (gv1 ++ gv1)), (Permutation (gv1 ++ gv3) []), (Permutation (gv1 ++ gv1) gv3), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv3)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements l)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv3)), (Permutation (gv1 ++ gv1) (fast_elements_tr l gv1)), (Permutation (gv1 ++ gv1) (elements l))
(Permutation (gv1 ++ gv1) (gv3 ++ gv3)), (Permutation (gv1 ++ gv1) (gv3 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ gv3)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv3), (Permutation [] gv1), (Permutation [] (kvs_insert k v0 gv3)), (Permutation [] (kvs_insert k v0 gv1)), (Permutation [] (fast_elements l)), (Permutation [] (fast_elements_tr l gv3))
(Permutation [] (fast_elements_tr l gv1)), (Permutation [] (elements l)), (Permutation [] (gv3 ++ gv3)), (Permutation [] (gv3 ++ gv1)), (Permutation [] (gv1 ++ gv3)), (Permutation [] (gv1 ++ gv1)), (In k (list_keys gv3)), (In k (list_keys gv1)), (In (Datatypes.length gv3) (list_keys gv3)), (In (Datatypes.length gv3) (list_keys gv1))
(In (Datatypes.length gv1) (list_keys gv3)), (In (Datatypes.length gv1) (list_keys gv1)), (In (k, v0) gv3), (In (k, v0) gv1), (In (k, v0) (kvs_insert k v0 gv3)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements l)), (In (k, v0) (fast_elements_tr l gv3)), (In (k, v0) (fast_elements_tr l gv1)), (In (k, v0) (elements l))
(In (k, v0) (gv3 ++ gv3)), (In (k, v0) (gv3 ++ gv1)), (In (k, v0) (gv1 ++ gv3)), (In (k, v0) (gv1 ++ gv1)), (k < Datatypes.length gv3), (k < Datatypes.length gv1), (Datatypes.length gv3 < k), (Datatypes.length gv3 < Datatypes.length gv1), (Datatypes.length gv1 < k), (Datatypes.length gv1 < Datatypes.length gv3)
(k <= Datatypes.length gv3), (k <= Datatypes.length gv1), (Datatypes.length gv3 <= k), (Datatypes.length gv3 <= Datatypes.length gv1), (Datatypes.length gv1 <= k), (Datatypes.length gv1 <= Datatypes.length gv3), (~ disjoint gv3 gv3), (~ disjoint gv3 gv1), (~ disjoint gv1 gv3), (~ disjoint gv1 gv1)
(~ BST l), (~ Permutation gv3 gv3), (~ Permutation gv3 gv1), (~ Permutation gv1 gv3), (~ Permutation gv1 gv1), (~ k < k), (~ k <= k), (l <> l), (gv3 <> gv3), (gv3 <> gv1)
(gv1 <> gv3), (gv1 <> gv1), (v0 <> v0), (k <> k), (kvs_insert k v0 gv3 = gv3), (kvs_insert k v0 gv3 = gv1), (kvs_insert k v0 gv3 = fast_elements l), (kvs_insert k v0 gv3 = fast_elements_tr l gv3), (kvs_insert k v0 gv3 = fast_elements_tr l gv1), (kvs_insert k v0 gv3 = elements l)
(kvs_insert k v0 gv3 = gv3 ++ gv3), (kvs_insert k v0 gv3 = gv3 ++ gv1), (kvs_insert k v0 gv3 = gv1 ++ gv3), (kvs_insert k v0 gv3 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv3), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements l), (kvs_insert k v0 gv1 = fast_elements_tr l gv3), (kvs_insert k v0 gv1 = fast_elements_tr l gv1), (kvs_insert k v0 gv1 = elements l)
(kvs_insert k v0 gv1 = gv3 ++ gv3), (kvs_insert k v0 gv1 = gv3 ++ gv1), (kvs_insert k v0 gv1 = gv1 ++ gv3), (kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements l = gv3), (fast_elements l = gv1), (fast_elements l = elements l), (fast_elements l = gv3 ++ gv3), (fast_elements l = gv3 ++ gv1), (fast_elements l = gv1 ++ gv3)
(fast_elements l = gv1 ++ gv1), (fast_elements_tr l gv3 = gv3), (fast_elements_tr l gv3 = gv1), (fast_elements_tr l gv3 = fast_elements l), (fast_elements_tr l gv3 = elements l), (fast_elements_tr l gv3 = gv3 ++ gv3), (fast_elements_tr l gv3 = gv3 ++ gv1), (fast_elements_tr l gv3 = gv1 ++ gv3), (fast_elements_tr l gv3 = gv1 ++ gv1), (fast_elements_tr l gv1 = gv3)
(fast_elements_tr l gv1 = gv1), (fast_elements_tr l gv1 = fast_elements l), (fast_elements_tr l gv1 = elements l), (fast_elements_tr l gv1 = gv3 ++ gv3), (fast_elements_tr l gv1 = gv3 ++ gv1), (fast_elements_tr l gv1 = gv1 ++ gv3), (fast_elements_tr l gv1 = gv1 ++ gv1), (elements l = gv3), (elements l = gv1), (elements l = gv3 ++ gv3)
(elements l = gv3 ++ gv1), (elements l = gv1 ++ gv3), (elements l = gv1 ++ gv1), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = gv1), (gv3 ++ gv1 = gv3), (gv3 ++ gv1 = gv1), (gv1 ++ gv3 = gv3), (gv1 ++ gv3 = gv1), (gv1 ++ gv1 = gv3)
(gv1 ++ gv1 = gv1), ([] = gv3), ([] = gv1), ([] = kvs_insert k v0 gv3), ([] = kvs_insert k v0 gv1), ([] = fast_elements l), ([] = fast_elements_tr l gv3), ([] = fast_elements_tr l gv1), ([] = elements l), ([] = gv3 ++ gv3)
([] = gv3 ++ gv1), ([] = gv1 ++ gv3), ([] = gv1 ++ gv1), ([] = list_keys gv3), ([] = list_keys gv1), (None = Some k), (None = Some gv3), (None = Some gv1), (lookup v0 k l = v0), (Red = lookup v0 k l)
(Green = lookup v0 k l), (Blue = lookup v0 k l), (Datatypes.length gv3 = k), (Datatypes.length gv1 = k), (None = Some l), (T l k v0 l = l), (T l k v0 l = insert k v0 l), (insert k v0 l = l), (empty_tree = T l k v0 l), (empty_tree = insert k v0 l)
(E = T l k v0 l), (E = insert k v0 l), (None = Some v0)

Label: 7 (7)
(disjoint gv2 gv2), (disjoint gv2 gv1), (disjoint gv1 gv2), (disjoint gv1 gv1), (BST r), (Permutation gv2 gv2), (Permutation gv2 gv1), (Permutation gv1 gv2), (Permutation gv1 gv1), (x < x)
(x < k), (k < x), (k < k), (x <= x), (x <= k), (k <= x), (k <= k), (r = r), (gv2 = gv2), (gv2 = gv1)
(gv1 = gv2), (gv1 = gv1), (v = v), (v = v0), (v0 = v), (v0 = v0), (x = x), (x = k), (k = x), (k = k)
(false = bound x r), (false = bound k r), (true = bound x r), (true = bound k r), (disjoint (list_keys gv2) (list_keys gv1)), (disjoint (list_keys gv2) []), (disjoint (list_keys gv1) (list_keys gv2)), (disjoint (list_keys gv1) []), (disjoint [] (list_keys gv2)), (disjoint [] (list_keys gv1))
(disjoint gv2 (kvs_insert x v gv2)), (disjoint gv2 (kvs_insert x v gv1)), (disjoint gv2 (kvs_insert x v0 gv2)), (disjoint gv2 (kvs_insert x v0 gv1)), (disjoint gv2 (kvs_insert k v gv2)), (disjoint gv2 (kvs_insert k v gv1)), (disjoint gv2 (kvs_insert k v0 gv2)), (disjoint gv2 (kvs_insert k v0 gv1)), (disjoint gv2 (fast_elements r)), (disjoint gv2 (fast_elements_tr r gv2))
(disjoint gv2 (fast_elements_tr r gv1)), (disjoint gv2 (elements r)), (disjoint gv2 (gv2 ++ gv2)), (disjoint gv2 (gv2 ++ gv1)), (disjoint gv2 (gv1 ++ gv2)), (disjoint gv2 (gv1 ++ gv1)), (disjoint gv2 []), (disjoint gv1 (kvs_insert x v gv2)), (disjoint gv1 (kvs_insert x v gv1)), (disjoint gv1 (kvs_insert x v0 gv2))
(disjoint gv1 (kvs_insert x v0 gv1)), (disjoint gv1 (kvs_insert k v gv2)), (disjoint gv1 (kvs_insert k v gv1)), (disjoint gv1 (kvs_insert k v0 gv2)), (disjoint gv1 (kvs_insert k v0 gv1)), (disjoint gv1 (fast_elements r)), (disjoint gv1 (fast_elements_tr r gv2)), (disjoint gv1 (fast_elements_tr r gv1)), (disjoint gv1 (elements r)), (disjoint gv1 (gv2 ++ gv2))
(disjoint gv1 (gv2 ++ gv1)), (disjoint gv1 (gv1 ++ gv2)), (disjoint gv1 (gv1 ++ gv1)), (disjoint gv1 []), (disjoint (kvs_insert x v gv2) gv2), (disjoint (kvs_insert x v gv2) gv1), (disjoint (kvs_insert x v gv2) (kvs_insert x v gv1)), (disjoint (kvs_insert x v gv2) (kvs_insert x v0 gv2)), (disjoint (kvs_insert x v gv2) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv2) (kvs_insert k v gv2))
(disjoint (kvs_insert x v gv2) (kvs_insert k v gv1)), (disjoint (kvs_insert x v gv2) (kvs_insert k v0 gv2)), (disjoint (kvs_insert x v gv2) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv2) (fast_elements r)), (disjoint (kvs_insert x v gv2) (fast_elements_tr r gv2)), (disjoint (kvs_insert x v gv2) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v gv2) (elements r)), (disjoint (kvs_insert x v gv2) (gv2 ++ gv2)), (disjoint (kvs_insert x v gv2) (gv2 ++ gv1)), (disjoint (kvs_insert x v gv2) (gv1 ++ gv2))
(disjoint (kvs_insert x v gv2) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv2) []), (disjoint (kvs_insert x v gv1) gv2), (disjoint (kvs_insert x v gv1) gv1), (disjoint (kvs_insert x v gv1) (kvs_insert x v gv2)), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv2)), (disjoint (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv2)), (disjoint (kvs_insert x v gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv2))
(disjoint (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v gv1) (fast_elements r)), (disjoint (kvs_insert x v gv1) (fast_elements_tr r gv2)), (disjoint (kvs_insert x v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v gv1) (elements r)), (disjoint (kvs_insert x v gv1) (gv2 ++ gv2)), (disjoint (kvs_insert x v gv1) (gv2 ++ gv1)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv2)), (disjoint (kvs_insert x v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v gv1) [])
(disjoint (kvs_insert x v0 gv2) gv2), (disjoint (kvs_insert x v0 gv2) gv1), (disjoint (kvs_insert x v0 gv2) (kvs_insert x v gv2)), (disjoint (kvs_insert x v0 gv2) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv2) (kvs_insert x v0 gv1)), (disjoint (kvs_insert x v0 gv2) (kvs_insert k v gv2)), (disjoint (kvs_insert x v0 gv2) (kvs_insert k v gv1)), (disjoint (kvs_insert x v0 gv2) (kvs_insert k v0 gv2)), (disjoint (kvs_insert x v0 gv2) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv2) (fast_elements r))
(disjoint (kvs_insert x v0 gv2) (fast_elements_tr r gv2)), (disjoint (kvs_insert x v0 gv2) (fast_elements_tr r gv1)), (disjoint (kvs_insert x v0 gv2) (elements r)), (disjoint (kvs_insert x v0 gv2) (gv2 ++ gv2)), (disjoint (kvs_insert x v0 gv2) (gv2 ++ gv1)), (disjoint (kvs_insert x v0 gv2) (gv1 ++ gv2)), (disjoint (kvs_insert x v0 gv2) (gv1 ++ gv1)), (disjoint (kvs_insert x v0 gv2) []), (disjoint (kvs_insert x v0 gv1) gv2), (disjoint (kvs_insert x v0 gv1) gv1)
(disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv2)), (disjoint (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert x v0 gv2)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv2)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv2)), (disjoint (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert x v0 gv1) (fast_elements r)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr r gv2)), (disjoint (kvs_insert x v0 gv1) (fast_elements_tr r gv1))
(disjoint (kvs_insert x v0 gv1) (elements r)), (disjoint (kvs_insert x v0 gv1) (gv2 ++ gv2)), (disjoint (kvs_insert x v0 gv1) (gv2 ++ gv1)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv2)), (disjoint (kvs_insert x v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert x v0 gv1) []), (disjoint (kvs_insert k v gv2) gv2), (disjoint (kvs_insert k v gv2) gv1), (disjoint (kvs_insert k v gv2) (kvs_insert x v gv2)), (disjoint (kvs_insert k v gv2) (kvs_insert x v gv1))
(disjoint (kvs_insert k v gv2) (kvs_insert x v0 gv2)), (disjoint (kvs_insert k v gv2) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v gv2) (kvs_insert k v gv1)), (disjoint (kvs_insert k v gv2) (kvs_insert k v0 gv2)), (disjoint (kvs_insert k v gv2) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv2) (fast_elements r)), (disjoint (kvs_insert k v gv2) (fast_elements_tr r gv2)), (disjoint (kvs_insert k v gv2) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v gv2) (elements r)), (disjoint (kvs_insert k v gv2) (gv2 ++ gv2))
(disjoint (kvs_insert k v gv2) (gv2 ++ gv1)), (disjoint (kvs_insert k v gv2) (gv1 ++ gv2)), (disjoint (kvs_insert k v gv2) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv2) []), (disjoint (kvs_insert k v gv1) gv2), (disjoint (kvs_insert k v gv1) gv1), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv2)), (disjoint (kvs_insert k v gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv2)), (disjoint (kvs_insert k v gv1) (kvs_insert x v0 gv1))
(disjoint (kvs_insert k v gv1) (kvs_insert k v gv2)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv2)), (disjoint (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v gv1) (fast_elements r)), (disjoint (kvs_insert k v gv1) (fast_elements_tr r gv2)), (disjoint (kvs_insert k v gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v gv1) (elements r)), (disjoint (kvs_insert k v gv1) (gv2 ++ gv2)), (disjoint (kvs_insert k v gv1) (gv2 ++ gv1)), (disjoint (kvs_insert k v gv1) (gv1 ++ gv2))
(disjoint (kvs_insert k v gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v gv1) []), (disjoint (kvs_insert k v0 gv2) gv2), (disjoint (kvs_insert k v0 gv2) gv1), (disjoint (kvs_insert k v0 gv2) (kvs_insert x v gv2)), (disjoint (kvs_insert k v0 gv2) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv2) (kvs_insert x v0 gv2)), (disjoint (kvs_insert k v0 gv2) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv2) (kvs_insert k v gv2)), (disjoint (kvs_insert k v0 gv2) (kvs_insert k v gv1))
(disjoint (kvs_insert k v0 gv2) (kvs_insert k v0 gv1)), (disjoint (kvs_insert k v0 gv2) (fast_elements r)), (disjoint (kvs_insert k v0 gv2) (fast_elements_tr r gv2)), (disjoint (kvs_insert k v0 gv2) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v0 gv2) (elements r)), (disjoint (kvs_insert k v0 gv2) (gv2 ++ gv2)), (disjoint (kvs_insert k v0 gv2) (gv2 ++ gv1)), (disjoint (kvs_insert k v0 gv2) (gv1 ++ gv2)), (disjoint (kvs_insert k v0 gv2) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv2) [])
(disjoint (kvs_insert k v0 gv1) gv2), (disjoint (kvs_insert k v0 gv1) gv1), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv2)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv2)), (disjoint (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv2)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (disjoint (kvs_insert k v0 gv1) (kvs_insert k v0 gv2)), (disjoint (kvs_insert k v0 gv1) (fast_elements r))
(disjoint (kvs_insert k v0 gv1) (fast_elements_tr r gv2)), (disjoint (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (disjoint (kvs_insert k v0 gv1) (elements r)), (disjoint (kvs_insert k v0 gv1) (gv2 ++ gv2)), (disjoint (kvs_insert k v0 gv1) (gv2 ++ gv1)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv2)), (disjoint (kvs_insert k v0 gv1) (gv1 ++ gv1)), (disjoint (kvs_insert k v0 gv1) []), (disjoint (fast_elements r) gv2), (disjoint (fast_elements r) gv1)
(disjoint (fast_elements r) (kvs_insert x v gv2)), (disjoint (fast_elements r) (kvs_insert x v gv1)), (disjoint (fast_elements r) (kvs_insert x v0 gv2)), (disjoint (fast_elements r) (kvs_insert x v0 gv1)), (disjoint (fast_elements r) (kvs_insert k v gv2)), (disjoint (fast_elements r) (kvs_insert k v gv1)), (disjoint (fast_elements r) (kvs_insert k v0 gv2)), (disjoint (fast_elements r) (kvs_insert k v0 gv1)), (disjoint (fast_elements r) (fast_elements_tr r gv2)), (disjoint (fast_elements r) (fast_elements_tr r gv1))
(disjoint (fast_elements r) (elements r)), (disjoint (fast_elements r) (gv2 ++ gv2)), (disjoint (fast_elements r) (gv2 ++ gv1)), (disjoint (fast_elements r) (gv1 ++ gv2)), (disjoint (fast_elements r) (gv1 ++ gv1)), (disjoint (fast_elements r) []), (disjoint (fast_elements_tr r gv2) gv2), (disjoint (fast_elements_tr r gv2) gv1), (disjoint (fast_elements_tr r gv2) (kvs_insert x v gv2)), (disjoint (fast_elements_tr r gv2) (kvs_insert x v gv1))
(disjoint (fast_elements_tr r gv2) (kvs_insert x v0 gv2)), (disjoint (fast_elements_tr r gv2) (kvs_insert x v0 gv1)), (disjoint (fast_elements_tr r gv2) (kvs_insert k v gv2)), (disjoint (fast_elements_tr r gv2) (kvs_insert k v gv1)), (disjoint (fast_elements_tr r gv2) (kvs_insert k v0 gv2)), (disjoint (fast_elements_tr r gv2) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr r gv2) (fast_elements r)), (disjoint (fast_elements_tr r gv2) (fast_elements_tr r gv1)), (disjoint (fast_elements_tr r gv2) (elements r)), (disjoint (fast_elements_tr r gv2) (gv2 ++ gv2))
(disjoint (fast_elements_tr r gv2) (gv2 ++ gv1)), (disjoint (fast_elements_tr r gv2) (gv1 ++ gv2)), (disjoint (fast_elements_tr r gv2) (gv1 ++ gv1)), (disjoint (fast_elements_tr r gv2) []), (disjoint (fast_elements_tr r gv1) gv2), (disjoint (fast_elements_tr r gv1) gv1), (disjoint (fast_elements_tr r gv1) (kvs_insert x v gv2)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v0 gv2)), (disjoint (fast_elements_tr r gv1) (kvs_insert x v0 gv1))
(disjoint (fast_elements_tr r gv1) (kvs_insert k v gv2)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v gv1)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v0 gv2)), (disjoint (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (disjoint (fast_elements_tr r gv1) (fast_elements r)), (disjoint (fast_elements_tr r gv1) (fast_elements_tr r gv2)), (disjoint (fast_elements_tr r gv1) (elements r)), (disjoint (fast_elements_tr r gv1) (gv2 ++ gv2)), (disjoint (fast_elements_tr r gv1) (gv2 ++ gv1)), (disjoint (fast_elements_tr r gv1) (gv1 ++ gv2))
(disjoint (fast_elements_tr r gv1) (gv1 ++ gv1)), (disjoint (fast_elements_tr r gv1) []), (disjoint (elements r) gv2), (disjoint (elements r) gv1), (disjoint (elements r) (kvs_insert x v gv2)), (disjoint (elements r) (kvs_insert x v gv1)), (disjoint (elements r) (kvs_insert x v0 gv2)), (disjoint (elements r) (kvs_insert x v0 gv1)), (disjoint (elements r) (kvs_insert k v gv2)), (disjoint (elements r) (kvs_insert k v gv1))
(disjoint (elements r) (kvs_insert k v0 gv2)), (disjoint (elements r) (kvs_insert k v0 gv1)), (disjoint (elements r) (fast_elements r)), (disjoint (elements r) (fast_elements_tr r gv2)), (disjoint (elements r) (fast_elements_tr r gv1)), (disjoint (elements r) (gv2 ++ gv2)), (disjoint (elements r) (gv2 ++ gv1)), (disjoint (elements r) (gv1 ++ gv2)), (disjoint (elements r) (gv1 ++ gv1)), (disjoint (elements r) [])
(disjoint (gv2 ++ gv2) gv2), (disjoint (gv2 ++ gv2) gv1), (disjoint (gv2 ++ gv2) (kvs_insert x v gv2)), (disjoint (gv2 ++ gv2) (kvs_insert x v gv1)), (disjoint (gv2 ++ gv2) (kvs_insert x v0 gv2)), (disjoint (gv2 ++ gv2) (kvs_insert x v0 gv1)), (disjoint (gv2 ++ gv2) (kvs_insert k v gv2)), (disjoint (gv2 ++ gv2) (kvs_insert k v gv1)), (disjoint (gv2 ++ gv2) (kvs_insert k v0 gv2)), (disjoint (gv2 ++ gv2) (kvs_insert k v0 gv1))
(disjoint (gv2 ++ gv2) (fast_elements r)), (disjoint (gv2 ++ gv2) (fast_elements_tr r gv2)), (disjoint (gv2 ++ gv2) (fast_elements_tr r gv1)), (disjoint (gv2 ++ gv2) (elements r)), (disjoint (gv2 ++ gv2) (gv2 ++ gv1)), (disjoint (gv2 ++ gv2) (gv1 ++ gv2)), (disjoint (gv2 ++ gv2) (gv1 ++ gv1)), (disjoint (gv2 ++ gv2) []), (disjoint (gv2 ++ gv1) gv2), (disjoint (gv2 ++ gv1) gv1)
(disjoint (gv2 ++ gv1) (kvs_insert x v gv2)), (disjoint (gv2 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv2 ++ gv1) (kvs_insert x v0 gv2)), (disjoint (gv2 ++ gv1) (kvs_insert x v0 gv1)), (disjoint (gv2 ++ gv1) (kvs_insert k v gv2)), (disjoint (gv2 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv2 ++ gv1) (kvs_insert k v0 gv2)), (disjoint (gv2 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv2 ++ gv1) (fast_elements r)), (disjoint (gv2 ++ gv1) (fast_elements_tr r gv2))
(disjoint (gv2 ++ gv1) (fast_elements_tr r gv1)), (disjoint (gv2 ++ gv1) (elements r)), (disjoint (gv2 ++ gv1) (gv2 ++ gv2)), (disjoint (gv2 ++ gv1) (gv1 ++ gv2)), (disjoint (gv2 ++ gv1) (gv1 ++ gv1)), (disjoint (gv2 ++ gv1) []), (disjoint (gv1 ++ gv2) gv2), (disjoint (gv1 ++ gv2) gv1), (disjoint (gv1 ++ gv2) (kvs_insert x v gv2)), (disjoint (gv1 ++ gv2) (kvs_insert x v gv1))
(disjoint (gv1 ++ gv2) (kvs_insert x v0 gv2)), (disjoint (gv1 ++ gv2) (kvs_insert x v0 gv1)), (disjoint (gv1 ++ gv2) (kvs_insert k v gv2)), (disjoint (gv1 ++ gv2) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv2) (kvs_insert k v0 gv2)), (disjoint (gv1 ++ gv2) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv2) (fast_elements r)), (disjoint (gv1 ++ gv2) (fast_elements_tr r gv2)), (disjoint (gv1 ++ gv2) (fast_elements_tr r gv1)), (disjoint (gv1 ++ gv2) (elements r))
(disjoint (gv1 ++ gv2) (gv2 ++ gv2)), (disjoint (gv1 ++ gv2) (gv2 ++ gv1)), (disjoint (gv1 ++ gv2) (gv1 ++ gv1)), (disjoint (gv1 ++ gv2) []), (disjoint (gv1 ++ gv1) gv2), (disjoint (gv1 ++ gv1) gv1), (disjoint (gv1 ++ gv1) (kvs_insert x v gv2)), (disjoint (gv1 ++ gv1) (kvs_insert x v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv2)), (disjoint (gv1 ++ gv1) (kvs_insert x v0 gv1))
(disjoint (gv1 ++ gv1) (kvs_insert k v gv2)), (disjoint (gv1 ++ gv1) (kvs_insert k v gv1)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv2)), (disjoint (gv1 ++ gv1) (kvs_insert k v0 gv1)), (disjoint (gv1 ++ gv1) (fast_elements r)), (disjoint (gv1 ++ gv1) (fast_elements_tr r gv2)), (disjoint (gv1 ++ gv1) (fast_elements_tr r gv1)), (disjoint (gv1 ++ gv1) (elements r)), (disjoint (gv1 ++ gv1) (gv2 ++ gv2)), (disjoint (gv1 ++ gv1) (gv2 ++ gv1))
(disjoint (gv1 ++ gv1) (gv1 ++ gv2)), (disjoint (gv1 ++ gv1) []), (disjoint [] gv2), (disjoint [] gv1), (disjoint [] (kvs_insert x v gv2)), (disjoint [] (kvs_insert x v gv1)), (disjoint [] (kvs_insert x v0 gv2)), (disjoint [] (kvs_insert x v0 gv1)), (disjoint [] (kvs_insert k v gv2)), (disjoint [] (kvs_insert k v gv1))
(disjoint [] (kvs_insert k v0 gv2)), (disjoint [] (kvs_insert k v0 gv1)), (disjoint [] (fast_elements r)), (disjoint [] (fast_elements_tr r gv2)), (disjoint [] (fast_elements_tr r gv1)), (disjoint [] (elements r)), (disjoint [] (gv2 ++ gv2)), (disjoint [] (gv2 ++ gv1)), (disjoint [] (gv1 ++ gv2)), (disjoint [] (gv1 ++ gv1))
(BST (T r x v r)), (BST (T r x v0 r)), (BST (T r k v r)), (BST (T r k v0 r)), (BST (insert x v r)), (BST (insert x v0 r)), (BST (insert k v r)), (BST (insert k v0 r)), (BST empty_tree), (BST E)
(x <=* list_keys gv2), (x <=* list_keys gv1), (x <=* []), (k <=* list_keys gv2), (k <=* list_keys gv1), (k <=* []), (Datatypes.length gv2 <=* list_keys gv2), (Datatypes.length gv2 <=* list_keys gv1), (Datatypes.length gv2 <=* []), (Datatypes.length gv1 <=* list_keys gv2)
(Datatypes.length gv1 <=* list_keys gv1), (Datatypes.length gv1 <=* []), (sorted (list_keys gv2)), (sorted (list_keys gv1)), (sorted []), (Permutation (list_keys gv2) (list_keys gv1)), (Permutation (list_keys gv2) []), (Permutation (list_keys gv1) (list_keys gv2)), (Permutation (list_keys gv1) []), (Permutation [] (list_keys gv2))
(Permutation [] (list_keys gv1)), (Permutation gv2 (kvs_insert x v gv2)), (Permutation gv2 (kvs_insert x v gv1)), (Permutation gv2 (kvs_insert x v0 gv2)), (Permutation gv2 (kvs_insert x v0 gv1)), (Permutation gv2 (kvs_insert k v gv2)), (Permutation gv2 (kvs_insert k v gv1)), (Permutation gv2 (kvs_insert k v0 gv2)), (Permutation gv2 (kvs_insert k v0 gv1)), (Permutation gv2 (fast_elements r))
(Permutation gv2 (fast_elements_tr r gv2)), (Permutation gv2 (fast_elements_tr r gv1)), (Permutation gv2 (elements r)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ gv1)), (Permutation gv2 (gv1 ++ gv2)), (Permutation gv2 (gv1 ++ gv1)), (Permutation gv2 []), (Permutation gv1 (kvs_insert x v gv2)), (Permutation gv1 (kvs_insert x v gv1))
(Permutation gv1 (kvs_insert x v0 gv2)), (Permutation gv1 (kvs_insert x v0 gv1)), (Permutation gv1 (kvs_insert k v gv2)), (Permutation gv1 (kvs_insert k v gv1)), (Permutation gv1 (kvs_insert k v0 gv2)), (Permutation gv1 (kvs_insert k v0 gv1)), (Permutation gv1 (fast_elements r)), (Permutation gv1 (fast_elements_tr r gv2)), (Permutation gv1 (fast_elements_tr r gv1)), (Permutation gv1 (elements r))
(Permutation gv1 (gv2 ++ gv2)), (Permutation gv1 (gv2 ++ gv1)), (Permutation gv1 (gv1 ++ gv2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (kvs_insert x v gv2) gv2), (Permutation (kvs_insert x v gv2) gv1), (Permutation (kvs_insert x v gv2) (kvs_insert x v gv1)), (Permutation (kvs_insert x v gv2) (kvs_insert x v0 gv2)), (Permutation (kvs_insert x v gv2) (kvs_insert x v0 gv1))
(Permutation (kvs_insert x v gv2) (kvs_insert k v gv2)), (Permutation (kvs_insert x v gv2) (kvs_insert k v gv1)), (Permutation (kvs_insert x v gv2) (kvs_insert k v0 gv2)), (Permutation (kvs_insert x v gv2) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv2) (fast_elements r)), (Permutation (kvs_insert x v gv2) (fast_elements_tr r gv2)), (Permutation (kvs_insert x v gv2) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v gv2) (elements r)), (Permutation (kvs_insert x v gv2) (gv2 ++ gv2)), (Permutation (kvs_insert x v gv2) (gv2 ++ gv1))
(Permutation (kvs_insert x v gv2) (gv1 ++ gv2)), (Permutation (kvs_insert x v gv2) (gv1 ++ gv1)), (Permutation (kvs_insert x v gv2) []), (Permutation (kvs_insert x v gv1) gv2), (Permutation (kvs_insert x v gv1) gv1), (Permutation (kvs_insert x v gv1) (kvs_insert x v gv2)), (Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv2)), (Permutation (kvs_insert x v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv2)), (Permutation (kvs_insert x v gv1) (kvs_insert k v gv1))
(Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv2)), (Permutation (kvs_insert x v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v gv1) (fast_elements r)), (Permutation (kvs_insert x v gv1) (fast_elements_tr r gv2)), (Permutation (kvs_insert x v gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v gv1) (elements r)), (Permutation (kvs_insert x v gv1) (gv2 ++ gv2)), (Permutation (kvs_insert x v gv1) (gv2 ++ gv1)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv2)), (Permutation (kvs_insert x v gv1) (gv1 ++ gv1))
(Permutation (kvs_insert x v gv1) []), (Permutation (kvs_insert x v0 gv2) gv2), (Permutation (kvs_insert x v0 gv2) gv1), (Permutation (kvs_insert x v0 gv2) (kvs_insert x v gv2)), (Permutation (kvs_insert x v0 gv2) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv2) (kvs_insert x v0 gv1)), (Permutation (kvs_insert x v0 gv2) (kvs_insert k v gv2)), (Permutation (kvs_insert x v0 gv2) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv2) (kvs_insert k v0 gv2)), (Permutation (kvs_insert x v0 gv2) (kvs_insert k v0 gv1))
(Permutation (kvs_insert x v0 gv2) (fast_elements r)), (Permutation (kvs_insert x v0 gv2) (fast_elements_tr r gv2)), (Permutation (kvs_insert x v0 gv2) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v0 gv2) (elements r)), (Permutation (kvs_insert x v0 gv2) (gv2 ++ gv2)), (Permutation (kvs_insert x v0 gv2) (gv2 ++ gv1)), (Permutation (kvs_insert x v0 gv2) (gv1 ++ gv2)), (Permutation (kvs_insert x v0 gv2) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv2) []), (Permutation (kvs_insert x v0 gv1) gv2)
(Permutation (kvs_insert x v0 gv1) gv1), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv2)), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert x v0 gv2)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv2)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv2)), (Permutation (kvs_insert x v0 gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert x v0 gv1) (fast_elements r)), (Permutation (kvs_insert x v0 gv1) (fast_elements_tr r gv2))
(Permutation (kvs_insert x v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert x v0 gv1) (elements r)), (Permutation (kvs_insert x v0 gv1) (gv2 ++ gv2)), (Permutation (kvs_insert x v0 gv1) (gv2 ++ gv1)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv2)), (Permutation (kvs_insert x v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert x v0 gv1) []), (Permutation (kvs_insert k v gv2) gv2), (Permutation (kvs_insert k v gv2) gv1), (Permutation (kvs_insert k v gv2) (kvs_insert x v gv2))
(Permutation (kvs_insert k v gv2) (kvs_insert x v gv1)), (Permutation (kvs_insert k v gv2) (kvs_insert x v0 gv2)), (Permutation (kvs_insert k v gv2) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv2) (kvs_insert k v gv1)), (Permutation (kvs_insert k v gv2) (kvs_insert k v0 gv2)), (Permutation (kvs_insert k v gv2) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv2) (fast_elements r)), (Permutation (kvs_insert k v gv2) (fast_elements_tr r gv2)), (Permutation (kvs_insert k v gv2) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v gv2) (elements r))
(Permutation (kvs_insert k v gv2) (gv2 ++ gv2)), (Permutation (kvs_insert k v gv2) (gv2 ++ gv1)), (Permutation (kvs_insert k v gv2) (gv1 ++ gv2)), (Permutation (kvs_insert k v gv2) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv2) []), (Permutation (kvs_insert k v gv1) gv2), (Permutation (kvs_insert k v gv1) gv1), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv2)), (Permutation (kvs_insert k v gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv2))
(Permutation (kvs_insert k v gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v gv1) (kvs_insert k v gv2)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv2)), (Permutation (kvs_insert k v gv1) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v gv1) (fast_elements r)), (Permutation (kvs_insert k v gv1) (fast_elements_tr r gv2)), (Permutation (kvs_insert k v gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v gv1) (elements r)), (Permutation (kvs_insert k v gv1) (gv2 ++ gv2)), (Permutation (kvs_insert k v gv1) (gv2 ++ gv1))
(Permutation (kvs_insert k v gv1) (gv1 ++ gv2)), (Permutation (kvs_insert k v gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v gv1) []), (Permutation (kvs_insert k v0 gv2) gv2), (Permutation (kvs_insert k v0 gv2) gv1), (Permutation (kvs_insert k v0 gv2) (kvs_insert x v gv2)), (Permutation (kvs_insert k v0 gv2) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv2) (kvs_insert x v0 gv2)), (Permutation (kvs_insert k v0 gv2) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv2) (kvs_insert k v gv2))
(Permutation (kvs_insert k v0 gv2) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv2) (kvs_insert k v0 gv1)), (Permutation (kvs_insert k v0 gv2) (fast_elements r)), (Permutation (kvs_insert k v0 gv2) (fast_elements_tr r gv2)), (Permutation (kvs_insert k v0 gv2) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v0 gv2) (elements r)), (Permutation (kvs_insert k v0 gv2) (gv2 ++ gv2)), (Permutation (kvs_insert k v0 gv2) (gv2 ++ gv1)), (Permutation (kvs_insert k v0 gv2) (gv1 ++ gv2)), (Permutation (kvs_insert k v0 gv2) (gv1 ++ gv1))
(Permutation (kvs_insert k v0 gv2) []), (Permutation (kvs_insert k v0 gv1) gv2), (Permutation (kvs_insert k v0 gv1) gv1), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv2)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv2)), (Permutation (kvs_insert k v0 gv1) (kvs_insert x v0 gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv2)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v gv1)), (Permutation (kvs_insert k v0 gv1) (kvs_insert k v0 gv2))
(Permutation (kvs_insert k v0 gv1) (fast_elements r)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr r gv2)), (Permutation (kvs_insert k v0 gv1) (fast_elements_tr r gv1)), (Permutation (kvs_insert k v0 gv1) (elements r)), (Permutation (kvs_insert k v0 gv1) (gv2 ++ gv2)), (Permutation (kvs_insert k v0 gv1) (gv2 ++ gv1)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv2)), (Permutation (kvs_insert k v0 gv1) (gv1 ++ gv1)), (Permutation (kvs_insert k v0 gv1) []), (Permutation (fast_elements r) gv2)
(Permutation (fast_elements r) gv1), (Permutation (fast_elements r) (kvs_insert x v gv2)), (Permutation (fast_elements r) (kvs_insert x v gv1)), (Permutation (fast_elements r) (kvs_insert x v0 gv2)), (Permutation (fast_elements r) (kvs_insert x v0 gv1)), (Permutation (fast_elements r) (kvs_insert k v gv2)), (Permutation (fast_elements r) (kvs_insert k v gv1)), (Permutation (fast_elements r) (kvs_insert k v0 gv2)), (Permutation (fast_elements r) (kvs_insert k v0 gv1)), (Permutation (fast_elements r) (fast_elements_tr r gv2))
(Permutation (fast_elements r) (fast_elements_tr r gv1)), (Permutation (fast_elements r) (elements r)), (Permutation (fast_elements r) (gv2 ++ gv2)), (Permutation (fast_elements r) (gv2 ++ gv1)), (Permutation (fast_elements r) (gv1 ++ gv2)), (Permutation (fast_elements r) (gv1 ++ gv1)), (Permutation (fast_elements r) []), (Permutation (fast_elements_tr r gv2) gv2), (Permutation (fast_elements_tr r gv2) gv1), (Permutation (fast_elements_tr r gv2) (kvs_insert x v gv2))
(Permutation (fast_elements_tr r gv2) (kvs_insert x v gv1)), (Permutation (fast_elements_tr r gv2) (kvs_insert x v0 gv2)), (Permutation (fast_elements_tr r gv2) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr r gv2) (kvs_insert k v gv2)), (Permutation (fast_elements_tr r gv2) (kvs_insert k v gv1)), (Permutation (fast_elements_tr r gv2) (kvs_insert k v0 gv2)), (Permutation (fast_elements_tr r gv2) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr r gv2) (fast_elements r)), (Permutation (fast_elements_tr r gv2) (fast_elements_tr r gv1)), (Permutation (fast_elements_tr r gv2) (elements r))
(Permutation (fast_elements_tr r gv2) (gv2 ++ gv2)), (Permutation (fast_elements_tr r gv2) (gv2 ++ gv1)), (Permutation (fast_elements_tr r gv2) (gv1 ++ gv2)), (Permutation (fast_elements_tr r gv2) (gv1 ++ gv1)), (Permutation (fast_elements_tr r gv2) []), (Permutation (fast_elements_tr r gv1) gv2), (Permutation (fast_elements_tr r gv1) gv1), (Permutation (fast_elements_tr r gv1) (kvs_insert x v gv2)), (Permutation (fast_elements_tr r gv1) (kvs_insert x v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert x v0 gv2))
(Permutation (fast_elements_tr r gv1) (kvs_insert x v0 gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v gv2)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v gv1)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v0 gv2)), (Permutation (fast_elements_tr r gv1) (kvs_insert k v0 gv1)), (Permutation (fast_elements_tr r gv1) (fast_elements r)), (Permutation (fast_elements_tr r gv1) (fast_elements_tr r gv2)), (Permutation (fast_elements_tr r gv1) (elements r)), (Permutation (fast_elements_tr r gv1) (gv2 ++ gv2)), (Permutation (fast_elements_tr r gv1) (gv2 ++ gv1))
(Permutation (fast_elements_tr r gv1) (gv1 ++ gv2)), (Permutation (fast_elements_tr r gv1) (gv1 ++ gv1)), (Permutation (fast_elements_tr r gv1) []), (Permutation (elements r) gv2), (Permutation (elements r) gv1), (Permutation (elements r) (kvs_insert x v gv2)), (Permutation (elements r) (kvs_insert x v gv1)), (Permutation (elements r) (kvs_insert x v0 gv2)), (Permutation (elements r) (kvs_insert x v0 gv1)), (Permutation (elements r) (kvs_insert k v gv2))
(Permutation (elements r) (kvs_insert k v gv1)), (Permutation (elements r) (kvs_insert k v0 gv2)), (Permutation (elements r) (kvs_insert k v0 gv1)), (Permutation (elements r) (fast_elements r)), (Permutation (elements r) (fast_elements_tr r gv2)), (Permutation (elements r) (fast_elements_tr r gv1)), (Permutation (elements r) (gv2 ++ gv2)), (Permutation (elements r) (gv2 ++ gv1)), (Permutation (elements r) (gv1 ++ gv2)), (Permutation (elements r) (gv1 ++ gv1))
(Permutation (elements r) []), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) gv1), (Permutation (gv2 ++ gv2) (kvs_insert x v gv2)), (Permutation (gv2 ++ gv2) (kvs_insert x v gv1)), (Permutation (gv2 ++ gv2) (kvs_insert x v0 gv2)), (Permutation (gv2 ++ gv2) (kvs_insert x v0 gv1)), (Permutation (gv2 ++ gv2) (kvs_insert k v gv2)), (Permutation (gv2 ++ gv2) (kvs_insert k v gv1)), (Permutation (gv2 ++ gv2) (kvs_insert k v0 gv2))
(Permutation (gv2 ++ gv2) (kvs_insert k v0 gv1)), (Permutation (gv2 ++ gv2) (fast_elements r)), (Permutation (gv2 ++ gv2) (fast_elements_tr r gv2)), (Permutation (gv2 ++ gv2) (fast_elements_tr r gv1)), (Permutation (gv2 ++ gv2) (elements r)), (Permutation (gv2 ++ gv2) (gv2 ++ gv1)), (Permutation (gv2 ++ gv2) (gv1 ++ gv2)), (Permutation (gv2 ++ gv2) (gv1 ++ gv1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ gv1) gv2)
(Permutation (gv2 ++ gv1) gv1), (Permutation (gv2 ++ gv1) (kvs_insert x v gv2)), (Permutation (gv2 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv2 ++ gv1) (kvs_insert x v0 gv2)), (Permutation (gv2 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv2 ++ gv1) (kvs_insert k v gv2)), (Permutation (gv2 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv2 ++ gv1) (kvs_insert k v0 gv2)), (Permutation (gv2 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv2 ++ gv1) (fast_elements r))
(Permutation (gv2 ++ gv1) (fast_elements_tr r gv2)), (Permutation (gv2 ++ gv1) (fast_elements_tr r gv1)), (Permutation (gv2 ++ gv1) (elements r)), (Permutation (gv2 ++ gv1) (gv2 ++ gv2)), (Permutation (gv2 ++ gv1) (gv1 ++ gv2)), (Permutation (gv2 ++ gv1) (gv1 ++ gv1)), (Permutation (gv2 ++ gv1) []), (Permutation (gv1 ++ gv2) gv2), (Permutation (gv1 ++ gv2) gv1), (Permutation (gv1 ++ gv2) (kvs_insert x v gv2))
(Permutation (gv1 ++ gv2) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv2) (kvs_insert x v0 gv2)), (Permutation (gv1 ++ gv2) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv2) (kvs_insert k v gv2)), (Permutation (gv1 ++ gv2) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv2) (kvs_insert k v0 gv2)), (Permutation (gv1 ++ gv2) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv2) (fast_elements r)), (Permutation (gv1 ++ gv2) (fast_elements_tr r gv2)), (Permutation (gv1 ++ gv2) (fast_elements_tr r gv1))
(Permutation (gv1 ++ gv2) (elements r)), (Permutation (gv1 ++ gv2) (gv2 ++ gv2)), (Permutation (gv1 ++ gv2) (gv2 ++ gv1)), (Permutation (gv1 ++ gv2) (gv1 ++ gv1)), (Permutation (gv1 ++ gv2) []), (Permutation (gv1 ++ gv1) gv2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (kvs_insert x v gv2)), (Permutation (gv1 ++ gv1) (kvs_insert x v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert x v0 gv2))
(Permutation (gv1 ++ gv1) (kvs_insert x v0 gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv2)), (Permutation (gv1 ++ gv1) (kvs_insert k v gv1)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv2)), (Permutation (gv1 ++ gv1) (kvs_insert k v0 gv1)), (Permutation (gv1 ++ gv1) (fast_elements r)), (Permutation (gv1 ++ gv1) (fast_elements_tr r gv2)), (Permutation (gv1 ++ gv1) (fast_elements_tr r gv1)), (Permutation (gv1 ++ gv1) (elements r)), (Permutation (gv1 ++ gv1) (gv2 ++ gv2))
(Permutation (gv1 ++ gv1) (gv2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ gv2)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv2), (Permutation [] gv1), (Permutation [] (kvs_insert x v gv2)), (Permutation [] (kvs_insert x v gv1)), (Permutation [] (kvs_insert x v0 gv2)), (Permutation [] (kvs_insert x v0 gv1)), (Permutation [] (kvs_insert k v gv2))
(Permutation [] (kvs_insert k v gv1)), (Permutation [] (kvs_insert k v0 gv2)), (Permutation [] (kvs_insert k v0 gv1)), (Permutation [] (fast_elements r)), (Permutation [] (fast_elements_tr r gv2)), (Permutation [] (fast_elements_tr r gv1)), (Permutation [] (elements r)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ gv1)), (Permutation [] (gv1 ++ gv2))
(Permutation [] (gv1 ++ gv1)), (In x (list_keys gv2)), (In x (list_keys gv1)), (In k (list_keys gv2)), (In k (list_keys gv1)), (In (Datatypes.length gv2) (list_keys gv2)), (In (Datatypes.length gv2) (list_keys gv1)), (In (Datatypes.length gv1) (list_keys gv2)), (In (Datatypes.length gv1) (list_keys gv1)), (In (x, v) gv2)
(In (x, v) gv1), (In (x, v) (kvs_insert x v gv2)), (In (x, v) (kvs_insert x v gv1)), (In (x, v) (kvs_insert x v0 gv2)), (In (x, v) (kvs_insert x v0 gv1)), (In (x, v) (kvs_insert k v gv2)), (In (x, v) (kvs_insert k v gv1)), (In (x, v) (kvs_insert k v0 gv2)), (In (x, v) (kvs_insert k v0 gv1)), (In (x, v) (fast_elements r))
(In (x, v) (fast_elements_tr r gv2)), (In (x, v) (fast_elements_tr r gv1)), (In (x, v) (elements r)), (In (x, v) (gv2 ++ gv2)), (In (x, v) (gv2 ++ gv1)), (In (x, v) (gv1 ++ gv2)), (In (x, v) (gv1 ++ gv1)), (In (x, v0) gv2), (In (x, v0) gv1), (In (x, v0) (kvs_insert x v gv2))
(In (x, v0) (kvs_insert x v gv1)), (In (x, v0) (kvs_insert x v0 gv2)), (In (x, v0) (kvs_insert x v0 gv1)), (In (x, v0) (kvs_insert k v gv2)), (In (x, v0) (kvs_insert k v gv1)), (In (x, v0) (kvs_insert k v0 gv2)), (In (x, v0) (kvs_insert k v0 gv1)), (In (x, v0) (fast_elements r)), (In (x, v0) (fast_elements_tr r gv2)), (In (x, v0) (fast_elements_tr r gv1))
(In (x, v0) (elements r)), (In (x, v0) (gv2 ++ gv2)), (In (x, v0) (gv2 ++ gv1)), (In (x, v0) (gv1 ++ gv2)), (In (x, v0) (gv1 ++ gv1)), (In (k, v) gv2), (In (k, v) gv1), (In (k, v) (kvs_insert x v gv2)), (In (k, v) (kvs_insert x v gv1)), (In (k, v) (kvs_insert x v0 gv2))
(In (k, v) (kvs_insert x v0 gv1)), (In (k, v) (kvs_insert k v gv2)), (In (k, v) (kvs_insert k v gv1)), (In (k, v) (kvs_insert k v0 gv2)), (In (k, v) (kvs_insert k v0 gv1)), (In (k, v) (fast_elements r)), (In (k, v) (fast_elements_tr r gv2)), (In (k, v) (fast_elements_tr r gv1)), (In (k, v) (elements r)), (In (k, v) (gv2 ++ gv2))
(In (k, v) (gv2 ++ gv1)), (In (k, v) (gv1 ++ gv2)), (In (k, v) (gv1 ++ gv1)), (In (k, v0) gv2), (In (k, v0) gv1), (In (k, v0) (kvs_insert x v gv2)), (In (k, v0) (kvs_insert x v gv1)), (In (k, v0) (kvs_insert x v0 gv2)), (In (k, v0) (kvs_insert x v0 gv1)), (In (k, v0) (kvs_insert k v gv2))
(In (k, v0) (kvs_insert k v gv1)), (In (k, v0) (kvs_insert k v0 gv2)), (In (k, v0) (kvs_insert k v0 gv1)), (In (k, v0) (fast_elements r)), (In (k, v0) (fast_elements_tr r gv2)), (In (k, v0) (fast_elements_tr r gv1)), (In (k, v0) (elements r)), (In (k, v0) (gv2 ++ gv2)), (In (k, v0) (gv2 ++ gv1)), (In (k, v0) (gv1 ++ gv2))
(In (k, v0) (gv1 ++ gv1)), (x < Datatypes.length gv2), (x < Datatypes.length gv1), (k < Datatypes.length gv2), (k < Datatypes.length gv1), (Datatypes.length gv2 < x), (Datatypes.length gv2 < k), (Datatypes.length gv2 < Datatypes.length gv1), (Datatypes.length gv1 < x), (Datatypes.length gv1 < k)
(Datatypes.length gv1 < Datatypes.length gv2), (x <= Datatypes.length gv2), (x <= Datatypes.length gv1), (k <= Datatypes.length gv2), (k <= Datatypes.length gv1), (Datatypes.length gv2 <= x), (Datatypes.length gv2 <= k), (Datatypes.length gv2 <= Datatypes.length gv1), (Datatypes.length gv1 <= x), (Datatypes.length gv1 <= k)
(Datatypes.length gv1 <= Datatypes.length gv2), (~ disjoint gv2 gv2), (~ disjoint gv2 gv1), (~ disjoint gv1 gv2), (~ disjoint gv1 gv1), (~ BST r), (~ Permutation gv2 gv2), (~ Permutation gv2 gv1), (~ Permutation gv1 gv2), (~ Permutation gv1 gv1)
(~ x < x), (~ x < k), (~ k < x), (~ k < k), (~ x <= x), (~ x <= k), (~ k <= x), (~ k <= k), (r <> r), (gv2 <> gv2)
(gv2 <> gv1), (gv1 <> gv2), (gv1 <> gv1), (v <> v), (v <> v0), (v0 <> v), (v0 <> v0), (x <> x), (x <> k), (k <> x)
(k <> k), (kvs_insert x v gv2 = gv2), (kvs_insert x v gv2 = gv1), (kvs_insert x v gv2 = fast_elements r), (kvs_insert x v gv2 = fast_elements_tr r gv2), (kvs_insert x v gv2 = fast_elements_tr r gv1), (kvs_insert x v gv2 = elements r), (kvs_insert x v gv2 = gv2 ++ gv2), (kvs_insert x v gv2 = gv2 ++ gv1), (kvs_insert x v gv2 = gv1 ++ gv2)
(kvs_insert x v gv2 = gv1 ++ gv1), (kvs_insert x v gv1 = gv2), (kvs_insert x v gv1 = gv1), (kvs_insert x v gv1 = fast_elements r), (kvs_insert x v gv1 = fast_elements_tr r gv2), (kvs_insert x v gv1 = fast_elements_tr r gv1), (kvs_insert x v gv1 = elements r), (kvs_insert x v gv1 = gv2 ++ gv2), (kvs_insert x v gv1 = gv2 ++ gv1), (kvs_insert x v gv1 = gv1 ++ gv2)
(kvs_insert x v gv1 = gv1 ++ gv1), (kvs_insert x v0 gv2 = gv2), (kvs_insert x v0 gv2 = gv1), (kvs_insert x v0 gv2 = fast_elements r), (kvs_insert x v0 gv2 = fast_elements_tr r gv2), (kvs_insert x v0 gv2 = fast_elements_tr r gv1), (kvs_insert x v0 gv2 = elements r), (kvs_insert x v0 gv2 = gv2 ++ gv2), (kvs_insert x v0 gv2 = gv2 ++ gv1), (kvs_insert x v0 gv2 = gv1 ++ gv2)
(kvs_insert x v0 gv2 = gv1 ++ gv1), (kvs_insert x v0 gv1 = gv2), (kvs_insert x v0 gv1 = gv1), (kvs_insert x v0 gv1 = fast_elements r), (kvs_insert x v0 gv1 = fast_elements_tr r gv2), (kvs_insert x v0 gv1 = fast_elements_tr r gv1), (kvs_insert x v0 gv1 = elements r), (kvs_insert x v0 gv1 = gv2 ++ gv2), (kvs_insert x v0 gv1 = gv2 ++ gv1), (kvs_insert x v0 gv1 = gv1 ++ gv2)
(kvs_insert x v0 gv1 = gv1 ++ gv1), (kvs_insert k v gv2 = gv2), (kvs_insert k v gv2 = gv1), (kvs_insert k v gv2 = fast_elements r), (kvs_insert k v gv2 = fast_elements_tr r gv2), (kvs_insert k v gv2 = fast_elements_tr r gv1), (kvs_insert k v gv2 = elements r), (kvs_insert k v gv2 = gv2 ++ gv2), (kvs_insert k v gv2 = gv2 ++ gv1), (kvs_insert k v gv2 = gv1 ++ gv2)
(kvs_insert k v gv2 = gv1 ++ gv1), (kvs_insert k v gv1 = gv2), (kvs_insert k v gv1 = gv1), (kvs_insert k v gv1 = fast_elements r), (kvs_insert k v gv1 = fast_elements_tr r gv2), (kvs_insert k v gv1 = fast_elements_tr r gv1), (kvs_insert k v gv1 = elements r), (kvs_insert k v gv1 = gv2 ++ gv2), (kvs_insert k v gv1 = gv2 ++ gv1), (kvs_insert k v gv1 = gv1 ++ gv2)
(kvs_insert k v gv1 = gv1 ++ gv1), (kvs_insert k v0 gv2 = gv2), (kvs_insert k v0 gv2 = gv1), (kvs_insert k v0 gv2 = fast_elements r), (kvs_insert k v0 gv2 = fast_elements_tr r gv2), (kvs_insert k v0 gv2 = fast_elements_tr r gv1), (kvs_insert k v0 gv2 = elements r), (kvs_insert k v0 gv2 = gv2 ++ gv2), (kvs_insert k v0 gv2 = gv2 ++ gv1), (kvs_insert k v0 gv2 = gv1 ++ gv2)
(kvs_insert k v0 gv2 = gv1 ++ gv1), (kvs_insert k v0 gv1 = gv2), (kvs_insert k v0 gv1 = gv1), (kvs_insert k v0 gv1 = fast_elements r), (kvs_insert k v0 gv1 = fast_elements_tr r gv2), (kvs_insert k v0 gv1 = fast_elements_tr r gv1), (kvs_insert k v0 gv1 = elements r), (kvs_insert k v0 gv1 = gv2 ++ gv2), (kvs_insert k v0 gv1 = gv2 ++ gv1), (kvs_insert k v0 gv1 = gv1 ++ gv2)
(kvs_insert k v0 gv1 = gv1 ++ gv1), (fast_elements r = gv2), (fast_elements r = gv1), (fast_elements r = elements r), (fast_elements r = gv2 ++ gv2), (fast_elements r = gv2 ++ gv1), (fast_elements r = gv1 ++ gv2), (fast_elements r = gv1 ++ gv1), (fast_elements_tr r gv2 = gv2), (fast_elements_tr r gv2 = gv1)
(fast_elements_tr r gv2 = fast_elements r), (fast_elements_tr r gv2 = elements r), (fast_elements_tr r gv2 = gv2 ++ gv2), (fast_elements_tr r gv2 = gv2 ++ gv1), (fast_elements_tr r gv2 = gv1 ++ gv2), (fast_elements_tr r gv2 = gv1 ++ gv1), (fast_elements_tr r gv1 = gv2), (fast_elements_tr r gv1 = gv1), (fast_elements_tr r gv1 = fast_elements r), (fast_elements_tr r gv1 = elements r)
(fast_elements_tr r gv1 = gv2 ++ gv2), (fast_elements_tr r gv1 = gv2 ++ gv1), (fast_elements_tr r gv1 = gv1 ++ gv2), (fast_elements_tr r gv1 = gv1 ++ gv1), (elements r = gv2), (elements r = gv1), (elements r = gv2 ++ gv2), (elements r = gv2 ++ gv1), (elements r = gv1 ++ gv2), (elements r = gv1 ++ gv1)
(gv2 ++ gv2 = gv2), (gv2 ++ gv2 = gv1), (gv2 ++ gv1 = gv2), (gv2 ++ gv1 = gv1), (gv1 ++ gv2 = gv2), (gv1 ++ gv2 = gv1), (gv1 ++ gv1 = gv2), (gv1 ++ gv1 = gv1), ([] = gv2), ([] = gv1)
([] = kvs_insert x v gv2), ([] = kvs_insert x v gv1), ([] = kvs_insert x v0 gv2), ([] = kvs_insert x v0 gv1), ([] = kvs_insert k v gv2), ([] = kvs_insert k v gv1), ([] = kvs_insert k v0 gv2), ([] = kvs_insert k v0 gv1), ([] = fast_elements r), ([] = fast_elements_tr r gv2)
([] = fast_elements_tr r gv1), ([] = elements r), ([] = gv2 ++ gv2), ([] = gv2 ++ gv1), ([] = gv1 ++ gv2), ([] = gv1 ++ gv1), ([] = list_keys gv2), ([] = list_keys gv1), (None = Some x), (None = Some k)
(None = Some gv2), (None = Some gv1), (lookup v x r = v), (lookup v x r = v0), (lookup v k r = v), (lookup v k r = v0), (lookup v0 x r = v), (lookup v0 x r = v0), (lookup v0 k r = v), (lookup v0 k r = v0)
(Red = lookup v x r), (Red = lookup v k r), (Red = lookup v0 x r), (Red = lookup v0 k r), (Green = lookup v x r), (Green = lookup v k r), (Green = lookup v0 x r), (Green = lookup v0 k r), (Blue = lookup v x r), (Blue = lookup v k r)
(Blue = lookup v0 x r), (Blue = lookup v0 k r), (Datatypes.length gv2 = x), (Datatypes.length gv2 = k), (Datatypes.length gv1 = x), (Datatypes.length gv1 = k), (None = Some r), (T r x v r = r), (T r x v r = insert x v r), (T r x v r = insert x v0 r)
(T r x v r = insert k v r), (T r x v r = insert k v0 r), (T r x v0 r = r), (T r x v0 r = insert x v r), (T r x v0 r = insert x v0 r), (T r x v0 r = insert k v r), (T r x v0 r = insert k v0 r), (T r k v r = r), (T r k v r = insert x v r), (T r k v r = insert x v0 r)
(T r k v r = insert k v r), (T r k v r = insert k v0 r), (T r k v0 r = r), (T r k v0 r = insert x v r), (T r k v0 r = insert x v0 r), (T r k v0 r = insert k v r), (T r k v0 r = insert k v0 r), (insert x v r = r), (insert x v0 r = r), (insert k v r = r)
(insert k v0 r = r), (empty_tree = T r x v r), (empty_tree = T r x v0 r), (empty_tree = T r k v r), (empty_tree = T r k v0 r), (empty_tree = insert x v r), (empty_tree = insert x v0 r), (empty_tree = insert k v r), (empty_tree = insert k v0 r), (E = T r x v r)
(E = T r x v0 r), (E = T r k v r), (E = T r k v0 r), (E = insert x v r), (E = insert x v0 r), (E = insert k v r), (E = insert k v0 r), (None = Some v), (None = Some v0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 281.953 seconds


Label: 0 (0)
(In (k, v0) (elements l)), (In (k, v0) (fast_elements l))

Label: 1 (1)
(In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))

Label: 2 (2)
(In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))

Label: 3 (3)
(Permutation gv1 (fast_elements_tr l gv3)), (Permutation (fast_elements_tr l gv3) gv1), (fast_elements_tr l gv3 = gv1), (In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))

Label: 4 (4)
(In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))

Label: 5 (5)
(In gv0 gv1), (In gv0 (gv1 ++ gv1))

Label: 6 (6)
(Permutation gv1 (fast_elements_tr l gv3)), (Permutation (fast_elements_tr l gv3) gv1), (fast_elements_tr l gv3 = gv1), (In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))

Label: 7 (7)
(In (k, v0) gv1), (In (k, v0) (gv1 ++ gv1))


------------------------------ ALL RESULTS ------------------------------
1. (In gv0 gv2 -> In gv0 (gv2 ++ (x, v) :: gv5))

2. (In gv0 gv2 -> In gv0 (gv2 ++ gv4 :: elements r))

3. (In gv0 gv2 -> In gv0 (gv2 ++ gv3))

4. (In gv0 gv2 -> In gv0 (gv2 ++ (x, v) :: elements r))

5. (In gv0 (elements l) -> In gv0 (elements l ++ gv4 :: gv5))

6. (In gv0 (elements l) -> In gv0 (elements l ++ (x, v) :: gv5))

7. (In gv0 (elements l) -> In gv0 (elements l ++ gv3))

8. (In gv0 (elements l) -> In gv0 (elements l ++ gv4 :: elements r))

9. (In gv0 (elements l) -> In gv0 (elements l ++ (x, v) :: elements r))

10. (In (k, v0) gv2 -> In (k, v0) (gv2 ++ gv4 :: gv5))

11. (In (k, v0) gv2 -> In (k, v0) (gv2 ++ gv3))

12. (In (k, v0) gv2 -> In (k, v0) (gv2 ++ (x, v) :: gv5))

13. (In (k, v0) gv2 -> In (k, v0) (gv2 ++ gv4 :: elements r))

14. (In (k, v0) gv2 -> In (k, v0) (gv2 ++ (x, v) :: elements r))

15. (In (k, v0) (elements l) -> In (k, v0) (elements l ++ (x, v) :: gv5))

16. (In (k, v0) (elements l) -> In (k, v0) (elements l ++ gv4 :: gv5))

17. (In (k, v0) (elements l) -> In (k, v0) (elements l ++ gv3))

18. (In (k, v0) (elements l) -> In (k, v0) (elements l ++ gv4 :: elements r))

19. (In (k, v0) (elements l) -> In (k, v0) (elements l ++ (x, v) :: elements r))

20. (fast_elements_tr l gv3 = elements l ++ gv3)

21. (In (k, v0) (elements l) -> In (k, v0) (fast_elements l))
(In (k, v0) (fast_elements l) ->  In (k, v0) (elements l ++ (x, v) :: elements r))

22. (In gv0 (gv1 ++ gv1) -> In gv0 (elements l) -> In gv0 gv1)

23. (In (k, v0) (elements l) ->  Permutation gv1 (fast_elements_tr l gv3) -> In (k, v0) gv1)

24. (In (k, v0) (elements l) ->  Permutation (fast_elements_tr l gv3) gv1 -> In (k, v0) gv1)

25. (In (k, v0) (elements l) -> fast_elements_tr l gv3 = gv1 -> In (k, v0) gv1)

26. (In (k, v0) gv2 -> In (k, v0) (gv1 ++ gv1) -> In (k, v0) gv1)

27. (In (k, v0) (gv1 ++ gv1) -> In (k, v0) (elements l) -> In (k, v0) gv1)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 351.153 seconds

Number of Result Pairs Returned: 27

1. (In gv0 gv2 -> In gv0 (gv2 ++ (x, v) :: gv5))

2. (In gv0 gv2 -> In gv0 (gv2 ++ gv4 :: elements r))

3. (In gv0 gv2 -> In gv0 (gv2 ++ gv3))

4. (In gv0 gv2 -> In gv0 (gv2 ++ (x, v) :: elements r))

5. (In gv0 (elements l) -> In gv0 (elements l ++ gv4 :: gv5))
