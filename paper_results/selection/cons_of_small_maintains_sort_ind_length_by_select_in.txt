Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (y <=* n0 :: bl)
 -- (select n0 bl = (n1, l))
 -- (sorted (selsort (n0 :: bl) (S n)))
 -- (S n = S (length bl))
 -- (forall (y : nat) (bl : list nat),
 n = length bl ->
 y <=* bl -> sorted (selsort bl n) -> sorted (y :: selsort bl n))
 -- (n = length bl)

----------------------------------
Goal: (sorted (y :: n1 :: selsort l (length bl)))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.498 seconds

gv1 : (list nat) = (n1 :: selsort l (length bl))
gv3 : nat = (length bl)
gv2 : (list nat) = (selsort l (length bl))
gv0 : (list nat) = (y :: n1 :: selsort l (length bl))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 82.576 seconds

Label: Generalization #0
Assumptions: 
 -- (y <=* n0 :: bl)
 -- (select n0 bl = (n1, l))

----------------------------------
Goal: (sorted (y :: n1 :: selsort l (length bl)))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (selsort l (length bl) = gv2)

----------------------------------
Goal: (sorted (y :: n1 :: gv2))
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (y :: n1 :: selsort l (length bl) = gv0)

----------------------------------
Goal: (sorted gv0)
Case: Invalid and Generalized

Label: Generalization #3
Assumptions: 
 -- (y <=* n0 :: bl)
 -- (select n0 bl = (n1, l))

----------------------------------
Goal: (sorted (y :: n1 :: selsort l gv3))
Case: Valid and Generalized

Label: Generalization #4
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (selsort l gv3 = gv2)

----------------------------------
Goal: (sorted (y :: n1 :: gv2))
Case: Invalid and Generalized

Label: Generalization #5
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (y :: n1 :: selsort l gv3 = gv0)

----------------------------------
Goal: (sorted gv0)
Case: Invalid and Generalized

Label: Generalization #6
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (n1 :: selsort l gv3 = gv1)

----------------------------------
Goal: (sorted (y :: gv1))
Case: Invalid and Generalized

Label: Generalization #7
Assumptions: 
 -- (select n0 bl = (n1, l))
 -- (y <=* n0 :: bl)
 -- (n1 :: selsort l (length bl) = gv1)

----------------------------------
Goal: (sorted (y :: gv1))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 82.734 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)

Label: 0 (0)
Abducted Assumption: (y <=* n0 :: bl)
Positive Examples: 500
Negative Examples: 22

Label: 1 (1)
Abducted Assumption: (select n0 bl = (n1, l))
Positive Examples: 52
Negative Examples: 500

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 49
Negative Examples: 48

Label: 3 (3)
Inferring Condition About Generalization
Positive Examples: 30
Negative Examples: 15

Label: 4 (4)
Inferring Condition About Generalization
Positive Examples: 53
Negative Examples: 35

Label: 5 (5)
Inferring Condition About Generalization
Positive Examples: 27
Negative Examples: 9

Label: 6 (6)
Inferring Condition About Generalization
Positive Examples: 38
Negative Examples: 19

Label: 7 (7)
Inferring Condition About Generalization
Positive Examples: 26
Negative Examples: 22


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 83.58 seconds


Label: 0 (0)
(n0 <=* bl), (n0 <=* l), (n1 <=* bl), (n1 <=* l), (y <=* bl), (y <=* l), (sorted bl), (sorted l), (Permutation bl bl), (Permutation bl l)
(Permutation l bl), (Permutation l l), (In n0 bl), (In n0 l), (In n1 bl), (In n1 l), (In y bl), (In y l), (n0 < n0), (n0 < n1)
(n0 < y), (n1 < n0), (n1 < n1), (n1 < y), (y < n0), (y < n1), (y < y), (n0 <= n0), (n0 <= n1), (n0 <= y)
(n1 <= n0), (n1 <= n1), (n1 <= y), (y <= n0), (y <= n1), (y <= y), (bl = bl), (bl = l), (l = bl), (l = l)
(n0 = n0), (n0 = n1), (n0 = y), (n1 = n0), (n1 = n1), (n1 = y), (y = n0), (y = n1), (y = y), (n0 <=* n0 :: bl)
(n0 <=* n0 :: l), (n0 <=* n1 :: bl), (n0 <=* n1 :: l), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selsort bl n0), (n0 <=* selsort bl n1), (n0 <=* selsort bl y)
(n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l)
(n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* selection_sort bl), (n1 <=* selection_sort l), (n1 <=* selsort bl n0), (n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0)
(n1 <=* selsort l n1), (n1 <=* selsort l y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l), (y <=* n1 :: bl)
(y <=* n1 :: l), (y <=* y :: bl), (y <=* y :: l), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selsort bl n0), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l n1)
(y <=* selsort l y), (y <=* bl ++ bl), (y <=* bl ++ l), (y <=* l ++ bl), (y <=* l ++ l), (y <=* []), (length bl <=* bl), (length bl <=* l), (length bl <=* n0 :: bl), (length bl <=* n0 :: l)
(length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* y :: bl), (length bl <=* y :: l), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selsort bl n0), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0)
(length bl <=* selsort l n1), (length bl <=* selsort l y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* n0 :: bl)
(length l <=* n0 :: l), (length l <=* n1 :: bl), (length l <=* n1 :: l), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selsort bl n0), (length l <=* selsort bl n1), (length l <=* selsort bl y)
(length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l))
(sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (y :: bl)), (sorted (y :: l)), (sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selsort bl n0)), (sorted (selsort bl n1)), (sorted (selsort bl y)), (sorted (selsort l n0))
(sorted (selsort l n1)), (sorted (selsort l y)), (sorted (bl ++ bl)), (sorted (bl ++ l)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l)), (Permutation bl (n1 :: bl))
(Permutation bl (n1 :: l)), (Permutation bl (y :: bl)), (Permutation bl (y :: l)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l n1))
(Permutation bl (selsort l y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l))
(Permutation l (y :: bl)), (Permutation l (y :: l)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selsort bl n0)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1)), (Permutation l (selsort l y))
(Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n0 :: bl) bl), (Permutation (n0 :: bl) l), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l))
(Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selsort bl n0)), (Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y)), (Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y))
(Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l))
(Permutation (n0 :: l) (y :: bl)), (Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (selection_sort bl)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y))
(Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n1 :: l))
(Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl n1)), (Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y))
(Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n1 :: bl))
(Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort bl n0)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y))
(Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl n1)), (Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y))
(Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) []), (Permutation (y :: l) bl), (Permutation (y :: l) l), (Permutation (y :: l) (n0 :: bl)), (Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n1 :: bl))
(Permutation (y :: l) (n1 :: l)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y)), (Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y))
(Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n1 :: bl))
(Permutation (selection_sort bl) (n1 :: l)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0)), (Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y))
(Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n0 :: bl)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n1 :: bl))
(Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selsort bl n0)), (Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n1 :: bl))
(Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (selection_sort bl)), (Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l n1)), (Permutation (selsort bl n0) (selsort l y))
(Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n1 :: bl))
(Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selsort bl n0)), (Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y))
(Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n1 :: bl))
(Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selsort bl n0)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) []), (Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n1 :: bl))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (y :: bl)), (Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y))
(Permutation (selsort l n0) (bl ++ bl)), (Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n1 :: bl))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl n1)), (Permutation (selsort l n1) (selsort bl y)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l y))
(Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (l ++ bl)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) (n0 :: bl)), (Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n1 :: bl))
(Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0)), (Permutation (selsort l y) (selsort l n1))
(Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n1 :: bl))
(Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l n1))
(Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n1 :: bl))
(Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selsort bl n0)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0)), (Permutation (bl ++ l) (selsort l n1))
(Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) []), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) l), (Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n1 :: bl))
(Permutation (l ++ bl) (n1 :: l)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl n1)), (Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l n1))
(Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) []), (Permutation (l ++ l) bl), (Permutation (l ++ l) l), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n1 :: bl))
(Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) []), (Permutation [] bl), (Permutation [] l), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l)), (Permutation [] (n1 :: bl))
(Permutation [] (n1 :: l)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l)), (Permutation [] (selsort bl n0)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1))
(Permutation [] (selsort l y)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (In n0 (n0 :: bl)), (In n0 (n0 :: l)), (In n0 (n1 :: bl)), (In n0 (n1 :: l)), (In n0 (y :: bl))
(In n0 (y :: l)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selsort bl n0)), (In n0 (selsort bl n1)), (In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n1 (n0 :: bl)), (In n1 (n0 :: l)), (In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (selection_sort bl))
(In n1 (selection_sort l)), (In n1 (selsort bl n0)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (bl ++ bl)), (In n1 (bl ++ l)), (In n1 (l ++ bl))
(In n1 (l ++ l)), (In y (n0 :: bl)), (In y (n0 :: l)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (y :: bl)), (In y (y :: l)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selsort bl n0))
(In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0)), (In y (selsort l n1)), (In y (selsort l y)), (In y (bl ++ bl)), (In y (bl ++ l)), (In y (l ++ bl)), (In y (l ++ l)), (In (length bl) bl)
(In (length bl) l), (In (length bl) (n0 :: bl)), (In (length bl) (n0 :: l)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (y :: bl)), (In (length bl) (y :: l)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selsort bl n0))
(In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (l ++ bl)), (In (length bl) (l ++ l)), (In (length l) bl)
(In (length l) l), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selsort bl n0))
(In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0)), (In (length l) (selsort l n1)), (In (length l) (selsort l y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (l ++ bl)), (In (length l) (l ++ l)), (n0 < length bl)
(n0 < length l), (n1 < length bl), (n1 < length l), (y < length bl), (y < length l), (length bl < n0), (length bl < n1), (length bl < y), (length bl < length l), (length l < n0)
(length l < n1), (length l < y), (length l < length bl), (n0 <= length bl), (n0 <= length l), (n1 <= length bl), (n1 <= length l), (y <= length bl), (y <= length l), (length bl <= n0)
(length bl <= n1), (length bl <= y), (length bl <= length l), (length l <= n0), (length l <= n1), (length l <= y), (length l <= length bl), (~ n0 <=* bl), (~ n0 <=* l), (~ n1 <=* bl)
(~ n1 <=* l), (~ y <=* bl), (~ y <=* l), (~ sorted bl), (~ sorted l), (~ Permutation bl bl), (~ Permutation bl l), (~ Permutation l bl), (~ Permutation l l), (~ In n0 bl)
(~ In n0 l), (~ In n1 bl), (~ In n1 l), (~ In y bl), (~ In y l), (~ n0 < n0), (~ n0 < n1), (~ n0 < y), (~ n1 < n0), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= n1), (~ n0 <= y), (~ n1 <= n0), (~ n1 <= n1), (~ n1 <= y)
(~ y <= n0), (~ y <= n1), (~ y <= y), (bl <> bl), (bl <> l), (l <> bl), (l <> l), (n0 <> n0), (n0 <> n1), (n0 <> y)
(n1 <> n0), (n1 <> n1), (n1 <> y), (y <> n0), (y <> n1), (y <> y), (None = Some bl), (None = Some l), (n0 :: bl = bl), (n0 :: bl = l)
(n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = bl ++ bl), (n0 :: bl = bl ++ l)
(n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = []), (n0 :: l = bl), (n0 :: l = l), (n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y)
(n0 :: l = selsort l n0), (n0 :: l = selsort l n1), (n0 :: l = selsort l y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = l ++ bl), (n0 :: l = l ++ l), (n0 :: l = []), (n1 :: bl = bl), (n1 :: bl = l)
(n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l n1), (n1 :: bl = selsort l y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l)
(n1 :: bl = l ++ bl), (n1 :: bl = l ++ l), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l), (n1 :: l = selsort bl n0), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y)
(n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = bl ++ bl), (n1 :: l = bl ++ l), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = []), (y :: bl = bl), (y :: bl = l)
(y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selsort bl n0), (y :: bl = selsort bl n1), (y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = bl ++ bl), (y :: bl = bl ++ l)
(y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = []), (y :: l = bl), (y :: l = l), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selsort bl n0), (y :: l = selsort bl n1), (y :: l = selsort bl y)
(y :: l = selsort l n0), (y :: l = selsort l n1), (y :: l = selsort l y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = []), (selection_sort bl = bl), (selection_sort bl = l)
(selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = l ++ bl), (selection_sort l = l ++ l)
(selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n1 = bl), (selsort bl n1 = l)
(selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = l ++ bl), (selsort bl n1 = l ++ l), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort l)
(selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l)
(selsort l n0 = l ++ bl), (selsort l n0 = l ++ l), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = l ++ bl), (selsort l n1 = l ++ l)
(selsort l y = bl), (selsort l y = l), (selsort l y = selection_sort bl), (selsort l y = selection_sort l), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = l ++ bl), (selsort l y = l ++ l), (bl ++ bl = bl), (bl ++ bl = l)
(bl ++ l = bl), (bl ++ l = l), (l ++ bl = bl), (l ++ bl = l), (l ++ l = bl), (l ++ l = l), ([] = bl), ([] = l), ([] = selection_sort bl), ([] = selection_sort l)
([] = selsort bl n0), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort l y), ([] = bl ++ bl), ([] = bl ++ l), ([] = l ++ bl), ([] = l ++ l)
(None = Some n0), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl), ((n0, bl) = select n0 l), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select y bl), ((n0, bl) = select y l), ((n0, l) = select n0 bl)
((n0, l) = select n0 l), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select y bl), ((n0, l) = select y l), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select y bl)
((n1, bl) = select y l), ((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n1 bl), ((n1, l) = select n1 l), ((n1, l) = select y bl), ((n1, l) = select y l), ((y, bl) = select n0 bl), ((y, bl) = select n0 l), ((y, bl) = select n1 bl)
((y, bl) = select n1 l), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, l) = select n0 bl), ((y, l) = select n0 l), ((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select y bl), ((y, l) = select y l), (length bl = n0)
(length bl = n1), (length bl = y), (length l = n0), (length l = n1), (length l = y)

Label: 1 (1)
(n0 <=* bl), (n0 <=* l), (n1 <=* bl), (n1 <=* l), (y <=* bl), (y <=* l), (sorted bl), (sorted l), (Permutation bl bl), (Permutation bl l)
(Permutation l bl), (Permutation l l), (In n0 bl), (In n0 l), (In n1 bl), (In n1 l), (In y bl), (In y l), (n0 < n0), (n0 < n1)
(n0 < y), (n1 < n0), (n1 < n1), (n1 < y), (y < n0), (y < n1), (y < y), (n0 <= n0), (n0 <= n1), (n0 <= y)
(n1 <= n0), (n1 <= n1), (n1 <= y), (y <= n0), (y <= n1), (y <= y), (bl = bl), (bl = l), (l = bl), (l = l)
(n0 = n0), (n0 = n1), (n0 = y), (n1 = n0), (n1 = n1), (n1 = y), (y = n0), (y = n1), (y = y), (n0 <=* n0 :: bl)
(n0 <=* n0 :: l), (n0 <=* n1 :: bl), (n0 <=* n1 :: l), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selsort bl n0), (n0 <=* selsort bl n1), (n0 <=* selsort bl y)
(n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l)
(n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* selection_sort bl), (n1 <=* selection_sort l), (n1 <=* selsort bl n0), (n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0)
(n1 <=* selsort l n1), (n1 <=* selsort l y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l), (y <=* n1 :: bl)
(y <=* n1 :: l), (y <=* y :: bl), (y <=* y :: l), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selsort bl n0), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l n1)
(y <=* selsort l y), (y <=* bl ++ bl), (y <=* bl ++ l), (y <=* l ++ bl), (y <=* l ++ l), (y <=* []), (length bl <=* bl), (length bl <=* l), (length bl <=* n0 :: bl), (length bl <=* n0 :: l)
(length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* y :: bl), (length bl <=* y :: l), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selsort bl n0), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0)
(length bl <=* selsort l n1), (length bl <=* selsort l y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* n0 :: bl)
(length l <=* n0 :: l), (length l <=* n1 :: bl), (length l <=* n1 :: l), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selsort bl n0), (length l <=* selsort bl n1), (length l <=* selsort bl y)
(length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l))
(sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (y :: bl)), (sorted (y :: l)), (sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selsort bl n0)), (sorted (selsort bl n1)), (sorted (selsort bl y)), (sorted (selsort l n0))
(sorted (selsort l n1)), (sorted (selsort l y)), (sorted (bl ++ bl)), (sorted (bl ++ l)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l)), (Permutation bl (n1 :: bl))
(Permutation bl (n1 :: l)), (Permutation bl (y :: bl)), (Permutation bl (y :: l)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l n1))
(Permutation bl (selsort l y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l))
(Permutation l (y :: bl)), (Permutation l (y :: l)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selsort bl n0)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1)), (Permutation l (selsort l y))
(Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n0 :: bl) bl), (Permutation (n0 :: bl) l), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l))
(Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selsort bl n0)), (Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y)), (Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y))
(Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l))
(Permutation (n0 :: l) (y :: bl)), (Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (selection_sort bl)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y))
(Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n1 :: l))
(Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl n1)), (Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y))
(Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n1 :: bl))
(Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort bl n0)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y))
(Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl n1)), (Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y))
(Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) []), (Permutation (y :: l) bl), (Permutation (y :: l) l), (Permutation (y :: l) (n0 :: bl)), (Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n1 :: bl))
(Permutation (y :: l) (n1 :: l)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y)), (Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y))
(Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n1 :: bl))
(Permutation (selection_sort bl) (n1 :: l)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0)), (Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y))
(Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n0 :: bl)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n1 :: bl))
(Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selsort bl n0)), (Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n1 :: bl))
(Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (selection_sort bl)), (Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l n1)), (Permutation (selsort bl n0) (selsort l y))
(Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n1 :: bl))
(Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selsort bl n0)), (Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y))
(Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n1 :: bl))
(Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selsort bl n0)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) []), (Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n1 :: bl))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (y :: bl)), (Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y))
(Permutation (selsort l n0) (bl ++ bl)), (Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n1 :: bl))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl n1)), (Permutation (selsort l n1) (selsort bl y)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l y))
(Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (l ++ bl)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) (n0 :: bl)), (Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n1 :: bl))
(Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0)), (Permutation (selsort l y) (selsort l n1))
(Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n1 :: bl))
(Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l n1))
(Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n1 :: bl))
(Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selsort bl n0)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0)), (Permutation (bl ++ l) (selsort l n1))
(Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) []), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) l), (Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n1 :: bl))
(Permutation (l ++ bl) (n1 :: l)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl n1)), (Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l n1))
(Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) []), (Permutation (l ++ l) bl), (Permutation (l ++ l) l), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n1 :: bl))
(Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) []), (Permutation [] bl), (Permutation [] l), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l)), (Permutation [] (n1 :: bl))
(Permutation [] (n1 :: l)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l)), (Permutation [] (selsort bl n0)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1))
(Permutation [] (selsort l y)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (In n0 (n0 :: bl)), (In n0 (n0 :: l)), (In n0 (n1 :: bl)), (In n0 (n1 :: l)), (In n0 (y :: bl))
(In n0 (y :: l)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selsort bl n0)), (In n0 (selsort bl n1)), (In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n1 (n0 :: bl)), (In n1 (n0 :: l)), (In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (selection_sort bl))
(In n1 (selection_sort l)), (In n1 (selsort bl n0)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (bl ++ bl)), (In n1 (bl ++ l)), (In n1 (l ++ bl))
(In n1 (l ++ l)), (In y (n0 :: bl)), (In y (n0 :: l)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (y :: bl)), (In y (y :: l)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selsort bl n0))
(In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0)), (In y (selsort l n1)), (In y (selsort l y)), (In y (bl ++ bl)), (In y (bl ++ l)), (In y (l ++ bl)), (In y (l ++ l)), (In (length bl) bl)
(In (length bl) l), (In (length bl) (n0 :: bl)), (In (length bl) (n0 :: l)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (y :: bl)), (In (length bl) (y :: l)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selsort bl n0))
(In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (l ++ bl)), (In (length bl) (l ++ l)), (In (length l) bl)
(In (length l) l), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selsort bl n0))
(In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0)), (In (length l) (selsort l n1)), (In (length l) (selsort l y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (l ++ bl)), (In (length l) (l ++ l)), (n0 < length bl)
(n0 < length l), (n1 < length bl), (n1 < length l), (y < length bl), (y < length l), (length bl < n0), (length bl < n1), (length bl < y), (length bl < length l), (length l < n0)
(length l < n1), (length l < y), (length l < length bl), (n0 <= length bl), (n0 <= length l), (n1 <= length bl), (n1 <= length l), (y <= length bl), (y <= length l), (length bl <= n0)
(length bl <= n1), (length bl <= y), (length bl <= length l), (length l <= n0), (length l <= n1), (length l <= y), (length l <= length bl), (~ n0 <=* bl), (~ n0 <=* l), (~ n1 <=* bl)
(~ n1 <=* l), (~ y <=* bl), (~ y <=* l), (~ sorted bl), (~ sorted l), (~ Permutation bl bl), (~ Permutation bl l), (~ Permutation l bl), (~ Permutation l l), (~ In n0 bl)
(~ In n0 l), (~ In n1 bl), (~ In n1 l), (~ In y bl), (~ In y l), (~ n0 < n0), (~ n0 < n1), (~ n0 < y), (~ n1 < n0), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= n1), (~ n0 <= y), (~ n1 <= n0), (~ n1 <= n1), (~ n1 <= y)
(~ y <= n0), (~ y <= n1), (~ y <= y), (bl <> bl), (bl <> l), (l <> bl), (l <> l), (n0 <> n0), (n0 <> n1), (n0 <> y)
(n1 <> n0), (n1 <> n1), (n1 <> y), (y <> n0), (y <> n1), (y <> y), (None = Some bl), (None = Some l), (n0 :: bl = bl), (n0 :: bl = l)
(n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = bl ++ bl), (n0 :: bl = bl ++ l)
(n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = []), (n0 :: l = bl), (n0 :: l = l), (n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y)
(n0 :: l = selsort l n0), (n0 :: l = selsort l n1), (n0 :: l = selsort l y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = l ++ bl), (n0 :: l = l ++ l), (n0 :: l = []), (n1 :: bl = bl), (n1 :: bl = l)
(n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l n1), (n1 :: bl = selsort l y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l)
(n1 :: bl = l ++ bl), (n1 :: bl = l ++ l), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l), (n1 :: l = selsort bl n0), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y)
(n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = bl ++ bl), (n1 :: l = bl ++ l), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = []), (y :: bl = bl), (y :: bl = l)
(y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selsort bl n0), (y :: bl = selsort bl n1), (y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = bl ++ bl), (y :: bl = bl ++ l)
(y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = []), (y :: l = bl), (y :: l = l), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selsort bl n0), (y :: l = selsort bl n1), (y :: l = selsort bl y)
(y :: l = selsort l n0), (y :: l = selsort l n1), (y :: l = selsort l y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = []), (selection_sort bl = bl), (selection_sort bl = l)
(selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = l ++ bl), (selection_sort l = l ++ l)
(selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n1 = bl), (selsort bl n1 = l)
(selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = l ++ bl), (selsort bl n1 = l ++ l), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort l)
(selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l)
(selsort l n0 = l ++ bl), (selsort l n0 = l ++ l), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = l ++ bl), (selsort l n1 = l ++ l)
(selsort l y = bl), (selsort l y = l), (selsort l y = selection_sort bl), (selsort l y = selection_sort l), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = l ++ bl), (selsort l y = l ++ l), (bl ++ bl = bl), (bl ++ bl = l)
(bl ++ l = bl), (bl ++ l = l), (l ++ bl = bl), (l ++ bl = l), (l ++ l = bl), (l ++ l = l), ([] = bl), ([] = l), ([] = selection_sort bl), ([] = selection_sort l)
([] = selsort bl n0), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort l y), ([] = bl ++ bl), ([] = bl ++ l), ([] = l ++ bl), ([] = l ++ l)
(None = Some n0), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl), ((n0, bl) = select n0 l), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select y bl), ((n0, bl) = select y l), ((n0, l) = select n0 bl)
((n0, l) = select n0 l), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select y bl), ((n0, l) = select y l), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select y bl)
((n1, bl) = select y l), ((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n1 bl), ((n1, l) = select n1 l), ((n1, l) = select y bl), ((n1, l) = select y l), ((y, bl) = select n0 bl), ((y, bl) = select n0 l), ((y, bl) = select n1 bl)
((y, bl) = select n1 l), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, l) = select n0 bl), ((y, l) = select n0 l), ((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select y bl), ((y, l) = select y l), (length bl = n0)
(length bl = n1), (length bl = y), (length l = n0), (length l = n1), (length l = y)

Label: 2 (2)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv2), (n1 <=* bl), (n1 <=* l), (n1 <=* gv2), (y <=* bl), (y <=* l), (y <=* gv2), (sorted bl)
(sorted l), (sorted gv2), (Permutation bl bl), (Permutation bl l), (Permutation bl gv2), (Permutation l bl), (Permutation l l), (Permutation l gv2), (Permutation gv2 bl), (Permutation gv2 l)
(Permutation gv2 gv2), (In n0 bl), (In n0 l), (In n0 gv2), (In n1 bl), (In n1 l), (In n1 gv2), (In y bl), (In y l), (In y gv2)
(n0 < n0), (n0 < n1), (n0 < y), (n1 < n0), (n1 < n1), (n1 < y), (y < n0), (y < n1), (y < y), (n0 <= n0)
(n0 <= n1), (n0 <= y), (n1 <= n0), (n1 <= n1), (n1 <= y), (y <= n0), (y <= n1), (y <= y), (bl = bl), (bl = l)
(bl = gv2), (l = bl), (l = l), (l = gv2), (gv2 = bl), (gv2 = l), (gv2 = gv2), (n0 = n0), (n0 = n1), (n0 = y)
(n1 = n0), (n1 = n1), (n1 = y), (y = n0), (y = n1), (y = y), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv2), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv2), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv2), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv2), (n0 <=* selsort bl n0), (n0 <=* selsort bl n1)
(n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv2 n0), (n0 <=* selsort gv2 n1), (n0 <=* selsort gv2 y), (n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv2)
(n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv2), (n0 <=* gv2 ++ bl), (n0 <=* gv2 ++ l), (n0 <=* gv2 ++ gv2), (n0 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv2)
(n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv2), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv2), (n1 <=* selection_sort bl), (n1 <=* selection_sort l), (n1 <=* selection_sort gv2), (n1 <=* selsort bl n0)
(n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l n1), (n1 <=* selsort l y), (n1 <=* selsort gv2 n0), (n1 <=* selsort gv2 n1), (n1 <=* selsort gv2 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l)
(n1 <=* bl ++ gv2), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv2), (n1 <=* gv2 ++ bl), (n1 <=* gv2 ++ l), (n1 <=* gv2 ++ gv2), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l)
(y <=* n0 :: gv2), (y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv2), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv2), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv2)
(y <=* selsort bl n0), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv2 n0), (y <=* selsort gv2 n1), (y <=* selsort gv2 y), (y <=* bl ++ bl)
(y <=* bl ++ l), (y <=* bl ++ gv2), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv2), (y <=* gv2 ++ bl), (y <=* gv2 ++ l), (y <=* gv2 ++ gv2), (y <=* []), (length bl <=* bl)
(length bl <=* l), (length bl <=* gv2), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv2), (length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv2), (length bl <=* y :: bl), (length bl <=* y :: l)
(length bl <=* y :: gv2), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv2), (length bl <=* selsort bl n0), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l n1), (length bl <=* selsort l y)
(length bl <=* selsort gv2 n0), (length bl <=* selsort gv2 n1), (length bl <=* selsort gv2 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv2), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv2), (length bl <=* gv2 ++ bl)
(length bl <=* gv2 ++ l), (length bl <=* gv2 ++ gv2), (length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv2), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv2), (length l <=* n1 :: bl)
(length l <=* n1 :: l), (length l <=* n1 :: gv2), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv2), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv2), (length l <=* selsort bl n0), (length l <=* selsort bl n1)
(length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv2 n0), (length l <=* selsort gv2 n1), (length l <=* selsort gv2 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv2)
(length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv2), (length l <=* gv2 ++ bl), (length l <=* gv2 ++ l), (length l <=* gv2 ++ gv2), (length l <=* []), (length gv2 <=* bl), (length gv2 <=* l), (length gv2 <=* gv2)
(length gv2 <=* n0 :: bl), (length gv2 <=* n0 :: l), (length gv2 <=* n0 :: gv2), (length gv2 <=* n1 :: bl), (length gv2 <=* n1 :: l), (length gv2 <=* n1 :: gv2), (length gv2 <=* y :: bl), (length gv2 <=* y :: l), (length gv2 <=* y :: gv2), (length gv2 <=* selection_sort bl)
(length gv2 <=* selection_sort l), (length gv2 <=* selection_sort gv2), (length gv2 <=* selsort bl n0), (length gv2 <=* selsort bl n1), (length gv2 <=* selsort bl y), (length gv2 <=* selsort l n0), (length gv2 <=* selsort l n1), (length gv2 <=* selsort l y), (length gv2 <=* selsort gv2 n0), (length gv2 <=* selsort gv2 n1)
(length gv2 <=* selsort gv2 y), (length gv2 <=* bl ++ bl), (length gv2 <=* bl ++ l), (length gv2 <=* bl ++ gv2), (length gv2 <=* l ++ bl), (length gv2 <=* l ++ l), (length gv2 <=* l ++ gv2), (length gv2 <=* gv2 ++ bl), (length gv2 <=* gv2 ++ l), (length gv2 <=* gv2 ++ gv2)
(length gv2 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv2)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv2)), (sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv2))
(sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv2)), (sorted (selsort bl n0)), (sorted (selsort bl n1)), (sorted (selsort bl y)), (sorted (selsort l n0)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv2 n0))
(sorted (selsort gv2 n1)), (sorted (selsort gv2 y)), (sorted (bl ++ bl)), (sorted (bl ++ l)), (sorted (bl ++ gv2)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv2)), (sorted (gv2 ++ bl)), (sorted (gv2 ++ l))
(sorted (gv2 ++ gv2)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l)), (Permutation bl (n0 :: gv2)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv2)), (Permutation bl (y :: bl)), (Permutation bl (y :: l))
(Permutation bl (y :: gv2)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv2)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l n1)), (Permutation bl (selsort l y))
(Permutation bl (selsort gv2 n0)), (Permutation bl (selsort gv2 n1)), (Permutation bl (selsort gv2 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv2)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l)), (Permutation bl (l ++ gv2)), (Permutation bl (gv2 ++ bl))
(Permutation bl (gv2 ++ l)), (Permutation bl (gv2 ++ gv2)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv2)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv2)), (Permutation l (y :: bl))
(Permutation l (y :: l)), (Permutation l (y :: gv2)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv2)), (Permutation l (selsort bl n0)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1))
(Permutation l (selsort l y)), (Permutation l (selsort gv2 n0)), (Permutation l (selsort gv2 n1)), (Permutation l (selsort gv2 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv2)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv2))
(Permutation l (gv2 ++ bl)), (Permutation l (gv2 ++ l)), (Permutation l (gv2 ++ gv2)), (Permutation l []), (Permutation gv2 (n0 :: bl)), (Permutation gv2 (n0 :: l)), (Permutation gv2 (n0 :: gv2)), (Permutation gv2 (n1 :: bl)), (Permutation gv2 (n1 :: l)), (Permutation gv2 (n1 :: gv2))
(Permutation gv2 (y :: bl)), (Permutation gv2 (y :: l)), (Permutation gv2 (y :: gv2)), (Permutation gv2 (selection_sort bl)), (Permutation gv2 (selection_sort l)), (Permutation gv2 (selection_sort gv2)), (Permutation gv2 (selsort bl n0)), (Permutation gv2 (selsort bl n1)), (Permutation gv2 (selsort bl y)), (Permutation gv2 (selsort l n0))
(Permutation gv2 (selsort l n1)), (Permutation gv2 (selsort l y)), (Permutation gv2 (selsort gv2 n0)), (Permutation gv2 (selsort gv2 n1)), (Permutation gv2 (selsort gv2 y)), (Permutation gv2 (bl ++ bl)), (Permutation gv2 (bl ++ l)), (Permutation gv2 (bl ++ gv2)), (Permutation gv2 (l ++ bl)), (Permutation gv2 (l ++ l))
(Permutation gv2 (l ++ gv2)), (Permutation gv2 (gv2 ++ bl)), (Permutation gv2 (gv2 ++ l)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 []), (Permutation (n0 :: bl) bl), (Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv2), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv2))
(Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv2)), (Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv2)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv2)), (Permutation (n0 :: bl) (selsort bl n0))
(Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y)), (Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv2 n0)), (Permutation (n0 :: bl) (selsort gv2 n1)), (Permutation (n0 :: bl) (selsort gv2 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv2)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv2)), (Permutation (n0 :: bl) (gv2 ++ bl)), (Permutation (n0 :: bl) (gv2 ++ l)), (Permutation (n0 :: bl) (gv2 ++ gv2)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv2), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv2)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv2)), (Permutation (n0 :: l) (y :: bl)), (Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv2)), (Permutation (n0 :: l) (selection_sort bl))
(Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv2)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv2 n0)), (Permutation (n0 :: l) (selsort gv2 n1))
(Permutation (n0 :: l) (selsort gv2 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv2)), (Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv2)), (Permutation (n0 :: l) (gv2 ++ bl)), (Permutation (n0 :: l) (gv2 ++ l)), (Permutation (n0 :: l) (gv2 ++ gv2))
(Permutation (n0 :: l) []), (Permutation (n0 :: gv2) bl), (Permutation (n0 :: gv2) l), (Permutation (n0 :: gv2) gv2), (Permutation (n0 :: gv2) (n0 :: bl)), (Permutation (n0 :: gv2) (n0 :: l)), (Permutation (n0 :: gv2) (n1 :: bl)), (Permutation (n0 :: gv2) (n1 :: l)), (Permutation (n0 :: gv2) (n1 :: gv2)), (Permutation (n0 :: gv2) (y :: bl))
(Permutation (n0 :: gv2) (y :: l)), (Permutation (n0 :: gv2) (y :: gv2)), (Permutation (n0 :: gv2) (selection_sort bl)), (Permutation (n0 :: gv2) (selection_sort l)), (Permutation (n0 :: gv2) (selection_sort gv2)), (Permutation (n0 :: gv2) (selsort bl n0)), (Permutation (n0 :: gv2) (selsort bl n1)), (Permutation (n0 :: gv2) (selsort bl y)), (Permutation (n0 :: gv2) (selsort l n0)), (Permutation (n0 :: gv2) (selsort l n1))
(Permutation (n0 :: gv2) (selsort l y)), (Permutation (n0 :: gv2) (selsort gv2 n0)), (Permutation (n0 :: gv2) (selsort gv2 n1)), (Permutation (n0 :: gv2) (selsort gv2 y)), (Permutation (n0 :: gv2) (bl ++ bl)), (Permutation (n0 :: gv2) (bl ++ l)), (Permutation (n0 :: gv2) (bl ++ gv2)), (Permutation (n0 :: gv2) (l ++ bl)), (Permutation (n0 :: gv2) (l ++ l)), (Permutation (n0 :: gv2) (l ++ gv2))
(Permutation (n0 :: gv2) (gv2 ++ bl)), (Permutation (n0 :: gv2) (gv2 ++ l)), (Permutation (n0 :: gv2) (gv2 ++ gv2)), (Permutation (n0 :: gv2) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv2), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv2))
(Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv2)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv2)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv2)), (Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl n1))
(Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv2 n0)), (Permutation (n1 :: bl) (selsort gv2 n1)), (Permutation (n1 :: bl) (selsort gv2 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv2))
(Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv2)), (Permutation (n1 :: bl) (gv2 ++ bl)), (Permutation (n1 :: bl) (gv2 ++ l)), (Permutation (n1 :: bl) (gv2 ++ gv2)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv2)
(Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv2)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv2)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv2)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l))
(Permutation (n1 :: l) (selection_sort gv2)), (Permutation (n1 :: l) (selsort bl n0)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv2 n0)), (Permutation (n1 :: l) (selsort gv2 n1)), (Permutation (n1 :: l) (selsort gv2 y))
(Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv2)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv2)), (Permutation (n1 :: l) (gv2 ++ bl)), (Permutation (n1 :: l) (gv2 ++ l)), (Permutation (n1 :: l) (gv2 ++ gv2)), (Permutation (n1 :: l) [])
(Permutation (n1 :: gv2) bl), (Permutation (n1 :: gv2) l), (Permutation (n1 :: gv2) gv2), (Permutation (n1 :: gv2) (n0 :: bl)), (Permutation (n1 :: gv2) (n0 :: l)), (Permutation (n1 :: gv2) (n0 :: gv2)), (Permutation (n1 :: gv2) (n1 :: bl)), (Permutation (n1 :: gv2) (n1 :: l)), (Permutation (n1 :: gv2) (y :: bl)), (Permutation (n1 :: gv2) (y :: l))
(Permutation (n1 :: gv2) (y :: gv2)), (Permutation (n1 :: gv2) (selection_sort bl)), (Permutation (n1 :: gv2) (selection_sort l)), (Permutation (n1 :: gv2) (selection_sort gv2)), (Permutation (n1 :: gv2) (selsort bl n0)), (Permutation (n1 :: gv2) (selsort bl n1)), (Permutation (n1 :: gv2) (selsort bl y)), (Permutation (n1 :: gv2) (selsort l n0)), (Permutation (n1 :: gv2) (selsort l n1)), (Permutation (n1 :: gv2) (selsort l y))
(Permutation (n1 :: gv2) (selsort gv2 n0)), (Permutation (n1 :: gv2) (selsort gv2 n1)), (Permutation (n1 :: gv2) (selsort gv2 y)), (Permutation (n1 :: gv2) (bl ++ bl)), (Permutation (n1 :: gv2) (bl ++ l)), (Permutation (n1 :: gv2) (bl ++ gv2)), (Permutation (n1 :: gv2) (l ++ bl)), (Permutation (n1 :: gv2) (l ++ l)), (Permutation (n1 :: gv2) (l ++ gv2)), (Permutation (n1 :: gv2) (gv2 ++ bl))
(Permutation (n1 :: gv2) (gv2 ++ l)), (Permutation (n1 :: gv2) (gv2 ++ gv2)), (Permutation (n1 :: gv2) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv2), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv2)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv2)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv2)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv2)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl n1)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv2 n0)), (Permutation (y :: bl) (selsort gv2 n1)), (Permutation (y :: bl) (selsort gv2 y)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv2)), (Permutation (y :: bl) (l ++ bl))
(Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv2)), (Permutation (y :: bl) (gv2 ++ bl)), (Permutation (y :: bl) (gv2 ++ l)), (Permutation (y :: bl) (gv2 ++ gv2)), (Permutation (y :: bl) []), (Permutation (y :: l) bl), (Permutation (y :: l) l), (Permutation (y :: l) gv2), (Permutation (y :: l) (n0 :: bl))
(Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv2)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l)), (Permutation (y :: l) (n1 :: gv2)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv2)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv2))
(Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y)), (Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv2 n0)), (Permutation (y :: l) (selsort gv2 n1)), (Permutation (y :: l) (selsort gv2 y)), (Permutation (y :: l) (bl ++ bl))
(Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (bl ++ gv2)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv2)), (Permutation (y :: l) (gv2 ++ bl)), (Permutation (y :: l) (gv2 ++ l)), (Permutation (y :: l) (gv2 ++ gv2)), (Permutation (y :: l) []), (Permutation (y :: gv2) bl)
(Permutation (y :: gv2) l), (Permutation (y :: gv2) gv2), (Permutation (y :: gv2) (n0 :: bl)), (Permutation (y :: gv2) (n0 :: l)), (Permutation (y :: gv2) (n0 :: gv2)), (Permutation (y :: gv2) (n1 :: bl)), (Permutation (y :: gv2) (n1 :: l)), (Permutation (y :: gv2) (n1 :: gv2)), (Permutation (y :: gv2) (y :: bl)), (Permutation (y :: gv2) (y :: l))
(Permutation (y :: gv2) (selection_sort bl)), (Permutation (y :: gv2) (selection_sort l)), (Permutation (y :: gv2) (selection_sort gv2)), (Permutation (y :: gv2) (selsort bl n0)), (Permutation (y :: gv2) (selsort bl n1)), (Permutation (y :: gv2) (selsort bl y)), (Permutation (y :: gv2) (selsort l n0)), (Permutation (y :: gv2) (selsort l n1)), (Permutation (y :: gv2) (selsort l y)), (Permutation (y :: gv2) (selsort gv2 n0))
(Permutation (y :: gv2) (selsort gv2 n1)), (Permutation (y :: gv2) (selsort gv2 y)), (Permutation (y :: gv2) (bl ++ bl)), (Permutation (y :: gv2) (bl ++ l)), (Permutation (y :: gv2) (bl ++ gv2)), (Permutation (y :: gv2) (l ++ bl)), (Permutation (y :: gv2) (l ++ l)), (Permutation (y :: gv2) (l ++ gv2)), (Permutation (y :: gv2) (gv2 ++ bl)), (Permutation (y :: gv2) (gv2 ++ l))
(Permutation (y :: gv2) (gv2 ++ gv2)), (Permutation (y :: gv2) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv2), (Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv2)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l))
(Permutation (selection_sort bl) (n1 :: gv2)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv2)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv2)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv2 n0)), (Permutation (selection_sort bl) (selsort gv2 n1)), (Permutation (selection_sort bl) (selsort gv2 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv2)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (l ++ l))
(Permutation (selection_sort bl) (l ++ gv2)), (Permutation (selection_sort bl) (gv2 ++ bl)), (Permutation (selection_sort bl) (gv2 ++ l)), (Permutation (selection_sort bl) (gv2 ++ gv2)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv2), (Permutation (selection_sort l) (n0 :: bl)), (Permutation (selection_sort l) (n0 :: l))
(Permutation (selection_sort l) (n0 :: gv2)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv2)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: gv2)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv2)), (Permutation (selection_sort l) (selsort bl n0))
(Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv2 n0)), (Permutation (selection_sort l) (selsort gv2 n1)), (Permutation (selection_sort l) (selsort gv2 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l))
(Permutation (selection_sort l) (bl ++ gv2)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ gv2)), (Permutation (selection_sort l) (gv2 ++ bl)), (Permutation (selection_sort l) (gv2 ++ l)), (Permutation (selection_sort l) (gv2 ++ gv2)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv2) bl), (Permutation (selection_sort gv2) l)
(Permutation (selection_sort gv2) gv2), (Permutation (selection_sort gv2) (n0 :: bl)), (Permutation (selection_sort gv2) (n0 :: l)), (Permutation (selection_sort gv2) (n0 :: gv2)), (Permutation (selection_sort gv2) (n1 :: bl)), (Permutation (selection_sort gv2) (n1 :: l)), (Permutation (selection_sort gv2) (n1 :: gv2)), (Permutation (selection_sort gv2) (y :: bl)), (Permutation (selection_sort gv2) (y :: l)), (Permutation (selection_sort gv2) (y :: gv2))
(Permutation (selection_sort gv2) (selection_sort bl)), (Permutation (selection_sort gv2) (selection_sort l)), (Permutation (selection_sort gv2) (selsort bl n0)), (Permutation (selection_sort gv2) (selsort bl n1)), (Permutation (selection_sort gv2) (selsort bl y)), (Permutation (selection_sort gv2) (selsort l n0)), (Permutation (selection_sort gv2) (selsort l n1)), (Permutation (selection_sort gv2) (selsort l y)), (Permutation (selection_sort gv2) (selsort gv2 n0)), (Permutation (selection_sort gv2) (selsort gv2 n1))
(Permutation (selection_sort gv2) (selsort gv2 y)), (Permutation (selection_sort gv2) (bl ++ bl)), (Permutation (selection_sort gv2) (bl ++ l)), (Permutation (selection_sort gv2) (bl ++ gv2)), (Permutation (selection_sort gv2) (l ++ bl)), (Permutation (selection_sort gv2) (l ++ l)), (Permutation (selection_sort gv2) (l ++ gv2)), (Permutation (selection_sort gv2) (gv2 ++ bl)), (Permutation (selection_sort gv2) (gv2 ++ l)), (Permutation (selection_sort gv2) (gv2 ++ gv2))
(Permutation (selection_sort gv2) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv2), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv2)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv2))
(Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv2)), (Permutation (selsort bl n0) (selection_sort bl)), (Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv2)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l n1))
(Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv2 n0)), (Permutation (selsort bl n0) (selsort gv2 n1)), (Permutation (selsort bl n0) (selsort gv2 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv2)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv2))
(Permutation (selsort bl n0) (gv2 ++ bl)), (Permutation (selsort bl n0) (gv2 ++ l)), (Permutation (selsort bl n0) (gv2 ++ gv2)), (Permutation (selsort bl n0) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv2), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv2))
(Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv2)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv2)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv2)), (Permutation (selsort bl n1) (selsort bl n0))
(Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv2 n0)), (Permutation (selsort bl n1) (selsort gv2 n1)), (Permutation (selsort bl n1) (selsort gv2 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv2))
(Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv2)), (Permutation (selsort bl n1) (gv2 ++ bl)), (Permutation (selsort bl n1) (gv2 ++ l)), (Permutation (selsort bl n1) (gv2 ++ gv2)), (Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv2)
(Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv2)), (Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv2)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv2)), (Permutation (selsort bl y) (selection_sort bl))
(Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv2)), (Permutation (selsort bl y) (selsort bl n0)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv2 n0)), (Permutation (selsort bl y) (selsort gv2 n1)), (Permutation (selsort bl y) (selsort gv2 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv2)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv2)), (Permutation (selsort bl y) (gv2 ++ bl)), (Permutation (selsort bl y) (gv2 ++ l)), (Permutation (selsort bl y) (gv2 ++ gv2)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv2), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv2)), (Permutation (selsort l n0) (n1 :: bl)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv2)), (Permutation (selsort l n0) (y :: bl))
(Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv2)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv2)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y))
(Permutation (selsort l n0) (selsort gv2 n0)), (Permutation (selsort l n0) (selsort gv2 n1)), (Permutation (selsort l n0) (selsort gv2 y)), (Permutation (selsort l n0) (bl ++ bl)), (Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv2)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv2)), (Permutation (selsort l n0) (gv2 ++ bl))
(Permutation (selsort l n0) (gv2 ++ l)), (Permutation (selsort l n0) (gv2 ++ gv2)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l), (Permutation (selsort l n1) gv2), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv2)), (Permutation (selsort l n1) (n1 :: bl))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv2)), (Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv2)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv2)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl n1))
(Permutation (selsort l n1) (selsort bl y)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv2 n0)), (Permutation (selsort l n1) (selsort gv2 n1)), (Permutation (selsort l n1) (selsort gv2 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv2)), (Permutation (selsort l n1) (l ++ bl))
(Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv2)), (Permutation (selsort l n1) (gv2 ++ bl)), (Permutation (selsort l n1) (gv2 ++ l)), (Permutation (selsort l n1) (gv2 ++ gv2)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv2), (Permutation (selsort l y) (n0 :: bl))
(Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv2)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv2)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv2)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selection_sort gv2)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv2 n0)), (Permutation (selsort l y) (selsort gv2 n1)), (Permutation (selsort l y) (selsort gv2 y)), (Permutation (selsort l y) (bl ++ bl))
(Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv2)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv2)), (Permutation (selsort l y) (gv2 ++ bl)), (Permutation (selsort l y) (gv2 ++ l)), (Permutation (selsort l y) (gv2 ++ gv2)), (Permutation (selsort l y) []), (Permutation (selsort gv2 n0) bl)
(Permutation (selsort gv2 n0) l), (Permutation (selsort gv2 n0) gv2), (Permutation (selsort gv2 n0) (n0 :: bl)), (Permutation (selsort gv2 n0) (n0 :: l)), (Permutation (selsort gv2 n0) (n0 :: gv2)), (Permutation (selsort gv2 n0) (n1 :: bl)), (Permutation (selsort gv2 n0) (n1 :: l)), (Permutation (selsort gv2 n0) (n1 :: gv2)), (Permutation (selsort gv2 n0) (y :: bl)), (Permutation (selsort gv2 n0) (y :: l))
(Permutation (selsort gv2 n0) (y :: gv2)), (Permutation (selsort gv2 n0) (selection_sort bl)), (Permutation (selsort gv2 n0) (selection_sort l)), (Permutation (selsort gv2 n0) (selection_sort gv2)), (Permutation (selsort gv2 n0) (selsort bl n0)), (Permutation (selsort gv2 n0) (selsort bl n1)), (Permutation (selsort gv2 n0) (selsort bl y)), (Permutation (selsort gv2 n0) (selsort l n0)), (Permutation (selsort gv2 n0) (selsort l n1)), (Permutation (selsort gv2 n0) (selsort l y))
(Permutation (selsort gv2 n0) (selsort gv2 n1)), (Permutation (selsort gv2 n0) (selsort gv2 y)), (Permutation (selsort gv2 n0) (bl ++ bl)), (Permutation (selsort gv2 n0) (bl ++ l)), (Permutation (selsort gv2 n0) (bl ++ gv2)), (Permutation (selsort gv2 n0) (l ++ bl)), (Permutation (selsort gv2 n0) (l ++ l)), (Permutation (selsort gv2 n0) (l ++ gv2)), (Permutation (selsort gv2 n0) (gv2 ++ bl)), (Permutation (selsort gv2 n0) (gv2 ++ l))
(Permutation (selsort gv2 n0) (gv2 ++ gv2)), (Permutation (selsort gv2 n0) []), (Permutation (selsort gv2 n1) bl), (Permutation (selsort gv2 n1) l), (Permutation (selsort gv2 n1) gv2), (Permutation (selsort gv2 n1) (n0 :: bl)), (Permutation (selsort gv2 n1) (n0 :: l)), (Permutation (selsort gv2 n1) (n0 :: gv2)), (Permutation (selsort gv2 n1) (n1 :: bl)), (Permutation (selsort gv2 n1) (n1 :: l))
(Permutation (selsort gv2 n1) (n1 :: gv2)), (Permutation (selsort gv2 n1) (y :: bl)), (Permutation (selsort gv2 n1) (y :: l)), (Permutation (selsort gv2 n1) (y :: gv2)), (Permutation (selsort gv2 n1) (selection_sort bl)), (Permutation (selsort gv2 n1) (selection_sort l)), (Permutation (selsort gv2 n1) (selection_sort gv2)), (Permutation (selsort gv2 n1) (selsort bl n0)), (Permutation (selsort gv2 n1) (selsort bl n1)), (Permutation (selsort gv2 n1) (selsort bl y))
(Permutation (selsort gv2 n1) (selsort l n0)), (Permutation (selsort gv2 n1) (selsort l n1)), (Permutation (selsort gv2 n1) (selsort l y)), (Permutation (selsort gv2 n1) (selsort gv2 n0)), (Permutation (selsort gv2 n1) (selsort gv2 y)), (Permutation (selsort gv2 n1) (bl ++ bl)), (Permutation (selsort gv2 n1) (bl ++ l)), (Permutation (selsort gv2 n1) (bl ++ gv2)), (Permutation (selsort gv2 n1) (l ++ bl)), (Permutation (selsort gv2 n1) (l ++ l))
(Permutation (selsort gv2 n1) (l ++ gv2)), (Permutation (selsort gv2 n1) (gv2 ++ bl)), (Permutation (selsort gv2 n1) (gv2 ++ l)), (Permutation (selsort gv2 n1) (gv2 ++ gv2)), (Permutation (selsort gv2 n1) []), (Permutation (selsort gv2 y) bl), (Permutation (selsort gv2 y) l), (Permutation (selsort gv2 y) gv2), (Permutation (selsort gv2 y) (n0 :: bl)), (Permutation (selsort gv2 y) (n0 :: l))
(Permutation (selsort gv2 y) (n0 :: gv2)), (Permutation (selsort gv2 y) (n1 :: bl)), (Permutation (selsort gv2 y) (n1 :: l)), (Permutation (selsort gv2 y) (n1 :: gv2)), (Permutation (selsort gv2 y) (y :: bl)), (Permutation (selsort gv2 y) (y :: l)), (Permutation (selsort gv2 y) (y :: gv2)), (Permutation (selsort gv2 y) (selection_sort bl)), (Permutation (selsort gv2 y) (selection_sort l)), (Permutation (selsort gv2 y) (selection_sort gv2))
(Permutation (selsort gv2 y) (selsort bl n0)), (Permutation (selsort gv2 y) (selsort bl n1)), (Permutation (selsort gv2 y) (selsort bl y)), (Permutation (selsort gv2 y) (selsort l n0)), (Permutation (selsort gv2 y) (selsort l n1)), (Permutation (selsort gv2 y) (selsort l y)), (Permutation (selsort gv2 y) (selsort gv2 n0)), (Permutation (selsort gv2 y) (selsort gv2 n1)), (Permutation (selsort gv2 y) (bl ++ bl)), (Permutation (selsort gv2 y) (bl ++ l))
(Permutation (selsort gv2 y) (bl ++ gv2)), (Permutation (selsort gv2 y) (l ++ bl)), (Permutation (selsort gv2 y) (l ++ l)), (Permutation (selsort gv2 y) (l ++ gv2)), (Permutation (selsort gv2 y) (gv2 ++ bl)), (Permutation (selsort gv2 y) (gv2 ++ l)), (Permutation (selsort gv2 y) (gv2 ++ gv2)), (Permutation (selsort gv2 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l)
(Permutation (bl ++ bl) gv2), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv2)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv2)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv2))
(Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv2)), (Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv2 n0))
(Permutation (bl ++ bl) (selsort gv2 n1)), (Permutation (bl ++ bl) (selsort gv2 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv2)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv2)), (Permutation (bl ++ bl) (gv2 ++ bl)), (Permutation (bl ++ bl) (gv2 ++ l)), (Permutation (bl ++ bl) (gv2 ++ gv2))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv2), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv2)), (Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv2))
(Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv2)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv2)), (Permutation (bl ++ l) (selsort bl n0)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0))
(Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv2 n0)), (Permutation (bl ++ l) (selsort gv2 n1)), (Permutation (bl ++ l) (selsort gv2 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv2)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv2))
(Permutation (bl ++ l) (gv2 ++ bl)), (Permutation (bl ++ l) (gv2 ++ l)), (Permutation (bl ++ l) (gv2 ++ gv2)), (Permutation (bl ++ l) []), (Permutation (bl ++ gv2) bl), (Permutation (bl ++ gv2) l), (Permutation (bl ++ gv2) gv2), (Permutation (bl ++ gv2) (n0 :: bl)), (Permutation (bl ++ gv2) (n0 :: l)), (Permutation (bl ++ gv2) (n0 :: gv2))
(Permutation (bl ++ gv2) (n1 :: bl)), (Permutation (bl ++ gv2) (n1 :: l)), (Permutation (bl ++ gv2) (n1 :: gv2)), (Permutation (bl ++ gv2) (y :: bl)), (Permutation (bl ++ gv2) (y :: l)), (Permutation (bl ++ gv2) (y :: gv2)), (Permutation (bl ++ gv2) (selection_sort bl)), (Permutation (bl ++ gv2) (selection_sort l)), (Permutation (bl ++ gv2) (selection_sort gv2)), (Permutation (bl ++ gv2) (selsort bl n0))
(Permutation (bl ++ gv2) (selsort bl n1)), (Permutation (bl ++ gv2) (selsort bl y)), (Permutation (bl ++ gv2) (selsort l n0)), (Permutation (bl ++ gv2) (selsort l n1)), (Permutation (bl ++ gv2) (selsort l y)), (Permutation (bl ++ gv2) (selsort gv2 n0)), (Permutation (bl ++ gv2) (selsort gv2 n1)), (Permutation (bl ++ gv2) (selsort gv2 y)), (Permutation (bl ++ gv2) (bl ++ bl)), (Permutation (bl ++ gv2) (bl ++ l))
(Permutation (bl ++ gv2) (l ++ bl)), (Permutation (bl ++ gv2) (l ++ l)), (Permutation (bl ++ gv2) (l ++ gv2)), (Permutation (bl ++ gv2) (gv2 ++ bl)), (Permutation (bl ++ gv2) (gv2 ++ l)), (Permutation (bl ++ gv2) (gv2 ++ gv2)), (Permutation (bl ++ gv2) []), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) l), (Permutation (l ++ bl) gv2)
(Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv2)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l)), (Permutation (l ++ bl) (n1 :: gv2)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv2)), (Permutation (l ++ bl) (selection_sort bl))
(Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv2)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl n1)), (Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv2 n0)), (Permutation (l ++ bl) (selsort gv2 n1))
(Permutation (l ++ bl) (selsort gv2 y)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv2)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv2)), (Permutation (l ++ bl) (gv2 ++ bl)), (Permutation (l ++ bl) (gv2 ++ l)), (Permutation (l ++ bl) (gv2 ++ gv2)), (Permutation (l ++ bl) [])
(Permutation (l ++ l) bl), (Permutation (l ++ l) l), (Permutation (l ++ l) gv2), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv2)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv2)), (Permutation (l ++ l) (y :: bl))
(Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv2)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv2)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv2 n0)), (Permutation (l ++ l) (selsort gv2 n1)), (Permutation (l ++ l) (selsort gv2 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (bl ++ gv2)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv2)), (Permutation (l ++ l) (gv2 ++ bl))
(Permutation (l ++ l) (gv2 ++ l)), (Permutation (l ++ l) (gv2 ++ gv2)), (Permutation (l ++ l) []), (Permutation (l ++ gv2) bl), (Permutation (l ++ gv2) l), (Permutation (l ++ gv2) gv2), (Permutation (l ++ gv2) (n0 :: bl)), (Permutation (l ++ gv2) (n0 :: l)), (Permutation (l ++ gv2) (n0 :: gv2)), (Permutation (l ++ gv2) (n1 :: bl))
(Permutation (l ++ gv2) (n1 :: l)), (Permutation (l ++ gv2) (n1 :: gv2)), (Permutation (l ++ gv2) (y :: bl)), (Permutation (l ++ gv2) (y :: l)), (Permutation (l ++ gv2) (y :: gv2)), (Permutation (l ++ gv2) (selection_sort bl)), (Permutation (l ++ gv2) (selection_sort l)), (Permutation (l ++ gv2) (selection_sort gv2)), (Permutation (l ++ gv2) (selsort bl n0)), (Permutation (l ++ gv2) (selsort bl n1))
(Permutation (l ++ gv2) (selsort bl y)), (Permutation (l ++ gv2) (selsort l n0)), (Permutation (l ++ gv2) (selsort l n1)), (Permutation (l ++ gv2) (selsort l y)), (Permutation (l ++ gv2) (selsort gv2 n0)), (Permutation (l ++ gv2) (selsort gv2 n1)), (Permutation (l ++ gv2) (selsort gv2 y)), (Permutation (l ++ gv2) (bl ++ bl)), (Permutation (l ++ gv2) (bl ++ l)), (Permutation (l ++ gv2) (bl ++ gv2))
(Permutation (l ++ gv2) (l ++ bl)), (Permutation (l ++ gv2) (l ++ l)), (Permutation (l ++ gv2) (gv2 ++ bl)), (Permutation (l ++ gv2) (gv2 ++ l)), (Permutation (l ++ gv2) (gv2 ++ gv2)), (Permutation (l ++ gv2) []), (Permutation (gv2 ++ bl) bl), (Permutation (gv2 ++ bl) l), (Permutation (gv2 ++ bl) gv2), (Permutation (gv2 ++ bl) (n0 :: bl))
(Permutation (gv2 ++ bl) (n0 :: l)), (Permutation (gv2 ++ bl) (n0 :: gv2)), (Permutation (gv2 ++ bl) (n1 :: bl)), (Permutation (gv2 ++ bl) (n1 :: l)), (Permutation (gv2 ++ bl) (n1 :: gv2)), (Permutation (gv2 ++ bl) (y :: bl)), (Permutation (gv2 ++ bl) (y :: l)), (Permutation (gv2 ++ bl) (y :: gv2)), (Permutation (gv2 ++ bl) (selection_sort bl)), (Permutation (gv2 ++ bl) (selection_sort l))
(Permutation (gv2 ++ bl) (selection_sort gv2)), (Permutation (gv2 ++ bl) (selsort bl n0)), (Permutation (gv2 ++ bl) (selsort bl n1)), (Permutation (gv2 ++ bl) (selsort bl y)), (Permutation (gv2 ++ bl) (selsort l n0)), (Permutation (gv2 ++ bl) (selsort l n1)), (Permutation (gv2 ++ bl) (selsort l y)), (Permutation (gv2 ++ bl) (selsort gv2 n0)), (Permutation (gv2 ++ bl) (selsort gv2 n1)), (Permutation (gv2 ++ bl) (selsort gv2 y))
(Permutation (gv2 ++ bl) (bl ++ bl)), (Permutation (gv2 ++ bl) (bl ++ l)), (Permutation (gv2 ++ bl) (bl ++ gv2)), (Permutation (gv2 ++ bl) (l ++ bl)), (Permutation (gv2 ++ bl) (l ++ l)), (Permutation (gv2 ++ bl) (l ++ gv2)), (Permutation (gv2 ++ bl) (gv2 ++ l)), (Permutation (gv2 ++ bl) (gv2 ++ gv2)), (Permutation (gv2 ++ bl) []), (Permutation (gv2 ++ l) bl)
(Permutation (gv2 ++ l) l), (Permutation (gv2 ++ l) gv2), (Permutation (gv2 ++ l) (n0 :: bl)), (Permutation (gv2 ++ l) (n0 :: l)), (Permutation (gv2 ++ l) (n0 :: gv2)), (Permutation (gv2 ++ l) (n1 :: bl)), (Permutation (gv2 ++ l) (n1 :: l)), (Permutation (gv2 ++ l) (n1 :: gv2)), (Permutation (gv2 ++ l) (y :: bl)), (Permutation (gv2 ++ l) (y :: l))
(Permutation (gv2 ++ l) (y :: gv2)), (Permutation (gv2 ++ l) (selection_sort bl)), (Permutation (gv2 ++ l) (selection_sort l)), (Permutation (gv2 ++ l) (selection_sort gv2)), (Permutation (gv2 ++ l) (selsort bl n0)), (Permutation (gv2 ++ l) (selsort bl n1)), (Permutation (gv2 ++ l) (selsort bl y)), (Permutation (gv2 ++ l) (selsort l n0)), (Permutation (gv2 ++ l) (selsort l n1)), (Permutation (gv2 ++ l) (selsort l y))
(Permutation (gv2 ++ l) (selsort gv2 n0)), (Permutation (gv2 ++ l) (selsort gv2 n1)), (Permutation (gv2 ++ l) (selsort gv2 y)), (Permutation (gv2 ++ l) (bl ++ bl)), (Permutation (gv2 ++ l) (bl ++ l)), (Permutation (gv2 ++ l) (bl ++ gv2)), (Permutation (gv2 ++ l) (l ++ bl)), (Permutation (gv2 ++ l) (l ++ l)), (Permutation (gv2 ++ l) (l ++ gv2)), (Permutation (gv2 ++ l) (gv2 ++ bl))
(Permutation (gv2 ++ l) (gv2 ++ gv2)), (Permutation (gv2 ++ l) []), (Permutation (gv2 ++ gv2) bl), (Permutation (gv2 ++ gv2) l), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) (n0 :: bl)), (Permutation (gv2 ++ gv2) (n0 :: l)), (Permutation (gv2 ++ gv2) (n0 :: gv2)), (Permutation (gv2 ++ gv2) (n1 :: bl)), (Permutation (gv2 ++ gv2) (n1 :: l))
(Permutation (gv2 ++ gv2) (n1 :: gv2)), (Permutation (gv2 ++ gv2) (y :: bl)), (Permutation (gv2 ++ gv2) (y :: l)), (Permutation (gv2 ++ gv2) (y :: gv2)), (Permutation (gv2 ++ gv2) (selection_sort bl)), (Permutation (gv2 ++ gv2) (selection_sort l)), (Permutation (gv2 ++ gv2) (selection_sort gv2)), (Permutation (gv2 ++ gv2) (selsort bl n0)), (Permutation (gv2 ++ gv2) (selsort bl n1)), (Permutation (gv2 ++ gv2) (selsort bl y))
(Permutation (gv2 ++ gv2) (selsort l n0)), (Permutation (gv2 ++ gv2) (selsort l n1)), (Permutation (gv2 ++ gv2) (selsort l y)), (Permutation (gv2 ++ gv2) (selsort gv2 n0)), (Permutation (gv2 ++ gv2) (selsort gv2 n1)), (Permutation (gv2 ++ gv2) (selsort gv2 y)), (Permutation (gv2 ++ gv2) (bl ++ bl)), (Permutation (gv2 ++ gv2) (bl ++ l)), (Permutation (gv2 ++ gv2) (bl ++ gv2)), (Permutation (gv2 ++ gv2) (l ++ bl))
(Permutation (gv2 ++ gv2) (l ++ l)), (Permutation (gv2 ++ gv2) (l ++ gv2)), (Permutation (gv2 ++ gv2) (gv2 ++ bl)), (Permutation (gv2 ++ gv2) (gv2 ++ l)), (Permutation (gv2 ++ gv2) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv2), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l))
(Permutation [] (n0 :: gv2)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv2)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv2)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort gv2))
(Permutation [] (selsort bl n0)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv2 n0)), (Permutation [] (selsort gv2 n1)), (Permutation [] (selsort gv2 y)), (Permutation [] (bl ++ bl))
(Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv2)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv2)), (Permutation [] (gv2 ++ bl)), (Permutation [] (gv2 ++ l)), (Permutation [] (gv2 ++ gv2)), (In n0 (n0 :: bl)), (In n0 (n0 :: l))
(In n0 (n0 :: gv2)), (In n0 (n1 :: bl)), (In n0 (n1 :: l)), (In n0 (n1 :: gv2)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv2)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv2))
(In n0 (selsort bl n0)), (In n0 (selsort bl n1)), (In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv2 n0)), (In n0 (selsort gv2 n1)), (In n0 (selsort gv2 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv2)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv2)), (In n0 (gv2 ++ bl)), (In n0 (gv2 ++ l)), (In n0 (gv2 ++ gv2)), (In n1 (n0 :: bl)), (In n1 (n0 :: l))
(In n1 (n0 :: gv2)), (In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv2)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv2)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv2))
(In n1 (selsort bl n0)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv2 n0)), (In n1 (selsort gv2 n1)), (In n1 (selsort gv2 y)), (In n1 (bl ++ bl))
(In n1 (bl ++ l)), (In n1 (bl ++ gv2)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv2)), (In n1 (gv2 ++ bl)), (In n1 (gv2 ++ l)), (In n1 (gv2 ++ gv2)), (In y (n0 :: bl)), (In y (n0 :: l))
(In y (n0 :: gv2)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv2)), (In y (y :: bl)), (In y (y :: l)), (In y (y :: gv2)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv2))
(In y (selsort bl n0)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv2 n0)), (In y (selsort gv2 n1)), (In y (selsort gv2 y)), (In y (bl ++ bl))
(In y (bl ++ l)), (In y (bl ++ gv2)), (In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv2)), (In y (gv2 ++ bl)), (In y (gv2 ++ l)), (In y (gv2 ++ gv2)), (In (length bl) bl), (In (length bl) l)
(In (length bl) gv2), (In (length bl) (n0 :: bl)), (In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv2)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv2)), (In (length bl) (y :: bl)), (In (length bl) (y :: l)), (In (length bl) (y :: gv2))
(In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv2)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv2 n0))
(In (length bl) (selsort gv2 n1)), (In (length bl) (selsort gv2 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv2)), (In (length bl) (l ++ bl)), (In (length bl) (l ++ l)), (In (length bl) (l ++ gv2)), (In (length bl) (gv2 ++ bl)), (In (length bl) (gv2 ++ l))
(In (length bl) (gv2 ++ gv2)), (In (length l) bl), (In (length l) l), (In (length l) gv2), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l)), (In (length l) (n0 :: gv2)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv2))
(In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv2)), (In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv2)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0))
(In (length l) (selsort l n1)), (In (length l) (selsort l y)), (In (length l) (selsort gv2 n0)), (In (length l) (selsort gv2 n1)), (In (length l) (selsort gv2 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv2)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv2)), (In (length l) (gv2 ++ bl)), (In (length l) (gv2 ++ l)), (In (length l) (gv2 ++ gv2)), (In (length gv2) bl), (In (length gv2) l), (In (length gv2) gv2), (In (length gv2) (n0 :: bl)), (In (length gv2) (n0 :: l)), (In (length gv2) (n0 :: gv2))
(In (length gv2) (n1 :: bl)), (In (length gv2) (n1 :: l)), (In (length gv2) (n1 :: gv2)), (In (length gv2) (y :: bl)), (In (length gv2) (y :: l)), (In (length gv2) (y :: gv2)), (In (length gv2) (selection_sort bl)), (In (length gv2) (selection_sort l)), (In (length gv2) (selection_sort gv2)), (In (length gv2) (selsort bl n0))
(In (length gv2) (selsort bl n1)), (In (length gv2) (selsort bl y)), (In (length gv2) (selsort l n0)), (In (length gv2) (selsort l n1)), (In (length gv2) (selsort l y)), (In (length gv2) (selsort gv2 n0)), (In (length gv2) (selsort gv2 n1)), (In (length gv2) (selsort gv2 y)), (In (length gv2) (bl ++ bl)), (In (length gv2) (bl ++ l))
(In (length gv2) (bl ++ gv2)), (In (length gv2) (l ++ bl)), (In (length gv2) (l ++ l)), (In (length gv2) (l ++ gv2)), (In (length gv2) (gv2 ++ bl)), (In (length gv2) (gv2 ++ l)), (In (length gv2) (gv2 ++ gv2)), (n0 < length bl), (n0 < length l), (n0 < length gv2)
(n1 < length bl), (n1 < length l), (n1 < length gv2), (y < length bl), (y < length l), (y < length gv2), (length bl < n0), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv2), (length l < n0), (length l < n1), (length l < y), (length l < length bl), (length l < length gv2), (length gv2 < n0), (length gv2 < n1), (length gv2 < y), (length gv2 < length bl)
(length gv2 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv2), (n1 <= length bl), (n1 <= length l), (n1 <= length gv2), (y <= length bl), (y <= length l), (y <= length gv2)
(length bl <= n0), (length bl <= n1), (length bl <= y), (length bl <= length l), (length bl <= length gv2), (length l <= n0), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv2)
(length gv2 <= n0), (length gv2 <= n1), (length gv2 <= y), (length gv2 <= length bl), (length gv2 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv2), (~ n1 <=* bl), (~ n1 <=* l)
(~ n1 <=* gv2), (~ y <=* bl), (~ y <=* l), (~ y <=* gv2), (~ sorted bl), (~ sorted l), (~ sorted gv2), (~ Permutation bl bl), (~ Permutation bl l), (~ Permutation bl gv2)
(~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv2), (~ Permutation gv2 bl), (~ Permutation gv2 l), (~ Permutation gv2 gv2), (~ In n0 bl), (~ In n0 l), (~ In n0 gv2), (~ In n1 bl)
(~ In n1 l), (~ In n1 gv2), (~ In y bl), (~ In y l), (~ In y gv2), (~ n0 < n0), (~ n0 < n1), (~ n0 < y), (~ n1 < n0), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= n1), (~ n0 <= y), (~ n1 <= n0), (~ n1 <= n1), (~ n1 <= y)
(~ y <= n0), (~ y <= n1), (~ y <= y), (bl <> bl), (bl <> l), (bl <> gv2), (l <> bl), (l <> l), (l <> gv2), (gv2 <> bl)
(gv2 <> l), (gv2 <> gv2), (n0 <> n0), (n0 <> n1), (n0 <> y), (n1 <> n0), (n1 <> n1), (n1 <> y), (y <> n0), (y <> n1)
(y <> y), (None = Some bl), (None = Some l), (None = Some gv2), (n0 :: bl = bl), (n0 :: bl = l), (n0 :: bl = gv2), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv2)
(n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv2 n0), (n0 :: bl = selsort gv2 n1), (n0 :: bl = selsort gv2 y), (n0 :: bl = bl ++ bl)
(n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv2), (n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv2), (n0 :: bl = gv2 ++ bl), (n0 :: bl = gv2 ++ l), (n0 :: bl = gv2 ++ gv2), (n0 :: bl = []), (n0 :: l = bl)
(n0 :: l = l), (n0 :: l = gv2), (n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv2), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv2 n0), (n0 :: l = selsort gv2 n1), (n0 :: l = selsort gv2 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv2), (n0 :: l = l ++ bl), (n0 :: l = l ++ l), (n0 :: l = l ++ gv2)
(n0 :: l = gv2 ++ bl), (n0 :: l = gv2 ++ l), (n0 :: l = gv2 ++ gv2), (n0 :: l = []), (n0 :: gv2 = bl), (n0 :: gv2 = l), (n0 :: gv2 = gv2), (n0 :: gv2 = selection_sort bl), (n0 :: gv2 = selection_sort l), (n0 :: gv2 = selection_sort gv2)
(n0 :: gv2 = selsort bl n0), (n0 :: gv2 = selsort bl n1), (n0 :: gv2 = selsort bl y), (n0 :: gv2 = selsort l n0), (n0 :: gv2 = selsort l n1), (n0 :: gv2 = selsort l y), (n0 :: gv2 = selsort gv2 n0), (n0 :: gv2 = selsort gv2 n1), (n0 :: gv2 = selsort gv2 y), (n0 :: gv2 = bl ++ bl)
(n0 :: gv2 = bl ++ l), (n0 :: gv2 = bl ++ gv2), (n0 :: gv2 = l ++ bl), (n0 :: gv2 = l ++ l), (n0 :: gv2 = l ++ gv2), (n0 :: gv2 = gv2 ++ bl), (n0 :: gv2 = gv2 ++ l), (n0 :: gv2 = gv2 ++ gv2), (n0 :: gv2 = []), (n1 :: bl = bl)
(n1 :: bl = l), (n1 :: bl = gv2), (n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv2), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv2 n0), (n1 :: bl = selsort gv2 n1), (n1 :: bl = selsort gv2 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv2), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l), (n1 :: bl = l ++ gv2)
(n1 :: bl = gv2 ++ bl), (n1 :: bl = gv2 ++ l), (n1 :: bl = gv2 ++ gv2), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv2), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l), (n1 :: l = selection_sort gv2)
(n1 :: l = selsort bl n0), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv2 n0), (n1 :: l = selsort gv2 n1), (n1 :: l = selsort gv2 y), (n1 :: l = bl ++ bl)
(n1 :: l = bl ++ l), (n1 :: l = bl ++ gv2), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv2), (n1 :: l = gv2 ++ bl), (n1 :: l = gv2 ++ l), (n1 :: l = gv2 ++ gv2), (n1 :: l = []), (n1 :: gv2 = bl)
(n1 :: gv2 = l), (n1 :: gv2 = gv2), (n1 :: gv2 = selection_sort bl), (n1 :: gv2 = selection_sort l), (n1 :: gv2 = selection_sort gv2), (n1 :: gv2 = selsort bl n0), (n1 :: gv2 = selsort bl n1), (n1 :: gv2 = selsort bl y), (n1 :: gv2 = selsort l n0), (n1 :: gv2 = selsort l n1)
(n1 :: gv2 = selsort l y), (n1 :: gv2 = selsort gv2 n0), (n1 :: gv2 = selsort gv2 n1), (n1 :: gv2 = selsort gv2 y), (n1 :: gv2 = bl ++ bl), (n1 :: gv2 = bl ++ l), (n1 :: gv2 = bl ++ gv2), (n1 :: gv2 = l ++ bl), (n1 :: gv2 = l ++ l), (n1 :: gv2 = l ++ gv2)
(n1 :: gv2 = gv2 ++ bl), (n1 :: gv2 = gv2 ++ l), (n1 :: gv2 = gv2 ++ gv2), (n1 :: gv2 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv2), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv2)
(y :: bl = selsort bl n0), (y :: bl = selsort bl n1), (y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv2 n0), (y :: bl = selsort gv2 n1), (y :: bl = selsort gv2 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv2), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv2), (y :: bl = gv2 ++ bl), (y :: bl = gv2 ++ l), (y :: bl = gv2 ++ gv2), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv2), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv2), (y :: l = selsort bl n0), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0), (y :: l = selsort l n1)
(y :: l = selsort l y), (y :: l = selsort gv2 n0), (y :: l = selsort gv2 n1), (y :: l = selsort gv2 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv2), (y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv2)
(y :: l = gv2 ++ bl), (y :: l = gv2 ++ l), (y :: l = gv2 ++ gv2), (y :: l = []), (y :: gv2 = bl), (y :: gv2 = l), (y :: gv2 = gv2), (y :: gv2 = selection_sort bl), (y :: gv2 = selection_sort l), (y :: gv2 = selection_sort gv2)
(y :: gv2 = selsort bl n0), (y :: gv2 = selsort bl n1), (y :: gv2 = selsort bl y), (y :: gv2 = selsort l n0), (y :: gv2 = selsort l n1), (y :: gv2 = selsort l y), (y :: gv2 = selsort gv2 n0), (y :: gv2 = selsort gv2 n1), (y :: gv2 = selsort gv2 y), (y :: gv2 = bl ++ bl)
(y :: gv2 = bl ++ l), (y :: gv2 = bl ++ gv2), (y :: gv2 = l ++ bl), (y :: gv2 = l ++ l), (y :: gv2 = l ++ gv2), (y :: gv2 = gv2 ++ bl), (y :: gv2 = gv2 ++ l), (y :: gv2 = gv2 ++ gv2), (y :: gv2 = []), (selection_sort bl = bl)
(selection_sort bl = l), (selection_sort bl = gv2), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = bl ++ gv2), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv2), (selection_sort bl = gv2 ++ bl), (selection_sort bl = gv2 ++ l)
(selection_sort bl = gv2 ++ gv2), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv2), (selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv2), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv2)
(selection_sort l = gv2 ++ bl), (selection_sort l = gv2 ++ l), (selection_sort l = gv2 ++ gv2), (selection_sort gv2 = bl), (selection_sort gv2 = l), (selection_sort gv2 = gv2), (selection_sort gv2 = bl ++ bl), (selection_sort gv2 = bl ++ l), (selection_sort gv2 = bl ++ gv2), (selection_sort gv2 = l ++ bl)
(selection_sort gv2 = l ++ l), (selection_sort gv2 = l ++ gv2), (selection_sort gv2 = gv2 ++ bl), (selection_sort gv2 = gv2 ++ l), (selection_sort gv2 = gv2 ++ gv2), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv2), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l)
(selsort bl n0 = selection_sort gv2), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv2), (selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv2), (selsort bl n0 = gv2 ++ bl), (selsort bl n0 = gv2 ++ l), (selsort bl n0 = gv2 ++ gv2)
(selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv2), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv2), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv2), (selsort bl n1 = l ++ bl)
(selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv2), (selsort bl n1 = gv2 ++ bl), (selsort bl n1 = gv2 ++ l), (selsort bl n1 = gv2 ++ gv2), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv2), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort l)
(selsort bl y = selection_sort gv2), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv2), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv2), (selsort bl y = gv2 ++ bl), (selsort bl y = gv2 ++ l), (selsort bl y = gv2 ++ gv2)
(selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv2), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv2), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv2), (selsort l n0 = l ++ bl)
(selsort l n0 = l ++ l), (selsort l n0 = l ++ gv2), (selsort l n0 = gv2 ++ bl), (selsort l n0 = gv2 ++ l), (selsort l n0 = gv2 ++ gv2), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv2), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l)
(selsort l n1 = selection_sort gv2), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv2), (selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv2), (selsort l n1 = gv2 ++ bl), (selsort l n1 = gv2 ++ l), (selsort l n1 = gv2 ++ gv2)
(selsort l y = bl), (selsort l y = l), (selsort l y = gv2), (selsort l y = selection_sort bl), (selsort l y = selection_sort l), (selsort l y = selection_sort gv2), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv2), (selsort l y = l ++ bl)
(selsort l y = l ++ l), (selsort l y = l ++ gv2), (selsort l y = gv2 ++ bl), (selsort l y = gv2 ++ l), (selsort l y = gv2 ++ gv2), (selsort gv2 n0 = bl), (selsort gv2 n0 = l), (selsort gv2 n0 = gv2), (selsort gv2 n0 = selection_sort bl), (selsort gv2 n0 = selection_sort l)
(selsort gv2 n0 = selection_sort gv2), (selsort gv2 n0 = bl ++ bl), (selsort gv2 n0 = bl ++ l), (selsort gv2 n0 = bl ++ gv2), (selsort gv2 n0 = l ++ bl), (selsort gv2 n0 = l ++ l), (selsort gv2 n0 = l ++ gv2), (selsort gv2 n0 = gv2 ++ bl), (selsort gv2 n0 = gv2 ++ l), (selsort gv2 n0 = gv2 ++ gv2)
(selsort gv2 n1 = bl), (selsort gv2 n1 = l), (selsort gv2 n1 = gv2), (selsort gv2 n1 = selection_sort bl), (selsort gv2 n1 = selection_sort l), (selsort gv2 n1 = selection_sort gv2), (selsort gv2 n1 = bl ++ bl), (selsort gv2 n1 = bl ++ l), (selsort gv2 n1 = bl ++ gv2), (selsort gv2 n1 = l ++ bl)
(selsort gv2 n1 = l ++ l), (selsort gv2 n1 = l ++ gv2), (selsort gv2 n1 = gv2 ++ bl), (selsort gv2 n1 = gv2 ++ l), (selsort gv2 n1 = gv2 ++ gv2), (selsort gv2 y = bl), (selsort gv2 y = l), (selsort gv2 y = gv2), (selsort gv2 y = selection_sort bl), (selsort gv2 y = selection_sort l)
(selsort gv2 y = selection_sort gv2), (selsort gv2 y = bl ++ bl), (selsort gv2 y = bl ++ l), (selsort gv2 y = bl ++ gv2), (selsort gv2 y = l ++ bl), (selsort gv2 y = l ++ l), (selsort gv2 y = l ++ gv2), (selsort gv2 y = gv2 ++ bl), (selsort gv2 y = gv2 ++ l), (selsort gv2 y = gv2 ++ gv2)
(bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv2), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv2), (bl ++ gv2 = bl), (bl ++ gv2 = l), (bl ++ gv2 = gv2), (l ++ bl = bl)
(l ++ bl = l), (l ++ bl = gv2), (l ++ l = bl), (l ++ l = l), (l ++ l = gv2), (l ++ gv2 = bl), (l ++ gv2 = l), (l ++ gv2 = gv2), (gv2 ++ bl = bl), (gv2 ++ bl = l)
(gv2 ++ bl = gv2), (gv2 ++ l = bl), (gv2 ++ l = l), (gv2 ++ l = gv2), (gv2 ++ gv2 = bl), (gv2 ++ gv2 = l), (gv2 ++ gv2 = gv2), ([] = bl), ([] = l), ([] = gv2)
([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv2), ([] = selsort bl n0), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort l y), ([] = selsort gv2 n0)
([] = selsort gv2 n1), ([] = selsort gv2 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv2), ([] = l ++ bl), ([] = l ++ l), ([] = l ++ gv2), ([] = gv2 ++ bl), ([] = gv2 ++ l)
([] = gv2 ++ gv2), (None = Some n0), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl), ((n0, bl) = select n0 l), ((n0, bl) = select n0 gv2), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv2)
((n0, bl) = select y bl), ((n0, bl) = select y l), ((n0, bl) = select y gv2), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv2), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv2), ((n0, l) = select y bl)
((n0, l) = select y l), ((n0, l) = select y gv2), ((n0, gv2) = select n0 bl), ((n0, gv2) = select n0 l), ((n0, gv2) = select n0 gv2), ((n0, gv2) = select n1 bl), ((n0, gv2) = select n1 l), ((n0, gv2) = select n1 gv2), ((n0, gv2) = select y bl), ((n0, gv2) = select y l)
((n0, gv2) = select y gv2), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv2), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv2), ((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv2)
((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv2), ((n1, l) = select n1 bl), ((n1, l) = select n1 l), ((n1, l) = select n1 gv2), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv2), ((n1, gv2) = select n0 bl)
((n1, gv2) = select n0 l), ((n1, gv2) = select n0 gv2), ((n1, gv2) = select n1 bl), ((n1, gv2) = select n1 l), ((n1, gv2) = select n1 gv2), ((n1, gv2) = select y bl), ((n1, gv2) = select y l), ((n1, gv2) = select y gv2), ((y, bl) = select n0 bl), ((y, bl) = select n0 l)
((y, bl) = select n0 gv2), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv2), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv2), ((y, l) = select n0 bl), ((y, l) = select n0 l), ((y, l) = select n0 gv2)
((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv2), ((y, l) = select y bl), ((y, l) = select y l), ((y, l) = select y gv2), ((y, gv2) = select n0 bl), ((y, gv2) = select n0 l), ((y, gv2) = select n0 gv2), ((y, gv2) = select n1 bl)
((y, gv2) = select n1 l), ((y, gv2) = select n1 gv2), ((y, gv2) = select y bl), ((y, gv2) = select y l), ((y, gv2) = select y gv2), (length bl = n0), (length bl = n1), (length bl = y), (length l = n0), (length l = n1)
(length l = y), (length gv2 = n0), (length gv2 = n1), (length gv2 = y)

Label: 3 (3)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv0), (n1 <=* bl), (n1 <=* l), (n1 <=* gv0), (y <=* bl), (y <=* l), (y <=* gv0), (sorted bl)
(sorted l), (sorted gv0), (Permutation bl bl), (Permutation bl l), (Permutation bl gv0), (Permutation l bl), (Permutation l l), (Permutation l gv0), (Permutation gv0 bl), (Permutation gv0 l)
(Permutation gv0 gv0), (In n0 bl), (In n0 l), (In n0 gv0), (In n1 bl), (In n1 l), (In n1 gv0), (In y bl), (In y l), (In y gv0)
(n0 < n0), (n0 < n1), (n0 < y), (n1 < n0), (n1 < n1), (n1 < y), (y < n0), (y < n1), (y < y), (n0 <= n0)
(n0 <= n1), (n0 <= y), (n1 <= n0), (n1 <= n1), (n1 <= y), (y <= n0), (y <= n1), (y <= y), (n0 = n0), (n0 = n1)
(n0 = y), (n1 = n0), (n1 = n1), (n1 = y), (y = n0), (y = n1), (y = y), (bl = bl), (bl = l), (bl = gv0)
(l = bl), (l = l), (l = gv0), (gv0 = bl), (gv0 = l), (gv0 = gv0), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv0), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv0), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv0), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv0), (n0 <=* selsort bl n0), (n0 <=* selsort bl n1)
(n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv0 n0), (n0 <=* selsort gv0 n1), (n0 <=* selsort gv0 y), (n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv0)
(n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv0), (n0 <=* gv0 ++ bl), (n0 <=* gv0 ++ l), (n0 <=* gv0 ++ gv0), (n0 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv0)
(n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv0), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv0), (n1 <=* selection_sort bl), (n1 <=* selection_sort l), (n1 <=* selection_sort gv0), (n1 <=* selsort bl n0)
(n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l n1), (n1 <=* selsort l y), (n1 <=* selsort gv0 n0), (n1 <=* selsort gv0 n1), (n1 <=* selsort gv0 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l)
(n1 <=* bl ++ gv0), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv0), (n1 <=* gv0 ++ bl), (n1 <=* gv0 ++ l), (n1 <=* gv0 ++ gv0), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l)
(y <=* n0 :: gv0), (y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv0), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv0), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv0)
(y <=* selsort bl n0), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv0 n0), (y <=* selsort gv0 n1), (y <=* selsort gv0 y), (y <=* bl ++ bl)
(y <=* bl ++ l), (y <=* bl ++ gv0), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv0), (y <=* gv0 ++ bl), (y <=* gv0 ++ l), (y <=* gv0 ++ gv0), (y <=* []), (length bl <=* bl)
(length bl <=* l), (length bl <=* gv0), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv0), (length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv0), (length bl <=* y :: bl), (length bl <=* y :: l)
(length bl <=* y :: gv0), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv0), (length bl <=* selsort bl n0), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l n1), (length bl <=* selsort l y)
(length bl <=* selsort gv0 n0), (length bl <=* selsort gv0 n1), (length bl <=* selsort gv0 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv0), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv0), (length bl <=* gv0 ++ bl)
(length bl <=* gv0 ++ l), (length bl <=* gv0 ++ gv0), (length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv0), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv0), (length l <=* n1 :: bl)
(length l <=* n1 :: l), (length l <=* n1 :: gv0), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv0), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv0), (length l <=* selsort bl n0), (length l <=* selsort bl n1)
(length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv0 n0), (length l <=* selsort gv0 n1), (length l <=* selsort gv0 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv0)
(length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv0), (length l <=* gv0 ++ bl), (length l <=* gv0 ++ l), (length l <=* gv0 ++ gv0), (length l <=* []), (length gv0 <=* bl), (length gv0 <=* l), (length gv0 <=* gv0)
(length gv0 <=* n0 :: bl), (length gv0 <=* n0 :: l), (length gv0 <=* n0 :: gv0), (length gv0 <=* n1 :: bl), (length gv0 <=* n1 :: l), (length gv0 <=* n1 :: gv0), (length gv0 <=* y :: bl), (length gv0 <=* y :: l), (length gv0 <=* y :: gv0), (length gv0 <=* selection_sort bl)
(length gv0 <=* selection_sort l), (length gv0 <=* selection_sort gv0), (length gv0 <=* selsort bl n0), (length gv0 <=* selsort bl n1), (length gv0 <=* selsort bl y), (length gv0 <=* selsort l n0), (length gv0 <=* selsort l n1), (length gv0 <=* selsort l y), (length gv0 <=* selsort gv0 n0), (length gv0 <=* selsort gv0 n1)
(length gv0 <=* selsort gv0 y), (length gv0 <=* bl ++ bl), (length gv0 <=* bl ++ l), (length gv0 <=* bl ++ gv0), (length gv0 <=* l ++ bl), (length gv0 <=* l ++ l), (length gv0 <=* l ++ gv0), (length gv0 <=* gv0 ++ bl), (length gv0 <=* gv0 ++ l), (length gv0 <=* gv0 ++ gv0)
(length gv0 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv0)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv0)), (sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv0))
(sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv0)), (sorted (selsort bl n0)), (sorted (selsort bl n1)), (sorted (selsort bl y)), (sorted (selsort l n0)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv0 n0))
(sorted (selsort gv0 n1)), (sorted (selsort gv0 y)), (sorted (bl ++ bl)), (sorted (bl ++ l)), (sorted (bl ++ gv0)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv0)), (sorted (gv0 ++ bl)), (sorted (gv0 ++ l))
(sorted (gv0 ++ gv0)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l)), (Permutation bl (n0 :: gv0)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv0)), (Permutation bl (y :: bl)), (Permutation bl (y :: l))
(Permutation bl (y :: gv0)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv0)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l n1)), (Permutation bl (selsort l y))
(Permutation bl (selsort gv0 n0)), (Permutation bl (selsort gv0 n1)), (Permutation bl (selsort gv0 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv0)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l)), (Permutation bl (l ++ gv0)), (Permutation bl (gv0 ++ bl))
(Permutation bl (gv0 ++ l)), (Permutation bl (gv0 ++ gv0)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv0)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv0)), (Permutation l (y :: bl))
(Permutation l (y :: l)), (Permutation l (y :: gv0)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv0)), (Permutation l (selsort bl n0)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1))
(Permutation l (selsort l y)), (Permutation l (selsort gv0 n0)), (Permutation l (selsort gv0 n1)), (Permutation l (selsort gv0 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv0)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv0))
(Permutation l (gv0 ++ bl)), (Permutation l (gv0 ++ l)), (Permutation l (gv0 ++ gv0)), (Permutation l []), (Permutation gv0 (n0 :: bl)), (Permutation gv0 (n0 :: l)), (Permutation gv0 (n0 :: gv0)), (Permutation gv0 (n1 :: bl)), (Permutation gv0 (n1 :: l)), (Permutation gv0 (n1 :: gv0))
(Permutation gv0 (y :: bl)), (Permutation gv0 (y :: l)), (Permutation gv0 (y :: gv0)), (Permutation gv0 (selection_sort bl)), (Permutation gv0 (selection_sort l)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (selsort bl n0)), (Permutation gv0 (selsort bl n1)), (Permutation gv0 (selsort bl y)), (Permutation gv0 (selsort l n0))
(Permutation gv0 (selsort l n1)), (Permutation gv0 (selsort l y)), (Permutation gv0 (selsort gv0 n0)), (Permutation gv0 (selsort gv0 n1)), (Permutation gv0 (selsort gv0 y)), (Permutation gv0 (bl ++ bl)), (Permutation gv0 (bl ++ l)), (Permutation gv0 (bl ++ gv0)), (Permutation gv0 (l ++ bl)), (Permutation gv0 (l ++ l))
(Permutation gv0 (l ++ gv0)), (Permutation gv0 (gv0 ++ bl)), (Permutation gv0 (gv0 ++ l)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (n0 :: bl) bl), (Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv0), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv0))
(Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv0)), (Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv0)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv0)), (Permutation (n0 :: bl) (selsort bl n0))
(Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y)), (Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv0 n0)), (Permutation (n0 :: bl) (selsort gv0 n1)), (Permutation (n0 :: bl) (selsort gv0 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv0)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv0)), (Permutation (n0 :: bl) (gv0 ++ bl)), (Permutation (n0 :: bl) (gv0 ++ l)), (Permutation (n0 :: bl) (gv0 ++ gv0)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv0)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv0)), (Permutation (n0 :: l) (y :: bl)), (Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv0)), (Permutation (n0 :: l) (selection_sort bl))
(Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv0 n0)), (Permutation (n0 :: l) (selsort gv0 n1))
(Permutation (n0 :: l) (selsort gv0 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv0)), (Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv0)), (Permutation (n0 :: l) (gv0 ++ bl)), (Permutation (n0 :: l) (gv0 ++ l)), (Permutation (n0 :: l) (gv0 ++ gv0))
(Permutation (n0 :: l) []), (Permutation (n0 :: gv0) bl), (Permutation (n0 :: gv0) l), (Permutation (n0 :: gv0) gv0), (Permutation (n0 :: gv0) (n0 :: bl)), (Permutation (n0 :: gv0) (n0 :: l)), (Permutation (n0 :: gv0) (n1 :: bl)), (Permutation (n0 :: gv0) (n1 :: l)), (Permutation (n0 :: gv0) (n1 :: gv0)), (Permutation (n0 :: gv0) (y :: bl))
(Permutation (n0 :: gv0) (y :: l)), (Permutation (n0 :: gv0) (y :: gv0)), (Permutation (n0 :: gv0) (selection_sort bl)), (Permutation (n0 :: gv0) (selection_sort l)), (Permutation (n0 :: gv0) (selection_sort gv0)), (Permutation (n0 :: gv0) (selsort bl n0)), (Permutation (n0 :: gv0) (selsort bl n1)), (Permutation (n0 :: gv0) (selsort bl y)), (Permutation (n0 :: gv0) (selsort l n0)), (Permutation (n0 :: gv0) (selsort l n1))
(Permutation (n0 :: gv0) (selsort l y)), (Permutation (n0 :: gv0) (selsort gv0 n0)), (Permutation (n0 :: gv0) (selsort gv0 n1)), (Permutation (n0 :: gv0) (selsort gv0 y)), (Permutation (n0 :: gv0) (bl ++ bl)), (Permutation (n0 :: gv0) (bl ++ l)), (Permutation (n0 :: gv0) (bl ++ gv0)), (Permutation (n0 :: gv0) (l ++ bl)), (Permutation (n0 :: gv0) (l ++ l)), (Permutation (n0 :: gv0) (l ++ gv0))
(Permutation (n0 :: gv0) (gv0 ++ bl)), (Permutation (n0 :: gv0) (gv0 ++ l)), (Permutation (n0 :: gv0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv0), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv0))
(Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv0)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv0)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv0)), (Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl n1))
(Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv0 n0)), (Permutation (n1 :: bl) (selsort gv0 n1)), (Permutation (n1 :: bl) (selsort gv0 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv0))
(Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv0)), (Permutation (n1 :: bl) (gv0 ++ bl)), (Permutation (n1 :: bl) (gv0 ++ l)), (Permutation (n1 :: bl) (gv0 ++ gv0)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv0)
(Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv0)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv0)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv0)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l))
(Permutation (n1 :: l) (selection_sort gv0)), (Permutation (n1 :: l) (selsort bl n0)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv0 n0)), (Permutation (n1 :: l) (selsort gv0 n1)), (Permutation (n1 :: l) (selsort gv0 y))
(Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv0)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv0)), (Permutation (n1 :: l) (gv0 ++ bl)), (Permutation (n1 :: l) (gv0 ++ l)), (Permutation (n1 :: l) (gv0 ++ gv0)), (Permutation (n1 :: l) [])
(Permutation (n1 :: gv0) bl), (Permutation (n1 :: gv0) l), (Permutation (n1 :: gv0) gv0), (Permutation (n1 :: gv0) (n0 :: bl)), (Permutation (n1 :: gv0) (n0 :: l)), (Permutation (n1 :: gv0) (n0 :: gv0)), (Permutation (n1 :: gv0) (n1 :: bl)), (Permutation (n1 :: gv0) (n1 :: l)), (Permutation (n1 :: gv0) (y :: bl)), (Permutation (n1 :: gv0) (y :: l))
(Permutation (n1 :: gv0) (y :: gv0)), (Permutation (n1 :: gv0) (selection_sort bl)), (Permutation (n1 :: gv0) (selection_sort l)), (Permutation (n1 :: gv0) (selection_sort gv0)), (Permutation (n1 :: gv0) (selsort bl n0)), (Permutation (n1 :: gv0) (selsort bl n1)), (Permutation (n1 :: gv0) (selsort bl y)), (Permutation (n1 :: gv0) (selsort l n0)), (Permutation (n1 :: gv0) (selsort l n1)), (Permutation (n1 :: gv0) (selsort l y))
(Permutation (n1 :: gv0) (selsort gv0 n0)), (Permutation (n1 :: gv0) (selsort gv0 n1)), (Permutation (n1 :: gv0) (selsort gv0 y)), (Permutation (n1 :: gv0) (bl ++ bl)), (Permutation (n1 :: gv0) (bl ++ l)), (Permutation (n1 :: gv0) (bl ++ gv0)), (Permutation (n1 :: gv0) (l ++ bl)), (Permutation (n1 :: gv0) (l ++ l)), (Permutation (n1 :: gv0) (l ++ gv0)), (Permutation (n1 :: gv0) (gv0 ++ bl))
(Permutation (n1 :: gv0) (gv0 ++ l)), (Permutation (n1 :: gv0) (gv0 ++ gv0)), (Permutation (n1 :: gv0) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv0), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv0)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv0)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv0)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv0)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl n1)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv0 n0)), (Permutation (y :: bl) (selsort gv0 n1)), (Permutation (y :: bl) (selsort gv0 y)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv0)), (Permutation (y :: bl) (l ++ bl))
(Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv0)), (Permutation (y :: bl) (gv0 ++ bl)), (Permutation (y :: bl) (gv0 ++ l)), (Permutation (y :: bl) (gv0 ++ gv0)), (Permutation (y :: bl) []), (Permutation (y :: l) bl), (Permutation (y :: l) l), (Permutation (y :: l) gv0), (Permutation (y :: l) (n0 :: bl))
(Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv0)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l)), (Permutation (y :: l) (n1 :: gv0)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv0)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv0))
(Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y)), (Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv0 n0)), (Permutation (y :: l) (selsort gv0 n1)), (Permutation (y :: l) (selsort gv0 y)), (Permutation (y :: l) (bl ++ bl))
(Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (bl ++ gv0)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv0)), (Permutation (y :: l) (gv0 ++ bl)), (Permutation (y :: l) (gv0 ++ l)), (Permutation (y :: l) (gv0 ++ gv0)), (Permutation (y :: l) []), (Permutation (y :: gv0) bl)
(Permutation (y :: gv0) l), (Permutation (y :: gv0) gv0), (Permutation (y :: gv0) (n0 :: bl)), (Permutation (y :: gv0) (n0 :: l)), (Permutation (y :: gv0) (n0 :: gv0)), (Permutation (y :: gv0) (n1 :: bl)), (Permutation (y :: gv0) (n1 :: l)), (Permutation (y :: gv0) (n1 :: gv0)), (Permutation (y :: gv0) (y :: bl)), (Permutation (y :: gv0) (y :: l))
(Permutation (y :: gv0) (selection_sort bl)), (Permutation (y :: gv0) (selection_sort l)), (Permutation (y :: gv0) (selection_sort gv0)), (Permutation (y :: gv0) (selsort bl n0)), (Permutation (y :: gv0) (selsort bl n1)), (Permutation (y :: gv0) (selsort bl y)), (Permutation (y :: gv0) (selsort l n0)), (Permutation (y :: gv0) (selsort l n1)), (Permutation (y :: gv0) (selsort l y)), (Permutation (y :: gv0) (selsort gv0 n0))
(Permutation (y :: gv0) (selsort gv0 n1)), (Permutation (y :: gv0) (selsort gv0 y)), (Permutation (y :: gv0) (bl ++ bl)), (Permutation (y :: gv0) (bl ++ l)), (Permutation (y :: gv0) (bl ++ gv0)), (Permutation (y :: gv0) (l ++ bl)), (Permutation (y :: gv0) (l ++ l)), (Permutation (y :: gv0) (l ++ gv0)), (Permutation (y :: gv0) (gv0 ++ bl)), (Permutation (y :: gv0) (gv0 ++ l))
(Permutation (y :: gv0) (gv0 ++ gv0)), (Permutation (y :: gv0) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv0), (Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv0)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l))
(Permutation (selection_sort bl) (n1 :: gv0)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv0)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv0)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv0 n0)), (Permutation (selection_sort bl) (selsort gv0 n1)), (Permutation (selection_sort bl) (selsort gv0 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv0)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (l ++ l))
(Permutation (selection_sort bl) (l ++ gv0)), (Permutation (selection_sort bl) (gv0 ++ bl)), (Permutation (selection_sort bl) (gv0 ++ l)), (Permutation (selection_sort bl) (gv0 ++ gv0)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv0), (Permutation (selection_sort l) (n0 :: bl)), (Permutation (selection_sort l) (n0 :: l))
(Permutation (selection_sort l) (n0 :: gv0)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv0)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: gv0)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv0)), (Permutation (selection_sort l) (selsort bl n0))
(Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv0 n0)), (Permutation (selection_sort l) (selsort gv0 n1)), (Permutation (selection_sort l) (selsort gv0 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l))
(Permutation (selection_sort l) (bl ++ gv0)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ gv0)), (Permutation (selection_sort l) (gv0 ++ bl)), (Permutation (selection_sort l) (gv0 ++ l)), (Permutation (selection_sort l) (gv0 ++ gv0)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv0) bl), (Permutation (selection_sort gv0) l)
(Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (n0 :: bl)), (Permutation (selection_sort gv0) (n0 :: l)), (Permutation (selection_sort gv0) (n0 :: gv0)), (Permutation (selection_sort gv0) (n1 :: bl)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: gv0)), (Permutation (selection_sort gv0) (y :: bl)), (Permutation (selection_sort gv0) (y :: l)), (Permutation (selection_sort gv0) (y :: gv0))
(Permutation (selection_sort gv0) (selection_sort bl)), (Permutation (selection_sort gv0) (selection_sort l)), (Permutation (selection_sort gv0) (selsort bl n0)), (Permutation (selection_sort gv0) (selsort bl n1)), (Permutation (selection_sort gv0) (selsort bl y)), (Permutation (selection_sort gv0) (selsort l n0)), (Permutation (selection_sort gv0) (selsort l n1)), (Permutation (selection_sort gv0) (selsort l y)), (Permutation (selection_sort gv0) (selsort gv0 n0)), (Permutation (selection_sort gv0) (selsort gv0 n1))
(Permutation (selection_sort gv0) (selsort gv0 y)), (Permutation (selection_sort gv0) (bl ++ bl)), (Permutation (selection_sort gv0) (bl ++ l)), (Permutation (selection_sort gv0) (bl ++ gv0)), (Permutation (selection_sort gv0) (l ++ bl)), (Permutation (selection_sort gv0) (l ++ l)), (Permutation (selection_sort gv0) (l ++ gv0)), (Permutation (selection_sort gv0) (gv0 ++ bl)), (Permutation (selection_sort gv0) (gv0 ++ l)), (Permutation (selection_sort gv0) (gv0 ++ gv0))
(Permutation (selection_sort gv0) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv0), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv0)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv0))
(Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv0)), (Permutation (selsort bl n0) (selection_sort bl)), (Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv0)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l n1))
(Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv0 n0)), (Permutation (selsort bl n0) (selsort gv0 n1)), (Permutation (selsort bl n0) (selsort gv0 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv0)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv0))
(Permutation (selsort bl n0) (gv0 ++ bl)), (Permutation (selsort bl n0) (gv0 ++ l)), (Permutation (selsort bl n0) (gv0 ++ gv0)), (Permutation (selsort bl n0) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv0), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv0))
(Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv0)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv0)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv0)), (Permutation (selsort bl n1) (selsort bl n0))
(Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv0 n0)), (Permutation (selsort bl n1) (selsort gv0 n1)), (Permutation (selsort bl n1) (selsort gv0 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv0))
(Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv0)), (Permutation (selsort bl n1) (gv0 ++ bl)), (Permutation (selsort bl n1) (gv0 ++ l)), (Permutation (selsort bl n1) (gv0 ++ gv0)), (Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv0)
(Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv0)), (Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv0)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv0)), (Permutation (selsort bl y) (selection_sort bl))
(Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv0)), (Permutation (selsort bl y) (selsort bl n0)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv0 n0)), (Permutation (selsort bl y) (selsort gv0 n1)), (Permutation (selsort bl y) (selsort gv0 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv0)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv0)), (Permutation (selsort bl y) (gv0 ++ bl)), (Permutation (selsort bl y) (gv0 ++ l)), (Permutation (selsort bl y) (gv0 ++ gv0)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv0), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv0)), (Permutation (selsort l n0) (n1 :: bl)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv0)), (Permutation (selsort l n0) (y :: bl))
(Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv0)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv0)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y))
(Permutation (selsort l n0) (selsort gv0 n0)), (Permutation (selsort l n0) (selsort gv0 n1)), (Permutation (selsort l n0) (selsort gv0 y)), (Permutation (selsort l n0) (bl ++ bl)), (Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv0)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv0)), (Permutation (selsort l n0) (gv0 ++ bl))
(Permutation (selsort l n0) (gv0 ++ l)), (Permutation (selsort l n0) (gv0 ++ gv0)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l), (Permutation (selsort l n1) gv0), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv0)), (Permutation (selsort l n1) (n1 :: bl))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv0)), (Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv0)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv0)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl n1))
(Permutation (selsort l n1) (selsort bl y)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv0 n0)), (Permutation (selsort l n1) (selsort gv0 n1)), (Permutation (selsort l n1) (selsort gv0 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv0)), (Permutation (selsort l n1) (l ++ bl))
(Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv0)), (Permutation (selsort l n1) (gv0 ++ bl)), (Permutation (selsort l n1) (gv0 ++ l)), (Permutation (selsort l n1) (gv0 ++ gv0)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv0), (Permutation (selsort l y) (n0 :: bl))
(Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv0)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv0)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv0)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selection_sort gv0)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv0 n0)), (Permutation (selsort l y) (selsort gv0 n1)), (Permutation (selsort l y) (selsort gv0 y)), (Permutation (selsort l y) (bl ++ bl))
(Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv0)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv0)), (Permutation (selsort l y) (gv0 ++ bl)), (Permutation (selsort l y) (gv0 ++ l)), (Permutation (selsort l y) (gv0 ++ gv0)), (Permutation (selsort l y) []), (Permutation (selsort gv0 n0) bl)
(Permutation (selsort gv0 n0) l), (Permutation (selsort gv0 n0) gv0), (Permutation (selsort gv0 n0) (n0 :: bl)), (Permutation (selsort gv0 n0) (n0 :: l)), (Permutation (selsort gv0 n0) (n0 :: gv0)), (Permutation (selsort gv0 n0) (n1 :: bl)), (Permutation (selsort gv0 n0) (n1 :: l)), (Permutation (selsort gv0 n0) (n1 :: gv0)), (Permutation (selsort gv0 n0) (y :: bl)), (Permutation (selsort gv0 n0) (y :: l))
(Permutation (selsort gv0 n0) (y :: gv0)), (Permutation (selsort gv0 n0) (selection_sort bl)), (Permutation (selsort gv0 n0) (selection_sort l)), (Permutation (selsort gv0 n0) (selection_sort gv0)), (Permutation (selsort gv0 n0) (selsort bl n0)), (Permutation (selsort gv0 n0) (selsort bl n1)), (Permutation (selsort gv0 n0) (selsort bl y)), (Permutation (selsort gv0 n0) (selsort l n0)), (Permutation (selsort gv0 n0) (selsort l n1)), (Permutation (selsort gv0 n0) (selsort l y))
(Permutation (selsort gv0 n0) (selsort gv0 n1)), (Permutation (selsort gv0 n0) (selsort gv0 y)), (Permutation (selsort gv0 n0) (bl ++ bl)), (Permutation (selsort gv0 n0) (bl ++ l)), (Permutation (selsort gv0 n0) (bl ++ gv0)), (Permutation (selsort gv0 n0) (l ++ bl)), (Permutation (selsort gv0 n0) (l ++ l)), (Permutation (selsort gv0 n0) (l ++ gv0)), (Permutation (selsort gv0 n0) (gv0 ++ bl)), (Permutation (selsort gv0 n0) (gv0 ++ l))
(Permutation (selsort gv0 n0) (gv0 ++ gv0)), (Permutation (selsort gv0 n0) []), (Permutation (selsort gv0 n1) bl), (Permutation (selsort gv0 n1) l), (Permutation (selsort gv0 n1) gv0), (Permutation (selsort gv0 n1) (n0 :: bl)), (Permutation (selsort gv0 n1) (n0 :: l)), (Permutation (selsort gv0 n1) (n0 :: gv0)), (Permutation (selsort gv0 n1) (n1 :: bl)), (Permutation (selsort gv0 n1) (n1 :: l))
(Permutation (selsort gv0 n1) (n1 :: gv0)), (Permutation (selsort gv0 n1) (y :: bl)), (Permutation (selsort gv0 n1) (y :: l)), (Permutation (selsort gv0 n1) (y :: gv0)), (Permutation (selsort gv0 n1) (selection_sort bl)), (Permutation (selsort gv0 n1) (selection_sort l)), (Permutation (selsort gv0 n1) (selection_sort gv0)), (Permutation (selsort gv0 n1) (selsort bl n0)), (Permutation (selsort gv0 n1) (selsort bl n1)), (Permutation (selsort gv0 n1) (selsort bl y))
(Permutation (selsort gv0 n1) (selsort l n0)), (Permutation (selsort gv0 n1) (selsort l n1)), (Permutation (selsort gv0 n1) (selsort l y)), (Permutation (selsort gv0 n1) (selsort gv0 n0)), (Permutation (selsort gv0 n1) (selsort gv0 y)), (Permutation (selsort gv0 n1) (bl ++ bl)), (Permutation (selsort gv0 n1) (bl ++ l)), (Permutation (selsort gv0 n1) (bl ++ gv0)), (Permutation (selsort gv0 n1) (l ++ bl)), (Permutation (selsort gv0 n1) (l ++ l))
(Permutation (selsort gv0 n1) (l ++ gv0)), (Permutation (selsort gv0 n1) (gv0 ++ bl)), (Permutation (selsort gv0 n1) (gv0 ++ l)), (Permutation (selsort gv0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n1) []), (Permutation (selsort gv0 y) bl), (Permutation (selsort gv0 y) l), (Permutation (selsort gv0 y) gv0), (Permutation (selsort gv0 y) (n0 :: bl)), (Permutation (selsort gv0 y) (n0 :: l))
(Permutation (selsort gv0 y) (n0 :: gv0)), (Permutation (selsort gv0 y) (n1 :: bl)), (Permutation (selsort gv0 y) (n1 :: l)), (Permutation (selsort gv0 y) (n1 :: gv0)), (Permutation (selsort gv0 y) (y :: bl)), (Permutation (selsort gv0 y) (y :: l)), (Permutation (selsort gv0 y) (y :: gv0)), (Permutation (selsort gv0 y) (selection_sort bl)), (Permutation (selsort gv0 y) (selection_sort l)), (Permutation (selsort gv0 y) (selection_sort gv0))
(Permutation (selsort gv0 y) (selsort bl n0)), (Permutation (selsort gv0 y) (selsort bl n1)), (Permutation (selsort gv0 y) (selsort bl y)), (Permutation (selsort gv0 y) (selsort l n0)), (Permutation (selsort gv0 y) (selsort l n1)), (Permutation (selsort gv0 y) (selsort l y)), (Permutation (selsort gv0 y) (selsort gv0 n0)), (Permutation (selsort gv0 y) (selsort gv0 n1)), (Permutation (selsort gv0 y) (bl ++ bl)), (Permutation (selsort gv0 y) (bl ++ l))
(Permutation (selsort gv0 y) (bl ++ gv0)), (Permutation (selsort gv0 y) (l ++ bl)), (Permutation (selsort gv0 y) (l ++ l)), (Permutation (selsort gv0 y) (l ++ gv0)), (Permutation (selsort gv0 y) (gv0 ++ bl)), (Permutation (selsort gv0 y) (gv0 ++ l)), (Permutation (selsort gv0 y) (gv0 ++ gv0)), (Permutation (selsort gv0 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l)
(Permutation (bl ++ bl) gv0), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv0)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv0)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv0))
(Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv0)), (Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv0 n0))
(Permutation (bl ++ bl) (selsort gv0 n1)), (Permutation (bl ++ bl) (selsort gv0 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv0)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv0)), (Permutation (bl ++ bl) (gv0 ++ bl)), (Permutation (bl ++ bl) (gv0 ++ l)), (Permutation (bl ++ bl) (gv0 ++ gv0))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv0), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv0)), (Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv0))
(Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv0)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv0)), (Permutation (bl ++ l) (selsort bl n0)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0))
(Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv0 n0)), (Permutation (bl ++ l) (selsort gv0 n1)), (Permutation (bl ++ l) (selsort gv0 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv0)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv0))
(Permutation (bl ++ l) (gv0 ++ bl)), (Permutation (bl ++ l) (gv0 ++ l)), (Permutation (bl ++ l) (gv0 ++ gv0)), (Permutation (bl ++ l) []), (Permutation (bl ++ gv0) bl), (Permutation (bl ++ gv0) l), (Permutation (bl ++ gv0) gv0), (Permutation (bl ++ gv0) (n0 :: bl)), (Permutation (bl ++ gv0) (n0 :: l)), (Permutation (bl ++ gv0) (n0 :: gv0))
(Permutation (bl ++ gv0) (n1 :: bl)), (Permutation (bl ++ gv0) (n1 :: l)), (Permutation (bl ++ gv0) (n1 :: gv0)), (Permutation (bl ++ gv0) (y :: bl)), (Permutation (bl ++ gv0) (y :: l)), (Permutation (bl ++ gv0) (y :: gv0)), (Permutation (bl ++ gv0) (selection_sort bl)), (Permutation (bl ++ gv0) (selection_sort l)), (Permutation (bl ++ gv0) (selection_sort gv0)), (Permutation (bl ++ gv0) (selsort bl n0))
(Permutation (bl ++ gv0) (selsort bl n1)), (Permutation (bl ++ gv0) (selsort bl y)), (Permutation (bl ++ gv0) (selsort l n0)), (Permutation (bl ++ gv0) (selsort l n1)), (Permutation (bl ++ gv0) (selsort l y)), (Permutation (bl ++ gv0) (selsort gv0 n0)), (Permutation (bl ++ gv0) (selsort gv0 n1)), (Permutation (bl ++ gv0) (selsort gv0 y)), (Permutation (bl ++ gv0) (bl ++ bl)), (Permutation (bl ++ gv0) (bl ++ l))
(Permutation (bl ++ gv0) (l ++ bl)), (Permutation (bl ++ gv0) (l ++ l)), (Permutation (bl ++ gv0) (l ++ gv0)), (Permutation (bl ++ gv0) (gv0 ++ bl)), (Permutation (bl ++ gv0) (gv0 ++ l)), (Permutation (bl ++ gv0) (gv0 ++ gv0)), (Permutation (bl ++ gv0) []), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) l), (Permutation (l ++ bl) gv0)
(Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv0)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l)), (Permutation (l ++ bl) (n1 :: gv0)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv0)), (Permutation (l ++ bl) (selection_sort bl))
(Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv0)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl n1)), (Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv0 n0)), (Permutation (l ++ bl) (selsort gv0 n1))
(Permutation (l ++ bl) (selsort gv0 y)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv0)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv0)), (Permutation (l ++ bl) (gv0 ++ bl)), (Permutation (l ++ bl) (gv0 ++ l)), (Permutation (l ++ bl) (gv0 ++ gv0)), (Permutation (l ++ bl) [])
(Permutation (l ++ l) bl), (Permutation (l ++ l) l), (Permutation (l ++ l) gv0), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv0)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv0)), (Permutation (l ++ l) (y :: bl))
(Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv0)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv0)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv0 n0)), (Permutation (l ++ l) (selsort gv0 n1)), (Permutation (l ++ l) (selsort gv0 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (bl ++ gv0)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv0)), (Permutation (l ++ l) (gv0 ++ bl))
(Permutation (l ++ l) (gv0 ++ l)), (Permutation (l ++ l) (gv0 ++ gv0)), (Permutation (l ++ l) []), (Permutation (l ++ gv0) bl), (Permutation (l ++ gv0) l), (Permutation (l ++ gv0) gv0), (Permutation (l ++ gv0) (n0 :: bl)), (Permutation (l ++ gv0) (n0 :: l)), (Permutation (l ++ gv0) (n0 :: gv0)), (Permutation (l ++ gv0) (n1 :: bl))
(Permutation (l ++ gv0) (n1 :: l)), (Permutation (l ++ gv0) (n1 :: gv0)), (Permutation (l ++ gv0) (y :: bl)), (Permutation (l ++ gv0) (y :: l)), (Permutation (l ++ gv0) (y :: gv0)), (Permutation (l ++ gv0) (selection_sort bl)), (Permutation (l ++ gv0) (selection_sort l)), (Permutation (l ++ gv0) (selection_sort gv0)), (Permutation (l ++ gv0) (selsort bl n0)), (Permutation (l ++ gv0) (selsort bl n1))
(Permutation (l ++ gv0) (selsort bl y)), (Permutation (l ++ gv0) (selsort l n0)), (Permutation (l ++ gv0) (selsort l n1)), (Permutation (l ++ gv0) (selsort l y)), (Permutation (l ++ gv0) (selsort gv0 n0)), (Permutation (l ++ gv0) (selsort gv0 n1)), (Permutation (l ++ gv0) (selsort gv0 y)), (Permutation (l ++ gv0) (bl ++ bl)), (Permutation (l ++ gv0) (bl ++ l)), (Permutation (l ++ gv0) (bl ++ gv0))
(Permutation (l ++ gv0) (l ++ bl)), (Permutation (l ++ gv0) (l ++ l)), (Permutation (l ++ gv0) (gv0 ++ bl)), (Permutation (l ++ gv0) (gv0 ++ l)), (Permutation (l ++ gv0) (gv0 ++ gv0)), (Permutation (l ++ gv0) []), (Permutation (gv0 ++ bl) bl), (Permutation (gv0 ++ bl) l), (Permutation (gv0 ++ bl) gv0), (Permutation (gv0 ++ bl) (n0 :: bl))
(Permutation (gv0 ++ bl) (n0 :: l)), (Permutation (gv0 ++ bl) (n0 :: gv0)), (Permutation (gv0 ++ bl) (n1 :: bl)), (Permutation (gv0 ++ bl) (n1 :: l)), (Permutation (gv0 ++ bl) (n1 :: gv0)), (Permutation (gv0 ++ bl) (y :: bl)), (Permutation (gv0 ++ bl) (y :: l)), (Permutation (gv0 ++ bl) (y :: gv0)), (Permutation (gv0 ++ bl) (selection_sort bl)), (Permutation (gv0 ++ bl) (selection_sort l))
(Permutation (gv0 ++ bl) (selection_sort gv0)), (Permutation (gv0 ++ bl) (selsort bl n0)), (Permutation (gv0 ++ bl) (selsort bl n1)), (Permutation (gv0 ++ bl) (selsort bl y)), (Permutation (gv0 ++ bl) (selsort l n0)), (Permutation (gv0 ++ bl) (selsort l n1)), (Permutation (gv0 ++ bl) (selsort l y)), (Permutation (gv0 ++ bl) (selsort gv0 n0)), (Permutation (gv0 ++ bl) (selsort gv0 n1)), (Permutation (gv0 ++ bl) (selsort gv0 y))
(Permutation (gv0 ++ bl) (bl ++ bl)), (Permutation (gv0 ++ bl) (bl ++ l)), (Permutation (gv0 ++ bl) (bl ++ gv0)), (Permutation (gv0 ++ bl) (l ++ bl)), (Permutation (gv0 ++ bl) (l ++ l)), (Permutation (gv0 ++ bl) (l ++ gv0)), (Permutation (gv0 ++ bl) (gv0 ++ l)), (Permutation (gv0 ++ bl) (gv0 ++ gv0)), (Permutation (gv0 ++ bl) []), (Permutation (gv0 ++ l) bl)
(Permutation (gv0 ++ l) l), (Permutation (gv0 ++ l) gv0), (Permutation (gv0 ++ l) (n0 :: bl)), (Permutation (gv0 ++ l) (n0 :: l)), (Permutation (gv0 ++ l) (n0 :: gv0)), (Permutation (gv0 ++ l) (n1 :: bl)), (Permutation (gv0 ++ l) (n1 :: l)), (Permutation (gv0 ++ l) (n1 :: gv0)), (Permutation (gv0 ++ l) (y :: bl)), (Permutation (gv0 ++ l) (y :: l))
(Permutation (gv0 ++ l) (y :: gv0)), (Permutation (gv0 ++ l) (selection_sort bl)), (Permutation (gv0 ++ l) (selection_sort l)), (Permutation (gv0 ++ l) (selection_sort gv0)), (Permutation (gv0 ++ l) (selsort bl n0)), (Permutation (gv0 ++ l) (selsort bl n1)), (Permutation (gv0 ++ l) (selsort bl y)), (Permutation (gv0 ++ l) (selsort l n0)), (Permutation (gv0 ++ l) (selsort l n1)), (Permutation (gv0 ++ l) (selsort l y))
(Permutation (gv0 ++ l) (selsort gv0 n0)), (Permutation (gv0 ++ l) (selsort gv0 n1)), (Permutation (gv0 ++ l) (selsort gv0 y)), (Permutation (gv0 ++ l) (bl ++ bl)), (Permutation (gv0 ++ l) (bl ++ l)), (Permutation (gv0 ++ l) (bl ++ gv0)), (Permutation (gv0 ++ l) (l ++ bl)), (Permutation (gv0 ++ l) (l ++ l)), (Permutation (gv0 ++ l) (l ++ gv0)), (Permutation (gv0 ++ l) (gv0 ++ bl))
(Permutation (gv0 ++ l) (gv0 ++ gv0)), (Permutation (gv0 ++ l) []), (Permutation (gv0 ++ gv0) bl), (Permutation (gv0 ++ gv0) l), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (n0 :: bl)), (Permutation (gv0 ++ gv0) (n0 :: l)), (Permutation (gv0 ++ gv0) (n0 :: gv0)), (Permutation (gv0 ++ gv0) (n1 :: bl)), (Permutation (gv0 ++ gv0) (n1 :: l))
(Permutation (gv0 ++ gv0) (n1 :: gv0)), (Permutation (gv0 ++ gv0) (y :: bl)), (Permutation (gv0 ++ gv0) (y :: l)), (Permutation (gv0 ++ gv0) (y :: gv0)), (Permutation (gv0 ++ gv0) (selection_sort bl)), (Permutation (gv0 ++ gv0) (selection_sort l)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (selsort bl n0)), (Permutation (gv0 ++ gv0) (selsort bl n1)), (Permutation (gv0 ++ gv0) (selsort bl y))
(Permutation (gv0 ++ gv0) (selsort l n0)), (Permutation (gv0 ++ gv0) (selsort l n1)), (Permutation (gv0 ++ gv0) (selsort l y)), (Permutation (gv0 ++ gv0) (selsort gv0 n0)), (Permutation (gv0 ++ gv0) (selsort gv0 n1)), (Permutation (gv0 ++ gv0) (selsort gv0 y)), (Permutation (gv0 ++ gv0) (bl ++ bl)), (Permutation (gv0 ++ gv0) (bl ++ l)), (Permutation (gv0 ++ gv0) (bl ++ gv0)), (Permutation (gv0 ++ gv0) (l ++ bl))
(Permutation (gv0 ++ gv0) (l ++ l)), (Permutation (gv0 ++ gv0) (l ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ bl)), (Permutation (gv0 ++ gv0) (gv0 ++ l)), (Permutation (gv0 ++ gv0) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv0), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l))
(Permutation [] (n0 :: gv0)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv0)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv0)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort gv0))
(Permutation [] (selsort bl n0)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv0 n0)), (Permutation [] (selsort gv0 n1)), (Permutation [] (selsort gv0 y)), (Permutation [] (bl ++ bl))
(Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv0)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv0)), (Permutation [] (gv0 ++ bl)), (Permutation [] (gv0 ++ l)), (Permutation [] (gv0 ++ gv0)), (In n0 (n0 :: bl)), (In n0 (n0 :: l))
(In n0 (n0 :: gv0)), (In n0 (n1 :: bl)), (In n0 (n1 :: l)), (In n0 (n1 :: gv0)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv0)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv0))
(In n0 (selsort bl n0)), (In n0 (selsort bl n1)), (In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv0 n0)), (In n0 (selsort gv0 n1)), (In n0 (selsort gv0 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv0)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv0)), (In n0 (gv0 ++ bl)), (In n0 (gv0 ++ l)), (In n0 (gv0 ++ gv0)), (In n1 (n0 :: bl)), (In n1 (n0 :: l))
(In n1 (n0 :: gv0)), (In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv0)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv0)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv0))
(In n1 (selsort bl n0)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv0 n0)), (In n1 (selsort gv0 n1)), (In n1 (selsort gv0 y)), (In n1 (bl ++ bl))
(In n1 (bl ++ l)), (In n1 (bl ++ gv0)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv0)), (In n1 (gv0 ++ bl)), (In n1 (gv0 ++ l)), (In n1 (gv0 ++ gv0)), (In y (n0 :: bl)), (In y (n0 :: l))
(In y (n0 :: gv0)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv0)), (In y (y :: bl)), (In y (y :: l)), (In y (y :: gv0)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv0))
(In y (selsort bl n0)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv0 n0)), (In y (selsort gv0 n1)), (In y (selsort gv0 y)), (In y (bl ++ bl))
(In y (bl ++ l)), (In y (bl ++ gv0)), (In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv0)), (In y (gv0 ++ bl)), (In y (gv0 ++ l)), (In y (gv0 ++ gv0)), (In (length bl) bl), (In (length bl) l)
(In (length bl) gv0), (In (length bl) (n0 :: bl)), (In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv0)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv0)), (In (length bl) (y :: bl)), (In (length bl) (y :: l)), (In (length bl) (y :: gv0))
(In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv0)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv0 n0))
(In (length bl) (selsort gv0 n1)), (In (length bl) (selsort gv0 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv0)), (In (length bl) (l ++ bl)), (In (length bl) (l ++ l)), (In (length bl) (l ++ gv0)), (In (length bl) (gv0 ++ bl)), (In (length bl) (gv0 ++ l))
(In (length bl) (gv0 ++ gv0)), (In (length l) bl), (In (length l) l), (In (length l) gv0), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l)), (In (length l) (n0 :: gv0)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv0))
(In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv0)), (In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv0)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0))
(In (length l) (selsort l n1)), (In (length l) (selsort l y)), (In (length l) (selsort gv0 n0)), (In (length l) (selsort gv0 n1)), (In (length l) (selsort gv0 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv0)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv0)), (In (length l) (gv0 ++ bl)), (In (length l) (gv0 ++ l)), (In (length l) (gv0 ++ gv0)), (In (length gv0) bl), (In (length gv0) l), (In (length gv0) gv0), (In (length gv0) (n0 :: bl)), (In (length gv0) (n0 :: l)), (In (length gv0) (n0 :: gv0))
(In (length gv0) (n1 :: bl)), (In (length gv0) (n1 :: l)), (In (length gv0) (n1 :: gv0)), (In (length gv0) (y :: bl)), (In (length gv0) (y :: l)), (In (length gv0) (y :: gv0)), (In (length gv0) (selection_sort bl)), (In (length gv0) (selection_sort l)), (In (length gv0) (selection_sort gv0)), (In (length gv0) (selsort bl n0))
(In (length gv0) (selsort bl n1)), (In (length gv0) (selsort bl y)), (In (length gv0) (selsort l n0)), (In (length gv0) (selsort l n1)), (In (length gv0) (selsort l y)), (In (length gv0) (selsort gv0 n0)), (In (length gv0) (selsort gv0 n1)), (In (length gv0) (selsort gv0 y)), (In (length gv0) (bl ++ bl)), (In (length gv0) (bl ++ l))
(In (length gv0) (bl ++ gv0)), (In (length gv0) (l ++ bl)), (In (length gv0) (l ++ l)), (In (length gv0) (l ++ gv0)), (In (length gv0) (gv0 ++ bl)), (In (length gv0) (gv0 ++ l)), (In (length gv0) (gv0 ++ gv0)), (n0 < length bl), (n0 < length l), (n0 < length gv0)
(n1 < length bl), (n1 < length l), (n1 < length gv0), (y < length bl), (y < length l), (y < length gv0), (length bl < n0), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv0), (length l < n0), (length l < n1), (length l < y), (length l < length bl), (length l < length gv0), (length gv0 < n0), (length gv0 < n1), (length gv0 < y), (length gv0 < length bl)
(length gv0 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv0), (n1 <= length bl), (n1 <= length l), (n1 <= length gv0), (y <= length bl), (y <= length l), (y <= length gv0)
(length bl <= n0), (length bl <= n1), (length bl <= y), (length bl <= length l), (length bl <= length gv0), (length l <= n0), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv0)
(length gv0 <= n0), (length gv0 <= n1), (length gv0 <= y), (length gv0 <= length bl), (length gv0 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv0), (~ n1 <=* bl), (~ n1 <=* l)
(~ n1 <=* gv0), (~ y <=* bl), (~ y <=* l), (~ y <=* gv0), (~ sorted bl), (~ sorted l), (~ sorted gv0), (~ Permutation bl bl), (~ Permutation bl l), (~ Permutation bl gv0)
(~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv0), (~ Permutation gv0 bl), (~ Permutation gv0 l), (~ Permutation gv0 gv0), (~ In n0 bl), (~ In n0 l), (~ In n0 gv0), (~ In n1 bl)
(~ In n1 l), (~ In n1 gv0), (~ In y bl), (~ In y l), (~ In y gv0), (~ n0 < n0), (~ n0 < n1), (~ n0 < y), (~ n1 < n0), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= n1), (~ n0 <= y), (~ n1 <= n0), (~ n1 <= n1), (~ n1 <= y)
(~ y <= n0), (~ y <= n1), (~ y <= y), (n0 <> n0), (n0 <> n1), (n0 <> y), (n1 <> n0), (n1 <> n1), (n1 <> y), (y <> n0)
(y <> n1), (y <> y), (bl <> bl), (bl <> l), (bl <> gv0), (l <> bl), (l <> l), (l <> gv0), (gv0 <> bl), (gv0 <> l)
(gv0 <> gv0), (None = Some bl), (None = Some l), (None = Some gv0), (n0 :: bl = bl), (n0 :: bl = l), (n0 :: bl = gv0), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv0)
(n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv0 n0), (n0 :: bl = selsort gv0 n1), (n0 :: bl = selsort gv0 y), (n0 :: bl = bl ++ bl)
(n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv0), (n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv0), (n0 :: bl = gv0 ++ bl), (n0 :: bl = gv0 ++ l), (n0 :: bl = gv0 ++ gv0), (n0 :: bl = []), (n0 :: l = bl)
(n0 :: l = l), (n0 :: l = gv0), (n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv0), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv0 n0), (n0 :: l = selsort gv0 n1), (n0 :: l = selsort gv0 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv0), (n0 :: l = l ++ bl), (n0 :: l = l ++ l), (n0 :: l = l ++ gv0)
(n0 :: l = gv0 ++ bl), (n0 :: l = gv0 ++ l), (n0 :: l = gv0 ++ gv0), (n0 :: l = []), (n0 :: gv0 = bl), (n0 :: gv0 = l), (n0 :: gv0 = gv0), (n0 :: gv0 = selection_sort bl), (n0 :: gv0 = selection_sort l), (n0 :: gv0 = selection_sort gv0)
(n0 :: gv0 = selsort bl n0), (n0 :: gv0 = selsort bl n1), (n0 :: gv0 = selsort bl y), (n0 :: gv0 = selsort l n0), (n0 :: gv0 = selsort l n1), (n0 :: gv0 = selsort l y), (n0 :: gv0 = selsort gv0 n0), (n0 :: gv0 = selsort gv0 n1), (n0 :: gv0 = selsort gv0 y), (n0 :: gv0 = bl ++ bl)
(n0 :: gv0 = bl ++ l), (n0 :: gv0 = bl ++ gv0), (n0 :: gv0 = l ++ bl), (n0 :: gv0 = l ++ l), (n0 :: gv0 = l ++ gv0), (n0 :: gv0 = gv0 ++ bl), (n0 :: gv0 = gv0 ++ l), (n0 :: gv0 = gv0 ++ gv0), (n0 :: gv0 = []), (n1 :: bl = bl)
(n1 :: bl = l), (n1 :: bl = gv0), (n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv0), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv0 n0), (n1 :: bl = selsort gv0 n1), (n1 :: bl = selsort gv0 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv0), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l), (n1 :: bl = l ++ gv0)
(n1 :: bl = gv0 ++ bl), (n1 :: bl = gv0 ++ l), (n1 :: bl = gv0 ++ gv0), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv0), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l), (n1 :: l = selection_sort gv0)
(n1 :: l = selsort bl n0), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv0 n0), (n1 :: l = selsort gv0 n1), (n1 :: l = selsort gv0 y), (n1 :: l = bl ++ bl)
(n1 :: l = bl ++ l), (n1 :: l = bl ++ gv0), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv0), (n1 :: l = gv0 ++ bl), (n1 :: l = gv0 ++ l), (n1 :: l = gv0 ++ gv0), (n1 :: l = []), (n1 :: gv0 = bl)
(n1 :: gv0 = l), (n1 :: gv0 = gv0), (n1 :: gv0 = selection_sort bl), (n1 :: gv0 = selection_sort l), (n1 :: gv0 = selection_sort gv0), (n1 :: gv0 = selsort bl n0), (n1 :: gv0 = selsort bl n1), (n1 :: gv0 = selsort bl y), (n1 :: gv0 = selsort l n0), (n1 :: gv0 = selsort l n1)
(n1 :: gv0 = selsort l y), (n1 :: gv0 = selsort gv0 n0), (n1 :: gv0 = selsort gv0 n1), (n1 :: gv0 = selsort gv0 y), (n1 :: gv0 = bl ++ bl), (n1 :: gv0 = bl ++ l), (n1 :: gv0 = bl ++ gv0), (n1 :: gv0 = l ++ bl), (n1 :: gv0 = l ++ l), (n1 :: gv0 = l ++ gv0)
(n1 :: gv0 = gv0 ++ bl), (n1 :: gv0 = gv0 ++ l), (n1 :: gv0 = gv0 ++ gv0), (n1 :: gv0 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv0), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv0)
(y :: bl = selsort bl n0), (y :: bl = selsort bl n1), (y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv0 n0), (y :: bl = selsort gv0 n1), (y :: bl = selsort gv0 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv0), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv0), (y :: bl = gv0 ++ bl), (y :: bl = gv0 ++ l), (y :: bl = gv0 ++ gv0), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv0), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv0), (y :: l = selsort bl n0), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0), (y :: l = selsort l n1)
(y :: l = selsort l y), (y :: l = selsort gv0 n0), (y :: l = selsort gv0 n1), (y :: l = selsort gv0 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv0), (y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv0)
(y :: l = gv0 ++ bl), (y :: l = gv0 ++ l), (y :: l = gv0 ++ gv0), (y :: l = []), (y :: gv0 = bl), (y :: gv0 = l), (y :: gv0 = gv0), (y :: gv0 = selection_sort bl), (y :: gv0 = selection_sort l), (y :: gv0 = selection_sort gv0)
(y :: gv0 = selsort bl n0), (y :: gv0 = selsort bl n1), (y :: gv0 = selsort bl y), (y :: gv0 = selsort l n0), (y :: gv0 = selsort l n1), (y :: gv0 = selsort l y), (y :: gv0 = selsort gv0 n0), (y :: gv0 = selsort gv0 n1), (y :: gv0 = selsort gv0 y), (y :: gv0 = bl ++ bl)
(y :: gv0 = bl ++ l), (y :: gv0 = bl ++ gv0), (y :: gv0 = l ++ bl), (y :: gv0 = l ++ l), (y :: gv0 = l ++ gv0), (y :: gv0 = gv0 ++ bl), (y :: gv0 = gv0 ++ l), (y :: gv0 = gv0 ++ gv0), (y :: gv0 = []), (selection_sort bl = bl)
(selection_sort bl = l), (selection_sort bl = gv0), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = bl ++ gv0), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv0), (selection_sort bl = gv0 ++ bl), (selection_sort bl = gv0 ++ l)
(selection_sort bl = gv0 ++ gv0), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv0), (selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv0), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv0)
(selection_sort l = gv0 ++ bl), (selection_sort l = gv0 ++ l), (selection_sort l = gv0 ++ gv0), (selection_sort gv0 = bl), (selection_sort gv0 = l), (selection_sort gv0 = gv0), (selection_sort gv0 = bl ++ bl), (selection_sort gv0 = bl ++ l), (selection_sort gv0 = bl ++ gv0), (selection_sort gv0 = l ++ bl)
(selection_sort gv0 = l ++ l), (selection_sort gv0 = l ++ gv0), (selection_sort gv0 = gv0 ++ bl), (selection_sort gv0 = gv0 ++ l), (selection_sort gv0 = gv0 ++ gv0), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv0), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l)
(selsort bl n0 = selection_sort gv0), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv0), (selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv0), (selsort bl n0 = gv0 ++ bl), (selsort bl n0 = gv0 ++ l), (selsort bl n0 = gv0 ++ gv0)
(selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv0), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv0), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv0), (selsort bl n1 = l ++ bl)
(selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv0), (selsort bl n1 = gv0 ++ bl), (selsort bl n1 = gv0 ++ l), (selsort bl n1 = gv0 ++ gv0), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv0), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort l)
(selsort bl y = selection_sort gv0), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv0), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv0), (selsort bl y = gv0 ++ bl), (selsort bl y = gv0 ++ l), (selsort bl y = gv0 ++ gv0)
(selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv0), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv0), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv0), (selsort l n0 = l ++ bl)
(selsort l n0 = l ++ l), (selsort l n0 = l ++ gv0), (selsort l n0 = gv0 ++ bl), (selsort l n0 = gv0 ++ l), (selsort l n0 = gv0 ++ gv0), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv0), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l)
(selsort l n1 = selection_sort gv0), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv0), (selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv0), (selsort l n1 = gv0 ++ bl), (selsort l n1 = gv0 ++ l), (selsort l n1 = gv0 ++ gv0)
(selsort l y = bl), (selsort l y = l), (selsort l y = gv0), (selsort l y = selection_sort bl), (selsort l y = selection_sort l), (selsort l y = selection_sort gv0), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv0), (selsort l y = l ++ bl)
(selsort l y = l ++ l), (selsort l y = l ++ gv0), (selsort l y = gv0 ++ bl), (selsort l y = gv0 ++ l), (selsort l y = gv0 ++ gv0), (selsort gv0 n0 = bl), (selsort gv0 n0 = l), (selsort gv0 n0 = gv0), (selsort gv0 n0 = selection_sort bl), (selsort gv0 n0 = selection_sort l)
(selsort gv0 n0 = selection_sort gv0), (selsort gv0 n0 = bl ++ bl), (selsort gv0 n0 = bl ++ l), (selsort gv0 n0 = bl ++ gv0), (selsort gv0 n0 = l ++ bl), (selsort gv0 n0 = l ++ l), (selsort gv0 n0 = l ++ gv0), (selsort gv0 n0 = gv0 ++ bl), (selsort gv0 n0 = gv0 ++ l), (selsort gv0 n0 = gv0 ++ gv0)
(selsort gv0 n1 = bl), (selsort gv0 n1 = l), (selsort gv0 n1 = gv0), (selsort gv0 n1 = selection_sort bl), (selsort gv0 n1 = selection_sort l), (selsort gv0 n1 = selection_sort gv0), (selsort gv0 n1 = bl ++ bl), (selsort gv0 n1 = bl ++ l), (selsort gv0 n1 = bl ++ gv0), (selsort gv0 n1 = l ++ bl)
(selsort gv0 n1 = l ++ l), (selsort gv0 n1 = l ++ gv0), (selsort gv0 n1 = gv0 ++ bl), (selsort gv0 n1 = gv0 ++ l), (selsort gv0 n1 = gv0 ++ gv0), (selsort gv0 y = bl), (selsort gv0 y = l), (selsort gv0 y = gv0), (selsort gv0 y = selection_sort bl), (selsort gv0 y = selection_sort l)
(selsort gv0 y = selection_sort gv0), (selsort gv0 y = bl ++ bl), (selsort gv0 y = bl ++ l), (selsort gv0 y = bl ++ gv0), (selsort gv0 y = l ++ bl), (selsort gv0 y = l ++ l), (selsort gv0 y = l ++ gv0), (selsort gv0 y = gv0 ++ bl), (selsort gv0 y = gv0 ++ l), (selsort gv0 y = gv0 ++ gv0)
(bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv0), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv0), (bl ++ gv0 = bl), (bl ++ gv0 = l), (bl ++ gv0 = gv0), (l ++ bl = bl)
(l ++ bl = l), (l ++ bl = gv0), (l ++ l = bl), (l ++ l = l), (l ++ l = gv0), (l ++ gv0 = bl), (l ++ gv0 = l), (l ++ gv0 = gv0), (gv0 ++ bl = bl), (gv0 ++ bl = l)
(gv0 ++ bl = gv0), (gv0 ++ l = bl), (gv0 ++ l = l), (gv0 ++ l = gv0), (gv0 ++ gv0 = bl), (gv0 ++ gv0 = l), (gv0 ++ gv0 = gv0), ([] = bl), ([] = l), ([] = gv0)
([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv0), ([] = selsort bl n0), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort l y), ([] = selsort gv0 n0)
([] = selsort gv0 n1), ([] = selsort gv0 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv0), ([] = l ++ bl), ([] = l ++ l), ([] = l ++ gv0), ([] = gv0 ++ bl), ([] = gv0 ++ l)
([] = gv0 ++ gv0), (None = Some n0), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl), ((n0, bl) = select n0 l), ((n0, bl) = select n0 gv0), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv0)
((n0, bl) = select y bl), ((n0, bl) = select y l), ((n0, bl) = select y gv0), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv0), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv0), ((n0, l) = select y bl)
((n0, l) = select y l), ((n0, l) = select y gv0), ((n0, gv0) = select n0 bl), ((n0, gv0) = select n0 l), ((n0, gv0) = select n0 gv0), ((n0, gv0) = select n1 bl), ((n0, gv0) = select n1 l), ((n0, gv0) = select n1 gv0), ((n0, gv0) = select y bl), ((n0, gv0) = select y l)
((n0, gv0) = select y gv0), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv0), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv0), ((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv0)
((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv0), ((n1, l) = select n1 bl), ((n1, l) = select n1 l), ((n1, l) = select n1 gv0), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv0), ((n1, gv0) = select n0 bl)
((n1, gv0) = select n0 l), ((n1, gv0) = select n0 gv0), ((n1, gv0) = select n1 bl), ((n1, gv0) = select n1 l), ((n1, gv0) = select n1 gv0), ((n1, gv0) = select y bl), ((n1, gv0) = select y l), ((n1, gv0) = select y gv0), ((y, bl) = select n0 bl), ((y, bl) = select n0 l)
((y, bl) = select n0 gv0), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv0), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv0), ((y, l) = select n0 bl), ((y, l) = select n0 l), ((y, l) = select n0 gv0)
((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv0), ((y, l) = select y bl), ((y, l) = select y l), ((y, l) = select y gv0), ((y, gv0) = select n0 bl), ((y, gv0) = select n0 l), ((y, gv0) = select n0 gv0), ((y, gv0) = select n1 bl)
((y, gv0) = select n1 l), ((y, gv0) = select n1 gv0), ((y, gv0) = select y bl), ((y, gv0) = select y l), ((y, gv0) = select y gv0), (length bl = n0), (length bl = n1), (length bl = y), (length l = n0), (length l = n1)
(length l = y), (length gv0 = n0), (length gv0 = n1), (length gv0 = y)

Label: 4 (4)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv2), (gv3 <=* bl), (gv3 <=* l), (gv3 <=* gv2), (n1 <=* bl), (n1 <=* l), (n1 <=* gv2), (y <=* bl)
(y <=* l), (y <=* gv2), (sorted bl), (sorted l), (sorted gv2), (Permutation bl bl), (Permutation bl l), (Permutation bl gv2), (Permutation l bl), (Permutation l l)
(Permutation l gv2), (Permutation gv2 bl), (Permutation gv2 l), (Permutation gv2 gv2), (In n0 bl), (In n0 l), (In n0 gv2), (In gv3 bl), (In gv3 l), (In gv3 gv2)
(In n1 bl), (In n1 l), (In n1 gv2), (In y bl), (In y l), (In y gv2), (n0 < n0), (n0 < gv3), (n0 < n1), (n0 < y)
(gv3 < n0), (gv3 < gv3), (gv3 < n1), (gv3 < y), (n1 < n0), (n1 < gv3), (n1 < n1), (n1 < y), (y < n0), (y < gv3)
(y < n1), (y < y), (n0 <= n0), (n0 <= gv3), (n0 <= n1), (n0 <= y), (gv3 <= n0), (gv3 <= gv3), (gv3 <= n1), (gv3 <= y)
(n1 <= n0), (n1 <= gv3), (n1 <= n1), (n1 <= y), (y <= n0), (y <= gv3), (y <= n1), (y <= y), (bl = bl), (bl = l)
(bl = gv2), (l = bl), (l = l), (l = gv2), (gv2 = bl), (gv2 = l), (gv2 = gv2), (n0 = n0), (n0 = gv3), (n0 = n1)
(n0 = y), (gv3 = n0), (gv3 = gv3), (gv3 = n1), (gv3 = y), (n1 = n0), (n1 = gv3), (n1 = n1), (n1 = y), (y = n0)
(y = gv3), (y = n1), (y = y), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv2), (n0 <=* gv3 :: bl), (n0 <=* gv3 :: l), (n0 <=* gv3 :: gv2), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv2), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv2), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv2), (n0 <=* selsort bl n0), (n0 <=* selsort bl gv3)
(n0 <=* selsort bl n1), (n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l gv3), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv2 n0), (n0 <=* selsort gv2 gv3), (n0 <=* selsort gv2 n1), (n0 <=* selsort gv2 y)
(n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv2), (n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv2), (n0 <=* gv2 ++ bl), (n0 <=* gv2 ++ l), (n0 <=* gv2 ++ gv2), (n0 <=* [])
(gv3 <=* n0 :: bl), (gv3 <=* n0 :: l), (gv3 <=* n0 :: gv2), (gv3 <=* gv3 :: bl), (gv3 <=* gv3 :: l), (gv3 <=* gv3 :: gv2), (gv3 <=* n1 :: bl), (gv3 <=* n1 :: l), (gv3 <=* n1 :: gv2), (gv3 <=* y :: bl)
(gv3 <=* y :: l), (gv3 <=* y :: gv2), (gv3 <=* selection_sort bl), (gv3 <=* selection_sort l), (gv3 <=* selection_sort gv2), (gv3 <=* selsort bl n0), (gv3 <=* selsort bl gv3), (gv3 <=* selsort bl n1), (gv3 <=* selsort bl y), (gv3 <=* selsort l n0)
(gv3 <=* selsort l gv3), (gv3 <=* selsort l n1), (gv3 <=* selsort l y), (gv3 <=* selsort gv2 n0), (gv3 <=* selsort gv2 gv3), (gv3 <=* selsort gv2 n1), (gv3 <=* selsort gv2 y), (gv3 <=* bl ++ bl), (gv3 <=* bl ++ l), (gv3 <=* bl ++ gv2)
(gv3 <=* l ++ bl), (gv3 <=* l ++ l), (gv3 <=* l ++ gv2), (gv3 <=* gv2 ++ bl), (gv3 <=* gv2 ++ l), (gv3 <=* gv2 ++ gv2), (gv3 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv2)
(n1 <=* gv3 :: bl), (n1 <=* gv3 :: l), (n1 <=* gv3 :: gv2), (n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv2), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv2), (n1 <=* selection_sort bl)
(n1 <=* selection_sort l), (n1 <=* selection_sort gv2), (n1 <=* selsort bl n0), (n1 <=* selsort bl gv3), (n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l gv3), (n1 <=* selsort l n1), (n1 <=* selsort l y)
(n1 <=* selsort gv2 n0), (n1 <=* selsort gv2 gv3), (n1 <=* selsort gv2 n1), (n1 <=* selsort gv2 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l), (n1 <=* bl ++ gv2), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv2)
(n1 <=* gv2 ++ bl), (n1 <=* gv2 ++ l), (n1 <=* gv2 ++ gv2), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l), (y <=* n0 :: gv2), (y <=* gv3 :: bl), (y <=* gv3 :: l), (y <=* gv3 :: gv2)
(y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv2), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv2), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv2), (y <=* selsort bl n0)
(y <=* selsort bl gv3), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l gv3), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv2 n0), (y <=* selsort gv2 gv3), (y <=* selsort gv2 n1)
(y <=* selsort gv2 y), (y <=* bl ++ bl), (y <=* bl ++ l), (y <=* bl ++ gv2), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv2), (y <=* gv2 ++ bl), (y <=* gv2 ++ l), (y <=* gv2 ++ gv2)
(y <=* []), (length bl <=* bl), (length bl <=* l), (length bl <=* gv2), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv2), (length bl <=* gv3 :: bl), (length bl <=* gv3 :: l), (length bl <=* gv3 :: gv2)
(length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv2), (length bl <=* y :: bl), (length bl <=* y :: l), (length bl <=* y :: gv2), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv2), (length bl <=* selsort bl n0)
(length bl <=* selsort bl gv3), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l gv3), (length bl <=* selsort l n1), (length bl <=* selsort l y), (length bl <=* selsort gv2 n0), (length bl <=* selsort gv2 gv3), (length bl <=* selsort gv2 n1)
(length bl <=* selsort gv2 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv2), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv2), (length bl <=* gv2 ++ bl), (length bl <=* gv2 ++ l), (length bl <=* gv2 ++ gv2)
(length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv2), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv2), (length l <=* gv3 :: bl), (length l <=* gv3 :: l), (length l <=* gv3 :: gv2)
(length l <=* n1 :: bl), (length l <=* n1 :: l), (length l <=* n1 :: gv2), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv2), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv2), (length l <=* selsort bl n0)
(length l <=* selsort bl gv3), (length l <=* selsort bl n1), (length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l gv3), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv2 n0), (length l <=* selsort gv2 gv3), (length l <=* selsort gv2 n1)
(length l <=* selsort gv2 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv2), (length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv2), (length l <=* gv2 ++ bl), (length l <=* gv2 ++ l), (length l <=* gv2 ++ gv2)
(length l <=* []), (length gv2 <=* bl), (length gv2 <=* l), (length gv2 <=* gv2), (length gv2 <=* n0 :: bl), (length gv2 <=* n0 :: l), (length gv2 <=* n0 :: gv2), (length gv2 <=* gv3 :: bl), (length gv2 <=* gv3 :: l), (length gv2 <=* gv3 :: gv2)
(length gv2 <=* n1 :: bl), (length gv2 <=* n1 :: l), (length gv2 <=* n1 :: gv2), (length gv2 <=* y :: bl), (length gv2 <=* y :: l), (length gv2 <=* y :: gv2), (length gv2 <=* selection_sort bl), (length gv2 <=* selection_sort l), (length gv2 <=* selection_sort gv2), (length gv2 <=* selsort bl n0)
(length gv2 <=* selsort bl gv3), (length gv2 <=* selsort bl n1), (length gv2 <=* selsort bl y), (length gv2 <=* selsort l n0), (length gv2 <=* selsort l gv3), (length gv2 <=* selsort l n1), (length gv2 <=* selsort l y), (length gv2 <=* selsort gv2 n0), (length gv2 <=* selsort gv2 gv3), (length gv2 <=* selsort gv2 n1)
(length gv2 <=* selsort gv2 y), (length gv2 <=* bl ++ bl), (length gv2 <=* bl ++ l), (length gv2 <=* bl ++ gv2), (length gv2 <=* l ++ bl), (length gv2 <=* l ++ l), (length gv2 <=* l ++ gv2), (length gv2 <=* gv2 ++ bl), (length gv2 <=* gv2 ++ l), (length gv2 <=* gv2 ++ gv2)
(length gv2 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv2)), (sorted (gv3 :: bl)), (sorted (gv3 :: l)), (sorted (gv3 :: gv2)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv2))
(sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv2)), (sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv2)), (sorted (selsort bl n0)), (sorted (selsort bl gv3)), (sorted (selsort bl n1)), (sorted (selsort bl y))
(sorted (selsort l n0)), (sorted (selsort l gv3)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv2 n0)), (sorted (selsort gv2 gv3)), (sorted (selsort gv2 n1)), (sorted (selsort gv2 y)), (sorted (bl ++ bl)), (sorted (bl ++ l))
(sorted (bl ++ gv2)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv2)), (sorted (gv2 ++ bl)), (sorted (gv2 ++ l)), (sorted (gv2 ++ gv2)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l))
(Permutation bl (n0 :: gv2)), (Permutation bl (gv3 :: bl)), (Permutation bl (gv3 :: l)), (Permutation bl (gv3 :: gv2)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv2)), (Permutation bl (y :: bl)), (Permutation bl (y :: l)), (Permutation bl (y :: gv2))
(Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv2)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl gv3)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l gv3)), (Permutation bl (selsort l n1))
(Permutation bl (selsort l y)), (Permutation bl (selsort gv2 n0)), (Permutation bl (selsort gv2 gv3)), (Permutation bl (selsort gv2 n1)), (Permutation bl (selsort gv2 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv2)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l))
(Permutation bl (l ++ gv2)), (Permutation bl (gv2 ++ bl)), (Permutation bl (gv2 ++ l)), (Permutation bl (gv2 ++ gv2)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv2)), (Permutation l (gv3 :: bl)), (Permutation l (gv3 :: l))
(Permutation l (gv3 :: gv2)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv2)), (Permutation l (y :: bl)), (Permutation l (y :: l)), (Permutation l (y :: gv2)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv2))
(Permutation l (selsort bl n0)), (Permutation l (selsort bl gv3)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l gv3)), (Permutation l (selsort l n1)), (Permutation l (selsort l y)), (Permutation l (selsort gv2 n0)), (Permutation l (selsort gv2 gv3))
(Permutation l (selsort gv2 n1)), (Permutation l (selsort gv2 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv2)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv2)), (Permutation l (gv2 ++ bl)), (Permutation l (gv2 ++ l))
(Permutation l (gv2 ++ gv2)), (Permutation l []), (Permutation gv2 (n0 :: bl)), (Permutation gv2 (n0 :: l)), (Permutation gv2 (n0 :: gv2)), (Permutation gv2 (gv3 :: bl)), (Permutation gv2 (gv3 :: l)), (Permutation gv2 (gv3 :: gv2)), (Permutation gv2 (n1 :: bl)), (Permutation gv2 (n1 :: l))
(Permutation gv2 (n1 :: gv2)), (Permutation gv2 (y :: bl)), (Permutation gv2 (y :: l)), (Permutation gv2 (y :: gv2)), (Permutation gv2 (selection_sort bl)), (Permutation gv2 (selection_sort l)), (Permutation gv2 (selection_sort gv2)), (Permutation gv2 (selsort bl n0)), (Permutation gv2 (selsort bl gv3)), (Permutation gv2 (selsort bl n1))
(Permutation gv2 (selsort bl y)), (Permutation gv2 (selsort l n0)), (Permutation gv2 (selsort l gv3)), (Permutation gv2 (selsort l n1)), (Permutation gv2 (selsort l y)), (Permutation gv2 (selsort gv2 n0)), (Permutation gv2 (selsort gv2 gv3)), (Permutation gv2 (selsort gv2 n1)), (Permutation gv2 (selsort gv2 y)), (Permutation gv2 (bl ++ bl))
(Permutation gv2 (bl ++ l)), (Permutation gv2 (bl ++ gv2)), (Permutation gv2 (l ++ bl)), (Permutation gv2 (l ++ l)), (Permutation gv2 (l ++ gv2)), (Permutation gv2 (gv2 ++ bl)), (Permutation gv2 (gv2 ++ l)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 []), (Permutation (n0 :: bl) bl)
(Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv2), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv2)), (Permutation (n0 :: bl) (gv3 :: bl)), (Permutation (n0 :: bl) (gv3 :: l)), (Permutation (n0 :: bl) (gv3 :: gv2)), (Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv2))
(Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv2)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv2)), (Permutation (n0 :: bl) (selsort bl n0)), (Permutation (n0 :: bl) (selsort bl gv3)), (Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y))
(Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l gv3)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv2 n0)), (Permutation (n0 :: bl) (selsort gv2 gv3)), (Permutation (n0 :: bl) (selsort gv2 n1)), (Permutation (n0 :: bl) (selsort gv2 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv2)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv2)), (Permutation (n0 :: bl) (gv2 ++ bl)), (Permutation (n0 :: bl) (gv2 ++ l)), (Permutation (n0 :: bl) (gv2 ++ gv2)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv2), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv2)), (Permutation (n0 :: l) (gv3 :: bl)), (Permutation (n0 :: l) (gv3 :: l)), (Permutation (n0 :: l) (gv3 :: gv2)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv2)), (Permutation (n0 :: l) (y :: bl))
(Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv2)), (Permutation (n0 :: l) (selection_sort bl)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv2)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl gv3)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0))
(Permutation (n0 :: l) (selsort l gv3)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv2 n0)), (Permutation (n0 :: l) (selsort gv2 gv3)), (Permutation (n0 :: l) (selsort gv2 n1)), (Permutation (n0 :: l) (selsort gv2 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv2))
(Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv2)), (Permutation (n0 :: l) (gv2 ++ bl)), (Permutation (n0 :: l) (gv2 ++ l)), (Permutation (n0 :: l) (gv2 ++ gv2)), (Permutation (n0 :: l) []), (Permutation (n0 :: gv2) bl), (Permutation (n0 :: gv2) l), (Permutation (n0 :: gv2) gv2)
(Permutation (n0 :: gv2) (n0 :: bl)), (Permutation (n0 :: gv2) (n0 :: l)), (Permutation (n0 :: gv2) (gv3 :: bl)), (Permutation (n0 :: gv2) (gv3 :: l)), (Permutation (n0 :: gv2) (gv3 :: gv2)), (Permutation (n0 :: gv2) (n1 :: bl)), (Permutation (n0 :: gv2) (n1 :: l)), (Permutation (n0 :: gv2) (n1 :: gv2)), (Permutation (n0 :: gv2) (y :: bl)), (Permutation (n0 :: gv2) (y :: l))
(Permutation (n0 :: gv2) (y :: gv2)), (Permutation (n0 :: gv2) (selection_sort bl)), (Permutation (n0 :: gv2) (selection_sort l)), (Permutation (n0 :: gv2) (selection_sort gv2)), (Permutation (n0 :: gv2) (selsort bl n0)), (Permutation (n0 :: gv2) (selsort bl gv3)), (Permutation (n0 :: gv2) (selsort bl n1)), (Permutation (n0 :: gv2) (selsort bl y)), (Permutation (n0 :: gv2) (selsort l n0)), (Permutation (n0 :: gv2) (selsort l gv3))
(Permutation (n0 :: gv2) (selsort l n1)), (Permutation (n0 :: gv2) (selsort l y)), (Permutation (n0 :: gv2) (selsort gv2 n0)), (Permutation (n0 :: gv2) (selsort gv2 gv3)), (Permutation (n0 :: gv2) (selsort gv2 n1)), (Permutation (n0 :: gv2) (selsort gv2 y)), (Permutation (n0 :: gv2) (bl ++ bl)), (Permutation (n0 :: gv2) (bl ++ l)), (Permutation (n0 :: gv2) (bl ++ gv2)), (Permutation (n0 :: gv2) (l ++ bl))
(Permutation (n0 :: gv2) (l ++ l)), (Permutation (n0 :: gv2) (l ++ gv2)), (Permutation (n0 :: gv2) (gv2 ++ bl)), (Permutation (n0 :: gv2) (gv2 ++ l)), (Permutation (n0 :: gv2) (gv2 ++ gv2)), (Permutation (n0 :: gv2) []), (Permutation (gv3 :: bl) bl), (Permutation (gv3 :: bl) l), (Permutation (gv3 :: bl) gv2), (Permutation (gv3 :: bl) (n0 :: bl))
(Permutation (gv3 :: bl) (n0 :: l)), (Permutation (gv3 :: bl) (n0 :: gv2)), (Permutation (gv3 :: bl) (gv3 :: l)), (Permutation (gv3 :: bl) (gv3 :: gv2)), (Permutation (gv3 :: bl) (n1 :: bl)), (Permutation (gv3 :: bl) (n1 :: l)), (Permutation (gv3 :: bl) (n1 :: gv2)), (Permutation (gv3 :: bl) (y :: bl)), (Permutation (gv3 :: bl) (y :: l)), (Permutation (gv3 :: bl) (y :: gv2))
(Permutation (gv3 :: bl) (selection_sort bl)), (Permutation (gv3 :: bl) (selection_sort l)), (Permutation (gv3 :: bl) (selection_sort gv2)), (Permutation (gv3 :: bl) (selsort bl n0)), (Permutation (gv3 :: bl) (selsort bl gv3)), (Permutation (gv3 :: bl) (selsort bl n1)), (Permutation (gv3 :: bl) (selsort bl y)), (Permutation (gv3 :: bl) (selsort l n0)), (Permutation (gv3 :: bl) (selsort l gv3)), (Permutation (gv3 :: bl) (selsort l n1))
(Permutation (gv3 :: bl) (selsort l y)), (Permutation (gv3 :: bl) (selsort gv2 n0)), (Permutation (gv3 :: bl) (selsort gv2 gv3)), (Permutation (gv3 :: bl) (selsort gv2 n1)), (Permutation (gv3 :: bl) (selsort gv2 y)), (Permutation (gv3 :: bl) (bl ++ bl)), (Permutation (gv3 :: bl) (bl ++ l)), (Permutation (gv3 :: bl) (bl ++ gv2)), (Permutation (gv3 :: bl) (l ++ bl)), (Permutation (gv3 :: bl) (l ++ l))
(Permutation (gv3 :: bl) (l ++ gv2)), (Permutation (gv3 :: bl) (gv2 ++ bl)), (Permutation (gv3 :: bl) (gv2 ++ l)), (Permutation (gv3 :: bl) (gv2 ++ gv2)), (Permutation (gv3 :: bl) []), (Permutation (gv3 :: l) bl), (Permutation (gv3 :: l) l), (Permutation (gv3 :: l) gv2), (Permutation (gv3 :: l) (n0 :: bl)), (Permutation (gv3 :: l) (n0 :: l))
(Permutation (gv3 :: l) (n0 :: gv2)), (Permutation (gv3 :: l) (gv3 :: bl)), (Permutation (gv3 :: l) (gv3 :: gv2)), (Permutation (gv3 :: l) (n1 :: bl)), (Permutation (gv3 :: l) (n1 :: l)), (Permutation (gv3 :: l) (n1 :: gv2)), (Permutation (gv3 :: l) (y :: bl)), (Permutation (gv3 :: l) (y :: l)), (Permutation (gv3 :: l) (y :: gv2)), (Permutation (gv3 :: l) (selection_sort bl))
(Permutation (gv3 :: l) (selection_sort l)), (Permutation (gv3 :: l) (selection_sort gv2)), (Permutation (gv3 :: l) (selsort bl n0)), (Permutation (gv3 :: l) (selsort bl gv3)), (Permutation (gv3 :: l) (selsort bl n1)), (Permutation (gv3 :: l) (selsort bl y)), (Permutation (gv3 :: l) (selsort l n0)), (Permutation (gv3 :: l) (selsort l gv3)), (Permutation (gv3 :: l) (selsort l n1)), (Permutation (gv3 :: l) (selsort l y))
(Permutation (gv3 :: l) (selsort gv2 n0)), (Permutation (gv3 :: l) (selsort gv2 gv3)), (Permutation (gv3 :: l) (selsort gv2 n1)), (Permutation (gv3 :: l) (selsort gv2 y)), (Permutation (gv3 :: l) (bl ++ bl)), (Permutation (gv3 :: l) (bl ++ l)), (Permutation (gv3 :: l) (bl ++ gv2)), (Permutation (gv3 :: l) (l ++ bl)), (Permutation (gv3 :: l) (l ++ l)), (Permutation (gv3 :: l) (l ++ gv2))
(Permutation (gv3 :: l) (gv2 ++ bl)), (Permutation (gv3 :: l) (gv2 ++ l)), (Permutation (gv3 :: l) (gv2 ++ gv2)), (Permutation (gv3 :: l) []), (Permutation (gv3 :: gv2) bl), (Permutation (gv3 :: gv2) l), (Permutation (gv3 :: gv2) gv2), (Permutation (gv3 :: gv2) (n0 :: bl)), (Permutation (gv3 :: gv2) (n0 :: l)), (Permutation (gv3 :: gv2) (n0 :: gv2))
(Permutation (gv3 :: gv2) (gv3 :: bl)), (Permutation (gv3 :: gv2) (gv3 :: l)), (Permutation (gv3 :: gv2) (n1 :: bl)), (Permutation (gv3 :: gv2) (n1 :: l)), (Permutation (gv3 :: gv2) (n1 :: gv2)), (Permutation (gv3 :: gv2) (y :: bl)), (Permutation (gv3 :: gv2) (y :: l)), (Permutation (gv3 :: gv2) (y :: gv2)), (Permutation (gv3 :: gv2) (selection_sort bl)), (Permutation (gv3 :: gv2) (selection_sort l))
(Permutation (gv3 :: gv2) (selection_sort gv2)), (Permutation (gv3 :: gv2) (selsort bl n0)), (Permutation (gv3 :: gv2) (selsort bl gv3)), (Permutation (gv3 :: gv2) (selsort bl n1)), (Permutation (gv3 :: gv2) (selsort bl y)), (Permutation (gv3 :: gv2) (selsort l n0)), (Permutation (gv3 :: gv2) (selsort l gv3)), (Permutation (gv3 :: gv2) (selsort l n1)), (Permutation (gv3 :: gv2) (selsort l y)), (Permutation (gv3 :: gv2) (selsort gv2 n0))
(Permutation (gv3 :: gv2) (selsort gv2 gv3)), (Permutation (gv3 :: gv2) (selsort gv2 n1)), (Permutation (gv3 :: gv2) (selsort gv2 y)), (Permutation (gv3 :: gv2) (bl ++ bl)), (Permutation (gv3 :: gv2) (bl ++ l)), (Permutation (gv3 :: gv2) (bl ++ gv2)), (Permutation (gv3 :: gv2) (l ++ bl)), (Permutation (gv3 :: gv2) (l ++ l)), (Permutation (gv3 :: gv2) (l ++ gv2)), (Permutation (gv3 :: gv2) (gv2 ++ bl))
(Permutation (gv3 :: gv2) (gv2 ++ l)), (Permutation (gv3 :: gv2) (gv2 ++ gv2)), (Permutation (gv3 :: gv2) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv2), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv2)), (Permutation (n1 :: bl) (gv3 :: bl))
(Permutation (n1 :: bl) (gv3 :: l)), (Permutation (n1 :: bl) (gv3 :: gv2)), (Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv2)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv2)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv2))
(Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl gv3)), (Permutation (n1 :: bl) (selsort bl n1)), (Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l gv3)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv2 n0)), (Permutation (n1 :: bl) (selsort gv2 gv3))
(Permutation (n1 :: bl) (selsort gv2 n1)), (Permutation (n1 :: bl) (selsort gv2 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv2)), (Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv2)), (Permutation (n1 :: bl) (gv2 ++ bl)), (Permutation (n1 :: bl) (gv2 ++ l))
(Permutation (n1 :: bl) (gv2 ++ gv2)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv2), (Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv2)), (Permutation (n1 :: l) (gv3 :: bl)), (Permutation (n1 :: l) (gv3 :: l))
(Permutation (n1 :: l) (gv3 :: gv2)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv2)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv2)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort gv2)), (Permutation (n1 :: l) (selsort bl n0))
(Permutation (n1 :: l) (selsort bl gv3)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l gv3)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv2 n0)), (Permutation (n1 :: l) (selsort gv2 gv3)), (Permutation (n1 :: l) (selsort gv2 n1))
(Permutation (n1 :: l) (selsort gv2 y)), (Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv2)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv2)), (Permutation (n1 :: l) (gv2 ++ bl)), (Permutation (n1 :: l) (gv2 ++ l)), (Permutation (n1 :: l) (gv2 ++ gv2))
(Permutation (n1 :: l) []), (Permutation (n1 :: gv2) bl), (Permutation (n1 :: gv2) l), (Permutation (n1 :: gv2) gv2), (Permutation (n1 :: gv2) (n0 :: bl)), (Permutation (n1 :: gv2) (n0 :: l)), (Permutation (n1 :: gv2) (n0 :: gv2)), (Permutation (n1 :: gv2) (gv3 :: bl)), (Permutation (n1 :: gv2) (gv3 :: l)), (Permutation (n1 :: gv2) (gv3 :: gv2))
(Permutation (n1 :: gv2) (n1 :: bl)), (Permutation (n1 :: gv2) (n1 :: l)), (Permutation (n1 :: gv2) (y :: bl)), (Permutation (n1 :: gv2) (y :: l)), (Permutation (n1 :: gv2) (y :: gv2)), (Permutation (n1 :: gv2) (selection_sort bl)), (Permutation (n1 :: gv2) (selection_sort l)), (Permutation (n1 :: gv2) (selection_sort gv2)), (Permutation (n1 :: gv2) (selsort bl n0)), (Permutation (n1 :: gv2) (selsort bl gv3))
(Permutation (n1 :: gv2) (selsort bl n1)), (Permutation (n1 :: gv2) (selsort bl y)), (Permutation (n1 :: gv2) (selsort l n0)), (Permutation (n1 :: gv2) (selsort l gv3)), (Permutation (n1 :: gv2) (selsort l n1)), (Permutation (n1 :: gv2) (selsort l y)), (Permutation (n1 :: gv2) (selsort gv2 n0)), (Permutation (n1 :: gv2) (selsort gv2 gv3)), (Permutation (n1 :: gv2) (selsort gv2 n1)), (Permutation (n1 :: gv2) (selsort gv2 y))
(Permutation (n1 :: gv2) (bl ++ bl)), (Permutation (n1 :: gv2) (bl ++ l)), (Permutation (n1 :: gv2) (bl ++ gv2)), (Permutation (n1 :: gv2) (l ++ bl)), (Permutation (n1 :: gv2) (l ++ l)), (Permutation (n1 :: gv2) (l ++ gv2)), (Permutation (n1 :: gv2) (gv2 ++ bl)), (Permutation (n1 :: gv2) (gv2 ++ l)), (Permutation (n1 :: gv2) (gv2 ++ gv2)), (Permutation (n1 :: gv2) [])
(Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv2), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv2)), (Permutation (y :: bl) (gv3 :: bl)), (Permutation (y :: bl) (gv3 :: l)), (Permutation (y :: bl) (gv3 :: gv2)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv2)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv2)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv2)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl gv3)), (Permutation (y :: bl) (selsort bl n1))
(Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l gv3)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv2 n0)), (Permutation (y :: bl) (selsort gv2 gv3)), (Permutation (y :: bl) (selsort gv2 n1)), (Permutation (y :: bl) (selsort gv2 y)), (Permutation (y :: bl) (bl ++ bl))
(Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv2)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv2)), (Permutation (y :: bl) (gv2 ++ bl)), (Permutation (y :: bl) (gv2 ++ l)), (Permutation (y :: bl) (gv2 ++ gv2)), (Permutation (y :: bl) []), (Permutation (y :: l) bl)
(Permutation (y :: l) l), (Permutation (y :: l) gv2), (Permutation (y :: l) (n0 :: bl)), (Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv2)), (Permutation (y :: l) (gv3 :: bl)), (Permutation (y :: l) (gv3 :: l)), (Permutation (y :: l) (gv3 :: gv2)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l))
(Permutation (y :: l) (n1 :: gv2)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv2)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv2)), (Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl gv3)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y))
(Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l gv3)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv2 n0)), (Permutation (y :: l) (selsort gv2 gv3)), (Permutation (y :: l) (selsort gv2 n1)), (Permutation (y :: l) (selsort gv2 y)), (Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) (bl ++ l))
(Permutation (y :: l) (bl ++ gv2)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv2)), (Permutation (y :: l) (gv2 ++ bl)), (Permutation (y :: l) (gv2 ++ l)), (Permutation (y :: l) (gv2 ++ gv2)), (Permutation (y :: l) []), (Permutation (y :: gv2) bl), (Permutation (y :: gv2) l)
(Permutation (y :: gv2) gv2), (Permutation (y :: gv2) (n0 :: bl)), (Permutation (y :: gv2) (n0 :: l)), (Permutation (y :: gv2) (n0 :: gv2)), (Permutation (y :: gv2) (gv3 :: bl)), (Permutation (y :: gv2) (gv3 :: l)), (Permutation (y :: gv2) (gv3 :: gv2)), (Permutation (y :: gv2) (n1 :: bl)), (Permutation (y :: gv2) (n1 :: l)), (Permutation (y :: gv2) (n1 :: gv2))
(Permutation (y :: gv2) (y :: bl)), (Permutation (y :: gv2) (y :: l)), (Permutation (y :: gv2) (selection_sort bl)), (Permutation (y :: gv2) (selection_sort l)), (Permutation (y :: gv2) (selection_sort gv2)), (Permutation (y :: gv2) (selsort bl n0)), (Permutation (y :: gv2) (selsort bl gv3)), (Permutation (y :: gv2) (selsort bl n1)), (Permutation (y :: gv2) (selsort bl y)), (Permutation (y :: gv2) (selsort l n0))
(Permutation (y :: gv2) (selsort l gv3)), (Permutation (y :: gv2) (selsort l n1)), (Permutation (y :: gv2) (selsort l y)), (Permutation (y :: gv2) (selsort gv2 n0)), (Permutation (y :: gv2) (selsort gv2 gv3)), (Permutation (y :: gv2) (selsort gv2 n1)), (Permutation (y :: gv2) (selsort gv2 y)), (Permutation (y :: gv2) (bl ++ bl)), (Permutation (y :: gv2) (bl ++ l)), (Permutation (y :: gv2) (bl ++ gv2))
(Permutation (y :: gv2) (l ++ bl)), (Permutation (y :: gv2) (l ++ l)), (Permutation (y :: gv2) (l ++ gv2)), (Permutation (y :: gv2) (gv2 ++ bl)), (Permutation (y :: gv2) (gv2 ++ l)), (Permutation (y :: gv2) (gv2 ++ gv2)), (Permutation (y :: gv2) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv2)
(Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv2)), (Permutation (selection_sort bl) (gv3 :: bl)), (Permutation (selection_sort bl) (gv3 :: l)), (Permutation (selection_sort bl) (gv3 :: gv2)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l)), (Permutation (selection_sort bl) (n1 :: gv2)), (Permutation (selection_sort bl) (y :: bl))
(Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv2)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv2)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl gv3)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0)), (Permutation (selection_sort bl) (selsort l gv3))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv2 n0)), (Permutation (selection_sort bl) (selsort gv2 gv3)), (Permutation (selection_sort bl) (selsort gv2 n1)), (Permutation (selection_sort bl) (selsort gv2 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv2)), (Permutation (selection_sort bl) (l ++ bl))
(Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) (l ++ gv2)), (Permutation (selection_sort bl) (gv2 ++ bl)), (Permutation (selection_sort bl) (gv2 ++ l)), (Permutation (selection_sort bl) (gv2 ++ gv2)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv2), (Permutation (selection_sort l) (n0 :: bl))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n0 :: gv2)), (Permutation (selection_sort l) (gv3 :: bl)), (Permutation (selection_sort l) (gv3 :: l)), (Permutation (selection_sort l) (gv3 :: gv2)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv2)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l))
(Permutation (selection_sort l) (y :: gv2)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv2)), (Permutation (selection_sort l) (selsort bl n0)), (Permutation (selection_sort l) (selsort bl gv3)), (Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l gv3)), (Permutation (selection_sort l) (selsort l n1))
(Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv2 n0)), (Permutation (selection_sort l) (selsort gv2 gv3)), (Permutation (selection_sort l) (selsort gv2 n1)), (Permutation (selection_sort l) (selsort gv2 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (bl ++ gv2)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l))
(Permutation (selection_sort l) (l ++ gv2)), (Permutation (selection_sort l) (gv2 ++ bl)), (Permutation (selection_sort l) (gv2 ++ l)), (Permutation (selection_sort l) (gv2 ++ gv2)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv2) bl), (Permutation (selection_sort gv2) l), (Permutation (selection_sort gv2) gv2), (Permutation (selection_sort gv2) (n0 :: bl)), (Permutation (selection_sort gv2) (n0 :: l))
(Permutation (selection_sort gv2) (n0 :: gv2)), (Permutation (selection_sort gv2) (gv3 :: bl)), (Permutation (selection_sort gv2) (gv3 :: l)), (Permutation (selection_sort gv2) (gv3 :: gv2)), (Permutation (selection_sort gv2) (n1 :: bl)), (Permutation (selection_sort gv2) (n1 :: l)), (Permutation (selection_sort gv2) (n1 :: gv2)), (Permutation (selection_sort gv2) (y :: bl)), (Permutation (selection_sort gv2) (y :: l)), (Permutation (selection_sort gv2) (y :: gv2))
(Permutation (selection_sort gv2) (selection_sort bl)), (Permutation (selection_sort gv2) (selection_sort l)), (Permutation (selection_sort gv2) (selsort bl n0)), (Permutation (selection_sort gv2) (selsort bl gv3)), (Permutation (selection_sort gv2) (selsort bl n1)), (Permutation (selection_sort gv2) (selsort bl y)), (Permutation (selection_sort gv2) (selsort l n0)), (Permutation (selection_sort gv2) (selsort l gv3)), (Permutation (selection_sort gv2) (selsort l n1)), (Permutation (selection_sort gv2) (selsort l y))
(Permutation (selection_sort gv2) (selsort gv2 n0)), (Permutation (selection_sort gv2) (selsort gv2 gv3)), (Permutation (selection_sort gv2) (selsort gv2 n1)), (Permutation (selection_sort gv2) (selsort gv2 y)), (Permutation (selection_sort gv2) (bl ++ bl)), (Permutation (selection_sort gv2) (bl ++ l)), (Permutation (selection_sort gv2) (bl ++ gv2)), (Permutation (selection_sort gv2) (l ++ bl)), (Permutation (selection_sort gv2) (l ++ l)), (Permutation (selection_sort gv2) (l ++ gv2))
(Permutation (selection_sort gv2) (gv2 ++ bl)), (Permutation (selection_sort gv2) (gv2 ++ l)), (Permutation (selection_sort gv2) (gv2 ++ gv2)), (Permutation (selection_sort gv2) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv2), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv2))
(Permutation (selsort bl n0) (gv3 :: bl)), (Permutation (selsort bl n0) (gv3 :: l)), (Permutation (selsort bl n0) (gv3 :: gv2)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv2)), (Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv2)), (Permutation (selsort bl n0) (selection_sort bl))
(Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv2)), (Permutation (selsort bl n0) (selsort bl gv3)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l gv3)), (Permutation (selsort bl n0) (selsort l n1)), (Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv2 n0))
(Permutation (selsort bl n0) (selsort gv2 gv3)), (Permutation (selsort bl n0) (selsort gv2 n1)), (Permutation (selsort bl n0) (selsort gv2 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv2)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv2)), (Permutation (selsort bl n0) (gv2 ++ bl))
(Permutation (selsort bl n0) (gv2 ++ l)), (Permutation (selsort bl n0) (gv2 ++ gv2)), (Permutation (selsort bl n0) []), (Permutation (selsort bl gv3) bl), (Permutation (selsort bl gv3) l), (Permutation (selsort bl gv3) gv2), (Permutation (selsort bl gv3) (n0 :: bl)), (Permutation (selsort bl gv3) (n0 :: l)), (Permutation (selsort bl gv3) (n0 :: gv2)), (Permutation (selsort bl gv3) (gv3 :: bl))
(Permutation (selsort bl gv3) (gv3 :: l)), (Permutation (selsort bl gv3) (gv3 :: gv2)), (Permutation (selsort bl gv3) (n1 :: bl)), (Permutation (selsort bl gv3) (n1 :: l)), (Permutation (selsort bl gv3) (n1 :: gv2)), (Permutation (selsort bl gv3) (y :: bl)), (Permutation (selsort bl gv3) (y :: l)), (Permutation (selsort bl gv3) (y :: gv2)), (Permutation (selsort bl gv3) (selection_sort bl)), (Permutation (selsort bl gv3) (selection_sort l))
(Permutation (selsort bl gv3) (selection_sort gv2)), (Permutation (selsort bl gv3) (selsort bl n0)), (Permutation (selsort bl gv3) (selsort bl n1)), (Permutation (selsort bl gv3) (selsort bl y)), (Permutation (selsort bl gv3) (selsort l n0)), (Permutation (selsort bl gv3) (selsort l gv3)), (Permutation (selsort bl gv3) (selsort l n1)), (Permutation (selsort bl gv3) (selsort l y)), (Permutation (selsort bl gv3) (selsort gv2 n0)), (Permutation (selsort bl gv3) (selsort gv2 gv3))
(Permutation (selsort bl gv3) (selsort gv2 n1)), (Permutation (selsort bl gv3) (selsort gv2 y)), (Permutation (selsort bl gv3) (bl ++ bl)), (Permutation (selsort bl gv3) (bl ++ l)), (Permutation (selsort bl gv3) (bl ++ gv2)), (Permutation (selsort bl gv3) (l ++ bl)), (Permutation (selsort bl gv3) (l ++ l)), (Permutation (selsort bl gv3) (l ++ gv2)), (Permutation (selsort bl gv3) (gv2 ++ bl)), (Permutation (selsort bl gv3) (gv2 ++ l))
(Permutation (selsort bl gv3) (gv2 ++ gv2)), (Permutation (selsort bl gv3) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv2), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv2)), (Permutation (selsort bl n1) (gv3 :: bl)), (Permutation (selsort bl n1) (gv3 :: l))
(Permutation (selsort bl n1) (gv3 :: gv2)), (Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv2)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv2)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv2))
(Permutation (selsort bl n1) (selsort bl n0)), (Permutation (selsort bl n1) (selsort bl gv3)), (Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l gv3)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv2 n0)), (Permutation (selsort bl n1) (selsort gv2 gv3)), (Permutation (selsort bl n1) (selsort gv2 n1))
(Permutation (selsort bl n1) (selsort gv2 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv2)), (Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv2)), (Permutation (selsort bl n1) (gv2 ++ bl)), (Permutation (selsort bl n1) (gv2 ++ l)), (Permutation (selsort bl n1) (gv2 ++ gv2))
(Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv2), (Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv2)), (Permutation (selsort bl y) (gv3 :: bl)), (Permutation (selsort bl y) (gv3 :: l)), (Permutation (selsort bl y) (gv3 :: gv2))
(Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv2)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv2)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv2)), (Permutation (selsort bl y) (selsort bl n0))
(Permutation (selsort bl y) (selsort bl gv3)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l gv3)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv2 n0)), (Permutation (selsort bl y) (selsort gv2 gv3)), (Permutation (selsort bl y) (selsort gv2 n1)), (Permutation (selsort bl y) (selsort gv2 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv2)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv2)), (Permutation (selsort bl y) (gv2 ++ bl)), (Permutation (selsort bl y) (gv2 ++ l)), (Permutation (selsort bl y) (gv2 ++ gv2)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv2), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv2)), (Permutation (selsort l n0) (gv3 :: bl)), (Permutation (selsort l n0) (gv3 :: l)), (Permutation (selsort l n0) (gv3 :: gv2)), (Permutation (selsort l n0) (n1 :: bl))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv2)), (Permutation (selsort l n0) (y :: bl)), (Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv2)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv2)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl gv3))
(Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l gv3)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y)), (Permutation (selsort l n0) (selsort gv2 n0)), (Permutation (selsort l n0) (selsort gv2 gv3)), (Permutation (selsort l n0) (selsort gv2 n1)), (Permutation (selsort l n0) (selsort gv2 y)), (Permutation (selsort l n0) (bl ++ bl))
(Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv2)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv2)), (Permutation (selsort l n0) (gv2 ++ bl)), (Permutation (selsort l n0) (gv2 ++ l)), (Permutation (selsort l n0) (gv2 ++ gv2)), (Permutation (selsort l n0) []), (Permutation (selsort l gv3) bl)
(Permutation (selsort l gv3) l), (Permutation (selsort l gv3) gv2), (Permutation (selsort l gv3) (n0 :: bl)), (Permutation (selsort l gv3) (n0 :: l)), (Permutation (selsort l gv3) (n0 :: gv2)), (Permutation (selsort l gv3) (gv3 :: bl)), (Permutation (selsort l gv3) (gv3 :: l)), (Permutation (selsort l gv3) (gv3 :: gv2)), (Permutation (selsort l gv3) (n1 :: bl)), (Permutation (selsort l gv3) (n1 :: l))
(Permutation (selsort l gv3) (n1 :: gv2)), (Permutation (selsort l gv3) (y :: bl)), (Permutation (selsort l gv3) (y :: l)), (Permutation (selsort l gv3) (y :: gv2)), (Permutation (selsort l gv3) (selection_sort bl)), (Permutation (selsort l gv3) (selection_sort l)), (Permutation (selsort l gv3) (selection_sort gv2)), (Permutation (selsort l gv3) (selsort bl n0)), (Permutation (selsort l gv3) (selsort bl gv3)), (Permutation (selsort l gv3) (selsort bl n1))
(Permutation (selsort l gv3) (selsort bl y)), (Permutation (selsort l gv3) (selsort l n0)), (Permutation (selsort l gv3) (selsort l n1)), (Permutation (selsort l gv3) (selsort l y)), (Permutation (selsort l gv3) (selsort gv2 n0)), (Permutation (selsort l gv3) (selsort gv2 gv3)), (Permutation (selsort l gv3) (selsort gv2 n1)), (Permutation (selsort l gv3) (selsort gv2 y)), (Permutation (selsort l gv3) (bl ++ bl)), (Permutation (selsort l gv3) (bl ++ l))
(Permutation (selsort l gv3) (bl ++ gv2)), (Permutation (selsort l gv3) (l ++ bl)), (Permutation (selsort l gv3) (l ++ l)), (Permutation (selsort l gv3) (l ++ gv2)), (Permutation (selsort l gv3) (gv2 ++ bl)), (Permutation (selsort l gv3) (gv2 ++ l)), (Permutation (selsort l gv3) (gv2 ++ gv2)), (Permutation (selsort l gv3) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l)
(Permutation (selsort l n1) gv2), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv2)), (Permutation (selsort l n1) (gv3 :: bl)), (Permutation (selsort l n1) (gv3 :: l)), (Permutation (selsort l n1) (gv3 :: gv2)), (Permutation (selsort l n1) (n1 :: bl)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv2))
(Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv2)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv2)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl gv3)), (Permutation (selsort l n1) (selsort bl n1)), (Permutation (selsort l n1) (selsort bl y))
(Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l gv3)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv2 n0)), (Permutation (selsort l n1) (selsort gv2 gv3)), (Permutation (selsort l n1) (selsort gv2 n1)), (Permutation (selsort l n1) (selsort gv2 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv2))
(Permutation (selsort l n1) (l ++ bl)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv2)), (Permutation (selsort l n1) (gv2 ++ bl)), (Permutation (selsort l n1) (gv2 ++ l)), (Permutation (selsort l n1) (gv2 ++ gv2)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv2)
(Permutation (selsort l y) (n0 :: bl)), (Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv2)), (Permutation (selsort l y) (gv3 :: bl)), (Permutation (selsort l y) (gv3 :: l)), (Permutation (selsort l y) (gv3 :: gv2)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv2)), (Permutation (selsort l y) (y :: bl))
(Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv2)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort gv2)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl gv3)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0))
(Permutation (selsort l y) (selsort l gv3)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv2 n0)), (Permutation (selsort l y) (selsort gv2 gv3)), (Permutation (selsort l y) (selsort gv2 n1)), (Permutation (selsort l y) (selsort gv2 y)), (Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv2)), (Permutation (selsort l y) (l ++ bl))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv2)), (Permutation (selsort l y) (gv2 ++ bl)), (Permutation (selsort l y) (gv2 ++ l)), (Permutation (selsort l y) (gv2 ++ gv2)), (Permutation (selsort l y) []), (Permutation (selsort gv2 n0) bl), (Permutation (selsort gv2 n0) l), (Permutation (selsort gv2 n0) gv2), (Permutation (selsort gv2 n0) (n0 :: bl))
(Permutation (selsort gv2 n0) (n0 :: l)), (Permutation (selsort gv2 n0) (n0 :: gv2)), (Permutation (selsort gv2 n0) (gv3 :: bl)), (Permutation (selsort gv2 n0) (gv3 :: l)), (Permutation (selsort gv2 n0) (gv3 :: gv2)), (Permutation (selsort gv2 n0) (n1 :: bl)), (Permutation (selsort gv2 n0) (n1 :: l)), (Permutation (selsort gv2 n0) (n1 :: gv2)), (Permutation (selsort gv2 n0) (y :: bl)), (Permutation (selsort gv2 n0) (y :: l))
(Permutation (selsort gv2 n0) (y :: gv2)), (Permutation (selsort gv2 n0) (selection_sort bl)), (Permutation (selsort gv2 n0) (selection_sort l)), (Permutation (selsort gv2 n0) (selection_sort gv2)), (Permutation (selsort gv2 n0) (selsort bl n0)), (Permutation (selsort gv2 n0) (selsort bl gv3)), (Permutation (selsort gv2 n0) (selsort bl n1)), (Permutation (selsort gv2 n0) (selsort bl y)), (Permutation (selsort gv2 n0) (selsort l n0)), (Permutation (selsort gv2 n0) (selsort l gv3))
(Permutation (selsort gv2 n0) (selsort l n1)), (Permutation (selsort gv2 n0) (selsort l y)), (Permutation (selsort gv2 n0) (selsort gv2 gv3)), (Permutation (selsort gv2 n0) (selsort gv2 n1)), (Permutation (selsort gv2 n0) (selsort gv2 y)), (Permutation (selsort gv2 n0) (bl ++ bl)), (Permutation (selsort gv2 n0) (bl ++ l)), (Permutation (selsort gv2 n0) (bl ++ gv2)), (Permutation (selsort gv2 n0) (l ++ bl)), (Permutation (selsort gv2 n0) (l ++ l))
(Permutation (selsort gv2 n0) (l ++ gv2)), (Permutation (selsort gv2 n0) (gv2 ++ bl)), (Permutation (selsort gv2 n0) (gv2 ++ l)), (Permutation (selsort gv2 n0) (gv2 ++ gv2)), (Permutation (selsort gv2 n0) []), (Permutation (selsort gv2 gv3) bl), (Permutation (selsort gv2 gv3) l), (Permutation (selsort gv2 gv3) gv2), (Permutation (selsort gv2 gv3) (n0 :: bl)), (Permutation (selsort gv2 gv3) (n0 :: l))
(Permutation (selsort gv2 gv3) (n0 :: gv2)), (Permutation (selsort gv2 gv3) (gv3 :: bl)), (Permutation (selsort gv2 gv3) (gv3 :: l)), (Permutation (selsort gv2 gv3) (gv3 :: gv2)), (Permutation (selsort gv2 gv3) (n1 :: bl)), (Permutation (selsort gv2 gv3) (n1 :: l)), (Permutation (selsort gv2 gv3) (n1 :: gv2)), (Permutation (selsort gv2 gv3) (y :: bl)), (Permutation (selsort gv2 gv3) (y :: l)), (Permutation (selsort gv2 gv3) (y :: gv2))
(Permutation (selsort gv2 gv3) (selection_sort bl)), (Permutation (selsort gv2 gv3) (selection_sort l)), (Permutation (selsort gv2 gv3) (selection_sort gv2)), (Permutation (selsort gv2 gv3) (selsort bl n0)), (Permutation (selsort gv2 gv3) (selsort bl gv3)), (Permutation (selsort gv2 gv3) (selsort bl n1)), (Permutation (selsort gv2 gv3) (selsort bl y)), (Permutation (selsort gv2 gv3) (selsort l n0)), (Permutation (selsort gv2 gv3) (selsort l gv3)), (Permutation (selsort gv2 gv3) (selsort l n1))
(Permutation (selsort gv2 gv3) (selsort l y)), (Permutation (selsort gv2 gv3) (selsort gv2 n0)), (Permutation (selsort gv2 gv3) (selsort gv2 n1)), (Permutation (selsort gv2 gv3) (selsort gv2 y)), (Permutation (selsort gv2 gv3) (bl ++ bl)), (Permutation (selsort gv2 gv3) (bl ++ l)), (Permutation (selsort gv2 gv3) (bl ++ gv2)), (Permutation (selsort gv2 gv3) (l ++ bl)), (Permutation (selsort gv2 gv3) (l ++ l)), (Permutation (selsort gv2 gv3) (l ++ gv2))
(Permutation (selsort gv2 gv3) (gv2 ++ bl)), (Permutation (selsort gv2 gv3) (gv2 ++ l)), (Permutation (selsort gv2 gv3) (gv2 ++ gv2)), (Permutation (selsort gv2 gv3) []), (Permutation (selsort gv2 n1) bl), (Permutation (selsort gv2 n1) l), (Permutation (selsort gv2 n1) gv2), (Permutation (selsort gv2 n1) (n0 :: bl)), (Permutation (selsort gv2 n1) (n0 :: l)), (Permutation (selsort gv2 n1) (n0 :: gv2))
(Permutation (selsort gv2 n1) (gv3 :: bl)), (Permutation (selsort gv2 n1) (gv3 :: l)), (Permutation (selsort gv2 n1) (gv3 :: gv2)), (Permutation (selsort gv2 n1) (n1 :: bl)), (Permutation (selsort gv2 n1) (n1 :: l)), (Permutation (selsort gv2 n1) (n1 :: gv2)), (Permutation (selsort gv2 n1) (y :: bl)), (Permutation (selsort gv2 n1) (y :: l)), (Permutation (selsort gv2 n1) (y :: gv2)), (Permutation (selsort gv2 n1) (selection_sort bl))
(Permutation (selsort gv2 n1) (selection_sort l)), (Permutation (selsort gv2 n1) (selection_sort gv2)), (Permutation (selsort gv2 n1) (selsort bl n0)), (Permutation (selsort gv2 n1) (selsort bl gv3)), (Permutation (selsort gv2 n1) (selsort bl n1)), (Permutation (selsort gv2 n1) (selsort bl y)), (Permutation (selsort gv2 n1) (selsort l n0)), (Permutation (selsort gv2 n1) (selsort l gv3)), (Permutation (selsort gv2 n1) (selsort l n1)), (Permutation (selsort gv2 n1) (selsort l y))
(Permutation (selsort gv2 n1) (selsort gv2 n0)), (Permutation (selsort gv2 n1) (selsort gv2 gv3)), (Permutation (selsort gv2 n1) (selsort gv2 y)), (Permutation (selsort gv2 n1) (bl ++ bl)), (Permutation (selsort gv2 n1) (bl ++ l)), (Permutation (selsort gv2 n1) (bl ++ gv2)), (Permutation (selsort gv2 n1) (l ++ bl)), (Permutation (selsort gv2 n1) (l ++ l)), (Permutation (selsort gv2 n1) (l ++ gv2)), (Permutation (selsort gv2 n1) (gv2 ++ bl))
(Permutation (selsort gv2 n1) (gv2 ++ l)), (Permutation (selsort gv2 n1) (gv2 ++ gv2)), (Permutation (selsort gv2 n1) []), (Permutation (selsort gv2 y) bl), (Permutation (selsort gv2 y) l), (Permutation (selsort gv2 y) gv2), (Permutation (selsort gv2 y) (n0 :: bl)), (Permutation (selsort gv2 y) (n0 :: l)), (Permutation (selsort gv2 y) (n0 :: gv2)), (Permutation (selsort gv2 y) (gv3 :: bl))
(Permutation (selsort gv2 y) (gv3 :: l)), (Permutation (selsort gv2 y) (gv3 :: gv2)), (Permutation (selsort gv2 y) (n1 :: bl)), (Permutation (selsort gv2 y) (n1 :: l)), (Permutation (selsort gv2 y) (n1 :: gv2)), (Permutation (selsort gv2 y) (y :: bl)), (Permutation (selsort gv2 y) (y :: l)), (Permutation (selsort gv2 y) (y :: gv2)), (Permutation (selsort gv2 y) (selection_sort bl)), (Permutation (selsort gv2 y) (selection_sort l))
(Permutation (selsort gv2 y) (selection_sort gv2)), (Permutation (selsort gv2 y) (selsort bl n0)), (Permutation (selsort gv2 y) (selsort bl gv3)), (Permutation (selsort gv2 y) (selsort bl n1)), (Permutation (selsort gv2 y) (selsort bl y)), (Permutation (selsort gv2 y) (selsort l n0)), (Permutation (selsort gv2 y) (selsort l gv3)), (Permutation (selsort gv2 y) (selsort l n1)), (Permutation (selsort gv2 y) (selsort l y)), (Permutation (selsort gv2 y) (selsort gv2 n0))
(Permutation (selsort gv2 y) (selsort gv2 gv3)), (Permutation (selsort gv2 y) (selsort gv2 n1)), (Permutation (selsort gv2 y) (bl ++ bl)), (Permutation (selsort gv2 y) (bl ++ l)), (Permutation (selsort gv2 y) (bl ++ gv2)), (Permutation (selsort gv2 y) (l ++ bl)), (Permutation (selsort gv2 y) (l ++ l)), (Permutation (selsort gv2 y) (l ++ gv2)), (Permutation (selsort gv2 y) (gv2 ++ bl)), (Permutation (selsort gv2 y) (gv2 ++ l))
(Permutation (selsort gv2 y) (gv2 ++ gv2)), (Permutation (selsort gv2 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) gv2), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv2)), (Permutation (bl ++ bl) (gv3 :: bl)), (Permutation (bl ++ bl) (gv3 :: l))
(Permutation (bl ++ bl) (gv3 :: gv2)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv2)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv2)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv2))
(Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl gv3)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l gv3)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv2 n0)), (Permutation (bl ++ bl) (selsort gv2 gv3))
(Permutation (bl ++ bl) (selsort gv2 n1)), (Permutation (bl ++ bl) (selsort gv2 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv2)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv2)), (Permutation (bl ++ bl) (gv2 ++ bl)), (Permutation (bl ++ bl) (gv2 ++ l)), (Permutation (bl ++ bl) (gv2 ++ gv2))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv2), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv2)), (Permutation (bl ++ l) (gv3 :: bl)), (Permutation (bl ++ l) (gv3 :: l)), (Permutation (bl ++ l) (gv3 :: gv2))
(Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv2)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv2)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv2)), (Permutation (bl ++ l) (selsort bl n0))
(Permutation (bl ++ l) (selsort bl gv3)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0)), (Permutation (bl ++ l) (selsort l gv3)), (Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv2 n0)), (Permutation (bl ++ l) (selsort gv2 gv3)), (Permutation (bl ++ l) (selsort gv2 n1))
(Permutation (bl ++ l) (selsort gv2 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv2)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv2)), (Permutation (bl ++ l) (gv2 ++ bl)), (Permutation (bl ++ l) (gv2 ++ l)), (Permutation (bl ++ l) (gv2 ++ gv2)), (Permutation (bl ++ l) [])
(Permutation (bl ++ gv2) bl), (Permutation (bl ++ gv2) l), (Permutation (bl ++ gv2) gv2), (Permutation (bl ++ gv2) (n0 :: bl)), (Permutation (bl ++ gv2) (n0 :: l)), (Permutation (bl ++ gv2) (n0 :: gv2)), (Permutation (bl ++ gv2) (gv3 :: bl)), (Permutation (bl ++ gv2) (gv3 :: l)), (Permutation (bl ++ gv2) (gv3 :: gv2)), (Permutation (bl ++ gv2) (n1 :: bl))
(Permutation (bl ++ gv2) (n1 :: l)), (Permutation (bl ++ gv2) (n1 :: gv2)), (Permutation (bl ++ gv2) (y :: bl)), (Permutation (bl ++ gv2) (y :: l)), (Permutation (bl ++ gv2) (y :: gv2)), (Permutation (bl ++ gv2) (selection_sort bl)), (Permutation (bl ++ gv2) (selection_sort l)), (Permutation (bl ++ gv2) (selection_sort gv2)), (Permutation (bl ++ gv2) (selsort bl n0)), (Permutation (bl ++ gv2) (selsort bl gv3))
(Permutation (bl ++ gv2) (selsort bl n1)), (Permutation (bl ++ gv2) (selsort bl y)), (Permutation (bl ++ gv2) (selsort l n0)), (Permutation (bl ++ gv2) (selsort l gv3)), (Permutation (bl ++ gv2) (selsort l n1)), (Permutation (bl ++ gv2) (selsort l y)), (Permutation (bl ++ gv2) (selsort gv2 n0)), (Permutation (bl ++ gv2) (selsort gv2 gv3)), (Permutation (bl ++ gv2) (selsort gv2 n1)), (Permutation (bl ++ gv2) (selsort gv2 y))
(Permutation (bl ++ gv2) (bl ++ bl)), (Permutation (bl ++ gv2) (bl ++ l)), (Permutation (bl ++ gv2) (l ++ bl)), (Permutation (bl ++ gv2) (l ++ l)), (Permutation (bl ++ gv2) (l ++ gv2)), (Permutation (bl ++ gv2) (gv2 ++ bl)), (Permutation (bl ++ gv2) (gv2 ++ l)), (Permutation (bl ++ gv2) (gv2 ++ gv2)), (Permutation (bl ++ gv2) []), (Permutation (l ++ bl) bl)
(Permutation (l ++ bl) l), (Permutation (l ++ bl) gv2), (Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv2)), (Permutation (l ++ bl) (gv3 :: bl)), (Permutation (l ++ bl) (gv3 :: l)), (Permutation (l ++ bl) (gv3 :: gv2)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l))
(Permutation (l ++ bl) (n1 :: gv2)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv2)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv2)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl gv3)), (Permutation (l ++ bl) (selsort bl n1))
(Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l gv3)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv2 n0)), (Permutation (l ++ bl) (selsort gv2 gv3)), (Permutation (l ++ bl) (selsort gv2 n1)), (Permutation (l ++ bl) (selsort gv2 y)), (Permutation (l ++ bl) (bl ++ bl))
(Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv2)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv2)), (Permutation (l ++ bl) (gv2 ++ bl)), (Permutation (l ++ bl) (gv2 ++ l)), (Permutation (l ++ bl) (gv2 ++ gv2)), (Permutation (l ++ bl) []), (Permutation (l ++ l) bl), (Permutation (l ++ l) l)
(Permutation (l ++ l) gv2), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv2)), (Permutation (l ++ l) (gv3 :: bl)), (Permutation (l ++ l) (gv3 :: l)), (Permutation (l ++ l) (gv3 :: gv2)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv2))
(Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv2)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv2)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl gv3)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y))
(Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l gv3)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv2 n0)), (Permutation (l ++ l) (selsort gv2 gv3)), (Permutation (l ++ l) (selsort gv2 n1)), (Permutation (l ++ l) (selsort gv2 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l))
(Permutation (l ++ l) (bl ++ gv2)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv2)), (Permutation (l ++ l) (gv2 ++ bl)), (Permutation (l ++ l) (gv2 ++ l)), (Permutation (l ++ l) (gv2 ++ gv2)), (Permutation (l ++ l) []), (Permutation (l ++ gv2) bl), (Permutation (l ++ gv2) l), (Permutation (l ++ gv2) gv2)
(Permutation (l ++ gv2) (n0 :: bl)), (Permutation (l ++ gv2) (n0 :: l)), (Permutation (l ++ gv2) (n0 :: gv2)), (Permutation (l ++ gv2) (gv3 :: bl)), (Permutation (l ++ gv2) (gv3 :: l)), (Permutation (l ++ gv2) (gv3 :: gv2)), (Permutation (l ++ gv2) (n1 :: bl)), (Permutation (l ++ gv2) (n1 :: l)), (Permutation (l ++ gv2) (n1 :: gv2)), (Permutation (l ++ gv2) (y :: bl))
(Permutation (l ++ gv2) (y :: l)), (Permutation (l ++ gv2) (y :: gv2)), (Permutation (l ++ gv2) (selection_sort bl)), (Permutation (l ++ gv2) (selection_sort l)), (Permutation (l ++ gv2) (selection_sort gv2)), (Permutation (l ++ gv2) (selsort bl n0)), (Permutation (l ++ gv2) (selsort bl gv3)), (Permutation (l ++ gv2) (selsort bl n1)), (Permutation (l ++ gv2) (selsort bl y)), (Permutation (l ++ gv2) (selsort l n0))
(Permutation (l ++ gv2) (selsort l gv3)), (Permutation (l ++ gv2) (selsort l n1)), (Permutation (l ++ gv2) (selsort l y)), (Permutation (l ++ gv2) (selsort gv2 n0)), (Permutation (l ++ gv2) (selsort gv2 gv3)), (Permutation (l ++ gv2) (selsort gv2 n1)), (Permutation (l ++ gv2) (selsort gv2 y)), (Permutation (l ++ gv2) (bl ++ bl)), (Permutation (l ++ gv2) (bl ++ l)), (Permutation (l ++ gv2) (bl ++ gv2))
(Permutation (l ++ gv2) (l ++ bl)), (Permutation (l ++ gv2) (l ++ l)), (Permutation (l ++ gv2) (gv2 ++ bl)), (Permutation (l ++ gv2) (gv2 ++ l)), (Permutation (l ++ gv2) (gv2 ++ gv2)), (Permutation (l ++ gv2) []), (Permutation (gv2 ++ bl) bl), (Permutation (gv2 ++ bl) l), (Permutation (gv2 ++ bl) gv2), (Permutation (gv2 ++ bl) (n0 :: bl))
(Permutation (gv2 ++ bl) (n0 :: l)), (Permutation (gv2 ++ bl) (n0 :: gv2)), (Permutation (gv2 ++ bl) (gv3 :: bl)), (Permutation (gv2 ++ bl) (gv3 :: l)), (Permutation (gv2 ++ bl) (gv3 :: gv2)), (Permutation (gv2 ++ bl) (n1 :: bl)), (Permutation (gv2 ++ bl) (n1 :: l)), (Permutation (gv2 ++ bl) (n1 :: gv2)), (Permutation (gv2 ++ bl) (y :: bl)), (Permutation (gv2 ++ bl) (y :: l))
(Permutation (gv2 ++ bl) (y :: gv2)), (Permutation (gv2 ++ bl) (selection_sort bl)), (Permutation (gv2 ++ bl) (selection_sort l)), (Permutation (gv2 ++ bl) (selection_sort gv2)), (Permutation (gv2 ++ bl) (selsort bl n0)), (Permutation (gv2 ++ bl) (selsort bl gv3)), (Permutation (gv2 ++ bl) (selsort bl n1)), (Permutation (gv2 ++ bl) (selsort bl y)), (Permutation (gv2 ++ bl) (selsort l n0)), (Permutation (gv2 ++ bl) (selsort l gv3))
(Permutation (gv2 ++ bl) (selsort l n1)), (Permutation (gv2 ++ bl) (selsort l y)), (Permutation (gv2 ++ bl) (selsort gv2 n0)), (Permutation (gv2 ++ bl) (selsort gv2 gv3)), (Permutation (gv2 ++ bl) (selsort gv2 n1)), (Permutation (gv2 ++ bl) (selsort gv2 y)), (Permutation (gv2 ++ bl) (bl ++ bl)), (Permutation (gv2 ++ bl) (bl ++ l)), (Permutation (gv2 ++ bl) (bl ++ gv2)), (Permutation (gv2 ++ bl) (l ++ bl))
(Permutation (gv2 ++ bl) (l ++ l)), (Permutation (gv2 ++ bl) (l ++ gv2)), (Permutation (gv2 ++ bl) (gv2 ++ l)), (Permutation (gv2 ++ bl) (gv2 ++ gv2)), (Permutation (gv2 ++ bl) []), (Permutation (gv2 ++ l) bl), (Permutation (gv2 ++ l) l), (Permutation (gv2 ++ l) gv2), (Permutation (gv2 ++ l) (n0 :: bl)), (Permutation (gv2 ++ l) (n0 :: l))
(Permutation (gv2 ++ l) (n0 :: gv2)), (Permutation (gv2 ++ l) (gv3 :: bl)), (Permutation (gv2 ++ l) (gv3 :: l)), (Permutation (gv2 ++ l) (gv3 :: gv2)), (Permutation (gv2 ++ l) (n1 :: bl)), (Permutation (gv2 ++ l) (n1 :: l)), (Permutation (gv2 ++ l) (n1 :: gv2)), (Permutation (gv2 ++ l) (y :: bl)), (Permutation (gv2 ++ l) (y :: l)), (Permutation (gv2 ++ l) (y :: gv2))
(Permutation (gv2 ++ l) (selection_sort bl)), (Permutation (gv2 ++ l) (selection_sort l)), (Permutation (gv2 ++ l) (selection_sort gv2)), (Permutation (gv2 ++ l) (selsort bl n0)), (Permutation (gv2 ++ l) (selsort bl gv3)), (Permutation (gv2 ++ l) (selsort bl n1)), (Permutation (gv2 ++ l) (selsort bl y)), (Permutation (gv2 ++ l) (selsort l n0)), (Permutation (gv2 ++ l) (selsort l gv3)), (Permutation (gv2 ++ l) (selsort l n1))
(Permutation (gv2 ++ l) (selsort l y)), (Permutation (gv2 ++ l) (selsort gv2 n0)), (Permutation (gv2 ++ l) (selsort gv2 gv3)), (Permutation (gv2 ++ l) (selsort gv2 n1)), (Permutation (gv2 ++ l) (selsort gv2 y)), (Permutation (gv2 ++ l) (bl ++ bl)), (Permutation (gv2 ++ l) (bl ++ l)), (Permutation (gv2 ++ l) (bl ++ gv2)), (Permutation (gv2 ++ l) (l ++ bl)), (Permutation (gv2 ++ l) (l ++ l))
(Permutation (gv2 ++ l) (l ++ gv2)), (Permutation (gv2 ++ l) (gv2 ++ bl)), (Permutation (gv2 ++ l) (gv2 ++ gv2)), (Permutation (gv2 ++ l) []), (Permutation (gv2 ++ gv2) bl), (Permutation (gv2 ++ gv2) l), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) (n0 :: bl)), (Permutation (gv2 ++ gv2) (n0 :: l)), (Permutation (gv2 ++ gv2) (n0 :: gv2))
(Permutation (gv2 ++ gv2) (gv3 :: bl)), (Permutation (gv2 ++ gv2) (gv3 :: l)), (Permutation (gv2 ++ gv2) (gv3 :: gv2)), (Permutation (gv2 ++ gv2) (n1 :: bl)), (Permutation (gv2 ++ gv2) (n1 :: l)), (Permutation (gv2 ++ gv2) (n1 :: gv2)), (Permutation (gv2 ++ gv2) (y :: bl)), (Permutation (gv2 ++ gv2) (y :: l)), (Permutation (gv2 ++ gv2) (y :: gv2)), (Permutation (gv2 ++ gv2) (selection_sort bl))
(Permutation (gv2 ++ gv2) (selection_sort l)), (Permutation (gv2 ++ gv2) (selection_sort gv2)), (Permutation (gv2 ++ gv2) (selsort bl n0)), (Permutation (gv2 ++ gv2) (selsort bl gv3)), (Permutation (gv2 ++ gv2) (selsort bl n1)), (Permutation (gv2 ++ gv2) (selsort bl y)), (Permutation (gv2 ++ gv2) (selsort l n0)), (Permutation (gv2 ++ gv2) (selsort l gv3)), (Permutation (gv2 ++ gv2) (selsort l n1)), (Permutation (gv2 ++ gv2) (selsort l y))
(Permutation (gv2 ++ gv2) (selsort gv2 n0)), (Permutation (gv2 ++ gv2) (selsort gv2 gv3)), (Permutation (gv2 ++ gv2) (selsort gv2 n1)), (Permutation (gv2 ++ gv2) (selsort gv2 y)), (Permutation (gv2 ++ gv2) (bl ++ bl)), (Permutation (gv2 ++ gv2) (bl ++ l)), (Permutation (gv2 ++ gv2) (bl ++ gv2)), (Permutation (gv2 ++ gv2) (l ++ bl)), (Permutation (gv2 ++ gv2) (l ++ l)), (Permutation (gv2 ++ gv2) (l ++ gv2))
(Permutation (gv2 ++ gv2) (gv2 ++ bl)), (Permutation (gv2 ++ gv2) (gv2 ++ l)), (Permutation (gv2 ++ gv2) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv2), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l)), (Permutation [] (n0 :: gv2)), (Permutation [] (gv3 :: bl))
(Permutation [] (gv3 :: l)), (Permutation [] (gv3 :: gv2)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv2)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv2)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l))
(Permutation [] (selection_sort gv2)), (Permutation [] (selsort bl n0)), (Permutation [] (selsort bl gv3)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l gv3)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv2 n0))
(Permutation [] (selsort gv2 gv3)), (Permutation [] (selsort gv2 n1)), (Permutation [] (selsort gv2 y)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv2)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv2)), (Permutation [] (gv2 ++ bl))
(Permutation [] (gv2 ++ l)), (Permutation [] (gv2 ++ gv2)), (In n0 (n0 :: bl)), (In n0 (n0 :: l)), (In n0 (n0 :: gv2)), (In n0 (gv3 :: bl)), (In n0 (gv3 :: l)), (In n0 (gv3 :: gv2)), (In n0 (n1 :: bl)), (In n0 (n1 :: l))
(In n0 (n1 :: gv2)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv2)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv2)), (In n0 (selsort bl n0)), (In n0 (selsort bl gv3)), (In n0 (selsort bl n1))
(In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l gv3)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv2 n0)), (In n0 (selsort gv2 gv3)), (In n0 (selsort gv2 n1)), (In n0 (selsort gv2 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv2)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv2)), (In n0 (gv2 ++ bl)), (In n0 (gv2 ++ l)), (In n0 (gv2 ++ gv2)), (In gv3 (n0 :: bl)), (In gv3 (n0 :: l))
(In gv3 (n0 :: gv2)), (In gv3 (gv3 :: bl)), (In gv3 (gv3 :: l)), (In gv3 (gv3 :: gv2)), (In gv3 (n1 :: bl)), (In gv3 (n1 :: l)), (In gv3 (n1 :: gv2)), (In gv3 (y :: bl)), (In gv3 (y :: l)), (In gv3 (y :: gv2))
(In gv3 (selection_sort bl)), (In gv3 (selection_sort l)), (In gv3 (selection_sort gv2)), (In gv3 (selsort bl n0)), (In gv3 (selsort bl gv3)), (In gv3 (selsort bl n1)), (In gv3 (selsort bl y)), (In gv3 (selsort l n0)), (In gv3 (selsort l gv3)), (In gv3 (selsort l n1))
(In gv3 (selsort l y)), (In gv3 (selsort gv2 n0)), (In gv3 (selsort gv2 gv3)), (In gv3 (selsort gv2 n1)), (In gv3 (selsort gv2 y)), (In gv3 (bl ++ bl)), (In gv3 (bl ++ l)), (In gv3 (bl ++ gv2)), (In gv3 (l ++ bl)), (In gv3 (l ++ l))
(In gv3 (l ++ gv2)), (In gv3 (gv2 ++ bl)), (In gv3 (gv2 ++ l)), (In gv3 (gv2 ++ gv2)), (In n1 (n0 :: bl)), (In n1 (n0 :: l)), (In n1 (n0 :: gv2)), (In n1 (gv3 :: bl)), (In n1 (gv3 :: l)), (In n1 (gv3 :: gv2))
(In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv2)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv2)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv2)), (In n1 (selsort bl n0))
(In n1 (selsort bl gv3)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l gv3)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv2 n0)), (In n1 (selsort gv2 gv3)), (In n1 (selsort gv2 n1))
(In n1 (selsort gv2 y)), (In n1 (bl ++ bl)), (In n1 (bl ++ l)), (In n1 (bl ++ gv2)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv2)), (In n1 (gv2 ++ bl)), (In n1 (gv2 ++ l)), (In n1 (gv2 ++ gv2))
(In y (n0 :: bl)), (In y (n0 :: l)), (In y (n0 :: gv2)), (In y (gv3 :: bl)), (In y (gv3 :: l)), (In y (gv3 :: gv2)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv2)), (In y (y :: bl))
(In y (y :: l)), (In y (y :: gv2)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv2)), (In y (selsort bl n0)), (In y (selsort bl gv3)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0))
(In y (selsort l gv3)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv2 n0)), (In y (selsort gv2 gv3)), (In y (selsort gv2 n1)), (In y (selsort gv2 y)), (In y (bl ++ bl)), (In y (bl ++ l)), (In y (bl ++ gv2))
(In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv2)), (In y (gv2 ++ bl)), (In y (gv2 ++ l)), (In y (gv2 ++ gv2)), (In (length bl) bl), (In (length bl) l), (In (length bl) gv2), (In (length bl) (n0 :: bl))
(In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv2)), (In (length bl) (gv3 :: bl)), (In (length bl) (gv3 :: l)), (In (length bl) (gv3 :: gv2)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv2)), (In (length bl) (y :: bl)), (In (length bl) (y :: l))
(In (length bl) (y :: gv2)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv2)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl gv3)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l gv3))
(In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv2 n0)), (In (length bl) (selsort gv2 gv3)), (In (length bl) (selsort gv2 n1)), (In (length bl) (selsort gv2 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv2)), (In (length bl) (l ++ bl))
(In (length bl) (l ++ l)), (In (length bl) (l ++ gv2)), (In (length bl) (gv2 ++ bl)), (In (length bl) (gv2 ++ l)), (In (length bl) (gv2 ++ gv2)), (In (length l) bl), (In (length l) l), (In (length l) gv2), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l))
(In (length l) (n0 :: gv2)), (In (length l) (gv3 :: bl)), (In (length l) (gv3 :: l)), (In (length l) (gv3 :: gv2)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv2)), (In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv2))
(In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv2)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl gv3)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0)), (In (length l) (selsort l gv3)), (In (length l) (selsort l n1))
(In (length l) (selsort l y)), (In (length l) (selsort gv2 n0)), (In (length l) (selsort gv2 gv3)), (In (length l) (selsort gv2 n1)), (In (length l) (selsort gv2 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv2)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv2)), (In (length l) (gv2 ++ bl)), (In (length l) (gv2 ++ l)), (In (length l) (gv2 ++ gv2)), (In (length gv2) bl), (In (length gv2) l), (In (length gv2) gv2), (In (length gv2) (n0 :: bl)), (In (length gv2) (n0 :: l)), (In (length gv2) (n0 :: gv2))
(In (length gv2) (gv3 :: bl)), (In (length gv2) (gv3 :: l)), (In (length gv2) (gv3 :: gv2)), (In (length gv2) (n1 :: bl)), (In (length gv2) (n1 :: l)), (In (length gv2) (n1 :: gv2)), (In (length gv2) (y :: bl)), (In (length gv2) (y :: l)), (In (length gv2) (y :: gv2)), (In (length gv2) (selection_sort bl))
(In (length gv2) (selection_sort l)), (In (length gv2) (selection_sort gv2)), (In (length gv2) (selsort bl n0)), (In (length gv2) (selsort bl gv3)), (In (length gv2) (selsort bl n1)), (In (length gv2) (selsort bl y)), (In (length gv2) (selsort l n0)), (In (length gv2) (selsort l gv3)), (In (length gv2) (selsort l n1)), (In (length gv2) (selsort l y))
(In (length gv2) (selsort gv2 n0)), (In (length gv2) (selsort gv2 gv3)), (In (length gv2) (selsort gv2 n1)), (In (length gv2) (selsort gv2 y)), (In (length gv2) (bl ++ bl)), (In (length gv2) (bl ++ l)), (In (length gv2) (bl ++ gv2)), (In (length gv2) (l ++ bl)), (In (length gv2) (l ++ l)), (In (length gv2) (l ++ gv2))
(In (length gv2) (gv2 ++ bl)), (In (length gv2) (gv2 ++ l)), (In (length gv2) (gv2 ++ gv2)), (n0 < length bl), (n0 < length l), (n0 < length gv2), (gv3 < length bl), (gv3 < length l), (gv3 < length gv2), (n1 < length bl)
(n1 < length l), (n1 < length gv2), (y < length bl), (y < length l), (y < length gv2), (length bl < n0), (length bl < gv3), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv2), (length l < n0), (length l < gv3), (length l < n1), (length l < y), (length l < length bl), (length l < length gv2), (length gv2 < n0), (length gv2 < gv3), (length gv2 < n1)
(length gv2 < y), (length gv2 < length bl), (length gv2 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv2), (gv3 <= length bl), (gv3 <= length l), (gv3 <= length gv2), (n1 <= length bl)
(n1 <= length l), (n1 <= length gv2), (y <= length bl), (y <= length l), (y <= length gv2), (length bl <= n0), (length bl <= gv3), (length bl <= n1), (length bl <= y), (length bl <= length l)
(length bl <= length gv2), (length l <= n0), (length l <= gv3), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv2), (length gv2 <= n0), (length gv2 <= gv3), (length gv2 <= n1)
(length gv2 <= y), (length gv2 <= length bl), (length gv2 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv2), (~ gv3 <=* bl), (~ gv3 <=* l), (~ gv3 <=* gv2), (~ n1 <=* bl)
(~ n1 <=* l), (~ n1 <=* gv2), (~ y <=* bl), (~ y <=* l), (~ y <=* gv2), (~ sorted bl), (~ sorted l), (~ sorted gv2), (~ Permutation bl bl), (~ Permutation bl l)
(~ Permutation bl gv2), (~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv2), (~ Permutation gv2 bl), (~ Permutation gv2 l), (~ Permutation gv2 gv2), (~ In n0 bl), (~ In n0 l), (~ In n0 gv2)
(~ In gv3 bl), (~ In gv3 l), (~ In gv3 gv2), (~ In n1 bl), (~ In n1 l), (~ In n1 gv2), (~ In y bl), (~ In y l), (~ In y gv2), (~ n0 < n0)
(~ n0 < gv3), (~ n0 < n1), (~ n0 < y), (~ gv3 < n0), (~ gv3 < gv3), (~ gv3 < n1), (~ gv3 < y), (~ n1 < n0), (~ n1 < gv3), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < gv3), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= gv3), (~ n0 <= n1), (~ n0 <= y), (~ gv3 <= n0)
(~ gv3 <= gv3), (~ gv3 <= n1), (~ gv3 <= y), (~ n1 <= n0), (~ n1 <= gv3), (~ n1 <= n1), (~ n1 <= y), (~ y <= n0), (~ y <= gv3), (~ y <= n1)
(~ y <= y), (bl <> bl), (bl <> l), (bl <> gv2), (l <> bl), (l <> l), (l <> gv2), (gv2 <> bl), (gv2 <> l), (gv2 <> gv2)
(n0 <> n0), (n0 <> gv3), (n0 <> n1), (n0 <> y), (gv3 <> n0), (gv3 <> gv3), (gv3 <> n1), (gv3 <> y), (n1 <> n0), (n1 <> gv3)
(n1 <> n1), (n1 <> y), (y <> n0), (y <> gv3), (y <> n1), (y <> y), (None = Some bl), (None = Some l), (None = Some gv2), (n0 :: bl = bl)
(n0 :: bl = l), (n0 :: bl = gv2), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv2), (n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl gv3), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0)
(n0 :: bl = selsort l gv3), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv2 n0), (n0 :: bl = selsort gv2 gv3), (n0 :: bl = selsort gv2 n1), (n0 :: bl = selsort gv2 y), (n0 :: bl = bl ++ bl), (n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv2)
(n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv2), (n0 :: bl = gv2 ++ bl), (n0 :: bl = gv2 ++ l), (n0 :: bl = gv2 ++ gv2), (n0 :: bl = []), (n0 :: l = bl), (n0 :: l = l), (n0 :: l = gv2)
(n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv2), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl gv3), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l gv3), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv2 n0), (n0 :: l = selsort gv2 gv3), (n0 :: l = selsort gv2 n1), (n0 :: l = selsort gv2 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv2), (n0 :: l = l ++ bl), (n0 :: l = l ++ l)
(n0 :: l = l ++ gv2), (n0 :: l = gv2 ++ bl), (n0 :: l = gv2 ++ l), (n0 :: l = gv2 ++ gv2), (n0 :: l = []), (n0 :: gv2 = bl), (n0 :: gv2 = l), (n0 :: gv2 = gv2), (n0 :: gv2 = selection_sort bl), (n0 :: gv2 = selection_sort l)
(n0 :: gv2 = selection_sort gv2), (n0 :: gv2 = selsort bl n0), (n0 :: gv2 = selsort bl gv3), (n0 :: gv2 = selsort bl n1), (n0 :: gv2 = selsort bl y), (n0 :: gv2 = selsort l n0), (n0 :: gv2 = selsort l gv3), (n0 :: gv2 = selsort l n1), (n0 :: gv2 = selsort l y), (n0 :: gv2 = selsort gv2 n0)
(n0 :: gv2 = selsort gv2 gv3), (n0 :: gv2 = selsort gv2 n1), (n0 :: gv2 = selsort gv2 y), (n0 :: gv2 = bl ++ bl), (n0 :: gv2 = bl ++ l), (n0 :: gv2 = bl ++ gv2), (n0 :: gv2 = l ++ bl), (n0 :: gv2 = l ++ l), (n0 :: gv2 = l ++ gv2), (n0 :: gv2 = gv2 ++ bl)
(n0 :: gv2 = gv2 ++ l), (n0 :: gv2 = gv2 ++ gv2), (n0 :: gv2 = []), (gv3 :: bl = bl), (gv3 :: bl = l), (gv3 :: bl = gv2), (gv3 :: bl = selection_sort bl), (gv3 :: bl = selection_sort l), (gv3 :: bl = selection_sort gv2), (gv3 :: bl = selsort bl n0)
(gv3 :: bl = selsort bl gv3), (gv3 :: bl = selsort bl n1), (gv3 :: bl = selsort bl y), (gv3 :: bl = selsort l n0), (gv3 :: bl = selsort l gv3), (gv3 :: bl = selsort l n1), (gv3 :: bl = selsort l y), (gv3 :: bl = selsort gv2 n0), (gv3 :: bl = selsort gv2 gv3), (gv3 :: bl = selsort gv2 n1)
(gv3 :: bl = selsort gv2 y), (gv3 :: bl = bl ++ bl), (gv3 :: bl = bl ++ l), (gv3 :: bl = bl ++ gv2), (gv3 :: bl = l ++ bl), (gv3 :: bl = l ++ l), (gv3 :: bl = l ++ gv2), (gv3 :: bl = gv2 ++ bl), (gv3 :: bl = gv2 ++ l), (gv3 :: bl = gv2 ++ gv2)
(gv3 :: bl = []), (gv3 :: l = bl), (gv3 :: l = l), (gv3 :: l = gv2), (gv3 :: l = selection_sort bl), (gv3 :: l = selection_sort l), (gv3 :: l = selection_sort gv2), (gv3 :: l = selsort bl n0), (gv3 :: l = selsort bl gv3), (gv3 :: l = selsort bl n1)
(gv3 :: l = selsort bl y), (gv3 :: l = selsort l n0), (gv3 :: l = selsort l gv3), (gv3 :: l = selsort l n1), (gv3 :: l = selsort l y), (gv3 :: l = selsort gv2 n0), (gv3 :: l = selsort gv2 gv3), (gv3 :: l = selsort gv2 n1), (gv3 :: l = selsort gv2 y), (gv3 :: l = bl ++ bl)
(gv3 :: l = bl ++ l), (gv3 :: l = bl ++ gv2), (gv3 :: l = l ++ bl), (gv3 :: l = l ++ l), (gv3 :: l = l ++ gv2), (gv3 :: l = gv2 ++ bl), (gv3 :: l = gv2 ++ l), (gv3 :: l = gv2 ++ gv2), (gv3 :: l = []), (gv3 :: gv2 = bl)
(gv3 :: gv2 = l), (gv3 :: gv2 = gv2), (gv3 :: gv2 = selection_sort bl), (gv3 :: gv2 = selection_sort l), (gv3 :: gv2 = selection_sort gv2), (gv3 :: gv2 = selsort bl n0), (gv3 :: gv2 = selsort bl gv3), (gv3 :: gv2 = selsort bl n1), (gv3 :: gv2 = selsort bl y), (gv3 :: gv2 = selsort l n0)
(gv3 :: gv2 = selsort l gv3), (gv3 :: gv2 = selsort l n1), (gv3 :: gv2 = selsort l y), (gv3 :: gv2 = selsort gv2 n0), (gv3 :: gv2 = selsort gv2 gv3), (gv3 :: gv2 = selsort gv2 n1), (gv3 :: gv2 = selsort gv2 y), (gv3 :: gv2 = bl ++ bl), (gv3 :: gv2 = bl ++ l), (gv3 :: gv2 = bl ++ gv2)
(gv3 :: gv2 = l ++ bl), (gv3 :: gv2 = l ++ l), (gv3 :: gv2 = l ++ gv2), (gv3 :: gv2 = gv2 ++ bl), (gv3 :: gv2 = gv2 ++ l), (gv3 :: gv2 = gv2 ++ gv2), (gv3 :: gv2 = []), (n1 :: bl = bl), (n1 :: bl = l), (n1 :: bl = gv2)
(n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv2), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl gv3), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l gv3), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv2 n0), (n1 :: bl = selsort gv2 gv3), (n1 :: bl = selsort gv2 n1), (n1 :: bl = selsort gv2 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv2), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l)
(n1 :: bl = l ++ gv2), (n1 :: bl = gv2 ++ bl), (n1 :: bl = gv2 ++ l), (n1 :: bl = gv2 ++ gv2), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv2), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l)
(n1 :: l = selection_sort gv2), (n1 :: l = selsort bl n0), (n1 :: l = selsort bl gv3), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l gv3), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv2 n0)
(n1 :: l = selsort gv2 gv3), (n1 :: l = selsort gv2 n1), (n1 :: l = selsort gv2 y), (n1 :: l = bl ++ bl), (n1 :: l = bl ++ l), (n1 :: l = bl ++ gv2), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv2), (n1 :: l = gv2 ++ bl)
(n1 :: l = gv2 ++ l), (n1 :: l = gv2 ++ gv2), (n1 :: l = []), (n1 :: gv2 = bl), (n1 :: gv2 = l), (n1 :: gv2 = gv2), (n1 :: gv2 = selection_sort bl), (n1 :: gv2 = selection_sort l), (n1 :: gv2 = selection_sort gv2), (n1 :: gv2 = selsort bl n0)
(n1 :: gv2 = selsort bl gv3), (n1 :: gv2 = selsort bl n1), (n1 :: gv2 = selsort bl y), (n1 :: gv2 = selsort l n0), (n1 :: gv2 = selsort l gv3), (n1 :: gv2 = selsort l n1), (n1 :: gv2 = selsort l y), (n1 :: gv2 = selsort gv2 n0), (n1 :: gv2 = selsort gv2 gv3), (n1 :: gv2 = selsort gv2 n1)
(n1 :: gv2 = selsort gv2 y), (n1 :: gv2 = bl ++ bl), (n1 :: gv2 = bl ++ l), (n1 :: gv2 = bl ++ gv2), (n1 :: gv2 = l ++ bl), (n1 :: gv2 = l ++ l), (n1 :: gv2 = l ++ gv2), (n1 :: gv2 = gv2 ++ bl), (n1 :: gv2 = gv2 ++ l), (n1 :: gv2 = gv2 ++ gv2)
(n1 :: gv2 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv2), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv2), (y :: bl = selsort bl n0), (y :: bl = selsort bl gv3), (y :: bl = selsort bl n1)
(y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l gv3), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv2 n0), (y :: bl = selsort gv2 gv3), (y :: bl = selsort gv2 n1), (y :: bl = selsort gv2 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv2), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv2), (y :: bl = gv2 ++ bl), (y :: bl = gv2 ++ l), (y :: bl = gv2 ++ gv2), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv2), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv2), (y :: l = selsort bl n0), (y :: l = selsort bl gv3), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0)
(y :: l = selsort l gv3), (y :: l = selsort l n1), (y :: l = selsort l y), (y :: l = selsort gv2 n0), (y :: l = selsort gv2 gv3), (y :: l = selsort gv2 n1), (y :: l = selsort gv2 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv2)
(y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv2), (y :: l = gv2 ++ bl), (y :: l = gv2 ++ l), (y :: l = gv2 ++ gv2), (y :: l = []), (y :: gv2 = bl), (y :: gv2 = l), (y :: gv2 = gv2)
(y :: gv2 = selection_sort bl), (y :: gv2 = selection_sort l), (y :: gv2 = selection_sort gv2), (y :: gv2 = selsort bl n0), (y :: gv2 = selsort bl gv3), (y :: gv2 = selsort bl n1), (y :: gv2 = selsort bl y), (y :: gv2 = selsort l n0), (y :: gv2 = selsort l gv3), (y :: gv2 = selsort l n1)
(y :: gv2 = selsort l y), (y :: gv2 = selsort gv2 n0), (y :: gv2 = selsort gv2 gv3), (y :: gv2 = selsort gv2 n1), (y :: gv2 = selsort gv2 y), (y :: gv2 = bl ++ bl), (y :: gv2 = bl ++ l), (y :: gv2 = bl ++ gv2), (y :: gv2 = l ++ bl), (y :: gv2 = l ++ l)
(y :: gv2 = l ++ gv2), (y :: gv2 = gv2 ++ bl), (y :: gv2 = gv2 ++ l), (y :: gv2 = gv2 ++ gv2), (y :: gv2 = []), (selection_sort bl = bl), (selection_sort bl = l), (selection_sort bl = gv2), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l)
(selection_sort bl = bl ++ gv2), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv2), (selection_sort bl = gv2 ++ bl), (selection_sort bl = gv2 ++ l), (selection_sort bl = gv2 ++ gv2), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv2)
(selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv2), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv2), (selection_sort l = gv2 ++ bl), (selection_sort l = gv2 ++ l), (selection_sort l = gv2 ++ gv2), (selection_sort gv2 = bl)
(selection_sort gv2 = l), (selection_sort gv2 = gv2), (selection_sort gv2 = bl ++ bl), (selection_sort gv2 = bl ++ l), (selection_sort gv2 = bl ++ gv2), (selection_sort gv2 = l ++ bl), (selection_sort gv2 = l ++ l), (selection_sort gv2 = l ++ gv2), (selection_sort gv2 = gv2 ++ bl), (selection_sort gv2 = gv2 ++ l)
(selection_sort gv2 = gv2 ++ gv2), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv2), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l), (selsort bl n0 = selection_sort gv2), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv2)
(selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv2), (selsort bl n0 = gv2 ++ bl), (selsort bl n0 = gv2 ++ l), (selsort bl n0 = gv2 ++ gv2), (selsort bl gv3 = bl), (selsort bl gv3 = l), (selsort bl gv3 = gv2), (selsort bl gv3 = selection_sort bl)
(selsort bl gv3 = selection_sort l), (selsort bl gv3 = selection_sort gv2), (selsort bl gv3 = bl ++ bl), (selsort bl gv3 = bl ++ l), (selsort bl gv3 = bl ++ gv2), (selsort bl gv3 = l ++ bl), (selsort bl gv3 = l ++ l), (selsort bl gv3 = l ++ gv2), (selsort bl gv3 = gv2 ++ bl), (selsort bl gv3 = gv2 ++ l)
(selsort bl gv3 = gv2 ++ gv2), (selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv2), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv2), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv2)
(selsort bl n1 = l ++ bl), (selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv2), (selsort bl n1 = gv2 ++ bl), (selsort bl n1 = gv2 ++ l), (selsort bl n1 = gv2 ++ gv2), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv2), (selsort bl y = selection_sort bl)
(selsort bl y = selection_sort l), (selsort bl y = selection_sort gv2), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv2), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv2), (selsort bl y = gv2 ++ bl), (selsort bl y = gv2 ++ l)
(selsort bl y = gv2 ++ gv2), (selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv2), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv2), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv2)
(selsort l n0 = l ++ bl), (selsort l n0 = l ++ l), (selsort l n0 = l ++ gv2), (selsort l n0 = gv2 ++ bl), (selsort l n0 = gv2 ++ l), (selsort l n0 = gv2 ++ gv2), (selsort l gv3 = bl), (selsort l gv3 = l), (selsort l gv3 = gv2), (selsort l gv3 = selection_sort bl)
(selsort l gv3 = selection_sort l), (selsort l gv3 = selection_sort gv2), (selsort l gv3 = bl ++ bl), (selsort l gv3 = bl ++ l), (selsort l gv3 = bl ++ gv2), (selsort l gv3 = l ++ bl), (selsort l gv3 = l ++ l), (selsort l gv3 = l ++ gv2), (selsort l gv3 = gv2 ++ bl), (selsort l gv3 = gv2 ++ l)
(selsort l gv3 = gv2 ++ gv2), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv2), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort gv2), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv2)
(selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv2), (selsort l n1 = gv2 ++ bl), (selsort l n1 = gv2 ++ l), (selsort l n1 = gv2 ++ gv2), (selsort l y = bl), (selsort l y = l), (selsort l y = gv2), (selsort l y = selection_sort bl)
(selsort l y = selection_sort l), (selsort l y = selection_sort gv2), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv2), (selsort l y = l ++ bl), (selsort l y = l ++ l), (selsort l y = l ++ gv2), (selsort l y = gv2 ++ bl), (selsort l y = gv2 ++ l)
(selsort l y = gv2 ++ gv2), (selsort gv2 n0 = bl), (selsort gv2 n0 = l), (selsort gv2 n0 = gv2), (selsort gv2 n0 = selection_sort bl), (selsort gv2 n0 = selection_sort l), (selsort gv2 n0 = selection_sort gv2), (selsort gv2 n0 = bl ++ bl), (selsort gv2 n0 = bl ++ l), (selsort gv2 n0 = bl ++ gv2)
(selsort gv2 n0 = l ++ bl), (selsort gv2 n0 = l ++ l), (selsort gv2 n0 = l ++ gv2), (selsort gv2 n0 = gv2 ++ bl), (selsort gv2 n0 = gv2 ++ l), (selsort gv2 n0 = gv2 ++ gv2), (selsort gv2 gv3 = bl), (selsort gv2 gv3 = l), (selsort gv2 gv3 = gv2), (selsort gv2 gv3 = selection_sort bl)
(selsort gv2 gv3 = selection_sort l), (selsort gv2 gv3 = selection_sort gv2), (selsort gv2 gv3 = bl ++ bl), (selsort gv2 gv3 = bl ++ l), (selsort gv2 gv3 = bl ++ gv2), (selsort gv2 gv3 = l ++ bl), (selsort gv2 gv3 = l ++ l), (selsort gv2 gv3 = l ++ gv2), (selsort gv2 gv3 = gv2 ++ bl), (selsort gv2 gv3 = gv2 ++ l)
(selsort gv2 gv3 = gv2 ++ gv2), (selsort gv2 n1 = bl), (selsort gv2 n1 = l), (selsort gv2 n1 = gv2), (selsort gv2 n1 = selection_sort bl), (selsort gv2 n1 = selection_sort l), (selsort gv2 n1 = selection_sort gv2), (selsort gv2 n1 = bl ++ bl), (selsort gv2 n1 = bl ++ l), (selsort gv2 n1 = bl ++ gv2)
(selsort gv2 n1 = l ++ bl), (selsort gv2 n1 = l ++ l), (selsort gv2 n1 = l ++ gv2), (selsort gv2 n1 = gv2 ++ bl), (selsort gv2 n1 = gv2 ++ l), (selsort gv2 n1 = gv2 ++ gv2), (selsort gv2 y = bl), (selsort gv2 y = l), (selsort gv2 y = gv2), (selsort gv2 y = selection_sort bl)
(selsort gv2 y = selection_sort l), (selsort gv2 y = selection_sort gv2), (selsort gv2 y = bl ++ bl), (selsort gv2 y = bl ++ l), (selsort gv2 y = bl ++ gv2), (selsort gv2 y = l ++ bl), (selsort gv2 y = l ++ l), (selsort gv2 y = l ++ gv2), (selsort gv2 y = gv2 ++ bl), (selsort gv2 y = gv2 ++ l)
(selsort gv2 y = gv2 ++ gv2), (bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv2), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv2), (bl ++ gv2 = bl), (bl ++ gv2 = l), (bl ++ gv2 = gv2)
(l ++ bl = bl), (l ++ bl = l), (l ++ bl = gv2), (l ++ l = bl), (l ++ l = l), (l ++ l = gv2), (l ++ gv2 = bl), (l ++ gv2 = l), (l ++ gv2 = gv2), (gv2 ++ bl = bl)
(gv2 ++ bl = l), (gv2 ++ bl = gv2), (gv2 ++ l = bl), (gv2 ++ l = l), (gv2 ++ l = gv2), (gv2 ++ gv2 = bl), (gv2 ++ gv2 = l), (gv2 ++ gv2 = gv2), ([] = bl), ([] = l)
([] = gv2), ([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv2), ([] = selsort bl n0), ([] = selsort bl gv3), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l gv3)
([] = selsort l n1), ([] = selsort l y), ([] = selsort gv2 n0), ([] = selsort gv2 gv3), ([] = selsort gv2 n1), ([] = selsort gv2 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv2), ([] = l ++ bl)
([] = l ++ l), ([] = l ++ gv2), ([] = gv2 ++ bl), ([] = gv2 ++ l), ([] = gv2 ++ gv2), (None = Some n0), (None = Some gv3), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl)
((n0, bl) = select n0 l), ((n0, bl) = select n0 gv2), ((n0, bl) = select gv3 bl), ((n0, bl) = select gv3 l), ((n0, bl) = select gv3 gv2), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv2), ((n0, bl) = select y bl), ((n0, bl) = select y l)
((n0, bl) = select y gv2), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv2), ((n0, l) = select gv3 bl), ((n0, l) = select gv3 l), ((n0, l) = select gv3 gv2), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv2)
((n0, l) = select y bl), ((n0, l) = select y l), ((n0, l) = select y gv2), ((n0, gv2) = select n0 bl), ((n0, gv2) = select n0 l), ((n0, gv2) = select n0 gv2), ((n0, gv2) = select gv3 bl), ((n0, gv2) = select gv3 l), ((n0, gv2) = select gv3 gv2), ((n0, gv2) = select n1 bl)
((n0, gv2) = select n1 l), ((n0, gv2) = select n1 gv2), ((n0, gv2) = select y bl), ((n0, gv2) = select y l), ((n0, gv2) = select y gv2), ((gv3, bl) = select n0 bl), ((gv3, bl) = select n0 l), ((gv3, bl) = select n0 gv2), ((gv3, bl) = select gv3 bl), ((gv3, bl) = select gv3 l)
((gv3, bl) = select gv3 gv2), ((gv3, bl) = select n1 bl), ((gv3, bl) = select n1 l), ((gv3, bl) = select n1 gv2), ((gv3, bl) = select y bl), ((gv3, bl) = select y l), ((gv3, bl) = select y gv2), ((gv3, l) = select n0 bl), ((gv3, l) = select n0 l), ((gv3, l) = select n0 gv2)
((gv3, l) = select gv3 bl), ((gv3, l) = select gv3 l), ((gv3, l) = select gv3 gv2), ((gv3, l) = select n1 bl), ((gv3, l) = select n1 l), ((gv3, l) = select n1 gv2), ((gv3, l) = select y bl), ((gv3, l) = select y l), ((gv3, l) = select y gv2), ((gv3, gv2) = select n0 bl)
((gv3, gv2) = select n0 l), ((gv3, gv2) = select n0 gv2), ((gv3, gv2) = select gv3 bl), ((gv3, gv2) = select gv3 l), ((gv3, gv2) = select gv3 gv2), ((gv3, gv2) = select n1 bl), ((gv3, gv2) = select n1 l), ((gv3, gv2) = select n1 gv2), ((gv3, gv2) = select y bl), ((gv3, gv2) = select y l)
((gv3, gv2) = select y gv2), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv2), ((n1, bl) = select gv3 bl), ((n1, bl) = select gv3 l), ((n1, bl) = select gv3 gv2), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv2)
((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv2), ((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv2), ((n1, l) = select gv3 bl), ((n1, l) = select gv3 l), ((n1, l) = select gv3 gv2), ((n1, l) = select n1 bl)
((n1, l) = select n1 l), ((n1, l) = select n1 gv2), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv2), ((n1, gv2) = select n0 bl), ((n1, gv2) = select n0 l), ((n1, gv2) = select n0 gv2), ((n1, gv2) = select gv3 bl), ((n1, gv2) = select gv3 l)
((n1, gv2) = select gv3 gv2), ((n1, gv2) = select n1 bl), ((n1, gv2) = select n1 l), ((n1, gv2) = select n1 gv2), ((n1, gv2) = select y bl), ((n1, gv2) = select y l), ((n1, gv2) = select y gv2), ((y, bl) = select n0 bl), ((y, bl) = select n0 l), ((y, bl) = select n0 gv2)
((y, bl) = select gv3 bl), ((y, bl) = select gv3 l), ((y, bl) = select gv3 gv2), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv2), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv2), ((y, l) = select n0 bl)
((y, l) = select n0 l), ((y, l) = select n0 gv2), ((y, l) = select gv3 bl), ((y, l) = select gv3 l), ((y, l) = select gv3 gv2), ((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv2), ((y, l) = select y bl), ((y, l) = select y l)
((y, l) = select y gv2), ((y, gv2) = select n0 bl), ((y, gv2) = select n0 l), ((y, gv2) = select n0 gv2), ((y, gv2) = select gv3 bl), ((y, gv2) = select gv3 l), ((y, gv2) = select gv3 gv2), ((y, gv2) = select n1 bl), ((y, gv2) = select n1 l), ((y, gv2) = select n1 gv2)
((y, gv2) = select y bl), ((y, gv2) = select y l), ((y, gv2) = select y gv2), (length bl = n0), (length bl = gv3), (length bl = n1), (length bl = y), (length l = n0), (length l = gv3), (length l = n1)
(length l = y), (length gv2 = n0), (length gv2 = gv3), (length gv2 = n1), (length gv2 = y)

Label: 5 (5)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv0), (gv3 <=* bl), (gv3 <=* l), (gv3 <=* gv0), (n1 <=* bl), (n1 <=* l), (n1 <=* gv0), (y <=* bl)
(y <=* l), (y <=* gv0), (sorted bl), (sorted l), (sorted gv0), (Permutation bl bl), (Permutation bl l), (Permutation bl gv0), (Permutation l bl), (Permutation l l)
(Permutation l gv0), (Permutation gv0 bl), (Permutation gv0 l), (Permutation gv0 gv0), (In n0 bl), (In n0 l), (In n0 gv0), (In gv3 bl), (In gv3 l), (In gv3 gv0)
(In n1 bl), (In n1 l), (In n1 gv0), (In y bl), (In y l), (In y gv0), (n0 < n0), (n0 < gv3), (n0 < n1), (n0 < y)
(gv3 < n0), (gv3 < gv3), (gv3 < n1), (gv3 < y), (n1 < n0), (n1 < gv3), (n1 < n1), (n1 < y), (y < n0), (y < gv3)
(y < n1), (y < y), (n0 <= n0), (n0 <= gv3), (n0 <= n1), (n0 <= y), (gv3 <= n0), (gv3 <= gv3), (gv3 <= n1), (gv3 <= y)
(n1 <= n0), (n1 <= gv3), (n1 <= n1), (n1 <= y), (y <= n0), (y <= gv3), (y <= n1), (y <= y), (n0 = n0), (n0 = gv3)
(n0 = n1), (n0 = y), (gv3 = n0), (gv3 = gv3), (gv3 = n1), (gv3 = y), (n1 = n0), (n1 = gv3), (n1 = n1), (n1 = y)
(y = n0), (y = gv3), (y = n1), (y = y), (bl = bl), (bl = l), (bl = gv0), (l = bl), (l = l), (l = gv0)
(gv0 = bl), (gv0 = l), (gv0 = gv0), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv0), (n0 <=* gv3 :: bl), (n0 <=* gv3 :: l), (n0 <=* gv3 :: gv0), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv0), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv0), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv0), (n0 <=* selsort bl n0), (n0 <=* selsort bl gv3)
(n0 <=* selsort bl n1), (n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l gv3), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv0 n0), (n0 <=* selsort gv0 gv3), (n0 <=* selsort gv0 n1), (n0 <=* selsort gv0 y)
(n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv0), (n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv0), (n0 <=* gv0 ++ bl), (n0 <=* gv0 ++ l), (n0 <=* gv0 ++ gv0), (n0 <=* [])
(gv3 <=* n0 :: bl), (gv3 <=* n0 :: l), (gv3 <=* n0 :: gv0), (gv3 <=* gv3 :: bl), (gv3 <=* gv3 :: l), (gv3 <=* gv3 :: gv0), (gv3 <=* n1 :: bl), (gv3 <=* n1 :: l), (gv3 <=* n1 :: gv0), (gv3 <=* y :: bl)
(gv3 <=* y :: l), (gv3 <=* y :: gv0), (gv3 <=* selection_sort bl), (gv3 <=* selection_sort l), (gv3 <=* selection_sort gv0), (gv3 <=* selsort bl n0), (gv3 <=* selsort bl gv3), (gv3 <=* selsort bl n1), (gv3 <=* selsort bl y), (gv3 <=* selsort l n0)
(gv3 <=* selsort l gv3), (gv3 <=* selsort l n1), (gv3 <=* selsort l y), (gv3 <=* selsort gv0 n0), (gv3 <=* selsort gv0 gv3), (gv3 <=* selsort gv0 n1), (gv3 <=* selsort gv0 y), (gv3 <=* bl ++ bl), (gv3 <=* bl ++ l), (gv3 <=* bl ++ gv0)
(gv3 <=* l ++ bl), (gv3 <=* l ++ l), (gv3 <=* l ++ gv0), (gv3 <=* gv0 ++ bl), (gv3 <=* gv0 ++ l), (gv3 <=* gv0 ++ gv0), (gv3 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv0)
(n1 <=* gv3 :: bl), (n1 <=* gv3 :: l), (n1 <=* gv3 :: gv0), (n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv0), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv0), (n1 <=* selection_sort bl)
(n1 <=* selection_sort l), (n1 <=* selection_sort gv0), (n1 <=* selsort bl n0), (n1 <=* selsort bl gv3), (n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l gv3), (n1 <=* selsort l n1), (n1 <=* selsort l y)
(n1 <=* selsort gv0 n0), (n1 <=* selsort gv0 gv3), (n1 <=* selsort gv0 n1), (n1 <=* selsort gv0 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l), (n1 <=* bl ++ gv0), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv0)
(n1 <=* gv0 ++ bl), (n1 <=* gv0 ++ l), (n1 <=* gv0 ++ gv0), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l), (y <=* n0 :: gv0), (y <=* gv3 :: bl), (y <=* gv3 :: l), (y <=* gv3 :: gv0)
(y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv0), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv0), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv0), (y <=* selsort bl n0)
(y <=* selsort bl gv3), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l gv3), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv0 n0), (y <=* selsort gv0 gv3), (y <=* selsort gv0 n1)
(y <=* selsort gv0 y), (y <=* bl ++ bl), (y <=* bl ++ l), (y <=* bl ++ gv0), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv0), (y <=* gv0 ++ bl), (y <=* gv0 ++ l), (y <=* gv0 ++ gv0)
(y <=* []), (length bl <=* bl), (length bl <=* l), (length bl <=* gv0), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv0), (length bl <=* gv3 :: bl), (length bl <=* gv3 :: l), (length bl <=* gv3 :: gv0)
(length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv0), (length bl <=* y :: bl), (length bl <=* y :: l), (length bl <=* y :: gv0), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv0), (length bl <=* selsort bl n0)
(length bl <=* selsort bl gv3), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l gv3), (length bl <=* selsort l n1), (length bl <=* selsort l y), (length bl <=* selsort gv0 n0), (length bl <=* selsort gv0 gv3), (length bl <=* selsort gv0 n1)
(length bl <=* selsort gv0 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv0), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv0), (length bl <=* gv0 ++ bl), (length bl <=* gv0 ++ l), (length bl <=* gv0 ++ gv0)
(length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv0), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv0), (length l <=* gv3 :: bl), (length l <=* gv3 :: l), (length l <=* gv3 :: gv0)
(length l <=* n1 :: bl), (length l <=* n1 :: l), (length l <=* n1 :: gv0), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv0), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv0), (length l <=* selsort bl n0)
(length l <=* selsort bl gv3), (length l <=* selsort bl n1), (length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l gv3), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv0 n0), (length l <=* selsort gv0 gv3), (length l <=* selsort gv0 n1)
(length l <=* selsort gv0 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv0), (length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv0), (length l <=* gv0 ++ bl), (length l <=* gv0 ++ l), (length l <=* gv0 ++ gv0)
(length l <=* []), (length gv0 <=* bl), (length gv0 <=* l), (length gv0 <=* gv0), (length gv0 <=* n0 :: bl), (length gv0 <=* n0 :: l), (length gv0 <=* n0 :: gv0), (length gv0 <=* gv3 :: bl), (length gv0 <=* gv3 :: l), (length gv0 <=* gv3 :: gv0)
(length gv0 <=* n1 :: bl), (length gv0 <=* n1 :: l), (length gv0 <=* n1 :: gv0), (length gv0 <=* y :: bl), (length gv0 <=* y :: l), (length gv0 <=* y :: gv0), (length gv0 <=* selection_sort bl), (length gv0 <=* selection_sort l), (length gv0 <=* selection_sort gv0), (length gv0 <=* selsort bl n0)
(length gv0 <=* selsort bl gv3), (length gv0 <=* selsort bl n1), (length gv0 <=* selsort bl y), (length gv0 <=* selsort l n0), (length gv0 <=* selsort l gv3), (length gv0 <=* selsort l n1), (length gv0 <=* selsort l y), (length gv0 <=* selsort gv0 n0), (length gv0 <=* selsort gv0 gv3), (length gv0 <=* selsort gv0 n1)
(length gv0 <=* selsort gv0 y), (length gv0 <=* bl ++ bl), (length gv0 <=* bl ++ l), (length gv0 <=* bl ++ gv0), (length gv0 <=* l ++ bl), (length gv0 <=* l ++ l), (length gv0 <=* l ++ gv0), (length gv0 <=* gv0 ++ bl), (length gv0 <=* gv0 ++ l), (length gv0 <=* gv0 ++ gv0)
(length gv0 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv0)), (sorted (gv3 :: bl)), (sorted (gv3 :: l)), (sorted (gv3 :: gv0)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv0))
(sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv0)), (sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv0)), (sorted (selsort bl n0)), (sorted (selsort bl gv3)), (sorted (selsort bl n1)), (sorted (selsort bl y))
(sorted (selsort l n0)), (sorted (selsort l gv3)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv0 n0)), (sorted (selsort gv0 gv3)), (sorted (selsort gv0 n1)), (sorted (selsort gv0 y)), (sorted (bl ++ bl)), (sorted (bl ++ l))
(sorted (bl ++ gv0)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv0)), (sorted (gv0 ++ bl)), (sorted (gv0 ++ l)), (sorted (gv0 ++ gv0)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l))
(Permutation bl (n0 :: gv0)), (Permutation bl (gv3 :: bl)), (Permutation bl (gv3 :: l)), (Permutation bl (gv3 :: gv0)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv0)), (Permutation bl (y :: bl)), (Permutation bl (y :: l)), (Permutation bl (y :: gv0))
(Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv0)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl gv3)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l gv3)), (Permutation bl (selsort l n1))
(Permutation bl (selsort l y)), (Permutation bl (selsort gv0 n0)), (Permutation bl (selsort gv0 gv3)), (Permutation bl (selsort gv0 n1)), (Permutation bl (selsort gv0 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv0)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l))
(Permutation bl (l ++ gv0)), (Permutation bl (gv0 ++ bl)), (Permutation bl (gv0 ++ l)), (Permutation bl (gv0 ++ gv0)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv0)), (Permutation l (gv3 :: bl)), (Permutation l (gv3 :: l))
(Permutation l (gv3 :: gv0)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv0)), (Permutation l (y :: bl)), (Permutation l (y :: l)), (Permutation l (y :: gv0)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv0))
(Permutation l (selsort bl n0)), (Permutation l (selsort bl gv3)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l gv3)), (Permutation l (selsort l n1)), (Permutation l (selsort l y)), (Permutation l (selsort gv0 n0)), (Permutation l (selsort gv0 gv3))
(Permutation l (selsort gv0 n1)), (Permutation l (selsort gv0 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv0)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv0)), (Permutation l (gv0 ++ bl)), (Permutation l (gv0 ++ l))
(Permutation l (gv0 ++ gv0)), (Permutation l []), (Permutation gv0 (n0 :: bl)), (Permutation gv0 (n0 :: l)), (Permutation gv0 (n0 :: gv0)), (Permutation gv0 (gv3 :: bl)), (Permutation gv0 (gv3 :: l)), (Permutation gv0 (gv3 :: gv0)), (Permutation gv0 (n1 :: bl)), (Permutation gv0 (n1 :: l))
(Permutation gv0 (n1 :: gv0)), (Permutation gv0 (y :: bl)), (Permutation gv0 (y :: l)), (Permutation gv0 (y :: gv0)), (Permutation gv0 (selection_sort bl)), (Permutation gv0 (selection_sort l)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (selsort bl n0)), (Permutation gv0 (selsort bl gv3)), (Permutation gv0 (selsort bl n1))
(Permutation gv0 (selsort bl y)), (Permutation gv0 (selsort l n0)), (Permutation gv0 (selsort l gv3)), (Permutation gv0 (selsort l n1)), (Permutation gv0 (selsort l y)), (Permutation gv0 (selsort gv0 n0)), (Permutation gv0 (selsort gv0 gv3)), (Permutation gv0 (selsort gv0 n1)), (Permutation gv0 (selsort gv0 y)), (Permutation gv0 (bl ++ bl))
(Permutation gv0 (bl ++ l)), (Permutation gv0 (bl ++ gv0)), (Permutation gv0 (l ++ bl)), (Permutation gv0 (l ++ l)), (Permutation gv0 (l ++ gv0)), (Permutation gv0 (gv0 ++ bl)), (Permutation gv0 (gv0 ++ l)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (n0 :: bl) bl)
(Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv0), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv0)), (Permutation (n0 :: bl) (gv3 :: bl)), (Permutation (n0 :: bl) (gv3 :: l)), (Permutation (n0 :: bl) (gv3 :: gv0)), (Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv0))
(Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv0)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv0)), (Permutation (n0 :: bl) (selsort bl n0)), (Permutation (n0 :: bl) (selsort bl gv3)), (Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y))
(Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l gv3)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv0 n0)), (Permutation (n0 :: bl) (selsort gv0 gv3)), (Permutation (n0 :: bl) (selsort gv0 n1)), (Permutation (n0 :: bl) (selsort gv0 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv0)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv0)), (Permutation (n0 :: bl) (gv0 ++ bl)), (Permutation (n0 :: bl) (gv0 ++ l)), (Permutation (n0 :: bl) (gv0 ++ gv0)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv0)), (Permutation (n0 :: l) (gv3 :: bl)), (Permutation (n0 :: l) (gv3 :: l)), (Permutation (n0 :: l) (gv3 :: gv0)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv0)), (Permutation (n0 :: l) (y :: bl))
(Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv0)), (Permutation (n0 :: l) (selection_sort bl)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl gv3)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0))
(Permutation (n0 :: l) (selsort l gv3)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv0 n0)), (Permutation (n0 :: l) (selsort gv0 gv3)), (Permutation (n0 :: l) (selsort gv0 n1)), (Permutation (n0 :: l) (selsort gv0 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv0))
(Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv0)), (Permutation (n0 :: l) (gv0 ++ bl)), (Permutation (n0 :: l) (gv0 ++ l)), (Permutation (n0 :: l) (gv0 ++ gv0)), (Permutation (n0 :: l) []), (Permutation (n0 :: gv0) bl), (Permutation (n0 :: gv0) l), (Permutation (n0 :: gv0) gv0)
(Permutation (n0 :: gv0) (n0 :: bl)), (Permutation (n0 :: gv0) (n0 :: l)), (Permutation (n0 :: gv0) (gv3 :: bl)), (Permutation (n0 :: gv0) (gv3 :: l)), (Permutation (n0 :: gv0) (gv3 :: gv0)), (Permutation (n0 :: gv0) (n1 :: bl)), (Permutation (n0 :: gv0) (n1 :: l)), (Permutation (n0 :: gv0) (n1 :: gv0)), (Permutation (n0 :: gv0) (y :: bl)), (Permutation (n0 :: gv0) (y :: l))
(Permutation (n0 :: gv0) (y :: gv0)), (Permutation (n0 :: gv0) (selection_sort bl)), (Permutation (n0 :: gv0) (selection_sort l)), (Permutation (n0 :: gv0) (selection_sort gv0)), (Permutation (n0 :: gv0) (selsort bl n0)), (Permutation (n0 :: gv0) (selsort bl gv3)), (Permutation (n0 :: gv0) (selsort bl n1)), (Permutation (n0 :: gv0) (selsort bl y)), (Permutation (n0 :: gv0) (selsort l n0)), (Permutation (n0 :: gv0) (selsort l gv3))
(Permutation (n0 :: gv0) (selsort l n1)), (Permutation (n0 :: gv0) (selsort l y)), (Permutation (n0 :: gv0) (selsort gv0 n0)), (Permutation (n0 :: gv0) (selsort gv0 gv3)), (Permutation (n0 :: gv0) (selsort gv0 n1)), (Permutation (n0 :: gv0) (selsort gv0 y)), (Permutation (n0 :: gv0) (bl ++ bl)), (Permutation (n0 :: gv0) (bl ++ l)), (Permutation (n0 :: gv0) (bl ++ gv0)), (Permutation (n0 :: gv0) (l ++ bl))
(Permutation (n0 :: gv0) (l ++ l)), (Permutation (n0 :: gv0) (l ++ gv0)), (Permutation (n0 :: gv0) (gv0 ++ bl)), (Permutation (n0 :: gv0) (gv0 ++ l)), (Permutation (n0 :: gv0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) []), (Permutation (gv3 :: bl) bl), (Permutation (gv3 :: bl) l), (Permutation (gv3 :: bl) gv0), (Permutation (gv3 :: bl) (n0 :: bl))
(Permutation (gv3 :: bl) (n0 :: l)), (Permutation (gv3 :: bl) (n0 :: gv0)), (Permutation (gv3 :: bl) (gv3 :: l)), (Permutation (gv3 :: bl) (gv3 :: gv0)), (Permutation (gv3 :: bl) (n1 :: bl)), (Permutation (gv3 :: bl) (n1 :: l)), (Permutation (gv3 :: bl) (n1 :: gv0)), (Permutation (gv3 :: bl) (y :: bl)), (Permutation (gv3 :: bl) (y :: l)), (Permutation (gv3 :: bl) (y :: gv0))
(Permutation (gv3 :: bl) (selection_sort bl)), (Permutation (gv3 :: bl) (selection_sort l)), (Permutation (gv3 :: bl) (selection_sort gv0)), (Permutation (gv3 :: bl) (selsort bl n0)), (Permutation (gv3 :: bl) (selsort bl gv3)), (Permutation (gv3 :: bl) (selsort bl n1)), (Permutation (gv3 :: bl) (selsort bl y)), (Permutation (gv3 :: bl) (selsort l n0)), (Permutation (gv3 :: bl) (selsort l gv3)), (Permutation (gv3 :: bl) (selsort l n1))
(Permutation (gv3 :: bl) (selsort l y)), (Permutation (gv3 :: bl) (selsort gv0 n0)), (Permutation (gv3 :: bl) (selsort gv0 gv3)), (Permutation (gv3 :: bl) (selsort gv0 n1)), (Permutation (gv3 :: bl) (selsort gv0 y)), (Permutation (gv3 :: bl) (bl ++ bl)), (Permutation (gv3 :: bl) (bl ++ l)), (Permutation (gv3 :: bl) (bl ++ gv0)), (Permutation (gv3 :: bl) (l ++ bl)), (Permutation (gv3 :: bl) (l ++ l))
(Permutation (gv3 :: bl) (l ++ gv0)), (Permutation (gv3 :: bl) (gv0 ++ bl)), (Permutation (gv3 :: bl) (gv0 ++ l)), (Permutation (gv3 :: bl) (gv0 ++ gv0)), (Permutation (gv3 :: bl) []), (Permutation (gv3 :: l) bl), (Permutation (gv3 :: l) l), (Permutation (gv3 :: l) gv0), (Permutation (gv3 :: l) (n0 :: bl)), (Permutation (gv3 :: l) (n0 :: l))
(Permutation (gv3 :: l) (n0 :: gv0)), (Permutation (gv3 :: l) (gv3 :: bl)), (Permutation (gv3 :: l) (gv3 :: gv0)), (Permutation (gv3 :: l) (n1 :: bl)), (Permutation (gv3 :: l) (n1 :: l)), (Permutation (gv3 :: l) (n1 :: gv0)), (Permutation (gv3 :: l) (y :: bl)), (Permutation (gv3 :: l) (y :: l)), (Permutation (gv3 :: l) (y :: gv0)), (Permutation (gv3 :: l) (selection_sort bl))
(Permutation (gv3 :: l) (selection_sort l)), (Permutation (gv3 :: l) (selection_sort gv0)), (Permutation (gv3 :: l) (selsort bl n0)), (Permutation (gv3 :: l) (selsort bl gv3)), (Permutation (gv3 :: l) (selsort bl n1)), (Permutation (gv3 :: l) (selsort bl y)), (Permutation (gv3 :: l) (selsort l n0)), (Permutation (gv3 :: l) (selsort l gv3)), (Permutation (gv3 :: l) (selsort l n1)), (Permutation (gv3 :: l) (selsort l y))
(Permutation (gv3 :: l) (selsort gv0 n0)), (Permutation (gv3 :: l) (selsort gv0 gv3)), (Permutation (gv3 :: l) (selsort gv0 n1)), (Permutation (gv3 :: l) (selsort gv0 y)), (Permutation (gv3 :: l) (bl ++ bl)), (Permutation (gv3 :: l) (bl ++ l)), (Permutation (gv3 :: l) (bl ++ gv0)), (Permutation (gv3 :: l) (l ++ bl)), (Permutation (gv3 :: l) (l ++ l)), (Permutation (gv3 :: l) (l ++ gv0))
(Permutation (gv3 :: l) (gv0 ++ bl)), (Permutation (gv3 :: l) (gv0 ++ l)), (Permutation (gv3 :: l) (gv0 ++ gv0)), (Permutation (gv3 :: l) []), (Permutation (gv3 :: gv0) bl), (Permutation (gv3 :: gv0) l), (Permutation (gv3 :: gv0) gv0), (Permutation (gv3 :: gv0) (n0 :: bl)), (Permutation (gv3 :: gv0) (n0 :: l)), (Permutation (gv3 :: gv0) (n0 :: gv0))
(Permutation (gv3 :: gv0) (gv3 :: bl)), (Permutation (gv3 :: gv0) (gv3 :: l)), (Permutation (gv3 :: gv0) (n1 :: bl)), (Permutation (gv3 :: gv0) (n1 :: l)), (Permutation (gv3 :: gv0) (n1 :: gv0)), (Permutation (gv3 :: gv0) (y :: bl)), (Permutation (gv3 :: gv0) (y :: l)), (Permutation (gv3 :: gv0) (y :: gv0)), (Permutation (gv3 :: gv0) (selection_sort bl)), (Permutation (gv3 :: gv0) (selection_sort l))
(Permutation (gv3 :: gv0) (selection_sort gv0)), (Permutation (gv3 :: gv0) (selsort bl n0)), (Permutation (gv3 :: gv0) (selsort bl gv3)), (Permutation (gv3 :: gv0) (selsort bl n1)), (Permutation (gv3 :: gv0) (selsort bl y)), (Permutation (gv3 :: gv0) (selsort l n0)), (Permutation (gv3 :: gv0) (selsort l gv3)), (Permutation (gv3 :: gv0) (selsort l n1)), (Permutation (gv3 :: gv0) (selsort l y)), (Permutation (gv3 :: gv0) (selsort gv0 n0))
(Permutation (gv3 :: gv0) (selsort gv0 gv3)), (Permutation (gv3 :: gv0) (selsort gv0 n1)), (Permutation (gv3 :: gv0) (selsort gv0 y)), (Permutation (gv3 :: gv0) (bl ++ bl)), (Permutation (gv3 :: gv0) (bl ++ l)), (Permutation (gv3 :: gv0) (bl ++ gv0)), (Permutation (gv3 :: gv0) (l ++ bl)), (Permutation (gv3 :: gv0) (l ++ l)), (Permutation (gv3 :: gv0) (l ++ gv0)), (Permutation (gv3 :: gv0) (gv0 ++ bl))
(Permutation (gv3 :: gv0) (gv0 ++ l)), (Permutation (gv3 :: gv0) (gv0 ++ gv0)), (Permutation (gv3 :: gv0) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv0), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv0)), (Permutation (n1 :: bl) (gv3 :: bl))
(Permutation (n1 :: bl) (gv3 :: l)), (Permutation (n1 :: bl) (gv3 :: gv0)), (Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv0)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv0)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv0))
(Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl gv3)), (Permutation (n1 :: bl) (selsort bl n1)), (Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l gv3)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv0 n0)), (Permutation (n1 :: bl) (selsort gv0 gv3))
(Permutation (n1 :: bl) (selsort gv0 n1)), (Permutation (n1 :: bl) (selsort gv0 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv0)), (Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv0)), (Permutation (n1 :: bl) (gv0 ++ bl)), (Permutation (n1 :: bl) (gv0 ++ l))
(Permutation (n1 :: bl) (gv0 ++ gv0)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv0), (Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv0)), (Permutation (n1 :: l) (gv3 :: bl)), (Permutation (n1 :: l) (gv3 :: l))
(Permutation (n1 :: l) (gv3 :: gv0)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv0)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv0)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort gv0)), (Permutation (n1 :: l) (selsort bl n0))
(Permutation (n1 :: l) (selsort bl gv3)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l gv3)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv0 n0)), (Permutation (n1 :: l) (selsort gv0 gv3)), (Permutation (n1 :: l) (selsort gv0 n1))
(Permutation (n1 :: l) (selsort gv0 y)), (Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv0)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv0)), (Permutation (n1 :: l) (gv0 ++ bl)), (Permutation (n1 :: l) (gv0 ++ l)), (Permutation (n1 :: l) (gv0 ++ gv0))
(Permutation (n1 :: l) []), (Permutation (n1 :: gv0) bl), (Permutation (n1 :: gv0) l), (Permutation (n1 :: gv0) gv0), (Permutation (n1 :: gv0) (n0 :: bl)), (Permutation (n1 :: gv0) (n0 :: l)), (Permutation (n1 :: gv0) (n0 :: gv0)), (Permutation (n1 :: gv0) (gv3 :: bl)), (Permutation (n1 :: gv0) (gv3 :: l)), (Permutation (n1 :: gv0) (gv3 :: gv0))
(Permutation (n1 :: gv0) (n1 :: bl)), (Permutation (n1 :: gv0) (n1 :: l)), (Permutation (n1 :: gv0) (y :: bl)), (Permutation (n1 :: gv0) (y :: l)), (Permutation (n1 :: gv0) (y :: gv0)), (Permutation (n1 :: gv0) (selection_sort bl)), (Permutation (n1 :: gv0) (selection_sort l)), (Permutation (n1 :: gv0) (selection_sort gv0)), (Permutation (n1 :: gv0) (selsort bl n0)), (Permutation (n1 :: gv0) (selsort bl gv3))
(Permutation (n1 :: gv0) (selsort bl n1)), (Permutation (n1 :: gv0) (selsort bl y)), (Permutation (n1 :: gv0) (selsort l n0)), (Permutation (n1 :: gv0) (selsort l gv3)), (Permutation (n1 :: gv0) (selsort l n1)), (Permutation (n1 :: gv0) (selsort l y)), (Permutation (n1 :: gv0) (selsort gv0 n0)), (Permutation (n1 :: gv0) (selsort gv0 gv3)), (Permutation (n1 :: gv0) (selsort gv0 n1)), (Permutation (n1 :: gv0) (selsort gv0 y))
(Permutation (n1 :: gv0) (bl ++ bl)), (Permutation (n1 :: gv0) (bl ++ l)), (Permutation (n1 :: gv0) (bl ++ gv0)), (Permutation (n1 :: gv0) (l ++ bl)), (Permutation (n1 :: gv0) (l ++ l)), (Permutation (n1 :: gv0) (l ++ gv0)), (Permutation (n1 :: gv0) (gv0 ++ bl)), (Permutation (n1 :: gv0) (gv0 ++ l)), (Permutation (n1 :: gv0) (gv0 ++ gv0)), (Permutation (n1 :: gv0) [])
(Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv0), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv0)), (Permutation (y :: bl) (gv3 :: bl)), (Permutation (y :: bl) (gv3 :: l)), (Permutation (y :: bl) (gv3 :: gv0)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv0)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv0)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv0)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl gv3)), (Permutation (y :: bl) (selsort bl n1))
(Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l gv3)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv0 n0)), (Permutation (y :: bl) (selsort gv0 gv3)), (Permutation (y :: bl) (selsort gv0 n1)), (Permutation (y :: bl) (selsort gv0 y)), (Permutation (y :: bl) (bl ++ bl))
(Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv0)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv0)), (Permutation (y :: bl) (gv0 ++ bl)), (Permutation (y :: bl) (gv0 ++ l)), (Permutation (y :: bl) (gv0 ++ gv0)), (Permutation (y :: bl) []), (Permutation (y :: l) bl)
(Permutation (y :: l) l), (Permutation (y :: l) gv0), (Permutation (y :: l) (n0 :: bl)), (Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv0)), (Permutation (y :: l) (gv3 :: bl)), (Permutation (y :: l) (gv3 :: l)), (Permutation (y :: l) (gv3 :: gv0)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l))
(Permutation (y :: l) (n1 :: gv0)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv0)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv0)), (Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl gv3)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y))
(Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l gv3)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv0 n0)), (Permutation (y :: l) (selsort gv0 gv3)), (Permutation (y :: l) (selsort gv0 n1)), (Permutation (y :: l) (selsort gv0 y)), (Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) (bl ++ l))
(Permutation (y :: l) (bl ++ gv0)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv0)), (Permutation (y :: l) (gv0 ++ bl)), (Permutation (y :: l) (gv0 ++ l)), (Permutation (y :: l) (gv0 ++ gv0)), (Permutation (y :: l) []), (Permutation (y :: gv0) bl), (Permutation (y :: gv0) l)
(Permutation (y :: gv0) gv0), (Permutation (y :: gv0) (n0 :: bl)), (Permutation (y :: gv0) (n0 :: l)), (Permutation (y :: gv0) (n0 :: gv0)), (Permutation (y :: gv0) (gv3 :: bl)), (Permutation (y :: gv0) (gv3 :: l)), (Permutation (y :: gv0) (gv3 :: gv0)), (Permutation (y :: gv0) (n1 :: bl)), (Permutation (y :: gv0) (n1 :: l)), (Permutation (y :: gv0) (n1 :: gv0))
(Permutation (y :: gv0) (y :: bl)), (Permutation (y :: gv0) (y :: l)), (Permutation (y :: gv0) (selection_sort bl)), (Permutation (y :: gv0) (selection_sort l)), (Permutation (y :: gv0) (selection_sort gv0)), (Permutation (y :: gv0) (selsort bl n0)), (Permutation (y :: gv0) (selsort bl gv3)), (Permutation (y :: gv0) (selsort bl n1)), (Permutation (y :: gv0) (selsort bl y)), (Permutation (y :: gv0) (selsort l n0))
(Permutation (y :: gv0) (selsort l gv3)), (Permutation (y :: gv0) (selsort l n1)), (Permutation (y :: gv0) (selsort l y)), (Permutation (y :: gv0) (selsort gv0 n0)), (Permutation (y :: gv0) (selsort gv0 gv3)), (Permutation (y :: gv0) (selsort gv0 n1)), (Permutation (y :: gv0) (selsort gv0 y)), (Permutation (y :: gv0) (bl ++ bl)), (Permutation (y :: gv0) (bl ++ l)), (Permutation (y :: gv0) (bl ++ gv0))
(Permutation (y :: gv0) (l ++ bl)), (Permutation (y :: gv0) (l ++ l)), (Permutation (y :: gv0) (l ++ gv0)), (Permutation (y :: gv0) (gv0 ++ bl)), (Permutation (y :: gv0) (gv0 ++ l)), (Permutation (y :: gv0) (gv0 ++ gv0)), (Permutation (y :: gv0) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv0)
(Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv0)), (Permutation (selection_sort bl) (gv3 :: bl)), (Permutation (selection_sort bl) (gv3 :: l)), (Permutation (selection_sort bl) (gv3 :: gv0)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l)), (Permutation (selection_sort bl) (n1 :: gv0)), (Permutation (selection_sort bl) (y :: bl))
(Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv0)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv0)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl gv3)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0)), (Permutation (selection_sort bl) (selsort l gv3))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv0 n0)), (Permutation (selection_sort bl) (selsort gv0 gv3)), (Permutation (selection_sort bl) (selsort gv0 n1)), (Permutation (selection_sort bl) (selsort gv0 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv0)), (Permutation (selection_sort bl) (l ++ bl))
(Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) (l ++ gv0)), (Permutation (selection_sort bl) (gv0 ++ bl)), (Permutation (selection_sort bl) (gv0 ++ l)), (Permutation (selection_sort bl) (gv0 ++ gv0)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv0), (Permutation (selection_sort l) (n0 :: bl))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n0 :: gv0)), (Permutation (selection_sort l) (gv3 :: bl)), (Permutation (selection_sort l) (gv3 :: l)), (Permutation (selection_sort l) (gv3 :: gv0)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv0)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l))
(Permutation (selection_sort l) (y :: gv0)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv0)), (Permutation (selection_sort l) (selsort bl n0)), (Permutation (selection_sort l) (selsort bl gv3)), (Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l gv3)), (Permutation (selection_sort l) (selsort l n1))
(Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv0 n0)), (Permutation (selection_sort l) (selsort gv0 gv3)), (Permutation (selection_sort l) (selsort gv0 n1)), (Permutation (selection_sort l) (selsort gv0 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (bl ++ gv0)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l))
(Permutation (selection_sort l) (l ++ gv0)), (Permutation (selection_sort l) (gv0 ++ bl)), (Permutation (selection_sort l) (gv0 ++ l)), (Permutation (selection_sort l) (gv0 ++ gv0)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv0) bl), (Permutation (selection_sort gv0) l), (Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (n0 :: bl)), (Permutation (selection_sort gv0) (n0 :: l))
(Permutation (selection_sort gv0) (n0 :: gv0)), (Permutation (selection_sort gv0) (gv3 :: bl)), (Permutation (selection_sort gv0) (gv3 :: l)), (Permutation (selection_sort gv0) (gv3 :: gv0)), (Permutation (selection_sort gv0) (n1 :: bl)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: gv0)), (Permutation (selection_sort gv0) (y :: bl)), (Permutation (selection_sort gv0) (y :: l)), (Permutation (selection_sort gv0) (y :: gv0))
(Permutation (selection_sort gv0) (selection_sort bl)), (Permutation (selection_sort gv0) (selection_sort l)), (Permutation (selection_sort gv0) (selsort bl n0)), (Permutation (selection_sort gv0) (selsort bl gv3)), (Permutation (selection_sort gv0) (selsort bl n1)), (Permutation (selection_sort gv0) (selsort bl y)), (Permutation (selection_sort gv0) (selsort l n0)), (Permutation (selection_sort gv0) (selsort l gv3)), (Permutation (selection_sort gv0) (selsort l n1)), (Permutation (selection_sort gv0) (selsort l y))
(Permutation (selection_sort gv0) (selsort gv0 n0)), (Permutation (selection_sort gv0) (selsort gv0 gv3)), (Permutation (selection_sort gv0) (selsort gv0 n1)), (Permutation (selection_sort gv0) (selsort gv0 y)), (Permutation (selection_sort gv0) (bl ++ bl)), (Permutation (selection_sort gv0) (bl ++ l)), (Permutation (selection_sort gv0) (bl ++ gv0)), (Permutation (selection_sort gv0) (l ++ bl)), (Permutation (selection_sort gv0) (l ++ l)), (Permutation (selection_sort gv0) (l ++ gv0))
(Permutation (selection_sort gv0) (gv0 ++ bl)), (Permutation (selection_sort gv0) (gv0 ++ l)), (Permutation (selection_sort gv0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv0), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv0))
(Permutation (selsort bl n0) (gv3 :: bl)), (Permutation (selsort bl n0) (gv3 :: l)), (Permutation (selsort bl n0) (gv3 :: gv0)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv0)), (Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv0)), (Permutation (selsort bl n0) (selection_sort bl))
(Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv0)), (Permutation (selsort bl n0) (selsort bl gv3)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l gv3)), (Permutation (selsort bl n0) (selsort l n1)), (Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv0 n0))
(Permutation (selsort bl n0) (selsort gv0 gv3)), (Permutation (selsort bl n0) (selsort gv0 n1)), (Permutation (selsort bl n0) (selsort gv0 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv0)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv0)), (Permutation (selsort bl n0) (gv0 ++ bl))
(Permutation (selsort bl n0) (gv0 ++ l)), (Permutation (selsort bl n0) (gv0 ++ gv0)), (Permutation (selsort bl n0) []), (Permutation (selsort bl gv3) bl), (Permutation (selsort bl gv3) l), (Permutation (selsort bl gv3) gv0), (Permutation (selsort bl gv3) (n0 :: bl)), (Permutation (selsort bl gv3) (n0 :: l)), (Permutation (selsort bl gv3) (n0 :: gv0)), (Permutation (selsort bl gv3) (gv3 :: bl))
(Permutation (selsort bl gv3) (gv3 :: l)), (Permutation (selsort bl gv3) (gv3 :: gv0)), (Permutation (selsort bl gv3) (n1 :: bl)), (Permutation (selsort bl gv3) (n1 :: l)), (Permutation (selsort bl gv3) (n1 :: gv0)), (Permutation (selsort bl gv3) (y :: bl)), (Permutation (selsort bl gv3) (y :: l)), (Permutation (selsort bl gv3) (y :: gv0)), (Permutation (selsort bl gv3) (selection_sort bl)), (Permutation (selsort bl gv3) (selection_sort l))
(Permutation (selsort bl gv3) (selection_sort gv0)), (Permutation (selsort bl gv3) (selsort bl n0)), (Permutation (selsort bl gv3) (selsort bl n1)), (Permutation (selsort bl gv3) (selsort bl y)), (Permutation (selsort bl gv3) (selsort l n0)), (Permutation (selsort bl gv3) (selsort l gv3)), (Permutation (selsort bl gv3) (selsort l n1)), (Permutation (selsort bl gv3) (selsort l y)), (Permutation (selsort bl gv3) (selsort gv0 n0)), (Permutation (selsort bl gv3) (selsort gv0 gv3))
(Permutation (selsort bl gv3) (selsort gv0 n1)), (Permutation (selsort bl gv3) (selsort gv0 y)), (Permutation (selsort bl gv3) (bl ++ bl)), (Permutation (selsort bl gv3) (bl ++ l)), (Permutation (selsort bl gv3) (bl ++ gv0)), (Permutation (selsort bl gv3) (l ++ bl)), (Permutation (selsort bl gv3) (l ++ l)), (Permutation (selsort bl gv3) (l ++ gv0)), (Permutation (selsort bl gv3) (gv0 ++ bl)), (Permutation (selsort bl gv3) (gv0 ++ l))
(Permutation (selsort bl gv3) (gv0 ++ gv0)), (Permutation (selsort bl gv3) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv0), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv0)), (Permutation (selsort bl n1) (gv3 :: bl)), (Permutation (selsort bl n1) (gv3 :: l))
(Permutation (selsort bl n1) (gv3 :: gv0)), (Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv0)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv0)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv0))
(Permutation (selsort bl n1) (selsort bl n0)), (Permutation (selsort bl n1) (selsort bl gv3)), (Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l gv3)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv0 n0)), (Permutation (selsort bl n1) (selsort gv0 gv3)), (Permutation (selsort bl n1) (selsort gv0 n1))
(Permutation (selsort bl n1) (selsort gv0 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv0)), (Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv0)), (Permutation (selsort bl n1) (gv0 ++ bl)), (Permutation (selsort bl n1) (gv0 ++ l)), (Permutation (selsort bl n1) (gv0 ++ gv0))
(Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv0), (Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv0)), (Permutation (selsort bl y) (gv3 :: bl)), (Permutation (selsort bl y) (gv3 :: l)), (Permutation (selsort bl y) (gv3 :: gv0))
(Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv0)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv0)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv0)), (Permutation (selsort bl y) (selsort bl n0))
(Permutation (selsort bl y) (selsort bl gv3)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l gv3)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv0 n0)), (Permutation (selsort bl y) (selsort gv0 gv3)), (Permutation (selsort bl y) (selsort gv0 n1)), (Permutation (selsort bl y) (selsort gv0 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv0)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv0)), (Permutation (selsort bl y) (gv0 ++ bl)), (Permutation (selsort bl y) (gv0 ++ l)), (Permutation (selsort bl y) (gv0 ++ gv0)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv0), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv0)), (Permutation (selsort l n0) (gv3 :: bl)), (Permutation (selsort l n0) (gv3 :: l)), (Permutation (selsort l n0) (gv3 :: gv0)), (Permutation (selsort l n0) (n1 :: bl))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv0)), (Permutation (selsort l n0) (y :: bl)), (Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv0)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv0)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl gv3))
(Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l gv3)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y)), (Permutation (selsort l n0) (selsort gv0 n0)), (Permutation (selsort l n0) (selsort gv0 gv3)), (Permutation (selsort l n0) (selsort gv0 n1)), (Permutation (selsort l n0) (selsort gv0 y)), (Permutation (selsort l n0) (bl ++ bl))
(Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv0)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv0)), (Permutation (selsort l n0) (gv0 ++ bl)), (Permutation (selsort l n0) (gv0 ++ l)), (Permutation (selsort l n0) (gv0 ++ gv0)), (Permutation (selsort l n0) []), (Permutation (selsort l gv3) bl)
(Permutation (selsort l gv3) l), (Permutation (selsort l gv3) gv0), (Permutation (selsort l gv3) (n0 :: bl)), (Permutation (selsort l gv3) (n0 :: l)), (Permutation (selsort l gv3) (n0 :: gv0)), (Permutation (selsort l gv3) (gv3 :: bl)), (Permutation (selsort l gv3) (gv3 :: l)), (Permutation (selsort l gv3) (gv3 :: gv0)), (Permutation (selsort l gv3) (n1 :: bl)), (Permutation (selsort l gv3) (n1 :: l))
(Permutation (selsort l gv3) (n1 :: gv0)), (Permutation (selsort l gv3) (y :: bl)), (Permutation (selsort l gv3) (y :: l)), (Permutation (selsort l gv3) (y :: gv0)), (Permutation (selsort l gv3) (selection_sort bl)), (Permutation (selsort l gv3) (selection_sort l)), (Permutation (selsort l gv3) (selection_sort gv0)), (Permutation (selsort l gv3) (selsort bl n0)), (Permutation (selsort l gv3) (selsort bl gv3)), (Permutation (selsort l gv3) (selsort bl n1))
(Permutation (selsort l gv3) (selsort bl y)), (Permutation (selsort l gv3) (selsort l n0)), (Permutation (selsort l gv3) (selsort l n1)), (Permutation (selsort l gv3) (selsort l y)), (Permutation (selsort l gv3) (selsort gv0 n0)), (Permutation (selsort l gv3) (selsort gv0 gv3)), (Permutation (selsort l gv3) (selsort gv0 n1)), (Permutation (selsort l gv3) (selsort gv0 y)), (Permutation (selsort l gv3) (bl ++ bl)), (Permutation (selsort l gv3) (bl ++ l))
(Permutation (selsort l gv3) (bl ++ gv0)), (Permutation (selsort l gv3) (l ++ bl)), (Permutation (selsort l gv3) (l ++ l)), (Permutation (selsort l gv3) (l ++ gv0)), (Permutation (selsort l gv3) (gv0 ++ bl)), (Permutation (selsort l gv3) (gv0 ++ l)), (Permutation (selsort l gv3) (gv0 ++ gv0)), (Permutation (selsort l gv3) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l)
(Permutation (selsort l n1) gv0), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv0)), (Permutation (selsort l n1) (gv3 :: bl)), (Permutation (selsort l n1) (gv3 :: l)), (Permutation (selsort l n1) (gv3 :: gv0)), (Permutation (selsort l n1) (n1 :: bl)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv0))
(Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv0)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv0)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl gv3)), (Permutation (selsort l n1) (selsort bl n1)), (Permutation (selsort l n1) (selsort bl y))
(Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l gv3)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv0 n0)), (Permutation (selsort l n1) (selsort gv0 gv3)), (Permutation (selsort l n1) (selsort gv0 n1)), (Permutation (selsort l n1) (selsort gv0 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv0))
(Permutation (selsort l n1) (l ++ bl)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv0)), (Permutation (selsort l n1) (gv0 ++ bl)), (Permutation (selsort l n1) (gv0 ++ l)), (Permutation (selsort l n1) (gv0 ++ gv0)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv0)
(Permutation (selsort l y) (n0 :: bl)), (Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv0)), (Permutation (selsort l y) (gv3 :: bl)), (Permutation (selsort l y) (gv3 :: l)), (Permutation (selsort l y) (gv3 :: gv0)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv0)), (Permutation (selsort l y) (y :: bl))
(Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv0)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort gv0)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl gv3)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0))
(Permutation (selsort l y) (selsort l gv3)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv0 n0)), (Permutation (selsort l y) (selsort gv0 gv3)), (Permutation (selsort l y) (selsort gv0 n1)), (Permutation (selsort l y) (selsort gv0 y)), (Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv0)), (Permutation (selsort l y) (l ++ bl))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv0)), (Permutation (selsort l y) (gv0 ++ bl)), (Permutation (selsort l y) (gv0 ++ l)), (Permutation (selsort l y) (gv0 ++ gv0)), (Permutation (selsort l y) []), (Permutation (selsort gv0 n0) bl), (Permutation (selsort gv0 n0) l), (Permutation (selsort gv0 n0) gv0), (Permutation (selsort gv0 n0) (n0 :: bl))
(Permutation (selsort gv0 n0) (n0 :: l)), (Permutation (selsort gv0 n0) (n0 :: gv0)), (Permutation (selsort gv0 n0) (gv3 :: bl)), (Permutation (selsort gv0 n0) (gv3 :: l)), (Permutation (selsort gv0 n0) (gv3 :: gv0)), (Permutation (selsort gv0 n0) (n1 :: bl)), (Permutation (selsort gv0 n0) (n1 :: l)), (Permutation (selsort gv0 n0) (n1 :: gv0)), (Permutation (selsort gv0 n0) (y :: bl)), (Permutation (selsort gv0 n0) (y :: l))
(Permutation (selsort gv0 n0) (y :: gv0)), (Permutation (selsort gv0 n0) (selection_sort bl)), (Permutation (selsort gv0 n0) (selection_sort l)), (Permutation (selsort gv0 n0) (selection_sort gv0)), (Permutation (selsort gv0 n0) (selsort bl n0)), (Permutation (selsort gv0 n0) (selsort bl gv3)), (Permutation (selsort gv0 n0) (selsort bl n1)), (Permutation (selsort gv0 n0) (selsort bl y)), (Permutation (selsort gv0 n0) (selsort l n0)), (Permutation (selsort gv0 n0) (selsort l gv3))
(Permutation (selsort gv0 n0) (selsort l n1)), (Permutation (selsort gv0 n0) (selsort l y)), (Permutation (selsort gv0 n0) (selsort gv0 gv3)), (Permutation (selsort gv0 n0) (selsort gv0 n1)), (Permutation (selsort gv0 n0) (selsort gv0 y)), (Permutation (selsort gv0 n0) (bl ++ bl)), (Permutation (selsort gv0 n0) (bl ++ l)), (Permutation (selsort gv0 n0) (bl ++ gv0)), (Permutation (selsort gv0 n0) (l ++ bl)), (Permutation (selsort gv0 n0) (l ++ l))
(Permutation (selsort gv0 n0) (l ++ gv0)), (Permutation (selsort gv0 n0) (gv0 ++ bl)), (Permutation (selsort gv0 n0) (gv0 ++ l)), (Permutation (selsort gv0 n0) (gv0 ++ gv0)), (Permutation (selsort gv0 n0) []), (Permutation (selsort gv0 gv3) bl), (Permutation (selsort gv0 gv3) l), (Permutation (selsort gv0 gv3) gv0), (Permutation (selsort gv0 gv3) (n0 :: bl)), (Permutation (selsort gv0 gv3) (n0 :: l))
(Permutation (selsort gv0 gv3) (n0 :: gv0)), (Permutation (selsort gv0 gv3) (gv3 :: bl)), (Permutation (selsort gv0 gv3) (gv3 :: l)), (Permutation (selsort gv0 gv3) (gv3 :: gv0)), (Permutation (selsort gv0 gv3) (n1 :: bl)), (Permutation (selsort gv0 gv3) (n1 :: l)), (Permutation (selsort gv0 gv3) (n1 :: gv0)), (Permutation (selsort gv0 gv3) (y :: bl)), (Permutation (selsort gv0 gv3) (y :: l)), (Permutation (selsort gv0 gv3) (y :: gv0))
(Permutation (selsort gv0 gv3) (selection_sort bl)), (Permutation (selsort gv0 gv3) (selection_sort l)), (Permutation (selsort gv0 gv3) (selection_sort gv0)), (Permutation (selsort gv0 gv3) (selsort bl n0)), (Permutation (selsort gv0 gv3) (selsort bl gv3)), (Permutation (selsort gv0 gv3) (selsort bl n1)), (Permutation (selsort gv0 gv3) (selsort bl y)), (Permutation (selsort gv0 gv3) (selsort l n0)), (Permutation (selsort gv0 gv3) (selsort l gv3)), (Permutation (selsort gv0 gv3) (selsort l n1))
(Permutation (selsort gv0 gv3) (selsort l y)), (Permutation (selsort gv0 gv3) (selsort gv0 n0)), (Permutation (selsort gv0 gv3) (selsort gv0 n1)), (Permutation (selsort gv0 gv3) (selsort gv0 y)), (Permutation (selsort gv0 gv3) (bl ++ bl)), (Permutation (selsort gv0 gv3) (bl ++ l)), (Permutation (selsort gv0 gv3) (bl ++ gv0)), (Permutation (selsort gv0 gv3) (l ++ bl)), (Permutation (selsort gv0 gv3) (l ++ l)), (Permutation (selsort gv0 gv3) (l ++ gv0))
(Permutation (selsort gv0 gv3) (gv0 ++ bl)), (Permutation (selsort gv0 gv3) (gv0 ++ l)), (Permutation (selsort gv0 gv3) (gv0 ++ gv0)), (Permutation (selsort gv0 gv3) []), (Permutation (selsort gv0 n1) bl), (Permutation (selsort gv0 n1) l), (Permutation (selsort gv0 n1) gv0), (Permutation (selsort gv0 n1) (n0 :: bl)), (Permutation (selsort gv0 n1) (n0 :: l)), (Permutation (selsort gv0 n1) (n0 :: gv0))
(Permutation (selsort gv0 n1) (gv3 :: bl)), (Permutation (selsort gv0 n1) (gv3 :: l)), (Permutation (selsort gv0 n1) (gv3 :: gv0)), (Permutation (selsort gv0 n1) (n1 :: bl)), (Permutation (selsort gv0 n1) (n1 :: l)), (Permutation (selsort gv0 n1) (n1 :: gv0)), (Permutation (selsort gv0 n1) (y :: bl)), (Permutation (selsort gv0 n1) (y :: l)), (Permutation (selsort gv0 n1) (y :: gv0)), (Permutation (selsort gv0 n1) (selection_sort bl))
(Permutation (selsort gv0 n1) (selection_sort l)), (Permutation (selsort gv0 n1) (selection_sort gv0)), (Permutation (selsort gv0 n1) (selsort bl n0)), (Permutation (selsort gv0 n1) (selsort bl gv3)), (Permutation (selsort gv0 n1) (selsort bl n1)), (Permutation (selsort gv0 n1) (selsort bl y)), (Permutation (selsort gv0 n1) (selsort l n0)), (Permutation (selsort gv0 n1) (selsort l gv3)), (Permutation (selsort gv0 n1) (selsort l n1)), (Permutation (selsort gv0 n1) (selsort l y))
(Permutation (selsort gv0 n1) (selsort gv0 n0)), (Permutation (selsort gv0 n1) (selsort gv0 gv3)), (Permutation (selsort gv0 n1) (selsort gv0 y)), (Permutation (selsort gv0 n1) (bl ++ bl)), (Permutation (selsort gv0 n1) (bl ++ l)), (Permutation (selsort gv0 n1) (bl ++ gv0)), (Permutation (selsort gv0 n1) (l ++ bl)), (Permutation (selsort gv0 n1) (l ++ l)), (Permutation (selsort gv0 n1) (l ++ gv0)), (Permutation (selsort gv0 n1) (gv0 ++ bl))
(Permutation (selsort gv0 n1) (gv0 ++ l)), (Permutation (selsort gv0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n1) []), (Permutation (selsort gv0 y) bl), (Permutation (selsort gv0 y) l), (Permutation (selsort gv0 y) gv0), (Permutation (selsort gv0 y) (n0 :: bl)), (Permutation (selsort gv0 y) (n0 :: l)), (Permutation (selsort gv0 y) (n0 :: gv0)), (Permutation (selsort gv0 y) (gv3 :: bl))
(Permutation (selsort gv0 y) (gv3 :: l)), (Permutation (selsort gv0 y) (gv3 :: gv0)), (Permutation (selsort gv0 y) (n1 :: bl)), (Permutation (selsort gv0 y) (n1 :: l)), (Permutation (selsort gv0 y) (n1 :: gv0)), (Permutation (selsort gv0 y) (y :: bl)), (Permutation (selsort gv0 y) (y :: l)), (Permutation (selsort gv0 y) (y :: gv0)), (Permutation (selsort gv0 y) (selection_sort bl)), (Permutation (selsort gv0 y) (selection_sort l))
(Permutation (selsort gv0 y) (selection_sort gv0)), (Permutation (selsort gv0 y) (selsort bl n0)), (Permutation (selsort gv0 y) (selsort bl gv3)), (Permutation (selsort gv0 y) (selsort bl n1)), (Permutation (selsort gv0 y) (selsort bl y)), (Permutation (selsort gv0 y) (selsort l n0)), (Permutation (selsort gv0 y) (selsort l gv3)), (Permutation (selsort gv0 y) (selsort l n1)), (Permutation (selsort gv0 y) (selsort l y)), (Permutation (selsort gv0 y) (selsort gv0 n0))
(Permutation (selsort gv0 y) (selsort gv0 gv3)), (Permutation (selsort gv0 y) (selsort gv0 n1)), (Permutation (selsort gv0 y) (bl ++ bl)), (Permutation (selsort gv0 y) (bl ++ l)), (Permutation (selsort gv0 y) (bl ++ gv0)), (Permutation (selsort gv0 y) (l ++ bl)), (Permutation (selsort gv0 y) (l ++ l)), (Permutation (selsort gv0 y) (l ++ gv0)), (Permutation (selsort gv0 y) (gv0 ++ bl)), (Permutation (selsort gv0 y) (gv0 ++ l))
(Permutation (selsort gv0 y) (gv0 ++ gv0)), (Permutation (selsort gv0 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) gv0), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv0)), (Permutation (bl ++ bl) (gv3 :: bl)), (Permutation (bl ++ bl) (gv3 :: l))
(Permutation (bl ++ bl) (gv3 :: gv0)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv0)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv0)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv0))
(Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl gv3)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l gv3)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv0 n0)), (Permutation (bl ++ bl) (selsort gv0 gv3))
(Permutation (bl ++ bl) (selsort gv0 n1)), (Permutation (bl ++ bl) (selsort gv0 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv0)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv0)), (Permutation (bl ++ bl) (gv0 ++ bl)), (Permutation (bl ++ bl) (gv0 ++ l)), (Permutation (bl ++ bl) (gv0 ++ gv0))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv0), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv0)), (Permutation (bl ++ l) (gv3 :: bl)), (Permutation (bl ++ l) (gv3 :: l)), (Permutation (bl ++ l) (gv3 :: gv0))
(Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv0)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv0)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv0)), (Permutation (bl ++ l) (selsort bl n0))
(Permutation (bl ++ l) (selsort bl gv3)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0)), (Permutation (bl ++ l) (selsort l gv3)), (Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv0 n0)), (Permutation (bl ++ l) (selsort gv0 gv3)), (Permutation (bl ++ l) (selsort gv0 n1))
(Permutation (bl ++ l) (selsort gv0 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv0)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv0)), (Permutation (bl ++ l) (gv0 ++ bl)), (Permutation (bl ++ l) (gv0 ++ l)), (Permutation (bl ++ l) (gv0 ++ gv0)), (Permutation (bl ++ l) [])
(Permutation (bl ++ gv0) bl), (Permutation (bl ++ gv0) l), (Permutation (bl ++ gv0) gv0), (Permutation (bl ++ gv0) (n0 :: bl)), (Permutation (bl ++ gv0) (n0 :: l)), (Permutation (bl ++ gv0) (n0 :: gv0)), (Permutation (bl ++ gv0) (gv3 :: bl)), (Permutation (bl ++ gv0) (gv3 :: l)), (Permutation (bl ++ gv0) (gv3 :: gv0)), (Permutation (bl ++ gv0) (n1 :: bl))
(Permutation (bl ++ gv0) (n1 :: l)), (Permutation (bl ++ gv0) (n1 :: gv0)), (Permutation (bl ++ gv0) (y :: bl)), (Permutation (bl ++ gv0) (y :: l)), (Permutation (bl ++ gv0) (y :: gv0)), (Permutation (bl ++ gv0) (selection_sort bl)), (Permutation (bl ++ gv0) (selection_sort l)), (Permutation (bl ++ gv0) (selection_sort gv0)), (Permutation (bl ++ gv0) (selsort bl n0)), (Permutation (bl ++ gv0) (selsort bl gv3))
(Permutation (bl ++ gv0) (selsort bl n1)), (Permutation (bl ++ gv0) (selsort bl y)), (Permutation (bl ++ gv0) (selsort l n0)), (Permutation (bl ++ gv0) (selsort l gv3)), (Permutation (bl ++ gv0) (selsort l n1)), (Permutation (bl ++ gv0) (selsort l y)), (Permutation (bl ++ gv0) (selsort gv0 n0)), (Permutation (bl ++ gv0) (selsort gv0 gv3)), (Permutation (bl ++ gv0) (selsort gv0 n1)), (Permutation (bl ++ gv0) (selsort gv0 y))
(Permutation (bl ++ gv0) (bl ++ bl)), (Permutation (bl ++ gv0) (bl ++ l)), (Permutation (bl ++ gv0) (l ++ bl)), (Permutation (bl ++ gv0) (l ++ l)), (Permutation (bl ++ gv0) (l ++ gv0)), (Permutation (bl ++ gv0) (gv0 ++ bl)), (Permutation (bl ++ gv0) (gv0 ++ l)), (Permutation (bl ++ gv0) (gv0 ++ gv0)), (Permutation (bl ++ gv0) []), (Permutation (l ++ bl) bl)
(Permutation (l ++ bl) l), (Permutation (l ++ bl) gv0), (Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv0)), (Permutation (l ++ bl) (gv3 :: bl)), (Permutation (l ++ bl) (gv3 :: l)), (Permutation (l ++ bl) (gv3 :: gv0)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l))
(Permutation (l ++ bl) (n1 :: gv0)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv0)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv0)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl gv3)), (Permutation (l ++ bl) (selsort bl n1))
(Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l gv3)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv0 n0)), (Permutation (l ++ bl) (selsort gv0 gv3)), (Permutation (l ++ bl) (selsort gv0 n1)), (Permutation (l ++ bl) (selsort gv0 y)), (Permutation (l ++ bl) (bl ++ bl))
(Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv0)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv0)), (Permutation (l ++ bl) (gv0 ++ bl)), (Permutation (l ++ bl) (gv0 ++ l)), (Permutation (l ++ bl) (gv0 ++ gv0)), (Permutation (l ++ bl) []), (Permutation (l ++ l) bl), (Permutation (l ++ l) l)
(Permutation (l ++ l) gv0), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv0)), (Permutation (l ++ l) (gv3 :: bl)), (Permutation (l ++ l) (gv3 :: l)), (Permutation (l ++ l) (gv3 :: gv0)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv0))
(Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv0)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv0)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl gv3)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y))
(Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l gv3)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv0 n0)), (Permutation (l ++ l) (selsort gv0 gv3)), (Permutation (l ++ l) (selsort gv0 n1)), (Permutation (l ++ l) (selsort gv0 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l))
(Permutation (l ++ l) (bl ++ gv0)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv0)), (Permutation (l ++ l) (gv0 ++ bl)), (Permutation (l ++ l) (gv0 ++ l)), (Permutation (l ++ l) (gv0 ++ gv0)), (Permutation (l ++ l) []), (Permutation (l ++ gv0) bl), (Permutation (l ++ gv0) l), (Permutation (l ++ gv0) gv0)
(Permutation (l ++ gv0) (n0 :: bl)), (Permutation (l ++ gv0) (n0 :: l)), (Permutation (l ++ gv0) (n0 :: gv0)), (Permutation (l ++ gv0) (gv3 :: bl)), (Permutation (l ++ gv0) (gv3 :: l)), (Permutation (l ++ gv0) (gv3 :: gv0)), (Permutation (l ++ gv0) (n1 :: bl)), (Permutation (l ++ gv0) (n1 :: l)), (Permutation (l ++ gv0) (n1 :: gv0)), (Permutation (l ++ gv0) (y :: bl))
(Permutation (l ++ gv0) (y :: l)), (Permutation (l ++ gv0) (y :: gv0)), (Permutation (l ++ gv0) (selection_sort bl)), (Permutation (l ++ gv0) (selection_sort l)), (Permutation (l ++ gv0) (selection_sort gv0)), (Permutation (l ++ gv0) (selsort bl n0)), (Permutation (l ++ gv0) (selsort bl gv3)), (Permutation (l ++ gv0) (selsort bl n1)), (Permutation (l ++ gv0) (selsort bl y)), (Permutation (l ++ gv0) (selsort l n0))
(Permutation (l ++ gv0) (selsort l gv3)), (Permutation (l ++ gv0) (selsort l n1)), (Permutation (l ++ gv0) (selsort l y)), (Permutation (l ++ gv0) (selsort gv0 n0)), (Permutation (l ++ gv0) (selsort gv0 gv3)), (Permutation (l ++ gv0) (selsort gv0 n1)), (Permutation (l ++ gv0) (selsort gv0 y)), (Permutation (l ++ gv0) (bl ++ bl)), (Permutation (l ++ gv0) (bl ++ l)), (Permutation (l ++ gv0) (bl ++ gv0))
(Permutation (l ++ gv0) (l ++ bl)), (Permutation (l ++ gv0) (l ++ l)), (Permutation (l ++ gv0) (gv0 ++ bl)), (Permutation (l ++ gv0) (gv0 ++ l)), (Permutation (l ++ gv0) (gv0 ++ gv0)), (Permutation (l ++ gv0) []), (Permutation (gv0 ++ bl) bl), (Permutation (gv0 ++ bl) l), (Permutation (gv0 ++ bl) gv0), (Permutation (gv0 ++ bl) (n0 :: bl))
(Permutation (gv0 ++ bl) (n0 :: l)), (Permutation (gv0 ++ bl) (n0 :: gv0)), (Permutation (gv0 ++ bl) (gv3 :: bl)), (Permutation (gv0 ++ bl) (gv3 :: l)), (Permutation (gv0 ++ bl) (gv3 :: gv0)), (Permutation (gv0 ++ bl) (n1 :: bl)), (Permutation (gv0 ++ bl) (n1 :: l)), (Permutation (gv0 ++ bl) (n1 :: gv0)), (Permutation (gv0 ++ bl) (y :: bl)), (Permutation (gv0 ++ bl) (y :: l))
(Permutation (gv0 ++ bl) (y :: gv0)), (Permutation (gv0 ++ bl) (selection_sort bl)), (Permutation (gv0 ++ bl) (selection_sort l)), (Permutation (gv0 ++ bl) (selection_sort gv0)), (Permutation (gv0 ++ bl) (selsort bl n0)), (Permutation (gv0 ++ bl) (selsort bl gv3)), (Permutation (gv0 ++ bl) (selsort bl n1)), (Permutation (gv0 ++ bl) (selsort bl y)), (Permutation (gv0 ++ bl) (selsort l n0)), (Permutation (gv0 ++ bl) (selsort l gv3))
(Permutation (gv0 ++ bl) (selsort l n1)), (Permutation (gv0 ++ bl) (selsort l y)), (Permutation (gv0 ++ bl) (selsort gv0 n0)), (Permutation (gv0 ++ bl) (selsort gv0 gv3)), (Permutation (gv0 ++ bl) (selsort gv0 n1)), (Permutation (gv0 ++ bl) (selsort gv0 y)), (Permutation (gv0 ++ bl) (bl ++ bl)), (Permutation (gv0 ++ bl) (bl ++ l)), (Permutation (gv0 ++ bl) (bl ++ gv0)), (Permutation (gv0 ++ bl) (l ++ bl))
(Permutation (gv0 ++ bl) (l ++ l)), (Permutation (gv0 ++ bl) (l ++ gv0)), (Permutation (gv0 ++ bl) (gv0 ++ l)), (Permutation (gv0 ++ bl) (gv0 ++ gv0)), (Permutation (gv0 ++ bl) []), (Permutation (gv0 ++ l) bl), (Permutation (gv0 ++ l) l), (Permutation (gv0 ++ l) gv0), (Permutation (gv0 ++ l) (n0 :: bl)), (Permutation (gv0 ++ l) (n0 :: l))
(Permutation (gv0 ++ l) (n0 :: gv0)), (Permutation (gv0 ++ l) (gv3 :: bl)), (Permutation (gv0 ++ l) (gv3 :: l)), (Permutation (gv0 ++ l) (gv3 :: gv0)), (Permutation (gv0 ++ l) (n1 :: bl)), (Permutation (gv0 ++ l) (n1 :: l)), (Permutation (gv0 ++ l) (n1 :: gv0)), (Permutation (gv0 ++ l) (y :: bl)), (Permutation (gv0 ++ l) (y :: l)), (Permutation (gv0 ++ l) (y :: gv0))
(Permutation (gv0 ++ l) (selection_sort bl)), (Permutation (gv0 ++ l) (selection_sort l)), (Permutation (gv0 ++ l) (selection_sort gv0)), (Permutation (gv0 ++ l) (selsort bl n0)), (Permutation (gv0 ++ l) (selsort bl gv3)), (Permutation (gv0 ++ l) (selsort bl n1)), (Permutation (gv0 ++ l) (selsort bl y)), (Permutation (gv0 ++ l) (selsort l n0)), (Permutation (gv0 ++ l) (selsort l gv3)), (Permutation (gv0 ++ l) (selsort l n1))
(Permutation (gv0 ++ l) (selsort l y)), (Permutation (gv0 ++ l) (selsort gv0 n0)), (Permutation (gv0 ++ l) (selsort gv0 gv3)), (Permutation (gv0 ++ l) (selsort gv0 n1)), (Permutation (gv0 ++ l) (selsort gv0 y)), (Permutation (gv0 ++ l) (bl ++ bl)), (Permutation (gv0 ++ l) (bl ++ l)), (Permutation (gv0 ++ l) (bl ++ gv0)), (Permutation (gv0 ++ l) (l ++ bl)), (Permutation (gv0 ++ l) (l ++ l))
(Permutation (gv0 ++ l) (l ++ gv0)), (Permutation (gv0 ++ l) (gv0 ++ bl)), (Permutation (gv0 ++ l) (gv0 ++ gv0)), (Permutation (gv0 ++ l) []), (Permutation (gv0 ++ gv0) bl), (Permutation (gv0 ++ gv0) l), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (n0 :: bl)), (Permutation (gv0 ++ gv0) (n0 :: l)), (Permutation (gv0 ++ gv0) (n0 :: gv0))
(Permutation (gv0 ++ gv0) (gv3 :: bl)), (Permutation (gv0 ++ gv0) (gv3 :: l)), (Permutation (gv0 ++ gv0) (gv3 :: gv0)), (Permutation (gv0 ++ gv0) (n1 :: bl)), (Permutation (gv0 ++ gv0) (n1 :: l)), (Permutation (gv0 ++ gv0) (n1 :: gv0)), (Permutation (gv0 ++ gv0) (y :: bl)), (Permutation (gv0 ++ gv0) (y :: l)), (Permutation (gv0 ++ gv0) (y :: gv0)), (Permutation (gv0 ++ gv0) (selection_sort bl))
(Permutation (gv0 ++ gv0) (selection_sort l)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (selsort bl n0)), (Permutation (gv0 ++ gv0) (selsort bl gv3)), (Permutation (gv0 ++ gv0) (selsort bl n1)), (Permutation (gv0 ++ gv0) (selsort bl y)), (Permutation (gv0 ++ gv0) (selsort l n0)), (Permutation (gv0 ++ gv0) (selsort l gv3)), (Permutation (gv0 ++ gv0) (selsort l n1)), (Permutation (gv0 ++ gv0) (selsort l y))
(Permutation (gv0 ++ gv0) (selsort gv0 n0)), (Permutation (gv0 ++ gv0) (selsort gv0 gv3)), (Permutation (gv0 ++ gv0) (selsort gv0 n1)), (Permutation (gv0 ++ gv0) (selsort gv0 y)), (Permutation (gv0 ++ gv0) (bl ++ bl)), (Permutation (gv0 ++ gv0) (bl ++ l)), (Permutation (gv0 ++ gv0) (bl ++ gv0)), (Permutation (gv0 ++ gv0) (l ++ bl)), (Permutation (gv0 ++ gv0) (l ++ l)), (Permutation (gv0 ++ gv0) (l ++ gv0))
(Permutation (gv0 ++ gv0) (gv0 ++ bl)), (Permutation (gv0 ++ gv0) (gv0 ++ l)), (Permutation (gv0 ++ gv0) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv0), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l)), (Permutation [] (n0 :: gv0)), (Permutation [] (gv3 :: bl))
(Permutation [] (gv3 :: l)), (Permutation [] (gv3 :: gv0)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv0)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv0)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l))
(Permutation [] (selection_sort gv0)), (Permutation [] (selsort bl n0)), (Permutation [] (selsort bl gv3)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l gv3)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv0 n0))
(Permutation [] (selsort gv0 gv3)), (Permutation [] (selsort gv0 n1)), (Permutation [] (selsort gv0 y)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv0)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv0)), (Permutation [] (gv0 ++ bl))
(Permutation [] (gv0 ++ l)), (Permutation [] (gv0 ++ gv0)), (In n0 (n0 :: bl)), (In n0 (n0 :: l)), (In n0 (n0 :: gv0)), (In n0 (gv3 :: bl)), (In n0 (gv3 :: l)), (In n0 (gv3 :: gv0)), (In n0 (n1 :: bl)), (In n0 (n1 :: l))
(In n0 (n1 :: gv0)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv0)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv0)), (In n0 (selsort bl n0)), (In n0 (selsort bl gv3)), (In n0 (selsort bl n1))
(In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l gv3)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv0 n0)), (In n0 (selsort gv0 gv3)), (In n0 (selsort gv0 n1)), (In n0 (selsort gv0 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv0)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv0)), (In n0 (gv0 ++ bl)), (In n0 (gv0 ++ l)), (In n0 (gv0 ++ gv0)), (In gv3 (n0 :: bl)), (In gv3 (n0 :: l))
(In gv3 (n0 :: gv0)), (In gv3 (gv3 :: bl)), (In gv3 (gv3 :: l)), (In gv3 (gv3 :: gv0)), (In gv3 (n1 :: bl)), (In gv3 (n1 :: l)), (In gv3 (n1 :: gv0)), (In gv3 (y :: bl)), (In gv3 (y :: l)), (In gv3 (y :: gv0))
(In gv3 (selection_sort bl)), (In gv3 (selection_sort l)), (In gv3 (selection_sort gv0)), (In gv3 (selsort bl n0)), (In gv3 (selsort bl gv3)), (In gv3 (selsort bl n1)), (In gv3 (selsort bl y)), (In gv3 (selsort l n0)), (In gv3 (selsort l gv3)), (In gv3 (selsort l n1))
(In gv3 (selsort l y)), (In gv3 (selsort gv0 n0)), (In gv3 (selsort gv0 gv3)), (In gv3 (selsort gv0 n1)), (In gv3 (selsort gv0 y)), (In gv3 (bl ++ bl)), (In gv3 (bl ++ l)), (In gv3 (bl ++ gv0)), (In gv3 (l ++ bl)), (In gv3 (l ++ l))
(In gv3 (l ++ gv0)), (In gv3 (gv0 ++ bl)), (In gv3 (gv0 ++ l)), (In gv3 (gv0 ++ gv0)), (In n1 (n0 :: bl)), (In n1 (n0 :: l)), (In n1 (n0 :: gv0)), (In n1 (gv3 :: bl)), (In n1 (gv3 :: l)), (In n1 (gv3 :: gv0))
(In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv0)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv0)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv0)), (In n1 (selsort bl n0))
(In n1 (selsort bl gv3)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l gv3)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv0 n0)), (In n1 (selsort gv0 gv3)), (In n1 (selsort gv0 n1))
(In n1 (selsort gv0 y)), (In n1 (bl ++ bl)), (In n1 (bl ++ l)), (In n1 (bl ++ gv0)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv0)), (In n1 (gv0 ++ bl)), (In n1 (gv0 ++ l)), (In n1 (gv0 ++ gv0))
(In y (n0 :: bl)), (In y (n0 :: l)), (In y (n0 :: gv0)), (In y (gv3 :: bl)), (In y (gv3 :: l)), (In y (gv3 :: gv0)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv0)), (In y (y :: bl))
(In y (y :: l)), (In y (y :: gv0)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv0)), (In y (selsort bl n0)), (In y (selsort bl gv3)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0))
(In y (selsort l gv3)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv0 n0)), (In y (selsort gv0 gv3)), (In y (selsort gv0 n1)), (In y (selsort gv0 y)), (In y (bl ++ bl)), (In y (bl ++ l)), (In y (bl ++ gv0))
(In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv0)), (In y (gv0 ++ bl)), (In y (gv0 ++ l)), (In y (gv0 ++ gv0)), (In (length bl) bl), (In (length bl) l), (In (length bl) gv0), (In (length bl) (n0 :: bl))
(In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv0)), (In (length bl) (gv3 :: bl)), (In (length bl) (gv3 :: l)), (In (length bl) (gv3 :: gv0)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv0)), (In (length bl) (y :: bl)), (In (length bl) (y :: l))
(In (length bl) (y :: gv0)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv0)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl gv3)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l gv3))
(In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv0 n0)), (In (length bl) (selsort gv0 gv3)), (In (length bl) (selsort gv0 n1)), (In (length bl) (selsort gv0 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv0)), (In (length bl) (l ++ bl))
(In (length bl) (l ++ l)), (In (length bl) (l ++ gv0)), (In (length bl) (gv0 ++ bl)), (In (length bl) (gv0 ++ l)), (In (length bl) (gv0 ++ gv0)), (In (length l) bl), (In (length l) l), (In (length l) gv0), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l))
(In (length l) (n0 :: gv0)), (In (length l) (gv3 :: bl)), (In (length l) (gv3 :: l)), (In (length l) (gv3 :: gv0)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv0)), (In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv0))
(In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv0)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl gv3)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0)), (In (length l) (selsort l gv3)), (In (length l) (selsort l n1))
(In (length l) (selsort l y)), (In (length l) (selsort gv0 n0)), (In (length l) (selsort gv0 gv3)), (In (length l) (selsort gv0 n1)), (In (length l) (selsort gv0 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv0)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv0)), (In (length l) (gv0 ++ bl)), (In (length l) (gv0 ++ l)), (In (length l) (gv0 ++ gv0)), (In (length gv0) bl), (In (length gv0) l), (In (length gv0) gv0), (In (length gv0) (n0 :: bl)), (In (length gv0) (n0 :: l)), (In (length gv0) (n0 :: gv0))
(In (length gv0) (gv3 :: bl)), (In (length gv0) (gv3 :: l)), (In (length gv0) (gv3 :: gv0)), (In (length gv0) (n1 :: bl)), (In (length gv0) (n1 :: l)), (In (length gv0) (n1 :: gv0)), (In (length gv0) (y :: bl)), (In (length gv0) (y :: l)), (In (length gv0) (y :: gv0)), (In (length gv0) (selection_sort bl))
(In (length gv0) (selection_sort l)), (In (length gv0) (selection_sort gv0)), (In (length gv0) (selsort bl n0)), (In (length gv0) (selsort bl gv3)), (In (length gv0) (selsort bl n1)), (In (length gv0) (selsort bl y)), (In (length gv0) (selsort l n0)), (In (length gv0) (selsort l gv3)), (In (length gv0) (selsort l n1)), (In (length gv0) (selsort l y))
(In (length gv0) (selsort gv0 n0)), (In (length gv0) (selsort gv0 gv3)), (In (length gv0) (selsort gv0 n1)), (In (length gv0) (selsort gv0 y)), (In (length gv0) (bl ++ bl)), (In (length gv0) (bl ++ l)), (In (length gv0) (bl ++ gv0)), (In (length gv0) (l ++ bl)), (In (length gv0) (l ++ l)), (In (length gv0) (l ++ gv0))
(In (length gv0) (gv0 ++ bl)), (In (length gv0) (gv0 ++ l)), (In (length gv0) (gv0 ++ gv0)), (n0 < length bl), (n0 < length l), (n0 < length gv0), (gv3 < length bl), (gv3 < length l), (gv3 < length gv0), (n1 < length bl)
(n1 < length l), (n1 < length gv0), (y < length bl), (y < length l), (y < length gv0), (length bl < n0), (length bl < gv3), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv0), (length l < n0), (length l < gv3), (length l < n1), (length l < y), (length l < length bl), (length l < length gv0), (length gv0 < n0), (length gv0 < gv3), (length gv0 < n1)
(length gv0 < y), (length gv0 < length bl), (length gv0 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv0), (gv3 <= length bl), (gv3 <= length l), (gv3 <= length gv0), (n1 <= length bl)
(n1 <= length l), (n1 <= length gv0), (y <= length bl), (y <= length l), (y <= length gv0), (length bl <= n0), (length bl <= gv3), (length bl <= n1), (length bl <= y), (length bl <= length l)
(length bl <= length gv0), (length l <= n0), (length l <= gv3), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv0), (length gv0 <= n0), (length gv0 <= gv3), (length gv0 <= n1)
(length gv0 <= y), (length gv0 <= length bl), (length gv0 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv0), (~ gv3 <=* bl), (~ gv3 <=* l), (~ gv3 <=* gv0), (~ n1 <=* bl)
(~ n1 <=* l), (~ n1 <=* gv0), (~ y <=* bl), (~ y <=* l), (~ y <=* gv0), (~ sorted bl), (~ sorted l), (~ sorted gv0), (~ Permutation bl bl), (~ Permutation bl l)
(~ Permutation bl gv0), (~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv0), (~ Permutation gv0 bl), (~ Permutation gv0 l), (~ Permutation gv0 gv0), (~ In n0 bl), (~ In n0 l), (~ In n0 gv0)
(~ In gv3 bl), (~ In gv3 l), (~ In gv3 gv0), (~ In n1 bl), (~ In n1 l), (~ In n1 gv0), (~ In y bl), (~ In y l), (~ In y gv0), (~ n0 < n0)
(~ n0 < gv3), (~ n0 < n1), (~ n0 < y), (~ gv3 < n0), (~ gv3 < gv3), (~ gv3 < n1), (~ gv3 < y), (~ n1 < n0), (~ n1 < gv3), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < gv3), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= gv3), (~ n0 <= n1), (~ n0 <= y), (~ gv3 <= n0)
(~ gv3 <= gv3), (~ gv3 <= n1), (~ gv3 <= y), (~ n1 <= n0), (~ n1 <= gv3), (~ n1 <= n1), (~ n1 <= y), (~ y <= n0), (~ y <= gv3), (~ y <= n1)
(~ y <= y), (n0 <> n0), (n0 <> gv3), (n0 <> n1), (n0 <> y), (gv3 <> n0), (gv3 <> gv3), (gv3 <> n1), (gv3 <> y), (n1 <> n0)
(n1 <> gv3), (n1 <> n1), (n1 <> y), (y <> n0), (y <> gv3), (y <> n1), (y <> y), (bl <> bl), (bl <> l), (bl <> gv0)
(l <> bl), (l <> l), (l <> gv0), (gv0 <> bl), (gv0 <> l), (gv0 <> gv0), (None = Some bl), (None = Some l), (None = Some gv0), (n0 :: bl = bl)
(n0 :: bl = l), (n0 :: bl = gv0), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv0), (n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl gv3), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0)
(n0 :: bl = selsort l gv3), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv0 n0), (n0 :: bl = selsort gv0 gv3), (n0 :: bl = selsort gv0 n1), (n0 :: bl = selsort gv0 y), (n0 :: bl = bl ++ bl), (n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv0)
(n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv0), (n0 :: bl = gv0 ++ bl), (n0 :: bl = gv0 ++ l), (n0 :: bl = gv0 ++ gv0), (n0 :: bl = []), (n0 :: l = bl), (n0 :: l = l), (n0 :: l = gv0)
(n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv0), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl gv3), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l gv3), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv0 n0), (n0 :: l = selsort gv0 gv3), (n0 :: l = selsort gv0 n1), (n0 :: l = selsort gv0 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv0), (n0 :: l = l ++ bl), (n0 :: l = l ++ l)
(n0 :: l = l ++ gv0), (n0 :: l = gv0 ++ bl), (n0 :: l = gv0 ++ l), (n0 :: l = gv0 ++ gv0), (n0 :: l = []), (n0 :: gv0 = bl), (n0 :: gv0 = l), (n0 :: gv0 = gv0), (n0 :: gv0 = selection_sort bl), (n0 :: gv0 = selection_sort l)
(n0 :: gv0 = selection_sort gv0), (n0 :: gv0 = selsort bl n0), (n0 :: gv0 = selsort bl gv3), (n0 :: gv0 = selsort bl n1), (n0 :: gv0 = selsort bl y), (n0 :: gv0 = selsort l n0), (n0 :: gv0 = selsort l gv3), (n0 :: gv0 = selsort l n1), (n0 :: gv0 = selsort l y), (n0 :: gv0 = selsort gv0 n0)
(n0 :: gv0 = selsort gv0 gv3), (n0 :: gv0 = selsort gv0 n1), (n0 :: gv0 = selsort gv0 y), (n0 :: gv0 = bl ++ bl), (n0 :: gv0 = bl ++ l), (n0 :: gv0 = bl ++ gv0), (n0 :: gv0 = l ++ bl), (n0 :: gv0 = l ++ l), (n0 :: gv0 = l ++ gv0), (n0 :: gv0 = gv0 ++ bl)
(n0 :: gv0 = gv0 ++ l), (n0 :: gv0 = gv0 ++ gv0), (n0 :: gv0 = []), (gv3 :: bl = bl), (gv3 :: bl = l), (gv3 :: bl = gv0), (gv3 :: bl = selection_sort bl), (gv3 :: bl = selection_sort l), (gv3 :: bl = selection_sort gv0), (gv3 :: bl = selsort bl n0)
(gv3 :: bl = selsort bl gv3), (gv3 :: bl = selsort bl n1), (gv3 :: bl = selsort bl y), (gv3 :: bl = selsort l n0), (gv3 :: bl = selsort l gv3), (gv3 :: bl = selsort l n1), (gv3 :: bl = selsort l y), (gv3 :: bl = selsort gv0 n0), (gv3 :: bl = selsort gv0 gv3), (gv3 :: bl = selsort gv0 n1)
(gv3 :: bl = selsort gv0 y), (gv3 :: bl = bl ++ bl), (gv3 :: bl = bl ++ l), (gv3 :: bl = bl ++ gv0), (gv3 :: bl = l ++ bl), (gv3 :: bl = l ++ l), (gv3 :: bl = l ++ gv0), (gv3 :: bl = gv0 ++ bl), (gv3 :: bl = gv0 ++ l), (gv3 :: bl = gv0 ++ gv0)
(gv3 :: bl = []), (gv3 :: l = bl), (gv3 :: l = l), (gv3 :: l = gv0), (gv3 :: l = selection_sort bl), (gv3 :: l = selection_sort l), (gv3 :: l = selection_sort gv0), (gv3 :: l = selsort bl n0), (gv3 :: l = selsort bl gv3), (gv3 :: l = selsort bl n1)
(gv3 :: l = selsort bl y), (gv3 :: l = selsort l n0), (gv3 :: l = selsort l gv3), (gv3 :: l = selsort l n1), (gv3 :: l = selsort l y), (gv3 :: l = selsort gv0 n0), (gv3 :: l = selsort gv0 gv3), (gv3 :: l = selsort gv0 n1), (gv3 :: l = selsort gv0 y), (gv3 :: l = bl ++ bl)
(gv3 :: l = bl ++ l), (gv3 :: l = bl ++ gv0), (gv3 :: l = l ++ bl), (gv3 :: l = l ++ l), (gv3 :: l = l ++ gv0), (gv3 :: l = gv0 ++ bl), (gv3 :: l = gv0 ++ l), (gv3 :: l = gv0 ++ gv0), (gv3 :: l = []), (gv3 :: gv0 = bl)
(gv3 :: gv0 = l), (gv3 :: gv0 = gv0), (gv3 :: gv0 = selection_sort bl), (gv3 :: gv0 = selection_sort l), (gv3 :: gv0 = selection_sort gv0), (gv3 :: gv0 = selsort bl n0), (gv3 :: gv0 = selsort bl gv3), (gv3 :: gv0 = selsort bl n1), (gv3 :: gv0 = selsort bl y), (gv3 :: gv0 = selsort l n0)
(gv3 :: gv0 = selsort l gv3), (gv3 :: gv0 = selsort l n1), (gv3 :: gv0 = selsort l y), (gv3 :: gv0 = selsort gv0 n0), (gv3 :: gv0 = selsort gv0 gv3), (gv3 :: gv0 = selsort gv0 n1), (gv3 :: gv0 = selsort gv0 y), (gv3 :: gv0 = bl ++ bl), (gv3 :: gv0 = bl ++ l), (gv3 :: gv0 = bl ++ gv0)
(gv3 :: gv0 = l ++ bl), (gv3 :: gv0 = l ++ l), (gv3 :: gv0 = l ++ gv0), (gv3 :: gv0 = gv0 ++ bl), (gv3 :: gv0 = gv0 ++ l), (gv3 :: gv0 = gv0 ++ gv0), (gv3 :: gv0 = []), (n1 :: bl = bl), (n1 :: bl = l), (n1 :: bl = gv0)
(n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv0), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl gv3), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l gv3), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv0 n0), (n1 :: bl = selsort gv0 gv3), (n1 :: bl = selsort gv0 n1), (n1 :: bl = selsort gv0 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv0), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l)
(n1 :: bl = l ++ gv0), (n1 :: bl = gv0 ++ bl), (n1 :: bl = gv0 ++ l), (n1 :: bl = gv0 ++ gv0), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv0), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l)
(n1 :: l = selection_sort gv0), (n1 :: l = selsort bl n0), (n1 :: l = selsort bl gv3), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l gv3), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv0 n0)
(n1 :: l = selsort gv0 gv3), (n1 :: l = selsort gv0 n1), (n1 :: l = selsort gv0 y), (n1 :: l = bl ++ bl), (n1 :: l = bl ++ l), (n1 :: l = bl ++ gv0), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv0), (n1 :: l = gv0 ++ bl)
(n1 :: l = gv0 ++ l), (n1 :: l = gv0 ++ gv0), (n1 :: l = []), (n1 :: gv0 = bl), (n1 :: gv0 = l), (n1 :: gv0 = gv0), (n1 :: gv0 = selection_sort bl), (n1 :: gv0 = selection_sort l), (n1 :: gv0 = selection_sort gv0), (n1 :: gv0 = selsort bl n0)
(n1 :: gv0 = selsort bl gv3), (n1 :: gv0 = selsort bl n1), (n1 :: gv0 = selsort bl y), (n1 :: gv0 = selsort l n0), (n1 :: gv0 = selsort l gv3), (n1 :: gv0 = selsort l n1), (n1 :: gv0 = selsort l y), (n1 :: gv0 = selsort gv0 n0), (n1 :: gv0 = selsort gv0 gv3), (n1 :: gv0 = selsort gv0 n1)
(n1 :: gv0 = selsort gv0 y), (n1 :: gv0 = bl ++ bl), (n1 :: gv0 = bl ++ l), (n1 :: gv0 = bl ++ gv0), (n1 :: gv0 = l ++ bl), (n1 :: gv0 = l ++ l), (n1 :: gv0 = l ++ gv0), (n1 :: gv0 = gv0 ++ bl), (n1 :: gv0 = gv0 ++ l), (n1 :: gv0 = gv0 ++ gv0)
(n1 :: gv0 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv0), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv0), (y :: bl = selsort bl n0), (y :: bl = selsort bl gv3), (y :: bl = selsort bl n1)
(y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l gv3), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv0 n0), (y :: bl = selsort gv0 gv3), (y :: bl = selsort gv0 n1), (y :: bl = selsort gv0 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv0), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv0), (y :: bl = gv0 ++ bl), (y :: bl = gv0 ++ l), (y :: bl = gv0 ++ gv0), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv0), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv0), (y :: l = selsort bl n0), (y :: l = selsort bl gv3), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0)
(y :: l = selsort l gv3), (y :: l = selsort l n1), (y :: l = selsort l y), (y :: l = selsort gv0 n0), (y :: l = selsort gv0 gv3), (y :: l = selsort gv0 n1), (y :: l = selsort gv0 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv0)
(y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv0), (y :: l = gv0 ++ bl), (y :: l = gv0 ++ l), (y :: l = gv0 ++ gv0), (y :: l = []), (y :: gv0 = bl), (y :: gv0 = l), (y :: gv0 = gv0)
(y :: gv0 = selection_sort bl), (y :: gv0 = selection_sort l), (y :: gv0 = selection_sort gv0), (y :: gv0 = selsort bl n0), (y :: gv0 = selsort bl gv3), (y :: gv0 = selsort bl n1), (y :: gv0 = selsort bl y), (y :: gv0 = selsort l n0), (y :: gv0 = selsort l gv3), (y :: gv0 = selsort l n1)
(y :: gv0 = selsort l y), (y :: gv0 = selsort gv0 n0), (y :: gv0 = selsort gv0 gv3), (y :: gv0 = selsort gv0 n1), (y :: gv0 = selsort gv0 y), (y :: gv0 = bl ++ bl), (y :: gv0 = bl ++ l), (y :: gv0 = bl ++ gv0), (y :: gv0 = l ++ bl), (y :: gv0 = l ++ l)
(y :: gv0 = l ++ gv0), (y :: gv0 = gv0 ++ bl), (y :: gv0 = gv0 ++ l), (y :: gv0 = gv0 ++ gv0), (y :: gv0 = []), (selection_sort bl = bl), (selection_sort bl = l), (selection_sort bl = gv0), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l)
(selection_sort bl = bl ++ gv0), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv0), (selection_sort bl = gv0 ++ bl), (selection_sort bl = gv0 ++ l), (selection_sort bl = gv0 ++ gv0), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv0)
(selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv0), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv0), (selection_sort l = gv0 ++ bl), (selection_sort l = gv0 ++ l), (selection_sort l = gv0 ++ gv0), (selection_sort gv0 = bl)
(selection_sort gv0 = l), (selection_sort gv0 = gv0), (selection_sort gv0 = bl ++ bl), (selection_sort gv0 = bl ++ l), (selection_sort gv0 = bl ++ gv0), (selection_sort gv0 = l ++ bl), (selection_sort gv0 = l ++ l), (selection_sort gv0 = l ++ gv0), (selection_sort gv0 = gv0 ++ bl), (selection_sort gv0 = gv0 ++ l)
(selection_sort gv0 = gv0 ++ gv0), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv0), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l), (selsort bl n0 = selection_sort gv0), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv0)
(selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv0), (selsort bl n0 = gv0 ++ bl), (selsort bl n0 = gv0 ++ l), (selsort bl n0 = gv0 ++ gv0), (selsort bl gv3 = bl), (selsort bl gv3 = l), (selsort bl gv3 = gv0), (selsort bl gv3 = selection_sort bl)
(selsort bl gv3 = selection_sort l), (selsort bl gv3 = selection_sort gv0), (selsort bl gv3 = bl ++ bl), (selsort bl gv3 = bl ++ l), (selsort bl gv3 = bl ++ gv0), (selsort bl gv3 = l ++ bl), (selsort bl gv3 = l ++ l), (selsort bl gv3 = l ++ gv0), (selsort bl gv3 = gv0 ++ bl), (selsort bl gv3 = gv0 ++ l)
(selsort bl gv3 = gv0 ++ gv0), (selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv0), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv0), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv0)
(selsort bl n1 = l ++ bl), (selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv0), (selsort bl n1 = gv0 ++ bl), (selsort bl n1 = gv0 ++ l), (selsort bl n1 = gv0 ++ gv0), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv0), (selsort bl y = selection_sort bl)
(selsort bl y = selection_sort l), (selsort bl y = selection_sort gv0), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv0), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv0), (selsort bl y = gv0 ++ bl), (selsort bl y = gv0 ++ l)
(selsort bl y = gv0 ++ gv0), (selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv0), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv0), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv0)
(selsort l n0 = l ++ bl), (selsort l n0 = l ++ l), (selsort l n0 = l ++ gv0), (selsort l n0 = gv0 ++ bl), (selsort l n0 = gv0 ++ l), (selsort l n0 = gv0 ++ gv0), (selsort l gv3 = bl), (selsort l gv3 = l), (selsort l gv3 = gv0), (selsort l gv3 = selection_sort bl)
(selsort l gv3 = selection_sort l), (selsort l gv3 = selection_sort gv0), (selsort l gv3 = bl ++ bl), (selsort l gv3 = bl ++ l), (selsort l gv3 = bl ++ gv0), (selsort l gv3 = l ++ bl), (selsort l gv3 = l ++ l), (selsort l gv3 = l ++ gv0), (selsort l gv3 = gv0 ++ bl), (selsort l gv3 = gv0 ++ l)
(selsort l gv3 = gv0 ++ gv0), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv0), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort gv0), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv0)
(selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv0), (selsort l n1 = gv0 ++ bl), (selsort l n1 = gv0 ++ l), (selsort l n1 = gv0 ++ gv0), (selsort l y = bl), (selsort l y = l), (selsort l y = gv0), (selsort l y = selection_sort bl)
(selsort l y = selection_sort l), (selsort l y = selection_sort gv0), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv0), (selsort l y = l ++ bl), (selsort l y = l ++ l), (selsort l y = l ++ gv0), (selsort l y = gv0 ++ bl), (selsort l y = gv0 ++ l)
(selsort l y = gv0 ++ gv0), (selsort gv0 n0 = bl), (selsort gv0 n0 = l), (selsort gv0 n0 = gv0), (selsort gv0 n0 = selection_sort bl), (selsort gv0 n0 = selection_sort l), (selsort gv0 n0 = selection_sort gv0), (selsort gv0 n0 = bl ++ bl), (selsort gv0 n0 = bl ++ l), (selsort gv0 n0 = bl ++ gv0)
(selsort gv0 n0 = l ++ bl), (selsort gv0 n0 = l ++ l), (selsort gv0 n0 = l ++ gv0), (selsort gv0 n0 = gv0 ++ bl), (selsort gv0 n0 = gv0 ++ l), (selsort gv0 n0 = gv0 ++ gv0), (selsort gv0 gv3 = bl), (selsort gv0 gv3 = l), (selsort gv0 gv3 = gv0), (selsort gv0 gv3 = selection_sort bl)
(selsort gv0 gv3 = selection_sort l), (selsort gv0 gv3 = selection_sort gv0), (selsort gv0 gv3 = bl ++ bl), (selsort gv0 gv3 = bl ++ l), (selsort gv0 gv3 = bl ++ gv0), (selsort gv0 gv3 = l ++ bl), (selsort gv0 gv3 = l ++ l), (selsort gv0 gv3 = l ++ gv0), (selsort gv0 gv3 = gv0 ++ bl), (selsort gv0 gv3 = gv0 ++ l)
(selsort gv0 gv3 = gv0 ++ gv0), (selsort gv0 n1 = bl), (selsort gv0 n1 = l), (selsort gv0 n1 = gv0), (selsort gv0 n1 = selection_sort bl), (selsort gv0 n1 = selection_sort l), (selsort gv0 n1 = selection_sort gv0), (selsort gv0 n1 = bl ++ bl), (selsort gv0 n1 = bl ++ l), (selsort gv0 n1 = bl ++ gv0)
(selsort gv0 n1 = l ++ bl), (selsort gv0 n1 = l ++ l), (selsort gv0 n1 = l ++ gv0), (selsort gv0 n1 = gv0 ++ bl), (selsort gv0 n1 = gv0 ++ l), (selsort gv0 n1 = gv0 ++ gv0), (selsort gv0 y = bl), (selsort gv0 y = l), (selsort gv0 y = gv0), (selsort gv0 y = selection_sort bl)
(selsort gv0 y = selection_sort l), (selsort gv0 y = selection_sort gv0), (selsort gv0 y = bl ++ bl), (selsort gv0 y = bl ++ l), (selsort gv0 y = bl ++ gv0), (selsort gv0 y = l ++ bl), (selsort gv0 y = l ++ l), (selsort gv0 y = l ++ gv0), (selsort gv0 y = gv0 ++ bl), (selsort gv0 y = gv0 ++ l)
(selsort gv0 y = gv0 ++ gv0), (bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv0), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv0), (bl ++ gv0 = bl), (bl ++ gv0 = l), (bl ++ gv0 = gv0)
(l ++ bl = bl), (l ++ bl = l), (l ++ bl = gv0), (l ++ l = bl), (l ++ l = l), (l ++ l = gv0), (l ++ gv0 = bl), (l ++ gv0 = l), (l ++ gv0 = gv0), (gv0 ++ bl = bl)
(gv0 ++ bl = l), (gv0 ++ bl = gv0), (gv0 ++ l = bl), (gv0 ++ l = l), (gv0 ++ l = gv0), (gv0 ++ gv0 = bl), (gv0 ++ gv0 = l), (gv0 ++ gv0 = gv0), ([] = bl), ([] = l)
([] = gv0), ([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv0), ([] = selsort bl n0), ([] = selsort bl gv3), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l gv3)
([] = selsort l n1), ([] = selsort l y), ([] = selsort gv0 n0), ([] = selsort gv0 gv3), ([] = selsort gv0 n1), ([] = selsort gv0 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv0), ([] = l ++ bl)
([] = l ++ l), ([] = l ++ gv0), ([] = gv0 ++ bl), ([] = gv0 ++ l), ([] = gv0 ++ gv0), (None = Some n0), (None = Some gv3), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl)
((n0, bl) = select n0 l), ((n0, bl) = select n0 gv0), ((n0, bl) = select gv3 bl), ((n0, bl) = select gv3 l), ((n0, bl) = select gv3 gv0), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv0), ((n0, bl) = select y bl), ((n0, bl) = select y l)
((n0, bl) = select y gv0), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv0), ((n0, l) = select gv3 bl), ((n0, l) = select gv3 l), ((n0, l) = select gv3 gv0), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv0)
((n0, l) = select y bl), ((n0, l) = select y l), ((n0, l) = select y gv0), ((n0, gv0) = select n0 bl), ((n0, gv0) = select n0 l), ((n0, gv0) = select n0 gv0), ((n0, gv0) = select gv3 bl), ((n0, gv0) = select gv3 l), ((n0, gv0) = select gv3 gv0), ((n0, gv0) = select n1 bl)
((n0, gv0) = select n1 l), ((n0, gv0) = select n1 gv0), ((n0, gv0) = select y bl), ((n0, gv0) = select y l), ((n0, gv0) = select y gv0), ((gv3, bl) = select n0 bl), ((gv3, bl) = select n0 l), ((gv3, bl) = select n0 gv0), ((gv3, bl) = select gv3 bl), ((gv3, bl) = select gv3 l)
((gv3, bl) = select gv3 gv0), ((gv3, bl) = select n1 bl), ((gv3, bl) = select n1 l), ((gv3, bl) = select n1 gv0), ((gv3, bl) = select y bl), ((gv3, bl) = select y l), ((gv3, bl) = select y gv0), ((gv3, l) = select n0 bl), ((gv3, l) = select n0 l), ((gv3, l) = select n0 gv0)
((gv3, l) = select gv3 bl), ((gv3, l) = select gv3 l), ((gv3, l) = select gv3 gv0), ((gv3, l) = select n1 bl), ((gv3, l) = select n1 l), ((gv3, l) = select n1 gv0), ((gv3, l) = select y bl), ((gv3, l) = select y l), ((gv3, l) = select y gv0), ((gv3, gv0) = select n0 bl)
((gv3, gv0) = select n0 l), ((gv3, gv0) = select n0 gv0), ((gv3, gv0) = select gv3 bl), ((gv3, gv0) = select gv3 l), ((gv3, gv0) = select gv3 gv0), ((gv3, gv0) = select n1 bl), ((gv3, gv0) = select n1 l), ((gv3, gv0) = select n1 gv0), ((gv3, gv0) = select y bl), ((gv3, gv0) = select y l)
((gv3, gv0) = select y gv0), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv0), ((n1, bl) = select gv3 bl), ((n1, bl) = select gv3 l), ((n1, bl) = select gv3 gv0), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv0)
((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv0), ((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv0), ((n1, l) = select gv3 bl), ((n1, l) = select gv3 l), ((n1, l) = select gv3 gv0), ((n1, l) = select n1 bl)
((n1, l) = select n1 l), ((n1, l) = select n1 gv0), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv0), ((n1, gv0) = select n0 bl), ((n1, gv0) = select n0 l), ((n1, gv0) = select n0 gv0), ((n1, gv0) = select gv3 bl), ((n1, gv0) = select gv3 l)
((n1, gv0) = select gv3 gv0), ((n1, gv0) = select n1 bl), ((n1, gv0) = select n1 l), ((n1, gv0) = select n1 gv0), ((n1, gv0) = select y bl), ((n1, gv0) = select y l), ((n1, gv0) = select y gv0), ((y, bl) = select n0 bl), ((y, bl) = select n0 l), ((y, bl) = select n0 gv0)
((y, bl) = select gv3 bl), ((y, bl) = select gv3 l), ((y, bl) = select gv3 gv0), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv0), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv0), ((y, l) = select n0 bl)
((y, l) = select n0 l), ((y, l) = select n0 gv0), ((y, l) = select gv3 bl), ((y, l) = select gv3 l), ((y, l) = select gv3 gv0), ((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv0), ((y, l) = select y bl), ((y, l) = select y l)
((y, l) = select y gv0), ((y, gv0) = select n0 bl), ((y, gv0) = select n0 l), ((y, gv0) = select n0 gv0), ((y, gv0) = select gv3 bl), ((y, gv0) = select gv3 l), ((y, gv0) = select gv3 gv0), ((y, gv0) = select n1 bl), ((y, gv0) = select n1 l), ((y, gv0) = select n1 gv0)
((y, gv0) = select y bl), ((y, gv0) = select y l), ((y, gv0) = select y gv0), (length bl = n0), (length bl = gv3), (length bl = n1), (length bl = y), (length l = n0), (length l = gv3), (length l = n1)
(length l = y), (length gv0 = n0), (length gv0 = gv3), (length gv0 = n1), (length gv0 = y)

Label: 6 (6)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv1), (gv3 <=* bl), (gv3 <=* l), (gv3 <=* gv1), (n1 <=* bl), (n1 <=* l), (n1 <=* gv1), (y <=* bl)
(y <=* l), (y <=* gv1), (sorted bl), (sorted l), (sorted gv1), (Permutation bl bl), (Permutation bl l), (Permutation bl gv1), (Permutation l bl), (Permutation l l)
(Permutation l gv1), (Permutation gv1 bl), (Permutation gv1 l), (Permutation gv1 gv1), (In n0 bl), (In n0 l), (In n0 gv1), (In gv3 bl), (In gv3 l), (In gv3 gv1)
(In n1 bl), (In n1 l), (In n1 gv1), (In y bl), (In y l), (In y gv1), (n0 < n0), (n0 < gv3), (n0 < n1), (n0 < y)
(gv3 < n0), (gv3 < gv3), (gv3 < n1), (gv3 < y), (n1 < n0), (n1 < gv3), (n1 < n1), (n1 < y), (y < n0), (y < gv3)
(y < n1), (y < y), (n0 <= n0), (n0 <= gv3), (n0 <= n1), (n0 <= y), (gv3 <= n0), (gv3 <= gv3), (gv3 <= n1), (gv3 <= y)
(n1 <= n0), (n1 <= gv3), (n1 <= n1), (n1 <= y), (y <= n0), (y <= gv3), (y <= n1), (y <= y), (bl = bl), (bl = l)
(bl = gv1), (l = bl), (l = l), (l = gv1), (gv1 = bl), (gv1 = l), (gv1 = gv1), (n0 = n0), (n0 = gv3), (n0 = n1)
(n0 = y), (gv3 = n0), (gv3 = gv3), (gv3 = n1), (gv3 = y), (n1 = n0), (n1 = gv3), (n1 = n1), (n1 = y), (y = n0)
(y = gv3), (y = n1), (y = y), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv1), (n0 <=* gv3 :: bl), (n0 <=* gv3 :: l), (n0 <=* gv3 :: gv1), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv1), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv1), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv1), (n0 <=* selsort bl n0), (n0 <=* selsort bl gv3)
(n0 <=* selsort bl n1), (n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l gv3), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv1 n0), (n0 <=* selsort gv1 gv3), (n0 <=* selsort gv1 n1), (n0 <=* selsort gv1 y)
(n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv1), (n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv1), (n0 <=* gv1 ++ bl), (n0 <=* gv1 ++ l), (n0 <=* gv1 ++ gv1), (n0 <=* [])
(gv3 <=* n0 :: bl), (gv3 <=* n0 :: l), (gv3 <=* n0 :: gv1), (gv3 <=* gv3 :: bl), (gv3 <=* gv3 :: l), (gv3 <=* gv3 :: gv1), (gv3 <=* n1 :: bl), (gv3 <=* n1 :: l), (gv3 <=* n1 :: gv1), (gv3 <=* y :: bl)
(gv3 <=* y :: l), (gv3 <=* y :: gv1), (gv3 <=* selection_sort bl), (gv3 <=* selection_sort l), (gv3 <=* selection_sort gv1), (gv3 <=* selsort bl n0), (gv3 <=* selsort bl gv3), (gv3 <=* selsort bl n1), (gv3 <=* selsort bl y), (gv3 <=* selsort l n0)
(gv3 <=* selsort l gv3), (gv3 <=* selsort l n1), (gv3 <=* selsort l y), (gv3 <=* selsort gv1 n0), (gv3 <=* selsort gv1 gv3), (gv3 <=* selsort gv1 n1), (gv3 <=* selsort gv1 y), (gv3 <=* bl ++ bl), (gv3 <=* bl ++ l), (gv3 <=* bl ++ gv1)
(gv3 <=* l ++ bl), (gv3 <=* l ++ l), (gv3 <=* l ++ gv1), (gv3 <=* gv1 ++ bl), (gv3 <=* gv1 ++ l), (gv3 <=* gv1 ++ gv1), (gv3 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv1)
(n1 <=* gv3 :: bl), (n1 <=* gv3 :: l), (n1 <=* gv3 :: gv1), (n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv1), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv1), (n1 <=* selection_sort bl)
(n1 <=* selection_sort l), (n1 <=* selection_sort gv1), (n1 <=* selsort bl n0), (n1 <=* selsort bl gv3), (n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l gv3), (n1 <=* selsort l n1), (n1 <=* selsort l y)
(n1 <=* selsort gv1 n0), (n1 <=* selsort gv1 gv3), (n1 <=* selsort gv1 n1), (n1 <=* selsort gv1 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l), (n1 <=* bl ++ gv1), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv1)
(n1 <=* gv1 ++ bl), (n1 <=* gv1 ++ l), (n1 <=* gv1 ++ gv1), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l), (y <=* n0 :: gv1), (y <=* gv3 :: bl), (y <=* gv3 :: l), (y <=* gv3 :: gv1)
(y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv1), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv1), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv1), (y <=* selsort bl n0)
(y <=* selsort bl gv3), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l gv3), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv1 n0), (y <=* selsort gv1 gv3), (y <=* selsort gv1 n1)
(y <=* selsort gv1 y), (y <=* bl ++ bl), (y <=* bl ++ l), (y <=* bl ++ gv1), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv1), (y <=* gv1 ++ bl), (y <=* gv1 ++ l), (y <=* gv1 ++ gv1)
(y <=* []), (length bl <=* bl), (length bl <=* l), (length bl <=* gv1), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv1), (length bl <=* gv3 :: bl), (length bl <=* gv3 :: l), (length bl <=* gv3 :: gv1)
(length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv1), (length bl <=* y :: bl), (length bl <=* y :: l), (length bl <=* y :: gv1), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv1), (length bl <=* selsort bl n0)
(length bl <=* selsort bl gv3), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l gv3), (length bl <=* selsort l n1), (length bl <=* selsort l y), (length bl <=* selsort gv1 n0), (length bl <=* selsort gv1 gv3), (length bl <=* selsort gv1 n1)
(length bl <=* selsort gv1 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv1), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv1), (length bl <=* gv1 ++ bl), (length bl <=* gv1 ++ l), (length bl <=* gv1 ++ gv1)
(length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv1), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv1), (length l <=* gv3 :: bl), (length l <=* gv3 :: l), (length l <=* gv3 :: gv1)
(length l <=* n1 :: bl), (length l <=* n1 :: l), (length l <=* n1 :: gv1), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv1), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv1), (length l <=* selsort bl n0)
(length l <=* selsort bl gv3), (length l <=* selsort bl n1), (length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l gv3), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv1 n0), (length l <=* selsort gv1 gv3), (length l <=* selsort gv1 n1)
(length l <=* selsort gv1 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv1), (length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv1), (length l <=* gv1 ++ bl), (length l <=* gv1 ++ l), (length l <=* gv1 ++ gv1)
(length l <=* []), (length gv1 <=* bl), (length gv1 <=* l), (length gv1 <=* gv1), (length gv1 <=* n0 :: bl), (length gv1 <=* n0 :: l), (length gv1 <=* n0 :: gv1), (length gv1 <=* gv3 :: bl), (length gv1 <=* gv3 :: l), (length gv1 <=* gv3 :: gv1)
(length gv1 <=* n1 :: bl), (length gv1 <=* n1 :: l), (length gv1 <=* n1 :: gv1), (length gv1 <=* y :: bl), (length gv1 <=* y :: l), (length gv1 <=* y :: gv1), (length gv1 <=* selection_sort bl), (length gv1 <=* selection_sort l), (length gv1 <=* selection_sort gv1), (length gv1 <=* selsort bl n0)
(length gv1 <=* selsort bl gv3), (length gv1 <=* selsort bl n1), (length gv1 <=* selsort bl y), (length gv1 <=* selsort l n0), (length gv1 <=* selsort l gv3), (length gv1 <=* selsort l n1), (length gv1 <=* selsort l y), (length gv1 <=* selsort gv1 n0), (length gv1 <=* selsort gv1 gv3), (length gv1 <=* selsort gv1 n1)
(length gv1 <=* selsort gv1 y), (length gv1 <=* bl ++ bl), (length gv1 <=* bl ++ l), (length gv1 <=* bl ++ gv1), (length gv1 <=* l ++ bl), (length gv1 <=* l ++ l), (length gv1 <=* l ++ gv1), (length gv1 <=* gv1 ++ bl), (length gv1 <=* gv1 ++ l), (length gv1 <=* gv1 ++ gv1)
(length gv1 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv1)), (sorted (gv3 :: bl)), (sorted (gv3 :: l)), (sorted (gv3 :: gv1)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv1))
(sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv1)), (sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv1)), (sorted (selsort bl n0)), (sorted (selsort bl gv3)), (sorted (selsort bl n1)), (sorted (selsort bl y))
(sorted (selsort l n0)), (sorted (selsort l gv3)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv1 n0)), (sorted (selsort gv1 gv3)), (sorted (selsort gv1 n1)), (sorted (selsort gv1 y)), (sorted (bl ++ bl)), (sorted (bl ++ l))
(sorted (bl ++ gv1)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv1)), (sorted (gv1 ++ bl)), (sorted (gv1 ++ l)), (sorted (gv1 ++ gv1)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l))
(Permutation bl (n0 :: gv1)), (Permutation bl (gv3 :: bl)), (Permutation bl (gv3 :: l)), (Permutation bl (gv3 :: gv1)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv1)), (Permutation bl (y :: bl)), (Permutation bl (y :: l)), (Permutation bl (y :: gv1))
(Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv1)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl gv3)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l gv3)), (Permutation bl (selsort l n1))
(Permutation bl (selsort l y)), (Permutation bl (selsort gv1 n0)), (Permutation bl (selsort gv1 gv3)), (Permutation bl (selsort gv1 n1)), (Permutation bl (selsort gv1 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv1)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l))
(Permutation bl (l ++ gv1)), (Permutation bl (gv1 ++ bl)), (Permutation bl (gv1 ++ l)), (Permutation bl (gv1 ++ gv1)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv1)), (Permutation l (gv3 :: bl)), (Permutation l (gv3 :: l))
(Permutation l (gv3 :: gv1)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv1)), (Permutation l (y :: bl)), (Permutation l (y :: l)), (Permutation l (y :: gv1)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv1))
(Permutation l (selsort bl n0)), (Permutation l (selsort bl gv3)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l gv3)), (Permutation l (selsort l n1)), (Permutation l (selsort l y)), (Permutation l (selsort gv1 n0)), (Permutation l (selsort gv1 gv3))
(Permutation l (selsort gv1 n1)), (Permutation l (selsort gv1 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv1)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv1)), (Permutation l (gv1 ++ bl)), (Permutation l (gv1 ++ l))
(Permutation l (gv1 ++ gv1)), (Permutation l []), (Permutation gv1 (n0 :: bl)), (Permutation gv1 (n0 :: l)), (Permutation gv1 (n0 :: gv1)), (Permutation gv1 (gv3 :: bl)), (Permutation gv1 (gv3 :: l)), (Permutation gv1 (gv3 :: gv1)), (Permutation gv1 (n1 :: bl)), (Permutation gv1 (n1 :: l))
(Permutation gv1 (n1 :: gv1)), (Permutation gv1 (y :: bl)), (Permutation gv1 (y :: l)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (selection_sort bl)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selsort bl n0)), (Permutation gv1 (selsort bl gv3)), (Permutation gv1 (selsort bl n1))
(Permutation gv1 (selsort bl y)), (Permutation gv1 (selsort l n0)), (Permutation gv1 (selsort l gv3)), (Permutation gv1 (selsort l n1)), (Permutation gv1 (selsort l y)), (Permutation gv1 (selsort gv1 n0)), (Permutation gv1 (selsort gv1 gv3)), (Permutation gv1 (selsort gv1 n1)), (Permutation gv1 (selsort gv1 y)), (Permutation gv1 (bl ++ bl))
(Permutation gv1 (bl ++ l)), (Permutation gv1 (bl ++ gv1)), (Permutation gv1 (l ++ bl)), (Permutation gv1 (l ++ l)), (Permutation gv1 (l ++ gv1)), (Permutation gv1 (gv1 ++ bl)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (n0 :: bl) bl)
(Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv1), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv1)), (Permutation (n0 :: bl) (gv3 :: bl)), (Permutation (n0 :: bl) (gv3 :: l)), (Permutation (n0 :: bl) (gv3 :: gv1)), (Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv1))
(Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv1)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv1)), (Permutation (n0 :: bl) (selsort bl n0)), (Permutation (n0 :: bl) (selsort bl gv3)), (Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y))
(Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l gv3)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv1 n0)), (Permutation (n0 :: bl) (selsort gv1 gv3)), (Permutation (n0 :: bl) (selsort gv1 n1)), (Permutation (n0 :: bl) (selsort gv1 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv1)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv1)), (Permutation (n0 :: bl) (gv1 ++ bl)), (Permutation (n0 :: bl) (gv1 ++ l)), (Permutation (n0 :: bl) (gv1 ++ gv1)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv1)), (Permutation (n0 :: l) (gv3 :: bl)), (Permutation (n0 :: l) (gv3 :: l)), (Permutation (n0 :: l) (gv3 :: gv1)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv1)), (Permutation (n0 :: l) (y :: bl))
(Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv1)), (Permutation (n0 :: l) (selection_sort bl)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv1)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl gv3)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0))
(Permutation (n0 :: l) (selsort l gv3)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv1 n0)), (Permutation (n0 :: l) (selsort gv1 gv3)), (Permutation (n0 :: l) (selsort gv1 n1)), (Permutation (n0 :: l) (selsort gv1 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv1))
(Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv1)), (Permutation (n0 :: l) (gv1 ++ bl)), (Permutation (n0 :: l) (gv1 ++ l)), (Permutation (n0 :: l) (gv1 ++ gv1)), (Permutation (n0 :: l) []), (Permutation (n0 :: gv1) bl), (Permutation (n0 :: gv1) l), (Permutation (n0 :: gv1) gv1)
(Permutation (n0 :: gv1) (n0 :: bl)), (Permutation (n0 :: gv1) (n0 :: l)), (Permutation (n0 :: gv1) (gv3 :: bl)), (Permutation (n0 :: gv1) (gv3 :: l)), (Permutation (n0 :: gv1) (gv3 :: gv1)), (Permutation (n0 :: gv1) (n1 :: bl)), (Permutation (n0 :: gv1) (n1 :: l)), (Permutation (n0 :: gv1) (n1 :: gv1)), (Permutation (n0 :: gv1) (y :: bl)), (Permutation (n0 :: gv1) (y :: l))
(Permutation (n0 :: gv1) (y :: gv1)), (Permutation (n0 :: gv1) (selection_sort bl)), (Permutation (n0 :: gv1) (selection_sort l)), (Permutation (n0 :: gv1) (selection_sort gv1)), (Permutation (n0 :: gv1) (selsort bl n0)), (Permutation (n0 :: gv1) (selsort bl gv3)), (Permutation (n0 :: gv1) (selsort bl n1)), (Permutation (n0 :: gv1) (selsort bl y)), (Permutation (n0 :: gv1) (selsort l n0)), (Permutation (n0 :: gv1) (selsort l gv3))
(Permutation (n0 :: gv1) (selsort l n1)), (Permutation (n0 :: gv1) (selsort l y)), (Permutation (n0 :: gv1) (selsort gv1 n0)), (Permutation (n0 :: gv1) (selsort gv1 gv3)), (Permutation (n0 :: gv1) (selsort gv1 n1)), (Permutation (n0 :: gv1) (selsort gv1 y)), (Permutation (n0 :: gv1) (bl ++ bl)), (Permutation (n0 :: gv1) (bl ++ l)), (Permutation (n0 :: gv1) (bl ++ gv1)), (Permutation (n0 :: gv1) (l ++ bl))
(Permutation (n0 :: gv1) (l ++ l)), (Permutation (n0 :: gv1) (l ++ gv1)), (Permutation (n0 :: gv1) (gv1 ++ bl)), (Permutation (n0 :: gv1) (gv1 ++ l)), (Permutation (n0 :: gv1) (gv1 ++ gv1)), (Permutation (n0 :: gv1) []), (Permutation (gv3 :: bl) bl), (Permutation (gv3 :: bl) l), (Permutation (gv3 :: bl) gv1), (Permutation (gv3 :: bl) (n0 :: bl))
(Permutation (gv3 :: bl) (n0 :: l)), (Permutation (gv3 :: bl) (n0 :: gv1)), (Permutation (gv3 :: bl) (gv3 :: l)), (Permutation (gv3 :: bl) (gv3 :: gv1)), (Permutation (gv3 :: bl) (n1 :: bl)), (Permutation (gv3 :: bl) (n1 :: l)), (Permutation (gv3 :: bl) (n1 :: gv1)), (Permutation (gv3 :: bl) (y :: bl)), (Permutation (gv3 :: bl) (y :: l)), (Permutation (gv3 :: bl) (y :: gv1))
(Permutation (gv3 :: bl) (selection_sort bl)), (Permutation (gv3 :: bl) (selection_sort l)), (Permutation (gv3 :: bl) (selection_sort gv1)), (Permutation (gv3 :: bl) (selsort bl n0)), (Permutation (gv3 :: bl) (selsort bl gv3)), (Permutation (gv3 :: bl) (selsort bl n1)), (Permutation (gv3 :: bl) (selsort bl y)), (Permutation (gv3 :: bl) (selsort l n0)), (Permutation (gv3 :: bl) (selsort l gv3)), (Permutation (gv3 :: bl) (selsort l n1))
(Permutation (gv3 :: bl) (selsort l y)), (Permutation (gv3 :: bl) (selsort gv1 n0)), (Permutation (gv3 :: bl) (selsort gv1 gv3)), (Permutation (gv3 :: bl) (selsort gv1 n1)), (Permutation (gv3 :: bl) (selsort gv1 y)), (Permutation (gv3 :: bl) (bl ++ bl)), (Permutation (gv3 :: bl) (bl ++ l)), (Permutation (gv3 :: bl) (bl ++ gv1)), (Permutation (gv3 :: bl) (l ++ bl)), (Permutation (gv3 :: bl) (l ++ l))
(Permutation (gv3 :: bl) (l ++ gv1)), (Permutation (gv3 :: bl) (gv1 ++ bl)), (Permutation (gv3 :: bl) (gv1 ++ l)), (Permutation (gv3 :: bl) (gv1 ++ gv1)), (Permutation (gv3 :: bl) []), (Permutation (gv3 :: l) bl), (Permutation (gv3 :: l) l), (Permutation (gv3 :: l) gv1), (Permutation (gv3 :: l) (n0 :: bl)), (Permutation (gv3 :: l) (n0 :: l))
(Permutation (gv3 :: l) (n0 :: gv1)), (Permutation (gv3 :: l) (gv3 :: bl)), (Permutation (gv3 :: l) (gv3 :: gv1)), (Permutation (gv3 :: l) (n1 :: bl)), (Permutation (gv3 :: l) (n1 :: l)), (Permutation (gv3 :: l) (n1 :: gv1)), (Permutation (gv3 :: l) (y :: bl)), (Permutation (gv3 :: l) (y :: l)), (Permutation (gv3 :: l) (y :: gv1)), (Permutation (gv3 :: l) (selection_sort bl))
(Permutation (gv3 :: l) (selection_sort l)), (Permutation (gv3 :: l) (selection_sort gv1)), (Permutation (gv3 :: l) (selsort bl n0)), (Permutation (gv3 :: l) (selsort bl gv3)), (Permutation (gv3 :: l) (selsort bl n1)), (Permutation (gv3 :: l) (selsort bl y)), (Permutation (gv3 :: l) (selsort l n0)), (Permutation (gv3 :: l) (selsort l gv3)), (Permutation (gv3 :: l) (selsort l n1)), (Permutation (gv3 :: l) (selsort l y))
(Permutation (gv3 :: l) (selsort gv1 n0)), (Permutation (gv3 :: l) (selsort gv1 gv3)), (Permutation (gv3 :: l) (selsort gv1 n1)), (Permutation (gv3 :: l) (selsort gv1 y)), (Permutation (gv3 :: l) (bl ++ bl)), (Permutation (gv3 :: l) (bl ++ l)), (Permutation (gv3 :: l) (bl ++ gv1)), (Permutation (gv3 :: l) (l ++ bl)), (Permutation (gv3 :: l) (l ++ l)), (Permutation (gv3 :: l) (l ++ gv1))
(Permutation (gv3 :: l) (gv1 ++ bl)), (Permutation (gv3 :: l) (gv1 ++ l)), (Permutation (gv3 :: l) (gv1 ++ gv1)), (Permutation (gv3 :: l) []), (Permutation (gv3 :: gv1) bl), (Permutation (gv3 :: gv1) l), (Permutation (gv3 :: gv1) gv1), (Permutation (gv3 :: gv1) (n0 :: bl)), (Permutation (gv3 :: gv1) (n0 :: l)), (Permutation (gv3 :: gv1) (n0 :: gv1))
(Permutation (gv3 :: gv1) (gv3 :: bl)), (Permutation (gv3 :: gv1) (gv3 :: l)), (Permutation (gv3 :: gv1) (n1 :: bl)), (Permutation (gv3 :: gv1) (n1 :: l)), (Permutation (gv3 :: gv1) (n1 :: gv1)), (Permutation (gv3 :: gv1) (y :: bl)), (Permutation (gv3 :: gv1) (y :: l)), (Permutation (gv3 :: gv1) (y :: gv1)), (Permutation (gv3 :: gv1) (selection_sort bl)), (Permutation (gv3 :: gv1) (selection_sort l))
(Permutation (gv3 :: gv1) (selection_sort gv1)), (Permutation (gv3 :: gv1) (selsort bl n0)), (Permutation (gv3 :: gv1) (selsort bl gv3)), (Permutation (gv3 :: gv1) (selsort bl n1)), (Permutation (gv3 :: gv1) (selsort bl y)), (Permutation (gv3 :: gv1) (selsort l n0)), (Permutation (gv3 :: gv1) (selsort l gv3)), (Permutation (gv3 :: gv1) (selsort l n1)), (Permutation (gv3 :: gv1) (selsort l y)), (Permutation (gv3 :: gv1) (selsort gv1 n0))
(Permutation (gv3 :: gv1) (selsort gv1 gv3)), (Permutation (gv3 :: gv1) (selsort gv1 n1)), (Permutation (gv3 :: gv1) (selsort gv1 y)), (Permutation (gv3 :: gv1) (bl ++ bl)), (Permutation (gv3 :: gv1) (bl ++ l)), (Permutation (gv3 :: gv1) (bl ++ gv1)), (Permutation (gv3 :: gv1) (l ++ bl)), (Permutation (gv3 :: gv1) (l ++ l)), (Permutation (gv3 :: gv1) (l ++ gv1)), (Permutation (gv3 :: gv1) (gv1 ++ bl))
(Permutation (gv3 :: gv1) (gv1 ++ l)), (Permutation (gv3 :: gv1) (gv1 ++ gv1)), (Permutation (gv3 :: gv1) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv1), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv1)), (Permutation (n1 :: bl) (gv3 :: bl))
(Permutation (n1 :: bl) (gv3 :: l)), (Permutation (n1 :: bl) (gv3 :: gv1)), (Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv1)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv1)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv1))
(Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl gv3)), (Permutation (n1 :: bl) (selsort bl n1)), (Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l gv3)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv1 n0)), (Permutation (n1 :: bl) (selsort gv1 gv3))
(Permutation (n1 :: bl) (selsort gv1 n1)), (Permutation (n1 :: bl) (selsort gv1 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv1)), (Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv1)), (Permutation (n1 :: bl) (gv1 ++ bl)), (Permutation (n1 :: bl) (gv1 ++ l))
(Permutation (n1 :: bl) (gv1 ++ gv1)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv1), (Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv1)), (Permutation (n1 :: l) (gv3 :: bl)), (Permutation (n1 :: l) (gv3 :: l))
(Permutation (n1 :: l) (gv3 :: gv1)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv1)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv1)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort gv1)), (Permutation (n1 :: l) (selsort bl n0))
(Permutation (n1 :: l) (selsort bl gv3)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l gv3)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv1 n0)), (Permutation (n1 :: l) (selsort gv1 gv3)), (Permutation (n1 :: l) (selsort gv1 n1))
(Permutation (n1 :: l) (selsort gv1 y)), (Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv1)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv1)), (Permutation (n1 :: l) (gv1 ++ bl)), (Permutation (n1 :: l) (gv1 ++ l)), (Permutation (n1 :: l) (gv1 ++ gv1))
(Permutation (n1 :: l) []), (Permutation (n1 :: gv1) bl), (Permutation (n1 :: gv1) l), (Permutation (n1 :: gv1) gv1), (Permutation (n1 :: gv1) (n0 :: bl)), (Permutation (n1 :: gv1) (n0 :: l)), (Permutation (n1 :: gv1) (n0 :: gv1)), (Permutation (n1 :: gv1) (gv3 :: bl)), (Permutation (n1 :: gv1) (gv3 :: l)), (Permutation (n1 :: gv1) (gv3 :: gv1))
(Permutation (n1 :: gv1) (n1 :: bl)), (Permutation (n1 :: gv1) (n1 :: l)), (Permutation (n1 :: gv1) (y :: bl)), (Permutation (n1 :: gv1) (y :: l)), (Permutation (n1 :: gv1) (y :: gv1)), (Permutation (n1 :: gv1) (selection_sort bl)), (Permutation (n1 :: gv1) (selection_sort l)), (Permutation (n1 :: gv1) (selection_sort gv1)), (Permutation (n1 :: gv1) (selsort bl n0)), (Permutation (n1 :: gv1) (selsort bl gv3))
(Permutation (n1 :: gv1) (selsort bl n1)), (Permutation (n1 :: gv1) (selsort bl y)), (Permutation (n1 :: gv1) (selsort l n0)), (Permutation (n1 :: gv1) (selsort l gv3)), (Permutation (n1 :: gv1) (selsort l n1)), (Permutation (n1 :: gv1) (selsort l y)), (Permutation (n1 :: gv1) (selsort gv1 n0)), (Permutation (n1 :: gv1) (selsort gv1 gv3)), (Permutation (n1 :: gv1) (selsort gv1 n1)), (Permutation (n1 :: gv1) (selsort gv1 y))
(Permutation (n1 :: gv1) (bl ++ bl)), (Permutation (n1 :: gv1) (bl ++ l)), (Permutation (n1 :: gv1) (bl ++ gv1)), (Permutation (n1 :: gv1) (l ++ bl)), (Permutation (n1 :: gv1) (l ++ l)), (Permutation (n1 :: gv1) (l ++ gv1)), (Permutation (n1 :: gv1) (gv1 ++ bl)), (Permutation (n1 :: gv1) (gv1 ++ l)), (Permutation (n1 :: gv1) (gv1 ++ gv1)), (Permutation (n1 :: gv1) [])
(Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv1)), (Permutation (y :: bl) (gv3 :: bl)), (Permutation (y :: bl) (gv3 :: l)), (Permutation (y :: bl) (gv3 :: gv1)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv1)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv1)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv1)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl gv3)), (Permutation (y :: bl) (selsort bl n1))
(Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l gv3)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv1 n0)), (Permutation (y :: bl) (selsort gv1 gv3)), (Permutation (y :: bl) (selsort gv1 n1)), (Permutation (y :: bl) (selsort gv1 y)), (Permutation (y :: bl) (bl ++ bl))
(Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv1)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv1)), (Permutation (y :: bl) (gv1 ++ bl)), (Permutation (y :: bl) (gv1 ++ l)), (Permutation (y :: bl) (gv1 ++ gv1)), (Permutation (y :: bl) []), (Permutation (y :: l) bl)
(Permutation (y :: l) l), (Permutation (y :: l) gv1), (Permutation (y :: l) (n0 :: bl)), (Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv1)), (Permutation (y :: l) (gv3 :: bl)), (Permutation (y :: l) (gv3 :: l)), (Permutation (y :: l) (gv3 :: gv1)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l))
(Permutation (y :: l) (n1 :: gv1)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv1)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv1)), (Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl gv3)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y))
(Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l gv3)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv1 n0)), (Permutation (y :: l) (selsort gv1 gv3)), (Permutation (y :: l) (selsort gv1 n1)), (Permutation (y :: l) (selsort gv1 y)), (Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) (bl ++ l))
(Permutation (y :: l) (bl ++ gv1)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv1)), (Permutation (y :: l) (gv1 ++ bl)), (Permutation (y :: l) (gv1 ++ l)), (Permutation (y :: l) (gv1 ++ gv1)), (Permutation (y :: l) []), (Permutation (y :: gv1) bl), (Permutation (y :: gv1) l)
(Permutation (y :: gv1) gv1), (Permutation (y :: gv1) (n0 :: bl)), (Permutation (y :: gv1) (n0 :: l)), (Permutation (y :: gv1) (n0 :: gv1)), (Permutation (y :: gv1) (gv3 :: bl)), (Permutation (y :: gv1) (gv3 :: l)), (Permutation (y :: gv1) (gv3 :: gv1)), (Permutation (y :: gv1) (n1 :: bl)), (Permutation (y :: gv1) (n1 :: l)), (Permutation (y :: gv1) (n1 :: gv1))
(Permutation (y :: gv1) (y :: bl)), (Permutation (y :: gv1) (y :: l)), (Permutation (y :: gv1) (selection_sort bl)), (Permutation (y :: gv1) (selection_sort l)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selsort bl n0)), (Permutation (y :: gv1) (selsort bl gv3)), (Permutation (y :: gv1) (selsort bl n1)), (Permutation (y :: gv1) (selsort bl y)), (Permutation (y :: gv1) (selsort l n0))
(Permutation (y :: gv1) (selsort l gv3)), (Permutation (y :: gv1) (selsort l n1)), (Permutation (y :: gv1) (selsort l y)), (Permutation (y :: gv1) (selsort gv1 n0)), (Permutation (y :: gv1) (selsort gv1 gv3)), (Permutation (y :: gv1) (selsort gv1 n1)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (bl ++ bl)), (Permutation (y :: gv1) (bl ++ l)), (Permutation (y :: gv1) (bl ++ gv1))
(Permutation (y :: gv1) (l ++ bl)), (Permutation (y :: gv1) (l ++ l)), (Permutation (y :: gv1) (l ++ gv1)), (Permutation (y :: gv1) (gv1 ++ bl)), (Permutation (y :: gv1) (gv1 ++ l)), (Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv1)
(Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv1)), (Permutation (selection_sort bl) (gv3 :: bl)), (Permutation (selection_sort bl) (gv3 :: l)), (Permutation (selection_sort bl) (gv3 :: gv1)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l)), (Permutation (selection_sort bl) (n1 :: gv1)), (Permutation (selection_sort bl) (y :: bl))
(Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv1)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv1)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl gv3)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0)), (Permutation (selection_sort bl) (selsort l gv3))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv1 n0)), (Permutation (selection_sort bl) (selsort gv1 gv3)), (Permutation (selection_sort bl) (selsort gv1 n1)), (Permutation (selection_sort bl) (selsort gv1 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv1)), (Permutation (selection_sort bl) (l ++ bl))
(Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) (l ++ gv1)), (Permutation (selection_sort bl) (gv1 ++ bl)), (Permutation (selection_sort bl) (gv1 ++ l)), (Permutation (selection_sort bl) (gv1 ++ gv1)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv1), (Permutation (selection_sort l) (n0 :: bl))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n0 :: gv1)), (Permutation (selection_sort l) (gv3 :: bl)), (Permutation (selection_sort l) (gv3 :: l)), (Permutation (selection_sort l) (gv3 :: gv1)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv1)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l))
(Permutation (selection_sort l) (y :: gv1)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv1)), (Permutation (selection_sort l) (selsort bl n0)), (Permutation (selection_sort l) (selsort bl gv3)), (Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l gv3)), (Permutation (selection_sort l) (selsort l n1))
(Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv1 n0)), (Permutation (selection_sort l) (selsort gv1 gv3)), (Permutation (selection_sort l) (selsort gv1 n1)), (Permutation (selection_sort l) (selsort gv1 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (bl ++ gv1)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l))
(Permutation (selection_sort l) (l ++ gv1)), (Permutation (selection_sort l) (gv1 ++ bl)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (gv1 ++ gv1)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv1) bl), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) (n0 :: bl)), (Permutation (selection_sort gv1) (n0 :: l))
(Permutation (selection_sort gv1) (n0 :: gv1)), (Permutation (selection_sort gv1) (gv3 :: bl)), (Permutation (selection_sort gv1) (gv3 :: l)), (Permutation (selection_sort gv1) (gv3 :: gv1)), (Permutation (selection_sort gv1) (n1 :: bl)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n1 :: gv1)), (Permutation (selection_sort gv1) (y :: bl)), (Permutation (selection_sort gv1) (y :: l)), (Permutation (selection_sort gv1) (y :: gv1))
(Permutation (selection_sort gv1) (selection_sort bl)), (Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selsort bl n0)), (Permutation (selection_sort gv1) (selsort bl gv3)), (Permutation (selection_sort gv1) (selsort bl n1)), (Permutation (selection_sort gv1) (selsort bl y)), (Permutation (selection_sort gv1) (selsort l n0)), (Permutation (selection_sort gv1) (selsort l gv3)), (Permutation (selection_sort gv1) (selsort l n1)), (Permutation (selection_sort gv1) (selsort l y))
(Permutation (selection_sort gv1) (selsort gv1 n0)), (Permutation (selection_sort gv1) (selsort gv1 gv3)), (Permutation (selection_sort gv1) (selsort gv1 n1)), (Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (bl ++ bl)), (Permutation (selection_sort gv1) (bl ++ l)), (Permutation (selection_sort gv1) (bl ++ gv1)), (Permutation (selection_sort gv1) (l ++ bl)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) (l ++ gv1))
(Permutation (selection_sort gv1) (gv1 ++ bl)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (gv1 ++ gv1)), (Permutation (selection_sort gv1) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv1), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv1))
(Permutation (selsort bl n0) (gv3 :: bl)), (Permutation (selsort bl n0) (gv3 :: l)), (Permutation (selsort bl n0) (gv3 :: gv1)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv1)), (Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv1)), (Permutation (selsort bl n0) (selection_sort bl))
(Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv1)), (Permutation (selsort bl n0) (selsort bl gv3)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l gv3)), (Permutation (selsort bl n0) (selsort l n1)), (Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv1 n0))
(Permutation (selsort bl n0) (selsort gv1 gv3)), (Permutation (selsort bl n0) (selsort gv1 n1)), (Permutation (selsort bl n0) (selsort gv1 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv1)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv1)), (Permutation (selsort bl n0) (gv1 ++ bl))
(Permutation (selsort bl n0) (gv1 ++ l)), (Permutation (selsort bl n0) (gv1 ++ gv1)), (Permutation (selsort bl n0) []), (Permutation (selsort bl gv3) bl), (Permutation (selsort bl gv3) l), (Permutation (selsort bl gv3) gv1), (Permutation (selsort bl gv3) (n0 :: bl)), (Permutation (selsort bl gv3) (n0 :: l)), (Permutation (selsort bl gv3) (n0 :: gv1)), (Permutation (selsort bl gv3) (gv3 :: bl))
(Permutation (selsort bl gv3) (gv3 :: l)), (Permutation (selsort bl gv3) (gv3 :: gv1)), (Permutation (selsort bl gv3) (n1 :: bl)), (Permutation (selsort bl gv3) (n1 :: l)), (Permutation (selsort bl gv3) (n1 :: gv1)), (Permutation (selsort bl gv3) (y :: bl)), (Permutation (selsort bl gv3) (y :: l)), (Permutation (selsort bl gv3) (y :: gv1)), (Permutation (selsort bl gv3) (selection_sort bl)), (Permutation (selsort bl gv3) (selection_sort l))
(Permutation (selsort bl gv3) (selection_sort gv1)), (Permutation (selsort bl gv3) (selsort bl n0)), (Permutation (selsort bl gv3) (selsort bl n1)), (Permutation (selsort bl gv3) (selsort bl y)), (Permutation (selsort bl gv3) (selsort l n0)), (Permutation (selsort bl gv3) (selsort l gv3)), (Permutation (selsort bl gv3) (selsort l n1)), (Permutation (selsort bl gv3) (selsort l y)), (Permutation (selsort bl gv3) (selsort gv1 n0)), (Permutation (selsort bl gv3) (selsort gv1 gv3))
(Permutation (selsort bl gv3) (selsort gv1 n1)), (Permutation (selsort bl gv3) (selsort gv1 y)), (Permutation (selsort bl gv3) (bl ++ bl)), (Permutation (selsort bl gv3) (bl ++ l)), (Permutation (selsort bl gv3) (bl ++ gv1)), (Permutation (selsort bl gv3) (l ++ bl)), (Permutation (selsort bl gv3) (l ++ l)), (Permutation (selsort bl gv3) (l ++ gv1)), (Permutation (selsort bl gv3) (gv1 ++ bl)), (Permutation (selsort bl gv3) (gv1 ++ l))
(Permutation (selsort bl gv3) (gv1 ++ gv1)), (Permutation (selsort bl gv3) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv1), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv1)), (Permutation (selsort bl n1) (gv3 :: bl)), (Permutation (selsort bl n1) (gv3 :: l))
(Permutation (selsort bl n1) (gv3 :: gv1)), (Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv1)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv1)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv1))
(Permutation (selsort bl n1) (selsort bl n0)), (Permutation (selsort bl n1) (selsort bl gv3)), (Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l gv3)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv1 n0)), (Permutation (selsort bl n1) (selsort gv1 gv3)), (Permutation (selsort bl n1) (selsort gv1 n1))
(Permutation (selsort bl n1) (selsort gv1 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv1)), (Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv1)), (Permutation (selsort bl n1) (gv1 ++ bl)), (Permutation (selsort bl n1) (gv1 ++ l)), (Permutation (selsort bl n1) (gv1 ++ gv1))
(Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv1), (Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv1)), (Permutation (selsort bl y) (gv3 :: bl)), (Permutation (selsort bl y) (gv3 :: l)), (Permutation (selsort bl y) (gv3 :: gv1))
(Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv1)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv1)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv1)), (Permutation (selsort bl y) (selsort bl n0))
(Permutation (selsort bl y) (selsort bl gv3)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l gv3)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv1 n0)), (Permutation (selsort bl y) (selsort gv1 gv3)), (Permutation (selsort bl y) (selsort gv1 n1)), (Permutation (selsort bl y) (selsort gv1 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv1)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv1)), (Permutation (selsort bl y) (gv1 ++ bl)), (Permutation (selsort bl y) (gv1 ++ l)), (Permutation (selsort bl y) (gv1 ++ gv1)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv1), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv1)), (Permutation (selsort l n0) (gv3 :: bl)), (Permutation (selsort l n0) (gv3 :: l)), (Permutation (selsort l n0) (gv3 :: gv1)), (Permutation (selsort l n0) (n1 :: bl))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv1)), (Permutation (selsort l n0) (y :: bl)), (Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv1)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv1)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl gv3))
(Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l gv3)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y)), (Permutation (selsort l n0) (selsort gv1 n0)), (Permutation (selsort l n0) (selsort gv1 gv3)), (Permutation (selsort l n0) (selsort gv1 n1)), (Permutation (selsort l n0) (selsort gv1 y)), (Permutation (selsort l n0) (bl ++ bl))
(Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv1)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv1)), (Permutation (selsort l n0) (gv1 ++ bl)), (Permutation (selsort l n0) (gv1 ++ l)), (Permutation (selsort l n0) (gv1 ++ gv1)), (Permutation (selsort l n0) []), (Permutation (selsort l gv3) bl)
(Permutation (selsort l gv3) l), (Permutation (selsort l gv3) gv1), (Permutation (selsort l gv3) (n0 :: bl)), (Permutation (selsort l gv3) (n0 :: l)), (Permutation (selsort l gv3) (n0 :: gv1)), (Permutation (selsort l gv3) (gv3 :: bl)), (Permutation (selsort l gv3) (gv3 :: l)), (Permutation (selsort l gv3) (gv3 :: gv1)), (Permutation (selsort l gv3) (n1 :: bl)), (Permutation (selsort l gv3) (n1 :: l))
(Permutation (selsort l gv3) (n1 :: gv1)), (Permutation (selsort l gv3) (y :: bl)), (Permutation (selsort l gv3) (y :: l)), (Permutation (selsort l gv3) (y :: gv1)), (Permutation (selsort l gv3) (selection_sort bl)), (Permutation (selsort l gv3) (selection_sort l)), (Permutation (selsort l gv3) (selection_sort gv1)), (Permutation (selsort l gv3) (selsort bl n0)), (Permutation (selsort l gv3) (selsort bl gv3)), (Permutation (selsort l gv3) (selsort bl n1))
(Permutation (selsort l gv3) (selsort bl y)), (Permutation (selsort l gv3) (selsort l n0)), (Permutation (selsort l gv3) (selsort l n1)), (Permutation (selsort l gv3) (selsort l y)), (Permutation (selsort l gv3) (selsort gv1 n0)), (Permutation (selsort l gv3) (selsort gv1 gv3)), (Permutation (selsort l gv3) (selsort gv1 n1)), (Permutation (selsort l gv3) (selsort gv1 y)), (Permutation (selsort l gv3) (bl ++ bl)), (Permutation (selsort l gv3) (bl ++ l))
(Permutation (selsort l gv3) (bl ++ gv1)), (Permutation (selsort l gv3) (l ++ bl)), (Permutation (selsort l gv3) (l ++ l)), (Permutation (selsort l gv3) (l ++ gv1)), (Permutation (selsort l gv3) (gv1 ++ bl)), (Permutation (selsort l gv3) (gv1 ++ l)), (Permutation (selsort l gv3) (gv1 ++ gv1)), (Permutation (selsort l gv3) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l)
(Permutation (selsort l n1) gv1), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv1)), (Permutation (selsort l n1) (gv3 :: bl)), (Permutation (selsort l n1) (gv3 :: l)), (Permutation (selsort l n1) (gv3 :: gv1)), (Permutation (selsort l n1) (n1 :: bl)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv1))
(Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv1)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv1)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl gv3)), (Permutation (selsort l n1) (selsort bl n1)), (Permutation (selsort l n1) (selsort bl y))
(Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l gv3)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv1 n0)), (Permutation (selsort l n1) (selsort gv1 gv3)), (Permutation (selsort l n1) (selsort gv1 n1)), (Permutation (selsort l n1) (selsort gv1 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv1))
(Permutation (selsort l n1) (l ++ bl)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv1)), (Permutation (selsort l n1) (gv1 ++ bl)), (Permutation (selsort l n1) (gv1 ++ l)), (Permutation (selsort l n1) (gv1 ++ gv1)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv1)
(Permutation (selsort l y) (n0 :: bl)), (Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv1)), (Permutation (selsort l y) (gv3 :: bl)), (Permutation (selsort l y) (gv3 :: l)), (Permutation (selsort l y) (gv3 :: gv1)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv1)), (Permutation (selsort l y) (y :: bl))
(Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv1)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort gv1)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl gv3)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0))
(Permutation (selsort l y) (selsort l gv3)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv1 n0)), (Permutation (selsort l y) (selsort gv1 gv3)), (Permutation (selsort l y) (selsort gv1 n1)), (Permutation (selsort l y) (selsort gv1 y)), (Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv1)), (Permutation (selsort l y) (l ++ bl))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv1)), (Permutation (selsort l y) (gv1 ++ bl)), (Permutation (selsort l y) (gv1 ++ l)), (Permutation (selsort l y) (gv1 ++ gv1)), (Permutation (selsort l y) []), (Permutation (selsort gv1 n0) bl), (Permutation (selsort gv1 n0) l), (Permutation (selsort gv1 n0) gv1), (Permutation (selsort gv1 n0) (n0 :: bl))
(Permutation (selsort gv1 n0) (n0 :: l)), (Permutation (selsort gv1 n0) (n0 :: gv1)), (Permutation (selsort gv1 n0) (gv3 :: bl)), (Permutation (selsort gv1 n0) (gv3 :: l)), (Permutation (selsort gv1 n0) (gv3 :: gv1)), (Permutation (selsort gv1 n0) (n1 :: bl)), (Permutation (selsort gv1 n0) (n1 :: l)), (Permutation (selsort gv1 n0) (n1 :: gv1)), (Permutation (selsort gv1 n0) (y :: bl)), (Permutation (selsort gv1 n0) (y :: l))
(Permutation (selsort gv1 n0) (y :: gv1)), (Permutation (selsort gv1 n0) (selection_sort bl)), (Permutation (selsort gv1 n0) (selection_sort l)), (Permutation (selsort gv1 n0) (selection_sort gv1)), (Permutation (selsort gv1 n0) (selsort bl n0)), (Permutation (selsort gv1 n0) (selsort bl gv3)), (Permutation (selsort gv1 n0) (selsort bl n1)), (Permutation (selsort gv1 n0) (selsort bl y)), (Permutation (selsort gv1 n0) (selsort l n0)), (Permutation (selsort gv1 n0) (selsort l gv3))
(Permutation (selsort gv1 n0) (selsort l n1)), (Permutation (selsort gv1 n0) (selsort l y)), (Permutation (selsort gv1 n0) (selsort gv1 gv3)), (Permutation (selsort gv1 n0) (selsort gv1 n1)), (Permutation (selsort gv1 n0) (selsort gv1 y)), (Permutation (selsort gv1 n0) (bl ++ bl)), (Permutation (selsort gv1 n0) (bl ++ l)), (Permutation (selsort gv1 n0) (bl ++ gv1)), (Permutation (selsort gv1 n0) (l ++ bl)), (Permutation (selsort gv1 n0) (l ++ l))
(Permutation (selsort gv1 n0) (l ++ gv1)), (Permutation (selsort gv1 n0) (gv1 ++ bl)), (Permutation (selsort gv1 n0) (gv1 ++ l)), (Permutation (selsort gv1 n0) (gv1 ++ gv1)), (Permutation (selsort gv1 n0) []), (Permutation (selsort gv1 gv3) bl), (Permutation (selsort gv1 gv3) l), (Permutation (selsort gv1 gv3) gv1), (Permutation (selsort gv1 gv3) (n0 :: bl)), (Permutation (selsort gv1 gv3) (n0 :: l))
(Permutation (selsort gv1 gv3) (n0 :: gv1)), (Permutation (selsort gv1 gv3) (gv3 :: bl)), (Permutation (selsort gv1 gv3) (gv3 :: l)), (Permutation (selsort gv1 gv3) (gv3 :: gv1)), (Permutation (selsort gv1 gv3) (n1 :: bl)), (Permutation (selsort gv1 gv3) (n1 :: l)), (Permutation (selsort gv1 gv3) (n1 :: gv1)), (Permutation (selsort gv1 gv3) (y :: bl)), (Permutation (selsort gv1 gv3) (y :: l)), (Permutation (selsort gv1 gv3) (y :: gv1))
(Permutation (selsort gv1 gv3) (selection_sort bl)), (Permutation (selsort gv1 gv3) (selection_sort l)), (Permutation (selsort gv1 gv3) (selection_sort gv1)), (Permutation (selsort gv1 gv3) (selsort bl n0)), (Permutation (selsort gv1 gv3) (selsort bl gv3)), (Permutation (selsort gv1 gv3) (selsort bl n1)), (Permutation (selsort gv1 gv3) (selsort bl y)), (Permutation (selsort gv1 gv3) (selsort l n0)), (Permutation (selsort gv1 gv3) (selsort l gv3)), (Permutation (selsort gv1 gv3) (selsort l n1))
(Permutation (selsort gv1 gv3) (selsort l y)), (Permutation (selsort gv1 gv3) (selsort gv1 n0)), (Permutation (selsort gv1 gv3) (selsort gv1 n1)), (Permutation (selsort gv1 gv3) (selsort gv1 y)), (Permutation (selsort gv1 gv3) (bl ++ bl)), (Permutation (selsort gv1 gv3) (bl ++ l)), (Permutation (selsort gv1 gv3) (bl ++ gv1)), (Permutation (selsort gv1 gv3) (l ++ bl)), (Permutation (selsort gv1 gv3) (l ++ l)), (Permutation (selsort gv1 gv3) (l ++ gv1))
(Permutation (selsort gv1 gv3) (gv1 ++ bl)), (Permutation (selsort gv1 gv3) (gv1 ++ l)), (Permutation (selsort gv1 gv3) (gv1 ++ gv1)), (Permutation (selsort gv1 gv3) []), (Permutation (selsort gv1 n1) bl), (Permutation (selsort gv1 n1) l), (Permutation (selsort gv1 n1) gv1), (Permutation (selsort gv1 n1) (n0 :: bl)), (Permutation (selsort gv1 n1) (n0 :: l)), (Permutation (selsort gv1 n1) (n0 :: gv1))
(Permutation (selsort gv1 n1) (gv3 :: bl)), (Permutation (selsort gv1 n1) (gv3 :: l)), (Permutation (selsort gv1 n1) (gv3 :: gv1)), (Permutation (selsort gv1 n1) (n1 :: bl)), (Permutation (selsort gv1 n1) (n1 :: l)), (Permutation (selsort gv1 n1) (n1 :: gv1)), (Permutation (selsort gv1 n1) (y :: bl)), (Permutation (selsort gv1 n1) (y :: l)), (Permutation (selsort gv1 n1) (y :: gv1)), (Permutation (selsort gv1 n1) (selection_sort bl))
(Permutation (selsort gv1 n1) (selection_sort l)), (Permutation (selsort gv1 n1) (selection_sort gv1)), (Permutation (selsort gv1 n1) (selsort bl n0)), (Permutation (selsort gv1 n1) (selsort bl gv3)), (Permutation (selsort gv1 n1) (selsort bl n1)), (Permutation (selsort gv1 n1) (selsort bl y)), (Permutation (selsort gv1 n1) (selsort l n0)), (Permutation (selsort gv1 n1) (selsort l gv3)), (Permutation (selsort gv1 n1) (selsort l n1)), (Permutation (selsort gv1 n1) (selsort l y))
(Permutation (selsort gv1 n1) (selsort gv1 n0)), (Permutation (selsort gv1 n1) (selsort gv1 gv3)), (Permutation (selsort gv1 n1) (selsort gv1 y)), (Permutation (selsort gv1 n1) (bl ++ bl)), (Permutation (selsort gv1 n1) (bl ++ l)), (Permutation (selsort gv1 n1) (bl ++ gv1)), (Permutation (selsort gv1 n1) (l ++ bl)), (Permutation (selsort gv1 n1) (l ++ l)), (Permutation (selsort gv1 n1) (l ++ gv1)), (Permutation (selsort gv1 n1) (gv1 ++ bl))
(Permutation (selsort gv1 n1) (gv1 ++ l)), (Permutation (selsort gv1 n1) (gv1 ++ gv1)), (Permutation (selsort gv1 n1) []), (Permutation (selsort gv1 y) bl), (Permutation (selsort gv1 y) l), (Permutation (selsort gv1 y) gv1), (Permutation (selsort gv1 y) (n0 :: bl)), (Permutation (selsort gv1 y) (n0 :: l)), (Permutation (selsort gv1 y) (n0 :: gv1)), (Permutation (selsort gv1 y) (gv3 :: bl))
(Permutation (selsort gv1 y) (gv3 :: l)), (Permutation (selsort gv1 y) (gv3 :: gv1)), (Permutation (selsort gv1 y) (n1 :: bl)), (Permutation (selsort gv1 y) (n1 :: l)), (Permutation (selsort gv1 y) (n1 :: gv1)), (Permutation (selsort gv1 y) (y :: bl)), (Permutation (selsort gv1 y) (y :: l)), (Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (selection_sort bl)), (Permutation (selsort gv1 y) (selection_sort l))
(Permutation (selsort gv1 y) (selection_sort gv1)), (Permutation (selsort gv1 y) (selsort bl n0)), (Permutation (selsort gv1 y) (selsort bl gv3)), (Permutation (selsort gv1 y) (selsort bl n1)), (Permutation (selsort gv1 y) (selsort bl y)), (Permutation (selsort gv1 y) (selsort l n0)), (Permutation (selsort gv1 y) (selsort l gv3)), (Permutation (selsort gv1 y) (selsort l n1)), (Permutation (selsort gv1 y) (selsort l y)), (Permutation (selsort gv1 y) (selsort gv1 n0))
(Permutation (selsort gv1 y) (selsort gv1 gv3)), (Permutation (selsort gv1 y) (selsort gv1 n1)), (Permutation (selsort gv1 y) (bl ++ bl)), (Permutation (selsort gv1 y) (bl ++ l)), (Permutation (selsort gv1 y) (bl ++ gv1)), (Permutation (selsort gv1 y) (l ++ bl)), (Permutation (selsort gv1 y) (l ++ l)), (Permutation (selsort gv1 y) (l ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ bl)), (Permutation (selsort gv1 y) (gv1 ++ l))
(Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) gv1), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv1)), (Permutation (bl ++ bl) (gv3 :: bl)), (Permutation (bl ++ bl) (gv3 :: l))
(Permutation (bl ++ bl) (gv3 :: gv1)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv1)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv1)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv1))
(Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl gv3)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l gv3)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv1 n0)), (Permutation (bl ++ bl) (selsort gv1 gv3))
(Permutation (bl ++ bl) (selsort gv1 n1)), (Permutation (bl ++ bl) (selsort gv1 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv1)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ bl)), (Permutation (bl ++ bl) (gv1 ++ l)), (Permutation (bl ++ bl) (gv1 ++ gv1))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv1), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv1)), (Permutation (bl ++ l) (gv3 :: bl)), (Permutation (bl ++ l) (gv3 :: l)), (Permutation (bl ++ l) (gv3 :: gv1))
(Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv1)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv1)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv1)), (Permutation (bl ++ l) (selsort bl n0))
(Permutation (bl ++ l) (selsort bl gv3)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0)), (Permutation (bl ++ l) (selsort l gv3)), (Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv1 n0)), (Permutation (bl ++ l) (selsort gv1 gv3)), (Permutation (bl ++ l) (selsort gv1 n1))
(Permutation (bl ++ l) (selsort gv1 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv1)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv1)), (Permutation (bl ++ l) (gv1 ++ bl)), (Permutation (bl ++ l) (gv1 ++ l)), (Permutation (bl ++ l) (gv1 ++ gv1)), (Permutation (bl ++ l) [])
(Permutation (bl ++ gv1) bl), (Permutation (bl ++ gv1) l), (Permutation (bl ++ gv1) gv1), (Permutation (bl ++ gv1) (n0 :: bl)), (Permutation (bl ++ gv1) (n0 :: l)), (Permutation (bl ++ gv1) (n0 :: gv1)), (Permutation (bl ++ gv1) (gv3 :: bl)), (Permutation (bl ++ gv1) (gv3 :: l)), (Permutation (bl ++ gv1) (gv3 :: gv1)), (Permutation (bl ++ gv1) (n1 :: bl))
(Permutation (bl ++ gv1) (n1 :: l)), (Permutation (bl ++ gv1) (n1 :: gv1)), (Permutation (bl ++ gv1) (y :: bl)), (Permutation (bl ++ gv1) (y :: l)), (Permutation (bl ++ gv1) (y :: gv1)), (Permutation (bl ++ gv1) (selection_sort bl)), (Permutation (bl ++ gv1) (selection_sort l)), (Permutation (bl ++ gv1) (selection_sort gv1)), (Permutation (bl ++ gv1) (selsort bl n0)), (Permutation (bl ++ gv1) (selsort bl gv3))
(Permutation (bl ++ gv1) (selsort bl n1)), (Permutation (bl ++ gv1) (selsort bl y)), (Permutation (bl ++ gv1) (selsort l n0)), (Permutation (bl ++ gv1) (selsort l gv3)), (Permutation (bl ++ gv1) (selsort l n1)), (Permutation (bl ++ gv1) (selsort l y)), (Permutation (bl ++ gv1) (selsort gv1 n0)), (Permutation (bl ++ gv1) (selsort gv1 gv3)), (Permutation (bl ++ gv1) (selsort gv1 n1)), (Permutation (bl ++ gv1) (selsort gv1 y))
(Permutation (bl ++ gv1) (bl ++ bl)), (Permutation (bl ++ gv1) (bl ++ l)), (Permutation (bl ++ gv1) (l ++ bl)), (Permutation (bl ++ gv1) (l ++ l)), (Permutation (bl ++ gv1) (l ++ gv1)), (Permutation (bl ++ gv1) (gv1 ++ bl)), (Permutation (bl ++ gv1) (gv1 ++ l)), (Permutation (bl ++ gv1) (gv1 ++ gv1)), (Permutation (bl ++ gv1) []), (Permutation (l ++ bl) bl)
(Permutation (l ++ bl) l), (Permutation (l ++ bl) gv1), (Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv1)), (Permutation (l ++ bl) (gv3 :: bl)), (Permutation (l ++ bl) (gv3 :: l)), (Permutation (l ++ bl) (gv3 :: gv1)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l))
(Permutation (l ++ bl) (n1 :: gv1)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv1)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv1)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl gv3)), (Permutation (l ++ bl) (selsort bl n1))
(Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l gv3)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv1 n0)), (Permutation (l ++ bl) (selsort gv1 gv3)), (Permutation (l ++ bl) (selsort gv1 n1)), (Permutation (l ++ bl) (selsort gv1 y)), (Permutation (l ++ bl) (bl ++ bl))
(Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv1)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv1)), (Permutation (l ++ bl) (gv1 ++ bl)), (Permutation (l ++ bl) (gv1 ++ l)), (Permutation (l ++ bl) (gv1 ++ gv1)), (Permutation (l ++ bl) []), (Permutation (l ++ l) bl), (Permutation (l ++ l) l)
(Permutation (l ++ l) gv1), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv1)), (Permutation (l ++ l) (gv3 :: bl)), (Permutation (l ++ l) (gv3 :: l)), (Permutation (l ++ l) (gv3 :: gv1)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv1))
(Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv1)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl gv3)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y))
(Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l gv3)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv1 n0)), (Permutation (l ++ l) (selsort gv1 gv3)), (Permutation (l ++ l) (selsort gv1 n1)), (Permutation (l ++ l) (selsort gv1 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l))
(Permutation (l ++ l) (bl ++ gv1)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv1)), (Permutation (l ++ l) (gv1 ++ bl)), (Permutation (l ++ l) (gv1 ++ l)), (Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) []), (Permutation (l ++ gv1) bl), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) gv1)
(Permutation (l ++ gv1) (n0 :: bl)), (Permutation (l ++ gv1) (n0 :: l)), (Permutation (l ++ gv1) (n0 :: gv1)), (Permutation (l ++ gv1) (gv3 :: bl)), (Permutation (l ++ gv1) (gv3 :: l)), (Permutation (l ++ gv1) (gv3 :: gv1)), (Permutation (l ++ gv1) (n1 :: bl)), (Permutation (l ++ gv1) (n1 :: l)), (Permutation (l ++ gv1) (n1 :: gv1)), (Permutation (l ++ gv1) (y :: bl))
(Permutation (l ++ gv1) (y :: l)), (Permutation (l ++ gv1) (y :: gv1)), (Permutation (l ++ gv1) (selection_sort bl)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selsort bl n0)), (Permutation (l ++ gv1) (selsort bl gv3)), (Permutation (l ++ gv1) (selsort bl n1)), (Permutation (l ++ gv1) (selsort bl y)), (Permutation (l ++ gv1) (selsort l n0))
(Permutation (l ++ gv1) (selsort l gv3)), (Permutation (l ++ gv1) (selsort l n1)), (Permutation (l ++ gv1) (selsort l y)), (Permutation (l ++ gv1) (selsort gv1 n0)), (Permutation (l ++ gv1) (selsort gv1 gv3)), (Permutation (l ++ gv1) (selsort gv1 n1)), (Permutation (l ++ gv1) (selsort gv1 y)), (Permutation (l ++ gv1) (bl ++ bl)), (Permutation (l ++ gv1) (bl ++ l)), (Permutation (l ++ gv1) (bl ++ gv1))
(Permutation (l ++ gv1) (l ++ bl)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) (gv1 ++ bl)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (gv1 ++ gv1)), (Permutation (l ++ gv1) []), (Permutation (gv1 ++ bl) bl), (Permutation (gv1 ++ bl) l), (Permutation (gv1 ++ bl) gv1), (Permutation (gv1 ++ bl) (n0 :: bl))
(Permutation (gv1 ++ bl) (n0 :: l)), (Permutation (gv1 ++ bl) (n0 :: gv1)), (Permutation (gv1 ++ bl) (gv3 :: bl)), (Permutation (gv1 ++ bl) (gv3 :: l)), (Permutation (gv1 ++ bl) (gv3 :: gv1)), (Permutation (gv1 ++ bl) (n1 :: bl)), (Permutation (gv1 ++ bl) (n1 :: l)), (Permutation (gv1 ++ bl) (n1 :: gv1)), (Permutation (gv1 ++ bl) (y :: bl)), (Permutation (gv1 ++ bl) (y :: l))
(Permutation (gv1 ++ bl) (y :: gv1)), (Permutation (gv1 ++ bl) (selection_sort bl)), (Permutation (gv1 ++ bl) (selection_sort l)), (Permutation (gv1 ++ bl) (selection_sort gv1)), (Permutation (gv1 ++ bl) (selsort bl n0)), (Permutation (gv1 ++ bl) (selsort bl gv3)), (Permutation (gv1 ++ bl) (selsort bl n1)), (Permutation (gv1 ++ bl) (selsort bl y)), (Permutation (gv1 ++ bl) (selsort l n0)), (Permutation (gv1 ++ bl) (selsort l gv3))
(Permutation (gv1 ++ bl) (selsort l n1)), (Permutation (gv1 ++ bl) (selsort l y)), (Permutation (gv1 ++ bl) (selsort gv1 n0)), (Permutation (gv1 ++ bl) (selsort gv1 gv3)), (Permutation (gv1 ++ bl) (selsort gv1 n1)), (Permutation (gv1 ++ bl) (selsort gv1 y)), (Permutation (gv1 ++ bl) (bl ++ bl)), (Permutation (gv1 ++ bl) (bl ++ l)), (Permutation (gv1 ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ bl) (l ++ bl))
(Permutation (gv1 ++ bl) (l ++ l)), (Permutation (gv1 ++ bl) (l ++ gv1)), (Permutation (gv1 ++ bl) (gv1 ++ l)), (Permutation (gv1 ++ bl) (gv1 ++ gv1)), (Permutation (gv1 ++ bl) []), (Permutation (gv1 ++ l) bl), (Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) gv1), (Permutation (gv1 ++ l) (n0 :: bl)), (Permutation (gv1 ++ l) (n0 :: l))
(Permutation (gv1 ++ l) (n0 :: gv1)), (Permutation (gv1 ++ l) (gv3 :: bl)), (Permutation (gv1 ++ l) (gv3 :: l)), (Permutation (gv1 ++ l) (gv3 :: gv1)), (Permutation (gv1 ++ l) (n1 :: bl)), (Permutation (gv1 ++ l) (n1 :: l)), (Permutation (gv1 ++ l) (n1 :: gv1)), (Permutation (gv1 ++ l) (y :: bl)), (Permutation (gv1 ++ l) (y :: l)), (Permutation (gv1 ++ l) (y :: gv1))
(Permutation (gv1 ++ l) (selection_sort bl)), (Permutation (gv1 ++ l) (selection_sort l)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selsort bl n0)), (Permutation (gv1 ++ l) (selsort bl gv3)), (Permutation (gv1 ++ l) (selsort bl n1)), (Permutation (gv1 ++ l) (selsort bl y)), (Permutation (gv1 ++ l) (selsort l n0)), (Permutation (gv1 ++ l) (selsort l gv3)), (Permutation (gv1 ++ l) (selsort l n1))
(Permutation (gv1 ++ l) (selsort l y)), (Permutation (gv1 ++ l) (selsort gv1 n0)), (Permutation (gv1 ++ l) (selsort gv1 gv3)), (Permutation (gv1 ++ l) (selsort gv1 n1)), (Permutation (gv1 ++ l) (selsort gv1 y)), (Permutation (gv1 ++ l) (bl ++ bl)), (Permutation (gv1 ++ l) (bl ++ l)), (Permutation (gv1 ++ l) (bl ++ gv1)), (Permutation (gv1 ++ l) (l ++ bl)), (Permutation (gv1 ++ l) (l ++ l))
(Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (gv1 ++ bl)), (Permutation (gv1 ++ l) (gv1 ++ gv1)), (Permutation (gv1 ++ l) []), (Permutation (gv1 ++ gv1) bl), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (n0 :: bl)), (Permutation (gv1 ++ gv1) (n0 :: l)), (Permutation (gv1 ++ gv1) (n0 :: gv1))
(Permutation (gv1 ++ gv1) (gv3 :: bl)), (Permutation (gv1 ++ gv1) (gv3 :: l)), (Permutation (gv1 ++ gv1) (gv3 :: gv1)), (Permutation (gv1 ++ gv1) (n1 :: bl)), (Permutation (gv1 ++ gv1) (n1 :: l)), (Permutation (gv1 ++ gv1) (n1 :: gv1)), (Permutation (gv1 ++ gv1) (y :: bl)), (Permutation (gv1 ++ gv1) (y :: l)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (selection_sort bl))
(Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selsort bl n0)), (Permutation (gv1 ++ gv1) (selsort bl gv3)), (Permutation (gv1 ++ gv1) (selsort bl n1)), (Permutation (gv1 ++ gv1) (selsort bl y)), (Permutation (gv1 ++ gv1) (selsort l n0)), (Permutation (gv1 ++ gv1) (selsort l gv3)), (Permutation (gv1 ++ gv1) (selsort l n1)), (Permutation (gv1 ++ gv1) (selsort l y))
(Permutation (gv1 ++ gv1) (selsort gv1 n0)), (Permutation (gv1 ++ gv1) (selsort gv1 gv3)), (Permutation (gv1 ++ gv1) (selsort gv1 n1)), (Permutation (gv1 ++ gv1) (selsort gv1 y)), (Permutation (gv1 ++ gv1) (bl ++ bl)), (Permutation (gv1 ++ gv1) (bl ++ l)), (Permutation (gv1 ++ gv1) (bl ++ gv1)), (Permutation (gv1 ++ gv1) (l ++ bl)), (Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) (l ++ gv1))
(Permutation (gv1 ++ gv1) (gv1 ++ bl)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv1), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l)), (Permutation [] (n0 :: gv1)), (Permutation [] (gv3 :: bl))
(Permutation [] (gv3 :: l)), (Permutation [] (gv3 :: gv1)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv1)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l))
(Permutation [] (selection_sort gv1)), (Permutation [] (selsort bl n0)), (Permutation [] (selsort bl gv3)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l gv3)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv1 n0))
(Permutation [] (selsort gv1 gv3)), (Permutation [] (selsort gv1 n1)), (Permutation [] (selsort gv1 y)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv1)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv1)), (Permutation [] (gv1 ++ bl))
(Permutation [] (gv1 ++ l)), (Permutation [] (gv1 ++ gv1)), (In n0 (n0 :: bl)), (In n0 (n0 :: l)), (In n0 (n0 :: gv1)), (In n0 (gv3 :: bl)), (In n0 (gv3 :: l)), (In n0 (gv3 :: gv1)), (In n0 (n1 :: bl)), (In n0 (n1 :: l))
(In n0 (n1 :: gv1)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv1)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv1)), (In n0 (selsort bl n0)), (In n0 (selsort bl gv3)), (In n0 (selsort bl n1))
(In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l gv3)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv1 n0)), (In n0 (selsort gv1 gv3)), (In n0 (selsort gv1 n1)), (In n0 (selsort gv1 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv1)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv1)), (In n0 (gv1 ++ bl)), (In n0 (gv1 ++ l)), (In n0 (gv1 ++ gv1)), (In gv3 (n0 :: bl)), (In gv3 (n0 :: l))
(In gv3 (n0 :: gv1)), (In gv3 (gv3 :: bl)), (In gv3 (gv3 :: l)), (In gv3 (gv3 :: gv1)), (In gv3 (n1 :: bl)), (In gv3 (n1 :: l)), (In gv3 (n1 :: gv1)), (In gv3 (y :: bl)), (In gv3 (y :: l)), (In gv3 (y :: gv1))
(In gv3 (selection_sort bl)), (In gv3 (selection_sort l)), (In gv3 (selection_sort gv1)), (In gv3 (selsort bl n0)), (In gv3 (selsort bl gv3)), (In gv3 (selsort bl n1)), (In gv3 (selsort bl y)), (In gv3 (selsort l n0)), (In gv3 (selsort l gv3)), (In gv3 (selsort l n1))
(In gv3 (selsort l y)), (In gv3 (selsort gv1 n0)), (In gv3 (selsort gv1 gv3)), (In gv3 (selsort gv1 n1)), (In gv3 (selsort gv1 y)), (In gv3 (bl ++ bl)), (In gv3 (bl ++ l)), (In gv3 (bl ++ gv1)), (In gv3 (l ++ bl)), (In gv3 (l ++ l))
(In gv3 (l ++ gv1)), (In gv3 (gv1 ++ bl)), (In gv3 (gv1 ++ l)), (In gv3 (gv1 ++ gv1)), (In n1 (n0 :: bl)), (In n1 (n0 :: l)), (In n1 (n0 :: gv1)), (In n1 (gv3 :: bl)), (In n1 (gv3 :: l)), (In n1 (gv3 :: gv1))
(In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv1)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv1)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv1)), (In n1 (selsort bl n0))
(In n1 (selsort bl gv3)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l gv3)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv1 n0)), (In n1 (selsort gv1 gv3)), (In n1 (selsort gv1 n1))
(In n1 (selsort gv1 y)), (In n1 (bl ++ bl)), (In n1 (bl ++ l)), (In n1 (bl ++ gv1)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv1)), (In n1 (gv1 ++ bl)), (In n1 (gv1 ++ l)), (In n1 (gv1 ++ gv1))
(In y (n0 :: bl)), (In y (n0 :: l)), (In y (n0 :: gv1)), (In y (gv3 :: bl)), (In y (gv3 :: l)), (In y (gv3 :: gv1)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv1)), (In y (y :: bl))
(In y (y :: l)), (In y (y :: gv1)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv1)), (In y (selsort bl n0)), (In y (selsort bl gv3)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0))
(In y (selsort l gv3)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv1 n0)), (In y (selsort gv1 gv3)), (In y (selsort gv1 n1)), (In y (selsort gv1 y)), (In y (bl ++ bl)), (In y (bl ++ l)), (In y (bl ++ gv1))
(In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv1)), (In y (gv1 ++ bl)), (In y (gv1 ++ l)), (In y (gv1 ++ gv1)), (In (length bl) bl), (In (length bl) l), (In (length bl) gv1), (In (length bl) (n0 :: bl))
(In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv1)), (In (length bl) (gv3 :: bl)), (In (length bl) (gv3 :: l)), (In (length bl) (gv3 :: gv1)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv1)), (In (length bl) (y :: bl)), (In (length bl) (y :: l))
(In (length bl) (y :: gv1)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv1)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl gv3)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l gv3))
(In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv1 n0)), (In (length bl) (selsort gv1 gv3)), (In (length bl) (selsort gv1 n1)), (In (length bl) (selsort gv1 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv1)), (In (length bl) (l ++ bl))
(In (length bl) (l ++ l)), (In (length bl) (l ++ gv1)), (In (length bl) (gv1 ++ bl)), (In (length bl) (gv1 ++ l)), (In (length bl) (gv1 ++ gv1)), (In (length l) bl), (In (length l) l), (In (length l) gv1), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l))
(In (length l) (n0 :: gv1)), (In (length l) (gv3 :: bl)), (In (length l) (gv3 :: l)), (In (length l) (gv3 :: gv1)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv1)), (In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv1))
(In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv1)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl gv3)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0)), (In (length l) (selsort l gv3)), (In (length l) (selsort l n1))
(In (length l) (selsort l y)), (In (length l) (selsort gv1 n0)), (In (length l) (selsort gv1 gv3)), (In (length l) (selsort gv1 n1)), (In (length l) (selsort gv1 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv1)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv1)), (In (length l) (gv1 ++ bl)), (In (length l) (gv1 ++ l)), (In (length l) (gv1 ++ gv1)), (In (length gv1) bl), (In (length gv1) l), (In (length gv1) gv1), (In (length gv1) (n0 :: bl)), (In (length gv1) (n0 :: l)), (In (length gv1) (n0 :: gv1))
(In (length gv1) (gv3 :: bl)), (In (length gv1) (gv3 :: l)), (In (length gv1) (gv3 :: gv1)), (In (length gv1) (n1 :: bl)), (In (length gv1) (n1 :: l)), (In (length gv1) (n1 :: gv1)), (In (length gv1) (y :: bl)), (In (length gv1) (y :: l)), (In (length gv1) (y :: gv1)), (In (length gv1) (selection_sort bl))
(In (length gv1) (selection_sort l)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selsort bl n0)), (In (length gv1) (selsort bl gv3)), (In (length gv1) (selsort bl n1)), (In (length gv1) (selsort bl y)), (In (length gv1) (selsort l n0)), (In (length gv1) (selsort l gv3)), (In (length gv1) (selsort l n1)), (In (length gv1) (selsort l y))
(In (length gv1) (selsort gv1 n0)), (In (length gv1) (selsort gv1 gv3)), (In (length gv1) (selsort gv1 n1)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (bl ++ bl)), (In (length gv1) (bl ++ l)), (In (length gv1) (bl ++ gv1)), (In (length gv1) (l ++ bl)), (In (length gv1) (l ++ l)), (In (length gv1) (l ++ gv1))
(In (length gv1) (gv1 ++ bl)), (In (length gv1) (gv1 ++ l)), (In (length gv1) (gv1 ++ gv1)), (n0 < length bl), (n0 < length l), (n0 < length gv1), (gv3 < length bl), (gv3 < length l), (gv3 < length gv1), (n1 < length bl)
(n1 < length l), (n1 < length gv1), (y < length bl), (y < length l), (y < length gv1), (length bl < n0), (length bl < gv3), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv1), (length l < n0), (length l < gv3), (length l < n1), (length l < y), (length l < length bl), (length l < length gv1), (length gv1 < n0), (length gv1 < gv3), (length gv1 < n1)
(length gv1 < y), (length gv1 < length bl), (length gv1 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv1), (gv3 <= length bl), (gv3 <= length l), (gv3 <= length gv1), (n1 <= length bl)
(n1 <= length l), (n1 <= length gv1), (y <= length bl), (y <= length l), (y <= length gv1), (length bl <= n0), (length bl <= gv3), (length bl <= n1), (length bl <= y), (length bl <= length l)
(length bl <= length gv1), (length l <= n0), (length l <= gv3), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv1), (length gv1 <= n0), (length gv1 <= gv3), (length gv1 <= n1)
(length gv1 <= y), (length gv1 <= length bl), (length gv1 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv1), (~ gv3 <=* bl), (~ gv3 <=* l), (~ gv3 <=* gv1), (~ n1 <=* bl)
(~ n1 <=* l), (~ n1 <=* gv1), (~ y <=* bl), (~ y <=* l), (~ y <=* gv1), (~ sorted bl), (~ sorted l), (~ sorted gv1), (~ Permutation bl bl), (~ Permutation bl l)
(~ Permutation bl gv1), (~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv1), (~ Permutation gv1 bl), (~ Permutation gv1 l), (~ Permutation gv1 gv1), (~ In n0 bl), (~ In n0 l), (~ In n0 gv1)
(~ In gv3 bl), (~ In gv3 l), (~ In gv3 gv1), (~ In n1 bl), (~ In n1 l), (~ In n1 gv1), (~ In y bl), (~ In y l), (~ In y gv1), (~ n0 < n0)
(~ n0 < gv3), (~ n0 < n1), (~ n0 < y), (~ gv3 < n0), (~ gv3 < gv3), (~ gv3 < n1), (~ gv3 < y), (~ n1 < n0), (~ n1 < gv3), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < gv3), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= gv3), (~ n0 <= n1), (~ n0 <= y), (~ gv3 <= n0)
(~ gv3 <= gv3), (~ gv3 <= n1), (~ gv3 <= y), (~ n1 <= n0), (~ n1 <= gv3), (~ n1 <= n1), (~ n1 <= y), (~ y <= n0), (~ y <= gv3), (~ y <= n1)
(~ y <= y), (bl <> bl), (bl <> l), (bl <> gv1), (l <> bl), (l <> l), (l <> gv1), (gv1 <> bl), (gv1 <> l), (gv1 <> gv1)
(n0 <> n0), (n0 <> gv3), (n0 <> n1), (n0 <> y), (gv3 <> n0), (gv3 <> gv3), (gv3 <> n1), (gv3 <> y), (n1 <> n0), (n1 <> gv3)
(n1 <> n1), (n1 <> y), (y <> n0), (y <> gv3), (y <> n1), (y <> y), (None = Some bl), (None = Some l), (None = Some gv1), (n0 :: bl = bl)
(n0 :: bl = l), (n0 :: bl = gv1), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv1), (n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl gv3), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0)
(n0 :: bl = selsort l gv3), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv1 n0), (n0 :: bl = selsort gv1 gv3), (n0 :: bl = selsort gv1 n1), (n0 :: bl = selsort gv1 y), (n0 :: bl = bl ++ bl), (n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv1)
(n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv1), (n0 :: bl = gv1 ++ bl), (n0 :: bl = gv1 ++ l), (n0 :: bl = gv1 ++ gv1), (n0 :: bl = []), (n0 :: l = bl), (n0 :: l = l), (n0 :: l = gv1)
(n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv1), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl gv3), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l gv3), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv1 n0), (n0 :: l = selsort gv1 gv3), (n0 :: l = selsort gv1 n1), (n0 :: l = selsort gv1 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv1), (n0 :: l = l ++ bl), (n0 :: l = l ++ l)
(n0 :: l = l ++ gv1), (n0 :: l = gv1 ++ bl), (n0 :: l = gv1 ++ l), (n0 :: l = gv1 ++ gv1), (n0 :: l = []), (n0 :: gv1 = bl), (n0 :: gv1 = l), (n0 :: gv1 = gv1), (n0 :: gv1 = selection_sort bl), (n0 :: gv1 = selection_sort l)
(n0 :: gv1 = selection_sort gv1), (n0 :: gv1 = selsort bl n0), (n0 :: gv1 = selsort bl gv3), (n0 :: gv1 = selsort bl n1), (n0 :: gv1 = selsort bl y), (n0 :: gv1 = selsort l n0), (n0 :: gv1 = selsort l gv3), (n0 :: gv1 = selsort l n1), (n0 :: gv1 = selsort l y), (n0 :: gv1 = selsort gv1 n0)
(n0 :: gv1 = selsort gv1 gv3), (n0 :: gv1 = selsort gv1 n1), (n0 :: gv1 = selsort gv1 y), (n0 :: gv1 = bl ++ bl), (n0 :: gv1 = bl ++ l), (n0 :: gv1 = bl ++ gv1), (n0 :: gv1 = l ++ bl), (n0 :: gv1 = l ++ l), (n0 :: gv1 = l ++ gv1), (n0 :: gv1 = gv1 ++ bl)
(n0 :: gv1 = gv1 ++ l), (n0 :: gv1 = gv1 ++ gv1), (n0 :: gv1 = []), (gv3 :: bl = bl), (gv3 :: bl = l), (gv3 :: bl = gv1), (gv3 :: bl = selection_sort bl), (gv3 :: bl = selection_sort l), (gv3 :: bl = selection_sort gv1), (gv3 :: bl = selsort bl n0)
(gv3 :: bl = selsort bl gv3), (gv3 :: bl = selsort bl n1), (gv3 :: bl = selsort bl y), (gv3 :: bl = selsort l n0), (gv3 :: bl = selsort l gv3), (gv3 :: bl = selsort l n1), (gv3 :: bl = selsort l y), (gv3 :: bl = selsort gv1 n0), (gv3 :: bl = selsort gv1 gv3), (gv3 :: bl = selsort gv1 n1)
(gv3 :: bl = selsort gv1 y), (gv3 :: bl = bl ++ bl), (gv3 :: bl = bl ++ l), (gv3 :: bl = bl ++ gv1), (gv3 :: bl = l ++ bl), (gv3 :: bl = l ++ l), (gv3 :: bl = l ++ gv1), (gv3 :: bl = gv1 ++ bl), (gv3 :: bl = gv1 ++ l), (gv3 :: bl = gv1 ++ gv1)
(gv3 :: bl = []), (gv3 :: l = bl), (gv3 :: l = l), (gv3 :: l = gv1), (gv3 :: l = selection_sort bl), (gv3 :: l = selection_sort l), (gv3 :: l = selection_sort gv1), (gv3 :: l = selsort bl n0), (gv3 :: l = selsort bl gv3), (gv3 :: l = selsort bl n1)
(gv3 :: l = selsort bl y), (gv3 :: l = selsort l n0), (gv3 :: l = selsort l gv3), (gv3 :: l = selsort l n1), (gv3 :: l = selsort l y), (gv3 :: l = selsort gv1 n0), (gv3 :: l = selsort gv1 gv3), (gv3 :: l = selsort gv1 n1), (gv3 :: l = selsort gv1 y), (gv3 :: l = bl ++ bl)
(gv3 :: l = bl ++ l), (gv3 :: l = bl ++ gv1), (gv3 :: l = l ++ bl), (gv3 :: l = l ++ l), (gv3 :: l = l ++ gv1), (gv3 :: l = gv1 ++ bl), (gv3 :: l = gv1 ++ l), (gv3 :: l = gv1 ++ gv1), (gv3 :: l = []), (gv3 :: gv1 = bl)
(gv3 :: gv1 = l), (gv3 :: gv1 = gv1), (gv3 :: gv1 = selection_sort bl), (gv3 :: gv1 = selection_sort l), (gv3 :: gv1 = selection_sort gv1), (gv3 :: gv1 = selsort bl n0), (gv3 :: gv1 = selsort bl gv3), (gv3 :: gv1 = selsort bl n1), (gv3 :: gv1 = selsort bl y), (gv3 :: gv1 = selsort l n0)
(gv3 :: gv1 = selsort l gv3), (gv3 :: gv1 = selsort l n1), (gv3 :: gv1 = selsort l y), (gv3 :: gv1 = selsort gv1 n0), (gv3 :: gv1 = selsort gv1 gv3), (gv3 :: gv1 = selsort gv1 n1), (gv3 :: gv1 = selsort gv1 y), (gv3 :: gv1 = bl ++ bl), (gv3 :: gv1 = bl ++ l), (gv3 :: gv1 = bl ++ gv1)
(gv3 :: gv1 = l ++ bl), (gv3 :: gv1 = l ++ l), (gv3 :: gv1 = l ++ gv1), (gv3 :: gv1 = gv1 ++ bl), (gv3 :: gv1 = gv1 ++ l), (gv3 :: gv1 = gv1 ++ gv1), (gv3 :: gv1 = []), (n1 :: bl = bl), (n1 :: bl = l), (n1 :: bl = gv1)
(n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv1), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl gv3), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l gv3), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv1 n0), (n1 :: bl = selsort gv1 gv3), (n1 :: bl = selsort gv1 n1), (n1 :: bl = selsort gv1 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv1), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l)
(n1 :: bl = l ++ gv1), (n1 :: bl = gv1 ++ bl), (n1 :: bl = gv1 ++ l), (n1 :: bl = gv1 ++ gv1), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv1), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l)
(n1 :: l = selection_sort gv1), (n1 :: l = selsort bl n0), (n1 :: l = selsort bl gv3), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l gv3), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv1 n0)
(n1 :: l = selsort gv1 gv3), (n1 :: l = selsort gv1 n1), (n1 :: l = selsort gv1 y), (n1 :: l = bl ++ bl), (n1 :: l = bl ++ l), (n1 :: l = bl ++ gv1), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv1), (n1 :: l = gv1 ++ bl)
(n1 :: l = gv1 ++ l), (n1 :: l = gv1 ++ gv1), (n1 :: l = []), (n1 :: gv1 = bl), (n1 :: gv1 = l), (n1 :: gv1 = gv1), (n1 :: gv1 = selection_sort bl), (n1 :: gv1 = selection_sort l), (n1 :: gv1 = selection_sort gv1), (n1 :: gv1 = selsort bl n0)
(n1 :: gv1 = selsort bl gv3), (n1 :: gv1 = selsort bl n1), (n1 :: gv1 = selsort bl y), (n1 :: gv1 = selsort l n0), (n1 :: gv1 = selsort l gv3), (n1 :: gv1 = selsort l n1), (n1 :: gv1 = selsort l y), (n1 :: gv1 = selsort gv1 n0), (n1 :: gv1 = selsort gv1 gv3), (n1 :: gv1 = selsort gv1 n1)
(n1 :: gv1 = selsort gv1 y), (n1 :: gv1 = bl ++ bl), (n1 :: gv1 = bl ++ l), (n1 :: gv1 = bl ++ gv1), (n1 :: gv1 = l ++ bl), (n1 :: gv1 = l ++ l), (n1 :: gv1 = l ++ gv1), (n1 :: gv1 = gv1 ++ bl), (n1 :: gv1 = gv1 ++ l), (n1 :: gv1 = gv1 ++ gv1)
(n1 :: gv1 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv1), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv1), (y :: bl = selsort bl n0), (y :: bl = selsort bl gv3), (y :: bl = selsort bl n1)
(y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l gv3), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv1 n0), (y :: bl = selsort gv1 gv3), (y :: bl = selsort gv1 n1), (y :: bl = selsort gv1 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv1), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv1), (y :: bl = gv1 ++ bl), (y :: bl = gv1 ++ l), (y :: bl = gv1 ++ gv1), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv1), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv1), (y :: l = selsort bl n0), (y :: l = selsort bl gv3), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0)
(y :: l = selsort l gv3), (y :: l = selsort l n1), (y :: l = selsort l y), (y :: l = selsort gv1 n0), (y :: l = selsort gv1 gv3), (y :: l = selsort gv1 n1), (y :: l = selsort gv1 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv1)
(y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv1), (y :: l = gv1 ++ bl), (y :: l = gv1 ++ l), (y :: l = gv1 ++ gv1), (y :: l = []), (y :: gv1 = bl), (y :: gv1 = l), (y :: gv1 = gv1)
(y :: gv1 = selection_sort bl), (y :: gv1 = selection_sort l), (y :: gv1 = selection_sort gv1), (y :: gv1 = selsort bl n0), (y :: gv1 = selsort bl gv3), (y :: gv1 = selsort bl n1), (y :: gv1 = selsort bl y), (y :: gv1 = selsort l n0), (y :: gv1 = selsort l gv3), (y :: gv1 = selsort l n1)
(y :: gv1 = selsort l y), (y :: gv1 = selsort gv1 n0), (y :: gv1 = selsort gv1 gv3), (y :: gv1 = selsort gv1 n1), (y :: gv1 = selsort gv1 y), (y :: gv1 = bl ++ bl), (y :: gv1 = bl ++ l), (y :: gv1 = bl ++ gv1), (y :: gv1 = l ++ bl), (y :: gv1 = l ++ l)
(y :: gv1 = l ++ gv1), (y :: gv1 = gv1 ++ bl), (y :: gv1 = gv1 ++ l), (y :: gv1 = gv1 ++ gv1), (y :: gv1 = []), (selection_sort bl = bl), (selection_sort bl = l), (selection_sort bl = gv1), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l)
(selection_sort bl = bl ++ gv1), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv1), (selection_sort bl = gv1 ++ bl), (selection_sort bl = gv1 ++ l), (selection_sort bl = gv1 ++ gv1), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv1)
(selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv1), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv1), (selection_sort l = gv1 ++ bl), (selection_sort l = gv1 ++ l), (selection_sort l = gv1 ++ gv1), (selection_sort gv1 = bl)
(selection_sort gv1 = l), (selection_sort gv1 = gv1), (selection_sort gv1 = bl ++ bl), (selection_sort gv1 = bl ++ l), (selection_sort gv1 = bl ++ gv1), (selection_sort gv1 = l ++ bl), (selection_sort gv1 = l ++ l), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = gv1 ++ bl), (selection_sort gv1 = gv1 ++ l)
(selection_sort gv1 = gv1 ++ gv1), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv1), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l), (selsort bl n0 = selection_sort gv1), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv1)
(selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv1), (selsort bl n0 = gv1 ++ bl), (selsort bl n0 = gv1 ++ l), (selsort bl n0 = gv1 ++ gv1), (selsort bl gv3 = bl), (selsort bl gv3 = l), (selsort bl gv3 = gv1), (selsort bl gv3 = selection_sort bl)
(selsort bl gv3 = selection_sort l), (selsort bl gv3 = selection_sort gv1), (selsort bl gv3 = bl ++ bl), (selsort bl gv3 = bl ++ l), (selsort bl gv3 = bl ++ gv1), (selsort bl gv3 = l ++ bl), (selsort bl gv3 = l ++ l), (selsort bl gv3 = l ++ gv1), (selsort bl gv3 = gv1 ++ bl), (selsort bl gv3 = gv1 ++ l)
(selsort bl gv3 = gv1 ++ gv1), (selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv1), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv1), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv1)
(selsort bl n1 = l ++ bl), (selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv1), (selsort bl n1 = gv1 ++ bl), (selsort bl n1 = gv1 ++ l), (selsort bl n1 = gv1 ++ gv1), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv1), (selsort bl y = selection_sort bl)
(selsort bl y = selection_sort l), (selsort bl y = selection_sort gv1), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv1), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv1), (selsort bl y = gv1 ++ bl), (selsort bl y = gv1 ++ l)
(selsort bl y = gv1 ++ gv1), (selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv1), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv1), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv1)
(selsort l n0 = l ++ bl), (selsort l n0 = l ++ l), (selsort l n0 = l ++ gv1), (selsort l n0 = gv1 ++ bl), (selsort l n0 = gv1 ++ l), (selsort l n0 = gv1 ++ gv1), (selsort l gv3 = bl), (selsort l gv3 = l), (selsort l gv3 = gv1), (selsort l gv3 = selection_sort bl)
(selsort l gv3 = selection_sort l), (selsort l gv3 = selection_sort gv1), (selsort l gv3 = bl ++ bl), (selsort l gv3 = bl ++ l), (selsort l gv3 = bl ++ gv1), (selsort l gv3 = l ++ bl), (selsort l gv3 = l ++ l), (selsort l gv3 = l ++ gv1), (selsort l gv3 = gv1 ++ bl), (selsort l gv3 = gv1 ++ l)
(selsort l gv3 = gv1 ++ gv1), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv1), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort gv1), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv1)
(selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv1), (selsort l n1 = gv1 ++ bl), (selsort l n1 = gv1 ++ l), (selsort l n1 = gv1 ++ gv1), (selsort l y = bl), (selsort l y = l), (selsort l y = gv1), (selsort l y = selection_sort bl)
(selsort l y = selection_sort l), (selsort l y = selection_sort gv1), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv1), (selsort l y = l ++ bl), (selsort l y = l ++ l), (selsort l y = l ++ gv1), (selsort l y = gv1 ++ bl), (selsort l y = gv1 ++ l)
(selsort l y = gv1 ++ gv1), (selsort gv1 n0 = bl), (selsort gv1 n0 = l), (selsort gv1 n0 = gv1), (selsort gv1 n0 = selection_sort bl), (selsort gv1 n0 = selection_sort l), (selsort gv1 n0 = selection_sort gv1), (selsort gv1 n0 = bl ++ bl), (selsort gv1 n0 = bl ++ l), (selsort gv1 n0 = bl ++ gv1)
(selsort gv1 n0 = l ++ bl), (selsort gv1 n0 = l ++ l), (selsort gv1 n0 = l ++ gv1), (selsort gv1 n0 = gv1 ++ bl), (selsort gv1 n0 = gv1 ++ l), (selsort gv1 n0 = gv1 ++ gv1), (selsort gv1 gv3 = bl), (selsort gv1 gv3 = l), (selsort gv1 gv3 = gv1), (selsort gv1 gv3 = selection_sort bl)
(selsort gv1 gv3 = selection_sort l), (selsort gv1 gv3 = selection_sort gv1), (selsort gv1 gv3 = bl ++ bl), (selsort gv1 gv3 = bl ++ l), (selsort gv1 gv3 = bl ++ gv1), (selsort gv1 gv3 = l ++ bl), (selsort gv1 gv3 = l ++ l), (selsort gv1 gv3 = l ++ gv1), (selsort gv1 gv3 = gv1 ++ bl), (selsort gv1 gv3 = gv1 ++ l)
(selsort gv1 gv3 = gv1 ++ gv1), (selsort gv1 n1 = bl), (selsort gv1 n1 = l), (selsort gv1 n1 = gv1), (selsort gv1 n1 = selection_sort bl), (selsort gv1 n1 = selection_sort l), (selsort gv1 n1 = selection_sort gv1), (selsort gv1 n1 = bl ++ bl), (selsort gv1 n1 = bl ++ l), (selsort gv1 n1 = bl ++ gv1)
(selsort gv1 n1 = l ++ bl), (selsort gv1 n1 = l ++ l), (selsort gv1 n1 = l ++ gv1), (selsort gv1 n1 = gv1 ++ bl), (selsort gv1 n1 = gv1 ++ l), (selsort gv1 n1 = gv1 ++ gv1), (selsort gv1 y = bl), (selsort gv1 y = l), (selsort gv1 y = gv1), (selsort gv1 y = selection_sort bl)
(selsort gv1 y = selection_sort l), (selsort gv1 y = selection_sort gv1), (selsort gv1 y = bl ++ bl), (selsort gv1 y = bl ++ l), (selsort gv1 y = bl ++ gv1), (selsort gv1 y = l ++ bl), (selsort gv1 y = l ++ l), (selsort gv1 y = l ++ gv1), (selsort gv1 y = gv1 ++ bl), (selsort gv1 y = gv1 ++ l)
(selsort gv1 y = gv1 ++ gv1), (bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv1), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv1), (bl ++ gv1 = bl), (bl ++ gv1 = l), (bl ++ gv1 = gv1)
(l ++ bl = bl), (l ++ bl = l), (l ++ bl = gv1), (l ++ l = bl), (l ++ l = l), (l ++ l = gv1), (l ++ gv1 = bl), (l ++ gv1 = l), (l ++ gv1 = gv1), (gv1 ++ bl = bl)
(gv1 ++ bl = l), (gv1 ++ bl = gv1), (gv1 ++ l = bl), (gv1 ++ l = l), (gv1 ++ l = gv1), (gv1 ++ gv1 = bl), (gv1 ++ gv1 = l), (gv1 ++ gv1 = gv1), ([] = bl), ([] = l)
([] = gv1), ([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv1), ([] = selsort bl n0), ([] = selsort bl gv3), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l gv3)
([] = selsort l n1), ([] = selsort l y), ([] = selsort gv1 n0), ([] = selsort gv1 gv3), ([] = selsort gv1 n1), ([] = selsort gv1 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv1), ([] = l ++ bl)
([] = l ++ l), ([] = l ++ gv1), ([] = gv1 ++ bl), ([] = gv1 ++ l), ([] = gv1 ++ gv1), (None = Some n0), (None = Some gv3), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl)
((n0, bl) = select n0 l), ((n0, bl) = select n0 gv1), ((n0, bl) = select gv3 bl), ((n0, bl) = select gv3 l), ((n0, bl) = select gv3 gv1), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv1), ((n0, bl) = select y bl), ((n0, bl) = select y l)
((n0, bl) = select y gv1), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv1), ((n0, l) = select gv3 bl), ((n0, l) = select gv3 l), ((n0, l) = select gv3 gv1), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv1)
((n0, l) = select y bl), ((n0, l) = select y l), ((n0, l) = select y gv1), ((n0, gv1) = select n0 bl), ((n0, gv1) = select n0 l), ((n0, gv1) = select n0 gv1), ((n0, gv1) = select gv3 bl), ((n0, gv1) = select gv3 l), ((n0, gv1) = select gv3 gv1), ((n0, gv1) = select n1 bl)
((n0, gv1) = select n1 l), ((n0, gv1) = select n1 gv1), ((n0, gv1) = select y bl), ((n0, gv1) = select y l), ((n0, gv1) = select y gv1), ((gv3, bl) = select n0 bl), ((gv3, bl) = select n0 l), ((gv3, bl) = select n0 gv1), ((gv3, bl) = select gv3 bl), ((gv3, bl) = select gv3 l)
((gv3, bl) = select gv3 gv1), ((gv3, bl) = select n1 bl), ((gv3, bl) = select n1 l), ((gv3, bl) = select n1 gv1), ((gv3, bl) = select y bl), ((gv3, bl) = select y l), ((gv3, bl) = select y gv1), ((gv3, l) = select n0 bl), ((gv3, l) = select n0 l), ((gv3, l) = select n0 gv1)
((gv3, l) = select gv3 bl), ((gv3, l) = select gv3 l), ((gv3, l) = select gv3 gv1), ((gv3, l) = select n1 bl), ((gv3, l) = select n1 l), ((gv3, l) = select n1 gv1), ((gv3, l) = select y bl), ((gv3, l) = select y l), ((gv3, l) = select y gv1), ((gv3, gv1) = select n0 bl)
((gv3, gv1) = select n0 l), ((gv3, gv1) = select n0 gv1), ((gv3, gv1) = select gv3 bl), ((gv3, gv1) = select gv3 l), ((gv3, gv1) = select gv3 gv1), ((gv3, gv1) = select n1 bl), ((gv3, gv1) = select n1 l), ((gv3, gv1) = select n1 gv1), ((gv3, gv1) = select y bl), ((gv3, gv1) = select y l)
((gv3, gv1) = select y gv1), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv1), ((n1, bl) = select gv3 bl), ((n1, bl) = select gv3 l), ((n1, bl) = select gv3 gv1), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv1)
((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv1), ((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv1), ((n1, l) = select gv3 bl), ((n1, l) = select gv3 l), ((n1, l) = select gv3 gv1), ((n1, l) = select n1 bl)
((n1, l) = select n1 l), ((n1, l) = select n1 gv1), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv1), ((n1, gv1) = select n0 bl), ((n1, gv1) = select n0 l), ((n1, gv1) = select n0 gv1), ((n1, gv1) = select gv3 bl), ((n1, gv1) = select gv3 l)
((n1, gv1) = select gv3 gv1), ((n1, gv1) = select n1 bl), ((n1, gv1) = select n1 l), ((n1, gv1) = select n1 gv1), ((n1, gv1) = select y bl), ((n1, gv1) = select y l), ((n1, gv1) = select y gv1), ((y, bl) = select n0 bl), ((y, bl) = select n0 l), ((y, bl) = select n0 gv1)
((y, bl) = select gv3 bl), ((y, bl) = select gv3 l), ((y, bl) = select gv3 gv1), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv1), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv1), ((y, l) = select n0 bl)
((y, l) = select n0 l), ((y, l) = select n0 gv1), ((y, l) = select gv3 bl), ((y, l) = select gv3 l), ((y, l) = select gv3 gv1), ((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv1), ((y, l) = select y bl), ((y, l) = select y l)
((y, l) = select y gv1), ((y, gv1) = select n0 bl), ((y, gv1) = select n0 l), ((y, gv1) = select n0 gv1), ((y, gv1) = select gv3 bl), ((y, gv1) = select gv3 l), ((y, gv1) = select gv3 gv1), ((y, gv1) = select n1 bl), ((y, gv1) = select n1 l), ((y, gv1) = select n1 gv1)
((y, gv1) = select y bl), ((y, gv1) = select y l), ((y, gv1) = select y gv1), (length bl = n0), (length bl = gv3), (length bl = n1), (length bl = y), (length l = n0), (length l = gv3), (length l = n1)
(length l = y), (length gv1 = n0), (length gv1 = gv3), (length gv1 = n1), (length gv1 = y)

Label: 7 (7)
(n0 <=* bl), (n0 <=* l), (n0 <=* gv1), (n1 <=* bl), (n1 <=* l), (n1 <=* gv1), (y <=* bl), (y <=* l), (y <=* gv1), (sorted bl)
(sorted l), (sorted gv1), (Permutation bl bl), (Permutation bl l), (Permutation bl gv1), (Permutation l bl), (Permutation l l), (Permutation l gv1), (Permutation gv1 bl), (Permutation gv1 l)
(Permutation gv1 gv1), (In n0 bl), (In n0 l), (In n0 gv1), (In n1 bl), (In n1 l), (In n1 gv1), (In y bl), (In y l), (In y gv1)
(n0 < n0), (n0 < n1), (n0 < y), (n1 < n0), (n1 < n1), (n1 < y), (y < n0), (y < n1), (y < y), (n0 <= n0)
(n0 <= n1), (n0 <= y), (n1 <= n0), (n1 <= n1), (n1 <= y), (y <= n0), (y <= n1), (y <= y), (bl = bl), (bl = l)
(bl = gv1), (l = bl), (l = l), (l = gv1), (gv1 = bl), (gv1 = l), (gv1 = gv1), (n0 = n0), (n0 = n1), (n0 = y)
(n1 = n0), (n1 = n1), (n1 = y), (y = n0), (y = n1), (y = y), (n0 <=* n0 :: bl), (n0 <=* n0 :: l), (n0 <=* n0 :: gv1), (n0 <=* n1 :: bl)
(n0 <=* n1 :: l), (n0 <=* n1 :: gv1), (n0 <=* y :: bl), (n0 <=* y :: l), (n0 <=* y :: gv1), (n0 <=* selection_sort bl), (n0 <=* selection_sort l), (n0 <=* selection_sort gv1), (n0 <=* selsort bl n0), (n0 <=* selsort bl n1)
(n0 <=* selsort bl y), (n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort l y), (n0 <=* selsort gv1 n0), (n0 <=* selsort gv1 n1), (n0 <=* selsort gv1 y), (n0 <=* bl ++ bl), (n0 <=* bl ++ l), (n0 <=* bl ++ gv1)
(n0 <=* l ++ bl), (n0 <=* l ++ l), (n0 <=* l ++ gv1), (n0 <=* gv1 ++ bl), (n0 <=* gv1 ++ l), (n0 <=* gv1 ++ gv1), (n0 <=* []), (n1 <=* n0 :: bl), (n1 <=* n0 :: l), (n1 <=* n0 :: gv1)
(n1 <=* n1 :: bl), (n1 <=* n1 :: l), (n1 <=* n1 :: gv1), (n1 <=* y :: bl), (n1 <=* y :: l), (n1 <=* y :: gv1), (n1 <=* selection_sort bl), (n1 <=* selection_sort l), (n1 <=* selection_sort gv1), (n1 <=* selsort bl n0)
(n1 <=* selsort bl n1), (n1 <=* selsort bl y), (n1 <=* selsort l n0), (n1 <=* selsort l n1), (n1 <=* selsort l y), (n1 <=* selsort gv1 n0), (n1 <=* selsort gv1 n1), (n1 <=* selsort gv1 y), (n1 <=* bl ++ bl), (n1 <=* bl ++ l)
(n1 <=* bl ++ gv1), (n1 <=* l ++ bl), (n1 <=* l ++ l), (n1 <=* l ++ gv1), (n1 <=* gv1 ++ bl), (n1 <=* gv1 ++ l), (n1 <=* gv1 ++ gv1), (n1 <=* []), (y <=* n0 :: bl), (y <=* n0 :: l)
(y <=* n0 :: gv1), (y <=* n1 :: bl), (y <=* n1 :: l), (y <=* n1 :: gv1), (y <=* y :: bl), (y <=* y :: l), (y <=* y :: gv1), (y <=* selection_sort bl), (y <=* selection_sort l), (y <=* selection_sort gv1)
(y <=* selsort bl n0), (y <=* selsort bl n1), (y <=* selsort bl y), (y <=* selsort l n0), (y <=* selsort l n1), (y <=* selsort l y), (y <=* selsort gv1 n0), (y <=* selsort gv1 n1), (y <=* selsort gv1 y), (y <=* bl ++ bl)
(y <=* bl ++ l), (y <=* bl ++ gv1), (y <=* l ++ bl), (y <=* l ++ l), (y <=* l ++ gv1), (y <=* gv1 ++ bl), (y <=* gv1 ++ l), (y <=* gv1 ++ gv1), (y <=* []), (length bl <=* bl)
(length bl <=* l), (length bl <=* gv1), (length bl <=* n0 :: bl), (length bl <=* n0 :: l), (length bl <=* n0 :: gv1), (length bl <=* n1 :: bl), (length bl <=* n1 :: l), (length bl <=* n1 :: gv1), (length bl <=* y :: bl), (length bl <=* y :: l)
(length bl <=* y :: gv1), (length bl <=* selection_sort bl), (length bl <=* selection_sort l), (length bl <=* selection_sort gv1), (length bl <=* selsort bl n0), (length bl <=* selsort bl n1), (length bl <=* selsort bl y), (length bl <=* selsort l n0), (length bl <=* selsort l n1), (length bl <=* selsort l y)
(length bl <=* selsort gv1 n0), (length bl <=* selsort gv1 n1), (length bl <=* selsort gv1 y), (length bl <=* bl ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ gv1), (length bl <=* l ++ bl), (length bl <=* l ++ l), (length bl <=* l ++ gv1), (length bl <=* gv1 ++ bl)
(length bl <=* gv1 ++ l), (length bl <=* gv1 ++ gv1), (length bl <=* []), (length l <=* bl), (length l <=* l), (length l <=* gv1), (length l <=* n0 :: bl), (length l <=* n0 :: l), (length l <=* n0 :: gv1), (length l <=* n1 :: bl)
(length l <=* n1 :: l), (length l <=* n1 :: gv1), (length l <=* y :: bl), (length l <=* y :: l), (length l <=* y :: gv1), (length l <=* selection_sort bl), (length l <=* selection_sort l), (length l <=* selection_sort gv1), (length l <=* selsort bl n0), (length l <=* selsort bl n1)
(length l <=* selsort bl y), (length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort l y), (length l <=* selsort gv1 n0), (length l <=* selsort gv1 n1), (length l <=* selsort gv1 y), (length l <=* bl ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ gv1)
(length l <=* l ++ bl), (length l <=* l ++ l), (length l <=* l ++ gv1), (length l <=* gv1 ++ bl), (length l <=* gv1 ++ l), (length l <=* gv1 ++ gv1), (length l <=* []), (length gv1 <=* bl), (length gv1 <=* l), (length gv1 <=* gv1)
(length gv1 <=* n0 :: bl), (length gv1 <=* n0 :: l), (length gv1 <=* n0 :: gv1), (length gv1 <=* n1 :: bl), (length gv1 <=* n1 :: l), (length gv1 <=* n1 :: gv1), (length gv1 <=* y :: bl), (length gv1 <=* y :: l), (length gv1 <=* y :: gv1), (length gv1 <=* selection_sort bl)
(length gv1 <=* selection_sort l), (length gv1 <=* selection_sort gv1), (length gv1 <=* selsort bl n0), (length gv1 <=* selsort bl n1), (length gv1 <=* selsort bl y), (length gv1 <=* selsort l n0), (length gv1 <=* selsort l n1), (length gv1 <=* selsort l y), (length gv1 <=* selsort gv1 n0), (length gv1 <=* selsort gv1 n1)
(length gv1 <=* selsort gv1 y), (length gv1 <=* bl ++ bl), (length gv1 <=* bl ++ l), (length gv1 <=* bl ++ gv1), (length gv1 <=* l ++ bl), (length gv1 <=* l ++ l), (length gv1 <=* l ++ gv1), (length gv1 <=* gv1 ++ bl), (length gv1 <=* gv1 ++ l), (length gv1 <=* gv1 ++ gv1)
(length gv1 <=* []), (sorted (n0 :: bl)), (sorted (n0 :: l)), (sorted (n0 :: gv1)), (sorted (n1 :: bl)), (sorted (n1 :: l)), (sorted (n1 :: gv1)), (sorted (y :: bl)), (sorted (y :: l)), (sorted (y :: gv1))
(sorted (selection_sort bl)), (sorted (selection_sort l)), (sorted (selection_sort gv1)), (sorted (selsort bl n0)), (sorted (selsort bl n1)), (sorted (selsort bl y)), (sorted (selsort l n0)), (sorted (selsort l n1)), (sorted (selsort l y)), (sorted (selsort gv1 n0))
(sorted (selsort gv1 n1)), (sorted (selsort gv1 y)), (sorted (bl ++ bl)), (sorted (bl ++ l)), (sorted (bl ++ gv1)), (sorted (l ++ bl)), (sorted (l ++ l)), (sorted (l ++ gv1)), (sorted (gv1 ++ bl)), (sorted (gv1 ++ l))
(sorted (gv1 ++ gv1)), (sorted []), (Permutation bl (n0 :: bl)), (Permutation bl (n0 :: l)), (Permutation bl (n0 :: gv1)), (Permutation bl (n1 :: bl)), (Permutation bl (n1 :: l)), (Permutation bl (n1 :: gv1)), (Permutation bl (y :: bl)), (Permutation bl (y :: l))
(Permutation bl (y :: gv1)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort gv1)), (Permutation bl (selsort bl n0)), (Permutation bl (selsort bl n1)), (Permutation bl (selsort bl y)), (Permutation bl (selsort l n0)), (Permutation bl (selsort l n1)), (Permutation bl (selsort l y))
(Permutation bl (selsort gv1 n0)), (Permutation bl (selsort gv1 n1)), (Permutation bl (selsort gv1 y)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ gv1)), (Permutation bl (l ++ bl)), (Permutation bl (l ++ l)), (Permutation bl (l ++ gv1)), (Permutation bl (gv1 ++ bl))
(Permutation bl (gv1 ++ l)), (Permutation bl (gv1 ++ gv1)), (Permutation bl []), (Permutation l (n0 :: bl)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv1)), (Permutation l (n1 :: bl)), (Permutation l (n1 :: l)), (Permutation l (n1 :: gv1)), (Permutation l (y :: bl))
(Permutation l (y :: l)), (Permutation l (y :: gv1)), (Permutation l (selection_sort bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv1)), (Permutation l (selsort bl n0)), (Permutation l (selsort bl n1)), (Permutation l (selsort bl y)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1))
(Permutation l (selsort l y)), (Permutation l (selsort gv1 n0)), (Permutation l (selsort gv1 n1)), (Permutation l (selsort gv1 y)), (Permutation l (bl ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ gv1)), (Permutation l (l ++ bl)), (Permutation l (l ++ l)), (Permutation l (l ++ gv1))
(Permutation l (gv1 ++ bl)), (Permutation l (gv1 ++ l)), (Permutation l (gv1 ++ gv1)), (Permutation l []), (Permutation gv1 (n0 :: bl)), (Permutation gv1 (n0 :: l)), (Permutation gv1 (n0 :: gv1)), (Permutation gv1 (n1 :: bl)), (Permutation gv1 (n1 :: l)), (Permutation gv1 (n1 :: gv1))
(Permutation gv1 (y :: bl)), (Permutation gv1 (y :: l)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (selection_sort bl)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selsort bl n0)), (Permutation gv1 (selsort bl n1)), (Permutation gv1 (selsort bl y)), (Permutation gv1 (selsort l n0))
(Permutation gv1 (selsort l n1)), (Permutation gv1 (selsort l y)), (Permutation gv1 (selsort gv1 n0)), (Permutation gv1 (selsort gv1 n1)), (Permutation gv1 (selsort gv1 y)), (Permutation gv1 (bl ++ bl)), (Permutation gv1 (bl ++ l)), (Permutation gv1 (bl ++ gv1)), (Permutation gv1 (l ++ bl)), (Permutation gv1 (l ++ l))
(Permutation gv1 (l ++ gv1)), (Permutation gv1 (gv1 ++ bl)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (n0 :: bl) bl), (Permutation (n0 :: bl) l), (Permutation (n0 :: bl) gv1), (Permutation (n0 :: bl) (n0 :: l)), (Permutation (n0 :: bl) (n0 :: gv1))
(Permutation (n0 :: bl) (n1 :: bl)), (Permutation (n0 :: bl) (n1 :: l)), (Permutation (n0 :: bl) (n1 :: gv1)), (Permutation (n0 :: bl) (y :: bl)), (Permutation (n0 :: bl) (y :: l)), (Permutation (n0 :: bl) (y :: gv1)), (Permutation (n0 :: bl) (selection_sort bl)), (Permutation (n0 :: bl) (selection_sort l)), (Permutation (n0 :: bl) (selection_sort gv1)), (Permutation (n0 :: bl) (selsort bl n0))
(Permutation (n0 :: bl) (selsort bl n1)), (Permutation (n0 :: bl) (selsort bl y)), (Permutation (n0 :: bl) (selsort l n0)), (Permutation (n0 :: bl) (selsort l n1)), (Permutation (n0 :: bl) (selsort l y)), (Permutation (n0 :: bl) (selsort gv1 n0)), (Permutation (n0 :: bl) (selsort gv1 n1)), (Permutation (n0 :: bl) (selsort gv1 y)), (Permutation (n0 :: bl) (bl ++ bl)), (Permutation (n0 :: bl) (bl ++ l))
(Permutation (n0 :: bl) (bl ++ gv1)), (Permutation (n0 :: bl) (l ++ bl)), (Permutation (n0 :: bl) (l ++ l)), (Permutation (n0 :: bl) (l ++ gv1)), (Permutation (n0 :: bl) (gv1 ++ bl)), (Permutation (n0 :: bl) (gv1 ++ l)), (Permutation (n0 :: bl) (gv1 ++ gv1)), (Permutation (n0 :: bl) []), (Permutation (n0 :: l) bl), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (n0 :: bl)), (Permutation (n0 :: l) (n0 :: gv1)), (Permutation (n0 :: l) (n1 :: bl)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv1)), (Permutation (n0 :: l) (y :: bl)), (Permutation (n0 :: l) (y :: l)), (Permutation (n0 :: l) (y :: gv1)), (Permutation (n0 :: l) (selection_sort bl))
(Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv1)), (Permutation (n0 :: l) (selsort bl n0)), (Permutation (n0 :: l) (selsort bl n1)), (Permutation (n0 :: l) (selsort bl y)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l y)), (Permutation (n0 :: l) (selsort gv1 n0)), (Permutation (n0 :: l) (selsort gv1 n1))
(Permutation (n0 :: l) (selsort gv1 y)), (Permutation (n0 :: l) (bl ++ bl)), (Permutation (n0 :: l) (bl ++ l)), (Permutation (n0 :: l) (bl ++ gv1)), (Permutation (n0 :: l) (l ++ bl)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv1)), (Permutation (n0 :: l) (gv1 ++ bl)), (Permutation (n0 :: l) (gv1 ++ l)), (Permutation (n0 :: l) (gv1 ++ gv1))
(Permutation (n0 :: l) []), (Permutation (n0 :: gv1) bl), (Permutation (n0 :: gv1) l), (Permutation (n0 :: gv1) gv1), (Permutation (n0 :: gv1) (n0 :: bl)), (Permutation (n0 :: gv1) (n0 :: l)), (Permutation (n0 :: gv1) (n1 :: bl)), (Permutation (n0 :: gv1) (n1 :: l)), (Permutation (n0 :: gv1) (n1 :: gv1)), (Permutation (n0 :: gv1) (y :: bl))
(Permutation (n0 :: gv1) (y :: l)), (Permutation (n0 :: gv1) (y :: gv1)), (Permutation (n0 :: gv1) (selection_sort bl)), (Permutation (n0 :: gv1) (selection_sort l)), (Permutation (n0 :: gv1) (selection_sort gv1)), (Permutation (n0 :: gv1) (selsort bl n0)), (Permutation (n0 :: gv1) (selsort bl n1)), (Permutation (n0 :: gv1) (selsort bl y)), (Permutation (n0 :: gv1) (selsort l n0)), (Permutation (n0 :: gv1) (selsort l n1))
(Permutation (n0 :: gv1) (selsort l y)), (Permutation (n0 :: gv1) (selsort gv1 n0)), (Permutation (n0 :: gv1) (selsort gv1 n1)), (Permutation (n0 :: gv1) (selsort gv1 y)), (Permutation (n0 :: gv1) (bl ++ bl)), (Permutation (n0 :: gv1) (bl ++ l)), (Permutation (n0 :: gv1) (bl ++ gv1)), (Permutation (n0 :: gv1) (l ++ bl)), (Permutation (n0 :: gv1) (l ++ l)), (Permutation (n0 :: gv1) (l ++ gv1))
(Permutation (n0 :: gv1) (gv1 ++ bl)), (Permutation (n0 :: gv1) (gv1 ++ l)), (Permutation (n0 :: gv1) (gv1 ++ gv1)), (Permutation (n0 :: gv1) []), (Permutation (n1 :: bl) bl), (Permutation (n1 :: bl) l), (Permutation (n1 :: bl) gv1), (Permutation (n1 :: bl) (n0 :: bl)), (Permutation (n1 :: bl) (n0 :: l)), (Permutation (n1 :: bl) (n0 :: gv1))
(Permutation (n1 :: bl) (n1 :: l)), (Permutation (n1 :: bl) (n1 :: gv1)), (Permutation (n1 :: bl) (y :: bl)), (Permutation (n1 :: bl) (y :: l)), (Permutation (n1 :: bl) (y :: gv1)), (Permutation (n1 :: bl) (selection_sort bl)), (Permutation (n1 :: bl) (selection_sort l)), (Permutation (n1 :: bl) (selection_sort gv1)), (Permutation (n1 :: bl) (selsort bl n0)), (Permutation (n1 :: bl) (selsort bl n1))
(Permutation (n1 :: bl) (selsort bl y)), (Permutation (n1 :: bl) (selsort l n0)), (Permutation (n1 :: bl) (selsort l n1)), (Permutation (n1 :: bl) (selsort l y)), (Permutation (n1 :: bl) (selsort gv1 n0)), (Permutation (n1 :: bl) (selsort gv1 n1)), (Permutation (n1 :: bl) (selsort gv1 y)), (Permutation (n1 :: bl) (bl ++ bl)), (Permutation (n1 :: bl) (bl ++ l)), (Permutation (n1 :: bl) (bl ++ gv1))
(Permutation (n1 :: bl) (l ++ bl)), (Permutation (n1 :: bl) (l ++ l)), (Permutation (n1 :: bl) (l ++ gv1)), (Permutation (n1 :: bl) (gv1 ++ bl)), (Permutation (n1 :: bl) (gv1 ++ l)), (Permutation (n1 :: bl) (gv1 ++ gv1)), (Permutation (n1 :: bl) []), (Permutation (n1 :: l) bl), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv1)
(Permutation (n1 :: l) (n0 :: bl)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv1)), (Permutation (n1 :: l) (n1 :: bl)), (Permutation (n1 :: l) (n1 :: gv1)), (Permutation (n1 :: l) (y :: bl)), (Permutation (n1 :: l) (y :: l)), (Permutation (n1 :: l) (y :: gv1)), (Permutation (n1 :: l) (selection_sort bl)), (Permutation (n1 :: l) (selection_sort l))
(Permutation (n1 :: l) (selection_sort gv1)), (Permutation (n1 :: l) (selsort bl n0)), (Permutation (n1 :: l) (selsort bl n1)), (Permutation (n1 :: l) (selsort bl y)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l y)), (Permutation (n1 :: l) (selsort gv1 n0)), (Permutation (n1 :: l) (selsort gv1 n1)), (Permutation (n1 :: l) (selsort gv1 y))
(Permutation (n1 :: l) (bl ++ bl)), (Permutation (n1 :: l) (bl ++ l)), (Permutation (n1 :: l) (bl ++ gv1)), (Permutation (n1 :: l) (l ++ bl)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv1)), (Permutation (n1 :: l) (gv1 ++ bl)), (Permutation (n1 :: l) (gv1 ++ l)), (Permutation (n1 :: l) (gv1 ++ gv1)), (Permutation (n1 :: l) [])
(Permutation (n1 :: gv1) bl), (Permutation (n1 :: gv1) l), (Permutation (n1 :: gv1) gv1), (Permutation (n1 :: gv1) (n0 :: bl)), (Permutation (n1 :: gv1) (n0 :: l)), (Permutation (n1 :: gv1) (n0 :: gv1)), (Permutation (n1 :: gv1) (n1 :: bl)), (Permutation (n1 :: gv1) (n1 :: l)), (Permutation (n1 :: gv1) (y :: bl)), (Permutation (n1 :: gv1) (y :: l))
(Permutation (n1 :: gv1) (y :: gv1)), (Permutation (n1 :: gv1) (selection_sort bl)), (Permutation (n1 :: gv1) (selection_sort l)), (Permutation (n1 :: gv1) (selection_sort gv1)), (Permutation (n1 :: gv1) (selsort bl n0)), (Permutation (n1 :: gv1) (selsort bl n1)), (Permutation (n1 :: gv1) (selsort bl y)), (Permutation (n1 :: gv1) (selsort l n0)), (Permutation (n1 :: gv1) (selsort l n1)), (Permutation (n1 :: gv1) (selsort l y))
(Permutation (n1 :: gv1) (selsort gv1 n0)), (Permutation (n1 :: gv1) (selsort gv1 n1)), (Permutation (n1 :: gv1) (selsort gv1 y)), (Permutation (n1 :: gv1) (bl ++ bl)), (Permutation (n1 :: gv1) (bl ++ l)), (Permutation (n1 :: gv1) (bl ++ gv1)), (Permutation (n1 :: gv1) (l ++ bl)), (Permutation (n1 :: gv1) (l ++ l)), (Permutation (n1 :: gv1) (l ++ gv1)), (Permutation (n1 :: gv1) (gv1 ++ bl))
(Permutation (n1 :: gv1) (gv1 ++ l)), (Permutation (n1 :: gv1) (gv1 ++ gv1)), (Permutation (n1 :: gv1) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) l), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (n0 :: bl)), (Permutation (y :: bl) (n0 :: l)), (Permutation (y :: bl) (n0 :: gv1)), (Permutation (y :: bl) (n1 :: bl))
(Permutation (y :: bl) (n1 :: l)), (Permutation (y :: bl) (n1 :: gv1)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (y :: gv1)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort gv1)), (Permutation (y :: bl) (selsort bl n0)), (Permutation (y :: bl) (selsort bl n1)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (selsort l n0)), (Permutation (y :: bl) (selsort l n1)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort gv1 n0)), (Permutation (y :: bl) (selsort gv1 n1)), (Permutation (y :: bl) (selsort gv1 y)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ gv1)), (Permutation (y :: bl) (l ++ bl))
(Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ gv1)), (Permutation (y :: bl) (gv1 ++ bl)), (Permutation (y :: bl) (gv1 ++ l)), (Permutation (y :: bl) (gv1 ++ gv1)), (Permutation (y :: bl) []), (Permutation (y :: l) bl), (Permutation (y :: l) l), (Permutation (y :: l) gv1), (Permutation (y :: l) (n0 :: bl))
(Permutation (y :: l) (n0 :: l)), (Permutation (y :: l) (n0 :: gv1)), (Permutation (y :: l) (n1 :: bl)), (Permutation (y :: l) (n1 :: l)), (Permutation (y :: l) (n1 :: gv1)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (y :: gv1)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort gv1))
(Permutation (y :: l) (selsort bl n0)), (Permutation (y :: l) (selsort bl n1)), (Permutation (y :: l) (selsort bl y)), (Permutation (y :: l) (selsort l n0)), (Permutation (y :: l) (selsort l n1)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort gv1 n0)), (Permutation (y :: l) (selsort gv1 n1)), (Permutation (y :: l) (selsort gv1 y)), (Permutation (y :: l) (bl ++ bl))
(Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (bl ++ gv1)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ gv1)), (Permutation (y :: l) (gv1 ++ bl)), (Permutation (y :: l) (gv1 ++ l)), (Permutation (y :: l) (gv1 ++ gv1)), (Permutation (y :: l) []), (Permutation (y :: gv1) bl)
(Permutation (y :: gv1) l), (Permutation (y :: gv1) gv1), (Permutation (y :: gv1) (n0 :: bl)), (Permutation (y :: gv1) (n0 :: l)), (Permutation (y :: gv1) (n0 :: gv1)), (Permutation (y :: gv1) (n1 :: bl)), (Permutation (y :: gv1) (n1 :: l)), (Permutation (y :: gv1) (n1 :: gv1)), (Permutation (y :: gv1) (y :: bl)), (Permutation (y :: gv1) (y :: l))
(Permutation (y :: gv1) (selection_sort bl)), (Permutation (y :: gv1) (selection_sort l)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selsort bl n0)), (Permutation (y :: gv1) (selsort bl n1)), (Permutation (y :: gv1) (selsort bl y)), (Permutation (y :: gv1) (selsort l n0)), (Permutation (y :: gv1) (selsort l n1)), (Permutation (y :: gv1) (selsort l y)), (Permutation (y :: gv1) (selsort gv1 n0))
(Permutation (y :: gv1) (selsort gv1 n1)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (bl ++ bl)), (Permutation (y :: gv1) (bl ++ l)), (Permutation (y :: gv1) (bl ++ gv1)), (Permutation (y :: gv1) (l ++ bl)), (Permutation (y :: gv1) (l ++ l)), (Permutation (y :: gv1) (l ++ gv1)), (Permutation (y :: gv1) (gv1 ++ bl)), (Permutation (y :: gv1) (gv1 ++ l))
(Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) gv1), (Permutation (selection_sort bl) (n0 :: bl)), (Permutation (selection_sort bl) (n0 :: l)), (Permutation (selection_sort bl) (n0 :: gv1)), (Permutation (selection_sort bl) (n1 :: bl)), (Permutation (selection_sort bl) (n1 :: l))
(Permutation (selection_sort bl) (n1 :: gv1)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: gv1)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selection_sort gv1)), (Permutation (selection_sort bl) (selsort bl n0)), (Permutation (selection_sort bl) (selsort bl n1)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort l n0))
(Permutation (selection_sort bl) (selsort l n1)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort gv1 n0)), (Permutation (selection_sort bl) (selsort gv1 n1)), (Permutation (selection_sort bl) (selsort gv1 y)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ gv1)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (l ++ l))
(Permutation (selection_sort bl) (l ++ gv1)), (Permutation (selection_sort bl) (gv1 ++ bl)), (Permutation (selection_sort bl) (gv1 ++ l)), (Permutation (selection_sort bl) (gv1 ++ gv1)), (Permutation (selection_sort bl) []), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv1), (Permutation (selection_sort l) (n0 :: bl)), (Permutation (selection_sort l) (n0 :: l))
(Permutation (selection_sort l) (n0 :: gv1)), (Permutation (selection_sort l) (n1 :: bl)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv1)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: gv1)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selection_sort gv1)), (Permutation (selection_sort l) (selsort bl n0))
(Permutation (selection_sort l) (selsort bl n1)), (Permutation (selection_sort l) (selsort bl y)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort gv1 n0)), (Permutation (selection_sort l) (selsort gv1 n1)), (Permutation (selection_sort l) (selsort gv1 y)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) (bl ++ l))
(Permutation (selection_sort l) (bl ++ gv1)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selection_sort l) (gv1 ++ bl)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (gv1 ++ gv1)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv1) bl), (Permutation (selection_sort gv1) l)
(Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) (n0 :: bl)), (Permutation (selection_sort gv1) (n0 :: l)), (Permutation (selection_sort gv1) (n0 :: gv1)), (Permutation (selection_sort gv1) (n1 :: bl)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n1 :: gv1)), (Permutation (selection_sort gv1) (y :: bl)), (Permutation (selection_sort gv1) (y :: l)), (Permutation (selection_sort gv1) (y :: gv1))
(Permutation (selection_sort gv1) (selection_sort bl)), (Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selsort bl n0)), (Permutation (selection_sort gv1) (selsort bl n1)), (Permutation (selection_sort gv1) (selsort bl y)), (Permutation (selection_sort gv1) (selsort l n0)), (Permutation (selection_sort gv1) (selsort l n1)), (Permutation (selection_sort gv1) (selsort l y)), (Permutation (selection_sort gv1) (selsort gv1 n0)), (Permutation (selection_sort gv1) (selsort gv1 n1))
(Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (bl ++ bl)), (Permutation (selection_sort gv1) (bl ++ l)), (Permutation (selection_sort gv1) (bl ++ gv1)), (Permutation (selection_sort gv1) (l ++ bl)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ bl)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (gv1 ++ gv1))
(Permutation (selection_sort gv1) []), (Permutation (selsort bl n0) bl), (Permutation (selsort bl n0) l), (Permutation (selsort bl n0) gv1), (Permutation (selsort bl n0) (n0 :: bl)), (Permutation (selsort bl n0) (n0 :: l)), (Permutation (selsort bl n0) (n0 :: gv1)), (Permutation (selsort bl n0) (n1 :: bl)), (Permutation (selsort bl n0) (n1 :: l)), (Permutation (selsort bl n0) (n1 :: gv1))
(Permutation (selsort bl n0) (y :: bl)), (Permutation (selsort bl n0) (y :: l)), (Permutation (selsort bl n0) (y :: gv1)), (Permutation (selsort bl n0) (selection_sort bl)), (Permutation (selsort bl n0) (selection_sort l)), (Permutation (selsort bl n0) (selection_sort gv1)), (Permutation (selsort bl n0) (selsort bl n1)), (Permutation (selsort bl n0) (selsort bl y)), (Permutation (selsort bl n0) (selsort l n0)), (Permutation (selsort bl n0) (selsort l n1))
(Permutation (selsort bl n0) (selsort l y)), (Permutation (selsort bl n0) (selsort gv1 n0)), (Permutation (selsort bl n0) (selsort gv1 n1)), (Permutation (selsort bl n0) (selsort gv1 y)), (Permutation (selsort bl n0) (bl ++ bl)), (Permutation (selsort bl n0) (bl ++ l)), (Permutation (selsort bl n0) (bl ++ gv1)), (Permutation (selsort bl n0) (l ++ bl)), (Permutation (selsort bl n0) (l ++ l)), (Permutation (selsort bl n0) (l ++ gv1))
(Permutation (selsort bl n0) (gv1 ++ bl)), (Permutation (selsort bl n0) (gv1 ++ l)), (Permutation (selsort bl n0) (gv1 ++ gv1)), (Permutation (selsort bl n0) []), (Permutation (selsort bl n1) bl), (Permutation (selsort bl n1) l), (Permutation (selsort bl n1) gv1), (Permutation (selsort bl n1) (n0 :: bl)), (Permutation (selsort bl n1) (n0 :: l)), (Permutation (selsort bl n1) (n0 :: gv1))
(Permutation (selsort bl n1) (n1 :: bl)), (Permutation (selsort bl n1) (n1 :: l)), (Permutation (selsort bl n1) (n1 :: gv1)), (Permutation (selsort bl n1) (y :: bl)), (Permutation (selsort bl n1) (y :: l)), (Permutation (selsort bl n1) (y :: gv1)), (Permutation (selsort bl n1) (selection_sort bl)), (Permutation (selsort bl n1) (selection_sort l)), (Permutation (selsort bl n1) (selection_sort gv1)), (Permutation (selsort bl n1) (selsort bl n0))
(Permutation (selsort bl n1) (selsort bl y)), (Permutation (selsort bl n1) (selsort l n0)), (Permutation (selsort bl n1) (selsort l n1)), (Permutation (selsort bl n1) (selsort l y)), (Permutation (selsort bl n1) (selsort gv1 n0)), (Permutation (selsort bl n1) (selsort gv1 n1)), (Permutation (selsort bl n1) (selsort gv1 y)), (Permutation (selsort bl n1) (bl ++ bl)), (Permutation (selsort bl n1) (bl ++ l)), (Permutation (selsort bl n1) (bl ++ gv1))
(Permutation (selsort bl n1) (l ++ bl)), (Permutation (selsort bl n1) (l ++ l)), (Permutation (selsort bl n1) (l ++ gv1)), (Permutation (selsort bl n1) (gv1 ++ bl)), (Permutation (selsort bl n1) (gv1 ++ l)), (Permutation (selsort bl n1) (gv1 ++ gv1)), (Permutation (selsort bl n1) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) l), (Permutation (selsort bl y) gv1)
(Permutation (selsort bl y) (n0 :: bl)), (Permutation (selsort bl y) (n0 :: l)), (Permutation (selsort bl y) (n0 :: gv1)), (Permutation (selsort bl y) (n1 :: bl)), (Permutation (selsort bl y) (n1 :: l)), (Permutation (selsort bl y) (n1 :: gv1)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: gv1)), (Permutation (selsort bl y) (selection_sort bl))
(Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort gv1)), (Permutation (selsort bl y) (selsort bl n0)), (Permutation (selsort bl y) (selsort bl n1)), (Permutation (selsort bl y) (selsort l n0)), (Permutation (selsort bl y) (selsort l n1)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort gv1 n0)), (Permutation (selsort bl y) (selsort gv1 n1)), (Permutation (selsort bl y) (selsort gv1 y))
(Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ gv1)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ gv1)), (Permutation (selsort bl y) (gv1 ++ bl)), (Permutation (selsort bl y) (gv1 ++ l)), (Permutation (selsort bl y) (gv1 ++ gv1)), (Permutation (selsort bl y) [])
(Permutation (selsort l n0) bl), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv1), (Permutation (selsort l n0) (n0 :: bl)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv1)), (Permutation (selsort l n0) (n1 :: bl)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv1)), (Permutation (selsort l n0) (y :: bl))
(Permutation (selsort l n0) (y :: l)), (Permutation (selsort l n0) (y :: gv1)), (Permutation (selsort l n0) (selection_sort bl)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv1)), (Permutation (selsort l n0) (selsort bl n0)), (Permutation (selsort l n0) (selsort bl n1)), (Permutation (selsort l n0) (selsort bl y)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l y))
(Permutation (selsort l n0) (selsort gv1 n0)), (Permutation (selsort l n0) (selsort gv1 n1)), (Permutation (selsort l n0) (selsort gv1 y)), (Permutation (selsort l n0) (bl ++ bl)), (Permutation (selsort l n0) (bl ++ l)), (Permutation (selsort l n0) (bl ++ gv1)), (Permutation (selsort l n0) (l ++ bl)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv1)), (Permutation (selsort l n0) (gv1 ++ bl))
(Permutation (selsort l n0) (gv1 ++ l)), (Permutation (selsort l n0) (gv1 ++ gv1)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) bl), (Permutation (selsort l n1) l), (Permutation (selsort l n1) gv1), (Permutation (selsort l n1) (n0 :: bl)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv1)), (Permutation (selsort l n1) (n1 :: bl))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv1)), (Permutation (selsort l n1) (y :: bl)), (Permutation (selsort l n1) (y :: l)), (Permutation (selsort l n1) (y :: gv1)), (Permutation (selsort l n1) (selection_sort bl)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort gv1)), (Permutation (selsort l n1) (selsort bl n0)), (Permutation (selsort l n1) (selsort bl n1))
(Permutation (selsort l n1) (selsort bl y)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l y)), (Permutation (selsort l n1) (selsort gv1 n0)), (Permutation (selsort l n1) (selsort gv1 n1)), (Permutation (selsort l n1) (selsort gv1 y)), (Permutation (selsort l n1) (bl ++ bl)), (Permutation (selsort l n1) (bl ++ l)), (Permutation (selsort l n1) (bl ++ gv1)), (Permutation (selsort l n1) (l ++ bl))
(Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv1)), (Permutation (selsort l n1) (gv1 ++ bl)), (Permutation (selsort l n1) (gv1 ++ l)), (Permutation (selsort l n1) (gv1 ++ gv1)), (Permutation (selsort l n1) []), (Permutation (selsort l y) bl), (Permutation (selsort l y) l), (Permutation (selsort l y) gv1), (Permutation (selsort l y) (n0 :: bl))
(Permutation (selsort l y) (n0 :: l)), (Permutation (selsort l y) (n0 :: gv1)), (Permutation (selsort l y) (n1 :: bl)), (Permutation (selsort l y) (n1 :: l)), (Permutation (selsort l y) (n1 :: gv1)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: gv1)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selection_sort gv1)), (Permutation (selsort l y) (selsort bl n0)), (Permutation (selsort l y) (selsort bl n1)), (Permutation (selsort l y) (selsort bl y)), (Permutation (selsort l y) (selsort l n0)), (Permutation (selsort l y) (selsort l n1)), (Permutation (selsort l y) (selsort gv1 n0)), (Permutation (selsort l y) (selsort gv1 n1)), (Permutation (selsort l y) (selsort gv1 y)), (Permutation (selsort l y) (bl ++ bl))
(Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ gv1)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ gv1)), (Permutation (selsort l y) (gv1 ++ bl)), (Permutation (selsort l y) (gv1 ++ l)), (Permutation (selsort l y) (gv1 ++ gv1)), (Permutation (selsort l y) []), (Permutation (selsort gv1 n0) bl)
(Permutation (selsort gv1 n0) l), (Permutation (selsort gv1 n0) gv1), (Permutation (selsort gv1 n0) (n0 :: bl)), (Permutation (selsort gv1 n0) (n0 :: l)), (Permutation (selsort gv1 n0) (n0 :: gv1)), (Permutation (selsort gv1 n0) (n1 :: bl)), (Permutation (selsort gv1 n0) (n1 :: l)), (Permutation (selsort gv1 n0) (n1 :: gv1)), (Permutation (selsort gv1 n0) (y :: bl)), (Permutation (selsort gv1 n0) (y :: l))
(Permutation (selsort gv1 n0) (y :: gv1)), (Permutation (selsort gv1 n0) (selection_sort bl)), (Permutation (selsort gv1 n0) (selection_sort l)), (Permutation (selsort gv1 n0) (selection_sort gv1)), (Permutation (selsort gv1 n0) (selsort bl n0)), (Permutation (selsort gv1 n0) (selsort bl n1)), (Permutation (selsort gv1 n0) (selsort bl y)), (Permutation (selsort gv1 n0) (selsort l n0)), (Permutation (selsort gv1 n0) (selsort l n1)), (Permutation (selsort gv1 n0) (selsort l y))
(Permutation (selsort gv1 n0) (selsort gv1 n1)), (Permutation (selsort gv1 n0) (selsort gv1 y)), (Permutation (selsort gv1 n0) (bl ++ bl)), (Permutation (selsort gv1 n0) (bl ++ l)), (Permutation (selsort gv1 n0) (bl ++ gv1)), (Permutation (selsort gv1 n0) (l ++ bl)), (Permutation (selsort gv1 n0) (l ++ l)), (Permutation (selsort gv1 n0) (l ++ gv1)), (Permutation (selsort gv1 n0) (gv1 ++ bl)), (Permutation (selsort gv1 n0) (gv1 ++ l))
(Permutation (selsort gv1 n0) (gv1 ++ gv1)), (Permutation (selsort gv1 n0) []), (Permutation (selsort gv1 n1) bl), (Permutation (selsort gv1 n1) l), (Permutation (selsort gv1 n1) gv1), (Permutation (selsort gv1 n1) (n0 :: bl)), (Permutation (selsort gv1 n1) (n0 :: l)), (Permutation (selsort gv1 n1) (n0 :: gv1)), (Permutation (selsort gv1 n1) (n1 :: bl)), (Permutation (selsort gv1 n1) (n1 :: l))
(Permutation (selsort gv1 n1) (n1 :: gv1)), (Permutation (selsort gv1 n1) (y :: bl)), (Permutation (selsort gv1 n1) (y :: l)), (Permutation (selsort gv1 n1) (y :: gv1)), (Permutation (selsort gv1 n1) (selection_sort bl)), (Permutation (selsort gv1 n1) (selection_sort l)), (Permutation (selsort gv1 n1) (selection_sort gv1)), (Permutation (selsort gv1 n1) (selsort bl n0)), (Permutation (selsort gv1 n1) (selsort bl n1)), (Permutation (selsort gv1 n1) (selsort bl y))
(Permutation (selsort gv1 n1) (selsort l n0)), (Permutation (selsort gv1 n1) (selsort l n1)), (Permutation (selsort gv1 n1) (selsort l y)), (Permutation (selsort gv1 n1) (selsort gv1 n0)), (Permutation (selsort gv1 n1) (selsort gv1 y)), (Permutation (selsort gv1 n1) (bl ++ bl)), (Permutation (selsort gv1 n1) (bl ++ l)), (Permutation (selsort gv1 n1) (bl ++ gv1)), (Permutation (selsort gv1 n1) (l ++ bl)), (Permutation (selsort gv1 n1) (l ++ l))
(Permutation (selsort gv1 n1) (l ++ gv1)), (Permutation (selsort gv1 n1) (gv1 ++ bl)), (Permutation (selsort gv1 n1) (gv1 ++ l)), (Permutation (selsort gv1 n1) (gv1 ++ gv1)), (Permutation (selsort gv1 n1) []), (Permutation (selsort gv1 y) bl), (Permutation (selsort gv1 y) l), (Permutation (selsort gv1 y) gv1), (Permutation (selsort gv1 y) (n0 :: bl)), (Permutation (selsort gv1 y) (n0 :: l))
(Permutation (selsort gv1 y) (n0 :: gv1)), (Permutation (selsort gv1 y) (n1 :: bl)), (Permutation (selsort gv1 y) (n1 :: l)), (Permutation (selsort gv1 y) (n1 :: gv1)), (Permutation (selsort gv1 y) (y :: bl)), (Permutation (selsort gv1 y) (y :: l)), (Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (selection_sort bl)), (Permutation (selsort gv1 y) (selection_sort l)), (Permutation (selsort gv1 y) (selection_sort gv1))
(Permutation (selsort gv1 y) (selsort bl n0)), (Permutation (selsort gv1 y) (selsort bl n1)), (Permutation (selsort gv1 y) (selsort bl y)), (Permutation (selsort gv1 y) (selsort l n0)), (Permutation (selsort gv1 y) (selsort l n1)), (Permutation (selsort gv1 y) (selsort l y)), (Permutation (selsort gv1 y) (selsort gv1 n0)), (Permutation (selsort gv1 y) (selsort gv1 n1)), (Permutation (selsort gv1 y) (bl ++ bl)), (Permutation (selsort gv1 y) (bl ++ l))
(Permutation (selsort gv1 y) (bl ++ gv1)), (Permutation (selsort gv1 y) (l ++ bl)), (Permutation (selsort gv1 y) (l ++ l)), (Permutation (selsort gv1 y) (l ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ bl)), (Permutation (selsort gv1 y) (gv1 ++ l)), (Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) l)
(Permutation (bl ++ bl) gv1), (Permutation (bl ++ bl) (n0 :: bl)), (Permutation (bl ++ bl) (n0 :: l)), (Permutation (bl ++ bl) (n0 :: gv1)), (Permutation (bl ++ bl) (n1 :: bl)), (Permutation (bl ++ bl) (n1 :: l)), (Permutation (bl ++ bl) (n1 :: gv1)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: gv1))
(Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort gv1)), (Permutation (bl ++ bl) (selsort bl n0)), (Permutation (bl ++ bl) (selsort bl n1)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort l n0)), (Permutation (bl ++ bl) (selsort l n1)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort gv1 n0))
(Permutation (bl ++ bl) (selsort gv1 n1)), (Permutation (bl ++ bl) (selsort gv1 y)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) (bl ++ gv1)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ bl)), (Permutation (bl ++ bl) (gv1 ++ l)), (Permutation (bl ++ bl) (gv1 ++ gv1))
(Permutation (bl ++ bl) []), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) l), (Permutation (bl ++ l) gv1), (Permutation (bl ++ l) (n0 :: bl)), (Permutation (bl ++ l) (n0 :: l)), (Permutation (bl ++ l) (n0 :: gv1)), (Permutation (bl ++ l) (n1 :: bl)), (Permutation (bl ++ l) (n1 :: l)), (Permutation (bl ++ l) (n1 :: gv1))
(Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: gv1)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort gv1)), (Permutation (bl ++ l) (selsort bl n0)), (Permutation (bl ++ l) (selsort bl n1)), (Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (selsort l n0))
(Permutation (bl ++ l) (selsort l n1)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort gv1 n0)), (Permutation (bl ++ l) (selsort gv1 n1)), (Permutation (bl ++ l) (selsort gv1 y)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) (bl ++ gv1)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ gv1))
(Permutation (bl ++ l) (gv1 ++ bl)), (Permutation (bl ++ l) (gv1 ++ l)), (Permutation (bl ++ l) (gv1 ++ gv1)), (Permutation (bl ++ l) []), (Permutation (bl ++ gv1) bl), (Permutation (bl ++ gv1) l), (Permutation (bl ++ gv1) gv1), (Permutation (bl ++ gv1) (n0 :: bl)), (Permutation (bl ++ gv1) (n0 :: l)), (Permutation (bl ++ gv1) (n0 :: gv1))
(Permutation (bl ++ gv1) (n1 :: bl)), (Permutation (bl ++ gv1) (n1 :: l)), (Permutation (bl ++ gv1) (n1 :: gv1)), (Permutation (bl ++ gv1) (y :: bl)), (Permutation (bl ++ gv1) (y :: l)), (Permutation (bl ++ gv1) (y :: gv1)), (Permutation (bl ++ gv1) (selection_sort bl)), (Permutation (bl ++ gv1) (selection_sort l)), (Permutation (bl ++ gv1) (selection_sort gv1)), (Permutation (bl ++ gv1) (selsort bl n0))
(Permutation (bl ++ gv1) (selsort bl n1)), (Permutation (bl ++ gv1) (selsort bl y)), (Permutation (bl ++ gv1) (selsort l n0)), (Permutation (bl ++ gv1) (selsort l n1)), (Permutation (bl ++ gv1) (selsort l y)), (Permutation (bl ++ gv1) (selsort gv1 n0)), (Permutation (bl ++ gv1) (selsort gv1 n1)), (Permutation (bl ++ gv1) (selsort gv1 y)), (Permutation (bl ++ gv1) (bl ++ bl)), (Permutation (bl ++ gv1) (bl ++ l))
(Permutation (bl ++ gv1) (l ++ bl)), (Permutation (bl ++ gv1) (l ++ l)), (Permutation (bl ++ gv1) (l ++ gv1)), (Permutation (bl ++ gv1) (gv1 ++ bl)), (Permutation (bl ++ gv1) (gv1 ++ l)), (Permutation (bl ++ gv1) (gv1 ++ gv1)), (Permutation (bl ++ gv1) []), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) l), (Permutation (l ++ bl) gv1)
(Permutation (l ++ bl) (n0 :: bl)), (Permutation (l ++ bl) (n0 :: l)), (Permutation (l ++ bl) (n0 :: gv1)), (Permutation (l ++ bl) (n1 :: bl)), (Permutation (l ++ bl) (n1 :: l)), (Permutation (l ++ bl) (n1 :: gv1)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: gv1)), (Permutation (l ++ bl) (selection_sort bl))
(Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort gv1)), (Permutation (l ++ bl) (selsort bl n0)), (Permutation (l ++ bl) (selsort bl n1)), (Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (selsort l n0)), (Permutation (l ++ bl) (selsort l n1)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort gv1 n0)), (Permutation (l ++ bl) (selsort gv1 n1))
(Permutation (l ++ bl) (selsort gv1 y)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ gv1)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (l ++ gv1)), (Permutation (l ++ bl) (gv1 ++ bl)), (Permutation (l ++ bl) (gv1 ++ l)), (Permutation (l ++ bl) (gv1 ++ gv1)), (Permutation (l ++ bl) [])
(Permutation (l ++ l) bl), (Permutation (l ++ l) l), (Permutation (l ++ l) gv1), (Permutation (l ++ l) (n0 :: bl)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv1)), (Permutation (l ++ l) (n1 :: bl)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv1)), (Permutation (l ++ l) (y :: bl))
(Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: gv1)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort bl n0)), (Permutation (l ++ l) (selsort bl n1)), (Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort gv1 n0)), (Permutation (l ++ l) (selsort gv1 n1)), (Permutation (l ++ l) (selsort gv1 y)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (bl ++ gv1)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (l ++ gv1)), (Permutation (l ++ l) (gv1 ++ bl))
(Permutation (l ++ l) (gv1 ++ l)), (Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) []), (Permutation (l ++ gv1) bl), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) gv1), (Permutation (l ++ gv1) (n0 :: bl)), (Permutation (l ++ gv1) (n0 :: l)), (Permutation (l ++ gv1) (n0 :: gv1)), (Permutation (l ++ gv1) (n1 :: bl))
(Permutation (l ++ gv1) (n1 :: l)), (Permutation (l ++ gv1) (n1 :: gv1)), (Permutation (l ++ gv1) (y :: bl)), (Permutation (l ++ gv1) (y :: l)), (Permutation (l ++ gv1) (y :: gv1)), (Permutation (l ++ gv1) (selection_sort bl)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selsort bl n0)), (Permutation (l ++ gv1) (selsort bl n1))
(Permutation (l ++ gv1) (selsort bl y)), (Permutation (l ++ gv1) (selsort l n0)), (Permutation (l ++ gv1) (selsort l n1)), (Permutation (l ++ gv1) (selsort l y)), (Permutation (l ++ gv1) (selsort gv1 n0)), (Permutation (l ++ gv1) (selsort gv1 n1)), (Permutation (l ++ gv1) (selsort gv1 y)), (Permutation (l ++ gv1) (bl ++ bl)), (Permutation (l ++ gv1) (bl ++ l)), (Permutation (l ++ gv1) (bl ++ gv1))
(Permutation (l ++ gv1) (l ++ bl)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) (gv1 ++ bl)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (gv1 ++ gv1)), (Permutation (l ++ gv1) []), (Permutation (gv1 ++ bl) bl), (Permutation (gv1 ++ bl) l), (Permutation (gv1 ++ bl) gv1), (Permutation (gv1 ++ bl) (n0 :: bl))
(Permutation (gv1 ++ bl) (n0 :: l)), (Permutation (gv1 ++ bl) (n0 :: gv1)), (Permutation (gv1 ++ bl) (n1 :: bl)), (Permutation (gv1 ++ bl) (n1 :: l)), (Permutation (gv1 ++ bl) (n1 :: gv1)), (Permutation (gv1 ++ bl) (y :: bl)), (Permutation (gv1 ++ bl) (y :: l)), (Permutation (gv1 ++ bl) (y :: gv1)), (Permutation (gv1 ++ bl) (selection_sort bl)), (Permutation (gv1 ++ bl) (selection_sort l))
(Permutation (gv1 ++ bl) (selection_sort gv1)), (Permutation (gv1 ++ bl) (selsort bl n0)), (Permutation (gv1 ++ bl) (selsort bl n1)), (Permutation (gv1 ++ bl) (selsort bl y)), (Permutation (gv1 ++ bl) (selsort l n0)), (Permutation (gv1 ++ bl) (selsort l n1)), (Permutation (gv1 ++ bl) (selsort l y)), (Permutation (gv1 ++ bl) (selsort gv1 n0)), (Permutation (gv1 ++ bl) (selsort gv1 n1)), (Permutation (gv1 ++ bl) (selsort gv1 y))
(Permutation (gv1 ++ bl) (bl ++ bl)), (Permutation (gv1 ++ bl) (bl ++ l)), (Permutation (gv1 ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ bl) (l ++ bl)), (Permutation (gv1 ++ bl) (l ++ l)), (Permutation (gv1 ++ bl) (l ++ gv1)), (Permutation (gv1 ++ bl) (gv1 ++ l)), (Permutation (gv1 ++ bl) (gv1 ++ gv1)), (Permutation (gv1 ++ bl) []), (Permutation (gv1 ++ l) bl)
(Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) gv1), (Permutation (gv1 ++ l) (n0 :: bl)), (Permutation (gv1 ++ l) (n0 :: l)), (Permutation (gv1 ++ l) (n0 :: gv1)), (Permutation (gv1 ++ l) (n1 :: bl)), (Permutation (gv1 ++ l) (n1 :: l)), (Permutation (gv1 ++ l) (n1 :: gv1)), (Permutation (gv1 ++ l) (y :: bl)), (Permutation (gv1 ++ l) (y :: l))
(Permutation (gv1 ++ l) (y :: gv1)), (Permutation (gv1 ++ l) (selection_sort bl)), (Permutation (gv1 ++ l) (selection_sort l)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selsort bl n0)), (Permutation (gv1 ++ l) (selsort bl n1)), (Permutation (gv1 ++ l) (selsort bl y)), (Permutation (gv1 ++ l) (selsort l n0)), (Permutation (gv1 ++ l) (selsort l n1)), (Permutation (gv1 ++ l) (selsort l y))
(Permutation (gv1 ++ l) (selsort gv1 n0)), (Permutation (gv1 ++ l) (selsort gv1 n1)), (Permutation (gv1 ++ l) (selsort gv1 y)), (Permutation (gv1 ++ l) (bl ++ bl)), (Permutation (gv1 ++ l) (bl ++ l)), (Permutation (gv1 ++ l) (bl ++ gv1)), (Permutation (gv1 ++ l) (l ++ bl)), (Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (gv1 ++ bl))
(Permutation (gv1 ++ l) (gv1 ++ gv1)), (Permutation (gv1 ++ l) []), (Permutation (gv1 ++ gv1) bl), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (n0 :: bl)), (Permutation (gv1 ++ gv1) (n0 :: l)), (Permutation (gv1 ++ gv1) (n0 :: gv1)), (Permutation (gv1 ++ gv1) (n1 :: bl)), (Permutation (gv1 ++ gv1) (n1 :: l))
(Permutation (gv1 ++ gv1) (n1 :: gv1)), (Permutation (gv1 ++ gv1) (y :: bl)), (Permutation (gv1 ++ gv1) (y :: l)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (selection_sort bl)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selsort bl n0)), (Permutation (gv1 ++ gv1) (selsort bl n1)), (Permutation (gv1 ++ gv1) (selsort bl y))
(Permutation (gv1 ++ gv1) (selsort l n0)), (Permutation (gv1 ++ gv1) (selsort l n1)), (Permutation (gv1 ++ gv1) (selsort l y)), (Permutation (gv1 ++ gv1) (selsort gv1 n0)), (Permutation (gv1 ++ gv1) (selsort gv1 n1)), (Permutation (gv1 ++ gv1) (selsort gv1 y)), (Permutation (gv1 ++ gv1) (bl ++ bl)), (Permutation (gv1 ++ gv1) (bl ++ l)), (Permutation (gv1 ++ gv1) (bl ++ gv1)), (Permutation (gv1 ++ gv1) (l ++ bl))
(Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ bl)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) []), (Permutation [] bl), (Permutation [] l), (Permutation [] gv1), (Permutation [] (n0 :: bl)), (Permutation [] (n0 :: l))
(Permutation [] (n0 :: gv1)), (Permutation [] (n1 :: bl)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv1)), (Permutation [] (y :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort gv1))
(Permutation [] (selsort bl n0)), (Permutation [] (selsort bl n1)), (Permutation [] (selsort bl y)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l y)), (Permutation [] (selsort gv1 n0)), (Permutation [] (selsort gv1 n1)), (Permutation [] (selsort gv1 y)), (Permutation [] (bl ++ bl))
(Permutation [] (bl ++ l)), (Permutation [] (bl ++ gv1)), (Permutation [] (l ++ bl)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv1)), (Permutation [] (gv1 ++ bl)), (Permutation [] (gv1 ++ l)), (Permutation [] (gv1 ++ gv1)), (In n0 (n0 :: bl)), (In n0 (n0 :: l))
(In n0 (n0 :: gv1)), (In n0 (n1 :: bl)), (In n0 (n1 :: l)), (In n0 (n1 :: gv1)), (In n0 (y :: bl)), (In n0 (y :: l)), (In n0 (y :: gv1)), (In n0 (selection_sort bl)), (In n0 (selection_sort l)), (In n0 (selection_sort gv1))
(In n0 (selsort bl n0)), (In n0 (selsort bl n1)), (In n0 (selsort bl y)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort l y)), (In n0 (selsort gv1 n0)), (In n0 (selsort gv1 n1)), (In n0 (selsort gv1 y)), (In n0 (bl ++ bl))
(In n0 (bl ++ l)), (In n0 (bl ++ gv1)), (In n0 (l ++ bl)), (In n0 (l ++ l)), (In n0 (l ++ gv1)), (In n0 (gv1 ++ bl)), (In n0 (gv1 ++ l)), (In n0 (gv1 ++ gv1)), (In n1 (n0 :: bl)), (In n1 (n0 :: l))
(In n1 (n0 :: gv1)), (In n1 (n1 :: bl)), (In n1 (n1 :: l)), (In n1 (n1 :: gv1)), (In n1 (y :: bl)), (In n1 (y :: l)), (In n1 (y :: gv1)), (In n1 (selection_sort bl)), (In n1 (selection_sort l)), (In n1 (selection_sort gv1))
(In n1 (selsort bl n0)), (In n1 (selsort bl n1)), (In n1 (selsort bl y)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort l y)), (In n1 (selsort gv1 n0)), (In n1 (selsort gv1 n1)), (In n1 (selsort gv1 y)), (In n1 (bl ++ bl))
(In n1 (bl ++ l)), (In n1 (bl ++ gv1)), (In n1 (l ++ bl)), (In n1 (l ++ l)), (In n1 (l ++ gv1)), (In n1 (gv1 ++ bl)), (In n1 (gv1 ++ l)), (In n1 (gv1 ++ gv1)), (In y (n0 :: bl)), (In y (n0 :: l))
(In y (n0 :: gv1)), (In y (n1 :: bl)), (In y (n1 :: l)), (In y (n1 :: gv1)), (In y (y :: bl)), (In y (y :: l)), (In y (y :: gv1)), (In y (selection_sort bl)), (In y (selection_sort l)), (In y (selection_sort gv1))
(In y (selsort bl n0)), (In y (selsort bl n1)), (In y (selsort bl y)), (In y (selsort l n0)), (In y (selsort l n1)), (In y (selsort l y)), (In y (selsort gv1 n0)), (In y (selsort gv1 n1)), (In y (selsort gv1 y)), (In y (bl ++ bl))
(In y (bl ++ l)), (In y (bl ++ gv1)), (In y (l ++ bl)), (In y (l ++ l)), (In y (l ++ gv1)), (In y (gv1 ++ bl)), (In y (gv1 ++ l)), (In y (gv1 ++ gv1)), (In (length bl) bl), (In (length bl) l)
(In (length bl) gv1), (In (length bl) (n0 :: bl)), (In (length bl) (n0 :: l)), (In (length bl) (n0 :: gv1)), (In (length bl) (n1 :: bl)), (In (length bl) (n1 :: l)), (In (length bl) (n1 :: gv1)), (In (length bl) (y :: bl)), (In (length bl) (y :: l)), (In (length bl) (y :: gv1))
(In (length bl) (selection_sort bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort gv1)), (In (length bl) (selsort bl n0)), (In (length bl) (selsort bl n1)), (In (length bl) (selsort bl y)), (In (length bl) (selsort l n0)), (In (length bl) (selsort l n1)), (In (length bl) (selsort l y)), (In (length bl) (selsort gv1 n0))
(In (length bl) (selsort gv1 n1)), (In (length bl) (selsort gv1 y)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ gv1)), (In (length bl) (l ++ bl)), (In (length bl) (l ++ l)), (In (length bl) (l ++ gv1)), (In (length bl) (gv1 ++ bl)), (In (length bl) (gv1 ++ l))
(In (length bl) (gv1 ++ gv1)), (In (length l) bl), (In (length l) l), (In (length l) gv1), (In (length l) (n0 :: bl)), (In (length l) (n0 :: l)), (In (length l) (n0 :: gv1)), (In (length l) (n1 :: bl)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv1))
(In (length l) (y :: bl)), (In (length l) (y :: l)), (In (length l) (y :: gv1)), (In (length l) (selection_sort bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv1)), (In (length l) (selsort bl n0)), (In (length l) (selsort bl n1)), (In (length l) (selsort bl y)), (In (length l) (selsort l n0))
(In (length l) (selsort l n1)), (In (length l) (selsort l y)), (In (length l) (selsort gv1 n0)), (In (length l) (selsort gv1 n1)), (In (length l) (selsort gv1 y)), (In (length l) (bl ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ gv1)), (In (length l) (l ++ bl)), (In (length l) (l ++ l))
(In (length l) (l ++ gv1)), (In (length l) (gv1 ++ bl)), (In (length l) (gv1 ++ l)), (In (length l) (gv1 ++ gv1)), (In (length gv1) bl), (In (length gv1) l), (In (length gv1) gv1), (In (length gv1) (n0 :: bl)), (In (length gv1) (n0 :: l)), (In (length gv1) (n0 :: gv1))
(In (length gv1) (n1 :: bl)), (In (length gv1) (n1 :: l)), (In (length gv1) (n1 :: gv1)), (In (length gv1) (y :: bl)), (In (length gv1) (y :: l)), (In (length gv1) (y :: gv1)), (In (length gv1) (selection_sort bl)), (In (length gv1) (selection_sort l)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selsort bl n0))
(In (length gv1) (selsort bl n1)), (In (length gv1) (selsort bl y)), (In (length gv1) (selsort l n0)), (In (length gv1) (selsort l n1)), (In (length gv1) (selsort l y)), (In (length gv1) (selsort gv1 n0)), (In (length gv1) (selsort gv1 n1)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (bl ++ bl)), (In (length gv1) (bl ++ l))
(In (length gv1) (bl ++ gv1)), (In (length gv1) (l ++ bl)), (In (length gv1) (l ++ l)), (In (length gv1) (l ++ gv1)), (In (length gv1) (gv1 ++ bl)), (In (length gv1) (gv1 ++ l)), (In (length gv1) (gv1 ++ gv1)), (n0 < length bl), (n0 < length l), (n0 < length gv1)
(n1 < length bl), (n1 < length l), (n1 < length gv1), (y < length bl), (y < length l), (y < length gv1), (length bl < n0), (length bl < n1), (length bl < y), (length bl < length l)
(length bl < length gv1), (length l < n0), (length l < n1), (length l < y), (length l < length bl), (length l < length gv1), (length gv1 < n0), (length gv1 < n1), (length gv1 < y), (length gv1 < length bl)
(length gv1 < length l), (n0 <= length bl), (n0 <= length l), (n0 <= length gv1), (n1 <= length bl), (n1 <= length l), (n1 <= length gv1), (y <= length bl), (y <= length l), (y <= length gv1)
(length bl <= n0), (length bl <= n1), (length bl <= y), (length bl <= length l), (length bl <= length gv1), (length l <= n0), (length l <= n1), (length l <= y), (length l <= length bl), (length l <= length gv1)
(length gv1 <= n0), (length gv1 <= n1), (length gv1 <= y), (length gv1 <= length bl), (length gv1 <= length l), (~ n0 <=* bl), (~ n0 <=* l), (~ n0 <=* gv1), (~ n1 <=* bl), (~ n1 <=* l)
(~ n1 <=* gv1), (~ y <=* bl), (~ y <=* l), (~ y <=* gv1), (~ sorted bl), (~ sorted l), (~ sorted gv1), (~ Permutation bl bl), (~ Permutation bl l), (~ Permutation bl gv1)
(~ Permutation l bl), (~ Permutation l l), (~ Permutation l gv1), (~ Permutation gv1 bl), (~ Permutation gv1 l), (~ Permutation gv1 gv1), (~ In n0 bl), (~ In n0 l), (~ In n0 gv1), (~ In n1 bl)
(~ In n1 l), (~ In n1 gv1), (~ In y bl), (~ In y l), (~ In y gv1), (~ n0 < n0), (~ n0 < n1), (~ n0 < y), (~ n1 < n0), (~ n1 < n1)
(~ n1 < y), (~ y < n0), (~ y < n1), (~ y < y), (~ n0 <= n0), (~ n0 <= n1), (~ n0 <= y), (~ n1 <= n0), (~ n1 <= n1), (~ n1 <= y)
(~ y <= n0), (~ y <= n1), (~ y <= y), (bl <> bl), (bl <> l), (bl <> gv1), (l <> bl), (l <> l), (l <> gv1), (gv1 <> bl)
(gv1 <> l), (gv1 <> gv1), (n0 <> n0), (n0 <> n1), (n0 <> y), (n1 <> n0), (n1 <> n1), (n1 <> y), (y <> n0), (y <> n1)
(y <> y), (None = Some bl), (None = Some l), (None = Some gv1), (n0 :: bl = bl), (n0 :: bl = l), (n0 :: bl = gv1), (n0 :: bl = selection_sort bl), (n0 :: bl = selection_sort l), (n0 :: bl = selection_sort gv1)
(n0 :: bl = selsort bl n0), (n0 :: bl = selsort bl n1), (n0 :: bl = selsort bl y), (n0 :: bl = selsort l n0), (n0 :: bl = selsort l n1), (n0 :: bl = selsort l y), (n0 :: bl = selsort gv1 n0), (n0 :: bl = selsort gv1 n1), (n0 :: bl = selsort gv1 y), (n0 :: bl = bl ++ bl)
(n0 :: bl = bl ++ l), (n0 :: bl = bl ++ gv1), (n0 :: bl = l ++ bl), (n0 :: bl = l ++ l), (n0 :: bl = l ++ gv1), (n0 :: bl = gv1 ++ bl), (n0 :: bl = gv1 ++ l), (n0 :: bl = gv1 ++ gv1), (n0 :: bl = []), (n0 :: l = bl)
(n0 :: l = l), (n0 :: l = gv1), (n0 :: l = selection_sort bl), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv1), (n0 :: l = selsort bl n0), (n0 :: l = selsort bl n1), (n0 :: l = selsort bl y), (n0 :: l = selsort l n0), (n0 :: l = selsort l n1)
(n0 :: l = selsort l y), (n0 :: l = selsort gv1 n0), (n0 :: l = selsort gv1 n1), (n0 :: l = selsort gv1 y), (n0 :: l = bl ++ bl), (n0 :: l = bl ++ l), (n0 :: l = bl ++ gv1), (n0 :: l = l ++ bl), (n0 :: l = l ++ l), (n0 :: l = l ++ gv1)
(n0 :: l = gv1 ++ bl), (n0 :: l = gv1 ++ l), (n0 :: l = gv1 ++ gv1), (n0 :: l = []), (n0 :: gv1 = bl), (n0 :: gv1 = l), (n0 :: gv1 = gv1), (n0 :: gv1 = selection_sort bl), (n0 :: gv1 = selection_sort l), (n0 :: gv1 = selection_sort gv1)
(n0 :: gv1 = selsort bl n0), (n0 :: gv1 = selsort bl n1), (n0 :: gv1 = selsort bl y), (n0 :: gv1 = selsort l n0), (n0 :: gv1 = selsort l n1), (n0 :: gv1 = selsort l y), (n0 :: gv1 = selsort gv1 n0), (n0 :: gv1 = selsort gv1 n1), (n0 :: gv1 = selsort gv1 y), (n0 :: gv1 = bl ++ bl)
(n0 :: gv1 = bl ++ l), (n0 :: gv1 = bl ++ gv1), (n0 :: gv1 = l ++ bl), (n0 :: gv1 = l ++ l), (n0 :: gv1 = l ++ gv1), (n0 :: gv1 = gv1 ++ bl), (n0 :: gv1 = gv1 ++ l), (n0 :: gv1 = gv1 ++ gv1), (n0 :: gv1 = []), (n1 :: bl = bl)
(n1 :: bl = l), (n1 :: bl = gv1), (n1 :: bl = selection_sort bl), (n1 :: bl = selection_sort l), (n1 :: bl = selection_sort gv1), (n1 :: bl = selsort bl n0), (n1 :: bl = selsort bl n1), (n1 :: bl = selsort bl y), (n1 :: bl = selsort l n0), (n1 :: bl = selsort l n1)
(n1 :: bl = selsort l y), (n1 :: bl = selsort gv1 n0), (n1 :: bl = selsort gv1 n1), (n1 :: bl = selsort gv1 y), (n1 :: bl = bl ++ bl), (n1 :: bl = bl ++ l), (n1 :: bl = bl ++ gv1), (n1 :: bl = l ++ bl), (n1 :: bl = l ++ l), (n1 :: bl = l ++ gv1)
(n1 :: bl = gv1 ++ bl), (n1 :: bl = gv1 ++ l), (n1 :: bl = gv1 ++ gv1), (n1 :: bl = []), (n1 :: l = bl), (n1 :: l = l), (n1 :: l = gv1), (n1 :: l = selection_sort bl), (n1 :: l = selection_sort l), (n1 :: l = selection_sort gv1)
(n1 :: l = selsort bl n0), (n1 :: l = selsort bl n1), (n1 :: l = selsort bl y), (n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort l y), (n1 :: l = selsort gv1 n0), (n1 :: l = selsort gv1 n1), (n1 :: l = selsort gv1 y), (n1 :: l = bl ++ bl)
(n1 :: l = bl ++ l), (n1 :: l = bl ++ gv1), (n1 :: l = l ++ bl), (n1 :: l = l ++ l), (n1 :: l = l ++ gv1), (n1 :: l = gv1 ++ bl), (n1 :: l = gv1 ++ l), (n1 :: l = gv1 ++ gv1), (n1 :: l = []), (n1 :: gv1 = bl)
(n1 :: gv1 = l), (n1 :: gv1 = gv1), (n1 :: gv1 = selection_sort bl), (n1 :: gv1 = selection_sort l), (n1 :: gv1 = selection_sort gv1), (n1 :: gv1 = selsort bl n0), (n1 :: gv1 = selsort bl n1), (n1 :: gv1 = selsort bl y), (n1 :: gv1 = selsort l n0), (n1 :: gv1 = selsort l n1)
(n1 :: gv1 = selsort l y), (n1 :: gv1 = selsort gv1 n0), (n1 :: gv1 = selsort gv1 n1), (n1 :: gv1 = selsort gv1 y), (n1 :: gv1 = bl ++ bl), (n1 :: gv1 = bl ++ l), (n1 :: gv1 = bl ++ gv1), (n1 :: gv1 = l ++ bl), (n1 :: gv1 = l ++ l), (n1 :: gv1 = l ++ gv1)
(n1 :: gv1 = gv1 ++ bl), (n1 :: gv1 = gv1 ++ l), (n1 :: gv1 = gv1 ++ gv1), (n1 :: gv1 = []), (y :: bl = bl), (y :: bl = l), (y :: bl = gv1), (y :: bl = selection_sort bl), (y :: bl = selection_sort l), (y :: bl = selection_sort gv1)
(y :: bl = selsort bl n0), (y :: bl = selsort bl n1), (y :: bl = selsort bl y), (y :: bl = selsort l n0), (y :: bl = selsort l n1), (y :: bl = selsort l y), (y :: bl = selsort gv1 n0), (y :: bl = selsort gv1 n1), (y :: bl = selsort gv1 y), (y :: bl = bl ++ bl)
(y :: bl = bl ++ l), (y :: bl = bl ++ gv1), (y :: bl = l ++ bl), (y :: bl = l ++ l), (y :: bl = l ++ gv1), (y :: bl = gv1 ++ bl), (y :: bl = gv1 ++ l), (y :: bl = gv1 ++ gv1), (y :: bl = []), (y :: l = bl)
(y :: l = l), (y :: l = gv1), (y :: l = selection_sort bl), (y :: l = selection_sort l), (y :: l = selection_sort gv1), (y :: l = selsort bl n0), (y :: l = selsort bl n1), (y :: l = selsort bl y), (y :: l = selsort l n0), (y :: l = selsort l n1)
(y :: l = selsort l y), (y :: l = selsort gv1 n0), (y :: l = selsort gv1 n1), (y :: l = selsort gv1 y), (y :: l = bl ++ bl), (y :: l = bl ++ l), (y :: l = bl ++ gv1), (y :: l = l ++ bl), (y :: l = l ++ l), (y :: l = l ++ gv1)
(y :: l = gv1 ++ bl), (y :: l = gv1 ++ l), (y :: l = gv1 ++ gv1), (y :: l = []), (y :: gv1 = bl), (y :: gv1 = l), (y :: gv1 = gv1), (y :: gv1 = selection_sort bl), (y :: gv1 = selection_sort l), (y :: gv1 = selection_sort gv1)
(y :: gv1 = selsort bl n0), (y :: gv1 = selsort bl n1), (y :: gv1 = selsort bl y), (y :: gv1 = selsort l n0), (y :: gv1 = selsort l n1), (y :: gv1 = selsort l y), (y :: gv1 = selsort gv1 n0), (y :: gv1 = selsort gv1 n1), (y :: gv1 = selsort gv1 y), (y :: gv1 = bl ++ bl)
(y :: gv1 = bl ++ l), (y :: gv1 = bl ++ gv1), (y :: gv1 = l ++ bl), (y :: gv1 = l ++ l), (y :: gv1 = l ++ gv1), (y :: gv1 = gv1 ++ bl), (y :: gv1 = gv1 ++ l), (y :: gv1 = gv1 ++ gv1), (y :: gv1 = []), (selection_sort bl = bl)
(selection_sort bl = l), (selection_sort bl = gv1), (selection_sort bl = bl ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = bl ++ gv1), (selection_sort bl = l ++ bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ gv1), (selection_sort bl = gv1 ++ bl), (selection_sort bl = gv1 ++ l)
(selection_sort bl = gv1 ++ gv1), (selection_sort l = bl), (selection_sort l = l), (selection_sort l = gv1), (selection_sort l = bl ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ gv1), (selection_sort l = l ++ bl), (selection_sort l = l ++ l), (selection_sort l = l ++ gv1)
(selection_sort l = gv1 ++ bl), (selection_sort l = gv1 ++ l), (selection_sort l = gv1 ++ gv1), (selection_sort gv1 = bl), (selection_sort gv1 = l), (selection_sort gv1 = gv1), (selection_sort gv1 = bl ++ bl), (selection_sort gv1 = bl ++ l), (selection_sort gv1 = bl ++ gv1), (selection_sort gv1 = l ++ bl)
(selection_sort gv1 = l ++ l), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = gv1 ++ bl), (selection_sort gv1 = gv1 ++ l), (selection_sort gv1 = gv1 ++ gv1), (selsort bl n0 = bl), (selsort bl n0 = l), (selsort bl n0 = gv1), (selsort bl n0 = selection_sort bl), (selsort bl n0 = selection_sort l)
(selsort bl n0 = selection_sort gv1), (selsort bl n0 = bl ++ bl), (selsort bl n0 = bl ++ l), (selsort bl n0 = bl ++ gv1), (selsort bl n0 = l ++ bl), (selsort bl n0 = l ++ l), (selsort bl n0 = l ++ gv1), (selsort bl n0 = gv1 ++ bl), (selsort bl n0 = gv1 ++ l), (selsort bl n0 = gv1 ++ gv1)
(selsort bl n1 = bl), (selsort bl n1 = l), (selsort bl n1 = gv1), (selsort bl n1 = selection_sort bl), (selsort bl n1 = selection_sort l), (selsort bl n1 = selection_sort gv1), (selsort bl n1 = bl ++ bl), (selsort bl n1 = bl ++ l), (selsort bl n1 = bl ++ gv1), (selsort bl n1 = l ++ bl)
(selsort bl n1 = l ++ l), (selsort bl n1 = l ++ gv1), (selsort bl n1 = gv1 ++ bl), (selsort bl n1 = gv1 ++ l), (selsort bl n1 = gv1 ++ gv1), (selsort bl y = bl), (selsort bl y = l), (selsort bl y = gv1), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort l)
(selsort bl y = selection_sort gv1), (selsort bl y = bl ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ gv1), (selsort bl y = l ++ bl), (selsort bl y = l ++ l), (selsort bl y = l ++ gv1), (selsort bl y = gv1 ++ bl), (selsort bl y = gv1 ++ l), (selsort bl y = gv1 ++ gv1)
(selsort l n0 = bl), (selsort l n0 = l), (selsort l n0 = gv1), (selsort l n0 = selection_sort bl), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv1), (selsort l n0 = bl ++ bl), (selsort l n0 = bl ++ l), (selsort l n0 = bl ++ gv1), (selsort l n0 = l ++ bl)
(selsort l n0 = l ++ l), (selsort l n0 = l ++ gv1), (selsort l n0 = gv1 ++ bl), (selsort l n0 = gv1 ++ l), (selsort l n0 = gv1 ++ gv1), (selsort l n1 = bl), (selsort l n1 = l), (selsort l n1 = gv1), (selsort l n1 = selection_sort bl), (selsort l n1 = selection_sort l)
(selsort l n1 = selection_sort gv1), (selsort l n1 = bl ++ bl), (selsort l n1 = bl ++ l), (selsort l n1 = bl ++ gv1), (selsort l n1 = l ++ bl), (selsort l n1 = l ++ l), (selsort l n1 = l ++ gv1), (selsort l n1 = gv1 ++ bl), (selsort l n1 = gv1 ++ l), (selsort l n1 = gv1 ++ gv1)
(selsort l y = bl), (selsort l y = l), (selsort l y = gv1), (selsort l y = selection_sort bl), (selsort l y = selection_sort l), (selsort l y = selection_sort gv1), (selsort l y = bl ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ gv1), (selsort l y = l ++ bl)
(selsort l y = l ++ l), (selsort l y = l ++ gv1), (selsort l y = gv1 ++ bl), (selsort l y = gv1 ++ l), (selsort l y = gv1 ++ gv1), (selsort gv1 n0 = bl), (selsort gv1 n0 = l), (selsort gv1 n0 = gv1), (selsort gv1 n0 = selection_sort bl), (selsort gv1 n0 = selection_sort l)
(selsort gv1 n0 = selection_sort gv1), (selsort gv1 n0 = bl ++ bl), (selsort gv1 n0 = bl ++ l), (selsort gv1 n0 = bl ++ gv1), (selsort gv1 n0 = l ++ bl), (selsort gv1 n0 = l ++ l), (selsort gv1 n0 = l ++ gv1), (selsort gv1 n0 = gv1 ++ bl), (selsort gv1 n0 = gv1 ++ l), (selsort gv1 n0 = gv1 ++ gv1)
(selsort gv1 n1 = bl), (selsort gv1 n1 = l), (selsort gv1 n1 = gv1), (selsort gv1 n1 = selection_sort bl), (selsort gv1 n1 = selection_sort l), (selsort gv1 n1 = selection_sort gv1), (selsort gv1 n1 = bl ++ bl), (selsort gv1 n1 = bl ++ l), (selsort gv1 n1 = bl ++ gv1), (selsort gv1 n1 = l ++ bl)
(selsort gv1 n1 = l ++ l), (selsort gv1 n1 = l ++ gv1), (selsort gv1 n1 = gv1 ++ bl), (selsort gv1 n1 = gv1 ++ l), (selsort gv1 n1 = gv1 ++ gv1), (selsort gv1 y = bl), (selsort gv1 y = l), (selsort gv1 y = gv1), (selsort gv1 y = selection_sort bl), (selsort gv1 y = selection_sort l)
(selsort gv1 y = selection_sort gv1), (selsort gv1 y = bl ++ bl), (selsort gv1 y = bl ++ l), (selsort gv1 y = bl ++ gv1), (selsort gv1 y = l ++ bl), (selsort gv1 y = l ++ l), (selsort gv1 y = l ++ gv1), (selsort gv1 y = gv1 ++ bl), (selsort gv1 y = gv1 ++ l), (selsort gv1 y = gv1 ++ gv1)
(bl ++ bl = bl), (bl ++ bl = l), (bl ++ bl = gv1), (bl ++ l = bl), (bl ++ l = l), (bl ++ l = gv1), (bl ++ gv1 = bl), (bl ++ gv1 = l), (bl ++ gv1 = gv1), (l ++ bl = bl)
(l ++ bl = l), (l ++ bl = gv1), (l ++ l = bl), (l ++ l = l), (l ++ l = gv1), (l ++ gv1 = bl), (l ++ gv1 = l), (l ++ gv1 = gv1), (gv1 ++ bl = bl), (gv1 ++ bl = l)
(gv1 ++ bl = gv1), (gv1 ++ l = bl), (gv1 ++ l = l), (gv1 ++ l = gv1), (gv1 ++ gv1 = bl), (gv1 ++ gv1 = l), (gv1 ++ gv1 = gv1), ([] = bl), ([] = l), ([] = gv1)
([] = selection_sort bl), ([] = selection_sort l), ([] = selection_sort gv1), ([] = selsort bl n0), ([] = selsort bl n1), ([] = selsort bl y), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort l y), ([] = selsort gv1 n0)
([] = selsort gv1 n1), ([] = selsort gv1 y), ([] = bl ++ bl), ([] = bl ++ l), ([] = bl ++ gv1), ([] = l ++ bl), ([] = l ++ l), ([] = l ++ gv1), ([] = gv1 ++ bl), ([] = gv1 ++ l)
([] = gv1 ++ gv1), (None = Some n0), (None = Some n1), (None = Some y), ((n0, bl) = select n0 bl), ((n0, bl) = select n0 l), ((n0, bl) = select n0 gv1), ((n0, bl) = select n1 bl), ((n0, bl) = select n1 l), ((n0, bl) = select n1 gv1)
((n0, bl) = select y bl), ((n0, bl) = select y l), ((n0, bl) = select y gv1), ((n0, l) = select n0 bl), ((n0, l) = select n0 l), ((n0, l) = select n0 gv1), ((n0, l) = select n1 bl), ((n0, l) = select n1 l), ((n0, l) = select n1 gv1), ((n0, l) = select y bl)
((n0, l) = select y l), ((n0, l) = select y gv1), ((n0, gv1) = select n0 bl), ((n0, gv1) = select n0 l), ((n0, gv1) = select n0 gv1), ((n0, gv1) = select n1 bl), ((n0, gv1) = select n1 l), ((n0, gv1) = select n1 gv1), ((n0, gv1) = select y bl), ((n0, gv1) = select y l)
((n0, gv1) = select y gv1), ((n1, bl) = select n0 bl), ((n1, bl) = select n0 l), ((n1, bl) = select n0 gv1), ((n1, bl) = select n1 bl), ((n1, bl) = select n1 l), ((n1, bl) = select n1 gv1), ((n1, bl) = select y bl), ((n1, bl) = select y l), ((n1, bl) = select y gv1)
((n1, l) = select n0 bl), ((n1, l) = select n0 l), ((n1, l) = select n0 gv1), ((n1, l) = select n1 bl), ((n1, l) = select n1 l), ((n1, l) = select n1 gv1), ((n1, l) = select y bl), ((n1, l) = select y l), ((n1, l) = select y gv1), ((n1, gv1) = select n0 bl)
((n1, gv1) = select n0 l), ((n1, gv1) = select n0 gv1), ((n1, gv1) = select n1 bl), ((n1, gv1) = select n1 l), ((n1, gv1) = select n1 gv1), ((n1, gv1) = select y bl), ((n1, gv1) = select y l), ((n1, gv1) = select y gv1), ((y, bl) = select n0 bl), ((y, bl) = select n0 l)
((y, bl) = select n0 gv1), ((y, bl) = select n1 bl), ((y, bl) = select n1 l), ((y, bl) = select n1 gv1), ((y, bl) = select y bl), ((y, bl) = select y l), ((y, bl) = select y gv1), ((y, l) = select n0 bl), ((y, l) = select n0 l), ((y, l) = select n0 gv1)
((y, l) = select n1 bl), ((y, l) = select n1 l), ((y, l) = select n1 gv1), ((y, l) = select y bl), ((y, l) = select y l), ((y, l) = select y gv1), ((y, gv1) = select n0 bl), ((y, gv1) = select n0 l), ((y, gv1) = select n0 gv1), ((y, gv1) = select n1 bl)
((y, gv1) = select n1 l), ((y, gv1) = select n1 gv1), ((y, gv1) = select y bl), ((y, gv1) = select y l), ((y, gv1) = select y gv1), (length bl = n0), (length bl = n1), (length bl = y), (length l = n0), (length l = n1)
(length l = y), (length gv1 = n0), (length gv1 = n1), (length gv1 = y)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 105.612 seconds


Label: 0 (0)
(y <=* n0 :: bl)

Label: 1 (1)
((n1, l) = select n0 bl)

Label: 2 (2)
(Permutation l gv2), (Permutation gv2 l), (sorted (n0 :: gv2)), (sorted (n1 :: gv2)), (Permutation l (selection_sort gv2)), (Permutation gv2 (selection_sort l)), (Permutation (selection_sort l) gv2), (Permutation (selection_sort gv2) l), (selection_sort l = gv2), (Permutation (selection_sort l) (selection_sort gv2))
(Permutation (selection_sort gv2) (selection_sort l)), (Permutation (y :: l) (y :: gv2)), (Permutation (y :: gv2) (y :: l)), (Permutation (l ++ l) (l ++ gv2)), (Permutation (l ++ l) (gv2 ++ l)), (Permutation (l ++ gv2) (l ++ l)), (Permutation (gv2 ++ l) (l ++ l)), (Permutation (n0 :: l) (n0 :: gv2)), (Permutation (n0 :: gv2) (n0 :: l)), (Permutation (n1 :: l) (n1 :: gv2))

Label: 3 (3)
(sorted gv0), (sorted (y :: gv0)), (sorted (gv0 ++ l)), (selection_sort gv0 = gv0)

Label: 4 (4)
(sorted (n1 :: gv2)), (Permutation gv2 (selsort l gv3)), (Permutation (selsort l gv3) gv2), (selsort l gv3 = gv2), (Permutation (selection_sort gv2) (selsort l gv3)), (Permutation (selsort l gv3) (selection_sort gv2)), (selsort l gv3 = selection_sort gv2)

Label: 5 (5)
(sorted gv0), (sorted (y :: gv0)), (sorted (gv0 ++ l)), (selection_sort gv0 = gv0)

Label: 6 (6)
(sorted (y :: gv1)), (sorted (n1 :: gv1))

Label: 7 (7)
(sorted (y :: gv1)), (sorted (n1 :: gv1)), (Permutation gv1 (n1 :: l)), (Permutation (n1 :: l) gv1), (Permutation gv1 (n0 :: bl)), (Permutation (n0 :: bl) gv1), (n1 :: l = gv1), (Permutation (n1 :: l) (selection_sort gv1)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (n0 :: bl) (selection_sort gv1))
(Permutation (selection_sort gv1) (n0 :: bl)), (n1 :: l = selection_sort gv1)


------------------------------ ALL RESULTS ------------------------------
1. (select n0 bl = (n1, l) ->  y <=* n0 :: bl -> sorted (y :: n1 :: selsort l gv3))

2. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: selsort l (length bl)))

3. (y <=* n0 :: bl ->  Permutation l gv2 -> select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

4. (y <=* n0 :: bl ->  Permutation gv2 l -> select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

5. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (n0 :: gv2) -> sorted (y :: n1 :: gv2))

6. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (n1 :: gv2) -> sorted (y :: n1 :: gv2))

7. (y <=* n0 :: bl ->  Permutation l (selection_sort gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

8. (y <=* n0 :: bl ->  Permutation gv2 (selection_sort l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

9. (y <=* n0 :: bl ->  Permutation (selection_sort l) gv2 ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

10. (y <=* n0 :: bl ->  Permutation (selection_sort gv2) l ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

11. (y <=* n0 :: bl -> select n0 bl = (n1, l) -> sorted (y :: gv0) -> sorted gv0)

12. (y <=* n0 :: bl -> select n0 bl = (n1, l) -> sorted (gv0 ++ l) -> sorted gv0)

13. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (n1 :: gv1) -> sorted (y :: gv1))

14. (y <=* n0 :: bl ->  selection_sort l = gv2 -> select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

15. (y <=* n0 :: bl ->  Permutation (selection_sort l) (selection_sort gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

16. (y <=* n0 :: bl ->  Permutation (selection_sort gv2) (selection_sort l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

17. (y <=* n0 :: bl ->  selection_sort gv0 = gv0 -> select n0 bl = (n1, l) -> sorted gv0)

18. (y <=* n0 :: bl ->  Permutation gv2 (selsort l gv3) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

19. (y <=* n0 :: bl ->  Permutation (selsort l gv3) gv2 ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

20. (y <=* n0 :: bl ->  Permutation (selection_sort gv2) (selsort l gv3) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

21. (y <=* n0 :: bl ->  Permutation (selsort l gv3) (selection_sort gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

22. (y <=* n0 :: bl ->  Permutation gv1 (n1 :: l) -> select n0 bl = (n1, l) -> sorted (y :: gv1))

23. (y <=* n0 :: bl ->  Permutation (n1 :: l) gv1 -> select n0 bl = (n1, l) -> sorted (y :: gv1))

24. (y <=* n0 :: bl ->  Permutation gv1 (n0 :: bl) -> select n0 bl = (n1, l) -> sorted (y :: gv1))

25. (y <=* n0 :: bl ->  Permutation (n0 :: bl) gv1 -> select n0 bl = (n1, l) -> sorted (y :: gv1))

26. (y <=* n0 :: bl ->  selsort l gv3 = selection_sort gv2 ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

27. (y <=* n0 :: bl ->  n1 :: l = gv1 -> select n0 bl = (n1, l) -> sorted (y :: gv1))

28. (y <=* n0 :: bl ->  Permutation (n1 :: l) (selection_sort gv1) ->  select n0 bl = (n1, l) -> sorted (y :: gv1))

29. (y <=* n0 :: bl ->  Permutation (selection_sort gv1) (n1 :: l) ->  select n0 bl = (n1, l) -> sorted (y :: gv1))

30. (y <=* n0 :: bl ->  Permutation (n0 :: bl) (selection_sort gv1) ->  select n0 bl = (n1, l) -> sorted (y :: gv1))

31. (y <=* n0 :: bl ->  Permutation (selection_sort gv1) (n0 :: bl) ->  select n0 bl = (n1, l) -> sorted (y :: gv1))

32. (y <=* n0 :: bl ->  n1 :: l = selection_sort gv1 -> select n0 bl = (n1, l) -> sorted (y :: gv1))

33. (y <=* n0 :: bl ->  Permutation (y :: l) (y :: gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

34. (y <=* n0 :: bl ->  Permutation (y :: gv2) (y :: l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

35. (y <=* n0 :: bl ->  Permutation (l ++ l) (l ++ gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

36. (y <=* n0 :: bl ->  Permutation (l ++ l) (gv2 ++ l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

37. (y <=* n0 :: bl ->  Permutation (l ++ gv2) (l ++ l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

38. (y <=* n0 :: bl ->  Permutation (gv2 ++ l) (l ++ l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

39. (y <=* n0 :: bl ->  Permutation (n0 :: l) (n0 :: gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

40. (y <=* n0 :: bl ->  Permutation (n0 :: gv2) (n0 :: l) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

41. (y <=* n0 :: bl ->  Permutation (n1 :: l) (n1 :: gv2) ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 165.479 seconds

Number of Result Pairs Returned: 41

1. (select n0 bl = (n1, l) ->  y <=* n0 :: bl -> sorted (y :: n1 :: selsort l gv3))

2. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (y :: n1 :: selsort l (length bl)))

3. (y <=* n0 :: bl ->  Permutation l gv2 -> select n0 bl = (n1, l) -> sorted (y :: n1 :: gv2))

4. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (n0 :: gv2) -> sorted (y :: n1 :: gv2))

5. (y <=* n0 :: bl ->  select n0 bl = (n1, l) -> sorted (n1 :: gv2) -> sorted (y :: n1 :: gv2))
