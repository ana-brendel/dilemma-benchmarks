Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (sorted (a :: l))
 -- (n = length bl)
 -- (selsort bl n = l -> sorted l -> sorted (y :: l))
 -- (selsort bl n = a :: l)
 -- (y <=* bl)

----------------------------------
Goal: (y <= a)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.567 seconds



------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 43.16 seconds

Label: Generalization #0
Assumptions: 
 -- (selsort bl n = a :: l)
 -- (y <=* bl)

----------------------------------
Goal: (y <= a)
Case: Valid and Un-Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 43.32 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)

Label: 0 (0)
Abducted Assumption: (selsort bl n = a :: l)
Positive Examples: 86
Negative Examples: 500

Label: 1 (1)
Abducted Assumption: (y <=* bl)
Positive Examples: 500
Negative Examples: 46


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 43.569 seconds


Label: 0 (0)
(n <=* l), (n <=* bl), (a <=* l), (a <=* bl), (y <=* l), (y <=* bl), (sorted l), (sorted bl), (Permutation l l), (Permutation l bl)
(Permutation bl l), (Permutation bl bl), (In n l), (In n bl), (In a l), (In a bl), (In y l), (In y bl), (n < n), (n < a)
(n < y), (a < n), (a < a), (a < y), (y < n), (y < a), (y < y), (n <= n), (n <= a), (n <= y)
(a <= n), (a <= a), (a <= y), (y <= n), (y <= a), (y <= y), (l = l), (l = bl), (bl = l), (bl = bl)
(n = n), (n = a), (n = y), (a = n), (a = a), (a = y), (y = n), (y = a), (y = y), (n <=* n :: l)
(n <=* n :: bl), (n <=* a :: l), (n <=* a :: bl), (n <=* y :: l), (n <=* y :: bl), (n <=* selection_sort l), (n <=* selection_sort bl), (n <=* selsort l n), (n <=* selsort l a), (n <=* selsort l y)
(n <=* selsort bl n), (n <=* selsort bl a), (n <=* selsort bl y), (n <=* l ++ l), (n <=* l ++ bl), (n <=* bl ++ l), (n <=* bl ++ bl), (n <=* []), (a <=* n :: l), (a <=* n :: bl)
(a <=* a :: l), (a <=* a :: bl), (a <=* y :: l), (a <=* y :: bl), (a <=* selection_sort l), (a <=* selection_sort bl), (a <=* selsort l n), (a <=* selsort l a), (a <=* selsort l y), (a <=* selsort bl n)
(a <=* selsort bl a), (a <=* selsort bl y), (a <=* l ++ l), (a <=* l ++ bl), (a <=* bl ++ l), (a <=* bl ++ bl), (a <=* []), (y <=* n :: l), (y <=* n :: bl), (y <=* a :: l)
(y <=* a :: bl), (y <=* y :: l), (y <=* y :: bl), (y <=* selection_sort l), (y <=* selection_sort bl), (y <=* selsort l n), (y <=* selsort l a), (y <=* selsort l y), (y <=* selsort bl n), (y <=* selsort bl a)
(y <=* selsort bl y), (y <=* l ++ l), (y <=* l ++ bl), (y <=* bl ++ l), (y <=* bl ++ bl), (y <=* []), (length l <=* l), (length l <=* bl), (length l <=* n :: l), (length l <=* n :: bl)
(length l <=* a :: l), (length l <=* a :: bl), (length l <=* y :: l), (length l <=* y :: bl), (length l <=* selection_sort l), (length l <=* selection_sort bl), (length l <=* selsort l n), (length l <=* selsort l a), (length l <=* selsort l y), (length l <=* selsort bl n)
(length l <=* selsort bl a), (length l <=* selsort bl y), (length l <=* l ++ l), (length l <=* l ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ bl), (length l <=* []), (length bl <=* l), (length bl <=* bl), (length bl <=* n :: l)
(length bl <=* n :: bl), (length bl <=* a :: l), (length bl <=* a :: bl), (length bl <=* y :: l), (length bl <=* y :: bl), (length bl <=* selection_sort l), (length bl <=* selection_sort bl), (length bl <=* selsort l n), (length bl <=* selsort l a), (length bl <=* selsort l y)
(length bl <=* selsort bl n), (length bl <=* selsort bl a), (length bl <=* selsort bl y), (length bl <=* l ++ l), (length bl <=* l ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ bl), (length bl <=* []), (sorted (n :: l)), (sorted (n :: bl))
(sorted (a :: l)), (sorted (a :: bl)), (sorted (y :: l)), (sorted (y :: bl)), (sorted (selection_sort l)), (sorted (selection_sort bl)), (sorted (selsort l n)), (sorted (selsort l a)), (sorted (selsort l y)), (sorted (selsort bl n))
(sorted (selsort bl a)), (sorted (selsort bl y)), (sorted (l ++ l)), (sorted (l ++ bl)), (sorted (bl ++ l)), (sorted (bl ++ bl)), (sorted []), (Permutation l (n :: l)), (Permutation l (n :: bl)), (Permutation l (a :: l))
(Permutation l (a :: bl)), (Permutation l (y :: l)), (Permutation l (y :: bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort bl)), (Permutation l (selsort l n)), (Permutation l (selsort l a)), (Permutation l (selsort l y)), (Permutation l (selsort bl n)), (Permutation l (selsort bl a))
(Permutation l (selsort bl y)), (Permutation l (l ++ l)), (Permutation l (l ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ bl)), (Permutation l []), (Permutation bl (n :: l)), (Permutation bl (n :: bl)), (Permutation bl (a :: l)), (Permutation bl (a :: bl))
(Permutation bl (y :: l)), (Permutation bl (y :: bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort bl)), (Permutation bl (selsort l n)), (Permutation bl (selsort l a)), (Permutation bl (selsort l y)), (Permutation bl (selsort bl n)), (Permutation bl (selsort bl a)), (Permutation bl (selsort bl y))
(Permutation bl (l ++ l)), (Permutation bl (l ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ bl)), (Permutation bl []), (Permutation (n :: l) l), (Permutation (n :: l) bl), (Permutation (n :: l) (n :: bl)), (Permutation (n :: l) (a :: l)), (Permutation (n :: l) (a :: bl))
(Permutation (n :: l) (y :: l)), (Permutation (n :: l) (y :: bl)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selection_sort bl)), (Permutation (n :: l) (selsort l n)), (Permutation (n :: l) (selsort l a)), (Permutation (n :: l) (selsort l y)), (Permutation (n :: l) (selsort bl n)), (Permutation (n :: l) (selsort bl a)), (Permutation (n :: l) (selsort bl y))
(Permutation (n :: l) (l ++ l)), (Permutation (n :: l) (l ++ bl)), (Permutation (n :: l) (bl ++ l)), (Permutation (n :: l) (bl ++ bl)), (Permutation (n :: l) []), (Permutation (n :: bl) l), (Permutation (n :: bl) bl), (Permutation (n :: bl) (n :: l)), (Permutation (n :: bl) (a :: l)), (Permutation (n :: bl) (a :: bl))
(Permutation (n :: bl) (y :: l)), (Permutation (n :: bl) (y :: bl)), (Permutation (n :: bl) (selection_sort l)), (Permutation (n :: bl) (selection_sort bl)), (Permutation (n :: bl) (selsort l n)), (Permutation (n :: bl) (selsort l a)), (Permutation (n :: bl) (selsort l y)), (Permutation (n :: bl) (selsort bl n)), (Permutation (n :: bl) (selsort bl a)), (Permutation (n :: bl) (selsort bl y))
(Permutation (n :: bl) (l ++ l)), (Permutation (n :: bl) (l ++ bl)), (Permutation (n :: bl) (bl ++ l)), (Permutation (n :: bl) (bl ++ bl)), (Permutation (n :: bl) []), (Permutation (a :: l) l), (Permutation (a :: l) bl), (Permutation (a :: l) (n :: l)), (Permutation (a :: l) (n :: bl)), (Permutation (a :: l) (a :: bl))
(Permutation (a :: l) (y :: l)), (Permutation (a :: l) (y :: bl)), (Permutation (a :: l) (selection_sort l)), (Permutation (a :: l) (selection_sort bl)), (Permutation (a :: l) (selsort l n)), (Permutation (a :: l) (selsort l a)), (Permutation (a :: l) (selsort l y)), (Permutation (a :: l) (selsort bl n)), (Permutation (a :: l) (selsort bl a)), (Permutation (a :: l) (selsort bl y))
(Permutation (a :: l) (l ++ l)), (Permutation (a :: l) (l ++ bl)), (Permutation (a :: l) (bl ++ l)), (Permutation (a :: l) (bl ++ bl)), (Permutation (a :: l) []), (Permutation (a :: bl) l), (Permutation (a :: bl) bl), (Permutation (a :: bl) (n :: l)), (Permutation (a :: bl) (n :: bl)), (Permutation (a :: bl) (a :: l))
(Permutation (a :: bl) (y :: l)), (Permutation (a :: bl) (y :: bl)), (Permutation (a :: bl) (selection_sort l)), (Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selsort l n)), (Permutation (a :: bl) (selsort l a)), (Permutation (a :: bl) (selsort l y)), (Permutation (a :: bl) (selsort bl n)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl y))
(Permutation (a :: bl) (l ++ l)), (Permutation (a :: bl) (l ++ bl)), (Permutation (a :: bl) (bl ++ l)), (Permutation (a :: bl) (bl ++ bl)), (Permutation (a :: bl) []), (Permutation (y :: l) l), (Permutation (y :: l) bl), (Permutation (y :: l) (n :: l)), (Permutation (y :: l) (n :: bl)), (Permutation (y :: l) (a :: l))
(Permutation (y :: l) (a :: bl)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selsort l n)), (Permutation (y :: l) (selsort l a)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort bl n)), (Permutation (y :: l) (selsort bl a)), (Permutation (y :: l) (selsort bl y))
(Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) []), (Permutation (y :: bl) l), (Permutation (y :: bl) bl), (Permutation (y :: bl) (n :: l)), (Permutation (y :: bl) (n :: bl)), (Permutation (y :: bl) (a :: l))
(Permutation (y :: bl) (a :: bl)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selsort l n)), (Permutation (y :: bl) (selsort l a)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort bl n)), (Permutation (y :: bl) (selsort bl a)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n :: bl)), (Permutation (selection_sort l) (a :: l))
(Permutation (selection_sort l) (a :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l a)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort bl n)), (Permutation (selection_sort l) (selsort bl a)), (Permutation (selection_sort l) (selsort bl y))
(Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) []), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) (n :: l)), (Permutation (selection_sort bl) (n :: bl)), (Permutation (selection_sort bl) (a :: l))
(Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selsort l n)), (Permutation (selection_sort bl) (selsort l a)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort bl n)), (Permutation (selection_sort bl) (selsort bl a)), (Permutation (selection_sort bl) (selsort bl y))
(Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) []), (Permutation (selsort l n) l), (Permutation (selsort l n) bl), (Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (n :: bl)), (Permutation (selsort l n) (a :: l))
(Permutation (selsort l n) (a :: bl)), (Permutation (selsort l n) (y :: l)), (Permutation (selsort l n) (y :: bl)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selection_sort bl)), (Permutation (selsort l n) (selsort l a)), (Permutation (selsort l n) (selsort l y)), (Permutation (selsort l n) (selsort bl n)), (Permutation (selsort l n) (selsort bl a)), (Permutation (selsort l n) (selsort bl y))
(Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) (l ++ bl)), (Permutation (selsort l n) (bl ++ l)), (Permutation (selsort l n) (bl ++ bl)), (Permutation (selsort l n) []), (Permutation (selsort l a) l), (Permutation (selsort l a) bl), (Permutation (selsort l a) (n :: l)), (Permutation (selsort l a) (n :: bl)), (Permutation (selsort l a) (a :: l))
(Permutation (selsort l a) (a :: bl)), (Permutation (selsort l a) (y :: l)), (Permutation (selsort l a) (y :: bl)), (Permutation (selsort l a) (selection_sort l)), (Permutation (selsort l a) (selection_sort bl)), (Permutation (selsort l a) (selsort l n)), (Permutation (selsort l a) (selsort l y)), (Permutation (selsort l a) (selsort bl n)), (Permutation (selsort l a) (selsort bl a)), (Permutation (selsort l a) (selsort bl y))
(Permutation (selsort l a) (l ++ l)), (Permutation (selsort l a) (l ++ bl)), (Permutation (selsort l a) (bl ++ l)), (Permutation (selsort l a) (bl ++ bl)), (Permutation (selsort l a) []), (Permutation (selsort l y) l), (Permutation (selsort l y) bl), (Permutation (selsort l y) (n :: l)), (Permutation (selsort l y) (n :: bl)), (Permutation (selsort l y) (a :: l))
(Permutation (selsort l y) (a :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selsort l n)), (Permutation (selsort l y) (selsort l a)), (Permutation (selsort l y) (selsort bl n)), (Permutation (selsort l y) (selsort bl a)), (Permutation (selsort l y) (selsort bl y))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) []), (Permutation (selsort bl n) l), (Permutation (selsort bl n) bl), (Permutation (selsort bl n) (n :: l)), (Permutation (selsort bl n) (n :: bl)), (Permutation (selsort bl n) (a :: l))
(Permutation (selsort bl n) (a :: bl)), (Permutation (selsort bl n) (y :: l)), (Permutation (selsort bl n) (y :: bl)), (Permutation (selsort bl n) (selection_sort l)), (Permutation (selsort bl n) (selection_sort bl)), (Permutation (selsort bl n) (selsort l n)), (Permutation (selsort bl n) (selsort l a)), (Permutation (selsort bl n) (selsort l y)), (Permutation (selsort bl n) (selsort bl a)), (Permutation (selsort bl n) (selsort bl y))
(Permutation (selsort bl n) (l ++ l)), (Permutation (selsort bl n) (l ++ bl)), (Permutation (selsort bl n) (bl ++ l)), (Permutation (selsort bl n) (bl ++ bl)), (Permutation (selsort bl n) []), (Permutation (selsort bl a) l), (Permutation (selsort bl a) bl), (Permutation (selsort bl a) (n :: l)), (Permutation (selsort bl a) (n :: bl)), (Permutation (selsort bl a) (a :: l))
(Permutation (selsort bl a) (a :: bl)), (Permutation (selsort bl a) (y :: l)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (selection_sort l)), (Permutation (selsort bl a) (selection_sort bl)), (Permutation (selsort bl a) (selsort l n)), (Permutation (selsort bl a) (selsort l a)), (Permutation (selsort bl a) (selsort l y)), (Permutation (selsort bl a) (selsort bl n)), (Permutation (selsort bl a) (selsort bl y))
(Permutation (selsort bl a) (l ++ l)), (Permutation (selsort bl a) (l ++ bl)), (Permutation (selsort bl a) (bl ++ l)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) []), (Permutation (selsort bl y) l), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) (n :: l)), (Permutation (selsort bl y) (n :: bl)), (Permutation (selsort bl y) (a :: l))
(Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selsort l n)), (Permutation (selsort bl y) (selsort l a)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort bl n)), (Permutation (selsort bl y) (selsort bl a))
(Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) []), (Permutation (l ++ l) l), (Permutation (l ++ l) bl), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n :: bl)), (Permutation (l ++ l) (a :: l))
(Permutation (l ++ l) (a :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (selsort l a)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort bl n)), (Permutation (l ++ l) (selsort bl a))
(Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) []), (Permutation (l ++ bl) l), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) (n :: l)), (Permutation (l ++ bl) (n :: bl)), (Permutation (l ++ bl) (a :: l))
(Permutation (l ++ bl) (a :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selsort l n)), (Permutation (l ++ bl) (selsort l a)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort bl n)), (Permutation (l ++ bl) (selsort bl a))
(Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) []), (Permutation (bl ++ l) l), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) (n :: l)), (Permutation (bl ++ l) (n :: bl)), (Permutation (bl ++ l) (a :: l))
(Permutation (bl ++ l) (a :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selsort l n)), (Permutation (bl ++ l) (selsort l a)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort bl n)), (Permutation (bl ++ l) (selsort bl a))
(Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) []), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) (n :: l)), (Permutation (bl ++ bl) (n :: bl)), (Permutation (bl ++ bl) (a :: l))
(Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selsort l n)), (Permutation (bl ++ bl) (selsort l a)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort bl n)), (Permutation (bl ++ bl) (selsort bl a))
(Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) []), (Permutation [] l), (Permutation [] bl), (Permutation [] (n :: l)), (Permutation [] (n :: bl)), (Permutation [] (a :: l))
(Permutation [] (a :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: bl)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort bl)), (Permutation [] (selsort l n)), (Permutation [] (selsort l a)), (Permutation [] (selsort l y)), (Permutation [] (selsort bl n)), (Permutation [] (selsort bl a))
(Permutation [] (selsort bl y)), (Permutation [] (l ++ l)), (Permutation [] (l ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (bl ++ bl)), (In n (n :: l)), (In n (n :: bl)), (In n (a :: l)), (In n (a :: bl)), (In n (y :: l))
(In n (y :: bl)), (In n (selection_sort l)), (In n (selection_sort bl)), (In n (selsort l n)), (In n (selsort l a)), (In n (selsort l y)), (In n (selsort bl n)), (In n (selsort bl a)), (In n (selsort bl y)), (In n (l ++ l))
(In n (l ++ bl)), (In n (bl ++ l)), (In n (bl ++ bl)), (In a (n :: l)), (In a (n :: bl)), (In a (a :: l)), (In a (a :: bl)), (In a (y :: l)), (In a (y :: bl)), (In a (selection_sort l))
(In a (selection_sort bl)), (In a (selsort l n)), (In a (selsort l a)), (In a (selsort l y)), (In a (selsort bl n)), (In a (selsort bl a)), (In a (selsort bl y)), (In a (l ++ l)), (In a (l ++ bl)), (In a (bl ++ l))
(In a (bl ++ bl)), (In y (n :: l)), (In y (n :: bl)), (In y (a :: l)), (In y (a :: bl)), (In y (y :: l)), (In y (y :: bl)), (In y (selection_sort l)), (In y (selection_sort bl)), (In y (selsort l n))
(In y (selsort l a)), (In y (selsort l y)), (In y (selsort bl n)), (In y (selsort bl a)), (In y (selsort bl y)), (In y (l ++ l)), (In y (l ++ bl)), (In y (bl ++ l)), (In y (bl ++ bl)), (In (length l) l)
(In (length l) bl), (In (length l) (n :: l)), (In (length l) (n :: bl)), (In (length l) (a :: l)), (In (length l) (a :: bl)), (In (length l) (y :: l)), (In (length l) (y :: bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort bl)), (In (length l) (selsort l n))
(In (length l) (selsort l a)), (In (length l) (selsort l y)), (In (length l) (selsort bl n)), (In (length l) (selsort bl a)), (In (length l) (selsort bl y)), (In (length l) (l ++ l)), (In (length l) (l ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ bl)), (In (length bl) l)
(In (length bl) bl), (In (length bl) (n :: l)), (In (length bl) (n :: bl)), (In (length bl) (a :: l)), (In (length bl) (a :: bl)), (In (length bl) (y :: l)), (In (length bl) (y :: bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort bl)), (In (length bl) (selsort l n))
(In (length bl) (selsort l a)), (In (length bl) (selsort l y)), (In (length bl) (selsort bl n)), (In (length bl) (selsort bl a)), (In (length bl) (selsort bl y)), (In (length bl) (l ++ l)), (In (length bl) (l ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ bl)), (n < length l)
(n < length bl), (a < length l), (a < length bl), (y < length l), (y < length bl), (length l < n), (length l < a), (length l < y), (length l < length bl), (length bl < n)
(length bl < a), (length bl < y), (length bl < length l), (n <= length l), (n <= length bl), (a <= length l), (a <= length bl), (y <= length l), (y <= length bl), (length l <= n)
(length l <= a), (length l <= y), (length l <= length bl), (length bl <= n), (length bl <= a), (length bl <= y), (length bl <= length l), (~ n <=* l), (~ n <=* bl), (~ a <=* l)
(~ a <=* bl), (~ y <=* l), (~ y <=* bl), (~ sorted l), (~ sorted bl), (~ Permutation l l), (~ Permutation l bl), (~ Permutation bl l), (~ Permutation bl bl), (~ In n l)
(~ In n bl), (~ In a l), (~ In a bl), (~ In y l), (~ In y bl), (~ n < n), (~ n < a), (~ n < y), (~ a < n), (~ a < a)
(~ a < y), (~ y < n), (~ y < a), (~ y < y), (~ n <= n), (~ n <= a), (~ n <= y), (~ a <= n), (~ a <= a), (~ a <= y)
(~ y <= n), (~ y <= a), (~ y <= y), (l <> l), (l <> bl), (bl <> l), (bl <> bl), (n <> n), (n <> a), (n <> y)
(a <> n), (a <> a), (a <> y), (y <> n), (y <> a), (y <> y), (None = Some l), (None = Some bl), (n :: l = l), (n :: l = bl)
(n :: l = selection_sort l), (n :: l = selection_sort bl), (n :: l = selsort l n), (n :: l = selsort l a), (n :: l = selsort l y), (n :: l = selsort bl n), (n :: l = selsort bl a), (n :: l = selsort bl y), (n :: l = l ++ l), (n :: l = l ++ bl)
(n :: l = bl ++ l), (n :: l = bl ++ bl), (n :: l = []), (n :: bl = l), (n :: bl = bl), (n :: bl = selection_sort l), (n :: bl = selection_sort bl), (n :: bl = selsort l n), (n :: bl = selsort l a), (n :: bl = selsort l y)
(n :: bl = selsort bl n), (n :: bl = selsort bl a), (n :: bl = selsort bl y), (n :: bl = l ++ l), (n :: bl = l ++ bl), (n :: bl = bl ++ l), (n :: bl = bl ++ bl), (n :: bl = []), (a :: l = l), (a :: l = bl)
(a :: l = selection_sort l), (a :: l = selection_sort bl), (a :: l = selsort l n), (a :: l = selsort l a), (a :: l = selsort l y), (a :: l = selsort bl n), (a :: l = selsort bl a), (a :: l = selsort bl y), (a :: l = l ++ l), (a :: l = l ++ bl)
(a :: l = bl ++ l), (a :: l = bl ++ bl), (a :: l = []), (a :: bl = l), (a :: bl = bl), (a :: bl = selection_sort l), (a :: bl = selection_sort bl), (a :: bl = selsort l n), (a :: bl = selsort l a), (a :: bl = selsort l y)
(a :: bl = selsort bl n), (a :: bl = selsort bl a), (a :: bl = selsort bl y), (a :: bl = l ++ l), (a :: bl = l ++ bl), (a :: bl = bl ++ l), (a :: bl = bl ++ bl), (a :: bl = []), (y :: l = l), (y :: l = bl)
(y :: l = selection_sort l), (y :: l = selection_sort bl), (y :: l = selsort l n), (y :: l = selsort l a), (y :: l = selsort l y), (y :: l = selsort bl n), (y :: l = selsort bl a), (y :: l = selsort bl y), (y :: l = l ++ l), (y :: l = l ++ bl)
(y :: l = bl ++ l), (y :: l = bl ++ bl), (y :: l = []), (y :: bl = l), (y :: bl = bl), (y :: bl = selection_sort l), (y :: bl = selection_sort bl), (y :: bl = selsort l n), (y :: bl = selsort l a), (y :: bl = selsort l y)
(y :: bl = selsort bl n), (y :: bl = selsort bl a), (y :: bl = selsort bl y), (y :: bl = l ++ l), (y :: bl = l ++ bl), (y :: bl = bl ++ l), (y :: bl = bl ++ bl), (y :: bl = []), (selection_sort l = l), (selection_sort l = bl)
(selection_sort l = l ++ l), (selection_sort l = l ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ bl), (selection_sort bl = l), (selection_sort bl = bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = bl ++ bl)
(selsort l n = l), (selsort l n = bl), (selsort l n = selection_sort l), (selsort l n = selection_sort bl), (selsort l n = l ++ l), (selsort l n = l ++ bl), (selsort l n = bl ++ l), (selsort l n = bl ++ bl), (selsort l a = l), (selsort l a = bl)
(selsort l a = selection_sort l), (selsort l a = selection_sort bl), (selsort l a = l ++ l), (selsort l a = l ++ bl), (selsort l a = bl ++ l), (selsort l a = bl ++ bl), (selsort l y = l), (selsort l y = bl), (selsort l y = selection_sort l), (selsort l y = selection_sort bl)
(selsort l y = l ++ l), (selsort l y = l ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ bl), (selsort bl n = l), (selsort bl n = bl), (selsort bl n = selection_sort l), (selsort bl n = selection_sort bl), (selsort bl n = l ++ l), (selsort bl n = l ++ bl)
(selsort bl n = bl ++ l), (selsort bl n = bl ++ bl), (selsort bl a = l), (selsort bl a = bl), (selsort bl a = selection_sort l), (selsort bl a = selection_sort bl), (selsort bl a = l ++ l), (selsort bl a = l ++ bl), (selsort bl a = bl ++ l), (selsort bl a = bl ++ bl)
(selsort bl y = l), (selsort bl y = bl), (selsort bl y = selection_sort l), (selsort bl y = selection_sort bl), (selsort bl y = l ++ l), (selsort bl y = l ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ bl), (l ++ l = l), (l ++ l = bl)
(l ++ bl = l), (l ++ bl = bl), (bl ++ l = l), (bl ++ l = bl), (bl ++ bl = l), (bl ++ bl = bl), ([] = l), ([] = bl), ([] = selection_sort l), ([] = selection_sort bl)
([] = selsort l n), ([] = selsort l a), ([] = selsort l y), ([] = selsort bl n), ([] = selsort bl a), ([] = selsort bl y), ([] = l ++ l), ([] = l ++ bl), ([] = bl ++ l), ([] = bl ++ bl)
(None = Some n), (None = Some a), (None = Some y), ((n, l) = select n l), ((n, l) = select n bl), ((n, l) = select a l), ((n, l) = select a bl), ((n, l) = select y l), ((n, l) = select y bl), ((n, bl) = select n l)
((n, bl) = select n bl), ((n, bl) = select a l), ((n, bl) = select a bl), ((n, bl) = select y l), ((n, bl) = select y bl), ((a, l) = select n l), ((a, l) = select n bl), ((a, l) = select a l), ((a, l) = select a bl), ((a, l) = select y l)
((a, l) = select y bl), ((a, bl) = select n l), ((a, bl) = select n bl), ((a, bl) = select a l), ((a, bl) = select a bl), ((a, bl) = select y l), ((a, bl) = select y bl), ((y, l) = select n l), ((y, l) = select n bl), ((y, l) = select a l)
((y, l) = select a bl), ((y, l) = select y l), ((y, l) = select y bl), ((y, bl) = select n l), ((y, bl) = select n bl), ((y, bl) = select a l), ((y, bl) = select a bl), ((y, bl) = select y l), ((y, bl) = select y bl), (length l = n)
(length l = a), (length l = y), (length bl = n), (length bl = a), (length bl = y)

Label: 1 (1)
(n <=* l), (n <=* bl), (a <=* l), (a <=* bl), (y <=* l), (y <=* bl), (sorted l), (sorted bl), (Permutation l l), (Permutation l bl)
(Permutation bl l), (Permutation bl bl), (In n l), (In n bl), (In a l), (In a bl), (In y l), (In y bl), (n < n), (n < a)
(n < y), (a < n), (a < a), (a < y), (y < n), (y < a), (y < y), (n <= n), (n <= a), (n <= y)
(a <= n), (a <= a), (a <= y), (y <= n), (y <= a), (y <= y), (l = l), (l = bl), (bl = l), (bl = bl)
(n = n), (n = a), (n = y), (a = n), (a = a), (a = y), (y = n), (y = a), (y = y), (n <=* n :: l)
(n <=* n :: bl), (n <=* a :: l), (n <=* a :: bl), (n <=* y :: l), (n <=* y :: bl), (n <=* selection_sort l), (n <=* selection_sort bl), (n <=* selsort l n), (n <=* selsort l a), (n <=* selsort l y)
(n <=* selsort bl n), (n <=* selsort bl a), (n <=* selsort bl y), (n <=* l ++ l), (n <=* l ++ bl), (n <=* bl ++ l), (n <=* bl ++ bl), (n <=* []), (a <=* n :: l), (a <=* n :: bl)
(a <=* a :: l), (a <=* a :: bl), (a <=* y :: l), (a <=* y :: bl), (a <=* selection_sort l), (a <=* selection_sort bl), (a <=* selsort l n), (a <=* selsort l a), (a <=* selsort l y), (a <=* selsort bl n)
(a <=* selsort bl a), (a <=* selsort bl y), (a <=* l ++ l), (a <=* l ++ bl), (a <=* bl ++ l), (a <=* bl ++ bl), (a <=* []), (y <=* n :: l), (y <=* n :: bl), (y <=* a :: l)
(y <=* a :: bl), (y <=* y :: l), (y <=* y :: bl), (y <=* selection_sort l), (y <=* selection_sort bl), (y <=* selsort l n), (y <=* selsort l a), (y <=* selsort l y), (y <=* selsort bl n), (y <=* selsort bl a)
(y <=* selsort bl y), (y <=* l ++ l), (y <=* l ++ bl), (y <=* bl ++ l), (y <=* bl ++ bl), (y <=* []), (length l <=* l), (length l <=* bl), (length l <=* n :: l), (length l <=* n :: bl)
(length l <=* a :: l), (length l <=* a :: bl), (length l <=* y :: l), (length l <=* y :: bl), (length l <=* selection_sort l), (length l <=* selection_sort bl), (length l <=* selsort l n), (length l <=* selsort l a), (length l <=* selsort l y), (length l <=* selsort bl n)
(length l <=* selsort bl a), (length l <=* selsort bl y), (length l <=* l ++ l), (length l <=* l ++ bl), (length l <=* bl ++ l), (length l <=* bl ++ bl), (length l <=* []), (length bl <=* l), (length bl <=* bl), (length bl <=* n :: l)
(length bl <=* n :: bl), (length bl <=* a :: l), (length bl <=* a :: bl), (length bl <=* y :: l), (length bl <=* y :: bl), (length bl <=* selection_sort l), (length bl <=* selection_sort bl), (length bl <=* selsort l n), (length bl <=* selsort l a), (length bl <=* selsort l y)
(length bl <=* selsort bl n), (length bl <=* selsort bl a), (length bl <=* selsort bl y), (length bl <=* l ++ l), (length bl <=* l ++ bl), (length bl <=* bl ++ l), (length bl <=* bl ++ bl), (length bl <=* []), (sorted (n :: l)), (sorted (n :: bl))
(sorted (a :: l)), (sorted (a :: bl)), (sorted (y :: l)), (sorted (y :: bl)), (sorted (selection_sort l)), (sorted (selection_sort bl)), (sorted (selsort l n)), (sorted (selsort l a)), (sorted (selsort l y)), (sorted (selsort bl n))
(sorted (selsort bl a)), (sorted (selsort bl y)), (sorted (l ++ l)), (sorted (l ++ bl)), (sorted (bl ++ l)), (sorted (bl ++ bl)), (sorted []), (Permutation l (n :: l)), (Permutation l (n :: bl)), (Permutation l (a :: l))
(Permutation l (a :: bl)), (Permutation l (y :: l)), (Permutation l (y :: bl)), (Permutation l (selection_sort l)), (Permutation l (selection_sort bl)), (Permutation l (selsort l n)), (Permutation l (selsort l a)), (Permutation l (selsort l y)), (Permutation l (selsort bl n)), (Permutation l (selsort bl a))
(Permutation l (selsort bl y)), (Permutation l (l ++ l)), (Permutation l (l ++ bl)), (Permutation l (bl ++ l)), (Permutation l (bl ++ bl)), (Permutation l []), (Permutation bl (n :: l)), (Permutation bl (n :: bl)), (Permutation bl (a :: l)), (Permutation bl (a :: bl))
(Permutation bl (y :: l)), (Permutation bl (y :: bl)), (Permutation bl (selection_sort l)), (Permutation bl (selection_sort bl)), (Permutation bl (selsort l n)), (Permutation bl (selsort l a)), (Permutation bl (selsort l y)), (Permutation bl (selsort bl n)), (Permutation bl (selsort bl a)), (Permutation bl (selsort bl y))
(Permutation bl (l ++ l)), (Permutation bl (l ++ bl)), (Permutation bl (bl ++ l)), (Permutation bl (bl ++ bl)), (Permutation bl []), (Permutation (n :: l) l), (Permutation (n :: l) bl), (Permutation (n :: l) (n :: bl)), (Permutation (n :: l) (a :: l)), (Permutation (n :: l) (a :: bl))
(Permutation (n :: l) (y :: l)), (Permutation (n :: l) (y :: bl)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selection_sort bl)), (Permutation (n :: l) (selsort l n)), (Permutation (n :: l) (selsort l a)), (Permutation (n :: l) (selsort l y)), (Permutation (n :: l) (selsort bl n)), (Permutation (n :: l) (selsort bl a)), (Permutation (n :: l) (selsort bl y))
(Permutation (n :: l) (l ++ l)), (Permutation (n :: l) (l ++ bl)), (Permutation (n :: l) (bl ++ l)), (Permutation (n :: l) (bl ++ bl)), (Permutation (n :: l) []), (Permutation (n :: bl) l), (Permutation (n :: bl) bl), (Permutation (n :: bl) (n :: l)), (Permutation (n :: bl) (a :: l)), (Permutation (n :: bl) (a :: bl))
(Permutation (n :: bl) (y :: l)), (Permutation (n :: bl) (y :: bl)), (Permutation (n :: bl) (selection_sort l)), (Permutation (n :: bl) (selection_sort bl)), (Permutation (n :: bl) (selsort l n)), (Permutation (n :: bl) (selsort l a)), (Permutation (n :: bl) (selsort l y)), (Permutation (n :: bl) (selsort bl n)), (Permutation (n :: bl) (selsort bl a)), (Permutation (n :: bl) (selsort bl y))
(Permutation (n :: bl) (l ++ l)), (Permutation (n :: bl) (l ++ bl)), (Permutation (n :: bl) (bl ++ l)), (Permutation (n :: bl) (bl ++ bl)), (Permutation (n :: bl) []), (Permutation (a :: l) l), (Permutation (a :: l) bl), (Permutation (a :: l) (n :: l)), (Permutation (a :: l) (n :: bl)), (Permutation (a :: l) (a :: bl))
(Permutation (a :: l) (y :: l)), (Permutation (a :: l) (y :: bl)), (Permutation (a :: l) (selection_sort l)), (Permutation (a :: l) (selection_sort bl)), (Permutation (a :: l) (selsort l n)), (Permutation (a :: l) (selsort l a)), (Permutation (a :: l) (selsort l y)), (Permutation (a :: l) (selsort bl n)), (Permutation (a :: l) (selsort bl a)), (Permutation (a :: l) (selsort bl y))
(Permutation (a :: l) (l ++ l)), (Permutation (a :: l) (l ++ bl)), (Permutation (a :: l) (bl ++ l)), (Permutation (a :: l) (bl ++ bl)), (Permutation (a :: l) []), (Permutation (a :: bl) l), (Permutation (a :: bl) bl), (Permutation (a :: bl) (n :: l)), (Permutation (a :: bl) (n :: bl)), (Permutation (a :: bl) (a :: l))
(Permutation (a :: bl) (y :: l)), (Permutation (a :: bl) (y :: bl)), (Permutation (a :: bl) (selection_sort l)), (Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selsort l n)), (Permutation (a :: bl) (selsort l a)), (Permutation (a :: bl) (selsort l y)), (Permutation (a :: bl) (selsort bl n)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl y))
(Permutation (a :: bl) (l ++ l)), (Permutation (a :: bl) (l ++ bl)), (Permutation (a :: bl) (bl ++ l)), (Permutation (a :: bl) (bl ++ bl)), (Permutation (a :: bl) []), (Permutation (y :: l) l), (Permutation (y :: l) bl), (Permutation (y :: l) (n :: l)), (Permutation (y :: l) (n :: bl)), (Permutation (y :: l) (a :: l))
(Permutation (y :: l) (a :: bl)), (Permutation (y :: l) (y :: bl)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort bl)), (Permutation (y :: l) (selsort l n)), (Permutation (y :: l) (selsort l a)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort bl n)), (Permutation (y :: l) (selsort bl a)), (Permutation (y :: l) (selsort bl y))
(Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ bl)), (Permutation (y :: l) (bl ++ l)), (Permutation (y :: l) (bl ++ bl)), (Permutation (y :: l) []), (Permutation (y :: bl) l), (Permutation (y :: bl) bl), (Permutation (y :: bl) (n :: l)), (Permutation (y :: bl) (n :: bl)), (Permutation (y :: bl) (a :: l))
(Permutation (y :: bl) (a :: bl)), (Permutation (y :: bl) (y :: l)), (Permutation (y :: bl) (selection_sort l)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selsort l n)), (Permutation (y :: bl) (selsort l a)), (Permutation (y :: bl) (selsort l y)), (Permutation (y :: bl) (selsort bl n)), (Permutation (y :: bl) (selsort bl a)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (l ++ l)), (Permutation (y :: bl) (l ++ bl)), (Permutation (y :: bl) (bl ++ l)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) bl), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n :: bl)), (Permutation (selection_sort l) (a :: l))
(Permutation (selection_sort l) (a :: bl)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: bl)), (Permutation (selection_sort l) (selection_sort bl)), (Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l a)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort bl n)), (Permutation (selection_sort l) (selsort bl a)), (Permutation (selection_sort l) (selsort bl y))
(Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ bl)), (Permutation (selection_sort l) (bl ++ l)), (Permutation (selection_sort l) (bl ++ bl)), (Permutation (selection_sort l) []), (Permutation (selection_sort bl) l), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) (n :: l)), (Permutation (selection_sort bl) (n :: bl)), (Permutation (selection_sort bl) (a :: l))
(Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (y :: l)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (selection_sort l)), (Permutation (selection_sort bl) (selsort l n)), (Permutation (selection_sort bl) (selsort l a)), (Permutation (selection_sort bl) (selsort l y)), (Permutation (selection_sort bl) (selsort bl n)), (Permutation (selection_sort bl) (selsort bl a)), (Permutation (selection_sort bl) (selsort bl y))
(Permutation (selection_sort bl) (l ++ l)), (Permutation (selection_sort bl) (l ++ bl)), (Permutation (selection_sort bl) (bl ++ l)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) []), (Permutation (selsort l n) l), (Permutation (selsort l n) bl), (Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (n :: bl)), (Permutation (selsort l n) (a :: l))
(Permutation (selsort l n) (a :: bl)), (Permutation (selsort l n) (y :: l)), (Permutation (selsort l n) (y :: bl)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selection_sort bl)), (Permutation (selsort l n) (selsort l a)), (Permutation (selsort l n) (selsort l y)), (Permutation (selsort l n) (selsort bl n)), (Permutation (selsort l n) (selsort bl a)), (Permutation (selsort l n) (selsort bl y))
(Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) (l ++ bl)), (Permutation (selsort l n) (bl ++ l)), (Permutation (selsort l n) (bl ++ bl)), (Permutation (selsort l n) []), (Permutation (selsort l a) l), (Permutation (selsort l a) bl), (Permutation (selsort l a) (n :: l)), (Permutation (selsort l a) (n :: bl)), (Permutation (selsort l a) (a :: l))
(Permutation (selsort l a) (a :: bl)), (Permutation (selsort l a) (y :: l)), (Permutation (selsort l a) (y :: bl)), (Permutation (selsort l a) (selection_sort l)), (Permutation (selsort l a) (selection_sort bl)), (Permutation (selsort l a) (selsort l n)), (Permutation (selsort l a) (selsort l y)), (Permutation (selsort l a) (selsort bl n)), (Permutation (selsort l a) (selsort bl a)), (Permutation (selsort l a) (selsort bl y))
(Permutation (selsort l a) (l ++ l)), (Permutation (selsort l a) (l ++ bl)), (Permutation (selsort l a) (bl ++ l)), (Permutation (selsort l a) (bl ++ bl)), (Permutation (selsort l a) []), (Permutation (selsort l y) l), (Permutation (selsort l y) bl), (Permutation (selsort l y) (n :: l)), (Permutation (selsort l y) (n :: bl)), (Permutation (selsort l y) (a :: l))
(Permutation (selsort l y) (a :: bl)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: bl)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort bl)), (Permutation (selsort l y) (selsort l n)), (Permutation (selsort l y) (selsort l a)), (Permutation (selsort l y) (selsort bl n)), (Permutation (selsort l y) (selsort bl a)), (Permutation (selsort l y) (selsort bl y))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ bl)), (Permutation (selsort l y) (bl ++ l)), (Permutation (selsort l y) (bl ++ bl)), (Permutation (selsort l y) []), (Permutation (selsort bl n) l), (Permutation (selsort bl n) bl), (Permutation (selsort bl n) (n :: l)), (Permutation (selsort bl n) (n :: bl)), (Permutation (selsort bl n) (a :: l))
(Permutation (selsort bl n) (a :: bl)), (Permutation (selsort bl n) (y :: l)), (Permutation (selsort bl n) (y :: bl)), (Permutation (selsort bl n) (selection_sort l)), (Permutation (selsort bl n) (selection_sort bl)), (Permutation (selsort bl n) (selsort l n)), (Permutation (selsort bl n) (selsort l a)), (Permutation (selsort bl n) (selsort l y)), (Permutation (selsort bl n) (selsort bl a)), (Permutation (selsort bl n) (selsort bl y))
(Permutation (selsort bl n) (l ++ l)), (Permutation (selsort bl n) (l ++ bl)), (Permutation (selsort bl n) (bl ++ l)), (Permutation (selsort bl n) (bl ++ bl)), (Permutation (selsort bl n) []), (Permutation (selsort bl a) l), (Permutation (selsort bl a) bl), (Permutation (selsort bl a) (n :: l)), (Permutation (selsort bl a) (n :: bl)), (Permutation (selsort bl a) (a :: l))
(Permutation (selsort bl a) (a :: bl)), (Permutation (selsort bl a) (y :: l)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (selection_sort l)), (Permutation (selsort bl a) (selection_sort bl)), (Permutation (selsort bl a) (selsort l n)), (Permutation (selsort bl a) (selsort l a)), (Permutation (selsort bl a) (selsort l y)), (Permutation (selsort bl a) (selsort bl n)), (Permutation (selsort bl a) (selsort bl y))
(Permutation (selsort bl a) (l ++ l)), (Permutation (selsort bl a) (l ++ bl)), (Permutation (selsort bl a) (bl ++ l)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) []), (Permutation (selsort bl y) l), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) (n :: l)), (Permutation (selsort bl y) (n :: bl)), (Permutation (selsort bl y) (a :: l))
(Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (y :: l)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (selection_sort l)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selsort l n)), (Permutation (selsort bl y) (selsort l a)), (Permutation (selsort bl y) (selsort l y)), (Permutation (selsort bl y) (selsort bl n)), (Permutation (selsort bl y) (selsort bl a))
(Permutation (selsort bl y) (l ++ l)), (Permutation (selsort bl y) (l ++ bl)), (Permutation (selsort bl y) (bl ++ l)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) []), (Permutation (l ++ l) l), (Permutation (l ++ l) bl), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n :: bl)), (Permutation (l ++ l) (a :: l))
(Permutation (l ++ l) (a :: bl)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: bl)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort bl)), (Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (selsort l a)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort bl n)), (Permutation (l ++ l) (selsort bl a))
(Permutation (l ++ l) (selsort bl y)), (Permutation (l ++ l) (l ++ bl)), (Permutation (l ++ l) (bl ++ l)), (Permutation (l ++ l) (bl ++ bl)), (Permutation (l ++ l) []), (Permutation (l ++ bl) l), (Permutation (l ++ bl) bl), (Permutation (l ++ bl) (n :: l)), (Permutation (l ++ bl) (n :: bl)), (Permutation (l ++ bl) (a :: l))
(Permutation (l ++ bl) (a :: bl)), (Permutation (l ++ bl) (y :: l)), (Permutation (l ++ bl) (y :: bl)), (Permutation (l ++ bl) (selection_sort l)), (Permutation (l ++ bl) (selection_sort bl)), (Permutation (l ++ bl) (selsort l n)), (Permutation (l ++ bl) (selsort l a)), (Permutation (l ++ bl) (selsort l y)), (Permutation (l ++ bl) (selsort bl n)), (Permutation (l ++ bl) (selsort bl a))
(Permutation (l ++ bl) (selsort bl y)), (Permutation (l ++ bl) (l ++ l)), (Permutation (l ++ bl) (bl ++ l)), (Permutation (l ++ bl) (bl ++ bl)), (Permutation (l ++ bl) []), (Permutation (bl ++ l) l), (Permutation (bl ++ l) bl), (Permutation (bl ++ l) (n :: l)), (Permutation (bl ++ l) (n :: bl)), (Permutation (bl ++ l) (a :: l))
(Permutation (bl ++ l) (a :: bl)), (Permutation (bl ++ l) (y :: l)), (Permutation (bl ++ l) (y :: bl)), (Permutation (bl ++ l) (selection_sort l)), (Permutation (bl ++ l) (selection_sort bl)), (Permutation (bl ++ l) (selsort l n)), (Permutation (bl ++ l) (selsort l a)), (Permutation (bl ++ l) (selsort l y)), (Permutation (bl ++ l) (selsort bl n)), (Permutation (bl ++ l) (selsort bl a))
(Permutation (bl ++ l) (selsort bl y)), (Permutation (bl ++ l) (l ++ l)), (Permutation (bl ++ l) (l ++ bl)), (Permutation (bl ++ l) (bl ++ bl)), (Permutation (bl ++ l) []), (Permutation (bl ++ bl) l), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) (n :: l)), (Permutation (bl ++ bl) (n :: bl)), (Permutation (bl ++ bl) (a :: l))
(Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (y :: l)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (selection_sort l)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selsort l n)), (Permutation (bl ++ bl) (selsort l a)), (Permutation (bl ++ bl) (selsort l y)), (Permutation (bl ++ bl) (selsort bl n)), (Permutation (bl ++ bl) (selsort bl a))
(Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (l ++ l)), (Permutation (bl ++ bl) (l ++ bl)), (Permutation (bl ++ bl) (bl ++ l)), (Permutation (bl ++ bl) []), (Permutation [] l), (Permutation [] bl), (Permutation [] (n :: l)), (Permutation [] (n :: bl)), (Permutation [] (a :: l))
(Permutation [] (a :: bl)), (Permutation [] (y :: l)), (Permutation [] (y :: bl)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort bl)), (Permutation [] (selsort l n)), (Permutation [] (selsort l a)), (Permutation [] (selsort l y)), (Permutation [] (selsort bl n)), (Permutation [] (selsort bl a))
(Permutation [] (selsort bl y)), (Permutation [] (l ++ l)), (Permutation [] (l ++ bl)), (Permutation [] (bl ++ l)), (Permutation [] (bl ++ bl)), (In n (n :: l)), (In n (n :: bl)), (In n (a :: l)), (In n (a :: bl)), (In n (y :: l))
(In n (y :: bl)), (In n (selection_sort l)), (In n (selection_sort bl)), (In n (selsort l n)), (In n (selsort l a)), (In n (selsort l y)), (In n (selsort bl n)), (In n (selsort bl a)), (In n (selsort bl y)), (In n (l ++ l))
(In n (l ++ bl)), (In n (bl ++ l)), (In n (bl ++ bl)), (In a (n :: l)), (In a (n :: bl)), (In a (a :: l)), (In a (a :: bl)), (In a (y :: l)), (In a (y :: bl)), (In a (selection_sort l))
(In a (selection_sort bl)), (In a (selsort l n)), (In a (selsort l a)), (In a (selsort l y)), (In a (selsort bl n)), (In a (selsort bl a)), (In a (selsort bl y)), (In a (l ++ l)), (In a (l ++ bl)), (In a (bl ++ l))
(In a (bl ++ bl)), (In y (n :: l)), (In y (n :: bl)), (In y (a :: l)), (In y (a :: bl)), (In y (y :: l)), (In y (y :: bl)), (In y (selection_sort l)), (In y (selection_sort bl)), (In y (selsort l n))
(In y (selsort l a)), (In y (selsort l y)), (In y (selsort bl n)), (In y (selsort bl a)), (In y (selsort bl y)), (In y (l ++ l)), (In y (l ++ bl)), (In y (bl ++ l)), (In y (bl ++ bl)), (In (length l) l)
(In (length l) bl), (In (length l) (n :: l)), (In (length l) (n :: bl)), (In (length l) (a :: l)), (In (length l) (a :: bl)), (In (length l) (y :: l)), (In (length l) (y :: bl)), (In (length l) (selection_sort l)), (In (length l) (selection_sort bl)), (In (length l) (selsort l n))
(In (length l) (selsort l a)), (In (length l) (selsort l y)), (In (length l) (selsort bl n)), (In (length l) (selsort bl a)), (In (length l) (selsort bl y)), (In (length l) (l ++ l)), (In (length l) (l ++ bl)), (In (length l) (bl ++ l)), (In (length l) (bl ++ bl)), (In (length bl) l)
(In (length bl) bl), (In (length bl) (n :: l)), (In (length bl) (n :: bl)), (In (length bl) (a :: l)), (In (length bl) (a :: bl)), (In (length bl) (y :: l)), (In (length bl) (y :: bl)), (In (length bl) (selection_sort l)), (In (length bl) (selection_sort bl)), (In (length bl) (selsort l n))
(In (length bl) (selsort l a)), (In (length bl) (selsort l y)), (In (length bl) (selsort bl n)), (In (length bl) (selsort bl a)), (In (length bl) (selsort bl y)), (In (length bl) (l ++ l)), (In (length bl) (l ++ bl)), (In (length bl) (bl ++ l)), (In (length bl) (bl ++ bl)), (n < length l)
(n < length bl), (a < length l), (a < length bl), (y < length l), (y < length bl), (length l < n), (length l < a), (length l < y), (length l < length bl), (length bl < n)
(length bl < a), (length bl < y), (length bl < length l), (n <= length l), (n <= length bl), (a <= length l), (a <= length bl), (y <= length l), (y <= length bl), (length l <= n)
(length l <= a), (length l <= y), (length l <= length bl), (length bl <= n), (length bl <= a), (length bl <= y), (length bl <= length l), (~ n <=* l), (~ n <=* bl), (~ a <=* l)
(~ a <=* bl), (~ y <=* l), (~ y <=* bl), (~ sorted l), (~ sorted bl), (~ Permutation l l), (~ Permutation l bl), (~ Permutation bl l), (~ Permutation bl bl), (~ In n l)
(~ In n bl), (~ In a l), (~ In a bl), (~ In y l), (~ In y bl), (~ n < n), (~ n < a), (~ n < y), (~ a < n), (~ a < a)
(~ a < y), (~ y < n), (~ y < a), (~ y < y), (~ n <= n), (~ n <= a), (~ n <= y), (~ a <= n), (~ a <= a), (~ a <= y)
(~ y <= n), (~ y <= a), (~ y <= y), (l <> l), (l <> bl), (bl <> l), (bl <> bl), (n <> n), (n <> a), (n <> y)
(a <> n), (a <> a), (a <> y), (y <> n), (y <> a), (y <> y), (None = Some l), (None = Some bl), (n :: l = l), (n :: l = bl)
(n :: l = selection_sort l), (n :: l = selection_sort bl), (n :: l = selsort l n), (n :: l = selsort l a), (n :: l = selsort l y), (n :: l = selsort bl n), (n :: l = selsort bl a), (n :: l = selsort bl y), (n :: l = l ++ l), (n :: l = l ++ bl)
(n :: l = bl ++ l), (n :: l = bl ++ bl), (n :: l = []), (n :: bl = l), (n :: bl = bl), (n :: bl = selection_sort l), (n :: bl = selection_sort bl), (n :: bl = selsort l n), (n :: bl = selsort l a), (n :: bl = selsort l y)
(n :: bl = selsort bl n), (n :: bl = selsort bl a), (n :: bl = selsort bl y), (n :: bl = l ++ l), (n :: bl = l ++ bl), (n :: bl = bl ++ l), (n :: bl = bl ++ bl), (n :: bl = []), (a :: l = l), (a :: l = bl)
(a :: l = selection_sort l), (a :: l = selection_sort bl), (a :: l = selsort l n), (a :: l = selsort l a), (a :: l = selsort l y), (a :: l = selsort bl n), (a :: l = selsort bl a), (a :: l = selsort bl y), (a :: l = l ++ l), (a :: l = l ++ bl)
(a :: l = bl ++ l), (a :: l = bl ++ bl), (a :: l = []), (a :: bl = l), (a :: bl = bl), (a :: bl = selection_sort l), (a :: bl = selection_sort bl), (a :: bl = selsort l n), (a :: bl = selsort l a), (a :: bl = selsort l y)
(a :: bl = selsort bl n), (a :: bl = selsort bl a), (a :: bl = selsort bl y), (a :: bl = l ++ l), (a :: bl = l ++ bl), (a :: bl = bl ++ l), (a :: bl = bl ++ bl), (a :: bl = []), (y :: l = l), (y :: l = bl)
(y :: l = selection_sort l), (y :: l = selection_sort bl), (y :: l = selsort l n), (y :: l = selsort l a), (y :: l = selsort l y), (y :: l = selsort bl n), (y :: l = selsort bl a), (y :: l = selsort bl y), (y :: l = l ++ l), (y :: l = l ++ bl)
(y :: l = bl ++ l), (y :: l = bl ++ bl), (y :: l = []), (y :: bl = l), (y :: bl = bl), (y :: bl = selection_sort l), (y :: bl = selection_sort bl), (y :: bl = selsort l n), (y :: bl = selsort l a), (y :: bl = selsort l y)
(y :: bl = selsort bl n), (y :: bl = selsort bl a), (y :: bl = selsort bl y), (y :: bl = l ++ l), (y :: bl = l ++ bl), (y :: bl = bl ++ l), (y :: bl = bl ++ bl), (y :: bl = []), (selection_sort l = l), (selection_sort l = bl)
(selection_sort l = l ++ l), (selection_sort l = l ++ bl), (selection_sort l = bl ++ l), (selection_sort l = bl ++ bl), (selection_sort bl = l), (selection_sort bl = bl), (selection_sort bl = l ++ l), (selection_sort bl = l ++ bl), (selection_sort bl = bl ++ l), (selection_sort bl = bl ++ bl)
(selsort l n = l), (selsort l n = bl), (selsort l n = selection_sort l), (selsort l n = selection_sort bl), (selsort l n = l ++ l), (selsort l n = l ++ bl), (selsort l n = bl ++ l), (selsort l n = bl ++ bl), (selsort l a = l), (selsort l a = bl)
(selsort l a = selection_sort l), (selsort l a = selection_sort bl), (selsort l a = l ++ l), (selsort l a = l ++ bl), (selsort l a = bl ++ l), (selsort l a = bl ++ bl), (selsort l y = l), (selsort l y = bl), (selsort l y = selection_sort l), (selsort l y = selection_sort bl)
(selsort l y = l ++ l), (selsort l y = l ++ bl), (selsort l y = bl ++ l), (selsort l y = bl ++ bl), (selsort bl n = l), (selsort bl n = bl), (selsort bl n = selection_sort l), (selsort bl n = selection_sort bl), (selsort bl n = l ++ l), (selsort bl n = l ++ bl)
(selsort bl n = bl ++ l), (selsort bl n = bl ++ bl), (selsort bl a = l), (selsort bl a = bl), (selsort bl a = selection_sort l), (selsort bl a = selection_sort bl), (selsort bl a = l ++ l), (selsort bl a = l ++ bl), (selsort bl a = bl ++ l), (selsort bl a = bl ++ bl)
(selsort bl y = l), (selsort bl y = bl), (selsort bl y = selection_sort l), (selsort bl y = selection_sort bl), (selsort bl y = l ++ l), (selsort bl y = l ++ bl), (selsort bl y = bl ++ l), (selsort bl y = bl ++ bl), (l ++ l = l), (l ++ l = bl)
(l ++ bl = l), (l ++ bl = bl), (bl ++ l = l), (bl ++ l = bl), (bl ++ bl = l), (bl ++ bl = bl), ([] = l), ([] = bl), ([] = selection_sort l), ([] = selection_sort bl)
([] = selsort l n), ([] = selsort l a), ([] = selsort l y), ([] = selsort bl n), ([] = selsort bl a), ([] = selsort bl y), ([] = l ++ l), ([] = l ++ bl), ([] = bl ++ l), ([] = bl ++ bl)
(None = Some n), (None = Some a), (None = Some y), ((n, l) = select n l), ((n, l) = select n bl), ((n, l) = select a l), ((n, l) = select a bl), ((n, l) = select y l), ((n, l) = select y bl), ((n, bl) = select n l)
((n, bl) = select n bl), ((n, bl) = select a l), ((n, bl) = select a bl), ((n, bl) = select y l), ((n, bl) = select y bl), ((a, l) = select n l), ((a, l) = select n bl), ((a, l) = select a l), ((a, l) = select a bl), ((a, l) = select y l)
((a, l) = select y bl), ((a, bl) = select n l), ((a, bl) = select n bl), ((a, bl) = select a l), ((a, bl) = select a bl), ((a, bl) = select y l), ((a, bl) = select y bl), ((y, l) = select n l), ((y, l) = select n bl), ((y, l) = select a l)
((y, l) = select a bl), ((y, l) = select y l), ((y, l) = select y bl), ((y, bl) = select n l), ((y, bl) = select n bl), ((y, bl) = select a l), ((y, bl) = select a bl), ((y, bl) = select y l), ((y, bl) = select y bl), (length l = n)
(length l = a), (length l = y), (length bl = n), (length bl = a), (length bl = y)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 51.209 seconds


Label: 0 (0)
(In a bl), (In a (selection_sort bl)), (In a (selsort bl n)), (In a (y :: bl)), (In a (bl ++ bl)), (Permutation (a :: l) (selsort bl n)), (Permutation (selsort bl n) (a :: l)), (a :: l = selsort bl n)

Label: 1 (1)
(y <=* bl), (y <=* selection_sort bl), (y <=* selsort bl n), (y <=* selsort bl y), (y <=* y :: bl), (y <=* bl ++ bl), ((y, bl) = select y bl)


------------------------------ ALL RESULTS ------------------------------
1. (selsort bl n = a :: l -> y <=* bl -> y <= a)

2. (selsort bl n = a :: l -> In a bl)
(In a bl -> y <=* bl -> y <= a)

3. (selsort bl n = a :: l -> In a (selection_sort bl))
(In a (selection_sort bl) -> y <=* bl -> y <= a)

4. (selsort bl n = a :: l -> In a (selsort bl n))
(In a (selsort bl n) -> y <=* bl -> y <= a)

5. (selsort bl n = a :: l -> In a (bl ++ bl))
(In a (bl ++ bl) -> y <=* bl -> y <= a)

6. (selsort bl n = a :: l -> In a (y :: bl))
(In a (y :: bl) -> y <=* bl -> y <= a)

7. (selsort bl n = a :: l -> Permutation (a :: l) (selsort bl n))
(y <=* bl -> Permutation (a :: l) (selsort bl n) -> y <= a)

8. (selsort bl n = a :: l -> Permutation (selsort bl n) (a :: l))
(y <=* bl -> Permutation (selsort bl n) (a :: l) -> y <= a)

9. (y <=* bl -> y <=* selection_sort bl)
(y <=* selection_sort bl -> selsort bl n = a :: l -> y <= a)

10. (y <=* bl -> y <=* selsort bl n)
(y <=* selsort bl n -> selsort bl n = a :: l -> y <= a)

11. (y <=* bl -> y <=* selsort bl y)
(y <=* selsort bl y -> selsort bl n = a :: l -> y <= a)

12. (y <=* bl -> y <=* bl ++ bl)
(y <=* bl ++ bl -> selsort bl n = a :: l -> y <= a)

13. (y <=* bl -> y <=* y :: bl)
(y <=* y :: bl -> selsort bl n = a :: l -> y <= a)

14. (y <=* bl -> (y, bl) = select y bl)
((y, bl) = select y bl -> selsort bl n = a :: l -> y <= a)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 90.216 seconds

Number of Result Pairs Returned: 14

1. (selsort bl n = a :: l -> y <=* bl -> y <= a)

2. (selsort bl n = a :: l -> In a bl)
(In a bl -> y <=* bl -> y <= a)

3. (selsort bl n = a :: l -> In a (selection_sort bl))
(In a (selection_sort bl) -> y <=* bl -> y <= a)

4. (selsort bl n = a :: l -> In a (selsort bl n))
(In a (selsort bl n) -> y <=* bl -> y <= a)

5. (selsort bl n = a :: l -> In a (bl ++ bl))
(In a (bl ++ bl) -> y <=* bl -> y <= a)
