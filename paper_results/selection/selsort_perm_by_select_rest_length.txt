Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (length (n0 :: l) = S n)
 -- (forall l : list nat, length l = n -> Permutation l (selsort l n))
 -- (select n0 l = (n1, l0))
 -- (length l = n)

----------------------------------
Goal: (length l = length l0)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.471 seconds

gv0 : nat = (length l)
gv1 : nat = (length l0)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 45.137 seconds

Label: Generalization #0
Assumptions: 
 -- (select n0 l = (n1, l0))

----------------------------------
Goal: (length l = length l0)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (length l0 = gv1)
 -- (select n0 l = (n1, l0))

----------------------------------
Goal: (length l = gv1)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (select n0 l = (n1, l0))
 -- (length l = gv0)

----------------------------------
Goal: (gv0 = length l0)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 45.273 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)

Label: 0 (0)
Abducted Assumption: (select n0 l = (n1, l0))
Positive Examples: 27
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 31
Negative Examples: 41

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 30
Negative Examples: 36


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 45.537 seconds


Label: 0 (0)
(n1 <=* l0), (n1 <=* l), (n0 <=* l0), (n0 <=* l), (sorted l0), (sorted l), (Permutation l0 l0), (Permutation l0 l), (Permutation l l0), (Permutation l l)
(In n1 l0), (In n1 l), (In n0 l0), (In n0 l), (n1 < n1), (n1 < n0), (n0 < n1), (n0 < n0), (n1 <= n1), (n1 <= n0)
(n0 <= n1), (n0 <= n0), (n1 = n1), (n1 = n0), (n0 = n1), (n0 = n0), (l0 = l0), (l0 = l), (l = l0), (l = l)
(n1 <=* n1 :: l0), (n1 <=* n1 :: l), (n1 <=* n0 :: l0), (n1 <=* n0 :: l), (n1 <=* selection_sort l0), (n1 <=* selection_sort l), (n1 <=* selsort l0 n1), (n1 <=* selsort l0 n0), (n1 <=* selsort l n1), (n1 <=* selsort l n0)
(n1 <=* l0 ++ l0), (n1 <=* l0 ++ l), (n1 <=* l ++ l0), (n1 <=* l ++ l), (n1 <=* []), (n0 <=* n1 :: l0), (n0 <=* n1 :: l), (n0 <=* n0 :: l0), (n0 <=* n0 :: l), (n0 <=* selection_sort l0)
(n0 <=* selection_sort l), (n0 <=* selsort l0 n1), (n0 <=* selsort l0 n0), (n0 <=* selsort l n1), (n0 <=* selsort l n0), (n0 <=* l0 ++ l0), (n0 <=* l0 ++ l), (n0 <=* l ++ l0), (n0 <=* l ++ l), (n0 <=* [])
(length l0 <=* l0), (length l0 <=* l), (length l0 <=* n1 :: l0), (length l0 <=* n1 :: l), (length l0 <=* n0 :: l0), (length l0 <=* n0 :: l), (length l0 <=* selection_sort l0), (length l0 <=* selection_sort l), (length l0 <=* selsort l0 n1), (length l0 <=* selsort l0 n0)
(length l0 <=* selsort l n1), (length l0 <=* selsort l n0), (length l0 <=* l0 ++ l0), (length l0 <=* l0 ++ l), (length l0 <=* l ++ l0), (length l0 <=* l ++ l), (length l0 <=* []), (length l <=* l0), (length l <=* l), (length l <=* n1 :: l0)
(length l <=* n1 :: l), (length l <=* n0 :: l0), (length l <=* n0 :: l), (length l <=* selection_sort l0), (length l <=* selection_sort l), (length l <=* selsort l0 n1), (length l <=* selsort l0 n0), (length l <=* selsort l n1), (length l <=* selsort l n0), (length l <=* l0 ++ l0)
(length l <=* l0 ++ l), (length l <=* l ++ l0), (length l <=* l ++ l), (length l <=* []), (sorted (n1 :: l0)), (sorted (n1 :: l)), (sorted (n0 :: l0)), (sorted (n0 :: l)), (sorted (selection_sort l0)), (sorted (selection_sort l))
(sorted (selsort l0 n1)), (sorted (selsort l0 n0)), (sorted (selsort l n1)), (sorted (selsort l n0)), (sorted (l0 ++ l0)), (sorted (l0 ++ l)), (sorted (l ++ l0)), (sorted (l ++ l)), (sorted []), (Permutation l0 (n1 :: l0))
(Permutation l0 (n1 :: l)), (Permutation l0 (n0 :: l0)), (Permutation l0 (n0 :: l)), (Permutation l0 (selection_sort l0)), (Permutation l0 (selection_sort l)), (Permutation l0 (selsort l0 n1)), (Permutation l0 (selsort l0 n0)), (Permutation l0 (selsort l n1)), (Permutation l0 (selsort l n0)), (Permutation l0 (l0 ++ l0))
(Permutation l0 (l0 ++ l)), (Permutation l0 (l ++ l0)), (Permutation l0 (l ++ l)), (Permutation l0 []), (Permutation l (n1 :: l0)), (Permutation l (n1 :: l)), (Permutation l (n0 :: l0)), (Permutation l (n0 :: l)), (Permutation l (selection_sort l0)), (Permutation l (selection_sort l))
(Permutation l (selsort l0 n1)), (Permutation l (selsort l0 n0)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (l0 ++ l0)), (Permutation l (l0 ++ l)), (Permutation l (l ++ l0)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n1 :: l0) l0)
(Permutation (n1 :: l0) l), (Permutation (n1 :: l0) (n1 :: l)), (Permutation (n1 :: l0) (n0 :: l0)), (Permutation (n1 :: l0) (n0 :: l)), (Permutation (n1 :: l0) (selection_sort l0)), (Permutation (n1 :: l0) (selection_sort l)), (Permutation (n1 :: l0) (selsort l0 n1)), (Permutation (n1 :: l0) (selsort l0 n0)), (Permutation (n1 :: l0) (selsort l n1)), (Permutation (n1 :: l0) (selsort l n0))
(Permutation (n1 :: l0) (l0 ++ l0)), (Permutation (n1 :: l0) (l0 ++ l)), (Permutation (n1 :: l0) (l ++ l0)), (Permutation (n1 :: l0) (l ++ l)), (Permutation (n1 :: l0) []), (Permutation (n1 :: l) l0), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n1 :: l0)), (Permutation (n1 :: l) (n0 :: l0)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (selection_sort l0)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort l0 n1)), (Permutation (n1 :: l) (selsort l0 n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (l0 ++ l0)), (Permutation (n1 :: l) (l0 ++ l)), (Permutation (n1 :: l) (l ++ l0)), (Permutation (n1 :: l) (l ++ l))
(Permutation (n1 :: l) []), (Permutation (n0 :: l0) l0), (Permutation (n0 :: l0) l), (Permutation (n0 :: l0) (n1 :: l0)), (Permutation (n0 :: l0) (n1 :: l)), (Permutation (n0 :: l0) (n0 :: l)), (Permutation (n0 :: l0) (selection_sort l0)), (Permutation (n0 :: l0) (selection_sort l)), (Permutation (n0 :: l0) (selsort l0 n1)), (Permutation (n0 :: l0) (selsort l0 n0))
(Permutation (n0 :: l0) (selsort l n1)), (Permutation (n0 :: l0) (selsort l n0)), (Permutation (n0 :: l0) (l0 ++ l0)), (Permutation (n0 :: l0) (l0 ++ l)), (Permutation (n0 :: l0) (l ++ l0)), (Permutation (n0 :: l0) (l ++ l)), (Permutation (n0 :: l0) []), (Permutation (n0 :: l) l0), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n1 :: l0))
(Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n0 :: l0)), (Permutation (n0 :: l) (selection_sort l0)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort l0 n1)), (Permutation (n0 :: l) (selsort l0 n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (l0 ++ l0)), (Permutation (n0 :: l) (l0 ++ l))
(Permutation (n0 :: l) (l ++ l0)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (selection_sort l0) l0), (Permutation (selection_sort l0) l), (Permutation (selection_sort l0) (n1 :: l0)), (Permutation (selection_sort l0) (n1 :: l)), (Permutation (selection_sort l0) (n0 :: l0)), (Permutation (selection_sort l0) (n0 :: l)), (Permutation (selection_sort l0) (selection_sort l))
(Permutation (selection_sort l0) (selsort l0 n1)), (Permutation (selection_sort l0) (selsort l0 n0)), (Permutation (selection_sort l0) (selsort l n1)), (Permutation (selection_sort l0) (selsort l n0)), (Permutation (selection_sort l0) (l0 ++ l0)), (Permutation (selection_sort l0) (l0 ++ l)), (Permutation (selection_sort l0) (l ++ l0)), (Permutation (selection_sort l0) (l ++ l)), (Permutation (selection_sort l0) []), (Permutation (selection_sort l) l0)
(Permutation (selection_sort l) l), (Permutation (selection_sort l) (n1 :: l0)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n0 :: l0)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (selection_sort l0)), (Permutation (selection_sort l) (selsort l0 n1)), (Permutation (selection_sort l) (selsort l0 n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0))
(Permutation (selection_sort l) (l0 ++ l0)), (Permutation (selection_sort l) (l0 ++ l)), (Permutation (selection_sort l) (l ++ l0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort l0 n1) l0), (Permutation (selsort l0 n1) l), (Permutation (selsort l0 n1) (n1 :: l0)), (Permutation (selsort l0 n1) (n1 :: l)), (Permutation (selsort l0 n1) (n0 :: l0))
(Permutation (selsort l0 n1) (n0 :: l)), (Permutation (selsort l0 n1) (selection_sort l0)), (Permutation (selsort l0 n1) (selection_sort l)), (Permutation (selsort l0 n1) (selsort l0 n0)), (Permutation (selsort l0 n1) (selsort l n1)), (Permutation (selsort l0 n1) (selsort l n0)), (Permutation (selsort l0 n1) (l0 ++ l0)), (Permutation (selsort l0 n1) (l0 ++ l)), (Permutation (selsort l0 n1) (l ++ l0)), (Permutation (selsort l0 n1) (l ++ l))
(Permutation (selsort l0 n1) []), (Permutation (selsort l0 n0) l0), (Permutation (selsort l0 n0) l), (Permutation (selsort l0 n0) (n1 :: l0)), (Permutation (selsort l0 n0) (n1 :: l)), (Permutation (selsort l0 n0) (n0 :: l0)), (Permutation (selsort l0 n0) (n0 :: l)), (Permutation (selsort l0 n0) (selection_sort l0)), (Permutation (selsort l0 n0) (selection_sort l)), (Permutation (selsort l0 n0) (selsort l0 n1))
(Permutation (selsort l0 n0) (selsort l n1)), (Permutation (selsort l0 n0) (selsort l n0)), (Permutation (selsort l0 n0) (l0 ++ l0)), (Permutation (selsort l0 n0) (l0 ++ l)), (Permutation (selsort l0 n0) (l ++ l0)), (Permutation (selsort l0 n0) (l ++ l)), (Permutation (selsort l0 n0) []), (Permutation (selsort l n1) l0), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n1 :: l0))
(Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n0 :: l0)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (selection_sort l0)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort l0 n1)), (Permutation (selsort l n1) (selsort l0 n0)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (l0 ++ l0)), (Permutation (selsort l n1) (l0 ++ l))
(Permutation (selsort l n1) (l ++ l0)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) l0), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n1 :: l0)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n0 :: l0)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (selection_sort l0))
(Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort l0 n1)), (Permutation (selsort l n0) (selsort l0 n0)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (l0 ++ l0)), (Permutation (selsort l n0) (l0 ++ l)), (Permutation (selsort l n0) (l ++ l0)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (l0 ++ l0) l0)
(Permutation (l0 ++ l0) l), (Permutation (l0 ++ l0) (n1 :: l0)), (Permutation (l0 ++ l0) (n1 :: l)), (Permutation (l0 ++ l0) (n0 :: l0)), (Permutation (l0 ++ l0) (n0 :: l)), (Permutation (l0 ++ l0) (selection_sort l0)), (Permutation (l0 ++ l0) (selection_sort l)), (Permutation (l0 ++ l0) (selsort l0 n1)), (Permutation (l0 ++ l0) (selsort l0 n0)), (Permutation (l0 ++ l0) (selsort l n1))
(Permutation (l0 ++ l0) (selsort l n0)), (Permutation (l0 ++ l0) (l0 ++ l)), (Permutation (l0 ++ l0) (l ++ l0)), (Permutation (l0 ++ l0) (l ++ l)), (Permutation (l0 ++ l0) []), (Permutation (l0 ++ l) l0), (Permutation (l0 ++ l) l), (Permutation (l0 ++ l) (n1 :: l0)), (Permutation (l0 ++ l) (n1 :: l)), (Permutation (l0 ++ l) (n0 :: l0))
(Permutation (l0 ++ l) (n0 :: l)), (Permutation (l0 ++ l) (selection_sort l0)), (Permutation (l0 ++ l) (selection_sort l)), (Permutation (l0 ++ l) (selsort l0 n1)), (Permutation (l0 ++ l) (selsort l0 n0)), (Permutation (l0 ++ l) (selsort l n1)), (Permutation (l0 ++ l) (selsort l n0)), (Permutation (l0 ++ l) (l0 ++ l0)), (Permutation (l0 ++ l) (l ++ l0)), (Permutation (l0 ++ l) (l ++ l))
(Permutation (l0 ++ l) []), (Permutation (l ++ l0) l0), (Permutation (l ++ l0) l), (Permutation (l ++ l0) (n1 :: l0)), (Permutation (l ++ l0) (n1 :: l)), (Permutation (l ++ l0) (n0 :: l0)), (Permutation (l ++ l0) (n0 :: l)), (Permutation (l ++ l0) (selection_sort l0)), (Permutation (l ++ l0) (selection_sort l)), (Permutation (l ++ l0) (selsort l0 n1))
(Permutation (l ++ l0) (selsort l0 n0)), (Permutation (l ++ l0) (selsort l n1)), (Permutation (l ++ l0) (selsort l n0)), (Permutation (l ++ l0) (l0 ++ l0)), (Permutation (l ++ l0) (l0 ++ l)), (Permutation (l ++ l0) (l ++ l)), (Permutation (l ++ l0) []), (Permutation (l ++ l) l0), (Permutation (l ++ l) l), (Permutation (l ++ l) (n1 :: l0))
(Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n0 :: l0)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (selection_sort l0)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort l0 n1)), (Permutation (l ++ l) (selsort l0 n0)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (l0 ++ l0))
(Permutation (l ++ l) (l0 ++ l)), (Permutation (l ++ l) (l ++ l0)), (Permutation (l ++ l) []), (Permutation [] l0), (Permutation [] l), (Permutation [] (n1 :: l0)), (Permutation [] (n1 :: l)), (Permutation [] (n0 :: l0)), (Permutation [] (n0 :: l)), (Permutation [] (selection_sort l0))
(Permutation [] (selection_sort l)), (Permutation [] (selsort l0 n1)), (Permutation [] (selsort l0 n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0)), (Permutation [] (l0 ++ l0)), (Permutation [] (l0 ++ l)), (Permutation [] (l ++ l0)), (Permutation [] (l ++ l)), (In n1 (n1 :: l0))
(In n1 (n1 :: l)), (In n1 (n0 :: l0)), (In n1 (n0 :: l)), (In n1 (selection_sort l0)), (In n1 (selection_sort l)), (In n1 (selsort l0 n1)), (In n1 (selsort l0 n0)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (l0 ++ l0))
(In n1 (l0 ++ l)), (In n1 (l ++ l0)), (In n1 (l ++ l)), (In n0 (n1 :: l0)), (In n0 (n1 :: l)), (In n0 (n0 :: l0)), (In n0 (n0 :: l)), (In n0 (selection_sort l0)), (In n0 (selection_sort l)), (In n0 (selsort l0 n1))
(In n0 (selsort l0 n0)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (l0 ++ l0)), (In n0 (l0 ++ l)), (In n0 (l ++ l0)), (In n0 (l ++ l)), (In (length l0) l0), (In (length l0) l), (In (length l0) (n1 :: l0))
(In (length l0) (n1 :: l)), (In (length l0) (n0 :: l0)), (In (length l0) (n0 :: l)), (In (length l0) (selection_sort l0)), (In (length l0) (selection_sort l)), (In (length l0) (selsort l0 n1)), (In (length l0) (selsort l0 n0)), (In (length l0) (selsort l n1)), (In (length l0) (selsort l n0)), (In (length l0) (l0 ++ l0))
(In (length l0) (l0 ++ l)), (In (length l0) (l ++ l0)), (In (length l0) (l ++ l)), (In (length l) l0), (In (length l) l), (In (length l) (n1 :: l0)), (In (length l) (n1 :: l)), (In (length l) (n0 :: l0)), (In (length l) (n0 :: l)), (In (length l) (selection_sort l0))
(In (length l) (selection_sort l)), (In (length l) (selsort l0 n1)), (In (length l) (selsort l0 n0)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (l0 ++ l0)), (In (length l) (l0 ++ l)), (In (length l) (l ++ l0)), (In (length l) (l ++ l)), (n1 < length l0)
(n1 < length l), (n0 < length l0), (n0 < length l), (length l0 < n1), (length l0 < n0), (length l0 < length l), (length l < n1), (length l < n0), (length l < length l0), (n1 <= length l0)
(n1 <= length l), (n0 <= length l0), (n0 <= length l), (length l0 <= n1), (length l0 <= n0), (length l0 <= length l), (length l <= n1), (length l <= n0), (length l <= length l0), (~ n1 <=* l0)
(~ n1 <=* l), (~ n0 <=* l0), (~ n0 <=* l), (~ sorted l0), (~ sorted l), (~ Permutation l0 l0), (~ Permutation l0 l), (~ Permutation l l0), (~ Permutation l l), (~ In n1 l0)
(~ In n1 l), (~ In n0 l0), (~ In n0 l), (~ n1 < n1), (~ n1 < n0), (~ n0 < n1), (~ n0 < n0), (~ n1 <= n1), (~ n1 <= n0), (~ n0 <= n1)
(~ n0 <= n0), (n1 <> n1), (n1 <> n0), (n0 <> n1), (n0 <> n0), (l0 <> l0), (l0 <> l), (l <> l0), (l <> l), (None = Some l0)
(None = Some l), (n1 :: l0 = l0), (n1 :: l0 = l), (n1 :: l0 = selection_sort l0), (n1 :: l0 = selection_sort l), (n1 :: l0 = selsort l0 n1), (n1 :: l0 = selsort l0 n0), (n1 :: l0 = selsort l n1), (n1 :: l0 = selsort l n0), (n1 :: l0 = l0 ++ l0)
(n1 :: l0 = l0 ++ l), (n1 :: l0 = l ++ l0), (n1 :: l0 = l ++ l), (n1 :: l0 = []), (n1 :: l = l0), (n1 :: l = l), (n1 :: l = selection_sort l0), (n1 :: l = selection_sort l), (n1 :: l = selsort l0 n1), (n1 :: l = selsort l0 n0)
(n1 :: l = selsort l n1), (n1 :: l = selsort l n0), (n1 :: l = l0 ++ l0), (n1 :: l = l0 ++ l), (n1 :: l = l ++ l0), (n1 :: l = l ++ l), (n1 :: l = []), (n0 :: l0 = l0), (n0 :: l0 = l), (n0 :: l0 = selection_sort l0)
(n0 :: l0 = selection_sort l), (n0 :: l0 = selsort l0 n1), (n0 :: l0 = selsort l0 n0), (n0 :: l0 = selsort l n1), (n0 :: l0 = selsort l n0), (n0 :: l0 = l0 ++ l0), (n0 :: l0 = l0 ++ l), (n0 :: l0 = l ++ l0), (n0 :: l0 = l ++ l), (n0 :: l0 = [])
(n0 :: l = l0), (n0 :: l = l), (n0 :: l = selection_sort l0), (n0 :: l = selection_sort l), (n0 :: l = selsort l0 n1), (n0 :: l = selsort l0 n0), (n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = l0 ++ l0), (n0 :: l = l0 ++ l)
(n0 :: l = l ++ l0), (n0 :: l = l ++ l), (n0 :: l = []), (selection_sort l0 = l0), (selection_sort l0 = l), (selection_sort l0 = l0 ++ l0), (selection_sort l0 = l0 ++ l), (selection_sort l0 = l ++ l0), (selection_sort l0 = l ++ l), (selection_sort l = l0)
(selection_sort l = l), (selection_sort l = l0 ++ l0), (selection_sort l = l0 ++ l), (selection_sort l = l ++ l0), (selection_sort l = l ++ l), (selsort l0 n1 = l0), (selsort l0 n1 = l), (selsort l0 n1 = selection_sort l0), (selsort l0 n1 = selection_sort l), (selsort l0 n1 = l0 ++ l0)
(selsort l0 n1 = l0 ++ l), (selsort l0 n1 = l ++ l0), (selsort l0 n1 = l ++ l), (selsort l0 n0 = l0), (selsort l0 n0 = l), (selsort l0 n0 = selection_sort l0), (selsort l0 n0 = selection_sort l), (selsort l0 n0 = l0 ++ l0), (selsort l0 n0 = l0 ++ l), (selsort l0 n0 = l ++ l0)
(selsort l0 n0 = l ++ l), (selsort l n1 = l0), (selsort l n1 = l), (selsort l n1 = selection_sort l0), (selsort l n1 = selection_sort l), (selsort l n1 = l0 ++ l0), (selsort l n1 = l0 ++ l), (selsort l n1 = l ++ l0), (selsort l n1 = l ++ l), (selsort l n0 = l0)
(selsort l n0 = l), (selsort l n0 = selection_sort l0), (selsort l n0 = selection_sort l), (selsort l n0 = l0 ++ l0), (selsort l n0 = l0 ++ l), (selsort l n0 = l ++ l0), (selsort l n0 = l ++ l), (l0 ++ l0 = l0), (l0 ++ l0 = l), (l0 ++ l = l0)
(l0 ++ l = l), (l ++ l0 = l0), (l ++ l0 = l), (l ++ l = l0), (l ++ l = l), ([] = l0), ([] = l), ([] = selection_sort l0), ([] = selection_sort l), ([] = selsort l0 n1)
([] = selsort l0 n0), ([] = selsort l n1), ([] = selsort l n0), ([] = l0 ++ l0), ([] = l0 ++ l), ([] = l ++ l0), ([] = l ++ l), (None = Some n1), (None = Some n0), ((n1, l0) = select n1 l0)
((n1, l0) = select n1 l), ((n1, l0) = select n0 l0), ((n1, l0) = select n0 l), ((n1, l) = select n1 l0), ((n1, l) = select n1 l), ((n1, l) = select n0 l0), ((n1, l) = select n0 l), ((n0, l0) = select n1 l0), ((n0, l0) = select n1 l), ((n0, l0) = select n0 l0)
((n0, l0) = select n0 l), ((n0, l) = select n1 l0), ((n0, l) = select n1 l), ((n0, l) = select n0 l0), ((n0, l) = select n0 l), (length l0 = n1), (length l0 = n0), (length l = n1), (length l = n0)

Label: 1 (1)
(n1 <=* l0), (n1 <=* l), (n0 <=* l0), (n0 <=* l), (gv1 <=* l0), (gv1 <=* l), (sorted l0), (sorted l), (Permutation l0 l0), (Permutation l0 l)
(Permutation l l0), (Permutation l l), (In n1 l0), (In n1 l), (In n0 l0), (In n0 l), (In gv1 l0), (In gv1 l), (n1 < n1), (n1 < n0)
(n1 < gv1), (n0 < n1), (n0 < n0), (n0 < gv1), (gv1 < n1), (gv1 < n0), (gv1 < gv1), (n1 <= n1), (n1 <= n0), (n1 <= gv1)
(n0 <= n1), (n0 <= n0), (n0 <= gv1), (gv1 <= n1), (gv1 <= n0), (gv1 <= gv1), (n1 = n1), (n1 = n0), (n1 = gv1), (n0 = n1)
(n0 = n0), (n0 = gv1), (gv1 = n1), (gv1 = n0), (gv1 = gv1), (l0 = l0), (l0 = l), (l = l0), (l = l), (n1 <=* n1 :: l0)
(n1 <=* n1 :: l), (n1 <=* n0 :: l0), (n1 <=* n0 :: l), (n1 <=* gv1 :: l0), (n1 <=* gv1 :: l), (n1 <=* selection_sort l0), (n1 <=* selection_sort l), (n1 <=* selsort l0 n1), (n1 <=* selsort l0 n0), (n1 <=* selsort l0 gv1)
(n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* selsort l gv1), (n1 <=* l0 ++ l0), (n1 <=* l0 ++ l), (n1 <=* l ++ l0), (n1 <=* l ++ l), (n1 <=* []), (n0 <=* n1 :: l0), (n0 <=* n1 :: l)
(n0 <=* n0 :: l0), (n0 <=* n0 :: l), (n0 <=* gv1 :: l0), (n0 <=* gv1 :: l), (n0 <=* selection_sort l0), (n0 <=* selection_sort l), (n0 <=* selsort l0 n1), (n0 <=* selsort l0 n0), (n0 <=* selsort l0 gv1), (n0 <=* selsort l n1)
(n0 <=* selsort l n0), (n0 <=* selsort l gv1), (n0 <=* l0 ++ l0), (n0 <=* l0 ++ l), (n0 <=* l ++ l0), (n0 <=* l ++ l), (n0 <=* []), (gv1 <=* n1 :: l0), (gv1 <=* n1 :: l), (gv1 <=* n0 :: l0)
(gv1 <=* n0 :: l), (gv1 <=* gv1 :: l0), (gv1 <=* gv1 :: l), (gv1 <=* selection_sort l0), (gv1 <=* selection_sort l), (gv1 <=* selsort l0 n1), (gv1 <=* selsort l0 n0), (gv1 <=* selsort l0 gv1), (gv1 <=* selsort l n1), (gv1 <=* selsort l n0)
(gv1 <=* selsort l gv1), (gv1 <=* l0 ++ l0), (gv1 <=* l0 ++ l), (gv1 <=* l ++ l0), (gv1 <=* l ++ l), (gv1 <=* []), (length l0 <=* l0), (length l0 <=* l), (length l0 <=* n1 :: l0), (length l0 <=* n1 :: l)
(length l0 <=* n0 :: l0), (length l0 <=* n0 :: l), (length l0 <=* gv1 :: l0), (length l0 <=* gv1 :: l), (length l0 <=* selection_sort l0), (length l0 <=* selection_sort l), (length l0 <=* selsort l0 n1), (length l0 <=* selsort l0 n0), (length l0 <=* selsort l0 gv1), (length l0 <=* selsort l n1)
(length l0 <=* selsort l n0), (length l0 <=* selsort l gv1), (length l0 <=* l0 ++ l0), (length l0 <=* l0 ++ l), (length l0 <=* l ++ l0), (length l0 <=* l ++ l), (length l0 <=* []), (length l <=* l0), (length l <=* l), (length l <=* n1 :: l0)
(length l <=* n1 :: l), (length l <=* n0 :: l0), (length l <=* n0 :: l), (length l <=* gv1 :: l0), (length l <=* gv1 :: l), (length l <=* selection_sort l0), (length l <=* selection_sort l), (length l <=* selsort l0 n1), (length l <=* selsort l0 n0), (length l <=* selsort l0 gv1)
(length l <=* selsort l n1), (length l <=* selsort l n0), (length l <=* selsort l gv1), (length l <=* l0 ++ l0), (length l <=* l0 ++ l), (length l <=* l ++ l0), (length l <=* l ++ l), (length l <=* []), (sorted (n1 :: l0)), (sorted (n1 :: l))
(sorted (n0 :: l0)), (sorted (n0 :: l)), (sorted (gv1 :: l0)), (sorted (gv1 :: l)), (sorted (selection_sort l0)), (sorted (selection_sort l)), (sorted (selsort l0 n1)), (sorted (selsort l0 n0)), (sorted (selsort l0 gv1)), (sorted (selsort l n1))
(sorted (selsort l n0)), (sorted (selsort l gv1)), (sorted (l0 ++ l0)), (sorted (l0 ++ l)), (sorted (l ++ l0)), (sorted (l ++ l)), (sorted []), (Permutation l0 (n1 :: l0)), (Permutation l0 (n1 :: l)), (Permutation l0 (n0 :: l0))
(Permutation l0 (n0 :: l)), (Permutation l0 (gv1 :: l0)), (Permutation l0 (gv1 :: l)), (Permutation l0 (selection_sort l0)), (Permutation l0 (selection_sort l)), (Permutation l0 (selsort l0 n1)), (Permutation l0 (selsort l0 n0)), (Permutation l0 (selsort l0 gv1)), (Permutation l0 (selsort l n1)), (Permutation l0 (selsort l n0))
(Permutation l0 (selsort l gv1)), (Permutation l0 (l0 ++ l0)), (Permutation l0 (l0 ++ l)), (Permutation l0 (l ++ l0)), (Permutation l0 (l ++ l)), (Permutation l0 []), (Permutation l (n1 :: l0)), (Permutation l (n1 :: l)), (Permutation l (n0 :: l0)), (Permutation l (n0 :: l))
(Permutation l (gv1 :: l0)), (Permutation l (gv1 :: l)), (Permutation l (selection_sort l0)), (Permutation l (selection_sort l)), (Permutation l (selsort l0 n1)), (Permutation l (selsort l0 n0)), (Permutation l (selsort l0 gv1)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l gv1))
(Permutation l (l0 ++ l0)), (Permutation l (l0 ++ l)), (Permutation l (l ++ l0)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n1 :: l0) l0), (Permutation (n1 :: l0) l), (Permutation (n1 :: l0) (n1 :: l)), (Permutation (n1 :: l0) (n0 :: l0)), (Permutation (n1 :: l0) (n0 :: l))
(Permutation (n1 :: l0) (gv1 :: l0)), (Permutation (n1 :: l0) (gv1 :: l)), (Permutation (n1 :: l0) (selection_sort l0)), (Permutation (n1 :: l0) (selection_sort l)), (Permutation (n1 :: l0) (selsort l0 n1)), (Permutation (n1 :: l0) (selsort l0 n0)), (Permutation (n1 :: l0) (selsort l0 gv1)), (Permutation (n1 :: l0) (selsort l n1)), (Permutation (n1 :: l0) (selsort l n0)), (Permutation (n1 :: l0) (selsort l gv1))
(Permutation (n1 :: l0) (l0 ++ l0)), (Permutation (n1 :: l0) (l0 ++ l)), (Permutation (n1 :: l0) (l ++ l0)), (Permutation (n1 :: l0) (l ++ l)), (Permutation (n1 :: l0) []), (Permutation (n1 :: l) l0), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n1 :: l0)), (Permutation (n1 :: l) (n0 :: l0)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (gv1 :: l0)), (Permutation (n1 :: l) (gv1 :: l)), (Permutation (n1 :: l) (selection_sort l0)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort l0 n1)), (Permutation (n1 :: l) (selsort l0 n0)), (Permutation (n1 :: l) (selsort l0 gv1)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l gv1))
(Permutation (n1 :: l) (l0 ++ l0)), (Permutation (n1 :: l) (l0 ++ l)), (Permutation (n1 :: l) (l ++ l0)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (n0 :: l0) l0), (Permutation (n0 :: l0) l), (Permutation (n0 :: l0) (n1 :: l0)), (Permutation (n0 :: l0) (n1 :: l)), (Permutation (n0 :: l0) (n0 :: l))
(Permutation (n0 :: l0) (gv1 :: l0)), (Permutation (n0 :: l0) (gv1 :: l)), (Permutation (n0 :: l0) (selection_sort l0)), (Permutation (n0 :: l0) (selection_sort l)), (Permutation (n0 :: l0) (selsort l0 n1)), (Permutation (n0 :: l0) (selsort l0 n0)), (Permutation (n0 :: l0) (selsort l0 gv1)), (Permutation (n0 :: l0) (selsort l n1)), (Permutation (n0 :: l0) (selsort l n0)), (Permutation (n0 :: l0) (selsort l gv1))
(Permutation (n0 :: l0) (l0 ++ l0)), (Permutation (n0 :: l0) (l0 ++ l)), (Permutation (n0 :: l0) (l ++ l0)), (Permutation (n0 :: l0) (l ++ l)), (Permutation (n0 :: l0) []), (Permutation (n0 :: l) l0), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n1 :: l0)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n0 :: l0))
(Permutation (n0 :: l) (gv1 :: l0)), (Permutation (n0 :: l) (gv1 :: l)), (Permutation (n0 :: l) (selection_sort l0)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort l0 n1)), (Permutation (n0 :: l) (selsort l0 n0)), (Permutation (n0 :: l) (selsort l0 gv1)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l gv1))
(Permutation (n0 :: l) (l0 ++ l0)), (Permutation (n0 :: l) (l0 ++ l)), (Permutation (n0 :: l) (l ++ l0)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (gv1 :: l0) l0), (Permutation (gv1 :: l0) l), (Permutation (gv1 :: l0) (n1 :: l0)), (Permutation (gv1 :: l0) (n1 :: l)), (Permutation (gv1 :: l0) (n0 :: l0))
(Permutation (gv1 :: l0) (n0 :: l)), (Permutation (gv1 :: l0) (gv1 :: l)), (Permutation (gv1 :: l0) (selection_sort l0)), (Permutation (gv1 :: l0) (selection_sort l)), (Permutation (gv1 :: l0) (selsort l0 n1)), (Permutation (gv1 :: l0) (selsort l0 n0)), (Permutation (gv1 :: l0) (selsort l0 gv1)), (Permutation (gv1 :: l0) (selsort l n1)), (Permutation (gv1 :: l0) (selsort l n0)), (Permutation (gv1 :: l0) (selsort l gv1))
(Permutation (gv1 :: l0) (l0 ++ l0)), (Permutation (gv1 :: l0) (l0 ++ l)), (Permutation (gv1 :: l0) (l ++ l0)), (Permutation (gv1 :: l0) (l ++ l)), (Permutation (gv1 :: l0) []), (Permutation (gv1 :: l) l0), (Permutation (gv1 :: l) l), (Permutation (gv1 :: l) (n1 :: l0)), (Permutation (gv1 :: l) (n1 :: l)), (Permutation (gv1 :: l) (n0 :: l0))
(Permutation (gv1 :: l) (n0 :: l)), (Permutation (gv1 :: l) (gv1 :: l0)), (Permutation (gv1 :: l) (selection_sort l0)), (Permutation (gv1 :: l) (selection_sort l)), (Permutation (gv1 :: l) (selsort l0 n1)), (Permutation (gv1 :: l) (selsort l0 n0)), (Permutation (gv1 :: l) (selsort l0 gv1)), (Permutation (gv1 :: l) (selsort l n1)), (Permutation (gv1 :: l) (selsort l n0)), (Permutation (gv1 :: l) (selsort l gv1))
(Permutation (gv1 :: l) (l0 ++ l0)), (Permutation (gv1 :: l) (l0 ++ l)), (Permutation (gv1 :: l) (l ++ l0)), (Permutation (gv1 :: l) (l ++ l)), (Permutation (gv1 :: l) []), (Permutation (selection_sort l0) l0), (Permutation (selection_sort l0) l), (Permutation (selection_sort l0) (n1 :: l0)), (Permutation (selection_sort l0) (n1 :: l)), (Permutation (selection_sort l0) (n0 :: l0))
(Permutation (selection_sort l0) (n0 :: l)), (Permutation (selection_sort l0) (gv1 :: l0)), (Permutation (selection_sort l0) (gv1 :: l)), (Permutation (selection_sort l0) (selection_sort l)), (Permutation (selection_sort l0) (selsort l0 n1)), (Permutation (selection_sort l0) (selsort l0 n0)), (Permutation (selection_sort l0) (selsort l0 gv1)), (Permutation (selection_sort l0) (selsort l n1)), (Permutation (selection_sort l0) (selsort l n0)), (Permutation (selection_sort l0) (selsort l gv1))
(Permutation (selection_sort l0) (l0 ++ l0)), (Permutation (selection_sort l0) (l0 ++ l)), (Permutation (selection_sort l0) (l ++ l0)), (Permutation (selection_sort l0) (l ++ l)), (Permutation (selection_sort l0) []), (Permutation (selection_sort l) l0), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n1 :: l0)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n0 :: l0))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (gv1 :: l0)), (Permutation (selection_sort l) (gv1 :: l)), (Permutation (selection_sort l) (selection_sort l0)), (Permutation (selection_sort l) (selsort l0 n1)), (Permutation (selection_sort l) (selsort l0 n0)), (Permutation (selection_sort l) (selsort l0 gv1)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l gv1))
(Permutation (selection_sort l) (l0 ++ l0)), (Permutation (selection_sort l) (l0 ++ l)), (Permutation (selection_sort l) (l ++ l0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort l0 n1) l0), (Permutation (selsort l0 n1) l), (Permutation (selsort l0 n1) (n1 :: l0)), (Permutation (selsort l0 n1) (n1 :: l)), (Permutation (selsort l0 n1) (n0 :: l0))
(Permutation (selsort l0 n1) (n0 :: l)), (Permutation (selsort l0 n1) (gv1 :: l0)), (Permutation (selsort l0 n1) (gv1 :: l)), (Permutation (selsort l0 n1) (selection_sort l0)), (Permutation (selsort l0 n1) (selection_sort l)), (Permutation (selsort l0 n1) (selsort l0 n0)), (Permutation (selsort l0 n1) (selsort l0 gv1)), (Permutation (selsort l0 n1) (selsort l n1)), (Permutation (selsort l0 n1) (selsort l n0)), (Permutation (selsort l0 n1) (selsort l gv1))
(Permutation (selsort l0 n1) (l0 ++ l0)), (Permutation (selsort l0 n1) (l0 ++ l)), (Permutation (selsort l0 n1) (l ++ l0)), (Permutation (selsort l0 n1) (l ++ l)), (Permutation (selsort l0 n1) []), (Permutation (selsort l0 n0) l0), (Permutation (selsort l0 n0) l), (Permutation (selsort l0 n0) (n1 :: l0)), (Permutation (selsort l0 n0) (n1 :: l)), (Permutation (selsort l0 n0) (n0 :: l0))
(Permutation (selsort l0 n0) (n0 :: l)), (Permutation (selsort l0 n0) (gv1 :: l0)), (Permutation (selsort l0 n0) (gv1 :: l)), (Permutation (selsort l0 n0) (selection_sort l0)), (Permutation (selsort l0 n0) (selection_sort l)), (Permutation (selsort l0 n0) (selsort l0 n1)), (Permutation (selsort l0 n0) (selsort l0 gv1)), (Permutation (selsort l0 n0) (selsort l n1)), (Permutation (selsort l0 n0) (selsort l n0)), (Permutation (selsort l0 n0) (selsort l gv1))
(Permutation (selsort l0 n0) (l0 ++ l0)), (Permutation (selsort l0 n0) (l0 ++ l)), (Permutation (selsort l0 n0) (l ++ l0)), (Permutation (selsort l0 n0) (l ++ l)), (Permutation (selsort l0 n0) []), (Permutation (selsort l0 gv1) l0), (Permutation (selsort l0 gv1) l), (Permutation (selsort l0 gv1) (n1 :: l0)), (Permutation (selsort l0 gv1) (n1 :: l)), (Permutation (selsort l0 gv1) (n0 :: l0))
(Permutation (selsort l0 gv1) (n0 :: l)), (Permutation (selsort l0 gv1) (gv1 :: l0)), (Permutation (selsort l0 gv1) (gv1 :: l)), (Permutation (selsort l0 gv1) (selection_sort l0)), (Permutation (selsort l0 gv1) (selection_sort l)), (Permutation (selsort l0 gv1) (selsort l0 n1)), (Permutation (selsort l0 gv1) (selsort l0 n0)), (Permutation (selsort l0 gv1) (selsort l n1)), (Permutation (selsort l0 gv1) (selsort l n0)), (Permutation (selsort l0 gv1) (selsort l gv1))
(Permutation (selsort l0 gv1) (l0 ++ l0)), (Permutation (selsort l0 gv1) (l0 ++ l)), (Permutation (selsort l0 gv1) (l ++ l0)), (Permutation (selsort l0 gv1) (l ++ l)), (Permutation (selsort l0 gv1) []), (Permutation (selsort l n1) l0), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n1 :: l0)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n0 :: l0))
(Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (gv1 :: l0)), (Permutation (selsort l n1) (gv1 :: l)), (Permutation (selsort l n1) (selection_sort l0)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort l0 n1)), (Permutation (selsort l n1) (selsort l0 n0)), (Permutation (selsort l n1) (selsort l0 gv1)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l gv1))
(Permutation (selsort l n1) (l0 ++ l0)), (Permutation (selsort l n1) (l0 ++ l)), (Permutation (selsort l n1) (l ++ l0)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) l0), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n1 :: l0)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n0 :: l0))
(Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (gv1 :: l0)), (Permutation (selsort l n0) (gv1 :: l)), (Permutation (selsort l n0) (selection_sort l0)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort l0 n1)), (Permutation (selsort l n0) (selsort l0 n0)), (Permutation (selsort l n0) (selsort l0 gv1)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l gv1))
(Permutation (selsort l n0) (l0 ++ l0)), (Permutation (selsort l n0) (l0 ++ l)), (Permutation (selsort l n0) (l ++ l0)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l gv1) l0), (Permutation (selsort l gv1) l), (Permutation (selsort l gv1) (n1 :: l0)), (Permutation (selsort l gv1) (n1 :: l)), (Permutation (selsort l gv1) (n0 :: l0))
(Permutation (selsort l gv1) (n0 :: l)), (Permutation (selsort l gv1) (gv1 :: l0)), (Permutation (selsort l gv1) (gv1 :: l)), (Permutation (selsort l gv1) (selection_sort l0)), (Permutation (selsort l gv1) (selection_sort l)), (Permutation (selsort l gv1) (selsort l0 n1)), (Permutation (selsort l gv1) (selsort l0 n0)), (Permutation (selsort l gv1) (selsort l0 gv1)), (Permutation (selsort l gv1) (selsort l n1)), (Permutation (selsort l gv1) (selsort l n0))
(Permutation (selsort l gv1) (l0 ++ l0)), (Permutation (selsort l gv1) (l0 ++ l)), (Permutation (selsort l gv1) (l ++ l0)), (Permutation (selsort l gv1) (l ++ l)), (Permutation (selsort l gv1) []), (Permutation (l0 ++ l0) l0), (Permutation (l0 ++ l0) l), (Permutation (l0 ++ l0) (n1 :: l0)), (Permutation (l0 ++ l0) (n1 :: l)), (Permutation (l0 ++ l0) (n0 :: l0))
(Permutation (l0 ++ l0) (n0 :: l)), (Permutation (l0 ++ l0) (gv1 :: l0)), (Permutation (l0 ++ l0) (gv1 :: l)), (Permutation (l0 ++ l0) (selection_sort l0)), (Permutation (l0 ++ l0) (selection_sort l)), (Permutation (l0 ++ l0) (selsort l0 n1)), (Permutation (l0 ++ l0) (selsort l0 n0)), (Permutation (l0 ++ l0) (selsort l0 gv1)), (Permutation (l0 ++ l0) (selsort l n1)), (Permutation (l0 ++ l0) (selsort l n0))
(Permutation (l0 ++ l0) (selsort l gv1)), (Permutation (l0 ++ l0) (l0 ++ l)), (Permutation (l0 ++ l0) (l ++ l0)), (Permutation (l0 ++ l0) (l ++ l)), (Permutation (l0 ++ l0) []), (Permutation (l0 ++ l) l0), (Permutation (l0 ++ l) l), (Permutation (l0 ++ l) (n1 :: l0)), (Permutation (l0 ++ l) (n1 :: l)), (Permutation (l0 ++ l) (n0 :: l0))
(Permutation (l0 ++ l) (n0 :: l)), (Permutation (l0 ++ l) (gv1 :: l0)), (Permutation (l0 ++ l) (gv1 :: l)), (Permutation (l0 ++ l) (selection_sort l0)), (Permutation (l0 ++ l) (selection_sort l)), (Permutation (l0 ++ l) (selsort l0 n1)), (Permutation (l0 ++ l) (selsort l0 n0)), (Permutation (l0 ++ l) (selsort l0 gv1)), (Permutation (l0 ++ l) (selsort l n1)), (Permutation (l0 ++ l) (selsort l n0))
(Permutation (l0 ++ l) (selsort l gv1)), (Permutation (l0 ++ l) (l0 ++ l0)), (Permutation (l0 ++ l) (l ++ l0)), (Permutation (l0 ++ l) (l ++ l)), (Permutation (l0 ++ l) []), (Permutation (l ++ l0) l0), (Permutation (l ++ l0) l), (Permutation (l ++ l0) (n1 :: l0)), (Permutation (l ++ l0) (n1 :: l)), (Permutation (l ++ l0) (n0 :: l0))
(Permutation (l ++ l0) (n0 :: l)), (Permutation (l ++ l0) (gv1 :: l0)), (Permutation (l ++ l0) (gv1 :: l)), (Permutation (l ++ l0) (selection_sort l0)), (Permutation (l ++ l0) (selection_sort l)), (Permutation (l ++ l0) (selsort l0 n1)), (Permutation (l ++ l0) (selsort l0 n0)), (Permutation (l ++ l0) (selsort l0 gv1)), (Permutation (l ++ l0) (selsort l n1)), (Permutation (l ++ l0) (selsort l n0))
(Permutation (l ++ l0) (selsort l gv1)), (Permutation (l ++ l0) (l0 ++ l0)), (Permutation (l ++ l0) (l0 ++ l)), (Permutation (l ++ l0) (l ++ l)), (Permutation (l ++ l0) []), (Permutation (l ++ l) l0), (Permutation (l ++ l) l), (Permutation (l ++ l) (n1 :: l0)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n0 :: l0))
(Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (gv1 :: l0)), (Permutation (l ++ l) (gv1 :: l)), (Permutation (l ++ l) (selection_sort l0)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort l0 n1)), (Permutation (l ++ l) (selsort l0 n0)), (Permutation (l ++ l) (selsort l0 gv1)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l n0))
(Permutation (l ++ l) (selsort l gv1)), (Permutation (l ++ l) (l0 ++ l0)), (Permutation (l ++ l) (l0 ++ l)), (Permutation (l ++ l) (l ++ l0)), (Permutation (l ++ l) []), (Permutation [] l0), (Permutation [] l), (Permutation [] (n1 :: l0)), (Permutation [] (n1 :: l)), (Permutation [] (n0 :: l0))
(Permutation [] (n0 :: l)), (Permutation [] (gv1 :: l0)), (Permutation [] (gv1 :: l)), (Permutation [] (selection_sort l0)), (Permutation [] (selection_sort l)), (Permutation [] (selsort l0 n1)), (Permutation [] (selsort l0 n0)), (Permutation [] (selsort l0 gv1)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0))
(Permutation [] (selsort l gv1)), (Permutation [] (l0 ++ l0)), (Permutation [] (l0 ++ l)), (Permutation [] (l ++ l0)), (Permutation [] (l ++ l)), (In n1 (n1 :: l0)), (In n1 (n1 :: l)), (In n1 (n0 :: l0)), (In n1 (n0 :: l)), (In n1 (gv1 :: l0))
(In n1 (gv1 :: l)), (In n1 (selection_sort l0)), (In n1 (selection_sort l)), (In n1 (selsort l0 n1)), (In n1 (selsort l0 n0)), (In n1 (selsort l0 gv1)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (selsort l gv1)), (In n1 (l0 ++ l0))
(In n1 (l0 ++ l)), (In n1 (l ++ l0)), (In n1 (l ++ l)), (In n0 (n1 :: l0)), (In n0 (n1 :: l)), (In n0 (n0 :: l0)), (In n0 (n0 :: l)), (In n0 (gv1 :: l0)), (In n0 (gv1 :: l)), (In n0 (selection_sort l0))
(In n0 (selection_sort l)), (In n0 (selsort l0 n1)), (In n0 (selsort l0 n0)), (In n0 (selsort l0 gv1)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (selsort l gv1)), (In n0 (l0 ++ l0)), (In n0 (l0 ++ l)), (In n0 (l ++ l0))
(In n0 (l ++ l)), (In gv1 (n1 :: l0)), (In gv1 (n1 :: l)), (In gv1 (n0 :: l0)), (In gv1 (n0 :: l)), (In gv1 (gv1 :: l0)), (In gv1 (gv1 :: l)), (In gv1 (selection_sort l0)), (In gv1 (selection_sort l)), (In gv1 (selsort l0 n1))
(In gv1 (selsort l0 n0)), (In gv1 (selsort l0 gv1)), (In gv1 (selsort l n1)), (In gv1 (selsort l n0)), (In gv1 (selsort l gv1)), (In gv1 (l0 ++ l0)), (In gv1 (l0 ++ l)), (In gv1 (l ++ l0)), (In gv1 (l ++ l)), (In (length l0) l0)
(In (length l0) l), (In (length l0) (n1 :: l0)), (In (length l0) (n1 :: l)), (In (length l0) (n0 :: l0)), (In (length l0) (n0 :: l)), (In (length l0) (gv1 :: l0)), (In (length l0) (gv1 :: l)), (In (length l0) (selection_sort l0)), (In (length l0) (selection_sort l)), (In (length l0) (selsort l0 n1))
(In (length l0) (selsort l0 n0)), (In (length l0) (selsort l0 gv1)), (In (length l0) (selsort l n1)), (In (length l0) (selsort l n0)), (In (length l0) (selsort l gv1)), (In (length l0) (l0 ++ l0)), (In (length l0) (l0 ++ l)), (In (length l0) (l ++ l0)), (In (length l0) (l ++ l)), (In (length l) l0)
(In (length l) l), (In (length l) (n1 :: l0)), (In (length l) (n1 :: l)), (In (length l) (n0 :: l0)), (In (length l) (n0 :: l)), (In (length l) (gv1 :: l0)), (In (length l) (gv1 :: l)), (In (length l) (selection_sort l0)), (In (length l) (selection_sort l)), (In (length l) (selsort l0 n1))
(In (length l) (selsort l0 n0)), (In (length l) (selsort l0 gv1)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (selsort l gv1)), (In (length l) (l0 ++ l0)), (In (length l) (l0 ++ l)), (In (length l) (l ++ l0)), (In (length l) (l ++ l)), (n1 < length l0)
(n1 < length l), (n0 < length l0), (n0 < length l), (gv1 < length l0), (gv1 < length l), (length l0 < n1), (length l0 < n0), (length l0 < gv1), (length l0 < length l), (length l < n1)
(length l < n0), (length l < gv1), (length l < length l0), (n1 <= length l0), (n1 <= length l), (n0 <= length l0), (n0 <= length l), (gv1 <= length l0), (gv1 <= length l), (length l0 <= n1)
(length l0 <= n0), (length l0 <= gv1), (length l0 <= length l), (length l <= n1), (length l <= n0), (length l <= gv1), (length l <= length l0), (~ n1 <=* l0), (~ n1 <=* l), (~ n0 <=* l0)
(~ n0 <=* l), (~ gv1 <=* l0), (~ gv1 <=* l), (~ sorted l0), (~ sorted l), (~ Permutation l0 l0), (~ Permutation l0 l), (~ Permutation l l0), (~ Permutation l l), (~ In n1 l0)
(~ In n1 l), (~ In n0 l0), (~ In n0 l), (~ In gv1 l0), (~ In gv1 l), (~ n1 < n1), (~ n1 < n0), (~ n1 < gv1), (~ n0 < n1), (~ n0 < n0)
(~ n0 < gv1), (~ gv1 < n1), (~ gv1 < n0), (~ gv1 < gv1), (~ n1 <= n1), (~ n1 <= n0), (~ n1 <= gv1), (~ n0 <= n1), (~ n0 <= n0), (~ n0 <= gv1)
(~ gv1 <= n1), (~ gv1 <= n0), (~ gv1 <= gv1), (n1 <> n1), (n1 <> n0), (n1 <> gv1), (n0 <> n1), (n0 <> n0), (n0 <> gv1), (gv1 <> n1)
(gv1 <> n0), (gv1 <> gv1), (l0 <> l0), (l0 <> l), (l <> l0), (l <> l), (None = Some l0), (None = Some l), (n1 :: l0 = l0), (n1 :: l0 = l)
(n1 :: l0 = selection_sort l0), (n1 :: l0 = selection_sort l), (n1 :: l0 = selsort l0 n1), (n1 :: l0 = selsort l0 n0), (n1 :: l0 = selsort l0 gv1), (n1 :: l0 = selsort l n1), (n1 :: l0 = selsort l n0), (n1 :: l0 = selsort l gv1), (n1 :: l0 = l0 ++ l0), (n1 :: l0 = l0 ++ l)
(n1 :: l0 = l ++ l0), (n1 :: l0 = l ++ l), (n1 :: l0 = []), (n1 :: l = l0), (n1 :: l = l), (n1 :: l = selection_sort l0), (n1 :: l = selection_sort l), (n1 :: l = selsort l0 n1), (n1 :: l = selsort l0 n0), (n1 :: l = selsort l0 gv1)
(n1 :: l = selsort l n1), (n1 :: l = selsort l n0), (n1 :: l = selsort l gv1), (n1 :: l = l0 ++ l0), (n1 :: l = l0 ++ l), (n1 :: l = l ++ l0), (n1 :: l = l ++ l), (n1 :: l = []), (n0 :: l0 = l0), (n0 :: l0 = l)
(n0 :: l0 = selection_sort l0), (n0 :: l0 = selection_sort l), (n0 :: l0 = selsort l0 n1), (n0 :: l0 = selsort l0 n0), (n0 :: l0 = selsort l0 gv1), (n0 :: l0 = selsort l n1), (n0 :: l0 = selsort l n0), (n0 :: l0 = selsort l gv1), (n0 :: l0 = l0 ++ l0), (n0 :: l0 = l0 ++ l)
(n0 :: l0 = l ++ l0), (n0 :: l0 = l ++ l), (n0 :: l0 = []), (n0 :: l = l0), (n0 :: l = l), (n0 :: l = selection_sort l0), (n0 :: l = selection_sort l), (n0 :: l = selsort l0 n1), (n0 :: l = selsort l0 n0), (n0 :: l = selsort l0 gv1)
(n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l gv1), (n0 :: l = l0 ++ l0), (n0 :: l = l0 ++ l), (n0 :: l = l ++ l0), (n0 :: l = l ++ l), (n0 :: l = []), (gv1 :: l0 = l0), (gv1 :: l0 = l)
(gv1 :: l0 = selection_sort l0), (gv1 :: l0 = selection_sort l), (gv1 :: l0 = selsort l0 n1), (gv1 :: l0 = selsort l0 n0), (gv1 :: l0 = selsort l0 gv1), (gv1 :: l0 = selsort l n1), (gv1 :: l0 = selsort l n0), (gv1 :: l0 = selsort l gv1), (gv1 :: l0 = l0 ++ l0), (gv1 :: l0 = l0 ++ l)
(gv1 :: l0 = l ++ l0), (gv1 :: l0 = l ++ l), (gv1 :: l0 = []), (gv1 :: l = l0), (gv1 :: l = l), (gv1 :: l = selection_sort l0), (gv1 :: l = selection_sort l), (gv1 :: l = selsort l0 n1), (gv1 :: l = selsort l0 n0), (gv1 :: l = selsort l0 gv1)
(gv1 :: l = selsort l n1), (gv1 :: l = selsort l n0), (gv1 :: l = selsort l gv1), (gv1 :: l = l0 ++ l0), (gv1 :: l = l0 ++ l), (gv1 :: l = l ++ l0), (gv1 :: l = l ++ l), (gv1 :: l = []), (selection_sort l0 = l0), (selection_sort l0 = l)
(selection_sort l0 = l0 ++ l0), (selection_sort l0 = l0 ++ l), (selection_sort l0 = l ++ l0), (selection_sort l0 = l ++ l), (selection_sort l = l0), (selection_sort l = l), (selection_sort l = l0 ++ l0), (selection_sort l = l0 ++ l), (selection_sort l = l ++ l0), (selection_sort l = l ++ l)
(selsort l0 n1 = l0), (selsort l0 n1 = l), (selsort l0 n1 = selection_sort l0), (selsort l0 n1 = selection_sort l), (selsort l0 n1 = l0 ++ l0), (selsort l0 n1 = l0 ++ l), (selsort l0 n1 = l ++ l0), (selsort l0 n1 = l ++ l), (selsort l0 n0 = l0), (selsort l0 n0 = l)
(selsort l0 n0 = selection_sort l0), (selsort l0 n0 = selection_sort l), (selsort l0 n0 = l0 ++ l0), (selsort l0 n0 = l0 ++ l), (selsort l0 n0 = l ++ l0), (selsort l0 n0 = l ++ l), (selsort l0 gv1 = l0), (selsort l0 gv1 = l), (selsort l0 gv1 = selection_sort l0), (selsort l0 gv1 = selection_sort l)
(selsort l0 gv1 = l0 ++ l0), (selsort l0 gv1 = l0 ++ l), (selsort l0 gv1 = l ++ l0), (selsort l0 gv1 = l ++ l), (selsort l n1 = l0), (selsort l n1 = l), (selsort l n1 = selection_sort l0), (selsort l n1 = selection_sort l), (selsort l n1 = l0 ++ l0), (selsort l n1 = l0 ++ l)
(selsort l n1 = l ++ l0), (selsort l n1 = l ++ l), (selsort l n0 = l0), (selsort l n0 = l), (selsort l n0 = selection_sort l0), (selsort l n0 = selection_sort l), (selsort l n0 = l0 ++ l0), (selsort l n0 = l0 ++ l), (selsort l n0 = l ++ l0), (selsort l n0 = l ++ l)
(selsort l gv1 = l0), (selsort l gv1 = l), (selsort l gv1 = selection_sort l0), (selsort l gv1 = selection_sort l), (selsort l gv1 = l0 ++ l0), (selsort l gv1 = l0 ++ l), (selsort l gv1 = l ++ l0), (selsort l gv1 = l ++ l), (l0 ++ l0 = l0), (l0 ++ l0 = l)
(l0 ++ l = l0), (l0 ++ l = l), (l ++ l0 = l0), (l ++ l0 = l), (l ++ l = l0), (l ++ l = l), ([] = l0), ([] = l), ([] = selection_sort l0), ([] = selection_sort l)
([] = selsort l0 n1), ([] = selsort l0 n0), ([] = selsort l0 gv1), ([] = selsort l n1), ([] = selsort l n0), ([] = selsort l gv1), ([] = l0 ++ l0), ([] = l0 ++ l), ([] = l ++ l0), ([] = l ++ l)
(None = Some n1), (None = Some n0), (None = Some gv1), ((n1, l0) = select n1 l0), ((n1, l0) = select n1 l), ((n1, l0) = select n0 l0), ((n1, l0) = select n0 l), ((n1, l0) = select gv1 l0), ((n1, l0) = select gv1 l), ((n1, l) = select n1 l0)
((n1, l) = select n1 l), ((n1, l) = select n0 l0), ((n1, l) = select n0 l), ((n1, l) = select gv1 l0), ((n1, l) = select gv1 l), ((n0, l0) = select n1 l0), ((n0, l0) = select n1 l), ((n0, l0) = select n0 l0), ((n0, l0) = select n0 l), ((n0, l0) = select gv1 l0)
((n0, l0) = select gv1 l), ((n0, l) = select n1 l0), ((n0, l) = select n1 l), ((n0, l) = select n0 l0), ((n0, l) = select n0 l), ((n0, l) = select gv1 l0), ((n0, l) = select gv1 l), ((gv1, l0) = select n1 l0), ((gv1, l0) = select n1 l), ((gv1, l0) = select n0 l0)
((gv1, l0) = select n0 l), ((gv1, l0) = select gv1 l0), ((gv1, l0) = select gv1 l), ((gv1, l) = select n1 l0), ((gv1, l) = select n1 l), ((gv1, l) = select n0 l0), ((gv1, l) = select n0 l), ((gv1, l) = select gv1 l0), ((gv1, l) = select gv1 l), (length l0 = n1)
(length l0 = n0), (length l0 = gv1), (length l = n1), (length l = n0), (length l = gv1)

Label: 2 (2)
(n1 <=* l), (n1 <=* l0), (n0 <=* l), (n0 <=* l0), (gv0 <=* l), (gv0 <=* l0), (sorted l), (sorted l0), (Permutation l l), (Permutation l l0)
(Permutation l0 l), (Permutation l0 l0), (In n1 l), (In n1 l0), (In n0 l), (In n0 l0), (In gv0 l), (In gv0 l0), (n1 < n1), (n1 < n0)
(n1 < gv0), (n0 < n1), (n0 < n0), (n0 < gv0), (gv0 < n1), (gv0 < n0), (gv0 < gv0), (n1 <= n1), (n1 <= n0), (n1 <= gv0)
(n0 <= n1), (n0 <= n0), (n0 <= gv0), (gv0 <= n1), (gv0 <= n0), (gv0 <= gv0), (l = l), (l = l0), (l0 = l), (l0 = l0)
(n1 = n1), (n1 = n0), (n1 = gv0), (n0 = n1), (n0 = n0), (n0 = gv0), (gv0 = n1), (gv0 = n0), (gv0 = gv0), (n1 <=* n1 :: l)
(n1 <=* n1 :: l0), (n1 <=* n0 :: l), (n1 <=* n0 :: l0), (n1 <=* gv0 :: l), (n1 <=* gv0 :: l0), (n1 <=* selection_sort l), (n1 <=* selection_sort l0), (n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* selsort l gv0)
(n1 <=* selsort l0 n1), (n1 <=* selsort l0 n0), (n1 <=* selsort l0 gv0), (n1 <=* l ++ l), (n1 <=* l ++ l0), (n1 <=* l0 ++ l), (n1 <=* l0 ++ l0), (n1 <=* []), (n0 <=* n1 :: l), (n0 <=* n1 :: l0)
(n0 <=* n0 :: l), (n0 <=* n0 :: l0), (n0 <=* gv0 :: l), (n0 <=* gv0 :: l0), (n0 <=* selection_sort l), (n0 <=* selection_sort l0), (n0 <=* selsort l n1), (n0 <=* selsort l n0), (n0 <=* selsort l gv0), (n0 <=* selsort l0 n1)
(n0 <=* selsort l0 n0), (n0 <=* selsort l0 gv0), (n0 <=* l ++ l), (n0 <=* l ++ l0), (n0 <=* l0 ++ l), (n0 <=* l0 ++ l0), (n0 <=* []), (gv0 <=* n1 :: l), (gv0 <=* n1 :: l0), (gv0 <=* n0 :: l)
(gv0 <=* n0 :: l0), (gv0 <=* gv0 :: l), (gv0 <=* gv0 :: l0), (gv0 <=* selection_sort l), (gv0 <=* selection_sort l0), (gv0 <=* selsort l n1), (gv0 <=* selsort l n0), (gv0 <=* selsort l gv0), (gv0 <=* selsort l0 n1), (gv0 <=* selsort l0 n0)
(gv0 <=* selsort l0 gv0), (gv0 <=* l ++ l), (gv0 <=* l ++ l0), (gv0 <=* l0 ++ l), (gv0 <=* l0 ++ l0), (gv0 <=* []), (length l <=* l), (length l <=* l0), (length l <=* n1 :: l), (length l <=* n1 :: l0)
(length l <=* n0 :: l), (length l <=* n0 :: l0), (length l <=* gv0 :: l), (length l <=* gv0 :: l0), (length l <=* selection_sort l), (length l <=* selection_sort l0), (length l <=* selsort l n1), (length l <=* selsort l n0), (length l <=* selsort l gv0), (length l <=* selsort l0 n1)
(length l <=* selsort l0 n0), (length l <=* selsort l0 gv0), (length l <=* l ++ l), (length l <=* l ++ l0), (length l <=* l0 ++ l), (length l <=* l0 ++ l0), (length l <=* []), (length l0 <=* l), (length l0 <=* l0), (length l0 <=* n1 :: l)
(length l0 <=* n1 :: l0), (length l0 <=* n0 :: l), (length l0 <=* n0 :: l0), (length l0 <=* gv0 :: l), (length l0 <=* gv0 :: l0), (length l0 <=* selection_sort l), (length l0 <=* selection_sort l0), (length l0 <=* selsort l n1), (length l0 <=* selsort l n0), (length l0 <=* selsort l gv0)
(length l0 <=* selsort l0 n1), (length l0 <=* selsort l0 n0), (length l0 <=* selsort l0 gv0), (length l0 <=* l ++ l), (length l0 <=* l ++ l0), (length l0 <=* l0 ++ l), (length l0 <=* l0 ++ l0), (length l0 <=* []), (sorted (n1 :: l)), (sorted (n1 :: l0))
(sorted (n0 :: l)), (sorted (n0 :: l0)), (sorted (gv0 :: l)), (sorted (gv0 :: l0)), (sorted (selection_sort l)), (sorted (selection_sort l0)), (sorted (selsort l n1)), (sorted (selsort l n0)), (sorted (selsort l gv0)), (sorted (selsort l0 n1))
(sorted (selsort l0 n0)), (sorted (selsort l0 gv0)), (sorted (l ++ l)), (sorted (l ++ l0)), (sorted (l0 ++ l)), (sorted (l0 ++ l0)), (sorted []), (Permutation l (n1 :: l)), (Permutation l (n1 :: l0)), (Permutation l (n0 :: l))
(Permutation l (n0 :: l0)), (Permutation l (gv0 :: l)), (Permutation l (gv0 :: l0)), (Permutation l (selection_sort l)), (Permutation l (selection_sort l0)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l gv0)), (Permutation l (selsort l0 n1)), (Permutation l (selsort l0 n0))
(Permutation l (selsort l0 gv0)), (Permutation l (l ++ l)), (Permutation l (l ++ l0)), (Permutation l (l0 ++ l)), (Permutation l (l0 ++ l0)), (Permutation l []), (Permutation l0 (n1 :: l)), (Permutation l0 (n1 :: l0)), (Permutation l0 (n0 :: l)), (Permutation l0 (n0 :: l0))
(Permutation l0 (gv0 :: l)), (Permutation l0 (gv0 :: l0)), (Permutation l0 (selection_sort l)), (Permutation l0 (selection_sort l0)), (Permutation l0 (selsort l n1)), (Permutation l0 (selsort l n0)), (Permutation l0 (selsort l gv0)), (Permutation l0 (selsort l0 n1)), (Permutation l0 (selsort l0 n0)), (Permutation l0 (selsort l0 gv0))
(Permutation l0 (l ++ l)), (Permutation l0 (l ++ l0)), (Permutation l0 (l0 ++ l)), (Permutation l0 (l0 ++ l0)), (Permutation l0 []), (Permutation (n1 :: l) l), (Permutation (n1 :: l) l0), (Permutation (n1 :: l) (n1 :: l0)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: l0))
(Permutation (n1 :: l) (gv0 :: l)), (Permutation (n1 :: l) (gv0 :: l0)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort l0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l gv0)), (Permutation (n1 :: l) (selsort l0 n1)), (Permutation (n1 :: l) (selsort l0 n0)), (Permutation (n1 :: l) (selsort l0 gv0))
(Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ l0)), (Permutation (n1 :: l) (l0 ++ l)), (Permutation (n1 :: l) (l0 ++ l0)), (Permutation (n1 :: l) []), (Permutation (n1 :: l0) l), (Permutation (n1 :: l0) l0), (Permutation (n1 :: l0) (n1 :: l)), (Permutation (n1 :: l0) (n0 :: l)), (Permutation (n1 :: l0) (n0 :: l0))
(Permutation (n1 :: l0) (gv0 :: l)), (Permutation (n1 :: l0) (gv0 :: l0)), (Permutation (n1 :: l0) (selection_sort l)), (Permutation (n1 :: l0) (selection_sort l0)), (Permutation (n1 :: l0) (selsort l n1)), (Permutation (n1 :: l0) (selsort l n0)), (Permutation (n1 :: l0) (selsort l gv0)), (Permutation (n1 :: l0) (selsort l0 n1)), (Permutation (n1 :: l0) (selsort l0 n0)), (Permutation (n1 :: l0) (selsort l0 gv0))
(Permutation (n1 :: l0) (l ++ l)), (Permutation (n1 :: l0) (l ++ l0)), (Permutation (n1 :: l0) (l0 ++ l)), (Permutation (n1 :: l0) (l0 ++ l0)), (Permutation (n1 :: l0) []), (Permutation (n0 :: l) l), (Permutation (n0 :: l) l0), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: l0)), (Permutation (n0 :: l) (n0 :: l0))
(Permutation (n0 :: l) (gv0 :: l)), (Permutation (n0 :: l) (gv0 :: l0)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort l0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l gv0)), (Permutation (n0 :: l) (selsort l0 n1)), (Permutation (n0 :: l) (selsort l0 n0)), (Permutation (n0 :: l) (selsort l0 gv0))
(Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ l0)), (Permutation (n0 :: l) (l0 ++ l)), (Permutation (n0 :: l) (l0 ++ l0)), (Permutation (n0 :: l) []), (Permutation (n0 :: l0) l), (Permutation (n0 :: l0) l0), (Permutation (n0 :: l0) (n1 :: l)), (Permutation (n0 :: l0) (n1 :: l0)), (Permutation (n0 :: l0) (n0 :: l))
(Permutation (n0 :: l0) (gv0 :: l)), (Permutation (n0 :: l0) (gv0 :: l0)), (Permutation (n0 :: l0) (selection_sort l)), (Permutation (n0 :: l0) (selection_sort l0)), (Permutation (n0 :: l0) (selsort l n1)), (Permutation (n0 :: l0) (selsort l n0)), (Permutation (n0 :: l0) (selsort l gv0)), (Permutation (n0 :: l0) (selsort l0 n1)), (Permutation (n0 :: l0) (selsort l0 n0)), (Permutation (n0 :: l0) (selsort l0 gv0))
(Permutation (n0 :: l0) (l ++ l)), (Permutation (n0 :: l0) (l ++ l0)), (Permutation (n0 :: l0) (l0 ++ l)), (Permutation (n0 :: l0) (l0 ++ l0)), (Permutation (n0 :: l0) []), (Permutation (gv0 :: l) l), (Permutation (gv0 :: l) l0), (Permutation (gv0 :: l) (n1 :: l)), (Permutation (gv0 :: l) (n1 :: l0)), (Permutation (gv0 :: l) (n0 :: l))
(Permutation (gv0 :: l) (n0 :: l0)), (Permutation (gv0 :: l) (gv0 :: l0)), (Permutation (gv0 :: l) (selection_sort l)), (Permutation (gv0 :: l) (selection_sort l0)), (Permutation (gv0 :: l) (selsort l n1)), (Permutation (gv0 :: l) (selsort l n0)), (Permutation (gv0 :: l) (selsort l gv0)), (Permutation (gv0 :: l) (selsort l0 n1)), (Permutation (gv0 :: l) (selsort l0 n0)), (Permutation (gv0 :: l) (selsort l0 gv0))
(Permutation (gv0 :: l) (l ++ l)), (Permutation (gv0 :: l) (l ++ l0)), (Permutation (gv0 :: l) (l0 ++ l)), (Permutation (gv0 :: l) (l0 ++ l0)), (Permutation (gv0 :: l) []), (Permutation (gv0 :: l0) l), (Permutation (gv0 :: l0) l0), (Permutation (gv0 :: l0) (n1 :: l)), (Permutation (gv0 :: l0) (n1 :: l0)), (Permutation (gv0 :: l0) (n0 :: l))
(Permutation (gv0 :: l0) (n0 :: l0)), (Permutation (gv0 :: l0) (gv0 :: l)), (Permutation (gv0 :: l0) (selection_sort l)), (Permutation (gv0 :: l0) (selection_sort l0)), (Permutation (gv0 :: l0) (selsort l n1)), (Permutation (gv0 :: l0) (selsort l n0)), (Permutation (gv0 :: l0) (selsort l gv0)), (Permutation (gv0 :: l0) (selsort l0 n1)), (Permutation (gv0 :: l0) (selsort l0 n0)), (Permutation (gv0 :: l0) (selsort l0 gv0))
(Permutation (gv0 :: l0) (l ++ l)), (Permutation (gv0 :: l0) (l ++ l0)), (Permutation (gv0 :: l0) (l0 ++ l)), (Permutation (gv0 :: l0) (l0 ++ l0)), (Permutation (gv0 :: l0) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) l0), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: l0)), (Permutation (selection_sort l) (n0 :: l))
(Permutation (selection_sort l) (n0 :: l0)), (Permutation (selection_sort l) (gv0 :: l)), (Permutation (selection_sort l) (gv0 :: l0)), (Permutation (selection_sort l) (selection_sort l0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l gv0)), (Permutation (selection_sort l) (selsort l0 n1)), (Permutation (selection_sort l) (selsort l0 n0)), (Permutation (selection_sort l) (selsort l0 gv0))
(Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ l0)), (Permutation (selection_sort l) (l0 ++ l)), (Permutation (selection_sort l) (l0 ++ l0)), (Permutation (selection_sort l) []), (Permutation (selection_sort l0) l), (Permutation (selection_sort l0) l0), (Permutation (selection_sort l0) (n1 :: l)), (Permutation (selection_sort l0) (n1 :: l0)), (Permutation (selection_sort l0) (n0 :: l))
(Permutation (selection_sort l0) (n0 :: l0)), (Permutation (selection_sort l0) (gv0 :: l)), (Permutation (selection_sort l0) (gv0 :: l0)), (Permutation (selection_sort l0) (selection_sort l)), (Permutation (selection_sort l0) (selsort l n1)), (Permutation (selection_sort l0) (selsort l n0)), (Permutation (selection_sort l0) (selsort l gv0)), (Permutation (selection_sort l0) (selsort l0 n1)), (Permutation (selection_sort l0) (selsort l0 n0)), (Permutation (selection_sort l0) (selsort l0 gv0))
(Permutation (selection_sort l0) (l ++ l)), (Permutation (selection_sort l0) (l ++ l0)), (Permutation (selection_sort l0) (l0 ++ l)), (Permutation (selection_sort l0) (l0 ++ l0)), (Permutation (selection_sort l0) []), (Permutation (selsort l n1) l), (Permutation (selsort l n1) l0), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: l0)), (Permutation (selsort l n1) (n0 :: l))
(Permutation (selsort l n1) (n0 :: l0)), (Permutation (selsort l n1) (gv0 :: l)), (Permutation (selsort l n1) (gv0 :: l0)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort l0)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l gv0)), (Permutation (selsort l n1) (selsort l0 n1)), (Permutation (selsort l n1) (selsort l0 n0)), (Permutation (selsort l n1) (selsort l0 gv0))
(Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ l0)), (Permutation (selsort l n1) (l0 ++ l)), (Permutation (selsort l n1) (l0 ++ l0)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) l), (Permutation (selsort l n0) l0), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: l0)), (Permutation (selsort l n0) (n0 :: l))
(Permutation (selsort l n0) (n0 :: l0)), (Permutation (selsort l n0) (gv0 :: l)), (Permutation (selsort l n0) (gv0 :: l0)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort l0)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l gv0)), (Permutation (selsort l n0) (selsort l0 n1)), (Permutation (selsort l n0) (selsort l0 n0)), (Permutation (selsort l n0) (selsort l0 gv0))
(Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ l0)), (Permutation (selsort l n0) (l0 ++ l)), (Permutation (selsort l n0) (l0 ++ l0)), (Permutation (selsort l n0) []), (Permutation (selsort l gv0) l), (Permutation (selsort l gv0) l0), (Permutation (selsort l gv0) (n1 :: l)), (Permutation (selsort l gv0) (n1 :: l0)), (Permutation (selsort l gv0) (n0 :: l))
(Permutation (selsort l gv0) (n0 :: l0)), (Permutation (selsort l gv0) (gv0 :: l)), (Permutation (selsort l gv0) (gv0 :: l0)), (Permutation (selsort l gv0) (selection_sort l)), (Permutation (selsort l gv0) (selection_sort l0)), (Permutation (selsort l gv0) (selsort l n1)), (Permutation (selsort l gv0) (selsort l n0)), (Permutation (selsort l gv0) (selsort l0 n1)), (Permutation (selsort l gv0) (selsort l0 n0)), (Permutation (selsort l gv0) (selsort l0 gv0))
(Permutation (selsort l gv0) (l ++ l)), (Permutation (selsort l gv0) (l ++ l0)), (Permutation (selsort l gv0) (l0 ++ l)), (Permutation (selsort l gv0) (l0 ++ l0)), (Permutation (selsort l gv0) []), (Permutation (selsort l0 n1) l), (Permutation (selsort l0 n1) l0), (Permutation (selsort l0 n1) (n1 :: l)), (Permutation (selsort l0 n1) (n1 :: l0)), (Permutation (selsort l0 n1) (n0 :: l))
(Permutation (selsort l0 n1) (n0 :: l0)), (Permutation (selsort l0 n1) (gv0 :: l)), (Permutation (selsort l0 n1) (gv0 :: l0)), (Permutation (selsort l0 n1) (selection_sort l)), (Permutation (selsort l0 n1) (selection_sort l0)), (Permutation (selsort l0 n1) (selsort l n1)), (Permutation (selsort l0 n1) (selsort l n0)), (Permutation (selsort l0 n1) (selsort l gv0)), (Permutation (selsort l0 n1) (selsort l0 n0)), (Permutation (selsort l0 n1) (selsort l0 gv0))
(Permutation (selsort l0 n1) (l ++ l)), (Permutation (selsort l0 n1) (l ++ l0)), (Permutation (selsort l0 n1) (l0 ++ l)), (Permutation (selsort l0 n1) (l0 ++ l0)), (Permutation (selsort l0 n1) []), (Permutation (selsort l0 n0) l), (Permutation (selsort l0 n0) l0), (Permutation (selsort l0 n0) (n1 :: l)), (Permutation (selsort l0 n0) (n1 :: l0)), (Permutation (selsort l0 n0) (n0 :: l))
(Permutation (selsort l0 n0) (n0 :: l0)), (Permutation (selsort l0 n0) (gv0 :: l)), (Permutation (selsort l0 n0) (gv0 :: l0)), (Permutation (selsort l0 n0) (selection_sort l)), (Permutation (selsort l0 n0) (selection_sort l0)), (Permutation (selsort l0 n0) (selsort l n1)), (Permutation (selsort l0 n0) (selsort l n0)), (Permutation (selsort l0 n0) (selsort l gv0)), (Permutation (selsort l0 n0) (selsort l0 n1)), (Permutation (selsort l0 n0) (selsort l0 gv0))
(Permutation (selsort l0 n0) (l ++ l)), (Permutation (selsort l0 n0) (l ++ l0)), (Permutation (selsort l0 n0) (l0 ++ l)), (Permutation (selsort l0 n0) (l0 ++ l0)), (Permutation (selsort l0 n0) []), (Permutation (selsort l0 gv0) l), (Permutation (selsort l0 gv0) l0), (Permutation (selsort l0 gv0) (n1 :: l)), (Permutation (selsort l0 gv0) (n1 :: l0)), (Permutation (selsort l0 gv0) (n0 :: l))
(Permutation (selsort l0 gv0) (n0 :: l0)), (Permutation (selsort l0 gv0) (gv0 :: l)), (Permutation (selsort l0 gv0) (gv0 :: l0)), (Permutation (selsort l0 gv0) (selection_sort l)), (Permutation (selsort l0 gv0) (selection_sort l0)), (Permutation (selsort l0 gv0) (selsort l n1)), (Permutation (selsort l0 gv0) (selsort l n0)), (Permutation (selsort l0 gv0) (selsort l gv0)), (Permutation (selsort l0 gv0) (selsort l0 n1)), (Permutation (selsort l0 gv0) (selsort l0 n0))
(Permutation (selsort l0 gv0) (l ++ l)), (Permutation (selsort l0 gv0) (l ++ l0)), (Permutation (selsort l0 gv0) (l0 ++ l)), (Permutation (selsort l0 gv0) (l0 ++ l0)), (Permutation (selsort l0 gv0) []), (Permutation (l ++ l) l), (Permutation (l ++ l) l0), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: l0)), (Permutation (l ++ l) (n0 :: l))
(Permutation (l ++ l) (n0 :: l0)), (Permutation (l ++ l) (gv0 :: l)), (Permutation (l ++ l) (gv0 :: l0)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort l0)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l gv0)), (Permutation (l ++ l) (selsort l0 n1)), (Permutation (l ++ l) (selsort l0 n0))
(Permutation (l ++ l) (selsort l0 gv0)), (Permutation (l ++ l) (l ++ l0)), (Permutation (l ++ l) (l0 ++ l)), (Permutation (l ++ l) (l0 ++ l0)), (Permutation (l ++ l) []), (Permutation (l ++ l0) l), (Permutation (l ++ l0) l0), (Permutation (l ++ l0) (n1 :: l)), (Permutation (l ++ l0) (n1 :: l0)), (Permutation (l ++ l0) (n0 :: l))
(Permutation (l ++ l0) (n0 :: l0)), (Permutation (l ++ l0) (gv0 :: l)), (Permutation (l ++ l0) (gv0 :: l0)), (Permutation (l ++ l0) (selection_sort l)), (Permutation (l ++ l0) (selection_sort l0)), (Permutation (l ++ l0) (selsort l n1)), (Permutation (l ++ l0) (selsort l n0)), (Permutation (l ++ l0) (selsort l gv0)), (Permutation (l ++ l0) (selsort l0 n1)), (Permutation (l ++ l0) (selsort l0 n0))
(Permutation (l ++ l0) (selsort l0 gv0)), (Permutation (l ++ l0) (l ++ l)), (Permutation (l ++ l0) (l0 ++ l)), (Permutation (l ++ l0) (l0 ++ l0)), (Permutation (l ++ l0) []), (Permutation (l0 ++ l) l), (Permutation (l0 ++ l) l0), (Permutation (l0 ++ l) (n1 :: l)), (Permutation (l0 ++ l) (n1 :: l0)), (Permutation (l0 ++ l) (n0 :: l))
(Permutation (l0 ++ l) (n0 :: l0)), (Permutation (l0 ++ l) (gv0 :: l)), (Permutation (l0 ++ l) (gv0 :: l0)), (Permutation (l0 ++ l) (selection_sort l)), (Permutation (l0 ++ l) (selection_sort l0)), (Permutation (l0 ++ l) (selsort l n1)), (Permutation (l0 ++ l) (selsort l n0)), (Permutation (l0 ++ l) (selsort l gv0)), (Permutation (l0 ++ l) (selsort l0 n1)), (Permutation (l0 ++ l) (selsort l0 n0))
(Permutation (l0 ++ l) (selsort l0 gv0)), (Permutation (l0 ++ l) (l ++ l)), (Permutation (l0 ++ l) (l ++ l0)), (Permutation (l0 ++ l) (l0 ++ l0)), (Permutation (l0 ++ l) []), (Permutation (l0 ++ l0) l), (Permutation (l0 ++ l0) l0), (Permutation (l0 ++ l0) (n1 :: l)), (Permutation (l0 ++ l0) (n1 :: l0)), (Permutation (l0 ++ l0) (n0 :: l))
(Permutation (l0 ++ l0) (n0 :: l0)), (Permutation (l0 ++ l0) (gv0 :: l)), (Permutation (l0 ++ l0) (gv0 :: l0)), (Permutation (l0 ++ l0) (selection_sort l)), (Permutation (l0 ++ l0) (selection_sort l0)), (Permutation (l0 ++ l0) (selsort l n1)), (Permutation (l0 ++ l0) (selsort l n0)), (Permutation (l0 ++ l0) (selsort l gv0)), (Permutation (l0 ++ l0) (selsort l0 n1)), (Permutation (l0 ++ l0) (selsort l0 n0))
(Permutation (l0 ++ l0) (selsort l0 gv0)), (Permutation (l0 ++ l0) (l ++ l)), (Permutation (l0 ++ l0) (l ++ l0)), (Permutation (l0 ++ l0) (l0 ++ l)), (Permutation (l0 ++ l0) []), (Permutation [] l), (Permutation [] l0), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: l0)), (Permutation [] (n0 :: l))
(Permutation [] (n0 :: l0)), (Permutation [] (gv0 :: l)), (Permutation [] (gv0 :: l0)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort l0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l gv0)), (Permutation [] (selsort l0 n1)), (Permutation [] (selsort l0 n0))
(Permutation [] (selsort l0 gv0)), (Permutation [] (l ++ l)), (Permutation [] (l ++ l0)), (Permutation [] (l0 ++ l)), (Permutation [] (l0 ++ l0)), (In n1 (n1 :: l)), (In n1 (n1 :: l0)), (In n1 (n0 :: l)), (In n1 (n0 :: l0)), (In n1 (gv0 :: l))
(In n1 (gv0 :: l0)), (In n1 (selection_sort l)), (In n1 (selection_sort l0)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (selsort l gv0)), (In n1 (selsort l0 n1)), (In n1 (selsort l0 n0)), (In n1 (selsort l0 gv0)), (In n1 (l ++ l))
(In n1 (l ++ l0)), (In n1 (l0 ++ l)), (In n1 (l0 ++ l0)), (In n0 (n1 :: l)), (In n0 (n1 :: l0)), (In n0 (n0 :: l)), (In n0 (n0 :: l0)), (In n0 (gv0 :: l)), (In n0 (gv0 :: l0)), (In n0 (selection_sort l))
(In n0 (selection_sort l0)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (selsort l gv0)), (In n0 (selsort l0 n1)), (In n0 (selsort l0 n0)), (In n0 (selsort l0 gv0)), (In n0 (l ++ l)), (In n0 (l ++ l0)), (In n0 (l0 ++ l))
(In n0 (l0 ++ l0)), (In gv0 (n1 :: l)), (In gv0 (n1 :: l0)), (In gv0 (n0 :: l)), (In gv0 (n0 :: l0)), (In gv0 (gv0 :: l)), (In gv0 (gv0 :: l0)), (In gv0 (selection_sort l)), (In gv0 (selection_sort l0)), (In gv0 (selsort l n1))
(In gv0 (selsort l n0)), (In gv0 (selsort l gv0)), (In gv0 (selsort l0 n1)), (In gv0 (selsort l0 n0)), (In gv0 (selsort l0 gv0)), (In gv0 (l ++ l)), (In gv0 (l ++ l0)), (In gv0 (l0 ++ l)), (In gv0 (l0 ++ l0)), (In (length l) l)
(In (length l) l0), (In (length l) (n1 :: l)), (In (length l) (n1 :: l0)), (In (length l) (n0 :: l)), (In (length l) (n0 :: l0)), (In (length l) (gv0 :: l)), (In (length l) (gv0 :: l0)), (In (length l) (selection_sort l)), (In (length l) (selection_sort l0)), (In (length l) (selsort l n1))
(In (length l) (selsort l n0)), (In (length l) (selsort l gv0)), (In (length l) (selsort l0 n1)), (In (length l) (selsort l0 n0)), (In (length l) (selsort l0 gv0)), (In (length l) (l ++ l)), (In (length l) (l ++ l0)), (In (length l) (l0 ++ l)), (In (length l) (l0 ++ l0)), (In (length l0) l)
(In (length l0) l0), (In (length l0) (n1 :: l)), (In (length l0) (n1 :: l0)), (In (length l0) (n0 :: l)), (In (length l0) (n0 :: l0)), (In (length l0) (gv0 :: l)), (In (length l0) (gv0 :: l0)), (In (length l0) (selection_sort l)), (In (length l0) (selection_sort l0)), (In (length l0) (selsort l n1))
(In (length l0) (selsort l n0)), (In (length l0) (selsort l gv0)), (In (length l0) (selsort l0 n1)), (In (length l0) (selsort l0 n0)), (In (length l0) (selsort l0 gv0)), (In (length l0) (l ++ l)), (In (length l0) (l ++ l0)), (In (length l0) (l0 ++ l)), (In (length l0) (l0 ++ l0)), (n1 < length l)
(n1 < length l0), (n0 < length l), (n0 < length l0), (gv0 < length l), (gv0 < length l0), (length l < n1), (length l < n0), (length l < gv0), (length l < length l0), (length l0 < n1)
(length l0 < n0), (length l0 < gv0), (length l0 < length l), (n1 <= length l), (n1 <= length l0), (n0 <= length l), (n0 <= length l0), (gv0 <= length l), (gv0 <= length l0), (length l <= n1)
(length l <= n0), (length l <= gv0), (length l <= length l0), (length l0 <= n1), (length l0 <= n0), (length l0 <= gv0), (length l0 <= length l), (~ n1 <=* l), (~ n1 <=* l0), (~ n0 <=* l)
(~ n0 <=* l0), (~ gv0 <=* l), (~ gv0 <=* l0), (~ sorted l), (~ sorted l0), (~ Permutation l l), (~ Permutation l l0), (~ Permutation l0 l), (~ Permutation l0 l0), (~ In n1 l)
(~ In n1 l0), (~ In n0 l), (~ In n0 l0), (~ In gv0 l), (~ In gv0 l0), (~ n1 < n1), (~ n1 < n0), (~ n1 < gv0), (~ n0 < n1), (~ n0 < n0)
(~ n0 < gv0), (~ gv0 < n1), (~ gv0 < n0), (~ gv0 < gv0), (~ n1 <= n1), (~ n1 <= n0), (~ n1 <= gv0), (~ n0 <= n1), (~ n0 <= n0), (~ n0 <= gv0)
(~ gv0 <= n1), (~ gv0 <= n0), (~ gv0 <= gv0), (l <> l), (l <> l0), (l0 <> l), (l0 <> l0), (n1 <> n1), (n1 <> n0), (n1 <> gv0)
(n0 <> n1), (n0 <> n0), (n0 <> gv0), (gv0 <> n1), (gv0 <> n0), (gv0 <> gv0), (None = Some l), (None = Some l0), (n1 :: l = l), (n1 :: l = l0)
(n1 :: l = selection_sort l), (n1 :: l = selection_sort l0), (n1 :: l = selsort l n1), (n1 :: l = selsort l n0), (n1 :: l = selsort l gv0), (n1 :: l = selsort l0 n1), (n1 :: l = selsort l0 n0), (n1 :: l = selsort l0 gv0), (n1 :: l = l ++ l), (n1 :: l = l ++ l0)
(n1 :: l = l0 ++ l), (n1 :: l = l0 ++ l0), (n1 :: l = []), (n1 :: l0 = l), (n1 :: l0 = l0), (n1 :: l0 = selection_sort l), (n1 :: l0 = selection_sort l0), (n1 :: l0 = selsort l n1), (n1 :: l0 = selsort l n0), (n1 :: l0 = selsort l gv0)
(n1 :: l0 = selsort l0 n1), (n1 :: l0 = selsort l0 n0), (n1 :: l0 = selsort l0 gv0), (n1 :: l0 = l ++ l), (n1 :: l0 = l ++ l0), (n1 :: l0 = l0 ++ l), (n1 :: l0 = l0 ++ l0), (n1 :: l0 = []), (n0 :: l = l), (n0 :: l = l0)
(n0 :: l = selection_sort l), (n0 :: l = selection_sort l0), (n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l gv0), (n0 :: l = selsort l0 n1), (n0 :: l = selsort l0 n0), (n0 :: l = selsort l0 gv0), (n0 :: l = l ++ l), (n0 :: l = l ++ l0)
(n0 :: l = l0 ++ l), (n0 :: l = l0 ++ l0), (n0 :: l = []), (n0 :: l0 = l), (n0 :: l0 = l0), (n0 :: l0 = selection_sort l), (n0 :: l0 = selection_sort l0), (n0 :: l0 = selsort l n1), (n0 :: l0 = selsort l n0), (n0 :: l0 = selsort l gv0)
(n0 :: l0 = selsort l0 n1), (n0 :: l0 = selsort l0 n0), (n0 :: l0 = selsort l0 gv0), (n0 :: l0 = l ++ l), (n0 :: l0 = l ++ l0), (n0 :: l0 = l0 ++ l), (n0 :: l0 = l0 ++ l0), (n0 :: l0 = []), (gv0 :: l = l), (gv0 :: l = l0)
(gv0 :: l = selection_sort l), (gv0 :: l = selection_sort l0), (gv0 :: l = selsort l n1), (gv0 :: l = selsort l n0), (gv0 :: l = selsort l gv0), (gv0 :: l = selsort l0 n1), (gv0 :: l = selsort l0 n0), (gv0 :: l = selsort l0 gv0), (gv0 :: l = l ++ l), (gv0 :: l = l ++ l0)
(gv0 :: l = l0 ++ l), (gv0 :: l = l0 ++ l0), (gv0 :: l = []), (gv0 :: l0 = l), (gv0 :: l0 = l0), (gv0 :: l0 = selection_sort l), (gv0 :: l0 = selection_sort l0), (gv0 :: l0 = selsort l n1), (gv0 :: l0 = selsort l n0), (gv0 :: l0 = selsort l gv0)
(gv0 :: l0 = selsort l0 n1), (gv0 :: l0 = selsort l0 n0), (gv0 :: l0 = selsort l0 gv0), (gv0 :: l0 = l ++ l), (gv0 :: l0 = l ++ l0), (gv0 :: l0 = l0 ++ l), (gv0 :: l0 = l0 ++ l0), (gv0 :: l0 = []), (selection_sort l = l), (selection_sort l = l0)
(selection_sort l = l ++ l), (selection_sort l = l ++ l0), (selection_sort l = l0 ++ l), (selection_sort l = l0 ++ l0), (selection_sort l0 = l), (selection_sort l0 = l0), (selection_sort l0 = l ++ l), (selection_sort l0 = l ++ l0), (selection_sort l0 = l0 ++ l), (selection_sort l0 = l0 ++ l0)
(selsort l n1 = l), (selsort l n1 = l0), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort l0), (selsort l n1 = l ++ l), (selsort l n1 = l ++ l0), (selsort l n1 = l0 ++ l), (selsort l n1 = l0 ++ l0), (selsort l n0 = l), (selsort l n0 = l0)
(selsort l n0 = selection_sort l), (selsort l n0 = selection_sort l0), (selsort l n0 = l ++ l), (selsort l n0 = l ++ l0), (selsort l n0 = l0 ++ l), (selsort l n0 = l0 ++ l0), (selsort l gv0 = l), (selsort l gv0 = l0), (selsort l gv0 = selection_sort l), (selsort l gv0 = selection_sort l0)
(selsort l gv0 = l ++ l), (selsort l gv0 = l ++ l0), (selsort l gv0 = l0 ++ l), (selsort l gv0 = l0 ++ l0), (selsort l0 n1 = l), (selsort l0 n1 = l0), (selsort l0 n1 = selection_sort l), (selsort l0 n1 = selection_sort l0), (selsort l0 n1 = l ++ l), (selsort l0 n1 = l ++ l0)
(selsort l0 n1 = l0 ++ l), (selsort l0 n1 = l0 ++ l0), (selsort l0 n0 = l), (selsort l0 n0 = l0), (selsort l0 n0 = selection_sort l), (selsort l0 n0 = selection_sort l0), (selsort l0 n0 = l ++ l), (selsort l0 n0 = l ++ l0), (selsort l0 n0 = l0 ++ l), (selsort l0 n0 = l0 ++ l0)
(selsort l0 gv0 = l), (selsort l0 gv0 = l0), (selsort l0 gv0 = selection_sort l), (selsort l0 gv0 = selection_sort l0), (selsort l0 gv0 = l ++ l), (selsort l0 gv0 = l ++ l0), (selsort l0 gv0 = l0 ++ l), (selsort l0 gv0 = l0 ++ l0), (l ++ l = l), (l ++ l = l0)
(l ++ l0 = l), (l ++ l0 = l0), (l0 ++ l = l), (l0 ++ l = l0), (l0 ++ l0 = l), (l0 ++ l0 = l0), ([] = l), ([] = l0), ([] = selection_sort l), ([] = selection_sort l0)
([] = selsort l n1), ([] = selsort l n0), ([] = selsort l gv0), ([] = selsort l0 n1), ([] = selsort l0 n0), ([] = selsort l0 gv0), ([] = l ++ l), ([] = l ++ l0), ([] = l0 ++ l), ([] = l0 ++ l0)
(None = Some n1), (None = Some n0), (None = Some gv0), ((n1, l) = select n1 l), ((n1, l) = select n1 l0), ((n1, l) = select n0 l), ((n1, l) = select n0 l0), ((n1, l) = select gv0 l), ((n1, l) = select gv0 l0), ((n1, l0) = select n1 l)
((n1, l0) = select n1 l0), ((n1, l0) = select n0 l), ((n1, l0) = select n0 l0), ((n1, l0) = select gv0 l), ((n1, l0) = select gv0 l0), ((n0, l) = select n1 l), ((n0, l) = select n1 l0), ((n0, l) = select n0 l), ((n0, l) = select n0 l0), ((n0, l) = select gv0 l)
((n0, l) = select gv0 l0), ((n0, l0) = select n1 l), ((n0, l0) = select n1 l0), ((n0, l0) = select n0 l), ((n0, l0) = select n0 l0), ((n0, l0) = select gv0 l), ((n0, l0) = select gv0 l0), ((gv0, l) = select n1 l), ((gv0, l) = select n1 l0), ((gv0, l) = select n0 l)
((gv0, l) = select n0 l0), ((gv0, l) = select gv0 l), ((gv0, l) = select gv0 l0), ((gv0, l0) = select n1 l), ((gv0, l0) = select n1 l0), ((gv0, l0) = select n0 l), ((gv0, l0) = select n0 l0), ((gv0, l0) = select gv0 l), ((gv0, l0) = select gv0 l0), (length l = n1)
(length l = n0), (length l = gv0), (length l0 = n1), (length l0 = n0), (length l0 = gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 54.685 seconds


Label: 0 (0)
(Permutation (n1 :: l0) (n0 :: l)), (Permutation (n0 :: l) (n1 :: l0)), ((n1, l0) = select n0 l)

Label: 1 (1)
(length l = gv1), (length l0 = gv1)

Label: 2 (2)
(length l = gv0), (length l0 = gv0)






------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 70.949 seconds

Number of Result Pairs Returned: 3

1. (select n0 l = (n1, l0) -> length l = length l0)

2. (select n0 l = (n1, l0) -> Permutation (n1 :: l0) (n0 :: l))
(Permutation (n1 :: l0) (n0 :: l) -> length l = length l0)

3. (select n0 l = (n1, l0) -> Permutation (n0 :: l) (n1 :: l0))
(Permutation (n0 :: l) (n1 :: l0) -> length l = length l0)
