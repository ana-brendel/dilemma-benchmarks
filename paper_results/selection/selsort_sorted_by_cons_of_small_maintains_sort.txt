Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (forall al : list nat, length al = n -> sorted (selsort al n))
 -- (select n0 al = (n1, l))
 -- (length (n0 :: al) = S n)

----------------------------------
Goal: (sorted (n1 :: selsort l n))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.6 seconds

gv1 : (list nat) = (selsort l n)
gv0 : (list nat) = (n1 :: selsort l n)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 41.464 seconds

Label: Generalization #0
Assumptions: 
 -- (select n0 al = (n1, l))

----------------------------------
Goal: (sorted (n1 :: selsort l n))
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (select n0 al = (n1, l))
 -- (n1 :: selsort l n = gv0)

----------------------------------
Goal: (sorted gv0)
Case: Invalid and Generalized

Label: Generalization #2
Assumptions: 
 -- (selsort l n = gv1)
 -- (select n0 al = (n1, l))

----------------------------------
Goal: (sorted (n1 :: gv1))
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 41.606 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)

Label: 0 (0)
Abducted Assumption: (select n0 al = (n1, l))
Positive Examples: 57
Negative Examples: 500

Label: 1 (1)
Inferring Condition About Generalization
Positive Examples: 41
Negative Examples: 25

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 61
Negative Examples: 36


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 42.107 seconds


Label: 0 (0)
(n0 <=* al), (n0 <=* l), (n <=* al), (n <=* l), (n1 <=* al), (n1 <=* l), (sorted al), (sorted l), (Permutation al al), (Permutation al l)
(Permutation l al), (Permutation l l), (In n0 al), (In n0 l), (In n al), (In n l), (In n1 al), (In n1 l), (n0 < n0), (n0 < n)
(n0 < n1), (n < n0), (n < n), (n < n1), (n1 < n0), (n1 < n), (n1 < n1), (n0 <= n0), (n0 <= n), (n0 <= n1)
(n <= n0), (n <= n), (n <= n1), (n1 <= n0), (n1 <= n), (n1 <= n1), (al = al), (al = l), (l = al), (l = l)
(n0 = n0), (n0 = n), (n0 = n1), (n = n0), (n = n), (n = n1), (n1 = n0), (n1 = n), (n1 = n1), (n0 <=* n0 :: al)
(n0 <=* n0 :: l), (n0 <=* n :: al), (n0 <=* n :: l), (n0 <=* n1 :: al), (n0 <=* n1 :: l), (n0 <=* selection_sort al), (n0 <=* selection_sort l), (n0 <=* selsort al n0), (n0 <=* selsort al n), (n0 <=* selsort al n1)
(n0 <=* selsort l n0), (n0 <=* selsort l n), (n0 <=* selsort l n1), (n0 <=* al ++ al), (n0 <=* al ++ l), (n0 <=* l ++ al), (n0 <=* l ++ l), (n0 <=* []), (n <=* n0 :: al), (n <=* n0 :: l)
(n <=* n :: al), (n <=* n :: l), (n <=* n1 :: al), (n <=* n1 :: l), (n <=* selection_sort al), (n <=* selection_sort l), (n <=* selsort al n0), (n <=* selsort al n), (n <=* selsort al n1), (n <=* selsort l n0)
(n <=* selsort l n), (n <=* selsort l n1), (n <=* al ++ al), (n <=* al ++ l), (n <=* l ++ al), (n <=* l ++ l), (n <=* []), (n1 <=* n0 :: al), (n1 <=* n0 :: l), (n1 <=* n :: al)
(n1 <=* n :: l), (n1 <=* n1 :: al), (n1 <=* n1 :: l), (n1 <=* selection_sort al), (n1 <=* selection_sort l), (n1 <=* selsort al n0), (n1 <=* selsort al n), (n1 <=* selsort al n1), (n1 <=* selsort l n0), (n1 <=* selsort l n)
(n1 <=* selsort l n1), (n1 <=* al ++ al), (n1 <=* al ++ l), (n1 <=* l ++ al), (n1 <=* l ++ l), (n1 <=* []), (length al <=* al), (length al <=* l), (length al <=* n0 :: al), (length al <=* n0 :: l)
(length al <=* n :: al), (length al <=* n :: l), (length al <=* n1 :: al), (length al <=* n1 :: l), (length al <=* selection_sort al), (length al <=* selection_sort l), (length al <=* selsort al n0), (length al <=* selsort al n), (length al <=* selsort al n1), (length al <=* selsort l n0)
(length al <=* selsort l n), (length al <=* selsort l n1), (length al <=* al ++ al), (length al <=* al ++ l), (length al <=* l ++ al), (length al <=* l ++ l), (length al <=* []), (length l <=* al), (length l <=* l), (length l <=* n0 :: al)
(length l <=* n0 :: l), (length l <=* n :: al), (length l <=* n :: l), (length l <=* n1 :: al), (length l <=* n1 :: l), (length l <=* selection_sort al), (length l <=* selection_sort l), (length l <=* selsort al n0), (length l <=* selsort al n), (length l <=* selsort al n1)
(length l <=* selsort l n0), (length l <=* selsort l n), (length l <=* selsort l n1), (length l <=* al ++ al), (length l <=* al ++ l), (length l <=* l ++ al), (length l <=* l ++ l), (length l <=* []), (sorted (n0 :: al)), (sorted (n0 :: l))
(sorted (n :: al)), (sorted (n :: l)), (sorted (n1 :: al)), (sorted (n1 :: l)), (sorted (selection_sort al)), (sorted (selection_sort l)), (sorted (selsort al n0)), (sorted (selsort al n)), (sorted (selsort al n1)), (sorted (selsort l n0))
(sorted (selsort l n)), (sorted (selsort l n1)), (sorted (al ++ al)), (sorted (al ++ l)), (sorted (l ++ al)), (sorted (l ++ l)), (sorted []), (Permutation al (n0 :: al)), (Permutation al (n0 :: l)), (Permutation al (n :: al))
(Permutation al (n :: l)), (Permutation al (n1 :: al)), (Permutation al (n1 :: l)), (Permutation al (selection_sort al)), (Permutation al (selection_sort l)), (Permutation al (selsort al n0)), (Permutation al (selsort al n)), (Permutation al (selsort al n1)), (Permutation al (selsort l n0)), (Permutation al (selsort l n))
(Permutation al (selsort l n1)), (Permutation al (al ++ al)), (Permutation al (al ++ l)), (Permutation al (l ++ al)), (Permutation al (l ++ l)), (Permutation al []), (Permutation l (n0 :: al)), (Permutation l (n0 :: l)), (Permutation l (n :: al)), (Permutation l (n :: l))
(Permutation l (n1 :: al)), (Permutation l (n1 :: l)), (Permutation l (selection_sort al)), (Permutation l (selection_sort l)), (Permutation l (selsort al n0)), (Permutation l (selsort al n)), (Permutation l (selsort al n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l n)), (Permutation l (selsort l n1))
(Permutation l (al ++ al)), (Permutation l (al ++ l)), (Permutation l (l ++ al)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n0 :: al) al), (Permutation (n0 :: al) l), (Permutation (n0 :: al) (n0 :: l)), (Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (n :: l))
(Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n1 :: l)), (Permutation (n0 :: al) (selection_sort al)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort l n0)), (Permutation (n0 :: al) (selsort l n)), (Permutation (n0 :: al) (selsort l n1))
(Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) (al ++ l)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) []), (Permutation (n0 :: l) al), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n0 :: al)), (Permutation (n0 :: l) (n :: al)), (Permutation (n0 :: l) (n :: l))
(Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (selection_sort al)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort al n0)), (Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n)), (Permutation (n0 :: l) (selsort l n1))
(Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (n :: al) al), (Permutation (n :: al) l), (Permutation (n :: al) (n0 :: al)), (Permutation (n :: al) (n0 :: l)), (Permutation (n :: al) (n :: l))
(Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selection_sort l)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n)), (Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n)), (Permutation (n :: al) (selsort l n1))
(Permutation (n :: al) (al ++ al)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) []), (Permutation (n :: l) al), (Permutation (n :: l) l), (Permutation (n :: l) (n0 :: al)), (Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n :: al))
(Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n)), (Permutation (n :: l) (selsort l n1))
(Permutation (n :: l) (al ++ al)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (l ++ al)), (Permutation (n :: l) (l ++ l)), (Permutation (n :: l) []), (Permutation (n1 :: al) al), (Permutation (n1 :: al) l), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n0 :: l)), (Permutation (n1 :: al) (n :: al))
(Permutation (n1 :: al) (n :: l)), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (selection_sort al)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort al n1)), (Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n)), (Permutation (n1 :: al) (selsort l n1))
(Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (l ++ al)), (Permutation (n1 :: al) (l ++ l)), (Permutation (n1 :: al) []), (Permutation (n1 :: l) al), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n0 :: al)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n :: al))
(Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n)), (Permutation (n1 :: l) (selsort l n1))
(Permutation (n1 :: l) (al ++ al)), (Permutation (n1 :: l) (al ++ l)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) l), (Permutation (selection_sort al) (n0 :: al)), (Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n :: al))
(Permutation (selection_sort al) (n :: l)), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort l n0)), (Permutation (selection_sort al) (selsort l n)), (Permutation (selection_sort al) (selsort l n1))
(Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (l ++ al)), (Permutation (selection_sort al) (l ++ l)), (Permutation (selection_sort al) []), (Permutation (selection_sort l) al), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n0 :: al)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n :: al))
(Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selsort al n0)), (Permutation (selection_sort l) (selsort al n)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l n1))
(Permutation (selection_sort l) (al ++ al)), (Permutation (selection_sort l) (al ++ l)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort al n0) al), (Permutation (selsort al n0) l), (Permutation (selsort al n0) (n0 :: al)), (Permutation (selsort al n0) (n0 :: l)), (Permutation (selsort al n0) (n :: al))
(Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort l n0)), (Permutation (selsort al n0) (selsort l n)), (Permutation (selsort al n0) (selsort l n1))
(Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) (al ++ l)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) []), (Permutation (selsort al n) al), (Permutation (selsort al n) l), (Permutation (selsort al n) (n0 :: al)), (Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n :: al))
(Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n1 :: l)), (Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selection_sort l)), (Permutation (selsort al n) (selsort al n0)), (Permutation (selsort al n) (selsort al n1)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n)), (Permutation (selsort al n) (selsort l n1))
(Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (l ++ al)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) []), (Permutation (selsort al n1) al), (Permutation (selsort al n1) l), (Permutation (selsort al n1) (n0 :: al)), (Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n :: al))
(Permutation (selsort al n1) (n :: l)), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (selection_sort al)), (Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n)), (Permutation (selsort al n1) (selsort l n1))
(Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (l ++ l)), (Permutation (selsort al n1) []), (Permutation (selsort l n0) al), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n0 :: al)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n :: al))
(Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (n1 :: al)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort l n)), (Permutation (selsort l n0) (selsort l n1))
(Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (l ++ al)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l n) al), (Permutation (selsort l n) l), (Permutation (selsort l n) (n0 :: al)), (Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n :: al))
(Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selsort al n0)), (Permutation (selsort l n) (selsort al n)), (Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort l n0)), (Permutation (selsort l n) (selsort l n1))
(Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (l ++ al)), (Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) []), (Permutation (selsort l n1) al), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n0 :: al)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n :: al))
(Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l n))
(Permutation (selsort l n1) (al ++ al)), (Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (al ++ al) al), (Permutation (al ++ al) l), (Permutation (al ++ al) (n0 :: al)), (Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n :: al))
(Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n1 :: l)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort l)), (Permutation (al ++ al) (selsort al n0)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort l n0)), (Permutation (al ++ al) (selsort l n))
(Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (l ++ l)), (Permutation (al ++ al) []), (Permutation (al ++ l) al), (Permutation (al ++ l) l), (Permutation (al ++ l) (n0 :: al)), (Permutation (al ++ l) (n0 :: l)), (Permutation (al ++ l) (n :: al))
(Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selection_sort l)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort l n0)), (Permutation (al ++ l) (selsort l n))
(Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) []), (Permutation (l ++ al) al), (Permutation (l ++ al) l), (Permutation (l ++ al) (n0 :: al)), (Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n :: al))
(Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (selection_sort al)), (Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort l n0)), (Permutation (l ++ al) (selsort l n))
(Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) []), (Permutation (l ++ l) al), (Permutation (l ++ l) l), (Permutation (l ++ l) (n0 :: al)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n :: al))
(Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n1 :: al)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n))
(Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (al ++ al)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) []), (Permutation [] al), (Permutation [] l), (Permutation [] (n0 :: al)), (Permutation [] (n0 :: l)), (Permutation [] (n :: al))
(Permutation [] (n :: l)), (Permutation [] (n1 :: al)), (Permutation [] (n1 :: l)), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort l)), (Permutation [] (selsort al n0)), (Permutation [] (selsort al n)), (Permutation [] (selsort al n1)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n))
(Permutation [] (selsort l n1)), (Permutation [] (al ++ al)), (Permutation [] (al ++ l)), (Permutation [] (l ++ al)), (Permutation [] (l ++ l)), (In n0 (n0 :: al)), (In n0 (n0 :: l)), (In n0 (n :: al)), (In n0 (n :: l)), (In n0 (n1 :: al))
(In n0 (n1 :: l)), (In n0 (selection_sort al)), (In n0 (selection_sort l)), (In n0 (selsort al n0)), (In n0 (selsort al n)), (In n0 (selsort al n1)), (In n0 (selsort l n0)), (In n0 (selsort l n)), (In n0 (selsort l n1)), (In n0 (al ++ al))
(In n0 (al ++ l)), (In n0 (l ++ al)), (In n0 (l ++ l)), (In n (n0 :: al)), (In n (n0 :: l)), (In n (n :: al)), (In n (n :: l)), (In n (n1 :: al)), (In n (n1 :: l)), (In n (selection_sort al))
(In n (selection_sort l)), (In n (selsort al n0)), (In n (selsort al n)), (In n (selsort al n1)), (In n (selsort l n0)), (In n (selsort l n)), (In n (selsort l n1)), (In n (al ++ al)), (In n (al ++ l)), (In n (l ++ al))
(In n (l ++ l)), (In n1 (n0 :: al)), (In n1 (n0 :: l)), (In n1 (n :: al)), (In n1 (n :: l)), (In n1 (n1 :: al)), (In n1 (n1 :: l)), (In n1 (selection_sort al)), (In n1 (selection_sort l)), (In n1 (selsort al n0))
(In n1 (selsort al n)), (In n1 (selsort al n1)), (In n1 (selsort l n0)), (In n1 (selsort l n)), (In n1 (selsort l n1)), (In n1 (al ++ al)), (In n1 (al ++ l)), (In n1 (l ++ al)), (In n1 (l ++ l)), (In (length al) al)
(In (length al) l), (In (length al) (n0 :: al)), (In (length al) (n0 :: l)), (In (length al) (n :: al)), (In (length al) (n :: l)), (In (length al) (n1 :: al)), (In (length al) (n1 :: l)), (In (length al) (selection_sort al)), (In (length al) (selection_sort l)), (In (length al) (selsort al n0))
(In (length al) (selsort al n)), (In (length al) (selsort al n1)), (In (length al) (selsort l n0)), (In (length al) (selsort l n)), (In (length al) (selsort l n1)), (In (length al) (al ++ al)), (In (length al) (al ++ l)), (In (length al) (l ++ al)), (In (length al) (l ++ l)), (In (length l) al)
(In (length l) l), (In (length l) (n0 :: al)), (In (length l) (n0 :: l)), (In (length l) (n :: al)), (In (length l) (n :: l)), (In (length l) (n1 :: al)), (In (length l) (n1 :: l)), (In (length l) (selection_sort al)), (In (length l) (selection_sort l)), (In (length l) (selsort al n0))
(In (length l) (selsort al n)), (In (length l) (selsort al n1)), (In (length l) (selsort l n0)), (In (length l) (selsort l n)), (In (length l) (selsort l n1)), (In (length l) (al ++ al)), (In (length l) (al ++ l)), (In (length l) (l ++ al)), (In (length l) (l ++ l)), (n0 < length al)
(n0 < length l), (n < length al), (n < length l), (n1 < length al), (n1 < length l), (length al < n0), (length al < n), (length al < n1), (length al < length l), (length l < n0)
(length l < n), (length l < n1), (length l < length al), (n0 <= length al), (n0 <= length l), (n <= length al), (n <= length l), (n1 <= length al), (n1 <= length l), (length al <= n0)
(length al <= n), (length al <= n1), (length al <= length l), (length l <= n0), (length l <= n), (length l <= n1), (length l <= length al), (~ n0 <=* al), (~ n0 <=* l), (~ n <=* al)
(~ n <=* l), (~ n1 <=* al), (~ n1 <=* l), (~ sorted al), (~ sorted l), (~ Permutation al al), (~ Permutation al l), (~ Permutation l al), (~ Permutation l l), (~ In n0 al)
(~ In n0 l), (~ In n al), (~ In n l), (~ In n1 al), (~ In n1 l), (~ n0 < n0), (~ n0 < n), (~ n0 < n1), (~ n < n0), (~ n < n)
(~ n < n1), (~ n1 < n0), (~ n1 < n), (~ n1 < n1), (~ n0 <= n0), (~ n0 <= n), (~ n0 <= n1), (~ n <= n0), (~ n <= n), (~ n <= n1)
(~ n1 <= n0), (~ n1 <= n), (~ n1 <= n1), (al <> al), (al <> l), (l <> al), (l <> l), (n0 <> n0), (n0 <> n), (n0 <> n1)
(n <> n0), (n <> n), (n <> n1), (n1 <> n0), (n1 <> n), (n1 <> n1), (None = Some al), (None = Some l), (n0 :: al = al), (n0 :: al = l)
(n0 :: al = selection_sort al), (n0 :: al = selection_sort l), (n0 :: al = selsort al n0), (n0 :: al = selsort al n), (n0 :: al = selsort al n1), (n0 :: al = selsort l n0), (n0 :: al = selsort l n), (n0 :: al = selsort l n1), (n0 :: al = al ++ al), (n0 :: al = al ++ l)
(n0 :: al = l ++ al), (n0 :: al = l ++ l), (n0 :: al = []), (n0 :: l = al), (n0 :: l = l), (n0 :: l = selection_sort al), (n0 :: l = selection_sort l), (n0 :: l = selsort al n0), (n0 :: l = selsort al n), (n0 :: l = selsort al n1)
(n0 :: l = selsort l n0), (n0 :: l = selsort l n), (n0 :: l = selsort l n1), (n0 :: l = al ++ al), (n0 :: l = al ++ l), (n0 :: l = l ++ al), (n0 :: l = l ++ l), (n0 :: l = []), (n :: al = al), (n :: al = l)
(n :: al = selection_sort al), (n :: al = selection_sort l), (n :: al = selsort al n0), (n :: al = selsort al n), (n :: al = selsort al n1), (n :: al = selsort l n0), (n :: al = selsort l n), (n :: al = selsort l n1), (n :: al = al ++ al), (n :: al = al ++ l)
(n :: al = l ++ al), (n :: al = l ++ l), (n :: al = []), (n :: l = al), (n :: l = l), (n :: l = selection_sort al), (n :: l = selection_sort l), (n :: l = selsort al n0), (n :: l = selsort al n), (n :: l = selsort al n1)
(n :: l = selsort l n0), (n :: l = selsort l n), (n :: l = selsort l n1), (n :: l = al ++ al), (n :: l = al ++ l), (n :: l = l ++ al), (n :: l = l ++ l), (n :: l = []), (n1 :: al = al), (n1 :: al = l)
(n1 :: al = selection_sort al), (n1 :: al = selection_sort l), (n1 :: al = selsort al n0), (n1 :: al = selsort al n), (n1 :: al = selsort al n1), (n1 :: al = selsort l n0), (n1 :: al = selsort l n), (n1 :: al = selsort l n1), (n1 :: al = al ++ al), (n1 :: al = al ++ l)
(n1 :: al = l ++ al), (n1 :: al = l ++ l), (n1 :: al = []), (n1 :: l = al), (n1 :: l = l), (n1 :: l = selection_sort al), (n1 :: l = selection_sort l), (n1 :: l = selsort al n0), (n1 :: l = selsort al n), (n1 :: l = selsort al n1)
(n1 :: l = selsort l n0), (n1 :: l = selsort l n), (n1 :: l = selsort l n1), (n1 :: l = al ++ al), (n1 :: l = al ++ l), (n1 :: l = l ++ al), (n1 :: l = l ++ l), (n1 :: l = []), (selection_sort al = al), (selection_sort al = l)
(selection_sort al = al ++ al), (selection_sort al = al ++ l), (selection_sort al = l ++ al), (selection_sort al = l ++ l), (selection_sort l = al), (selection_sort l = l), (selection_sort l = al ++ al), (selection_sort l = al ++ l), (selection_sort l = l ++ al), (selection_sort l = l ++ l)
(selsort al n0 = al), (selsort al n0 = l), (selsort al n0 = selection_sort al), (selsort al n0 = selection_sort l), (selsort al n0 = al ++ al), (selsort al n0 = al ++ l), (selsort al n0 = l ++ al), (selsort al n0 = l ++ l), (selsort al n = al), (selsort al n = l)
(selsort al n = selection_sort al), (selsort al n = selection_sort l), (selsort al n = al ++ al), (selsort al n = al ++ l), (selsort al n = l ++ al), (selsort al n = l ++ l), (selsort al n1 = al), (selsort al n1 = l), (selsort al n1 = selection_sort al), (selsort al n1 = selection_sort l)
(selsort al n1 = al ++ al), (selsort al n1 = al ++ l), (selsort al n1 = l ++ al), (selsort al n1 = l ++ l), (selsort l n0 = al), (selsort l n0 = l), (selsort l n0 = selection_sort al), (selsort l n0 = selection_sort l), (selsort l n0 = al ++ al), (selsort l n0 = al ++ l)
(selsort l n0 = l ++ al), (selsort l n0 = l ++ l), (selsort l n = al), (selsort l n = l), (selsort l n = selection_sort al), (selsort l n = selection_sort l), (selsort l n = al ++ al), (selsort l n = al ++ l), (selsort l n = l ++ al), (selsort l n = l ++ l)
(selsort l n1 = al), (selsort l n1 = l), (selsort l n1 = selection_sort al), (selsort l n1 = selection_sort l), (selsort l n1 = al ++ al), (selsort l n1 = al ++ l), (selsort l n1 = l ++ al), (selsort l n1 = l ++ l), (al ++ al = al), (al ++ al = l)
(al ++ l = al), (al ++ l = l), (l ++ al = al), (l ++ al = l), (l ++ l = al), (l ++ l = l), ([] = al), ([] = l), ([] = selection_sort al), ([] = selection_sort l)
([] = selsort al n0), ([] = selsort al n), ([] = selsort al n1), ([] = selsort l n0), ([] = selsort l n), ([] = selsort l n1), ([] = al ++ al), ([] = al ++ l), ([] = l ++ al), ([] = l ++ l)
(None = Some n0), (None = Some n), (None = Some n1), ((n0, al) = select n0 al), ((n0, al) = select n0 l), ((n0, al) = select n al), ((n0, al) = select n l), ((n0, al) = select n1 al), ((n0, al) = select n1 l), ((n0, l) = select n0 al)
((n0, l) = select n0 l), ((n0, l) = select n al), ((n0, l) = select n l), ((n0, l) = select n1 al), ((n0, l) = select n1 l), ((n, al) = select n0 al), ((n, al) = select n0 l), ((n, al) = select n al), ((n, al) = select n l), ((n, al) = select n1 al)
((n, al) = select n1 l), ((n, l) = select n0 al), ((n, l) = select n0 l), ((n, l) = select n al), ((n, l) = select n l), ((n, l) = select n1 al), ((n, l) = select n1 l), ((n1, al) = select n0 al), ((n1, al) = select n0 l), ((n1, al) = select n al)
((n1, al) = select n l), ((n1, al) = select n1 al), ((n1, al) = select n1 l), ((n1, l) = select n0 al), ((n1, l) = select n0 l), ((n1, l) = select n al), ((n1, l) = select n l), ((n1, l) = select n1 al), ((n1, l) = select n1 l), (length al = n0)
(length al = n), (length al = n1), (length l = n0), (length l = n), (length l = n1)

Label: 1 (1)
(n0 <=* al), (n0 <=* l), (n0 <=* gv0), (n <=* al), (n <=* l), (n <=* gv0), (n1 <=* al), (n1 <=* l), (n1 <=* gv0), (sorted al)
(sorted l), (sorted gv0), (Permutation al al), (Permutation al l), (Permutation al gv0), (Permutation l al), (Permutation l l), (Permutation l gv0), (Permutation gv0 al), (Permutation gv0 l)
(Permutation gv0 gv0), (In n0 al), (In n0 l), (In n0 gv0), (In n al), (In n l), (In n gv0), (In n1 al), (In n1 l), (In n1 gv0)
(n0 < n0), (n0 < n), (n0 < n1), (n < n0), (n < n), (n < n1), (n1 < n0), (n1 < n), (n1 < n1), (n0 <= n0)
(n0 <= n), (n0 <= n1), (n <= n0), (n <= n), (n <= n1), (n1 <= n0), (n1 <= n), (n1 <= n1), (n0 = n0), (n0 = n)
(n0 = n1), (n = n0), (n = n), (n = n1), (n1 = n0), (n1 = n), (n1 = n1), (al = al), (al = l), (al = gv0)
(l = al), (l = l), (l = gv0), (gv0 = al), (gv0 = l), (gv0 = gv0), (n0 <=* n0 :: al), (n0 <=* n0 :: l), (n0 <=* n0 :: gv0), (n0 <=* n :: al)
(n0 <=* n :: l), (n0 <=* n :: gv0), (n0 <=* n1 :: al), (n0 <=* n1 :: l), (n0 <=* n1 :: gv0), (n0 <=* selection_sort al), (n0 <=* selection_sort l), (n0 <=* selection_sort gv0), (n0 <=* selsort al n0), (n0 <=* selsort al n)
(n0 <=* selsort al n1), (n0 <=* selsort l n0), (n0 <=* selsort l n), (n0 <=* selsort l n1), (n0 <=* selsort gv0 n0), (n0 <=* selsort gv0 n), (n0 <=* selsort gv0 n1), (n0 <=* al ++ al), (n0 <=* al ++ l), (n0 <=* al ++ gv0)
(n0 <=* l ++ al), (n0 <=* l ++ l), (n0 <=* l ++ gv0), (n0 <=* gv0 ++ al), (n0 <=* gv0 ++ l), (n0 <=* gv0 ++ gv0), (n0 <=* []), (n <=* n0 :: al), (n <=* n0 :: l), (n <=* n0 :: gv0)
(n <=* n :: al), (n <=* n :: l), (n <=* n :: gv0), (n <=* n1 :: al), (n <=* n1 :: l), (n <=* n1 :: gv0), (n <=* selection_sort al), (n <=* selection_sort l), (n <=* selection_sort gv0), (n <=* selsort al n0)
(n <=* selsort al n), (n <=* selsort al n1), (n <=* selsort l n0), (n <=* selsort l n), (n <=* selsort l n1), (n <=* selsort gv0 n0), (n <=* selsort gv0 n), (n <=* selsort gv0 n1), (n <=* al ++ al), (n <=* al ++ l)
(n <=* al ++ gv0), (n <=* l ++ al), (n <=* l ++ l), (n <=* l ++ gv0), (n <=* gv0 ++ al), (n <=* gv0 ++ l), (n <=* gv0 ++ gv0), (n <=* []), (n1 <=* n0 :: al), (n1 <=* n0 :: l)
(n1 <=* n0 :: gv0), (n1 <=* n :: al), (n1 <=* n :: l), (n1 <=* n :: gv0), (n1 <=* n1 :: al), (n1 <=* n1 :: l), (n1 <=* n1 :: gv0), (n1 <=* selection_sort al), (n1 <=* selection_sort l), (n1 <=* selection_sort gv0)
(n1 <=* selsort al n0), (n1 <=* selsort al n), (n1 <=* selsort al n1), (n1 <=* selsort l n0), (n1 <=* selsort l n), (n1 <=* selsort l n1), (n1 <=* selsort gv0 n0), (n1 <=* selsort gv0 n), (n1 <=* selsort gv0 n1), (n1 <=* al ++ al)
(n1 <=* al ++ l), (n1 <=* al ++ gv0), (n1 <=* l ++ al), (n1 <=* l ++ l), (n1 <=* l ++ gv0), (n1 <=* gv0 ++ al), (n1 <=* gv0 ++ l), (n1 <=* gv0 ++ gv0), (n1 <=* []), (length al <=* al)
(length al <=* l), (length al <=* gv0), (length al <=* n0 :: al), (length al <=* n0 :: l), (length al <=* n0 :: gv0), (length al <=* n :: al), (length al <=* n :: l), (length al <=* n :: gv0), (length al <=* n1 :: al), (length al <=* n1 :: l)
(length al <=* n1 :: gv0), (length al <=* selection_sort al), (length al <=* selection_sort l), (length al <=* selection_sort gv0), (length al <=* selsort al n0), (length al <=* selsort al n), (length al <=* selsort al n1), (length al <=* selsort l n0), (length al <=* selsort l n), (length al <=* selsort l n1)
(length al <=* selsort gv0 n0), (length al <=* selsort gv0 n), (length al <=* selsort gv0 n1), (length al <=* al ++ al), (length al <=* al ++ l), (length al <=* al ++ gv0), (length al <=* l ++ al), (length al <=* l ++ l), (length al <=* l ++ gv0), (length al <=* gv0 ++ al)
(length al <=* gv0 ++ l), (length al <=* gv0 ++ gv0), (length al <=* []), (length l <=* al), (length l <=* l), (length l <=* gv0), (length l <=* n0 :: al), (length l <=* n0 :: l), (length l <=* n0 :: gv0), (length l <=* n :: al)
(length l <=* n :: l), (length l <=* n :: gv0), (length l <=* n1 :: al), (length l <=* n1 :: l), (length l <=* n1 :: gv0), (length l <=* selection_sort al), (length l <=* selection_sort l), (length l <=* selection_sort gv0), (length l <=* selsort al n0), (length l <=* selsort al n)
(length l <=* selsort al n1), (length l <=* selsort l n0), (length l <=* selsort l n), (length l <=* selsort l n1), (length l <=* selsort gv0 n0), (length l <=* selsort gv0 n), (length l <=* selsort gv0 n1), (length l <=* al ++ al), (length l <=* al ++ l), (length l <=* al ++ gv0)
(length l <=* l ++ al), (length l <=* l ++ l), (length l <=* l ++ gv0), (length l <=* gv0 ++ al), (length l <=* gv0 ++ l), (length l <=* gv0 ++ gv0), (length l <=* []), (length gv0 <=* al), (length gv0 <=* l), (length gv0 <=* gv0)
(length gv0 <=* n0 :: al), (length gv0 <=* n0 :: l), (length gv0 <=* n0 :: gv0), (length gv0 <=* n :: al), (length gv0 <=* n :: l), (length gv0 <=* n :: gv0), (length gv0 <=* n1 :: al), (length gv0 <=* n1 :: l), (length gv0 <=* n1 :: gv0), (length gv0 <=* selection_sort al)
(length gv0 <=* selection_sort l), (length gv0 <=* selection_sort gv0), (length gv0 <=* selsort al n0), (length gv0 <=* selsort al n), (length gv0 <=* selsort al n1), (length gv0 <=* selsort l n0), (length gv0 <=* selsort l n), (length gv0 <=* selsort l n1), (length gv0 <=* selsort gv0 n0), (length gv0 <=* selsort gv0 n)
(length gv0 <=* selsort gv0 n1), (length gv0 <=* al ++ al), (length gv0 <=* al ++ l), (length gv0 <=* al ++ gv0), (length gv0 <=* l ++ al), (length gv0 <=* l ++ l), (length gv0 <=* l ++ gv0), (length gv0 <=* gv0 ++ al), (length gv0 <=* gv0 ++ l), (length gv0 <=* gv0 ++ gv0)
(length gv0 <=* []), (sorted (n0 :: al)), (sorted (n0 :: l)), (sorted (n0 :: gv0)), (sorted (n :: al)), (sorted (n :: l)), (sorted (n :: gv0)), (sorted (n1 :: al)), (sorted (n1 :: l)), (sorted (n1 :: gv0))
(sorted (selection_sort al)), (sorted (selection_sort l)), (sorted (selection_sort gv0)), (sorted (selsort al n0)), (sorted (selsort al n)), (sorted (selsort al n1)), (sorted (selsort l n0)), (sorted (selsort l n)), (sorted (selsort l n1)), (sorted (selsort gv0 n0))
(sorted (selsort gv0 n)), (sorted (selsort gv0 n1)), (sorted (al ++ al)), (sorted (al ++ l)), (sorted (al ++ gv0)), (sorted (l ++ al)), (sorted (l ++ l)), (sorted (l ++ gv0)), (sorted (gv0 ++ al)), (sorted (gv0 ++ l))
(sorted (gv0 ++ gv0)), (sorted []), (Permutation al (n0 :: al)), (Permutation al (n0 :: l)), (Permutation al (n0 :: gv0)), (Permutation al (n :: al)), (Permutation al (n :: l)), (Permutation al (n :: gv0)), (Permutation al (n1 :: al)), (Permutation al (n1 :: l))
(Permutation al (n1 :: gv0)), (Permutation al (selection_sort al)), (Permutation al (selection_sort l)), (Permutation al (selection_sort gv0)), (Permutation al (selsort al n0)), (Permutation al (selsort al n)), (Permutation al (selsort al n1)), (Permutation al (selsort l n0)), (Permutation al (selsort l n)), (Permutation al (selsort l n1))
(Permutation al (selsort gv0 n0)), (Permutation al (selsort gv0 n)), (Permutation al (selsort gv0 n1)), (Permutation al (al ++ al)), (Permutation al (al ++ l)), (Permutation al (al ++ gv0)), (Permutation al (l ++ al)), (Permutation al (l ++ l)), (Permutation al (l ++ gv0)), (Permutation al (gv0 ++ al))
(Permutation al (gv0 ++ l)), (Permutation al (gv0 ++ gv0)), (Permutation al []), (Permutation l (n0 :: al)), (Permutation l (n0 :: l)), (Permutation l (n0 :: gv0)), (Permutation l (n :: al)), (Permutation l (n :: l)), (Permutation l (n :: gv0)), (Permutation l (n1 :: al))
(Permutation l (n1 :: l)), (Permutation l (n1 :: gv0)), (Permutation l (selection_sort al)), (Permutation l (selection_sort l)), (Permutation l (selection_sort gv0)), (Permutation l (selsort al n0)), (Permutation l (selsort al n)), (Permutation l (selsort al n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l n))
(Permutation l (selsort l n1)), (Permutation l (selsort gv0 n0)), (Permutation l (selsort gv0 n)), (Permutation l (selsort gv0 n1)), (Permutation l (al ++ al)), (Permutation l (al ++ l)), (Permutation l (al ++ gv0)), (Permutation l (l ++ al)), (Permutation l (l ++ l)), (Permutation l (l ++ gv0))
(Permutation l (gv0 ++ al)), (Permutation l (gv0 ++ l)), (Permutation l (gv0 ++ gv0)), (Permutation l []), (Permutation gv0 (n0 :: al)), (Permutation gv0 (n0 :: l)), (Permutation gv0 (n0 :: gv0)), (Permutation gv0 (n :: al)), (Permutation gv0 (n :: l)), (Permutation gv0 (n :: gv0))
(Permutation gv0 (n1 :: al)), (Permutation gv0 (n1 :: l)), (Permutation gv0 (n1 :: gv0)), (Permutation gv0 (selection_sort al)), (Permutation gv0 (selection_sort l)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (selsort al n0)), (Permutation gv0 (selsort al n)), (Permutation gv0 (selsort al n1)), (Permutation gv0 (selsort l n0))
(Permutation gv0 (selsort l n)), (Permutation gv0 (selsort l n1)), (Permutation gv0 (selsort gv0 n0)), (Permutation gv0 (selsort gv0 n)), (Permutation gv0 (selsort gv0 n1)), (Permutation gv0 (al ++ al)), (Permutation gv0 (al ++ l)), (Permutation gv0 (al ++ gv0)), (Permutation gv0 (l ++ al)), (Permutation gv0 (l ++ l))
(Permutation gv0 (l ++ gv0)), (Permutation gv0 (gv0 ++ al)), (Permutation gv0 (gv0 ++ l)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (n0 :: al) al), (Permutation (n0 :: al) l), (Permutation (n0 :: al) gv0), (Permutation (n0 :: al) (n0 :: l)), (Permutation (n0 :: al) (n0 :: gv0))
(Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (n :: l)), (Permutation (n0 :: al) (n :: gv0)), (Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n1 :: l)), (Permutation (n0 :: al) (n1 :: gv0)), (Permutation (n0 :: al) (selection_sort al)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selection_sort gv0)), (Permutation (n0 :: al) (selsort al n0))
(Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort l n0)), (Permutation (n0 :: al) (selsort l n)), (Permutation (n0 :: al) (selsort l n1)), (Permutation (n0 :: al) (selsort gv0 n0)), (Permutation (n0 :: al) (selsort gv0 n)), (Permutation (n0 :: al) (selsort gv0 n1)), (Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) (al ++ l))
(Permutation (n0 :: al) (al ++ gv0)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) (l ++ gv0)), (Permutation (n0 :: al) (gv0 ++ al)), (Permutation (n0 :: al) (gv0 ++ l)), (Permutation (n0 :: al) (gv0 ++ gv0)), (Permutation (n0 :: al) []), (Permutation (n0 :: l) al), (Permutation (n0 :: l) l)
(Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (n0 :: al)), (Permutation (n0 :: l) (n0 :: gv0)), (Permutation (n0 :: l) (n :: al)), (Permutation (n0 :: l) (n :: l)), (Permutation (n0 :: l) (n :: gv0)), (Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: gv0)), (Permutation (n0 :: l) (selection_sort al))
(Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l) (selsort al n0)), (Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort gv0 n0)), (Permutation (n0 :: l) (selsort gv0 n))
(Permutation (n0 :: l) (selsort gv0 n1)), (Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (al ++ gv0)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ gv0)), (Permutation (n0 :: l) (gv0 ++ al)), (Permutation (n0 :: l) (gv0 ++ l)), (Permutation (n0 :: l) (gv0 ++ gv0))
(Permutation (n0 :: l) []), (Permutation (n0 :: gv0) al), (Permutation (n0 :: gv0) l), (Permutation (n0 :: gv0) gv0), (Permutation (n0 :: gv0) (n0 :: al)), (Permutation (n0 :: gv0) (n0 :: l)), (Permutation (n0 :: gv0) (n :: al)), (Permutation (n0 :: gv0) (n :: l)), (Permutation (n0 :: gv0) (n :: gv0)), (Permutation (n0 :: gv0) (n1 :: al))
(Permutation (n0 :: gv0) (n1 :: l)), (Permutation (n0 :: gv0) (n1 :: gv0)), (Permutation (n0 :: gv0) (selection_sort al)), (Permutation (n0 :: gv0) (selection_sort l)), (Permutation (n0 :: gv0) (selection_sort gv0)), (Permutation (n0 :: gv0) (selsort al n0)), (Permutation (n0 :: gv0) (selsort al n)), (Permutation (n0 :: gv0) (selsort al n1)), (Permutation (n0 :: gv0) (selsort l n0)), (Permutation (n0 :: gv0) (selsort l n))
(Permutation (n0 :: gv0) (selsort l n1)), (Permutation (n0 :: gv0) (selsort gv0 n0)), (Permutation (n0 :: gv0) (selsort gv0 n)), (Permutation (n0 :: gv0) (selsort gv0 n1)), (Permutation (n0 :: gv0) (al ++ al)), (Permutation (n0 :: gv0) (al ++ l)), (Permutation (n0 :: gv0) (al ++ gv0)), (Permutation (n0 :: gv0) (l ++ al)), (Permutation (n0 :: gv0) (l ++ l)), (Permutation (n0 :: gv0) (l ++ gv0))
(Permutation (n0 :: gv0) (gv0 ++ al)), (Permutation (n0 :: gv0) (gv0 ++ l)), (Permutation (n0 :: gv0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) []), (Permutation (n :: al) al), (Permutation (n :: al) l), (Permutation (n :: al) gv0), (Permutation (n :: al) (n0 :: al)), (Permutation (n :: al) (n0 :: l)), (Permutation (n :: al) (n0 :: gv0))
(Permutation (n :: al) (n :: l)), (Permutation (n :: al) (n :: gv0)), (Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (n1 :: gv0)), (Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selection_sort l)), (Permutation (n :: al) (selection_sort gv0)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n))
(Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n)), (Permutation (n :: al) (selsort l n1)), (Permutation (n :: al) (selsort gv0 n0)), (Permutation (n :: al) (selsort gv0 n)), (Permutation (n :: al) (selsort gv0 n1)), (Permutation (n :: al) (al ++ al)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (al ++ gv0))
(Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) (l ++ gv0)), (Permutation (n :: al) (gv0 ++ al)), (Permutation (n :: al) (gv0 ++ l)), (Permutation (n :: al) (gv0 ++ gv0)), (Permutation (n :: al) []), (Permutation (n :: l) al), (Permutation (n :: l) l), (Permutation (n :: l) gv0)
(Permutation (n :: l) (n0 :: al)), (Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n0 :: gv0)), (Permutation (n :: l) (n :: al)), (Permutation (n :: l) (n :: gv0)), (Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (n1 :: gv0)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selection_sort l))
(Permutation (n :: l) (selection_sort gv0)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n)), (Permutation (n :: l) (selsort l n1)), (Permutation (n :: l) (selsort gv0 n0)), (Permutation (n :: l) (selsort gv0 n)), (Permutation (n :: l) (selsort gv0 n1))
(Permutation (n :: l) (al ++ al)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (al ++ gv0)), (Permutation (n :: l) (l ++ al)), (Permutation (n :: l) (l ++ l)), (Permutation (n :: l) (l ++ gv0)), (Permutation (n :: l) (gv0 ++ al)), (Permutation (n :: l) (gv0 ++ l)), (Permutation (n :: l) (gv0 ++ gv0)), (Permutation (n :: l) [])
(Permutation (n :: gv0) al), (Permutation (n :: gv0) l), (Permutation (n :: gv0) gv0), (Permutation (n :: gv0) (n0 :: al)), (Permutation (n :: gv0) (n0 :: l)), (Permutation (n :: gv0) (n0 :: gv0)), (Permutation (n :: gv0) (n :: al)), (Permutation (n :: gv0) (n :: l)), (Permutation (n :: gv0) (n1 :: al)), (Permutation (n :: gv0) (n1 :: l))
(Permutation (n :: gv0) (n1 :: gv0)), (Permutation (n :: gv0) (selection_sort al)), (Permutation (n :: gv0) (selection_sort l)), (Permutation (n :: gv0) (selection_sort gv0)), (Permutation (n :: gv0) (selsort al n0)), (Permutation (n :: gv0) (selsort al n)), (Permutation (n :: gv0) (selsort al n1)), (Permutation (n :: gv0) (selsort l n0)), (Permutation (n :: gv0) (selsort l n)), (Permutation (n :: gv0) (selsort l n1))
(Permutation (n :: gv0) (selsort gv0 n0)), (Permutation (n :: gv0) (selsort gv0 n)), (Permutation (n :: gv0) (selsort gv0 n1)), (Permutation (n :: gv0) (al ++ al)), (Permutation (n :: gv0) (al ++ l)), (Permutation (n :: gv0) (al ++ gv0)), (Permutation (n :: gv0) (l ++ al)), (Permutation (n :: gv0) (l ++ l)), (Permutation (n :: gv0) (l ++ gv0)), (Permutation (n :: gv0) (gv0 ++ al))
(Permutation (n :: gv0) (gv0 ++ l)), (Permutation (n :: gv0) (gv0 ++ gv0)), (Permutation (n :: gv0) []), (Permutation (n1 :: al) al), (Permutation (n1 :: al) l), (Permutation (n1 :: al) gv0), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n0 :: l)), (Permutation (n1 :: al) (n0 :: gv0)), (Permutation (n1 :: al) (n :: al))
(Permutation (n1 :: al) (n :: l)), (Permutation (n1 :: al) (n :: gv0)), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (n1 :: gv0)), (Permutation (n1 :: al) (selection_sort al)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selection_sort gv0)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort al n1))
(Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n)), (Permutation (n1 :: al) (selsort l n1)), (Permutation (n1 :: al) (selsort gv0 n0)), (Permutation (n1 :: al) (selsort gv0 n)), (Permutation (n1 :: al) (selsort gv0 n1)), (Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (al ++ gv0)), (Permutation (n1 :: al) (l ++ al))
(Permutation (n1 :: al) (l ++ l)), (Permutation (n1 :: al) (l ++ gv0)), (Permutation (n1 :: al) (gv0 ++ al)), (Permutation (n1 :: al) (gv0 ++ l)), (Permutation (n1 :: al) (gv0 ++ gv0)), (Permutation (n1 :: al) []), (Permutation (n1 :: l) al), (Permutation (n1 :: l) l), (Permutation (n1 :: l) gv0), (Permutation (n1 :: l) (n0 :: al))
(Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: gv0)), (Permutation (n1 :: l) (n :: al)), (Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (n :: gv0)), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (n1 :: gv0)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort gv0))
(Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort gv0 n0)), (Permutation (n1 :: l) (selsort gv0 n)), (Permutation (n1 :: l) (selsort gv0 n1)), (Permutation (n1 :: l) (al ++ al))
(Permutation (n1 :: l) (al ++ l)), (Permutation (n1 :: l) (al ++ gv0)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ gv0)), (Permutation (n1 :: l) (gv0 ++ al)), (Permutation (n1 :: l) (gv0 ++ l)), (Permutation (n1 :: l) (gv0 ++ gv0)), (Permutation (n1 :: l) []), (Permutation (n1 :: gv0) al)
(Permutation (n1 :: gv0) l), (Permutation (n1 :: gv0) gv0), (Permutation (n1 :: gv0) (n0 :: al)), (Permutation (n1 :: gv0) (n0 :: l)), (Permutation (n1 :: gv0) (n0 :: gv0)), (Permutation (n1 :: gv0) (n :: al)), (Permutation (n1 :: gv0) (n :: l)), (Permutation (n1 :: gv0) (n :: gv0)), (Permutation (n1 :: gv0) (n1 :: al)), (Permutation (n1 :: gv0) (n1 :: l))
(Permutation (n1 :: gv0) (selection_sort al)), (Permutation (n1 :: gv0) (selection_sort l)), (Permutation (n1 :: gv0) (selection_sort gv0)), (Permutation (n1 :: gv0) (selsort al n0)), (Permutation (n1 :: gv0) (selsort al n)), (Permutation (n1 :: gv0) (selsort al n1)), (Permutation (n1 :: gv0) (selsort l n0)), (Permutation (n1 :: gv0) (selsort l n)), (Permutation (n1 :: gv0) (selsort l n1)), (Permutation (n1 :: gv0) (selsort gv0 n0))
(Permutation (n1 :: gv0) (selsort gv0 n)), (Permutation (n1 :: gv0) (selsort gv0 n1)), (Permutation (n1 :: gv0) (al ++ al)), (Permutation (n1 :: gv0) (al ++ l)), (Permutation (n1 :: gv0) (al ++ gv0)), (Permutation (n1 :: gv0) (l ++ al)), (Permutation (n1 :: gv0) (l ++ l)), (Permutation (n1 :: gv0) (l ++ gv0)), (Permutation (n1 :: gv0) (gv0 ++ al)), (Permutation (n1 :: gv0) (gv0 ++ l))
(Permutation (n1 :: gv0) (gv0 ++ gv0)), (Permutation (n1 :: gv0) []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) l), (Permutation (selection_sort al) gv0), (Permutation (selection_sort al) (n0 :: al)), (Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n0 :: gv0)), (Permutation (selection_sort al) (n :: al)), (Permutation (selection_sort al) (n :: l))
(Permutation (selection_sort al) (n :: gv0)), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (n1 :: gv0)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selection_sort gv0)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort l n0))
(Permutation (selection_sort al) (selsort l n)), (Permutation (selection_sort al) (selsort l n1)), (Permutation (selection_sort al) (selsort gv0 n0)), (Permutation (selection_sort al) (selsort gv0 n)), (Permutation (selection_sort al) (selsort gv0 n1)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (al ++ gv0)), (Permutation (selection_sort al) (l ++ al)), (Permutation (selection_sort al) (l ++ l))
(Permutation (selection_sort al) (l ++ gv0)), (Permutation (selection_sort al) (gv0 ++ al)), (Permutation (selection_sort al) (gv0 ++ l)), (Permutation (selection_sort al) (gv0 ++ gv0)), (Permutation (selection_sort al) []), (Permutation (selection_sort l) al), (Permutation (selection_sort l) l), (Permutation (selection_sort l) gv0), (Permutation (selection_sort l) (n0 :: al)), (Permutation (selection_sort l) (n0 :: l))
(Permutation (selection_sort l) (n0 :: gv0)), (Permutation (selection_sort l) (n :: al)), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n :: gv0)), (Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: gv0)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selection_sort gv0)), (Permutation (selection_sort l) (selsort al n0))
(Permutation (selection_sort l) (selsort al n)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort gv0 n0)), (Permutation (selection_sort l) (selsort gv0 n)), (Permutation (selection_sort l) (selsort gv0 n1)), (Permutation (selection_sort l) (al ++ al)), (Permutation (selection_sort l) (al ++ l))
(Permutation (selection_sort l) (al ++ gv0)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ gv0)), (Permutation (selection_sort l) (gv0 ++ al)), (Permutation (selection_sort l) (gv0 ++ l)), (Permutation (selection_sort l) (gv0 ++ gv0)), (Permutation (selection_sort l) []), (Permutation (selection_sort gv0) al), (Permutation (selection_sort gv0) l)
(Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (n0 :: al)), (Permutation (selection_sort gv0) (n0 :: l)), (Permutation (selection_sort gv0) (n0 :: gv0)), (Permutation (selection_sort gv0) (n :: al)), (Permutation (selection_sort gv0) (n :: l)), (Permutation (selection_sort gv0) (n :: gv0)), (Permutation (selection_sort gv0) (n1 :: al)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: gv0))
(Permutation (selection_sort gv0) (selection_sort al)), (Permutation (selection_sort gv0) (selection_sort l)), (Permutation (selection_sort gv0) (selsort al n0)), (Permutation (selection_sort gv0) (selsort al n)), (Permutation (selection_sort gv0) (selsort al n1)), (Permutation (selection_sort gv0) (selsort l n0)), (Permutation (selection_sort gv0) (selsort l n)), (Permutation (selection_sort gv0) (selsort l n1)), (Permutation (selection_sort gv0) (selsort gv0 n0)), (Permutation (selection_sort gv0) (selsort gv0 n))
(Permutation (selection_sort gv0) (selsort gv0 n1)), (Permutation (selection_sort gv0) (al ++ al)), (Permutation (selection_sort gv0) (al ++ l)), (Permutation (selection_sort gv0) (al ++ gv0)), (Permutation (selection_sort gv0) (l ++ al)), (Permutation (selection_sort gv0) (l ++ l)), (Permutation (selection_sort gv0) (l ++ gv0)), (Permutation (selection_sort gv0) (gv0 ++ al)), (Permutation (selection_sort gv0) (gv0 ++ l)), (Permutation (selection_sort gv0) (gv0 ++ gv0))
(Permutation (selection_sort gv0) []), (Permutation (selsort al n0) al), (Permutation (selsort al n0) l), (Permutation (selsort al n0) gv0), (Permutation (selsort al n0) (n0 :: al)), (Permutation (selsort al n0) (n0 :: l)), (Permutation (selsort al n0) (n0 :: gv0)), (Permutation (selsort al n0) (n :: al)), (Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (n :: gv0))
(Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (n1 :: gv0)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selection_sort gv0)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort l n0)), (Permutation (selsort al n0) (selsort l n))
(Permutation (selsort al n0) (selsort l n1)), (Permutation (selsort al n0) (selsort gv0 n0)), (Permutation (selsort al n0) (selsort gv0 n)), (Permutation (selsort al n0) (selsort gv0 n1)), (Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) (al ++ l)), (Permutation (selsort al n0) (al ++ gv0)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) (l ++ gv0))
(Permutation (selsort al n0) (gv0 ++ al)), (Permutation (selsort al n0) (gv0 ++ l)), (Permutation (selsort al n0) (gv0 ++ gv0)), (Permutation (selsort al n0) []), (Permutation (selsort al n) al), (Permutation (selsort al n) l), (Permutation (selsort al n) gv0), (Permutation (selsort al n) (n0 :: al)), (Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n0 :: gv0))
(Permutation (selsort al n) (n :: al)), (Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (n :: gv0)), (Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n1 :: l)), (Permutation (selsort al n) (n1 :: gv0)), (Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selection_sort l)), (Permutation (selsort al n) (selection_sort gv0)), (Permutation (selsort al n) (selsort al n0))
(Permutation (selsort al n) (selsort al n1)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n)), (Permutation (selsort al n) (selsort l n1)), (Permutation (selsort al n) (selsort gv0 n0)), (Permutation (selsort al n) (selsort gv0 n)), (Permutation (selsort al n) (selsort gv0 n1)), (Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (al ++ gv0))
(Permutation (selsort al n) (l ++ al)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) (l ++ gv0)), (Permutation (selsort al n) (gv0 ++ al)), (Permutation (selsort al n) (gv0 ++ l)), (Permutation (selsort al n) (gv0 ++ gv0)), (Permutation (selsort al n) []), (Permutation (selsort al n1) al), (Permutation (selsort al n1) l), (Permutation (selsort al n1) gv0)
(Permutation (selsort al n1) (n0 :: al)), (Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n0 :: gv0)), (Permutation (selsort al n1) (n :: al)), (Permutation (selsort al n1) (n :: l)), (Permutation (selsort al n1) (n :: gv0)), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (n1 :: gv0)), (Permutation (selsort al n1) (selection_sort al))
(Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selection_sort gv0)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n)), (Permutation (selsort al n1) (selsort l n1)), (Permutation (selsort al n1) (selsort gv0 n0)), (Permutation (selsort al n1) (selsort gv0 n)), (Permutation (selsort al n1) (selsort gv0 n1))
(Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (al ++ gv0)), (Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (l ++ l)), (Permutation (selsort al n1) (l ++ gv0)), (Permutation (selsort al n1) (gv0 ++ al)), (Permutation (selsort al n1) (gv0 ++ l)), (Permutation (selsort al n1) (gv0 ++ gv0)), (Permutation (selsort al n1) [])
(Permutation (selsort l n0) al), (Permutation (selsort l n0) l), (Permutation (selsort l n0) gv0), (Permutation (selsort l n0) (n0 :: al)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: gv0)), (Permutation (selsort l n0) (n :: al)), (Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (n :: gv0)), (Permutation (selsort l n0) (n1 :: al))
(Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: gv0)), (Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort gv0)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort l n)), (Permutation (selsort l n0) (selsort l n1))
(Permutation (selsort l n0) (selsort gv0 n0)), (Permutation (selsort l n0) (selsort gv0 n)), (Permutation (selsort l n0) (selsort gv0 n1)), (Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (al ++ gv0)), (Permutation (selsort l n0) (l ++ al)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ gv0)), (Permutation (selsort l n0) (gv0 ++ al))
(Permutation (selsort l n0) (gv0 ++ l)), (Permutation (selsort l n0) (gv0 ++ gv0)), (Permutation (selsort l n0) []), (Permutation (selsort l n) al), (Permutation (selsort l n) l), (Permutation (selsort l n) gv0), (Permutation (selsort l n) (n0 :: al)), (Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n0 :: gv0)), (Permutation (selsort l n) (n :: al))
(Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (n :: gv0)), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (n1 :: gv0)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selection_sort gv0)), (Permutation (selsort l n) (selsort al n0)), (Permutation (selsort l n) (selsort al n))
(Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort l n0)), (Permutation (selsort l n) (selsort l n1)), (Permutation (selsort l n) (selsort gv0 n0)), (Permutation (selsort l n) (selsort gv0 n)), (Permutation (selsort l n) (selsort gv0 n1)), (Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (al ++ gv0)), (Permutation (selsort l n) (l ++ al))
(Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) (l ++ gv0)), (Permutation (selsort l n) (gv0 ++ al)), (Permutation (selsort l n) (gv0 ++ l)), (Permutation (selsort l n) (gv0 ++ gv0)), (Permutation (selsort l n) []), (Permutation (selsort l n1) al), (Permutation (selsort l n1) l), (Permutation (selsort l n1) gv0), (Permutation (selsort l n1) (n0 :: al))
(Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: gv0)), (Permutation (selsort l n1) (n :: al)), (Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (n :: gv0)), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: gv0)), (Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selection_sort l))
(Permutation (selsort l n1) (selection_sort gv0)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l n)), (Permutation (selsort l n1) (selsort gv0 n0)), (Permutation (selsort l n1) (selsort gv0 n)), (Permutation (selsort l n1) (selsort gv0 n1)), (Permutation (selsort l n1) (al ++ al))
(Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (al ++ gv0)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ gv0)), (Permutation (selsort l n1) (gv0 ++ al)), (Permutation (selsort l n1) (gv0 ++ l)), (Permutation (selsort l n1) (gv0 ++ gv0)), (Permutation (selsort l n1) []), (Permutation (selsort gv0 n0) al)
(Permutation (selsort gv0 n0) l), (Permutation (selsort gv0 n0) gv0), (Permutation (selsort gv0 n0) (n0 :: al)), (Permutation (selsort gv0 n0) (n0 :: l)), (Permutation (selsort gv0 n0) (n0 :: gv0)), (Permutation (selsort gv0 n0) (n :: al)), (Permutation (selsort gv0 n0) (n :: l)), (Permutation (selsort gv0 n0) (n :: gv0)), (Permutation (selsort gv0 n0) (n1 :: al)), (Permutation (selsort gv0 n0) (n1 :: l))
(Permutation (selsort gv0 n0) (n1 :: gv0)), (Permutation (selsort gv0 n0) (selection_sort al)), (Permutation (selsort gv0 n0) (selection_sort l)), (Permutation (selsort gv0 n0) (selection_sort gv0)), (Permutation (selsort gv0 n0) (selsort al n0)), (Permutation (selsort gv0 n0) (selsort al n)), (Permutation (selsort gv0 n0) (selsort al n1)), (Permutation (selsort gv0 n0) (selsort l n0)), (Permutation (selsort gv0 n0) (selsort l n)), (Permutation (selsort gv0 n0) (selsort l n1))
(Permutation (selsort gv0 n0) (selsort gv0 n)), (Permutation (selsort gv0 n0) (selsort gv0 n1)), (Permutation (selsort gv0 n0) (al ++ al)), (Permutation (selsort gv0 n0) (al ++ l)), (Permutation (selsort gv0 n0) (al ++ gv0)), (Permutation (selsort gv0 n0) (l ++ al)), (Permutation (selsort gv0 n0) (l ++ l)), (Permutation (selsort gv0 n0) (l ++ gv0)), (Permutation (selsort gv0 n0) (gv0 ++ al)), (Permutation (selsort gv0 n0) (gv0 ++ l))
(Permutation (selsort gv0 n0) (gv0 ++ gv0)), (Permutation (selsort gv0 n0) []), (Permutation (selsort gv0 n) al), (Permutation (selsort gv0 n) l), (Permutation (selsort gv0 n) gv0), (Permutation (selsort gv0 n) (n0 :: al)), (Permutation (selsort gv0 n) (n0 :: l)), (Permutation (selsort gv0 n) (n0 :: gv0)), (Permutation (selsort gv0 n) (n :: al)), (Permutation (selsort gv0 n) (n :: l))
(Permutation (selsort gv0 n) (n :: gv0)), (Permutation (selsort gv0 n) (n1 :: al)), (Permutation (selsort gv0 n) (n1 :: l)), (Permutation (selsort gv0 n) (n1 :: gv0)), (Permutation (selsort gv0 n) (selection_sort al)), (Permutation (selsort gv0 n) (selection_sort l)), (Permutation (selsort gv0 n) (selection_sort gv0)), (Permutation (selsort gv0 n) (selsort al n0)), (Permutation (selsort gv0 n) (selsort al n)), (Permutation (selsort gv0 n) (selsort al n1))
(Permutation (selsort gv0 n) (selsort l n0)), (Permutation (selsort gv0 n) (selsort l n)), (Permutation (selsort gv0 n) (selsort l n1)), (Permutation (selsort gv0 n) (selsort gv0 n0)), (Permutation (selsort gv0 n) (selsort gv0 n1)), (Permutation (selsort gv0 n) (al ++ al)), (Permutation (selsort gv0 n) (al ++ l)), (Permutation (selsort gv0 n) (al ++ gv0)), (Permutation (selsort gv0 n) (l ++ al)), (Permutation (selsort gv0 n) (l ++ l))
(Permutation (selsort gv0 n) (l ++ gv0)), (Permutation (selsort gv0 n) (gv0 ++ al)), (Permutation (selsort gv0 n) (gv0 ++ l)), (Permutation (selsort gv0 n) (gv0 ++ gv0)), (Permutation (selsort gv0 n) []), (Permutation (selsort gv0 n1) al), (Permutation (selsort gv0 n1) l), (Permutation (selsort gv0 n1) gv0), (Permutation (selsort gv0 n1) (n0 :: al)), (Permutation (selsort gv0 n1) (n0 :: l))
(Permutation (selsort gv0 n1) (n0 :: gv0)), (Permutation (selsort gv0 n1) (n :: al)), (Permutation (selsort gv0 n1) (n :: l)), (Permutation (selsort gv0 n1) (n :: gv0)), (Permutation (selsort gv0 n1) (n1 :: al)), (Permutation (selsort gv0 n1) (n1 :: l)), (Permutation (selsort gv0 n1) (n1 :: gv0)), (Permutation (selsort gv0 n1) (selection_sort al)), (Permutation (selsort gv0 n1) (selection_sort l)), (Permutation (selsort gv0 n1) (selection_sort gv0))
(Permutation (selsort gv0 n1) (selsort al n0)), (Permutation (selsort gv0 n1) (selsort al n)), (Permutation (selsort gv0 n1) (selsort al n1)), (Permutation (selsort gv0 n1) (selsort l n0)), (Permutation (selsort gv0 n1) (selsort l n)), (Permutation (selsort gv0 n1) (selsort l n1)), (Permutation (selsort gv0 n1) (selsort gv0 n0)), (Permutation (selsort gv0 n1) (selsort gv0 n)), (Permutation (selsort gv0 n1) (al ++ al)), (Permutation (selsort gv0 n1) (al ++ l))
(Permutation (selsort gv0 n1) (al ++ gv0)), (Permutation (selsort gv0 n1) (l ++ al)), (Permutation (selsort gv0 n1) (l ++ l)), (Permutation (selsort gv0 n1) (l ++ gv0)), (Permutation (selsort gv0 n1) (gv0 ++ al)), (Permutation (selsort gv0 n1) (gv0 ++ l)), (Permutation (selsort gv0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n1) []), (Permutation (al ++ al) al), (Permutation (al ++ al) l)
(Permutation (al ++ al) gv0), (Permutation (al ++ al) (n0 :: al)), (Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n0 :: gv0)), (Permutation (al ++ al) (n :: al)), (Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (n :: gv0)), (Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n1 :: l)), (Permutation (al ++ al) (n1 :: gv0))
(Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort l)), (Permutation (al ++ al) (selection_sort gv0)), (Permutation (al ++ al) (selsort al n0)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort l n0)), (Permutation (al ++ al) (selsort l n)), (Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (selsort gv0 n0))
(Permutation (al ++ al) (selsort gv0 n)), (Permutation (al ++ al) (selsort gv0 n1)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) (al ++ gv0)), (Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (l ++ l)), (Permutation (al ++ al) (l ++ gv0)), (Permutation (al ++ al) (gv0 ++ al)), (Permutation (al ++ al) (gv0 ++ l)), (Permutation (al ++ al) (gv0 ++ gv0))
(Permutation (al ++ al) []), (Permutation (al ++ l) al), (Permutation (al ++ l) l), (Permutation (al ++ l) gv0), (Permutation (al ++ l) (n0 :: al)), (Permutation (al ++ l) (n0 :: l)), (Permutation (al ++ l) (n0 :: gv0)), (Permutation (al ++ l) (n :: al)), (Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (n :: gv0))
(Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (n1 :: gv0)), (Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selection_sort l)), (Permutation (al ++ l) (selection_sort gv0)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort l n0))
(Permutation (al ++ l) (selsort l n)), (Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (selsort gv0 n0)), (Permutation (al ++ l) (selsort gv0 n)), (Permutation (al ++ l) (selsort gv0 n1)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) (al ++ gv0)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) (l ++ gv0))
(Permutation (al ++ l) (gv0 ++ al)), (Permutation (al ++ l) (gv0 ++ l)), (Permutation (al ++ l) (gv0 ++ gv0)), (Permutation (al ++ l) []), (Permutation (al ++ gv0) al), (Permutation (al ++ gv0) l), (Permutation (al ++ gv0) gv0), (Permutation (al ++ gv0) (n0 :: al)), (Permutation (al ++ gv0) (n0 :: l)), (Permutation (al ++ gv0) (n0 :: gv0))
(Permutation (al ++ gv0) (n :: al)), (Permutation (al ++ gv0) (n :: l)), (Permutation (al ++ gv0) (n :: gv0)), (Permutation (al ++ gv0) (n1 :: al)), (Permutation (al ++ gv0) (n1 :: l)), (Permutation (al ++ gv0) (n1 :: gv0)), (Permutation (al ++ gv0) (selection_sort al)), (Permutation (al ++ gv0) (selection_sort l)), (Permutation (al ++ gv0) (selection_sort gv0)), (Permutation (al ++ gv0) (selsort al n0))
(Permutation (al ++ gv0) (selsort al n)), (Permutation (al ++ gv0) (selsort al n1)), (Permutation (al ++ gv0) (selsort l n0)), (Permutation (al ++ gv0) (selsort l n)), (Permutation (al ++ gv0) (selsort l n1)), (Permutation (al ++ gv0) (selsort gv0 n0)), (Permutation (al ++ gv0) (selsort gv0 n)), (Permutation (al ++ gv0) (selsort gv0 n1)), (Permutation (al ++ gv0) (al ++ al)), (Permutation (al ++ gv0) (al ++ l))
(Permutation (al ++ gv0) (l ++ al)), (Permutation (al ++ gv0) (l ++ l)), (Permutation (al ++ gv0) (l ++ gv0)), (Permutation (al ++ gv0) (gv0 ++ al)), (Permutation (al ++ gv0) (gv0 ++ l)), (Permutation (al ++ gv0) (gv0 ++ gv0)), (Permutation (al ++ gv0) []), (Permutation (l ++ al) al), (Permutation (l ++ al) l), (Permutation (l ++ al) gv0)
(Permutation (l ++ al) (n0 :: al)), (Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n0 :: gv0)), (Permutation (l ++ al) (n :: al)), (Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (n :: gv0)), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (n1 :: gv0)), (Permutation (l ++ al) (selection_sort al))
(Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selection_sort gv0)), (Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort l n0)), (Permutation (l ++ al) (selsort l n)), (Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (selsort gv0 n0)), (Permutation (l ++ al) (selsort gv0 n))
(Permutation (l ++ al) (selsort gv0 n1)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (al ++ gv0)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) (l ++ gv0)), (Permutation (l ++ al) (gv0 ++ al)), (Permutation (l ++ al) (gv0 ++ l)), (Permutation (l ++ al) (gv0 ++ gv0)), (Permutation (l ++ al) [])
(Permutation (l ++ l) al), (Permutation (l ++ l) l), (Permutation (l ++ l) gv0), (Permutation (l ++ l) (n0 :: al)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: gv0)), (Permutation (l ++ l) (n :: al)), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n :: gv0)), (Permutation (l ++ l) (n1 :: al))
(Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: gv0)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort gv0)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n))
(Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort gv0 n0)), (Permutation (l ++ l) (selsort gv0 n)), (Permutation (l ++ l) (selsort gv0 n1)), (Permutation (l ++ l) (al ++ al)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (al ++ gv0)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) (l ++ gv0)), (Permutation (l ++ l) (gv0 ++ al))
(Permutation (l ++ l) (gv0 ++ l)), (Permutation (l ++ l) (gv0 ++ gv0)), (Permutation (l ++ l) []), (Permutation (l ++ gv0) al), (Permutation (l ++ gv0) l), (Permutation (l ++ gv0) gv0), (Permutation (l ++ gv0) (n0 :: al)), (Permutation (l ++ gv0) (n0 :: l)), (Permutation (l ++ gv0) (n0 :: gv0)), (Permutation (l ++ gv0) (n :: al))
(Permutation (l ++ gv0) (n :: l)), (Permutation (l ++ gv0) (n :: gv0)), (Permutation (l ++ gv0) (n1 :: al)), (Permutation (l ++ gv0) (n1 :: l)), (Permutation (l ++ gv0) (n1 :: gv0)), (Permutation (l ++ gv0) (selection_sort al)), (Permutation (l ++ gv0) (selection_sort l)), (Permutation (l ++ gv0) (selection_sort gv0)), (Permutation (l ++ gv0) (selsort al n0)), (Permutation (l ++ gv0) (selsort al n))
(Permutation (l ++ gv0) (selsort al n1)), (Permutation (l ++ gv0) (selsort l n0)), (Permutation (l ++ gv0) (selsort l n)), (Permutation (l ++ gv0) (selsort l n1)), (Permutation (l ++ gv0) (selsort gv0 n0)), (Permutation (l ++ gv0) (selsort gv0 n)), (Permutation (l ++ gv0) (selsort gv0 n1)), (Permutation (l ++ gv0) (al ++ al)), (Permutation (l ++ gv0) (al ++ l)), (Permutation (l ++ gv0) (al ++ gv0))
(Permutation (l ++ gv0) (l ++ al)), (Permutation (l ++ gv0) (l ++ l)), (Permutation (l ++ gv0) (gv0 ++ al)), (Permutation (l ++ gv0) (gv0 ++ l)), (Permutation (l ++ gv0) (gv0 ++ gv0)), (Permutation (l ++ gv0) []), (Permutation (gv0 ++ al) al), (Permutation (gv0 ++ al) l), (Permutation (gv0 ++ al) gv0), (Permutation (gv0 ++ al) (n0 :: al))
(Permutation (gv0 ++ al) (n0 :: l)), (Permutation (gv0 ++ al) (n0 :: gv0)), (Permutation (gv0 ++ al) (n :: al)), (Permutation (gv0 ++ al) (n :: l)), (Permutation (gv0 ++ al) (n :: gv0)), (Permutation (gv0 ++ al) (n1 :: al)), (Permutation (gv0 ++ al) (n1 :: l)), (Permutation (gv0 ++ al) (n1 :: gv0)), (Permutation (gv0 ++ al) (selection_sort al)), (Permutation (gv0 ++ al) (selection_sort l))
(Permutation (gv0 ++ al) (selection_sort gv0)), (Permutation (gv0 ++ al) (selsort al n0)), (Permutation (gv0 ++ al) (selsort al n)), (Permutation (gv0 ++ al) (selsort al n1)), (Permutation (gv0 ++ al) (selsort l n0)), (Permutation (gv0 ++ al) (selsort l n)), (Permutation (gv0 ++ al) (selsort l n1)), (Permutation (gv0 ++ al) (selsort gv0 n0)), (Permutation (gv0 ++ al) (selsort gv0 n)), (Permutation (gv0 ++ al) (selsort gv0 n1))
(Permutation (gv0 ++ al) (al ++ al)), (Permutation (gv0 ++ al) (al ++ l)), (Permutation (gv0 ++ al) (al ++ gv0)), (Permutation (gv0 ++ al) (l ++ al)), (Permutation (gv0 ++ al) (l ++ l)), (Permutation (gv0 ++ al) (l ++ gv0)), (Permutation (gv0 ++ al) (gv0 ++ l)), (Permutation (gv0 ++ al) (gv0 ++ gv0)), (Permutation (gv0 ++ al) []), (Permutation (gv0 ++ l) al)
(Permutation (gv0 ++ l) l), (Permutation (gv0 ++ l) gv0), (Permutation (gv0 ++ l) (n0 :: al)), (Permutation (gv0 ++ l) (n0 :: l)), (Permutation (gv0 ++ l) (n0 :: gv0)), (Permutation (gv0 ++ l) (n :: al)), (Permutation (gv0 ++ l) (n :: l)), (Permutation (gv0 ++ l) (n :: gv0)), (Permutation (gv0 ++ l) (n1 :: al)), (Permutation (gv0 ++ l) (n1 :: l))
(Permutation (gv0 ++ l) (n1 :: gv0)), (Permutation (gv0 ++ l) (selection_sort al)), (Permutation (gv0 ++ l) (selection_sort l)), (Permutation (gv0 ++ l) (selection_sort gv0)), (Permutation (gv0 ++ l) (selsort al n0)), (Permutation (gv0 ++ l) (selsort al n)), (Permutation (gv0 ++ l) (selsort al n1)), (Permutation (gv0 ++ l) (selsort l n0)), (Permutation (gv0 ++ l) (selsort l n)), (Permutation (gv0 ++ l) (selsort l n1))
(Permutation (gv0 ++ l) (selsort gv0 n0)), (Permutation (gv0 ++ l) (selsort gv0 n)), (Permutation (gv0 ++ l) (selsort gv0 n1)), (Permutation (gv0 ++ l) (al ++ al)), (Permutation (gv0 ++ l) (al ++ l)), (Permutation (gv0 ++ l) (al ++ gv0)), (Permutation (gv0 ++ l) (l ++ al)), (Permutation (gv0 ++ l) (l ++ l)), (Permutation (gv0 ++ l) (l ++ gv0)), (Permutation (gv0 ++ l) (gv0 ++ al))
(Permutation (gv0 ++ l) (gv0 ++ gv0)), (Permutation (gv0 ++ l) []), (Permutation (gv0 ++ gv0) al), (Permutation (gv0 ++ gv0) l), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (n0 :: al)), (Permutation (gv0 ++ gv0) (n0 :: l)), (Permutation (gv0 ++ gv0) (n0 :: gv0)), (Permutation (gv0 ++ gv0) (n :: al)), (Permutation (gv0 ++ gv0) (n :: l))
(Permutation (gv0 ++ gv0) (n :: gv0)), (Permutation (gv0 ++ gv0) (n1 :: al)), (Permutation (gv0 ++ gv0) (n1 :: l)), (Permutation (gv0 ++ gv0) (n1 :: gv0)), (Permutation (gv0 ++ gv0) (selection_sort al)), (Permutation (gv0 ++ gv0) (selection_sort l)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (selsort al n0)), (Permutation (gv0 ++ gv0) (selsort al n)), (Permutation (gv0 ++ gv0) (selsort al n1))
(Permutation (gv0 ++ gv0) (selsort l n0)), (Permutation (gv0 ++ gv0) (selsort l n)), (Permutation (gv0 ++ gv0) (selsort l n1)), (Permutation (gv0 ++ gv0) (selsort gv0 n0)), (Permutation (gv0 ++ gv0) (selsort gv0 n)), (Permutation (gv0 ++ gv0) (selsort gv0 n1)), (Permutation (gv0 ++ gv0) (al ++ al)), (Permutation (gv0 ++ gv0) (al ++ l)), (Permutation (gv0 ++ gv0) (al ++ gv0)), (Permutation (gv0 ++ gv0) (l ++ al))
(Permutation (gv0 ++ gv0) (l ++ l)), (Permutation (gv0 ++ gv0) (l ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ al)), (Permutation (gv0 ++ gv0) (gv0 ++ l)), (Permutation (gv0 ++ gv0) []), (Permutation [] al), (Permutation [] l), (Permutation [] gv0), (Permutation [] (n0 :: al)), (Permutation [] (n0 :: l))
(Permutation [] (n0 :: gv0)), (Permutation [] (n :: al)), (Permutation [] (n :: l)), (Permutation [] (n :: gv0)), (Permutation [] (n1 :: al)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: gv0)), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort gv0))
(Permutation [] (selsort al n0)), (Permutation [] (selsort al n)), (Permutation [] (selsort al n1)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n)), (Permutation [] (selsort l n1)), (Permutation [] (selsort gv0 n0)), (Permutation [] (selsort gv0 n)), (Permutation [] (selsort gv0 n1)), (Permutation [] (al ++ al))
(Permutation [] (al ++ l)), (Permutation [] (al ++ gv0)), (Permutation [] (l ++ al)), (Permutation [] (l ++ l)), (Permutation [] (l ++ gv0)), (Permutation [] (gv0 ++ al)), (Permutation [] (gv0 ++ l)), (Permutation [] (gv0 ++ gv0)), (In n0 (n0 :: al)), (In n0 (n0 :: l))
(In n0 (n0 :: gv0)), (In n0 (n :: al)), (In n0 (n :: l)), (In n0 (n :: gv0)), (In n0 (n1 :: al)), (In n0 (n1 :: l)), (In n0 (n1 :: gv0)), (In n0 (selection_sort al)), (In n0 (selection_sort l)), (In n0 (selection_sort gv0))
(In n0 (selsort al n0)), (In n0 (selsort al n)), (In n0 (selsort al n1)), (In n0 (selsort l n0)), (In n0 (selsort l n)), (In n0 (selsort l n1)), (In n0 (selsort gv0 n0)), (In n0 (selsort gv0 n)), (In n0 (selsort gv0 n1)), (In n0 (al ++ al))
(In n0 (al ++ l)), (In n0 (al ++ gv0)), (In n0 (l ++ al)), (In n0 (l ++ l)), (In n0 (l ++ gv0)), (In n0 (gv0 ++ al)), (In n0 (gv0 ++ l)), (In n0 (gv0 ++ gv0)), (In n (n0 :: al)), (In n (n0 :: l))
(In n (n0 :: gv0)), (In n (n :: al)), (In n (n :: l)), (In n (n :: gv0)), (In n (n1 :: al)), (In n (n1 :: l)), (In n (n1 :: gv0)), (In n (selection_sort al)), (In n (selection_sort l)), (In n (selection_sort gv0))
(In n (selsort al n0)), (In n (selsort al n)), (In n (selsort al n1)), (In n (selsort l n0)), (In n (selsort l n)), (In n (selsort l n1)), (In n (selsort gv0 n0)), (In n (selsort gv0 n)), (In n (selsort gv0 n1)), (In n (al ++ al))
(In n (al ++ l)), (In n (al ++ gv0)), (In n (l ++ al)), (In n (l ++ l)), (In n (l ++ gv0)), (In n (gv0 ++ al)), (In n (gv0 ++ l)), (In n (gv0 ++ gv0)), (In n1 (n0 :: al)), (In n1 (n0 :: l))
(In n1 (n0 :: gv0)), (In n1 (n :: al)), (In n1 (n :: l)), (In n1 (n :: gv0)), (In n1 (n1 :: al)), (In n1 (n1 :: l)), (In n1 (n1 :: gv0)), (In n1 (selection_sort al)), (In n1 (selection_sort l)), (In n1 (selection_sort gv0))
(In n1 (selsort al n0)), (In n1 (selsort al n)), (In n1 (selsort al n1)), (In n1 (selsort l n0)), (In n1 (selsort l n)), (In n1 (selsort l n1)), (In n1 (selsort gv0 n0)), (In n1 (selsort gv0 n)), (In n1 (selsort gv0 n1)), (In n1 (al ++ al))
(In n1 (al ++ l)), (In n1 (al ++ gv0)), (In n1 (l ++ al)), (In n1 (l ++ l)), (In n1 (l ++ gv0)), (In n1 (gv0 ++ al)), (In n1 (gv0 ++ l)), (In n1 (gv0 ++ gv0)), (In (length al) al), (In (length al) l)
(In (length al) gv0), (In (length al) (n0 :: al)), (In (length al) (n0 :: l)), (In (length al) (n0 :: gv0)), (In (length al) (n :: al)), (In (length al) (n :: l)), (In (length al) (n :: gv0)), (In (length al) (n1 :: al)), (In (length al) (n1 :: l)), (In (length al) (n1 :: gv0))
(In (length al) (selection_sort al)), (In (length al) (selection_sort l)), (In (length al) (selection_sort gv0)), (In (length al) (selsort al n0)), (In (length al) (selsort al n)), (In (length al) (selsort al n1)), (In (length al) (selsort l n0)), (In (length al) (selsort l n)), (In (length al) (selsort l n1)), (In (length al) (selsort gv0 n0))
(In (length al) (selsort gv0 n)), (In (length al) (selsort gv0 n1)), (In (length al) (al ++ al)), (In (length al) (al ++ l)), (In (length al) (al ++ gv0)), (In (length al) (l ++ al)), (In (length al) (l ++ l)), (In (length al) (l ++ gv0)), (In (length al) (gv0 ++ al)), (In (length al) (gv0 ++ l))
(In (length al) (gv0 ++ gv0)), (In (length l) al), (In (length l) l), (In (length l) gv0), (In (length l) (n0 :: al)), (In (length l) (n0 :: l)), (In (length l) (n0 :: gv0)), (In (length l) (n :: al)), (In (length l) (n :: l)), (In (length l) (n :: gv0))
(In (length l) (n1 :: al)), (In (length l) (n1 :: l)), (In (length l) (n1 :: gv0)), (In (length l) (selection_sort al)), (In (length l) (selection_sort l)), (In (length l) (selection_sort gv0)), (In (length l) (selsort al n0)), (In (length l) (selsort al n)), (In (length l) (selsort al n1)), (In (length l) (selsort l n0))
(In (length l) (selsort l n)), (In (length l) (selsort l n1)), (In (length l) (selsort gv0 n0)), (In (length l) (selsort gv0 n)), (In (length l) (selsort gv0 n1)), (In (length l) (al ++ al)), (In (length l) (al ++ l)), (In (length l) (al ++ gv0)), (In (length l) (l ++ al)), (In (length l) (l ++ l))
(In (length l) (l ++ gv0)), (In (length l) (gv0 ++ al)), (In (length l) (gv0 ++ l)), (In (length l) (gv0 ++ gv0)), (In (length gv0) al), (In (length gv0) l), (In (length gv0) gv0), (In (length gv0) (n0 :: al)), (In (length gv0) (n0 :: l)), (In (length gv0) (n0 :: gv0))
(In (length gv0) (n :: al)), (In (length gv0) (n :: l)), (In (length gv0) (n :: gv0)), (In (length gv0) (n1 :: al)), (In (length gv0) (n1 :: l)), (In (length gv0) (n1 :: gv0)), (In (length gv0) (selection_sort al)), (In (length gv0) (selection_sort l)), (In (length gv0) (selection_sort gv0)), (In (length gv0) (selsort al n0))
(In (length gv0) (selsort al n)), (In (length gv0) (selsort al n1)), (In (length gv0) (selsort l n0)), (In (length gv0) (selsort l n)), (In (length gv0) (selsort l n1)), (In (length gv0) (selsort gv0 n0)), (In (length gv0) (selsort gv0 n)), (In (length gv0) (selsort gv0 n1)), (In (length gv0) (al ++ al)), (In (length gv0) (al ++ l))
(In (length gv0) (al ++ gv0)), (In (length gv0) (l ++ al)), (In (length gv0) (l ++ l)), (In (length gv0) (l ++ gv0)), (In (length gv0) (gv0 ++ al)), (In (length gv0) (gv0 ++ l)), (In (length gv0) (gv0 ++ gv0)), (n0 < length al), (n0 < length l), (n0 < length gv0)
(n < length al), (n < length l), (n < length gv0), (n1 < length al), (n1 < length l), (n1 < length gv0), (length al < n0), (length al < n), (length al < n1), (length al < length l)
(length al < length gv0), (length l < n0), (length l < n), (length l < n1), (length l < length al), (length l < length gv0), (length gv0 < n0), (length gv0 < n), (length gv0 < n1), (length gv0 < length al)
(length gv0 < length l), (n0 <= length al), (n0 <= length l), (n0 <= length gv0), (n <= length al), (n <= length l), (n <= length gv0), (n1 <= length al), (n1 <= length l), (n1 <= length gv0)
(length al <= n0), (length al <= n), (length al <= n1), (length al <= length l), (length al <= length gv0), (length l <= n0), (length l <= n), (length l <= n1), (length l <= length al), (length l <= length gv0)
(length gv0 <= n0), (length gv0 <= n), (length gv0 <= n1), (length gv0 <= length al), (length gv0 <= length l), (~ n0 <=* al), (~ n0 <=* l), (~ n0 <=* gv0), (~ n <=* al), (~ n <=* l)
(~ n <=* gv0), (~ n1 <=* al), (~ n1 <=* l), (~ n1 <=* gv0), (~ sorted al), (~ sorted l), (~ sorted gv0), (~ Permutation al al), (~ Permutation al l), (~ Permutation al gv0)
(~ Permutation l al), (~ Permutation l l), (~ Permutation l gv0), (~ Permutation gv0 al), (~ Permutation gv0 l), (~ Permutation gv0 gv0), (~ In n0 al), (~ In n0 l), (~ In n0 gv0), (~ In n al)
(~ In n l), (~ In n gv0), (~ In n1 al), (~ In n1 l), (~ In n1 gv0), (~ n0 < n0), (~ n0 < n), (~ n0 < n1), (~ n < n0), (~ n < n)
(~ n < n1), (~ n1 < n0), (~ n1 < n), (~ n1 < n1), (~ n0 <= n0), (~ n0 <= n), (~ n0 <= n1), (~ n <= n0), (~ n <= n), (~ n <= n1)
(~ n1 <= n0), (~ n1 <= n), (~ n1 <= n1), (n0 <> n0), (n0 <> n), (n0 <> n1), (n <> n0), (n <> n), (n <> n1), (n1 <> n0)
(n1 <> n), (n1 <> n1), (al <> al), (al <> l), (al <> gv0), (l <> al), (l <> l), (l <> gv0), (gv0 <> al), (gv0 <> l)
(gv0 <> gv0), (None = Some al), (None = Some l), (None = Some gv0), (n0 :: al = al), (n0 :: al = l), (n0 :: al = gv0), (n0 :: al = selection_sort al), (n0 :: al = selection_sort l), (n0 :: al = selection_sort gv0)
(n0 :: al = selsort al n0), (n0 :: al = selsort al n), (n0 :: al = selsort al n1), (n0 :: al = selsort l n0), (n0 :: al = selsort l n), (n0 :: al = selsort l n1), (n0 :: al = selsort gv0 n0), (n0 :: al = selsort gv0 n), (n0 :: al = selsort gv0 n1), (n0 :: al = al ++ al)
(n0 :: al = al ++ l), (n0 :: al = al ++ gv0), (n0 :: al = l ++ al), (n0 :: al = l ++ l), (n0 :: al = l ++ gv0), (n0 :: al = gv0 ++ al), (n0 :: al = gv0 ++ l), (n0 :: al = gv0 ++ gv0), (n0 :: al = []), (n0 :: l = al)
(n0 :: l = l), (n0 :: l = gv0), (n0 :: l = selection_sort al), (n0 :: l = selection_sort l), (n0 :: l = selection_sort gv0), (n0 :: l = selsort al n0), (n0 :: l = selsort al n), (n0 :: l = selsort al n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l n)
(n0 :: l = selsort l n1), (n0 :: l = selsort gv0 n0), (n0 :: l = selsort gv0 n), (n0 :: l = selsort gv0 n1), (n0 :: l = al ++ al), (n0 :: l = al ++ l), (n0 :: l = al ++ gv0), (n0 :: l = l ++ al), (n0 :: l = l ++ l), (n0 :: l = l ++ gv0)
(n0 :: l = gv0 ++ al), (n0 :: l = gv0 ++ l), (n0 :: l = gv0 ++ gv0), (n0 :: l = []), (n0 :: gv0 = al), (n0 :: gv0 = l), (n0 :: gv0 = gv0), (n0 :: gv0 = selection_sort al), (n0 :: gv0 = selection_sort l), (n0 :: gv0 = selection_sort gv0)
(n0 :: gv0 = selsort al n0), (n0 :: gv0 = selsort al n), (n0 :: gv0 = selsort al n1), (n0 :: gv0 = selsort l n0), (n0 :: gv0 = selsort l n), (n0 :: gv0 = selsort l n1), (n0 :: gv0 = selsort gv0 n0), (n0 :: gv0 = selsort gv0 n), (n0 :: gv0 = selsort gv0 n1), (n0 :: gv0 = al ++ al)
(n0 :: gv0 = al ++ l), (n0 :: gv0 = al ++ gv0), (n0 :: gv0 = l ++ al), (n0 :: gv0 = l ++ l), (n0 :: gv0 = l ++ gv0), (n0 :: gv0 = gv0 ++ al), (n0 :: gv0 = gv0 ++ l), (n0 :: gv0 = gv0 ++ gv0), (n0 :: gv0 = []), (n :: al = al)
(n :: al = l), (n :: al = gv0), (n :: al = selection_sort al), (n :: al = selection_sort l), (n :: al = selection_sort gv0), (n :: al = selsort al n0), (n :: al = selsort al n), (n :: al = selsort al n1), (n :: al = selsort l n0), (n :: al = selsort l n)
(n :: al = selsort l n1), (n :: al = selsort gv0 n0), (n :: al = selsort gv0 n), (n :: al = selsort gv0 n1), (n :: al = al ++ al), (n :: al = al ++ l), (n :: al = al ++ gv0), (n :: al = l ++ al), (n :: al = l ++ l), (n :: al = l ++ gv0)
(n :: al = gv0 ++ al), (n :: al = gv0 ++ l), (n :: al = gv0 ++ gv0), (n :: al = []), (n :: l = al), (n :: l = l), (n :: l = gv0), (n :: l = selection_sort al), (n :: l = selection_sort l), (n :: l = selection_sort gv0)
(n :: l = selsort al n0), (n :: l = selsort al n), (n :: l = selsort al n1), (n :: l = selsort l n0), (n :: l = selsort l n), (n :: l = selsort l n1), (n :: l = selsort gv0 n0), (n :: l = selsort gv0 n), (n :: l = selsort gv0 n1), (n :: l = al ++ al)
(n :: l = al ++ l), (n :: l = al ++ gv0), (n :: l = l ++ al), (n :: l = l ++ l), (n :: l = l ++ gv0), (n :: l = gv0 ++ al), (n :: l = gv0 ++ l), (n :: l = gv0 ++ gv0), (n :: l = []), (n :: gv0 = al)
(n :: gv0 = l), (n :: gv0 = gv0), (n :: gv0 = selection_sort al), (n :: gv0 = selection_sort l), (n :: gv0 = selection_sort gv0), (n :: gv0 = selsort al n0), (n :: gv0 = selsort al n), (n :: gv0 = selsort al n1), (n :: gv0 = selsort l n0), (n :: gv0 = selsort l n)
(n :: gv0 = selsort l n1), (n :: gv0 = selsort gv0 n0), (n :: gv0 = selsort gv0 n), (n :: gv0 = selsort gv0 n1), (n :: gv0 = al ++ al), (n :: gv0 = al ++ l), (n :: gv0 = al ++ gv0), (n :: gv0 = l ++ al), (n :: gv0 = l ++ l), (n :: gv0 = l ++ gv0)
(n :: gv0 = gv0 ++ al), (n :: gv0 = gv0 ++ l), (n :: gv0 = gv0 ++ gv0), (n :: gv0 = []), (n1 :: al = al), (n1 :: al = l), (n1 :: al = gv0), (n1 :: al = selection_sort al), (n1 :: al = selection_sort l), (n1 :: al = selection_sort gv0)
(n1 :: al = selsort al n0), (n1 :: al = selsort al n), (n1 :: al = selsort al n1), (n1 :: al = selsort l n0), (n1 :: al = selsort l n), (n1 :: al = selsort l n1), (n1 :: al = selsort gv0 n0), (n1 :: al = selsort gv0 n), (n1 :: al = selsort gv0 n1), (n1 :: al = al ++ al)
(n1 :: al = al ++ l), (n1 :: al = al ++ gv0), (n1 :: al = l ++ al), (n1 :: al = l ++ l), (n1 :: al = l ++ gv0), (n1 :: al = gv0 ++ al), (n1 :: al = gv0 ++ l), (n1 :: al = gv0 ++ gv0), (n1 :: al = []), (n1 :: l = al)
(n1 :: l = l), (n1 :: l = gv0), (n1 :: l = selection_sort al), (n1 :: l = selection_sort l), (n1 :: l = selection_sort gv0), (n1 :: l = selsort al n0), (n1 :: l = selsort al n), (n1 :: l = selsort al n1), (n1 :: l = selsort l n0), (n1 :: l = selsort l n)
(n1 :: l = selsort l n1), (n1 :: l = selsort gv0 n0), (n1 :: l = selsort gv0 n), (n1 :: l = selsort gv0 n1), (n1 :: l = al ++ al), (n1 :: l = al ++ l), (n1 :: l = al ++ gv0), (n1 :: l = l ++ al), (n1 :: l = l ++ l), (n1 :: l = l ++ gv0)
(n1 :: l = gv0 ++ al), (n1 :: l = gv0 ++ l), (n1 :: l = gv0 ++ gv0), (n1 :: l = []), (n1 :: gv0 = al), (n1 :: gv0 = l), (n1 :: gv0 = gv0), (n1 :: gv0 = selection_sort al), (n1 :: gv0 = selection_sort l), (n1 :: gv0 = selection_sort gv0)
(n1 :: gv0 = selsort al n0), (n1 :: gv0 = selsort al n), (n1 :: gv0 = selsort al n1), (n1 :: gv0 = selsort l n0), (n1 :: gv0 = selsort l n), (n1 :: gv0 = selsort l n1), (n1 :: gv0 = selsort gv0 n0), (n1 :: gv0 = selsort gv0 n), (n1 :: gv0 = selsort gv0 n1), (n1 :: gv0 = al ++ al)
(n1 :: gv0 = al ++ l), (n1 :: gv0 = al ++ gv0), (n1 :: gv0 = l ++ al), (n1 :: gv0 = l ++ l), (n1 :: gv0 = l ++ gv0), (n1 :: gv0 = gv0 ++ al), (n1 :: gv0 = gv0 ++ l), (n1 :: gv0 = gv0 ++ gv0), (n1 :: gv0 = []), (selection_sort al = al)
(selection_sort al = l), (selection_sort al = gv0), (selection_sort al = al ++ al), (selection_sort al = al ++ l), (selection_sort al = al ++ gv0), (selection_sort al = l ++ al), (selection_sort al = l ++ l), (selection_sort al = l ++ gv0), (selection_sort al = gv0 ++ al), (selection_sort al = gv0 ++ l)
(selection_sort al = gv0 ++ gv0), (selection_sort l = al), (selection_sort l = l), (selection_sort l = gv0), (selection_sort l = al ++ al), (selection_sort l = al ++ l), (selection_sort l = al ++ gv0), (selection_sort l = l ++ al), (selection_sort l = l ++ l), (selection_sort l = l ++ gv0)
(selection_sort l = gv0 ++ al), (selection_sort l = gv0 ++ l), (selection_sort l = gv0 ++ gv0), (selection_sort gv0 = al), (selection_sort gv0 = l), (selection_sort gv0 = gv0), (selection_sort gv0 = al ++ al), (selection_sort gv0 = al ++ l), (selection_sort gv0 = al ++ gv0), (selection_sort gv0 = l ++ al)
(selection_sort gv0 = l ++ l), (selection_sort gv0 = l ++ gv0), (selection_sort gv0 = gv0 ++ al), (selection_sort gv0 = gv0 ++ l), (selection_sort gv0 = gv0 ++ gv0), (selsort al n0 = al), (selsort al n0 = l), (selsort al n0 = gv0), (selsort al n0 = selection_sort al), (selsort al n0 = selection_sort l)
(selsort al n0 = selection_sort gv0), (selsort al n0 = al ++ al), (selsort al n0 = al ++ l), (selsort al n0 = al ++ gv0), (selsort al n0 = l ++ al), (selsort al n0 = l ++ l), (selsort al n0 = l ++ gv0), (selsort al n0 = gv0 ++ al), (selsort al n0 = gv0 ++ l), (selsort al n0 = gv0 ++ gv0)
(selsort al n = al), (selsort al n = l), (selsort al n = gv0), (selsort al n = selection_sort al), (selsort al n = selection_sort l), (selsort al n = selection_sort gv0), (selsort al n = al ++ al), (selsort al n = al ++ l), (selsort al n = al ++ gv0), (selsort al n = l ++ al)
(selsort al n = l ++ l), (selsort al n = l ++ gv0), (selsort al n = gv0 ++ al), (selsort al n = gv0 ++ l), (selsort al n = gv0 ++ gv0), (selsort al n1 = al), (selsort al n1 = l), (selsort al n1 = gv0), (selsort al n1 = selection_sort al), (selsort al n1 = selection_sort l)
(selsort al n1 = selection_sort gv0), (selsort al n1 = al ++ al), (selsort al n1 = al ++ l), (selsort al n1 = al ++ gv0), (selsort al n1 = l ++ al), (selsort al n1 = l ++ l), (selsort al n1 = l ++ gv0), (selsort al n1 = gv0 ++ al), (selsort al n1 = gv0 ++ l), (selsort al n1 = gv0 ++ gv0)
(selsort l n0 = al), (selsort l n0 = l), (selsort l n0 = gv0), (selsort l n0 = selection_sort al), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort gv0), (selsort l n0 = al ++ al), (selsort l n0 = al ++ l), (selsort l n0 = al ++ gv0), (selsort l n0 = l ++ al)
(selsort l n0 = l ++ l), (selsort l n0 = l ++ gv0), (selsort l n0 = gv0 ++ al), (selsort l n0 = gv0 ++ l), (selsort l n0 = gv0 ++ gv0), (selsort l n = al), (selsort l n = l), (selsort l n = gv0), (selsort l n = selection_sort al), (selsort l n = selection_sort l)
(selsort l n = selection_sort gv0), (selsort l n = al ++ al), (selsort l n = al ++ l), (selsort l n = al ++ gv0), (selsort l n = l ++ al), (selsort l n = l ++ l), (selsort l n = l ++ gv0), (selsort l n = gv0 ++ al), (selsort l n = gv0 ++ l), (selsort l n = gv0 ++ gv0)
(selsort l n1 = al), (selsort l n1 = l), (selsort l n1 = gv0), (selsort l n1 = selection_sort al), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort gv0), (selsort l n1 = al ++ al), (selsort l n1 = al ++ l), (selsort l n1 = al ++ gv0), (selsort l n1 = l ++ al)
(selsort l n1 = l ++ l), (selsort l n1 = l ++ gv0), (selsort l n1 = gv0 ++ al), (selsort l n1 = gv0 ++ l), (selsort l n1 = gv0 ++ gv0), (selsort gv0 n0 = al), (selsort gv0 n0 = l), (selsort gv0 n0 = gv0), (selsort gv0 n0 = selection_sort al), (selsort gv0 n0 = selection_sort l)
(selsort gv0 n0 = selection_sort gv0), (selsort gv0 n0 = al ++ al), (selsort gv0 n0 = al ++ l), (selsort gv0 n0 = al ++ gv0), (selsort gv0 n0 = l ++ al), (selsort gv0 n0 = l ++ l), (selsort gv0 n0 = l ++ gv0), (selsort gv0 n0 = gv0 ++ al), (selsort gv0 n0 = gv0 ++ l), (selsort gv0 n0 = gv0 ++ gv0)
(selsort gv0 n = al), (selsort gv0 n = l), (selsort gv0 n = gv0), (selsort gv0 n = selection_sort al), (selsort gv0 n = selection_sort l), (selsort gv0 n = selection_sort gv0), (selsort gv0 n = al ++ al), (selsort gv0 n = al ++ l), (selsort gv0 n = al ++ gv0), (selsort gv0 n = l ++ al)
(selsort gv0 n = l ++ l), (selsort gv0 n = l ++ gv0), (selsort gv0 n = gv0 ++ al), (selsort gv0 n = gv0 ++ l), (selsort gv0 n = gv0 ++ gv0), (selsort gv0 n1 = al), (selsort gv0 n1 = l), (selsort gv0 n1 = gv0), (selsort gv0 n1 = selection_sort al), (selsort gv0 n1 = selection_sort l)
(selsort gv0 n1 = selection_sort gv0), (selsort gv0 n1 = al ++ al), (selsort gv0 n1 = al ++ l), (selsort gv0 n1 = al ++ gv0), (selsort gv0 n1 = l ++ al), (selsort gv0 n1 = l ++ l), (selsort gv0 n1 = l ++ gv0), (selsort gv0 n1 = gv0 ++ al), (selsort gv0 n1 = gv0 ++ l), (selsort gv0 n1 = gv0 ++ gv0)
(al ++ al = al), (al ++ al = l), (al ++ al = gv0), (al ++ l = al), (al ++ l = l), (al ++ l = gv0), (al ++ gv0 = al), (al ++ gv0 = l), (al ++ gv0 = gv0), (l ++ al = al)
(l ++ al = l), (l ++ al = gv0), (l ++ l = al), (l ++ l = l), (l ++ l = gv0), (l ++ gv0 = al), (l ++ gv0 = l), (l ++ gv0 = gv0), (gv0 ++ al = al), (gv0 ++ al = l)
(gv0 ++ al = gv0), (gv0 ++ l = al), (gv0 ++ l = l), (gv0 ++ l = gv0), (gv0 ++ gv0 = al), (gv0 ++ gv0 = l), (gv0 ++ gv0 = gv0), ([] = al), ([] = l), ([] = gv0)
([] = selection_sort al), ([] = selection_sort l), ([] = selection_sort gv0), ([] = selsort al n0), ([] = selsort al n), ([] = selsort al n1), ([] = selsort l n0), ([] = selsort l n), ([] = selsort l n1), ([] = selsort gv0 n0)
([] = selsort gv0 n), ([] = selsort gv0 n1), ([] = al ++ al), ([] = al ++ l), ([] = al ++ gv0), ([] = l ++ al), ([] = l ++ l), ([] = l ++ gv0), ([] = gv0 ++ al), ([] = gv0 ++ l)
([] = gv0 ++ gv0), (None = Some n0), (None = Some n), (None = Some n1), ((n0, al) = select n0 al), ((n0, al) = select n0 l), ((n0, al) = select n0 gv0), ((n0, al) = select n al), ((n0, al) = select n l), ((n0, al) = select n gv0)
((n0, al) = select n1 al), ((n0, al) = select n1 l), ((n0, al) = select n1 gv0), ((n0, l) = select n0 al), ((n0, l) = select n0 l), ((n0, l) = select n0 gv0), ((n0, l) = select n al), ((n0, l) = select n l), ((n0, l) = select n gv0), ((n0, l) = select n1 al)
((n0, l) = select n1 l), ((n0, l) = select n1 gv0), ((n0, gv0) = select n0 al), ((n0, gv0) = select n0 l), ((n0, gv0) = select n0 gv0), ((n0, gv0) = select n al), ((n0, gv0) = select n l), ((n0, gv0) = select n gv0), ((n0, gv0) = select n1 al), ((n0, gv0) = select n1 l)
((n0, gv0) = select n1 gv0), ((n, al) = select n0 al), ((n, al) = select n0 l), ((n, al) = select n0 gv0), ((n, al) = select n al), ((n, al) = select n l), ((n, al) = select n gv0), ((n, al) = select n1 al), ((n, al) = select n1 l), ((n, al) = select n1 gv0)
((n, l) = select n0 al), ((n, l) = select n0 l), ((n, l) = select n0 gv0), ((n, l) = select n al), ((n, l) = select n l), ((n, l) = select n gv0), ((n, l) = select n1 al), ((n, l) = select n1 l), ((n, l) = select n1 gv0), ((n, gv0) = select n0 al)
((n, gv0) = select n0 l), ((n, gv0) = select n0 gv0), ((n, gv0) = select n al), ((n, gv0) = select n l), ((n, gv0) = select n gv0), ((n, gv0) = select n1 al), ((n, gv0) = select n1 l), ((n, gv0) = select n1 gv0), ((n1, al) = select n0 al), ((n1, al) = select n0 l)
((n1, al) = select n0 gv0), ((n1, al) = select n al), ((n1, al) = select n l), ((n1, al) = select n gv0), ((n1, al) = select n1 al), ((n1, al) = select n1 l), ((n1, al) = select n1 gv0), ((n1, l) = select n0 al), ((n1, l) = select n0 l), ((n1, l) = select n0 gv0)
((n1, l) = select n al), ((n1, l) = select n l), ((n1, l) = select n gv0), ((n1, l) = select n1 al), ((n1, l) = select n1 l), ((n1, l) = select n1 gv0), ((n1, gv0) = select n0 al), ((n1, gv0) = select n0 l), ((n1, gv0) = select n0 gv0), ((n1, gv0) = select n al)
((n1, gv0) = select n l), ((n1, gv0) = select n gv0), ((n1, gv0) = select n1 al), ((n1, gv0) = select n1 l), ((n1, gv0) = select n1 gv0), (length al = n0), (length al = n), (length al = n1), (length l = n0), (length l = n)
(length l = n1), (length gv0 = n0), (length gv0 = n), (length gv0 = n1)

Label: 2 (2)
(n <=* l), (n <=* al), (n <=* gv1), (n0 <=* l), (n0 <=* al), (n0 <=* gv1), (n1 <=* l), (n1 <=* al), (n1 <=* gv1), (sorted l)
(sorted al), (sorted gv1), (Permutation l l), (Permutation l al), (Permutation l gv1), (Permutation al l), (Permutation al al), (Permutation al gv1), (Permutation gv1 l), (Permutation gv1 al)
(Permutation gv1 gv1), (In n l), (In n al), (In n gv1), (In n0 l), (In n0 al), (In n0 gv1), (In n1 l), (In n1 al), (In n1 gv1)
(n < n), (n < n0), (n < n1), (n0 < n), (n0 < n0), (n0 < n1), (n1 < n), (n1 < n0), (n1 < n1), (n <= n)
(n <= n0), (n <= n1), (n0 <= n), (n0 <= n0), (n0 <= n1), (n1 <= n), (n1 <= n0), (n1 <= n1), (l = l), (l = al)
(l = gv1), (al = l), (al = al), (al = gv1), (gv1 = l), (gv1 = al), (gv1 = gv1), (n = n), (n = n0), (n = n1)
(n0 = n), (n0 = n0), (n0 = n1), (n1 = n), (n1 = n0), (n1 = n1), (n <=* n :: l), (n <=* n :: al), (n <=* n :: gv1), (n <=* n0 :: l)
(n <=* n0 :: al), (n <=* n0 :: gv1), (n <=* n1 :: l), (n <=* n1 :: al), (n <=* n1 :: gv1), (n <=* selection_sort l), (n <=* selection_sort al), (n <=* selection_sort gv1), (n <=* selsort l n), (n <=* selsort l n0)
(n <=* selsort l n1), (n <=* selsort al n), (n <=* selsort al n0), (n <=* selsort al n1), (n <=* selsort gv1 n), (n <=* selsort gv1 n0), (n <=* selsort gv1 n1), (n <=* l ++ l), (n <=* l ++ al), (n <=* l ++ gv1)
(n <=* al ++ l), (n <=* al ++ al), (n <=* al ++ gv1), (n <=* gv1 ++ l), (n <=* gv1 ++ al), (n <=* gv1 ++ gv1), (n <=* []), (n0 <=* n :: l), (n0 <=* n :: al), (n0 <=* n :: gv1)
(n0 <=* n0 :: l), (n0 <=* n0 :: al), (n0 <=* n0 :: gv1), (n0 <=* n1 :: l), (n0 <=* n1 :: al), (n0 <=* n1 :: gv1), (n0 <=* selection_sort l), (n0 <=* selection_sort al), (n0 <=* selection_sort gv1), (n0 <=* selsort l n)
(n0 <=* selsort l n0), (n0 <=* selsort l n1), (n0 <=* selsort al n), (n0 <=* selsort al n0), (n0 <=* selsort al n1), (n0 <=* selsort gv1 n), (n0 <=* selsort gv1 n0), (n0 <=* selsort gv1 n1), (n0 <=* l ++ l), (n0 <=* l ++ al)
(n0 <=* l ++ gv1), (n0 <=* al ++ l), (n0 <=* al ++ al), (n0 <=* al ++ gv1), (n0 <=* gv1 ++ l), (n0 <=* gv1 ++ al), (n0 <=* gv1 ++ gv1), (n0 <=* []), (n1 <=* n :: l), (n1 <=* n :: al)
(n1 <=* n :: gv1), (n1 <=* n0 :: l), (n1 <=* n0 :: al), (n1 <=* n0 :: gv1), (n1 <=* n1 :: l), (n1 <=* n1 :: al), (n1 <=* n1 :: gv1), (n1 <=* selection_sort l), (n1 <=* selection_sort al), (n1 <=* selection_sort gv1)
(n1 <=* selsort l n), (n1 <=* selsort l n0), (n1 <=* selsort l n1), (n1 <=* selsort al n), (n1 <=* selsort al n0), (n1 <=* selsort al n1), (n1 <=* selsort gv1 n), (n1 <=* selsort gv1 n0), (n1 <=* selsort gv1 n1), (n1 <=* l ++ l)
(n1 <=* l ++ al), (n1 <=* l ++ gv1), (n1 <=* al ++ l), (n1 <=* al ++ al), (n1 <=* al ++ gv1), (n1 <=* gv1 ++ l), (n1 <=* gv1 ++ al), (n1 <=* gv1 ++ gv1), (n1 <=* []), (length l <=* l)
(length l <=* al), (length l <=* gv1), (length l <=* n :: l), (length l <=* n :: al), (length l <=* n :: gv1), (length l <=* n0 :: l), (length l <=* n0 :: al), (length l <=* n0 :: gv1), (length l <=* n1 :: l), (length l <=* n1 :: al)
(length l <=* n1 :: gv1), (length l <=* selection_sort l), (length l <=* selection_sort al), (length l <=* selection_sort gv1), (length l <=* selsort l n), (length l <=* selsort l n0), (length l <=* selsort l n1), (length l <=* selsort al n), (length l <=* selsort al n0), (length l <=* selsort al n1)
(length l <=* selsort gv1 n), (length l <=* selsort gv1 n0), (length l <=* selsort gv1 n1), (length l <=* l ++ l), (length l <=* l ++ al), (length l <=* l ++ gv1), (length l <=* al ++ l), (length l <=* al ++ al), (length l <=* al ++ gv1), (length l <=* gv1 ++ l)
(length l <=* gv1 ++ al), (length l <=* gv1 ++ gv1), (length l <=* []), (length al <=* l), (length al <=* al), (length al <=* gv1), (length al <=* n :: l), (length al <=* n :: al), (length al <=* n :: gv1), (length al <=* n0 :: l)
(length al <=* n0 :: al), (length al <=* n0 :: gv1), (length al <=* n1 :: l), (length al <=* n1 :: al), (length al <=* n1 :: gv1), (length al <=* selection_sort l), (length al <=* selection_sort al), (length al <=* selection_sort gv1), (length al <=* selsort l n), (length al <=* selsort l n0)
(length al <=* selsort l n1), (length al <=* selsort al n), (length al <=* selsort al n0), (length al <=* selsort al n1), (length al <=* selsort gv1 n), (length al <=* selsort gv1 n0), (length al <=* selsort gv1 n1), (length al <=* l ++ l), (length al <=* l ++ al), (length al <=* l ++ gv1)
(length al <=* al ++ l), (length al <=* al ++ al), (length al <=* al ++ gv1), (length al <=* gv1 ++ l), (length al <=* gv1 ++ al), (length al <=* gv1 ++ gv1), (length al <=* []), (length gv1 <=* l), (length gv1 <=* al), (length gv1 <=* gv1)
(length gv1 <=* n :: l), (length gv1 <=* n :: al), (length gv1 <=* n :: gv1), (length gv1 <=* n0 :: l), (length gv1 <=* n0 :: al), (length gv1 <=* n0 :: gv1), (length gv1 <=* n1 :: l), (length gv1 <=* n1 :: al), (length gv1 <=* n1 :: gv1), (length gv1 <=* selection_sort l)
(length gv1 <=* selection_sort al), (length gv1 <=* selection_sort gv1), (length gv1 <=* selsort l n), (length gv1 <=* selsort l n0), (length gv1 <=* selsort l n1), (length gv1 <=* selsort al n), (length gv1 <=* selsort al n0), (length gv1 <=* selsort al n1), (length gv1 <=* selsort gv1 n), (length gv1 <=* selsort gv1 n0)
(length gv1 <=* selsort gv1 n1), (length gv1 <=* l ++ l), (length gv1 <=* l ++ al), (length gv1 <=* l ++ gv1), (length gv1 <=* al ++ l), (length gv1 <=* al ++ al), (length gv1 <=* al ++ gv1), (length gv1 <=* gv1 ++ l), (length gv1 <=* gv1 ++ al), (length gv1 <=* gv1 ++ gv1)
(length gv1 <=* []), (sorted (n :: l)), (sorted (n :: al)), (sorted (n :: gv1)), (sorted (n0 :: l)), (sorted (n0 :: al)), (sorted (n0 :: gv1)), (sorted (n1 :: l)), (sorted (n1 :: al)), (sorted (n1 :: gv1))
(sorted (selection_sort l)), (sorted (selection_sort al)), (sorted (selection_sort gv1)), (sorted (selsort l n)), (sorted (selsort l n0)), (sorted (selsort l n1)), (sorted (selsort al n)), (sorted (selsort al n0)), (sorted (selsort al n1)), (sorted (selsort gv1 n))
(sorted (selsort gv1 n0)), (sorted (selsort gv1 n1)), (sorted (l ++ l)), (sorted (l ++ al)), (sorted (l ++ gv1)), (sorted (al ++ l)), (sorted (al ++ al)), (sorted (al ++ gv1)), (sorted (gv1 ++ l)), (sorted (gv1 ++ al))
(sorted (gv1 ++ gv1)), (sorted []), (Permutation l (n :: l)), (Permutation l (n :: al)), (Permutation l (n :: gv1)), (Permutation l (n0 :: l)), (Permutation l (n0 :: al)), (Permutation l (n0 :: gv1)), (Permutation l (n1 :: l)), (Permutation l (n1 :: al))
(Permutation l (n1 :: gv1)), (Permutation l (selection_sort l)), (Permutation l (selection_sort al)), (Permutation l (selection_sort gv1)), (Permutation l (selsort l n)), (Permutation l (selsort l n0)), (Permutation l (selsort l n1)), (Permutation l (selsort al n)), (Permutation l (selsort al n0)), (Permutation l (selsort al n1))
(Permutation l (selsort gv1 n)), (Permutation l (selsort gv1 n0)), (Permutation l (selsort gv1 n1)), (Permutation l (l ++ l)), (Permutation l (l ++ al)), (Permutation l (l ++ gv1)), (Permutation l (al ++ l)), (Permutation l (al ++ al)), (Permutation l (al ++ gv1)), (Permutation l (gv1 ++ l))
(Permutation l (gv1 ++ al)), (Permutation l (gv1 ++ gv1)), (Permutation l []), (Permutation al (n :: l)), (Permutation al (n :: al)), (Permutation al (n :: gv1)), (Permutation al (n0 :: l)), (Permutation al (n0 :: al)), (Permutation al (n0 :: gv1)), (Permutation al (n1 :: l))
(Permutation al (n1 :: al)), (Permutation al (n1 :: gv1)), (Permutation al (selection_sort l)), (Permutation al (selection_sort al)), (Permutation al (selection_sort gv1)), (Permutation al (selsort l n)), (Permutation al (selsort l n0)), (Permutation al (selsort l n1)), (Permutation al (selsort al n)), (Permutation al (selsort al n0))
(Permutation al (selsort al n1)), (Permutation al (selsort gv1 n)), (Permutation al (selsort gv1 n0)), (Permutation al (selsort gv1 n1)), (Permutation al (l ++ l)), (Permutation al (l ++ al)), (Permutation al (l ++ gv1)), (Permutation al (al ++ l)), (Permutation al (al ++ al)), (Permutation al (al ++ gv1))
(Permutation al (gv1 ++ l)), (Permutation al (gv1 ++ al)), (Permutation al (gv1 ++ gv1)), (Permutation al []), (Permutation gv1 (n :: l)), (Permutation gv1 (n :: al)), (Permutation gv1 (n :: gv1)), (Permutation gv1 (n0 :: l)), (Permutation gv1 (n0 :: al)), (Permutation gv1 (n0 :: gv1))
(Permutation gv1 (n1 :: l)), (Permutation gv1 (n1 :: al)), (Permutation gv1 (n1 :: gv1)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selection_sort al)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selsort l n)), (Permutation gv1 (selsort l n0)), (Permutation gv1 (selsort l n1)), (Permutation gv1 (selsort al n))
(Permutation gv1 (selsort al n0)), (Permutation gv1 (selsort al n1)), (Permutation gv1 (selsort gv1 n)), (Permutation gv1 (selsort gv1 n0)), (Permutation gv1 (selsort gv1 n1)), (Permutation gv1 (l ++ l)), (Permutation gv1 (l ++ al)), (Permutation gv1 (l ++ gv1)), (Permutation gv1 (al ++ l)), (Permutation gv1 (al ++ al))
(Permutation gv1 (al ++ gv1)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (gv1 ++ al)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 []), (Permutation (n :: l) l), (Permutation (n :: l) al), (Permutation (n :: l) gv1), (Permutation (n :: l) (n :: al)), (Permutation (n :: l) (n :: gv1))
(Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n0 :: al)), (Permutation (n :: l) (n0 :: gv1)), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n1 :: gv1)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selection_sort gv1)), (Permutation (n :: l) (selsort l n))
(Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n1)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort gv1 n)), (Permutation (n :: l) (selsort gv1 n0)), (Permutation (n :: l) (selsort gv1 n1)), (Permutation (n :: l) (l ++ l)), (Permutation (n :: l) (l ++ al))
(Permutation (n :: l) (l ++ gv1)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (al ++ al)), (Permutation (n :: l) (al ++ gv1)), (Permutation (n :: l) (gv1 ++ l)), (Permutation (n :: l) (gv1 ++ al)), (Permutation (n :: l) (gv1 ++ gv1)), (Permutation (n :: l) []), (Permutation (n :: al) l), (Permutation (n :: al) al)
(Permutation (n :: al) gv1), (Permutation (n :: al) (n :: l)), (Permutation (n :: al) (n :: gv1)), (Permutation (n :: al) (n0 :: l)), (Permutation (n :: al) (n0 :: al)), (Permutation (n :: al) (n0 :: gv1)), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n1 :: gv1)), (Permutation (n :: al) (selection_sort l))
(Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selection_sort gv1)), (Permutation (n :: al) (selsort l n)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n1)), (Permutation (n :: al) (selsort al n)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort gv1 n)), (Permutation (n :: al) (selsort gv1 n0))
(Permutation (n :: al) (selsort gv1 n1)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (l ++ gv1)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (al ++ al)), (Permutation (n :: al) (al ++ gv1)), (Permutation (n :: al) (gv1 ++ l)), (Permutation (n :: al) (gv1 ++ al)), (Permutation (n :: al) (gv1 ++ gv1))
(Permutation (n :: al) []), (Permutation (n :: gv1) l), (Permutation (n :: gv1) al), (Permutation (n :: gv1) gv1), (Permutation (n :: gv1) (n :: l)), (Permutation (n :: gv1) (n :: al)), (Permutation (n :: gv1) (n0 :: l)), (Permutation (n :: gv1) (n0 :: al)), (Permutation (n :: gv1) (n0 :: gv1)), (Permutation (n :: gv1) (n1 :: l))
(Permutation (n :: gv1) (n1 :: al)), (Permutation (n :: gv1) (n1 :: gv1)), (Permutation (n :: gv1) (selection_sort l)), (Permutation (n :: gv1) (selection_sort al)), (Permutation (n :: gv1) (selection_sort gv1)), (Permutation (n :: gv1) (selsort l n)), (Permutation (n :: gv1) (selsort l n0)), (Permutation (n :: gv1) (selsort l n1)), (Permutation (n :: gv1) (selsort al n)), (Permutation (n :: gv1) (selsort al n0))
(Permutation (n :: gv1) (selsort al n1)), (Permutation (n :: gv1) (selsort gv1 n)), (Permutation (n :: gv1) (selsort gv1 n0)), (Permutation (n :: gv1) (selsort gv1 n1)), (Permutation (n :: gv1) (l ++ l)), (Permutation (n :: gv1) (l ++ al)), (Permutation (n :: gv1) (l ++ gv1)), (Permutation (n :: gv1) (al ++ l)), (Permutation (n :: gv1) (al ++ al)), (Permutation (n :: gv1) (al ++ gv1))
(Permutation (n :: gv1) (gv1 ++ l)), (Permutation (n :: gv1) (gv1 ++ al)), (Permutation (n :: gv1) (gv1 ++ gv1)), (Permutation (n :: gv1) []), (Permutation (n0 :: l) l), (Permutation (n0 :: l) al), (Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (n :: l)), (Permutation (n0 :: l) (n :: al)), (Permutation (n0 :: l) (n :: gv1))
(Permutation (n0 :: l) (n0 :: al)), (Permutation (n0 :: l) (n0 :: gv1)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n1 :: gv1)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort al)), (Permutation (n0 :: l) (selection_sort gv1)), (Permutation (n0 :: l) (selsort l n)), (Permutation (n0 :: l) (selsort l n0))
(Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort al n0)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort gv1 n)), (Permutation (n0 :: l) (selsort gv1 n0)), (Permutation (n0 :: l) (selsort gv1 n1)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (l ++ gv1))
(Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) (al ++ gv1)), (Permutation (n0 :: l) (gv1 ++ l)), (Permutation (n0 :: l) (gv1 ++ al)), (Permutation (n0 :: l) (gv1 ++ gv1)), (Permutation (n0 :: l) []), (Permutation (n0 :: al) l), (Permutation (n0 :: al) al), (Permutation (n0 :: al) gv1)
(Permutation (n0 :: al) (n :: l)), (Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (n :: gv1)), (Permutation (n0 :: al) (n0 :: l)), (Permutation (n0 :: al) (n0 :: gv1)), (Permutation (n0 :: al) (n1 :: l)), (Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n1 :: gv1)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selection_sort al))
(Permutation (n0 :: al) (selection_sort gv1)), (Permutation (n0 :: al) (selsort l n)), (Permutation (n0 :: al) (selsort l n0)), (Permutation (n0 :: al) (selsort l n1)), (Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort gv1 n)), (Permutation (n0 :: al) (selsort gv1 n0)), (Permutation (n0 :: al) (selsort gv1 n1))
(Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (l ++ gv1)), (Permutation (n0 :: al) (al ++ l)), (Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) (al ++ gv1)), (Permutation (n0 :: al) (gv1 ++ l)), (Permutation (n0 :: al) (gv1 ++ al)), (Permutation (n0 :: al) (gv1 ++ gv1)), (Permutation (n0 :: al) [])
(Permutation (n0 :: gv1) l), (Permutation (n0 :: gv1) al), (Permutation (n0 :: gv1) gv1), (Permutation (n0 :: gv1) (n :: l)), (Permutation (n0 :: gv1) (n :: al)), (Permutation (n0 :: gv1) (n :: gv1)), (Permutation (n0 :: gv1) (n0 :: l)), (Permutation (n0 :: gv1) (n0 :: al)), (Permutation (n0 :: gv1) (n1 :: l)), (Permutation (n0 :: gv1) (n1 :: al))
(Permutation (n0 :: gv1) (n1 :: gv1)), (Permutation (n0 :: gv1) (selection_sort l)), (Permutation (n0 :: gv1) (selection_sort al)), (Permutation (n0 :: gv1) (selection_sort gv1)), (Permutation (n0 :: gv1) (selsort l n)), (Permutation (n0 :: gv1) (selsort l n0)), (Permutation (n0 :: gv1) (selsort l n1)), (Permutation (n0 :: gv1) (selsort al n)), (Permutation (n0 :: gv1) (selsort al n0)), (Permutation (n0 :: gv1) (selsort al n1))
(Permutation (n0 :: gv1) (selsort gv1 n)), (Permutation (n0 :: gv1) (selsort gv1 n0)), (Permutation (n0 :: gv1) (selsort gv1 n1)), (Permutation (n0 :: gv1) (l ++ l)), (Permutation (n0 :: gv1) (l ++ al)), (Permutation (n0 :: gv1) (l ++ gv1)), (Permutation (n0 :: gv1) (al ++ l)), (Permutation (n0 :: gv1) (al ++ al)), (Permutation (n0 :: gv1) (al ++ gv1)), (Permutation (n0 :: gv1) (gv1 ++ l))
(Permutation (n0 :: gv1) (gv1 ++ al)), (Permutation (n0 :: gv1) (gv1 ++ gv1)), (Permutation (n0 :: gv1) []), (Permutation (n1 :: l) l), (Permutation (n1 :: l) al), (Permutation (n1 :: l) gv1), (Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (n :: al)), (Permutation (n1 :: l) (n :: gv1)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (n0 :: al)), (Permutation (n1 :: l) (n0 :: gv1)), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (n1 :: gv1)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selection_sort gv1)), (Permutation (n1 :: l) (selsort l n)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n1))
(Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort gv1 n)), (Permutation (n1 :: l) (selsort gv1 n0)), (Permutation (n1 :: l) (selsort gv1 n1)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (l ++ gv1)), (Permutation (n1 :: l) (al ++ l))
(Permutation (n1 :: l) (al ++ al)), (Permutation (n1 :: l) (al ++ gv1)), (Permutation (n1 :: l) (gv1 ++ l)), (Permutation (n1 :: l) (gv1 ++ al)), (Permutation (n1 :: l) (gv1 ++ gv1)), (Permutation (n1 :: l) []), (Permutation (n1 :: al) l), (Permutation (n1 :: al) al), (Permutation (n1 :: al) gv1), (Permutation (n1 :: al) (n :: l))
(Permutation (n1 :: al) (n :: al)), (Permutation (n1 :: al) (n :: gv1)), (Permutation (n1 :: al) (n0 :: l)), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n0 :: gv1)), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (n1 :: gv1)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selection_sort al)), (Permutation (n1 :: al) (selection_sort gv1))
(Permutation (n1 :: al) (selsort l n)), (Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n1)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n1)), (Permutation (n1 :: al) (selsort gv1 n)), (Permutation (n1 :: al) (selsort gv1 n0)), (Permutation (n1 :: al) (selsort gv1 n1)), (Permutation (n1 :: al) (l ++ l))
(Permutation (n1 :: al) (l ++ al)), (Permutation (n1 :: al) (l ++ gv1)), (Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) (al ++ gv1)), (Permutation (n1 :: al) (gv1 ++ l)), (Permutation (n1 :: al) (gv1 ++ al)), (Permutation (n1 :: al) (gv1 ++ gv1)), (Permutation (n1 :: al) []), (Permutation (n1 :: gv1) l)
(Permutation (n1 :: gv1) al), (Permutation (n1 :: gv1) gv1), (Permutation (n1 :: gv1) (n :: l)), (Permutation (n1 :: gv1) (n :: al)), (Permutation (n1 :: gv1) (n :: gv1)), (Permutation (n1 :: gv1) (n0 :: l)), (Permutation (n1 :: gv1) (n0 :: al)), (Permutation (n1 :: gv1) (n0 :: gv1)), (Permutation (n1 :: gv1) (n1 :: l)), (Permutation (n1 :: gv1) (n1 :: al))
(Permutation (n1 :: gv1) (selection_sort l)), (Permutation (n1 :: gv1) (selection_sort al)), (Permutation (n1 :: gv1) (selection_sort gv1)), (Permutation (n1 :: gv1) (selsort l n)), (Permutation (n1 :: gv1) (selsort l n0)), (Permutation (n1 :: gv1) (selsort l n1)), (Permutation (n1 :: gv1) (selsort al n)), (Permutation (n1 :: gv1) (selsort al n0)), (Permutation (n1 :: gv1) (selsort al n1)), (Permutation (n1 :: gv1) (selsort gv1 n))
(Permutation (n1 :: gv1) (selsort gv1 n0)), (Permutation (n1 :: gv1) (selsort gv1 n1)), (Permutation (n1 :: gv1) (l ++ l)), (Permutation (n1 :: gv1) (l ++ al)), (Permutation (n1 :: gv1) (l ++ gv1)), (Permutation (n1 :: gv1) (al ++ l)), (Permutation (n1 :: gv1) (al ++ al)), (Permutation (n1 :: gv1) (al ++ gv1)), (Permutation (n1 :: gv1) (gv1 ++ l)), (Permutation (n1 :: gv1) (gv1 ++ al))
(Permutation (n1 :: gv1) (gv1 ++ gv1)), (Permutation (n1 :: gv1) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) al), (Permutation (selection_sort l) gv1), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n :: al)), (Permutation (selection_sort l) (n :: gv1)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n0 :: al))
(Permutation (selection_sort l) (n0 :: gv1)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n1 :: gv1)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selection_sort gv1)), (Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort al n))
(Permutation (selection_sort l) (selsort al n0)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort gv1 n)), (Permutation (selection_sort l) (selsort gv1 n0)), (Permutation (selection_sort l) (selsort gv1 n1)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selection_sort l) (al ++ l)), (Permutation (selection_sort l) (al ++ al))
(Permutation (selection_sort l) (al ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (gv1 ++ al)), (Permutation (selection_sort l) (gv1 ++ gv1)), (Permutation (selection_sort l) []), (Permutation (selection_sort al) l), (Permutation (selection_sort al) al), (Permutation (selection_sort al) gv1), (Permutation (selection_sort al) (n :: l)), (Permutation (selection_sort al) (n :: al))
(Permutation (selection_sort al) (n :: gv1)), (Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n0 :: al)), (Permutation (selection_sort al) (n0 :: gv1)), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n1 :: gv1)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selection_sort gv1)), (Permutation (selection_sort al) (selsort l n))
(Permutation (selection_sort al) (selsort l n0)), (Permutation (selection_sort al) (selsort l n1)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort gv1 n)), (Permutation (selection_sort al) (selsort gv1 n0)), (Permutation (selection_sort al) (selsort gv1 n1)), (Permutation (selection_sort al) (l ++ l)), (Permutation (selection_sort al) (l ++ al))
(Permutation (selection_sort al) (l ++ gv1)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ gv1)), (Permutation (selection_sort al) (gv1 ++ l)), (Permutation (selection_sort al) (gv1 ++ al)), (Permutation (selection_sort al) (gv1 ++ gv1)), (Permutation (selection_sort al) []), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) al)
(Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) (n :: l)), (Permutation (selection_sort gv1) (n :: al)), (Permutation (selection_sort gv1) (n :: gv1)), (Permutation (selection_sort gv1) (n0 :: l)), (Permutation (selection_sort gv1) (n0 :: al)), (Permutation (selection_sort gv1) (n0 :: gv1)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n1 :: al)), (Permutation (selection_sort gv1) (n1 :: gv1))
(Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selection_sort al)), (Permutation (selection_sort gv1) (selsort l n)), (Permutation (selection_sort gv1) (selsort l n0)), (Permutation (selection_sort gv1) (selsort l n1)), (Permutation (selection_sort gv1) (selsort al n)), (Permutation (selection_sort gv1) (selsort al n0)), (Permutation (selection_sort gv1) (selsort al n1)), (Permutation (selection_sort gv1) (selsort gv1 n)), (Permutation (selection_sort gv1) (selsort gv1 n0))
(Permutation (selection_sort gv1) (selsort gv1 n1)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) (l ++ al)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (al ++ l)), (Permutation (selection_sort gv1) (al ++ al)), (Permutation (selection_sort gv1) (al ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (gv1 ++ al)), (Permutation (selection_sort gv1) (gv1 ++ gv1))
(Permutation (selection_sort gv1) []), (Permutation (selsort l n) l), (Permutation (selsort l n) al), (Permutation (selsort l n) gv1), (Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (n :: al)), (Permutation (selsort l n) (n :: gv1)), (Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n0 :: al)), (Permutation (selsort l n) (n0 :: gv1))
(Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n1 :: gv1)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selection_sort gv1)), (Permutation (selsort l n) (selsort l n0)), (Permutation (selsort l n) (selsort l n1)), (Permutation (selsort l n) (selsort al n)), (Permutation (selsort l n) (selsort al n0))
(Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort gv1 n)), (Permutation (selsort l n) (selsort gv1 n0)), (Permutation (selsort l n) (selsort gv1 n1)), (Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) (l ++ al)), (Permutation (selsort l n) (l ++ gv1)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) (al ++ gv1))
(Permutation (selsort l n) (gv1 ++ l)), (Permutation (selsort l n) (gv1 ++ al)), (Permutation (selsort l n) (gv1 ++ gv1)), (Permutation (selsort l n) []), (Permutation (selsort l n0) l), (Permutation (selsort l n0) al), (Permutation (selsort l n0) gv1), (Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (n :: al)), (Permutation (selsort l n0) (n :: gv1))
(Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: al)), (Permutation (selsort l n0) (n0 :: gv1)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: al)), (Permutation (selsort l n0) (n1 :: gv1)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selection_sort gv1)), (Permutation (selsort l n0) (selsort l n))
(Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort gv1 n)), (Permutation (selsort l n0) (selsort gv1 n0)), (Permutation (selsort l n0) (selsort gv1 n1)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ al)), (Permutation (selsort l n0) (l ++ gv1))
(Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) (al ++ gv1)), (Permutation (selsort l n0) (gv1 ++ l)), (Permutation (selsort l n0) (gv1 ++ al)), (Permutation (selsort l n0) (gv1 ++ gv1)), (Permutation (selsort l n0) []), (Permutation (selsort l n1) l), (Permutation (selsort l n1) al), (Permutation (selsort l n1) gv1)
(Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (n :: al)), (Permutation (selsort l n1) (n :: gv1)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n0 :: al)), (Permutation (selsort l n1) (n0 :: gv1)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n1 :: gv1)), (Permutation (selsort l n1) (selection_sort l))
(Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selection_sort gv1)), (Permutation (selsort l n1) (selsort l n)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort gv1 n)), (Permutation (selsort l n1) (selsort gv1 n0)), (Permutation (selsort l n1) (selsort gv1 n1))
(Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (l ++ gv1)), (Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (al ++ al)), (Permutation (selsort l n1) (al ++ gv1)), (Permutation (selsort l n1) (gv1 ++ l)), (Permutation (selsort l n1) (gv1 ++ al)), (Permutation (selsort l n1) (gv1 ++ gv1)), (Permutation (selsort l n1) [])
(Permutation (selsort al n) l), (Permutation (selsort al n) al), (Permutation (selsort al n) gv1), (Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (n :: al)), (Permutation (selsort al n) (n :: gv1)), (Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n0 :: al)), (Permutation (selsort al n) (n0 :: gv1)), (Permutation (selsort al n) (n1 :: l))
(Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n1 :: gv1)), (Permutation (selsort al n) (selection_sort l)), (Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selection_sort gv1)), (Permutation (selsort al n) (selsort l n)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n1)), (Permutation (selsort al n) (selsort al n0)), (Permutation (selsort al n) (selsort al n1))
(Permutation (selsort al n) (selsort gv1 n)), (Permutation (selsort al n) (selsort gv1 n0)), (Permutation (selsort al n) (selsort gv1 n1)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) (l ++ al)), (Permutation (selsort al n) (l ++ gv1)), (Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) (al ++ gv1)), (Permutation (selsort al n) (gv1 ++ l))
(Permutation (selsort al n) (gv1 ++ al)), (Permutation (selsort al n) (gv1 ++ gv1)), (Permutation (selsort al n) []), (Permutation (selsort al n0) l), (Permutation (selsort al n0) al), (Permutation (selsort al n0) gv1), (Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (n :: al)), (Permutation (selsort al n0) (n :: gv1)), (Permutation (selsort al n0) (n0 :: l))
(Permutation (selsort al n0) (n0 :: al)), (Permutation (selsort al n0) (n0 :: gv1)), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n1 :: gv1)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selection_sort gv1)), (Permutation (selsort al n0) (selsort l n)), (Permutation (selsort al n0) (selsort l n0))
(Permutation (selsort al n0) (selsort l n1)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort gv1 n)), (Permutation (selsort al n0) (selsort gv1 n0)), (Permutation (selsort al n0) (selsort gv1 n1)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (l ++ gv1)), (Permutation (selsort al n0) (al ++ l))
(Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) (al ++ gv1)), (Permutation (selsort al n0) (gv1 ++ l)), (Permutation (selsort al n0) (gv1 ++ al)), (Permutation (selsort al n0) (gv1 ++ gv1)), (Permutation (selsort al n0) []), (Permutation (selsort al n1) l), (Permutation (selsort al n1) al), (Permutation (selsort al n1) gv1), (Permutation (selsort al n1) (n :: l))
(Permutation (selsort al n1) (n :: al)), (Permutation (selsort al n1) (n :: gv1)), (Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n0 :: al)), (Permutation (selsort al n1) (n0 :: gv1)), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n1 :: gv1)), (Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selection_sort al))
(Permutation (selsort al n1) (selection_sort gv1)), (Permutation (selsort al n1) (selsort l n)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n1)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort gv1 n)), (Permutation (selsort al n1) (selsort gv1 n0)), (Permutation (selsort al n1) (selsort gv1 n1)), (Permutation (selsort al n1) (l ++ l))
(Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (l ++ gv1)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) (al ++ gv1)), (Permutation (selsort al n1) (gv1 ++ l)), (Permutation (selsort al n1) (gv1 ++ al)), (Permutation (selsort al n1) (gv1 ++ gv1)), (Permutation (selsort al n1) []), (Permutation (selsort gv1 n) l)
(Permutation (selsort gv1 n) al), (Permutation (selsort gv1 n) gv1), (Permutation (selsort gv1 n) (n :: l)), (Permutation (selsort gv1 n) (n :: al)), (Permutation (selsort gv1 n) (n :: gv1)), (Permutation (selsort gv1 n) (n0 :: l)), (Permutation (selsort gv1 n) (n0 :: al)), (Permutation (selsort gv1 n) (n0 :: gv1)), (Permutation (selsort gv1 n) (n1 :: l)), (Permutation (selsort gv1 n) (n1 :: al))
(Permutation (selsort gv1 n) (n1 :: gv1)), (Permutation (selsort gv1 n) (selection_sort l)), (Permutation (selsort gv1 n) (selection_sort al)), (Permutation (selsort gv1 n) (selection_sort gv1)), (Permutation (selsort gv1 n) (selsort l n)), (Permutation (selsort gv1 n) (selsort l n0)), (Permutation (selsort gv1 n) (selsort l n1)), (Permutation (selsort gv1 n) (selsort al n)), (Permutation (selsort gv1 n) (selsort al n0)), (Permutation (selsort gv1 n) (selsort al n1))
(Permutation (selsort gv1 n) (selsort gv1 n0)), (Permutation (selsort gv1 n) (selsort gv1 n1)), (Permutation (selsort gv1 n) (l ++ l)), (Permutation (selsort gv1 n) (l ++ al)), (Permutation (selsort gv1 n) (l ++ gv1)), (Permutation (selsort gv1 n) (al ++ l)), (Permutation (selsort gv1 n) (al ++ al)), (Permutation (selsort gv1 n) (al ++ gv1)), (Permutation (selsort gv1 n) (gv1 ++ l)), (Permutation (selsort gv1 n) (gv1 ++ al))
(Permutation (selsort gv1 n) (gv1 ++ gv1)), (Permutation (selsort gv1 n) []), (Permutation (selsort gv1 n0) l), (Permutation (selsort gv1 n0) al), (Permutation (selsort gv1 n0) gv1), (Permutation (selsort gv1 n0) (n :: l)), (Permutation (selsort gv1 n0) (n :: al)), (Permutation (selsort gv1 n0) (n :: gv1)), (Permutation (selsort gv1 n0) (n0 :: l)), (Permutation (selsort gv1 n0) (n0 :: al))
(Permutation (selsort gv1 n0) (n0 :: gv1)), (Permutation (selsort gv1 n0) (n1 :: l)), (Permutation (selsort gv1 n0) (n1 :: al)), (Permutation (selsort gv1 n0) (n1 :: gv1)), (Permutation (selsort gv1 n0) (selection_sort l)), (Permutation (selsort gv1 n0) (selection_sort al)), (Permutation (selsort gv1 n0) (selection_sort gv1)), (Permutation (selsort gv1 n0) (selsort l n)), (Permutation (selsort gv1 n0) (selsort l n0)), (Permutation (selsort gv1 n0) (selsort l n1))
(Permutation (selsort gv1 n0) (selsort al n)), (Permutation (selsort gv1 n0) (selsort al n0)), (Permutation (selsort gv1 n0) (selsort al n1)), (Permutation (selsort gv1 n0) (selsort gv1 n)), (Permutation (selsort gv1 n0) (selsort gv1 n1)), (Permutation (selsort gv1 n0) (l ++ l)), (Permutation (selsort gv1 n0) (l ++ al)), (Permutation (selsort gv1 n0) (l ++ gv1)), (Permutation (selsort gv1 n0) (al ++ l)), (Permutation (selsort gv1 n0) (al ++ al))
(Permutation (selsort gv1 n0) (al ++ gv1)), (Permutation (selsort gv1 n0) (gv1 ++ l)), (Permutation (selsort gv1 n0) (gv1 ++ al)), (Permutation (selsort gv1 n0) (gv1 ++ gv1)), (Permutation (selsort gv1 n0) []), (Permutation (selsort gv1 n1) l), (Permutation (selsort gv1 n1) al), (Permutation (selsort gv1 n1) gv1), (Permutation (selsort gv1 n1) (n :: l)), (Permutation (selsort gv1 n1) (n :: al))
(Permutation (selsort gv1 n1) (n :: gv1)), (Permutation (selsort gv1 n1) (n0 :: l)), (Permutation (selsort gv1 n1) (n0 :: al)), (Permutation (selsort gv1 n1) (n0 :: gv1)), (Permutation (selsort gv1 n1) (n1 :: l)), (Permutation (selsort gv1 n1) (n1 :: al)), (Permutation (selsort gv1 n1) (n1 :: gv1)), (Permutation (selsort gv1 n1) (selection_sort l)), (Permutation (selsort gv1 n1) (selection_sort al)), (Permutation (selsort gv1 n1) (selection_sort gv1))
(Permutation (selsort gv1 n1) (selsort l n)), (Permutation (selsort gv1 n1) (selsort l n0)), (Permutation (selsort gv1 n1) (selsort l n1)), (Permutation (selsort gv1 n1) (selsort al n)), (Permutation (selsort gv1 n1) (selsort al n0)), (Permutation (selsort gv1 n1) (selsort al n1)), (Permutation (selsort gv1 n1) (selsort gv1 n)), (Permutation (selsort gv1 n1) (selsort gv1 n0)), (Permutation (selsort gv1 n1) (l ++ l)), (Permutation (selsort gv1 n1) (l ++ al))
(Permutation (selsort gv1 n1) (l ++ gv1)), (Permutation (selsort gv1 n1) (al ++ l)), (Permutation (selsort gv1 n1) (al ++ al)), (Permutation (selsort gv1 n1) (al ++ gv1)), (Permutation (selsort gv1 n1) (gv1 ++ l)), (Permutation (selsort gv1 n1) (gv1 ++ al)), (Permutation (selsort gv1 n1) (gv1 ++ gv1)), (Permutation (selsort gv1 n1) []), (Permutation (l ++ l) l), (Permutation (l ++ l) al)
(Permutation (l ++ l) gv1), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n :: al)), (Permutation (l ++ l) (n :: gv1)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: al)), (Permutation (l ++ l) (n0 :: gv1)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n1 :: al)), (Permutation (l ++ l) (n1 :: gv1))
(Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort gv1 n))
(Permutation (l ++ l) (selsort gv1 n0)), (Permutation (l ++ l) (selsort gv1 n1)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) (l ++ gv1)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (al ++ al)), (Permutation (l ++ l) (al ++ gv1)), (Permutation (l ++ l) (gv1 ++ l)), (Permutation (l ++ l) (gv1 ++ al)), (Permutation (l ++ l) (gv1 ++ gv1))
(Permutation (l ++ l) []), (Permutation (l ++ al) l), (Permutation (l ++ al) al), (Permutation (l ++ al) gv1), (Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (n :: al)), (Permutation (l ++ al) (n :: gv1)), (Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n0 :: al)), (Permutation (l ++ al) (n0 :: gv1))
(Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n1 :: gv1)), (Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selection_sort al)), (Permutation (l ++ al) (selection_sort gv1)), (Permutation (l ++ al) (selsort l n)), (Permutation (l ++ al) (selsort l n0)), (Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (selsort al n))
(Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort gv1 n)), (Permutation (l ++ al) (selsort gv1 n0)), (Permutation (l ++ al) (selsort gv1 n1)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) (l ++ gv1)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) (al ++ gv1))
(Permutation (l ++ al) (gv1 ++ l)), (Permutation (l ++ al) (gv1 ++ al)), (Permutation (l ++ al) (gv1 ++ gv1)), (Permutation (l ++ al) []), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) al), (Permutation (l ++ gv1) gv1), (Permutation (l ++ gv1) (n :: l)), (Permutation (l ++ gv1) (n :: al)), (Permutation (l ++ gv1) (n :: gv1))
(Permutation (l ++ gv1) (n0 :: l)), (Permutation (l ++ gv1) (n0 :: al)), (Permutation (l ++ gv1) (n0 :: gv1)), (Permutation (l ++ gv1) (n1 :: l)), (Permutation (l ++ gv1) (n1 :: al)), (Permutation (l ++ gv1) (n1 :: gv1)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selection_sort al)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selsort l n))
(Permutation (l ++ gv1) (selsort l n0)), (Permutation (l ++ gv1) (selsort l n1)), (Permutation (l ++ gv1) (selsort al n)), (Permutation (l ++ gv1) (selsort al n0)), (Permutation (l ++ gv1) (selsort al n1)), (Permutation (l ++ gv1) (selsort gv1 n)), (Permutation (l ++ gv1) (selsort gv1 n0)), (Permutation (l ++ gv1) (selsort gv1 n1)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) (l ++ al))
(Permutation (l ++ gv1) (al ++ l)), (Permutation (l ++ gv1) (al ++ al)), (Permutation (l ++ gv1) (al ++ gv1)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (gv1 ++ al)), (Permutation (l ++ gv1) (gv1 ++ gv1)), (Permutation (l ++ gv1) []), (Permutation (al ++ l) l), (Permutation (al ++ l) al), (Permutation (al ++ l) gv1)
(Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (n :: al)), (Permutation (al ++ l) (n :: gv1)), (Permutation (al ++ l) (n0 :: l)), (Permutation (al ++ l) (n0 :: al)), (Permutation (al ++ l) (n0 :: gv1)), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n1 :: gv1)), (Permutation (al ++ l) (selection_sort l))
(Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selection_sort gv1)), (Permutation (al ++ l) (selsort l n)), (Permutation (al ++ l) (selsort l n0)), (Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort gv1 n)), (Permutation (al ++ l) (selsort gv1 n0))
(Permutation (al ++ l) (selsort gv1 n1)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (l ++ gv1)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) (al ++ gv1)), (Permutation (al ++ l) (gv1 ++ l)), (Permutation (al ++ l) (gv1 ++ al)), (Permutation (al ++ l) (gv1 ++ gv1)), (Permutation (al ++ l) [])
(Permutation (al ++ al) l), (Permutation (al ++ al) al), (Permutation (al ++ al) gv1), (Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (n :: al)), (Permutation (al ++ al) (n :: gv1)), (Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n0 :: al)), (Permutation (al ++ al) (n0 :: gv1)), (Permutation (al ++ al) (n1 :: l))
(Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n1 :: gv1)), (Permutation (al ++ al) (selection_sort l)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort gv1)), (Permutation (al ++ al) (selsort l n)), (Permutation (al ++ al) (selsort l n0)), (Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort al n0))
(Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort gv1 n)), (Permutation (al ++ al) (selsort gv1 n0)), (Permutation (al ++ al) (selsort gv1 n1)), (Permutation (al ++ al) (l ++ l)), (Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (l ++ gv1)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) (al ++ gv1)), (Permutation (al ++ al) (gv1 ++ l))
(Permutation (al ++ al) (gv1 ++ al)), (Permutation (al ++ al) (gv1 ++ gv1)), (Permutation (al ++ al) []), (Permutation (al ++ gv1) l), (Permutation (al ++ gv1) al), (Permutation (al ++ gv1) gv1), (Permutation (al ++ gv1) (n :: l)), (Permutation (al ++ gv1) (n :: al)), (Permutation (al ++ gv1) (n :: gv1)), (Permutation (al ++ gv1) (n0 :: l))
(Permutation (al ++ gv1) (n0 :: al)), (Permutation (al ++ gv1) (n0 :: gv1)), (Permutation (al ++ gv1) (n1 :: l)), (Permutation (al ++ gv1) (n1 :: al)), (Permutation (al ++ gv1) (n1 :: gv1)), (Permutation (al ++ gv1) (selection_sort l)), (Permutation (al ++ gv1) (selection_sort al)), (Permutation (al ++ gv1) (selection_sort gv1)), (Permutation (al ++ gv1) (selsort l n)), (Permutation (al ++ gv1) (selsort l n0))
(Permutation (al ++ gv1) (selsort l n1)), (Permutation (al ++ gv1) (selsort al n)), (Permutation (al ++ gv1) (selsort al n0)), (Permutation (al ++ gv1) (selsort al n1)), (Permutation (al ++ gv1) (selsort gv1 n)), (Permutation (al ++ gv1) (selsort gv1 n0)), (Permutation (al ++ gv1) (selsort gv1 n1)), (Permutation (al ++ gv1) (l ++ l)), (Permutation (al ++ gv1) (l ++ al)), (Permutation (al ++ gv1) (l ++ gv1))
(Permutation (al ++ gv1) (al ++ l)), (Permutation (al ++ gv1) (al ++ al)), (Permutation (al ++ gv1) (gv1 ++ l)), (Permutation (al ++ gv1) (gv1 ++ al)), (Permutation (al ++ gv1) (gv1 ++ gv1)), (Permutation (al ++ gv1) []), (Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) al), (Permutation (gv1 ++ l) gv1), (Permutation (gv1 ++ l) (n :: l))
(Permutation (gv1 ++ l) (n :: al)), (Permutation (gv1 ++ l) (n :: gv1)), (Permutation (gv1 ++ l) (n0 :: l)), (Permutation (gv1 ++ l) (n0 :: al)), (Permutation (gv1 ++ l) (n0 :: gv1)), (Permutation (gv1 ++ l) (n1 :: l)), (Permutation (gv1 ++ l) (n1 :: al)), (Permutation (gv1 ++ l) (n1 :: gv1)), (Permutation (gv1 ++ l) (selection_sort l)), (Permutation (gv1 ++ l) (selection_sort al))
(Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selsort l n)), (Permutation (gv1 ++ l) (selsort l n0)), (Permutation (gv1 ++ l) (selsort l n1)), (Permutation (gv1 ++ l) (selsort al n)), (Permutation (gv1 ++ l) (selsort al n0)), (Permutation (gv1 ++ l) (selsort al n1)), (Permutation (gv1 ++ l) (selsort gv1 n)), (Permutation (gv1 ++ l) (selsort gv1 n0)), (Permutation (gv1 ++ l) (selsort gv1 n1))
(Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) (l ++ al)), (Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (al ++ l)), (Permutation (gv1 ++ l) (al ++ al)), (Permutation (gv1 ++ l) (al ++ gv1)), (Permutation (gv1 ++ l) (gv1 ++ al)), (Permutation (gv1 ++ l) (gv1 ++ gv1)), (Permutation (gv1 ++ l) []), (Permutation (gv1 ++ al) l)
(Permutation (gv1 ++ al) al), (Permutation (gv1 ++ al) gv1), (Permutation (gv1 ++ al) (n :: l)), (Permutation (gv1 ++ al) (n :: al)), (Permutation (gv1 ++ al) (n :: gv1)), (Permutation (gv1 ++ al) (n0 :: l)), (Permutation (gv1 ++ al) (n0 :: al)), (Permutation (gv1 ++ al) (n0 :: gv1)), (Permutation (gv1 ++ al) (n1 :: l)), (Permutation (gv1 ++ al) (n1 :: al))
(Permutation (gv1 ++ al) (n1 :: gv1)), (Permutation (gv1 ++ al) (selection_sort l)), (Permutation (gv1 ++ al) (selection_sort al)), (Permutation (gv1 ++ al) (selection_sort gv1)), (Permutation (gv1 ++ al) (selsort l n)), (Permutation (gv1 ++ al) (selsort l n0)), (Permutation (gv1 ++ al) (selsort l n1)), (Permutation (gv1 ++ al) (selsort al n)), (Permutation (gv1 ++ al) (selsort al n0)), (Permutation (gv1 ++ al) (selsort al n1))
(Permutation (gv1 ++ al) (selsort gv1 n)), (Permutation (gv1 ++ al) (selsort gv1 n0)), (Permutation (gv1 ++ al) (selsort gv1 n1)), (Permutation (gv1 ++ al) (l ++ l)), (Permutation (gv1 ++ al) (l ++ al)), (Permutation (gv1 ++ al) (l ++ gv1)), (Permutation (gv1 ++ al) (al ++ l)), (Permutation (gv1 ++ al) (al ++ al)), (Permutation (gv1 ++ al) (al ++ gv1)), (Permutation (gv1 ++ al) (gv1 ++ l))
(Permutation (gv1 ++ al) (gv1 ++ gv1)), (Permutation (gv1 ++ al) []), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) al), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (n :: l)), (Permutation (gv1 ++ gv1) (n :: al)), (Permutation (gv1 ++ gv1) (n :: gv1)), (Permutation (gv1 ++ gv1) (n0 :: l)), (Permutation (gv1 ++ gv1) (n0 :: al))
(Permutation (gv1 ++ gv1) (n0 :: gv1)), (Permutation (gv1 ++ gv1) (n1 :: l)), (Permutation (gv1 ++ gv1) (n1 :: al)), (Permutation (gv1 ++ gv1) (n1 :: gv1)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selection_sort al)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selsort l n)), (Permutation (gv1 ++ gv1) (selsort l n0)), (Permutation (gv1 ++ gv1) (selsort l n1))
(Permutation (gv1 ++ gv1) (selsort al n)), (Permutation (gv1 ++ gv1) (selsort al n0)), (Permutation (gv1 ++ gv1) (selsort al n1)), (Permutation (gv1 ++ gv1) (selsort gv1 n)), (Permutation (gv1 ++ gv1) (selsort gv1 n0)), (Permutation (gv1 ++ gv1) (selsort gv1 n1)), (Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) (l ++ al)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (al ++ l))
(Permutation (gv1 ++ gv1) (al ++ al)), (Permutation (gv1 ++ gv1) (al ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) (gv1 ++ al)), (Permutation (gv1 ++ gv1) []), (Permutation [] l), (Permutation [] al), (Permutation [] gv1), (Permutation [] (n :: l)), (Permutation [] (n :: al))
(Permutation [] (n :: gv1)), (Permutation [] (n0 :: l)), (Permutation [] (n0 :: al)), (Permutation [] (n0 :: gv1)), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: al)), (Permutation [] (n1 :: gv1)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort gv1))
(Permutation [] (selsort l n)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort al n)), (Permutation [] (selsort al n0)), (Permutation [] (selsort al n1)), (Permutation [] (selsort gv1 n)), (Permutation [] (selsort gv1 n0)), (Permutation [] (selsort gv1 n1)), (Permutation [] (l ++ l))
(Permutation [] (l ++ al)), (Permutation [] (l ++ gv1)), (Permutation [] (al ++ l)), (Permutation [] (al ++ al)), (Permutation [] (al ++ gv1)), (Permutation [] (gv1 ++ l)), (Permutation [] (gv1 ++ al)), (Permutation [] (gv1 ++ gv1)), (In n (n :: l)), (In n (n :: al))
(In n (n :: gv1)), (In n (n0 :: l)), (In n (n0 :: al)), (In n (n0 :: gv1)), (In n (n1 :: l)), (In n (n1 :: al)), (In n (n1 :: gv1)), (In n (selection_sort l)), (In n (selection_sort al)), (In n (selection_sort gv1))
(In n (selsort l n)), (In n (selsort l n0)), (In n (selsort l n1)), (In n (selsort al n)), (In n (selsort al n0)), (In n (selsort al n1)), (In n (selsort gv1 n)), (In n (selsort gv1 n0)), (In n (selsort gv1 n1)), (In n (l ++ l))
(In n (l ++ al)), (In n (l ++ gv1)), (In n (al ++ l)), (In n (al ++ al)), (In n (al ++ gv1)), (In n (gv1 ++ l)), (In n (gv1 ++ al)), (In n (gv1 ++ gv1)), (In n0 (n :: l)), (In n0 (n :: al))
(In n0 (n :: gv1)), (In n0 (n0 :: l)), (In n0 (n0 :: al)), (In n0 (n0 :: gv1)), (In n0 (n1 :: l)), (In n0 (n1 :: al)), (In n0 (n1 :: gv1)), (In n0 (selection_sort l)), (In n0 (selection_sort al)), (In n0 (selection_sort gv1))
(In n0 (selsort l n)), (In n0 (selsort l n0)), (In n0 (selsort l n1)), (In n0 (selsort al n)), (In n0 (selsort al n0)), (In n0 (selsort al n1)), (In n0 (selsort gv1 n)), (In n0 (selsort gv1 n0)), (In n0 (selsort gv1 n1)), (In n0 (l ++ l))
(In n0 (l ++ al)), (In n0 (l ++ gv1)), (In n0 (al ++ l)), (In n0 (al ++ al)), (In n0 (al ++ gv1)), (In n0 (gv1 ++ l)), (In n0 (gv1 ++ al)), (In n0 (gv1 ++ gv1)), (In n1 (n :: l)), (In n1 (n :: al))
(In n1 (n :: gv1)), (In n1 (n0 :: l)), (In n1 (n0 :: al)), (In n1 (n0 :: gv1)), (In n1 (n1 :: l)), (In n1 (n1 :: al)), (In n1 (n1 :: gv1)), (In n1 (selection_sort l)), (In n1 (selection_sort al)), (In n1 (selection_sort gv1))
(In n1 (selsort l n)), (In n1 (selsort l n0)), (In n1 (selsort l n1)), (In n1 (selsort al n)), (In n1 (selsort al n0)), (In n1 (selsort al n1)), (In n1 (selsort gv1 n)), (In n1 (selsort gv1 n0)), (In n1 (selsort gv1 n1)), (In n1 (l ++ l))
(In n1 (l ++ al)), (In n1 (l ++ gv1)), (In n1 (al ++ l)), (In n1 (al ++ al)), (In n1 (al ++ gv1)), (In n1 (gv1 ++ l)), (In n1 (gv1 ++ al)), (In n1 (gv1 ++ gv1)), (In (length l) l), (In (length l) al)
(In (length l) gv1), (In (length l) (n :: l)), (In (length l) (n :: al)), (In (length l) (n :: gv1)), (In (length l) (n0 :: l)), (In (length l) (n0 :: al)), (In (length l) (n0 :: gv1)), (In (length l) (n1 :: l)), (In (length l) (n1 :: al)), (In (length l) (n1 :: gv1))
(In (length l) (selection_sort l)), (In (length l) (selection_sort al)), (In (length l) (selection_sort gv1)), (In (length l) (selsort l n)), (In (length l) (selsort l n0)), (In (length l) (selsort l n1)), (In (length l) (selsort al n)), (In (length l) (selsort al n0)), (In (length l) (selsort al n1)), (In (length l) (selsort gv1 n))
(In (length l) (selsort gv1 n0)), (In (length l) (selsort gv1 n1)), (In (length l) (l ++ l)), (In (length l) (l ++ al)), (In (length l) (l ++ gv1)), (In (length l) (al ++ l)), (In (length l) (al ++ al)), (In (length l) (al ++ gv1)), (In (length l) (gv1 ++ l)), (In (length l) (gv1 ++ al))
(In (length l) (gv1 ++ gv1)), (In (length al) l), (In (length al) al), (In (length al) gv1), (In (length al) (n :: l)), (In (length al) (n :: al)), (In (length al) (n :: gv1)), (In (length al) (n0 :: l)), (In (length al) (n0 :: al)), (In (length al) (n0 :: gv1))
(In (length al) (n1 :: l)), (In (length al) (n1 :: al)), (In (length al) (n1 :: gv1)), (In (length al) (selection_sort l)), (In (length al) (selection_sort al)), (In (length al) (selection_sort gv1)), (In (length al) (selsort l n)), (In (length al) (selsort l n0)), (In (length al) (selsort l n1)), (In (length al) (selsort al n))
(In (length al) (selsort al n0)), (In (length al) (selsort al n1)), (In (length al) (selsort gv1 n)), (In (length al) (selsort gv1 n0)), (In (length al) (selsort gv1 n1)), (In (length al) (l ++ l)), (In (length al) (l ++ al)), (In (length al) (l ++ gv1)), (In (length al) (al ++ l)), (In (length al) (al ++ al))
(In (length al) (al ++ gv1)), (In (length al) (gv1 ++ l)), (In (length al) (gv1 ++ al)), (In (length al) (gv1 ++ gv1)), (In (length gv1) l), (In (length gv1) al), (In (length gv1) gv1), (In (length gv1) (n :: l)), (In (length gv1) (n :: al)), (In (length gv1) (n :: gv1))
(In (length gv1) (n0 :: l)), (In (length gv1) (n0 :: al)), (In (length gv1) (n0 :: gv1)), (In (length gv1) (n1 :: l)), (In (length gv1) (n1 :: al)), (In (length gv1) (n1 :: gv1)), (In (length gv1) (selection_sort l)), (In (length gv1) (selection_sort al)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selsort l n))
(In (length gv1) (selsort l n0)), (In (length gv1) (selsort l n1)), (In (length gv1) (selsort al n)), (In (length gv1) (selsort al n0)), (In (length gv1) (selsort al n1)), (In (length gv1) (selsort gv1 n)), (In (length gv1) (selsort gv1 n0)), (In (length gv1) (selsort gv1 n1)), (In (length gv1) (l ++ l)), (In (length gv1) (l ++ al))
(In (length gv1) (l ++ gv1)), (In (length gv1) (al ++ l)), (In (length gv1) (al ++ al)), (In (length gv1) (al ++ gv1)), (In (length gv1) (gv1 ++ l)), (In (length gv1) (gv1 ++ al)), (In (length gv1) (gv1 ++ gv1)), (n < length l), (n < length al), (n < length gv1)
(n0 < length l), (n0 < length al), (n0 < length gv1), (n1 < length l), (n1 < length al), (n1 < length gv1), (length l < n), (length l < n0), (length l < n1), (length l < length al)
(length l < length gv1), (length al < n), (length al < n0), (length al < n1), (length al < length l), (length al < length gv1), (length gv1 < n), (length gv1 < n0), (length gv1 < n1), (length gv1 < length l)
(length gv1 < length al), (n <= length l), (n <= length al), (n <= length gv1), (n0 <= length l), (n0 <= length al), (n0 <= length gv1), (n1 <= length l), (n1 <= length al), (n1 <= length gv1)
(length l <= n), (length l <= n0), (length l <= n1), (length l <= length al), (length l <= length gv1), (length al <= n), (length al <= n0), (length al <= n1), (length al <= length l), (length al <= length gv1)
(length gv1 <= n), (length gv1 <= n0), (length gv1 <= n1), (length gv1 <= length l), (length gv1 <= length al), (~ n <=* l), (~ n <=* al), (~ n <=* gv1), (~ n0 <=* l), (~ n0 <=* al)
(~ n0 <=* gv1), (~ n1 <=* l), (~ n1 <=* al), (~ n1 <=* gv1), (~ sorted l), (~ sorted al), (~ sorted gv1), (~ Permutation l l), (~ Permutation l al), (~ Permutation l gv1)
(~ Permutation al l), (~ Permutation al al), (~ Permutation al gv1), (~ Permutation gv1 l), (~ Permutation gv1 al), (~ Permutation gv1 gv1), (~ In n l), (~ In n al), (~ In n gv1), (~ In n0 l)
(~ In n0 al), (~ In n0 gv1), (~ In n1 l), (~ In n1 al), (~ In n1 gv1), (~ n < n), (~ n < n0), (~ n < n1), (~ n0 < n), (~ n0 < n0)
(~ n0 < n1), (~ n1 < n), (~ n1 < n0), (~ n1 < n1), (~ n <= n), (~ n <= n0), (~ n <= n1), (~ n0 <= n), (~ n0 <= n0), (~ n0 <= n1)
(~ n1 <= n), (~ n1 <= n0), (~ n1 <= n1), (l <> l), (l <> al), (l <> gv1), (al <> l), (al <> al), (al <> gv1), (gv1 <> l)
(gv1 <> al), (gv1 <> gv1), (n <> n), (n <> n0), (n <> n1), (n0 <> n), (n0 <> n0), (n0 <> n1), (n1 <> n), (n1 <> n0)
(n1 <> n1), (None = Some l), (None = Some al), (None = Some gv1), (n :: l = l), (n :: l = al), (n :: l = gv1), (n :: l = selection_sort l), (n :: l = selection_sort al), (n :: l = selection_sort gv1)
(n :: l = selsort l n), (n :: l = selsort l n0), (n :: l = selsort l n1), (n :: l = selsort al n), (n :: l = selsort al n0), (n :: l = selsort al n1), (n :: l = selsort gv1 n), (n :: l = selsort gv1 n0), (n :: l = selsort gv1 n1), (n :: l = l ++ l)
(n :: l = l ++ al), (n :: l = l ++ gv1), (n :: l = al ++ l), (n :: l = al ++ al), (n :: l = al ++ gv1), (n :: l = gv1 ++ l), (n :: l = gv1 ++ al), (n :: l = gv1 ++ gv1), (n :: l = []), (n :: al = l)
(n :: al = al), (n :: al = gv1), (n :: al = selection_sort l), (n :: al = selection_sort al), (n :: al = selection_sort gv1), (n :: al = selsort l n), (n :: al = selsort l n0), (n :: al = selsort l n1), (n :: al = selsort al n), (n :: al = selsort al n0)
(n :: al = selsort al n1), (n :: al = selsort gv1 n), (n :: al = selsort gv1 n0), (n :: al = selsort gv1 n1), (n :: al = l ++ l), (n :: al = l ++ al), (n :: al = l ++ gv1), (n :: al = al ++ l), (n :: al = al ++ al), (n :: al = al ++ gv1)
(n :: al = gv1 ++ l), (n :: al = gv1 ++ al), (n :: al = gv1 ++ gv1), (n :: al = []), (n :: gv1 = l), (n :: gv1 = al), (n :: gv1 = gv1), (n :: gv1 = selection_sort l), (n :: gv1 = selection_sort al), (n :: gv1 = selection_sort gv1)
(n :: gv1 = selsort l n), (n :: gv1 = selsort l n0), (n :: gv1 = selsort l n1), (n :: gv1 = selsort al n), (n :: gv1 = selsort al n0), (n :: gv1 = selsort al n1), (n :: gv1 = selsort gv1 n), (n :: gv1 = selsort gv1 n0), (n :: gv1 = selsort gv1 n1), (n :: gv1 = l ++ l)
(n :: gv1 = l ++ al), (n :: gv1 = l ++ gv1), (n :: gv1 = al ++ l), (n :: gv1 = al ++ al), (n :: gv1 = al ++ gv1), (n :: gv1 = gv1 ++ l), (n :: gv1 = gv1 ++ al), (n :: gv1 = gv1 ++ gv1), (n :: gv1 = []), (n0 :: l = l)
(n0 :: l = al), (n0 :: l = gv1), (n0 :: l = selection_sort l), (n0 :: l = selection_sort al), (n0 :: l = selection_sort gv1), (n0 :: l = selsort l n), (n0 :: l = selsort l n0), (n0 :: l = selsort l n1), (n0 :: l = selsort al n), (n0 :: l = selsort al n0)
(n0 :: l = selsort al n1), (n0 :: l = selsort gv1 n), (n0 :: l = selsort gv1 n0), (n0 :: l = selsort gv1 n1), (n0 :: l = l ++ l), (n0 :: l = l ++ al), (n0 :: l = l ++ gv1), (n0 :: l = al ++ l), (n0 :: l = al ++ al), (n0 :: l = al ++ gv1)
(n0 :: l = gv1 ++ l), (n0 :: l = gv1 ++ al), (n0 :: l = gv1 ++ gv1), (n0 :: l = []), (n0 :: al = l), (n0 :: al = al), (n0 :: al = gv1), (n0 :: al = selection_sort l), (n0 :: al = selection_sort al), (n0 :: al = selection_sort gv1)
(n0 :: al = selsort l n), (n0 :: al = selsort l n0), (n0 :: al = selsort l n1), (n0 :: al = selsort al n), (n0 :: al = selsort al n0), (n0 :: al = selsort al n1), (n0 :: al = selsort gv1 n), (n0 :: al = selsort gv1 n0), (n0 :: al = selsort gv1 n1), (n0 :: al = l ++ l)
(n0 :: al = l ++ al), (n0 :: al = l ++ gv1), (n0 :: al = al ++ l), (n0 :: al = al ++ al), (n0 :: al = al ++ gv1), (n0 :: al = gv1 ++ l), (n0 :: al = gv1 ++ al), (n0 :: al = gv1 ++ gv1), (n0 :: al = []), (n0 :: gv1 = l)
(n0 :: gv1 = al), (n0 :: gv1 = gv1), (n0 :: gv1 = selection_sort l), (n0 :: gv1 = selection_sort al), (n0 :: gv1 = selection_sort gv1), (n0 :: gv1 = selsort l n), (n0 :: gv1 = selsort l n0), (n0 :: gv1 = selsort l n1), (n0 :: gv1 = selsort al n), (n0 :: gv1 = selsort al n0)
(n0 :: gv1 = selsort al n1), (n0 :: gv1 = selsort gv1 n), (n0 :: gv1 = selsort gv1 n0), (n0 :: gv1 = selsort gv1 n1), (n0 :: gv1 = l ++ l), (n0 :: gv1 = l ++ al), (n0 :: gv1 = l ++ gv1), (n0 :: gv1 = al ++ l), (n0 :: gv1 = al ++ al), (n0 :: gv1 = al ++ gv1)
(n0 :: gv1 = gv1 ++ l), (n0 :: gv1 = gv1 ++ al), (n0 :: gv1 = gv1 ++ gv1), (n0 :: gv1 = []), (n1 :: l = l), (n1 :: l = al), (n1 :: l = gv1), (n1 :: l = selection_sort l), (n1 :: l = selection_sort al), (n1 :: l = selection_sort gv1)
(n1 :: l = selsort l n), (n1 :: l = selsort l n0), (n1 :: l = selsort l n1), (n1 :: l = selsort al n), (n1 :: l = selsort al n0), (n1 :: l = selsort al n1), (n1 :: l = selsort gv1 n), (n1 :: l = selsort gv1 n0), (n1 :: l = selsort gv1 n1), (n1 :: l = l ++ l)
(n1 :: l = l ++ al), (n1 :: l = l ++ gv1), (n1 :: l = al ++ l), (n1 :: l = al ++ al), (n1 :: l = al ++ gv1), (n1 :: l = gv1 ++ l), (n1 :: l = gv1 ++ al), (n1 :: l = gv1 ++ gv1), (n1 :: l = []), (n1 :: al = l)
(n1 :: al = al), (n1 :: al = gv1), (n1 :: al = selection_sort l), (n1 :: al = selection_sort al), (n1 :: al = selection_sort gv1), (n1 :: al = selsort l n), (n1 :: al = selsort l n0), (n1 :: al = selsort l n1), (n1 :: al = selsort al n), (n1 :: al = selsort al n0)
(n1 :: al = selsort al n1), (n1 :: al = selsort gv1 n), (n1 :: al = selsort gv1 n0), (n1 :: al = selsort gv1 n1), (n1 :: al = l ++ l), (n1 :: al = l ++ al), (n1 :: al = l ++ gv1), (n1 :: al = al ++ l), (n1 :: al = al ++ al), (n1 :: al = al ++ gv1)
(n1 :: al = gv1 ++ l), (n1 :: al = gv1 ++ al), (n1 :: al = gv1 ++ gv1), (n1 :: al = []), (n1 :: gv1 = l), (n1 :: gv1 = al), (n1 :: gv1 = gv1), (n1 :: gv1 = selection_sort l), (n1 :: gv1 = selection_sort al), (n1 :: gv1 = selection_sort gv1)
(n1 :: gv1 = selsort l n), (n1 :: gv1 = selsort l n0), (n1 :: gv1 = selsort l n1), (n1 :: gv1 = selsort al n), (n1 :: gv1 = selsort al n0), (n1 :: gv1 = selsort al n1), (n1 :: gv1 = selsort gv1 n), (n1 :: gv1 = selsort gv1 n0), (n1 :: gv1 = selsort gv1 n1), (n1 :: gv1 = l ++ l)
(n1 :: gv1 = l ++ al), (n1 :: gv1 = l ++ gv1), (n1 :: gv1 = al ++ l), (n1 :: gv1 = al ++ al), (n1 :: gv1 = al ++ gv1), (n1 :: gv1 = gv1 ++ l), (n1 :: gv1 = gv1 ++ al), (n1 :: gv1 = gv1 ++ gv1), (n1 :: gv1 = []), (selection_sort l = l)
(selection_sort l = al), (selection_sort l = gv1), (selection_sort l = l ++ l), (selection_sort l = l ++ al), (selection_sort l = l ++ gv1), (selection_sort l = al ++ l), (selection_sort l = al ++ al), (selection_sort l = al ++ gv1), (selection_sort l = gv1 ++ l), (selection_sort l = gv1 ++ al)
(selection_sort l = gv1 ++ gv1), (selection_sort al = l), (selection_sort al = al), (selection_sort al = gv1), (selection_sort al = l ++ l), (selection_sort al = l ++ al), (selection_sort al = l ++ gv1), (selection_sort al = al ++ l), (selection_sort al = al ++ al), (selection_sort al = al ++ gv1)
(selection_sort al = gv1 ++ l), (selection_sort al = gv1 ++ al), (selection_sort al = gv1 ++ gv1), (selection_sort gv1 = l), (selection_sort gv1 = al), (selection_sort gv1 = gv1), (selection_sort gv1 = l ++ l), (selection_sort gv1 = l ++ al), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = al ++ l)
(selection_sort gv1 = al ++ al), (selection_sort gv1 = al ++ gv1), (selection_sort gv1 = gv1 ++ l), (selection_sort gv1 = gv1 ++ al), (selection_sort gv1 = gv1 ++ gv1), (selsort l n = l), (selsort l n = al), (selsort l n = gv1), (selsort l n = selection_sort l), (selsort l n = selection_sort al)
(selsort l n = selection_sort gv1), (selsort l n = l ++ l), (selsort l n = l ++ al), (selsort l n = l ++ gv1), (selsort l n = al ++ l), (selsort l n = al ++ al), (selsort l n = al ++ gv1), (selsort l n = gv1 ++ l), (selsort l n = gv1 ++ al), (selsort l n = gv1 ++ gv1)
(selsort l n0 = l), (selsort l n0 = al), (selsort l n0 = gv1), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort al), (selsort l n0 = selection_sort gv1), (selsort l n0 = l ++ l), (selsort l n0 = l ++ al), (selsort l n0 = l ++ gv1), (selsort l n0 = al ++ l)
(selsort l n0 = al ++ al), (selsort l n0 = al ++ gv1), (selsort l n0 = gv1 ++ l), (selsort l n0 = gv1 ++ al), (selsort l n0 = gv1 ++ gv1), (selsort l n1 = l), (selsort l n1 = al), (selsort l n1 = gv1), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort al)
(selsort l n1 = selection_sort gv1), (selsort l n1 = l ++ l), (selsort l n1 = l ++ al), (selsort l n1 = l ++ gv1), (selsort l n1 = al ++ l), (selsort l n1 = al ++ al), (selsort l n1 = al ++ gv1), (selsort l n1 = gv1 ++ l), (selsort l n1 = gv1 ++ al), (selsort l n1 = gv1 ++ gv1)
(selsort al n = l), (selsort al n = al), (selsort al n = gv1), (selsort al n = selection_sort l), (selsort al n = selection_sort al), (selsort al n = selection_sort gv1), (selsort al n = l ++ l), (selsort al n = l ++ al), (selsort al n = l ++ gv1), (selsort al n = al ++ l)
(selsort al n = al ++ al), (selsort al n = al ++ gv1), (selsort al n = gv1 ++ l), (selsort al n = gv1 ++ al), (selsort al n = gv1 ++ gv1), (selsort al n0 = l), (selsort al n0 = al), (selsort al n0 = gv1), (selsort al n0 = selection_sort l), (selsort al n0 = selection_sort al)
(selsort al n0 = selection_sort gv1), (selsort al n0 = l ++ l), (selsort al n0 = l ++ al), (selsort al n0 = l ++ gv1), (selsort al n0 = al ++ l), (selsort al n0 = al ++ al), (selsort al n0 = al ++ gv1), (selsort al n0 = gv1 ++ l), (selsort al n0 = gv1 ++ al), (selsort al n0 = gv1 ++ gv1)
(selsort al n1 = l), (selsort al n1 = al), (selsort al n1 = gv1), (selsort al n1 = selection_sort l), (selsort al n1 = selection_sort al), (selsort al n1 = selection_sort gv1), (selsort al n1 = l ++ l), (selsort al n1 = l ++ al), (selsort al n1 = l ++ gv1), (selsort al n1 = al ++ l)
(selsort al n1 = al ++ al), (selsort al n1 = al ++ gv1), (selsort al n1 = gv1 ++ l), (selsort al n1 = gv1 ++ al), (selsort al n1 = gv1 ++ gv1), (selsort gv1 n = l), (selsort gv1 n = al), (selsort gv1 n = gv1), (selsort gv1 n = selection_sort l), (selsort gv1 n = selection_sort al)
(selsort gv1 n = selection_sort gv1), (selsort gv1 n = l ++ l), (selsort gv1 n = l ++ al), (selsort gv1 n = l ++ gv1), (selsort gv1 n = al ++ l), (selsort gv1 n = al ++ al), (selsort gv1 n = al ++ gv1), (selsort gv1 n = gv1 ++ l), (selsort gv1 n = gv1 ++ al), (selsort gv1 n = gv1 ++ gv1)
(selsort gv1 n0 = l), (selsort gv1 n0 = al), (selsort gv1 n0 = gv1), (selsort gv1 n0 = selection_sort l), (selsort gv1 n0 = selection_sort al), (selsort gv1 n0 = selection_sort gv1), (selsort gv1 n0 = l ++ l), (selsort gv1 n0 = l ++ al), (selsort gv1 n0 = l ++ gv1), (selsort gv1 n0 = al ++ l)
(selsort gv1 n0 = al ++ al), (selsort gv1 n0 = al ++ gv1), (selsort gv1 n0 = gv1 ++ l), (selsort gv1 n0 = gv1 ++ al), (selsort gv1 n0 = gv1 ++ gv1), (selsort gv1 n1 = l), (selsort gv1 n1 = al), (selsort gv1 n1 = gv1), (selsort gv1 n1 = selection_sort l), (selsort gv1 n1 = selection_sort al)
(selsort gv1 n1 = selection_sort gv1), (selsort gv1 n1 = l ++ l), (selsort gv1 n1 = l ++ al), (selsort gv1 n1 = l ++ gv1), (selsort gv1 n1 = al ++ l), (selsort gv1 n1 = al ++ al), (selsort gv1 n1 = al ++ gv1), (selsort gv1 n1 = gv1 ++ l), (selsort gv1 n1 = gv1 ++ al), (selsort gv1 n1 = gv1 ++ gv1)
(l ++ l = l), (l ++ l = al), (l ++ l = gv1), (l ++ al = l), (l ++ al = al), (l ++ al = gv1), (l ++ gv1 = l), (l ++ gv1 = al), (l ++ gv1 = gv1), (al ++ l = l)
(al ++ l = al), (al ++ l = gv1), (al ++ al = l), (al ++ al = al), (al ++ al = gv1), (al ++ gv1 = l), (al ++ gv1 = al), (al ++ gv1 = gv1), (gv1 ++ l = l), (gv1 ++ l = al)
(gv1 ++ l = gv1), (gv1 ++ al = l), (gv1 ++ al = al), (gv1 ++ al = gv1), (gv1 ++ gv1 = l), (gv1 ++ gv1 = al), (gv1 ++ gv1 = gv1), ([] = l), ([] = al), ([] = gv1)
([] = selection_sort l), ([] = selection_sort al), ([] = selection_sort gv1), ([] = selsort l n), ([] = selsort l n0), ([] = selsort l n1), ([] = selsort al n), ([] = selsort al n0), ([] = selsort al n1), ([] = selsort gv1 n)
([] = selsort gv1 n0), ([] = selsort gv1 n1), ([] = l ++ l), ([] = l ++ al), ([] = l ++ gv1), ([] = al ++ l), ([] = al ++ al), ([] = al ++ gv1), ([] = gv1 ++ l), ([] = gv1 ++ al)
([] = gv1 ++ gv1), (None = Some n), (None = Some n0), (None = Some n1), ((n, l) = select n l), ((n, l) = select n al), ((n, l) = select n gv1), ((n, l) = select n0 l), ((n, l) = select n0 al), ((n, l) = select n0 gv1)
((n, l) = select n1 l), ((n, l) = select n1 al), ((n, l) = select n1 gv1), ((n, al) = select n l), ((n, al) = select n al), ((n, al) = select n gv1), ((n, al) = select n0 l), ((n, al) = select n0 al), ((n, al) = select n0 gv1), ((n, al) = select n1 l)
((n, al) = select n1 al), ((n, al) = select n1 gv1), ((n, gv1) = select n l), ((n, gv1) = select n al), ((n, gv1) = select n gv1), ((n, gv1) = select n0 l), ((n, gv1) = select n0 al), ((n, gv1) = select n0 gv1), ((n, gv1) = select n1 l), ((n, gv1) = select n1 al)
((n, gv1) = select n1 gv1), ((n0, l) = select n l), ((n0, l) = select n al), ((n0, l) = select n gv1), ((n0, l) = select n0 l), ((n0, l) = select n0 al), ((n0, l) = select n0 gv1), ((n0, l) = select n1 l), ((n0, l) = select n1 al), ((n0, l) = select n1 gv1)
((n0, al) = select n l), ((n0, al) = select n al), ((n0, al) = select n gv1), ((n0, al) = select n0 l), ((n0, al) = select n0 al), ((n0, al) = select n0 gv1), ((n0, al) = select n1 l), ((n0, al) = select n1 al), ((n0, al) = select n1 gv1), ((n0, gv1) = select n l)
((n0, gv1) = select n al), ((n0, gv1) = select n gv1), ((n0, gv1) = select n0 l), ((n0, gv1) = select n0 al), ((n0, gv1) = select n0 gv1), ((n0, gv1) = select n1 l), ((n0, gv1) = select n1 al), ((n0, gv1) = select n1 gv1), ((n1, l) = select n l), ((n1, l) = select n al)
((n1, l) = select n gv1), ((n1, l) = select n0 l), ((n1, l) = select n0 al), ((n1, l) = select n0 gv1), ((n1, l) = select n1 l), ((n1, l) = select n1 al), ((n1, l) = select n1 gv1), ((n1, al) = select n l), ((n1, al) = select n al), ((n1, al) = select n gv1)
((n1, al) = select n0 l), ((n1, al) = select n0 al), ((n1, al) = select n0 gv1), ((n1, al) = select n1 l), ((n1, al) = select n1 al), ((n1, al) = select n1 gv1), ((n1, gv1) = select n l), ((n1, gv1) = select n al), ((n1, gv1) = select n gv1), ((n1, gv1) = select n0 l)
((n1, gv1) = select n0 al), ((n1, gv1) = select n0 gv1), ((n1, gv1) = select n1 l), ((n1, gv1) = select n1 al), ((n1, gv1) = select n1 gv1), (length l = n), (length l = n0), (length l = n1), (length al = n), (length al = n0)
(length al = n1), (length gv1 = n), (length gv1 = n0), (length gv1 = n1)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 56.734 seconds


Label: 0 (0)
(n1 <=* l), (n1 <=* selection_sort l), (n1 <=* selsort l n), (n1 <=* selsort l n1), (n1 <=* l ++ l), (n1 <=* n0 :: l), (n1 <=* n1 :: l), (n1 <=* al ++ l), (n1 <=* l ++ al), ((n1, l) = select n1 l)
((n1, l) = select n0 al)

Label: 1 (1)
(sorted gv0), (sorted (gv0 ++ l)), (sorted (n1 :: gv0)), (selection_sort gv0 = gv0)

Label: 2 (2)
(sorted (n1 :: gv1)), (selsort l n = gv1)


------------------------------ ALL RESULTS ------------------------------
1. (select n0 al = (n1, l) -> sorted (n1 :: selsort l n))

2. (select n0 al = (n1, l) -> n1 <=* l)
(n1 <=* l -> sorted (n1 :: selsort l n))

3. (select n0 al = (n1, l) -> n1 <=* selection_sort l)
(n1 <=* selection_sort l -> sorted (n1 :: selsort l n))

4. (select n0 al = (n1, l) -> n1 <=* selsort l n)
(n1 <=* selsort l n -> sorted (n1 :: selsort l n))

5. (select n0 al = (n1, l) -> n1 <=* selsort l n1)
(n1 <=* selsort l n1 -> sorted (n1 :: selsort l n))

6. (select n0 al = (n1, l) -> n1 <=* l ++ al)
(n1 <=* l ++ al -> sorted (n1 :: selsort l n))

7. (select n0 al = (n1, l) -> n1 <=* al ++ l)
(n1 <=* al ++ l -> sorted (n1 :: selsort l n))

8. (select n0 al = (n1, l) -> n1 <=* l ++ l)
(n1 <=* l ++ l -> sorted (n1 :: selsort l n))

9. (select n0 al = (n1, l) -> n1 <=* n0 :: l)
(n1 <=* n0 :: l -> sorted (n1 :: selsort l n))

10. (select n0 al = (n1, l) -> n1 <=* n1 :: l)
(n1 <=* n1 :: l -> sorted (n1 :: selsort l n))

11. (select n0 al = (n1, l) -> (n1, l) = select n1 l)
((n1, l) = select n1 l -> sorted (n1 :: selsort l n))

12. (select n0 al = (n1, l) -> sorted (gv0 ++ l) -> sorted gv0)

13. (select n0 al = (n1, l) -> sorted (n1 :: gv0) -> sorted gv0)

14. (selection_sort gv0 = gv0 -> select n0 al = (n1, l) -> sorted gv0)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 89.296 seconds

Number of Result Pairs Returned: 14

1. (select n0 al = (n1, l) -> sorted (n1 :: selsort l n))

2. (select n0 al = (n1, l) -> n1 <=* l)
(n1 <=* l -> sorted (n1 :: selsort l n))

3. (select n0 al = (n1, l) -> n1 <=* selection_sort l)
(n1 <=* selection_sort l -> sorted (n1 :: selsort l n))

4. (select n0 al = (n1, l) -> n1 <=* selsort l n)
(n1 <=* selsort l n -> sorted (n1 :: selsort l n))

5. (select n0 al = (n1, l) -> n1 <=* selsort l n1)
(n1 <=* selsort l n1 -> sorted (n1 :: selsort l n))
