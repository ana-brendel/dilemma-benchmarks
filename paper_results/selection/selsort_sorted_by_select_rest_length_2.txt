Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (forall al : list nat, length al = n -> sorted (selsort al n))
 -- (select n0 al = (n1, l))
 -- (length (n0 :: al) = S n)

----------------------------------
Goal: (length l = n)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 3.582 seconds

gv0 : nat = (length l)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 37.273 seconds

Label: Generalization #0
Assumptions: 
 -- (select n0 al = (n1, l))
 -- (length (n0 :: al) = S n)

----------------------------------
Goal: (length l = n)
Case: Valid and Un-Generalized

Label: Generalization #1
Assumptions: 
 -- (select n0 al = (n1, l))
 -- (length l = gv0)
 -- (length (n0 :: al) = S n)

----------------------------------
Goal: (gv0 = n)
Case: Invalid and Generalized



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 37.42 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
map : (forall A B : Type, (A -> B) -> list A -> list B)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)

Label: 0 (0)
Abducted Assumption: (select n0 al = (n1, l))
Positive Examples: 48
Negative Examples: 500

Label: 1 (1)
Abducted Assumption: (length (n0 :: al) = S n)
Positive Examples: 500
Negative Examples: 34

Label: 2 (2)
Inferring Condition About Generalization
Positive Examples: 21
Negative Examples: 19


------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 37.74 seconds


Label: 0 (0)
(n1 <=* al), (n1 <=* l), (n0 <=* al), (n0 <=* l), (n <=* al), (n <=* l), (sorted al), (sorted l), (Permutation al al), (Permutation al l)
(Permutation l al), (Permutation l l), (In n1 al), (In n1 l), (In n0 al), (In n0 l), (In n al), (In n l), (n1 < n1), (n1 < n0)
(n1 < n), (n0 < n1), (n0 < n0), (n0 < n), (n < n1), (n < n0), (n < n), (n1 <= n1), (n1 <= n0), (n1 <= n)
(n0 <= n1), (n0 <= n0), (n0 <= n), (n <= n1), (n <= n0), (n <= n), (n1 = n1), (n1 = n0), (n1 = n), (n0 = n1)
(n0 = n0), (n0 = n), (n = n1), (n = n0), (n = n), (al = al), (al = l), (l = al), (l = l), (n1 <=* n1 :: al)
(n1 <=* n1 :: l), (n1 <=* n0 :: al), (n1 <=* n0 :: l), (n1 <=* n :: al), (n1 <=* n :: l), (n1 <=* selection_sort al), (n1 <=* selection_sort l), (n1 <=* selsort al n1), (n1 <=* selsort al n0), (n1 <=* selsort al n)
(n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* selsort l n), (n1 <=* al ++ al), (n1 <=* al ++ l), (n1 <=* l ++ al), (n1 <=* l ++ l), (n1 <=* []), (n0 <=* n1 :: al), (n0 <=* n1 :: l)
(n0 <=* n0 :: al), (n0 <=* n0 :: l), (n0 <=* n :: al), (n0 <=* n :: l), (n0 <=* selection_sort al), (n0 <=* selection_sort l), (n0 <=* selsort al n1), (n0 <=* selsort al n0), (n0 <=* selsort al n), (n0 <=* selsort l n1)
(n0 <=* selsort l n0), (n0 <=* selsort l n), (n0 <=* al ++ al), (n0 <=* al ++ l), (n0 <=* l ++ al), (n0 <=* l ++ l), (n0 <=* []), (n <=* n1 :: al), (n <=* n1 :: l), (n <=* n0 :: al)
(n <=* n0 :: l), (n <=* n :: al), (n <=* n :: l), (n <=* selection_sort al), (n <=* selection_sort l), (n <=* selsort al n1), (n <=* selsort al n0), (n <=* selsort al n), (n <=* selsort l n1), (n <=* selsort l n0)
(n <=* selsort l n), (n <=* al ++ al), (n <=* al ++ l), (n <=* l ++ al), (n <=* l ++ l), (n <=* []), (length al <=* al), (length al <=* l), (length al <=* n1 :: al), (length al <=* n1 :: l)
(length al <=* n0 :: al), (length al <=* n0 :: l), (length al <=* n :: al), (length al <=* n :: l), (length al <=* selection_sort al), (length al <=* selection_sort l), (length al <=* selsort al n1), (length al <=* selsort al n0), (length al <=* selsort al n), (length al <=* selsort l n1)
(length al <=* selsort l n0), (length al <=* selsort l n), (length al <=* al ++ al), (length al <=* al ++ l), (length al <=* l ++ al), (length al <=* l ++ l), (length al <=* []), (length l <=* al), (length l <=* l), (length l <=* n1 :: al)
(length l <=* n1 :: l), (length l <=* n0 :: al), (length l <=* n0 :: l), (length l <=* n :: al), (length l <=* n :: l), (length l <=* selection_sort al), (length l <=* selection_sort l), (length l <=* selsort al n1), (length l <=* selsort al n0), (length l <=* selsort al n)
(length l <=* selsort l n1), (length l <=* selsort l n0), (length l <=* selsort l n), (length l <=* al ++ al), (length l <=* al ++ l), (length l <=* l ++ al), (length l <=* l ++ l), (length l <=* []), (sorted (n1 :: al)), (sorted (n1 :: l))
(sorted (n0 :: al)), (sorted (n0 :: l)), (sorted (n :: al)), (sorted (n :: l)), (sorted (selection_sort al)), (sorted (selection_sort l)), (sorted (selsort al n1)), (sorted (selsort al n0)), (sorted (selsort al n)), (sorted (selsort l n1))
(sorted (selsort l n0)), (sorted (selsort l n)), (sorted (al ++ al)), (sorted (al ++ l)), (sorted (l ++ al)), (sorted (l ++ l)), (sorted []), (Permutation al (n1 :: al)), (Permutation al (n1 :: l)), (Permutation al (n0 :: al))
(Permutation al (n0 :: l)), (Permutation al (n :: al)), (Permutation al (n :: l)), (Permutation al (selection_sort al)), (Permutation al (selection_sort l)), (Permutation al (selsort al n1)), (Permutation al (selsort al n0)), (Permutation al (selsort al n)), (Permutation al (selsort l n1)), (Permutation al (selsort l n0))
(Permutation al (selsort l n)), (Permutation al (al ++ al)), (Permutation al (al ++ l)), (Permutation al (l ++ al)), (Permutation al (l ++ l)), (Permutation al []), (Permutation l (n1 :: al)), (Permutation l (n1 :: l)), (Permutation l (n0 :: al)), (Permutation l (n0 :: l))
(Permutation l (n :: al)), (Permutation l (n :: l)), (Permutation l (selection_sort al)), (Permutation l (selection_sort l)), (Permutation l (selsort al n1)), (Permutation l (selsort al n0)), (Permutation l (selsort al n)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l n))
(Permutation l (al ++ al)), (Permutation l (al ++ l)), (Permutation l (l ++ al)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n1 :: al) al), (Permutation (n1 :: al) l), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n0 :: l))
(Permutation (n1 :: al) (n :: al)), (Permutation (n1 :: al) (n :: l)), (Permutation (n1 :: al) (selection_sort al)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selsort al n1)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort l n1)), (Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n))
(Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (l ++ al)), (Permutation (n1 :: al) (l ++ l)), (Permutation (n1 :: al) []), (Permutation (n1 :: l) al), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (n0 :: al)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (n :: al)), (Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n))
(Permutation (n1 :: l) (al ++ al)), (Permutation (n1 :: l) (al ++ l)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (n0 :: al) al), (Permutation (n0 :: al) l), (Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n1 :: l)), (Permutation (n0 :: al) (n0 :: l))
(Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (n :: l)), (Permutation (n0 :: al) (selection_sort al)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort l n1)), (Permutation (n0 :: al) (selsort l n0)), (Permutation (n0 :: al) (selsort l n))
(Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) (al ++ l)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) []), (Permutation (n0 :: l) al), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n0 :: al))
(Permutation (n0 :: l) (n :: al)), (Permutation (n0 :: l) (n :: l)), (Permutation (n0 :: l) (selection_sort al)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort al n0)), (Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n))
(Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (n :: al) al), (Permutation (n :: al) l), (Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (n0 :: al))
(Permutation (n :: al) (n0 :: l)), (Permutation (n :: al) (n :: l)), (Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selection_sort l)), (Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n)), (Permutation (n :: al) (selsort l n1)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n))
(Permutation (n :: al) (al ++ al)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) []), (Permutation (n :: l) al), (Permutation (n :: l) l), (Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (n0 :: al))
(Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n :: al)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort l n1)), (Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n))
(Permutation (n :: l) (al ++ al)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (l ++ al)), (Permutation (n :: l) (l ++ l)), (Permutation (n :: l) []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) l), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (n0 :: al))
(Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n :: al)), (Permutation (selection_sort al) (n :: l)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort l n1)), (Permutation (selection_sort al) (selsort l n0)), (Permutation (selection_sort al) (selsort l n))
(Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (l ++ al)), (Permutation (selection_sort al) (l ++ l)), (Permutation (selection_sort al) []), (Permutation (selection_sort l) al), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n0 :: al))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n :: al)), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort al n0)), (Permutation (selection_sort l) (selsort al n)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n))
(Permutation (selection_sort l) (al ++ al)), (Permutation (selection_sort l) (al ++ l)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort al n1) al), (Permutation (selsort al n1) l), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (n0 :: al))
(Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n :: al)), (Permutation (selsort al n1) (n :: l)), (Permutation (selsort al n1) (selection_sort al)), (Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort l n1)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n))
(Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (l ++ l)), (Permutation (selsort al n1) []), (Permutation (selsort al n0) al), (Permutation (selsort al n0) l), (Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (n0 :: al))
(Permutation (selsort al n0) (n0 :: l)), (Permutation (selsort al n0) (n :: al)), (Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort l n1)), (Permutation (selsort al n0) (selsort l n0)), (Permutation (selsort al n0) (selsort l n))
(Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) (al ++ l)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) []), (Permutation (selsort al n) al), (Permutation (selsort al n) l), (Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n1 :: l)), (Permutation (selsort al n) (n0 :: al))
(Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n :: al)), (Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selection_sort l)), (Permutation (selsort al n) (selsort al n1)), (Permutation (selsort al n) (selsort al n0)), (Permutation (selsort al n) (selsort l n1)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n))
(Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (l ++ al)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) []), (Permutation (selsort l n1) al), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n0 :: al))
(Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n :: al)), (Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l n))
(Permutation (selsort l n1) (al ++ al)), (Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) al), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n1 :: al)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n0 :: al))
(Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n :: al)), (Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l n))
(Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (l ++ al)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l n) al), (Permutation (selsort l n) l), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (n0 :: al))
(Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n :: al)), (Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort al n0)), (Permutation (selsort l n) (selsort al n)), (Permutation (selsort l n) (selsort l n1)), (Permutation (selsort l n) (selsort l n0))
(Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (l ++ al)), (Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) []), (Permutation (al ++ al) al), (Permutation (al ++ al) l), (Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n1 :: l)), (Permutation (al ++ al) (n0 :: al))
(Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n :: al)), (Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort l)), (Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort al n0)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (selsort l n0))
(Permutation (al ++ al) (selsort l n)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (l ++ l)), (Permutation (al ++ al) []), (Permutation (al ++ l) al), (Permutation (al ++ l) l), (Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (n0 :: al))
(Permutation (al ++ l) (n0 :: l)), (Permutation (al ++ l) (n :: al)), (Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selection_sort l)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (selsort l n0))
(Permutation (al ++ l) (selsort l n)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) []), (Permutation (l ++ al) al), (Permutation (l ++ al) l), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (n0 :: al))
(Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n :: al)), (Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (selection_sort al)), (Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n)), (Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (selsort l n0))
(Permutation (l ++ al) (selsort l n)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) []), (Permutation (l ++ l) al), (Permutation (l ++ l) l), (Permutation (l ++ l) (n1 :: al)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n0 :: al))
(Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n :: al)), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l n0))
(Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (al ++ al)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) []), (Permutation [] al), (Permutation [] l), (Permutation [] (n1 :: al)), (Permutation [] (n1 :: l)), (Permutation [] (n0 :: al))
(Permutation [] (n0 :: l)), (Permutation [] (n :: al)), (Permutation [] (n :: l)), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort l)), (Permutation [] (selsort al n1)), (Permutation [] (selsort al n0)), (Permutation [] (selsort al n)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0))
(Permutation [] (selsort l n)), (Permutation [] (al ++ al)), (Permutation [] (al ++ l)), (Permutation [] (l ++ al)), (Permutation [] (l ++ l)), (In n1 (n1 :: al)), (In n1 (n1 :: l)), (In n1 (n0 :: al)), (In n1 (n0 :: l)), (In n1 (n :: al))
(In n1 (n :: l)), (In n1 (selection_sort al)), (In n1 (selection_sort l)), (In n1 (selsort al n1)), (In n1 (selsort al n0)), (In n1 (selsort al n)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (selsort l n)), (In n1 (al ++ al))
(In n1 (al ++ l)), (In n1 (l ++ al)), (In n1 (l ++ l)), (In n0 (n1 :: al)), (In n0 (n1 :: l)), (In n0 (n0 :: al)), (In n0 (n0 :: l)), (In n0 (n :: al)), (In n0 (n :: l)), (In n0 (selection_sort al))
(In n0 (selection_sort l)), (In n0 (selsort al n1)), (In n0 (selsort al n0)), (In n0 (selsort al n)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (selsort l n)), (In n0 (al ++ al)), (In n0 (al ++ l)), (In n0 (l ++ al))
(In n0 (l ++ l)), (In n (n1 :: al)), (In n (n1 :: l)), (In n (n0 :: al)), (In n (n0 :: l)), (In n (n :: al)), (In n (n :: l)), (In n (selection_sort al)), (In n (selection_sort l)), (In n (selsort al n1))
(In n (selsort al n0)), (In n (selsort al n)), (In n (selsort l n1)), (In n (selsort l n0)), (In n (selsort l n)), (In n (al ++ al)), (In n (al ++ l)), (In n (l ++ al)), (In n (l ++ l)), (In (length al) al)
(In (length al) l), (In (length al) (n1 :: al)), (In (length al) (n1 :: l)), (In (length al) (n0 :: al)), (In (length al) (n0 :: l)), (In (length al) (n :: al)), (In (length al) (n :: l)), (In (length al) (selection_sort al)), (In (length al) (selection_sort l)), (In (length al) (selsort al n1))
(In (length al) (selsort al n0)), (In (length al) (selsort al n)), (In (length al) (selsort l n1)), (In (length al) (selsort l n0)), (In (length al) (selsort l n)), (In (length al) (al ++ al)), (In (length al) (al ++ l)), (In (length al) (l ++ al)), (In (length al) (l ++ l)), (In (length l) al)
(In (length l) l), (In (length l) (n1 :: al)), (In (length l) (n1 :: l)), (In (length l) (n0 :: al)), (In (length l) (n0 :: l)), (In (length l) (n :: al)), (In (length l) (n :: l)), (In (length l) (selection_sort al)), (In (length l) (selection_sort l)), (In (length l) (selsort al n1))
(In (length l) (selsort al n0)), (In (length l) (selsort al n)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (selsort l n)), (In (length l) (al ++ al)), (In (length l) (al ++ l)), (In (length l) (l ++ al)), (In (length l) (l ++ l)), (n1 < length al)
(n1 < length l), (n0 < length al), (n0 < length l), (n < length al), (n < length l), (length al < n1), (length al < n0), (length al < n), (length al < length l), (length l < n1)
(length l < n0), (length l < n), (length l < length al), (n1 <= length al), (n1 <= length l), (n0 <= length al), (n0 <= length l), (n <= length al), (n <= length l), (length al <= n1)
(length al <= n0), (length al <= n), (length al <= length l), (length l <= n1), (length l <= n0), (length l <= n), (length l <= length al), (~ n1 <=* al), (~ n1 <=* l), (~ n0 <=* al)
(~ n0 <=* l), (~ n <=* al), (~ n <=* l), (~ sorted al), (~ sorted l), (~ Permutation al al), (~ Permutation al l), (~ Permutation l al), (~ Permutation l l), (~ In n1 al)
(~ In n1 l), (~ In n0 al), (~ In n0 l), (~ In n al), (~ In n l), (~ n1 < n1), (~ n1 < n0), (~ n1 < n), (~ n0 < n1), (~ n0 < n0)
(~ n0 < n), (~ n < n1), (~ n < n0), (~ n < n), (~ n1 <= n1), (~ n1 <= n0), (~ n1 <= n), (~ n0 <= n1), (~ n0 <= n0), (~ n0 <= n)
(~ n <= n1), (~ n <= n0), (~ n <= n), (n1 <> n1), (n1 <> n0), (n1 <> n), (n0 <> n1), (n0 <> n0), (n0 <> n), (n <> n1)
(n <> n0), (n <> n), (al <> al), (al <> l), (l <> al), (l <> l), (None = Some al), (None = Some l), (n1 :: al = al), (n1 :: al = l)
(n1 :: al = selection_sort al), (n1 :: al = selection_sort l), (n1 :: al = selsort al n1), (n1 :: al = selsort al n0), (n1 :: al = selsort al n), (n1 :: al = selsort l n1), (n1 :: al = selsort l n0), (n1 :: al = selsort l n), (n1 :: al = al ++ al), (n1 :: al = al ++ l)
(n1 :: al = l ++ al), (n1 :: al = l ++ l), (n1 :: al = []), (n1 :: l = al), (n1 :: l = l), (n1 :: l = selection_sort al), (n1 :: l = selection_sort l), (n1 :: l = selsort al n1), (n1 :: l = selsort al n0), (n1 :: l = selsort al n)
(n1 :: l = selsort l n1), (n1 :: l = selsort l n0), (n1 :: l = selsort l n), (n1 :: l = al ++ al), (n1 :: l = al ++ l), (n1 :: l = l ++ al), (n1 :: l = l ++ l), (n1 :: l = []), (n0 :: al = al), (n0 :: al = l)
(n0 :: al = selection_sort al), (n0 :: al = selection_sort l), (n0 :: al = selsort al n1), (n0 :: al = selsort al n0), (n0 :: al = selsort al n), (n0 :: al = selsort l n1), (n0 :: al = selsort l n0), (n0 :: al = selsort l n), (n0 :: al = al ++ al), (n0 :: al = al ++ l)
(n0 :: al = l ++ al), (n0 :: al = l ++ l), (n0 :: al = []), (n0 :: l = al), (n0 :: l = l), (n0 :: l = selection_sort al), (n0 :: l = selection_sort l), (n0 :: l = selsort al n1), (n0 :: l = selsort al n0), (n0 :: l = selsort al n)
(n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l n), (n0 :: l = al ++ al), (n0 :: l = al ++ l), (n0 :: l = l ++ al), (n0 :: l = l ++ l), (n0 :: l = []), (n :: al = al), (n :: al = l)
(n :: al = selection_sort al), (n :: al = selection_sort l), (n :: al = selsort al n1), (n :: al = selsort al n0), (n :: al = selsort al n), (n :: al = selsort l n1), (n :: al = selsort l n0), (n :: al = selsort l n), (n :: al = al ++ al), (n :: al = al ++ l)
(n :: al = l ++ al), (n :: al = l ++ l), (n :: al = []), (n :: l = al), (n :: l = l), (n :: l = selection_sort al), (n :: l = selection_sort l), (n :: l = selsort al n1), (n :: l = selsort al n0), (n :: l = selsort al n)
(n :: l = selsort l n1), (n :: l = selsort l n0), (n :: l = selsort l n), (n :: l = al ++ al), (n :: l = al ++ l), (n :: l = l ++ al), (n :: l = l ++ l), (n :: l = []), (selection_sort al = al), (selection_sort al = l)
(selection_sort al = al ++ al), (selection_sort al = al ++ l), (selection_sort al = l ++ al), (selection_sort al = l ++ l), (selection_sort l = al), (selection_sort l = l), (selection_sort l = al ++ al), (selection_sort l = al ++ l), (selection_sort l = l ++ al), (selection_sort l = l ++ l)
(selsort al n1 = al), (selsort al n1 = l), (selsort al n1 = selection_sort al), (selsort al n1 = selection_sort l), (selsort al n1 = al ++ al), (selsort al n1 = al ++ l), (selsort al n1 = l ++ al), (selsort al n1 = l ++ l), (selsort al n0 = al), (selsort al n0 = l)
(selsort al n0 = selection_sort al), (selsort al n0 = selection_sort l), (selsort al n0 = al ++ al), (selsort al n0 = al ++ l), (selsort al n0 = l ++ al), (selsort al n0 = l ++ l), (selsort al n = al), (selsort al n = l), (selsort al n = selection_sort al), (selsort al n = selection_sort l)
(selsort al n = al ++ al), (selsort al n = al ++ l), (selsort al n = l ++ al), (selsort al n = l ++ l), (selsort l n1 = al), (selsort l n1 = l), (selsort l n1 = selection_sort al), (selsort l n1 = selection_sort l), (selsort l n1 = al ++ al), (selsort l n1 = al ++ l)
(selsort l n1 = l ++ al), (selsort l n1 = l ++ l), (selsort l n0 = al), (selsort l n0 = l), (selsort l n0 = selection_sort al), (selsort l n0 = selection_sort l), (selsort l n0 = al ++ al), (selsort l n0 = al ++ l), (selsort l n0 = l ++ al), (selsort l n0 = l ++ l)
(selsort l n = al), (selsort l n = l), (selsort l n = selection_sort al), (selsort l n = selection_sort l), (selsort l n = al ++ al), (selsort l n = al ++ l), (selsort l n = l ++ al), (selsort l n = l ++ l), (al ++ al = al), (al ++ al = l)
(al ++ l = al), (al ++ l = l), (l ++ al = al), (l ++ al = l), (l ++ l = al), (l ++ l = l), ([] = al), ([] = l), ([] = selection_sort al), ([] = selection_sort l)
([] = selsort al n1), ([] = selsort al n0), ([] = selsort al n), ([] = selsort l n1), ([] = selsort l n0), ([] = selsort l n), ([] = al ++ al), ([] = al ++ l), ([] = l ++ al), ([] = l ++ l)
(None = Some n1), (None = Some n0), (None = Some n), ((n1, al) = select n1 al), ((n1, al) = select n1 l), ((n1, al) = select n0 al), ((n1, al) = select n0 l), ((n1, al) = select n al), ((n1, al) = select n l), ((n1, l) = select n1 al)
((n1, l) = select n1 l), ((n1, l) = select n0 al), ((n1, l) = select n0 l), ((n1, l) = select n al), ((n1, l) = select n l), ((n0, al) = select n1 al), ((n0, al) = select n1 l), ((n0, al) = select n0 al), ((n0, al) = select n0 l), ((n0, al) = select n al)
((n0, al) = select n l), ((n0, l) = select n1 al), ((n0, l) = select n1 l), ((n0, l) = select n0 al), ((n0, l) = select n0 l), ((n0, l) = select n al), ((n0, l) = select n l), ((n, al) = select n1 al), ((n, al) = select n1 l), ((n, al) = select n0 al)
((n, al) = select n0 l), ((n, al) = select n al), ((n, al) = select n l), ((n, l) = select n1 al), ((n, l) = select n1 l), ((n, l) = select n0 al), ((n, l) = select n0 l), ((n, l) = select n al), ((n, l) = select n l), (length al = n1)
(length al = n0), (length al = n), (length l = n1), (length l = n0), (length l = n)

Label: 1 (1)
(n1 <=* al), (n1 <=* l), (n0 <=* al), (n0 <=* l), (n <=* al), (n <=* l), (sorted al), (sorted l), (Permutation al al), (Permutation al l)
(Permutation l al), (Permutation l l), (In n1 al), (In n1 l), (In n0 al), (In n0 l), (In n al), (In n l), (n1 < n1), (n1 < n0)
(n1 < n), (n0 < n1), (n0 < n0), (n0 < n), (n < n1), (n < n0), (n < n), (n1 <= n1), (n1 <= n0), (n1 <= n)
(n0 <= n1), (n0 <= n0), (n0 <= n), (n <= n1), (n <= n0), (n <= n), (n1 = n1), (n1 = n0), (n1 = n), (n0 = n1)
(n0 = n0), (n0 = n), (n = n1), (n = n0), (n = n), (al = al), (al = l), (l = al), (l = l), (n1 <=* n1 :: al)
(n1 <=* n1 :: l), (n1 <=* n0 :: al), (n1 <=* n0 :: l), (n1 <=* n :: al), (n1 <=* n :: l), (n1 <=* selection_sort al), (n1 <=* selection_sort l), (n1 <=* selsort al n1), (n1 <=* selsort al n0), (n1 <=* selsort al n)
(n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* selsort l n), (n1 <=* al ++ al), (n1 <=* al ++ l), (n1 <=* l ++ al), (n1 <=* l ++ l), (n1 <=* []), (n0 <=* n1 :: al), (n0 <=* n1 :: l)
(n0 <=* n0 :: al), (n0 <=* n0 :: l), (n0 <=* n :: al), (n0 <=* n :: l), (n0 <=* selection_sort al), (n0 <=* selection_sort l), (n0 <=* selsort al n1), (n0 <=* selsort al n0), (n0 <=* selsort al n), (n0 <=* selsort l n1)
(n0 <=* selsort l n0), (n0 <=* selsort l n), (n0 <=* al ++ al), (n0 <=* al ++ l), (n0 <=* l ++ al), (n0 <=* l ++ l), (n0 <=* []), (n <=* n1 :: al), (n <=* n1 :: l), (n <=* n0 :: al)
(n <=* n0 :: l), (n <=* n :: al), (n <=* n :: l), (n <=* selection_sort al), (n <=* selection_sort l), (n <=* selsort al n1), (n <=* selsort al n0), (n <=* selsort al n), (n <=* selsort l n1), (n <=* selsort l n0)
(n <=* selsort l n), (n <=* al ++ al), (n <=* al ++ l), (n <=* l ++ al), (n <=* l ++ l), (n <=* []), (length al <=* al), (length al <=* l), (length al <=* n1 :: al), (length al <=* n1 :: l)
(length al <=* n0 :: al), (length al <=* n0 :: l), (length al <=* n :: al), (length al <=* n :: l), (length al <=* selection_sort al), (length al <=* selection_sort l), (length al <=* selsort al n1), (length al <=* selsort al n0), (length al <=* selsort al n), (length al <=* selsort l n1)
(length al <=* selsort l n0), (length al <=* selsort l n), (length al <=* al ++ al), (length al <=* al ++ l), (length al <=* l ++ al), (length al <=* l ++ l), (length al <=* []), (length l <=* al), (length l <=* l), (length l <=* n1 :: al)
(length l <=* n1 :: l), (length l <=* n0 :: al), (length l <=* n0 :: l), (length l <=* n :: al), (length l <=* n :: l), (length l <=* selection_sort al), (length l <=* selection_sort l), (length l <=* selsort al n1), (length l <=* selsort al n0), (length l <=* selsort al n)
(length l <=* selsort l n1), (length l <=* selsort l n0), (length l <=* selsort l n), (length l <=* al ++ al), (length l <=* al ++ l), (length l <=* l ++ al), (length l <=* l ++ l), (length l <=* []), (sorted (n1 :: al)), (sorted (n1 :: l))
(sorted (n0 :: al)), (sorted (n0 :: l)), (sorted (n :: al)), (sorted (n :: l)), (sorted (selection_sort al)), (sorted (selection_sort l)), (sorted (selsort al n1)), (sorted (selsort al n0)), (sorted (selsort al n)), (sorted (selsort l n1))
(sorted (selsort l n0)), (sorted (selsort l n)), (sorted (al ++ al)), (sorted (al ++ l)), (sorted (l ++ al)), (sorted (l ++ l)), (sorted []), (Permutation al (n1 :: al)), (Permutation al (n1 :: l)), (Permutation al (n0 :: al))
(Permutation al (n0 :: l)), (Permutation al (n :: al)), (Permutation al (n :: l)), (Permutation al (selection_sort al)), (Permutation al (selection_sort l)), (Permutation al (selsort al n1)), (Permutation al (selsort al n0)), (Permutation al (selsort al n)), (Permutation al (selsort l n1)), (Permutation al (selsort l n0))
(Permutation al (selsort l n)), (Permutation al (al ++ al)), (Permutation al (al ++ l)), (Permutation al (l ++ al)), (Permutation al (l ++ l)), (Permutation al []), (Permutation l (n1 :: al)), (Permutation l (n1 :: l)), (Permutation l (n0 :: al)), (Permutation l (n0 :: l))
(Permutation l (n :: al)), (Permutation l (n :: l)), (Permutation l (selection_sort al)), (Permutation l (selection_sort l)), (Permutation l (selsort al n1)), (Permutation l (selsort al n0)), (Permutation l (selsort al n)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (selsort l n))
(Permutation l (al ++ al)), (Permutation l (al ++ l)), (Permutation l (l ++ al)), (Permutation l (l ++ l)), (Permutation l []), (Permutation (n1 :: al) al), (Permutation (n1 :: al) l), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n0 :: l))
(Permutation (n1 :: al) (n :: al)), (Permutation (n1 :: al) (n :: l)), (Permutation (n1 :: al) (selection_sort al)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selsort al n1)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort l n1)), (Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n))
(Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (l ++ al)), (Permutation (n1 :: al) (l ++ l)), (Permutation (n1 :: al) []), (Permutation (n1 :: l) al), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (n0 :: al)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (n :: al)), (Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n))
(Permutation (n1 :: l) (al ++ al)), (Permutation (n1 :: l) (al ++ l)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) []), (Permutation (n0 :: al) al), (Permutation (n0 :: al) l), (Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n1 :: l)), (Permutation (n0 :: al) (n0 :: l))
(Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (n :: l)), (Permutation (n0 :: al) (selection_sort al)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort l n1)), (Permutation (n0 :: al) (selsort l n0)), (Permutation (n0 :: al) (selsort l n))
(Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) (al ++ l)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) []), (Permutation (n0 :: l) al), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n0 :: al))
(Permutation (n0 :: l) (n :: al)), (Permutation (n0 :: l) (n :: l)), (Permutation (n0 :: l) (selection_sort al)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort al n0)), (Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n))
(Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (n :: al) al), (Permutation (n :: al) l), (Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (n0 :: al))
(Permutation (n :: al) (n0 :: l)), (Permutation (n :: al) (n :: l)), (Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selection_sort l)), (Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n)), (Permutation (n :: al) (selsort l n1)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n))
(Permutation (n :: al) (al ++ al)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) []), (Permutation (n :: l) al), (Permutation (n :: l) l), (Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (n0 :: al))
(Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n :: al)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort l n1)), (Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n))
(Permutation (n :: l) (al ++ al)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (l ++ al)), (Permutation (n :: l) (l ++ l)), (Permutation (n :: l) []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) l), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (n0 :: al))
(Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n :: al)), (Permutation (selection_sort al) (n :: l)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort l n1)), (Permutation (selection_sort al) (selsort l n0)), (Permutation (selection_sort al) (selsort l n))
(Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (l ++ al)), (Permutation (selection_sort al) (l ++ l)), (Permutation (selection_sort al) []), (Permutation (selection_sort l) al), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n0 :: al))
(Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n :: al)), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort al n0)), (Permutation (selection_sort l) (selsort al n)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (selsort l n))
(Permutation (selection_sort l) (al ++ al)), (Permutation (selection_sort l) (al ++ l)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort al n1) al), (Permutation (selsort al n1) l), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (n0 :: al))
(Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n :: al)), (Permutation (selsort al n1) (n :: l)), (Permutation (selsort al n1) (selection_sort al)), (Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort l n1)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n))
(Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (l ++ l)), (Permutation (selsort al n1) []), (Permutation (selsort al n0) al), (Permutation (selsort al n0) l), (Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (n0 :: al))
(Permutation (selsort al n0) (n0 :: l)), (Permutation (selsort al n0) (n :: al)), (Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort l n1)), (Permutation (selsort al n0) (selsort l n0)), (Permutation (selsort al n0) (selsort l n))
(Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) (al ++ l)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) []), (Permutation (selsort al n) al), (Permutation (selsort al n) l), (Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n1 :: l)), (Permutation (selsort al n) (n0 :: al))
(Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n :: al)), (Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selection_sort l)), (Permutation (selsort al n) (selsort al n1)), (Permutation (selsort al n) (selsort al n0)), (Permutation (selsort al n) (selsort l n1)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n))
(Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (l ++ al)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) []), (Permutation (selsort l n1) al), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n0 :: al))
(Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (n :: al)), (Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l n))
(Permutation (selsort l n1) (al ++ al)), (Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) al), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n1 :: al)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n0 :: al))
(Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n :: al)), (Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l n))
(Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (l ++ al)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (selsort l n) al), (Permutation (selsort l n) l), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (n0 :: al))
(Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n :: al)), (Permutation (selsort l n) (n :: l)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort al n0)), (Permutation (selsort l n) (selsort al n)), (Permutation (selsort l n) (selsort l n1)), (Permutation (selsort l n) (selsort l n0))
(Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (l ++ al)), (Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) []), (Permutation (al ++ al) al), (Permutation (al ++ al) l), (Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n1 :: l)), (Permutation (al ++ al) (n0 :: al))
(Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n :: al)), (Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort l)), (Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort al n0)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (selsort l n0))
(Permutation (al ++ al) (selsort l n)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (l ++ l)), (Permutation (al ++ al) []), (Permutation (al ++ l) al), (Permutation (al ++ l) l), (Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (n0 :: al))
(Permutation (al ++ l) (n0 :: l)), (Permutation (al ++ l) (n :: al)), (Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selection_sort l)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (selsort l n0))
(Permutation (al ++ l) (selsort l n)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) []), (Permutation (l ++ al) al), (Permutation (l ++ al) l), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (n0 :: al))
(Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n :: al)), (Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (selection_sort al)), (Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n)), (Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (selsort l n0))
(Permutation (l ++ al) (selsort l n)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) []), (Permutation (l ++ l) al), (Permutation (l ++ l) l), (Permutation (l ++ l) (n1 :: al)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n0 :: al))
(Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n :: al)), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort l n1)), (Permutation (l ++ l) (selsort l n0))
(Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (al ++ al)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) []), (Permutation [] al), (Permutation [] l), (Permutation [] (n1 :: al)), (Permutation [] (n1 :: l)), (Permutation [] (n0 :: al))
(Permutation [] (n0 :: l)), (Permutation [] (n :: al)), (Permutation [] (n :: l)), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort l)), (Permutation [] (selsort al n1)), (Permutation [] (selsort al n0)), (Permutation [] (selsort al n)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0))
(Permutation [] (selsort l n)), (Permutation [] (al ++ al)), (Permutation [] (al ++ l)), (Permutation [] (l ++ al)), (Permutation [] (l ++ l)), (In n1 (n1 :: al)), (In n1 (n1 :: l)), (In n1 (n0 :: al)), (In n1 (n0 :: l)), (In n1 (n :: al))
(In n1 (n :: l)), (In n1 (selection_sort al)), (In n1 (selection_sort l)), (In n1 (selsort al n1)), (In n1 (selsort al n0)), (In n1 (selsort al n)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (selsort l n)), (In n1 (al ++ al))
(In n1 (al ++ l)), (In n1 (l ++ al)), (In n1 (l ++ l)), (In n0 (n1 :: al)), (In n0 (n1 :: l)), (In n0 (n0 :: al)), (In n0 (n0 :: l)), (In n0 (n :: al)), (In n0 (n :: l)), (In n0 (selection_sort al))
(In n0 (selection_sort l)), (In n0 (selsort al n1)), (In n0 (selsort al n0)), (In n0 (selsort al n)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (selsort l n)), (In n0 (al ++ al)), (In n0 (al ++ l)), (In n0 (l ++ al))
(In n0 (l ++ l)), (In n (n1 :: al)), (In n (n1 :: l)), (In n (n0 :: al)), (In n (n0 :: l)), (In n (n :: al)), (In n (n :: l)), (In n (selection_sort al)), (In n (selection_sort l)), (In n (selsort al n1))
(In n (selsort al n0)), (In n (selsort al n)), (In n (selsort l n1)), (In n (selsort l n0)), (In n (selsort l n)), (In n (al ++ al)), (In n (al ++ l)), (In n (l ++ al)), (In n (l ++ l)), (In (length al) al)
(In (length al) l), (In (length al) (n1 :: al)), (In (length al) (n1 :: l)), (In (length al) (n0 :: al)), (In (length al) (n0 :: l)), (In (length al) (n :: al)), (In (length al) (n :: l)), (In (length al) (selection_sort al)), (In (length al) (selection_sort l)), (In (length al) (selsort al n1))
(In (length al) (selsort al n0)), (In (length al) (selsort al n)), (In (length al) (selsort l n1)), (In (length al) (selsort l n0)), (In (length al) (selsort l n)), (In (length al) (al ++ al)), (In (length al) (al ++ l)), (In (length al) (l ++ al)), (In (length al) (l ++ l)), (In (length l) al)
(In (length l) l), (In (length l) (n1 :: al)), (In (length l) (n1 :: l)), (In (length l) (n0 :: al)), (In (length l) (n0 :: l)), (In (length l) (n :: al)), (In (length l) (n :: l)), (In (length l) (selection_sort al)), (In (length l) (selection_sort l)), (In (length l) (selsort al n1))
(In (length l) (selsort al n0)), (In (length l) (selsort al n)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (selsort l n)), (In (length l) (al ++ al)), (In (length l) (al ++ l)), (In (length l) (l ++ al)), (In (length l) (l ++ l)), (n1 < length al)
(n1 < length l), (n0 < length al), (n0 < length l), (n < length al), (n < length l), (length al < n1), (length al < n0), (length al < n), (length al < length l), (length l < n1)
(length l < n0), (length l < n), (length l < length al), (n1 <= length al), (n1 <= length l), (n0 <= length al), (n0 <= length l), (n <= length al), (n <= length l), (length al <= n1)
(length al <= n0), (length al <= n), (length al <= length l), (length l <= n1), (length l <= n0), (length l <= n), (length l <= length al), (~ n1 <=* al), (~ n1 <=* l), (~ n0 <=* al)
(~ n0 <=* l), (~ n <=* al), (~ n <=* l), (~ sorted al), (~ sorted l), (~ Permutation al al), (~ Permutation al l), (~ Permutation l al), (~ Permutation l l), (~ In n1 al)
(~ In n1 l), (~ In n0 al), (~ In n0 l), (~ In n al), (~ In n l), (~ n1 < n1), (~ n1 < n0), (~ n1 < n), (~ n0 < n1), (~ n0 < n0)
(~ n0 < n), (~ n < n1), (~ n < n0), (~ n < n), (~ n1 <= n1), (~ n1 <= n0), (~ n1 <= n), (~ n0 <= n1), (~ n0 <= n0), (~ n0 <= n)
(~ n <= n1), (~ n <= n0), (~ n <= n), (n1 <> n1), (n1 <> n0), (n1 <> n), (n0 <> n1), (n0 <> n0), (n0 <> n), (n <> n1)
(n <> n0), (n <> n), (al <> al), (al <> l), (l <> al), (l <> l), (None = Some al), (None = Some l), (n1 :: al = al), (n1 :: al = l)
(n1 :: al = selection_sort al), (n1 :: al = selection_sort l), (n1 :: al = selsort al n1), (n1 :: al = selsort al n0), (n1 :: al = selsort al n), (n1 :: al = selsort l n1), (n1 :: al = selsort l n0), (n1 :: al = selsort l n), (n1 :: al = al ++ al), (n1 :: al = al ++ l)
(n1 :: al = l ++ al), (n1 :: al = l ++ l), (n1 :: al = []), (n1 :: l = al), (n1 :: l = l), (n1 :: l = selection_sort al), (n1 :: l = selection_sort l), (n1 :: l = selsort al n1), (n1 :: l = selsort al n0), (n1 :: l = selsort al n)
(n1 :: l = selsort l n1), (n1 :: l = selsort l n0), (n1 :: l = selsort l n), (n1 :: l = al ++ al), (n1 :: l = al ++ l), (n1 :: l = l ++ al), (n1 :: l = l ++ l), (n1 :: l = []), (n0 :: al = al), (n0 :: al = l)
(n0 :: al = selection_sort al), (n0 :: al = selection_sort l), (n0 :: al = selsort al n1), (n0 :: al = selsort al n0), (n0 :: al = selsort al n), (n0 :: al = selsort l n1), (n0 :: al = selsort l n0), (n0 :: al = selsort l n), (n0 :: al = al ++ al), (n0 :: al = al ++ l)
(n0 :: al = l ++ al), (n0 :: al = l ++ l), (n0 :: al = []), (n0 :: l = al), (n0 :: l = l), (n0 :: l = selection_sort al), (n0 :: l = selection_sort l), (n0 :: l = selsort al n1), (n0 :: l = selsort al n0), (n0 :: l = selsort al n)
(n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l n), (n0 :: l = al ++ al), (n0 :: l = al ++ l), (n0 :: l = l ++ al), (n0 :: l = l ++ l), (n0 :: l = []), (n :: al = al), (n :: al = l)
(n :: al = selection_sort al), (n :: al = selection_sort l), (n :: al = selsort al n1), (n :: al = selsort al n0), (n :: al = selsort al n), (n :: al = selsort l n1), (n :: al = selsort l n0), (n :: al = selsort l n), (n :: al = al ++ al), (n :: al = al ++ l)
(n :: al = l ++ al), (n :: al = l ++ l), (n :: al = []), (n :: l = al), (n :: l = l), (n :: l = selection_sort al), (n :: l = selection_sort l), (n :: l = selsort al n1), (n :: l = selsort al n0), (n :: l = selsort al n)
(n :: l = selsort l n1), (n :: l = selsort l n0), (n :: l = selsort l n), (n :: l = al ++ al), (n :: l = al ++ l), (n :: l = l ++ al), (n :: l = l ++ l), (n :: l = []), (selection_sort al = al), (selection_sort al = l)
(selection_sort al = al ++ al), (selection_sort al = al ++ l), (selection_sort al = l ++ al), (selection_sort al = l ++ l), (selection_sort l = al), (selection_sort l = l), (selection_sort l = al ++ al), (selection_sort l = al ++ l), (selection_sort l = l ++ al), (selection_sort l = l ++ l)
(selsort al n1 = al), (selsort al n1 = l), (selsort al n1 = selection_sort al), (selsort al n1 = selection_sort l), (selsort al n1 = al ++ al), (selsort al n1 = al ++ l), (selsort al n1 = l ++ al), (selsort al n1 = l ++ l), (selsort al n0 = al), (selsort al n0 = l)
(selsort al n0 = selection_sort al), (selsort al n0 = selection_sort l), (selsort al n0 = al ++ al), (selsort al n0 = al ++ l), (selsort al n0 = l ++ al), (selsort al n0 = l ++ l), (selsort al n = al), (selsort al n = l), (selsort al n = selection_sort al), (selsort al n = selection_sort l)
(selsort al n = al ++ al), (selsort al n = al ++ l), (selsort al n = l ++ al), (selsort al n = l ++ l), (selsort l n1 = al), (selsort l n1 = l), (selsort l n1 = selection_sort al), (selsort l n1 = selection_sort l), (selsort l n1 = al ++ al), (selsort l n1 = al ++ l)
(selsort l n1 = l ++ al), (selsort l n1 = l ++ l), (selsort l n0 = al), (selsort l n0 = l), (selsort l n0 = selection_sort al), (selsort l n0 = selection_sort l), (selsort l n0 = al ++ al), (selsort l n0 = al ++ l), (selsort l n0 = l ++ al), (selsort l n0 = l ++ l)
(selsort l n = al), (selsort l n = l), (selsort l n = selection_sort al), (selsort l n = selection_sort l), (selsort l n = al ++ al), (selsort l n = al ++ l), (selsort l n = l ++ al), (selsort l n = l ++ l), (al ++ al = al), (al ++ al = l)
(al ++ l = al), (al ++ l = l), (l ++ al = al), (l ++ al = l), (l ++ l = al), (l ++ l = l), ([] = al), ([] = l), ([] = selection_sort al), ([] = selection_sort l)
([] = selsort al n1), ([] = selsort al n0), ([] = selsort al n), ([] = selsort l n1), ([] = selsort l n0), ([] = selsort l n), ([] = al ++ al), ([] = al ++ l), ([] = l ++ al), ([] = l ++ l)
(None = Some n1), (None = Some n0), (None = Some n), ((n1, al) = select n1 al), ((n1, al) = select n1 l), ((n1, al) = select n0 al), ((n1, al) = select n0 l), ((n1, al) = select n al), ((n1, al) = select n l), ((n1, l) = select n1 al)
((n1, l) = select n1 l), ((n1, l) = select n0 al), ((n1, l) = select n0 l), ((n1, l) = select n al), ((n1, l) = select n l), ((n0, al) = select n1 al), ((n0, al) = select n1 l), ((n0, al) = select n0 al), ((n0, al) = select n0 l), ((n0, al) = select n al)
((n0, al) = select n l), ((n0, l) = select n1 al), ((n0, l) = select n1 l), ((n0, l) = select n0 al), ((n0, l) = select n0 l), ((n0, l) = select n al), ((n0, l) = select n l), ((n, al) = select n1 al), ((n, al) = select n1 l), ((n, al) = select n0 al)
((n, al) = select n0 l), ((n, al) = select n al), ((n, al) = select n l), ((n, l) = select n1 al), ((n, l) = select n1 l), ((n, l) = select n0 al), ((n, l) = select n0 l), ((n, l) = select n al), ((n, l) = select n l), (length al = n1)
(length al = n0), (length al = n), (length l = n1), (length l = n0), (length l = n)

Label: 2 (2)
(n1 <=* l), (n1 <=* al), (n0 <=* l), (n0 <=* al), (n <=* l), (n <=* al), (gv0 <=* l), (gv0 <=* al), (sorted l), (sorted al)
(Permutation l l), (Permutation l al), (Permutation al l), (Permutation al al), (In n1 l), (In n1 al), (In n0 l), (In n0 al), (In n l), (In n al)
(In gv0 l), (In gv0 al), (n1 < n1), (n1 < n0), (n1 < n), (n1 < gv0), (n0 < n1), (n0 < n0), (n0 < n), (n0 < gv0)
(n < n1), (n < n0), (n < n), (n < gv0), (gv0 < n1), (gv0 < n0), (gv0 < n), (gv0 < gv0), (n1 <= n1), (n1 <= n0)
(n1 <= n), (n1 <= gv0), (n0 <= n1), (n0 <= n0), (n0 <= n), (n0 <= gv0), (n <= n1), (n <= n0), (n <= n), (n <= gv0)
(gv0 <= n1), (gv0 <= n0), (gv0 <= n), (gv0 <= gv0), (l = l), (l = al), (al = l), (al = al), (n1 = n1), (n1 = n0)
(n1 = n), (n1 = gv0), (n0 = n1), (n0 = n0), (n0 = n), (n0 = gv0), (n = n1), (n = n0), (n = n), (n = gv0)
(gv0 = n1), (gv0 = n0), (gv0 = n), (gv0 = gv0), (n1 <=* n1 :: l), (n1 <=* n1 :: al), (n1 <=* n0 :: l), (n1 <=* n0 :: al), (n1 <=* n :: l), (n1 <=* n :: al)
(n1 <=* gv0 :: l), (n1 <=* gv0 :: al), (n1 <=* selection_sort l), (n1 <=* selection_sort al), (n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* selsort l n), (n1 <=* selsort l gv0), (n1 <=* selsort al n1), (n1 <=* selsort al n0)
(n1 <=* selsort al n), (n1 <=* selsort al gv0), (n1 <=* l ++ l), (n1 <=* l ++ al), (n1 <=* al ++ l), (n1 <=* al ++ al), (n1 <=* []), (n0 <=* n1 :: l), (n0 <=* n1 :: al), (n0 <=* n0 :: l)
(n0 <=* n0 :: al), (n0 <=* n :: l), (n0 <=* n :: al), (n0 <=* gv0 :: l), (n0 <=* gv0 :: al), (n0 <=* selection_sort l), (n0 <=* selection_sort al), (n0 <=* selsort l n1), (n0 <=* selsort l n0), (n0 <=* selsort l n)
(n0 <=* selsort l gv0), (n0 <=* selsort al n1), (n0 <=* selsort al n0), (n0 <=* selsort al n), (n0 <=* selsort al gv0), (n0 <=* l ++ l), (n0 <=* l ++ al), (n0 <=* al ++ l), (n0 <=* al ++ al), (n0 <=* [])
(n <=* n1 :: l), (n <=* n1 :: al), (n <=* n0 :: l), (n <=* n0 :: al), (n <=* n :: l), (n <=* n :: al), (n <=* gv0 :: l), (n <=* gv0 :: al), (n <=* selection_sort l), (n <=* selection_sort al)
(n <=* selsort l n1), (n <=* selsort l n0), (n <=* selsort l n), (n <=* selsort l gv0), (n <=* selsort al n1), (n <=* selsort al n0), (n <=* selsort al n), (n <=* selsort al gv0), (n <=* l ++ l), (n <=* l ++ al)
(n <=* al ++ l), (n <=* al ++ al), (n <=* []), (gv0 <=* n1 :: l), (gv0 <=* n1 :: al), (gv0 <=* n0 :: l), (gv0 <=* n0 :: al), (gv0 <=* n :: l), (gv0 <=* n :: al), (gv0 <=* gv0 :: l)
(gv0 <=* gv0 :: al), (gv0 <=* selection_sort l), (gv0 <=* selection_sort al), (gv0 <=* selsort l n1), (gv0 <=* selsort l n0), (gv0 <=* selsort l n), (gv0 <=* selsort l gv0), (gv0 <=* selsort al n1), (gv0 <=* selsort al n0), (gv0 <=* selsort al n)
(gv0 <=* selsort al gv0), (gv0 <=* l ++ l), (gv0 <=* l ++ al), (gv0 <=* al ++ l), (gv0 <=* al ++ al), (gv0 <=* []), (length l <=* l), (length l <=* al), (length l <=* n1 :: l), (length l <=* n1 :: al)
(length l <=* n0 :: l), (length l <=* n0 :: al), (length l <=* n :: l), (length l <=* n :: al), (length l <=* gv0 :: l), (length l <=* gv0 :: al), (length l <=* selection_sort l), (length l <=* selection_sort al), (length l <=* selsort l n1), (length l <=* selsort l n0)
(length l <=* selsort l n), (length l <=* selsort l gv0), (length l <=* selsort al n1), (length l <=* selsort al n0), (length l <=* selsort al n), (length l <=* selsort al gv0), (length l <=* l ++ l), (length l <=* l ++ al), (length l <=* al ++ l), (length l <=* al ++ al)
(length l <=* []), (length al <=* l), (length al <=* al), (length al <=* n1 :: l), (length al <=* n1 :: al), (length al <=* n0 :: l), (length al <=* n0 :: al), (length al <=* n :: l), (length al <=* n :: al), (length al <=* gv0 :: l)
(length al <=* gv0 :: al), (length al <=* selection_sort l), (length al <=* selection_sort al), (length al <=* selsort l n1), (length al <=* selsort l n0), (length al <=* selsort l n), (length al <=* selsort l gv0), (length al <=* selsort al n1), (length al <=* selsort al n0), (length al <=* selsort al n)
(length al <=* selsort al gv0), (length al <=* l ++ l), (length al <=* l ++ al), (length al <=* al ++ l), (length al <=* al ++ al), (length al <=* []), (sorted (n1 :: l)), (sorted (n1 :: al)), (sorted (n0 :: l)), (sorted (n0 :: al))
(sorted (n :: l)), (sorted (n :: al)), (sorted (gv0 :: l)), (sorted (gv0 :: al)), (sorted (selection_sort l)), (sorted (selection_sort al)), (sorted (selsort l n1)), (sorted (selsort l n0)), (sorted (selsort l n)), (sorted (selsort l gv0))
(sorted (selsort al n1)), (sorted (selsort al n0)), (sorted (selsort al n)), (sorted (selsort al gv0)), (sorted (l ++ l)), (sorted (l ++ al)), (sorted (al ++ l)), (sorted (al ++ al)), (sorted []), (Permutation l (n1 :: l))
(Permutation l (n1 :: al)), (Permutation l (n0 :: l)), (Permutation l (n0 :: al)), (Permutation l (n :: l)), (Permutation l (n :: al)), (Permutation l (gv0 :: l)), (Permutation l (gv0 :: al)), (Permutation l (selection_sort l)), (Permutation l (selection_sort al)), (Permutation l (selsort l n1))
(Permutation l (selsort l n0)), (Permutation l (selsort l n)), (Permutation l (selsort l gv0)), (Permutation l (selsort al n1)), (Permutation l (selsort al n0)), (Permutation l (selsort al n)), (Permutation l (selsort al gv0)), (Permutation l (l ++ l)), (Permutation l (l ++ al)), (Permutation l (al ++ l))
(Permutation l (al ++ al)), (Permutation l []), (Permutation al (n1 :: l)), (Permutation al (n1 :: al)), (Permutation al (n0 :: l)), (Permutation al (n0 :: al)), (Permutation al (n :: l)), (Permutation al (n :: al)), (Permutation al (gv0 :: l)), (Permutation al (gv0 :: al))
(Permutation al (selection_sort l)), (Permutation al (selection_sort al)), (Permutation al (selsort l n1)), (Permutation al (selsort l n0)), (Permutation al (selsort l n)), (Permutation al (selsort l gv0)), (Permutation al (selsort al n1)), (Permutation al (selsort al n0)), (Permutation al (selsort al n)), (Permutation al (selsort al gv0))
(Permutation al (l ++ l)), (Permutation al (l ++ al)), (Permutation al (al ++ l)), (Permutation al (al ++ al)), (Permutation al []), (Permutation (n1 :: l) l), (Permutation (n1 :: l) al), (Permutation (n1 :: l) (n1 :: al)), (Permutation (n1 :: l) (n0 :: l)), (Permutation (n1 :: l) (n0 :: al))
(Permutation (n1 :: l) (n :: l)), (Permutation (n1 :: l) (n :: al)), (Permutation (n1 :: l) (gv0 :: l)), (Permutation (n1 :: l) (gv0 :: al)), (Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selection_sort al)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (selsort l n)), (Permutation (n1 :: l) (selsort l gv0))
(Permutation (n1 :: l) (selsort al n1)), (Permutation (n1 :: l) (selsort al n0)), (Permutation (n1 :: l) (selsort al n)), (Permutation (n1 :: l) (selsort al gv0)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) (l ++ al)), (Permutation (n1 :: l) (al ++ l)), (Permutation (n1 :: l) (al ++ al)), (Permutation (n1 :: l) []), (Permutation (n1 :: al) l)
(Permutation (n1 :: al) al), (Permutation (n1 :: al) (n1 :: l)), (Permutation (n1 :: al) (n0 :: l)), (Permutation (n1 :: al) (n0 :: al)), (Permutation (n1 :: al) (n :: l)), (Permutation (n1 :: al) (n :: al)), (Permutation (n1 :: al) (gv0 :: l)), (Permutation (n1 :: al) (gv0 :: al)), (Permutation (n1 :: al) (selection_sort l)), (Permutation (n1 :: al) (selection_sort al))
(Permutation (n1 :: al) (selsort l n1)), (Permutation (n1 :: al) (selsort l n0)), (Permutation (n1 :: al) (selsort l n)), (Permutation (n1 :: al) (selsort l gv0)), (Permutation (n1 :: al) (selsort al n1)), (Permutation (n1 :: al) (selsort al n0)), (Permutation (n1 :: al) (selsort al n)), (Permutation (n1 :: al) (selsort al gv0)), (Permutation (n1 :: al) (l ++ l)), (Permutation (n1 :: al) (l ++ al))
(Permutation (n1 :: al) (al ++ l)), (Permutation (n1 :: al) (al ++ al)), (Permutation (n1 :: al) []), (Permutation (n0 :: l) l), (Permutation (n0 :: l) al), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n1 :: al)), (Permutation (n0 :: l) (n0 :: al)), (Permutation (n0 :: l) (n :: l)), (Permutation (n0 :: l) (n :: al))
(Permutation (n0 :: l) (gv0 :: l)), (Permutation (n0 :: l) (gv0 :: al)), (Permutation (n0 :: l) (selection_sort l)), (Permutation (n0 :: l) (selection_sort al)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (selsort l n)), (Permutation (n0 :: l) (selsort l gv0)), (Permutation (n0 :: l) (selsort al n1)), (Permutation (n0 :: l) (selsort al n0))
(Permutation (n0 :: l) (selsort al n)), (Permutation (n0 :: l) (selsort al gv0)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) (l ++ al)), (Permutation (n0 :: l) (al ++ l)), (Permutation (n0 :: l) (al ++ al)), (Permutation (n0 :: l) []), (Permutation (n0 :: al) l), (Permutation (n0 :: al) al), (Permutation (n0 :: al) (n1 :: l))
(Permutation (n0 :: al) (n1 :: al)), (Permutation (n0 :: al) (n0 :: l)), (Permutation (n0 :: al) (n :: l)), (Permutation (n0 :: al) (n :: al)), (Permutation (n0 :: al) (gv0 :: l)), (Permutation (n0 :: al) (gv0 :: al)), (Permutation (n0 :: al) (selection_sort l)), (Permutation (n0 :: al) (selection_sort al)), (Permutation (n0 :: al) (selsort l n1)), (Permutation (n0 :: al) (selsort l n0))
(Permutation (n0 :: al) (selsort l n)), (Permutation (n0 :: al) (selsort l gv0)), (Permutation (n0 :: al) (selsort al n1)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (selsort al n)), (Permutation (n0 :: al) (selsort al gv0)), (Permutation (n0 :: al) (l ++ l)), (Permutation (n0 :: al) (l ++ al)), (Permutation (n0 :: al) (al ++ l)), (Permutation (n0 :: al) (al ++ al))
(Permutation (n0 :: al) []), (Permutation (n :: l) l), (Permutation (n :: l) al), (Permutation (n :: l) (n1 :: l)), (Permutation (n :: l) (n1 :: al)), (Permutation (n :: l) (n0 :: l)), (Permutation (n :: l) (n0 :: al)), (Permutation (n :: l) (n :: al)), (Permutation (n :: l) (gv0 :: l)), (Permutation (n :: l) (gv0 :: al))
(Permutation (n :: l) (selection_sort l)), (Permutation (n :: l) (selection_sort al)), (Permutation (n :: l) (selsort l n1)), (Permutation (n :: l) (selsort l n0)), (Permutation (n :: l) (selsort l n)), (Permutation (n :: l) (selsort l gv0)), (Permutation (n :: l) (selsort al n1)), (Permutation (n :: l) (selsort al n0)), (Permutation (n :: l) (selsort al n)), (Permutation (n :: l) (selsort al gv0))
(Permutation (n :: l) (l ++ l)), (Permutation (n :: l) (l ++ al)), (Permutation (n :: l) (al ++ l)), (Permutation (n :: l) (al ++ al)), (Permutation (n :: l) []), (Permutation (n :: al) l), (Permutation (n :: al) al), (Permutation (n :: al) (n1 :: l)), (Permutation (n :: al) (n1 :: al)), (Permutation (n :: al) (n0 :: l))
(Permutation (n :: al) (n0 :: al)), (Permutation (n :: al) (n :: l)), (Permutation (n :: al) (gv0 :: l)), (Permutation (n :: al) (gv0 :: al)), (Permutation (n :: al) (selection_sort l)), (Permutation (n :: al) (selection_sort al)), (Permutation (n :: al) (selsort l n1)), (Permutation (n :: al) (selsort l n0)), (Permutation (n :: al) (selsort l n)), (Permutation (n :: al) (selsort l gv0))
(Permutation (n :: al) (selsort al n1)), (Permutation (n :: al) (selsort al n0)), (Permutation (n :: al) (selsort al n)), (Permutation (n :: al) (selsort al gv0)), (Permutation (n :: al) (l ++ l)), (Permutation (n :: al) (l ++ al)), (Permutation (n :: al) (al ++ l)), (Permutation (n :: al) (al ++ al)), (Permutation (n :: al) []), (Permutation (gv0 :: l) l)
(Permutation (gv0 :: l) al), (Permutation (gv0 :: l) (n1 :: l)), (Permutation (gv0 :: l) (n1 :: al)), (Permutation (gv0 :: l) (n0 :: l)), (Permutation (gv0 :: l) (n0 :: al)), (Permutation (gv0 :: l) (n :: l)), (Permutation (gv0 :: l) (n :: al)), (Permutation (gv0 :: l) (gv0 :: al)), (Permutation (gv0 :: l) (selection_sort l)), (Permutation (gv0 :: l) (selection_sort al))
(Permutation (gv0 :: l) (selsort l n1)), (Permutation (gv0 :: l) (selsort l n0)), (Permutation (gv0 :: l) (selsort l n)), (Permutation (gv0 :: l) (selsort l gv0)), (Permutation (gv0 :: l) (selsort al n1)), (Permutation (gv0 :: l) (selsort al n0)), (Permutation (gv0 :: l) (selsort al n)), (Permutation (gv0 :: l) (selsort al gv0)), (Permutation (gv0 :: l) (l ++ l)), (Permutation (gv0 :: l) (l ++ al))
(Permutation (gv0 :: l) (al ++ l)), (Permutation (gv0 :: l) (al ++ al)), (Permutation (gv0 :: l) []), (Permutation (gv0 :: al) l), (Permutation (gv0 :: al) al), (Permutation (gv0 :: al) (n1 :: l)), (Permutation (gv0 :: al) (n1 :: al)), (Permutation (gv0 :: al) (n0 :: l)), (Permutation (gv0 :: al) (n0 :: al)), (Permutation (gv0 :: al) (n :: l))
(Permutation (gv0 :: al) (n :: al)), (Permutation (gv0 :: al) (gv0 :: l)), (Permutation (gv0 :: al) (selection_sort l)), (Permutation (gv0 :: al) (selection_sort al)), (Permutation (gv0 :: al) (selsort l n1)), (Permutation (gv0 :: al) (selsort l n0)), (Permutation (gv0 :: al) (selsort l n)), (Permutation (gv0 :: al) (selsort l gv0)), (Permutation (gv0 :: al) (selsort al n1)), (Permutation (gv0 :: al) (selsort al n0))
(Permutation (gv0 :: al) (selsort al n)), (Permutation (gv0 :: al) (selsort al gv0)), (Permutation (gv0 :: al) (l ++ l)), (Permutation (gv0 :: al) (l ++ al)), (Permutation (gv0 :: al) (al ++ l)), (Permutation (gv0 :: al) (al ++ al)), (Permutation (gv0 :: al) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) al), (Permutation (selection_sort l) (n1 :: l))
(Permutation (selection_sort l) (n1 :: al)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (n0 :: al)), (Permutation (selection_sort l) (n :: l)), (Permutation (selection_sort l) (n :: al)), (Permutation (selection_sort l) (gv0 :: l)), (Permutation (selection_sort l) (gv0 :: al)), (Permutation (selection_sort l) (selection_sort al)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0))
(Permutation (selection_sort l) (selsort l n)), (Permutation (selection_sort l) (selsort l gv0)), (Permutation (selection_sort l) (selsort al n1)), (Permutation (selection_sort l) (selsort al n0)), (Permutation (selection_sort l) (selsort al n)), (Permutation (selection_sort l) (selsort al gv0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ al)), (Permutation (selection_sort l) (al ++ l)), (Permutation (selection_sort l) (al ++ al))
(Permutation (selection_sort l) []), (Permutation (selection_sort al) l), (Permutation (selection_sort al) al), (Permutation (selection_sort al) (n1 :: l)), (Permutation (selection_sort al) (n1 :: al)), (Permutation (selection_sort al) (n0 :: l)), (Permutation (selection_sort al) (n0 :: al)), (Permutation (selection_sort al) (n :: l)), (Permutation (selection_sort al) (n :: al)), (Permutation (selection_sort al) (gv0 :: l))
(Permutation (selection_sort al) (gv0 :: al)), (Permutation (selection_sort al) (selection_sort l)), (Permutation (selection_sort al) (selsort l n1)), (Permutation (selection_sort al) (selsort l n0)), (Permutation (selection_sort al) (selsort l n)), (Permutation (selection_sort al) (selsort l gv0)), (Permutation (selection_sort al) (selsort al n1)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (selsort al n)), (Permutation (selection_sort al) (selsort al gv0))
(Permutation (selection_sort al) (l ++ l)), (Permutation (selection_sort al) (l ++ al)), (Permutation (selection_sort al) (al ++ l)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) []), (Permutation (selsort l n1) l), (Permutation (selsort l n1) al), (Permutation (selsort l n1) (n1 :: l)), (Permutation (selsort l n1) (n1 :: al)), (Permutation (selsort l n1) (n0 :: l))
(Permutation (selsort l n1) (n0 :: al)), (Permutation (selsort l n1) (n :: l)), (Permutation (selsort l n1) (n :: al)), (Permutation (selsort l n1) (gv0 :: l)), (Permutation (selsort l n1) (gv0 :: al)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selection_sort al)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (selsort l n)), (Permutation (selsort l n1) (selsort l gv0))
(Permutation (selsort l n1) (selsort al n1)), (Permutation (selsort l n1) (selsort al n0)), (Permutation (selsort l n1) (selsort al n)), (Permutation (selsort l n1) (selsort al gv0)), (Permutation (selsort l n1) (l ++ l)), (Permutation (selsort l n1) (l ++ al)), (Permutation (selsort l n1) (al ++ l)), (Permutation (selsort l n1) (al ++ al)), (Permutation (selsort l n1) []), (Permutation (selsort l n0) l)
(Permutation (selsort l n0) al), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n1 :: al)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (n0 :: al)), (Permutation (selsort l n0) (n :: l)), (Permutation (selsort l n0) (n :: al)), (Permutation (selsort l n0) (gv0 :: l)), (Permutation (selsort l n0) (gv0 :: al)), (Permutation (selsort l n0) (selection_sort l))
(Permutation (selsort l n0) (selection_sort al)), (Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (selsort l n)), (Permutation (selsort l n0) (selsort l gv0)), (Permutation (selsort l n0) (selsort al n1)), (Permutation (selsort l n0) (selsort al n0)), (Permutation (selsort l n0) (selsort al n)), (Permutation (selsort l n0) (selsort al gv0)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) (l ++ al))
(Permutation (selsort l n0) (al ++ l)), (Permutation (selsort l n0) (al ++ al)), (Permutation (selsort l n0) []), (Permutation (selsort l n) l), (Permutation (selsort l n) al), (Permutation (selsort l n) (n1 :: l)), (Permutation (selsort l n) (n1 :: al)), (Permutation (selsort l n) (n0 :: l)), (Permutation (selsort l n) (n0 :: al)), (Permutation (selsort l n) (n :: l))
(Permutation (selsort l n) (n :: al)), (Permutation (selsort l n) (gv0 :: l)), (Permutation (selsort l n) (gv0 :: al)), (Permutation (selsort l n) (selection_sort l)), (Permutation (selsort l n) (selection_sort al)), (Permutation (selsort l n) (selsort l n1)), (Permutation (selsort l n) (selsort l n0)), (Permutation (selsort l n) (selsort l gv0)), (Permutation (selsort l n) (selsort al n1)), (Permutation (selsort l n) (selsort al n0))
(Permutation (selsort l n) (selsort al n)), (Permutation (selsort l n) (selsort al gv0)), (Permutation (selsort l n) (l ++ l)), (Permutation (selsort l n) (l ++ al)), (Permutation (selsort l n) (al ++ l)), (Permutation (selsort l n) (al ++ al)), (Permutation (selsort l n) []), (Permutation (selsort l gv0) l), (Permutation (selsort l gv0) al), (Permutation (selsort l gv0) (n1 :: l))
(Permutation (selsort l gv0) (n1 :: al)), (Permutation (selsort l gv0) (n0 :: l)), (Permutation (selsort l gv0) (n0 :: al)), (Permutation (selsort l gv0) (n :: l)), (Permutation (selsort l gv0) (n :: al)), (Permutation (selsort l gv0) (gv0 :: l)), (Permutation (selsort l gv0) (gv0 :: al)), (Permutation (selsort l gv0) (selection_sort l)), (Permutation (selsort l gv0) (selection_sort al)), (Permutation (selsort l gv0) (selsort l n1))
(Permutation (selsort l gv0) (selsort l n0)), (Permutation (selsort l gv0) (selsort l n)), (Permutation (selsort l gv0) (selsort al n1)), (Permutation (selsort l gv0) (selsort al n0)), (Permutation (selsort l gv0) (selsort al n)), (Permutation (selsort l gv0) (selsort al gv0)), (Permutation (selsort l gv0) (l ++ l)), (Permutation (selsort l gv0) (l ++ al)), (Permutation (selsort l gv0) (al ++ l)), (Permutation (selsort l gv0) (al ++ al))
(Permutation (selsort l gv0) []), (Permutation (selsort al n1) l), (Permutation (selsort al n1) al), (Permutation (selsort al n1) (n1 :: l)), (Permutation (selsort al n1) (n1 :: al)), (Permutation (selsort al n1) (n0 :: l)), (Permutation (selsort al n1) (n0 :: al)), (Permutation (selsort al n1) (n :: l)), (Permutation (selsort al n1) (n :: al)), (Permutation (selsort al n1) (gv0 :: l))
(Permutation (selsort al n1) (gv0 :: al)), (Permutation (selsort al n1) (selection_sort l)), (Permutation (selsort al n1) (selection_sort al)), (Permutation (selsort al n1) (selsort l n1)), (Permutation (selsort al n1) (selsort l n0)), (Permutation (selsort al n1) (selsort l n)), (Permutation (selsort al n1) (selsort l gv0)), (Permutation (selsort al n1) (selsort al n0)), (Permutation (selsort al n1) (selsort al n)), (Permutation (selsort al n1) (selsort al gv0))
(Permutation (selsort al n1) (l ++ l)), (Permutation (selsort al n1) (l ++ al)), (Permutation (selsort al n1) (al ++ l)), (Permutation (selsort al n1) (al ++ al)), (Permutation (selsort al n1) []), (Permutation (selsort al n0) l), (Permutation (selsort al n0) al), (Permutation (selsort al n0) (n1 :: l)), (Permutation (selsort al n0) (n1 :: al)), (Permutation (selsort al n0) (n0 :: l))
(Permutation (selsort al n0) (n0 :: al)), (Permutation (selsort al n0) (n :: l)), (Permutation (selsort al n0) (n :: al)), (Permutation (selsort al n0) (gv0 :: l)), (Permutation (selsort al n0) (gv0 :: al)), (Permutation (selsort al n0) (selection_sort l)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selsort l n1)), (Permutation (selsort al n0) (selsort l n0)), (Permutation (selsort al n0) (selsort l n))
(Permutation (selsort al n0) (selsort l gv0)), (Permutation (selsort al n0) (selsort al n1)), (Permutation (selsort al n0) (selsort al n)), (Permutation (selsort al n0) (selsort al gv0)), (Permutation (selsort al n0) (l ++ l)), (Permutation (selsort al n0) (l ++ al)), (Permutation (selsort al n0) (al ++ l)), (Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) []), (Permutation (selsort al n) l)
(Permutation (selsort al n) al), (Permutation (selsort al n) (n1 :: l)), (Permutation (selsort al n) (n1 :: al)), (Permutation (selsort al n) (n0 :: l)), (Permutation (selsort al n) (n0 :: al)), (Permutation (selsort al n) (n :: l)), (Permutation (selsort al n) (n :: al)), (Permutation (selsort al n) (gv0 :: l)), (Permutation (selsort al n) (gv0 :: al)), (Permutation (selsort al n) (selection_sort l))
(Permutation (selsort al n) (selection_sort al)), (Permutation (selsort al n) (selsort l n1)), (Permutation (selsort al n) (selsort l n0)), (Permutation (selsort al n) (selsort l n)), (Permutation (selsort al n) (selsort l gv0)), (Permutation (selsort al n) (selsort al n1)), (Permutation (selsort al n) (selsort al n0)), (Permutation (selsort al n) (selsort al gv0)), (Permutation (selsort al n) (l ++ l)), (Permutation (selsort al n) (l ++ al))
(Permutation (selsort al n) (al ++ l)), (Permutation (selsort al n) (al ++ al)), (Permutation (selsort al n) []), (Permutation (selsort al gv0) l), (Permutation (selsort al gv0) al), (Permutation (selsort al gv0) (n1 :: l)), (Permutation (selsort al gv0) (n1 :: al)), (Permutation (selsort al gv0) (n0 :: l)), (Permutation (selsort al gv0) (n0 :: al)), (Permutation (selsort al gv0) (n :: l))
(Permutation (selsort al gv0) (n :: al)), (Permutation (selsort al gv0) (gv0 :: l)), (Permutation (selsort al gv0) (gv0 :: al)), (Permutation (selsort al gv0) (selection_sort l)), (Permutation (selsort al gv0) (selection_sort al)), (Permutation (selsort al gv0) (selsort l n1)), (Permutation (selsort al gv0) (selsort l n0)), (Permutation (selsort al gv0) (selsort l n)), (Permutation (selsort al gv0) (selsort l gv0)), (Permutation (selsort al gv0) (selsort al n1))
(Permutation (selsort al gv0) (selsort al n0)), (Permutation (selsort al gv0) (selsort al n)), (Permutation (selsort al gv0) (l ++ l)), (Permutation (selsort al gv0) (l ++ al)), (Permutation (selsort al gv0) (al ++ l)), (Permutation (selsort al gv0) (al ++ al)), (Permutation (selsort al gv0) []), (Permutation (l ++ l) l), (Permutation (l ++ l) al), (Permutation (l ++ l) (n1 :: l))
(Permutation (l ++ l) (n1 :: al)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (n0 :: al)), (Permutation (l ++ l) (n :: l)), (Permutation (l ++ l) (n :: al)), (Permutation (l ++ l) (gv0 :: l)), (Permutation (l ++ l) (gv0 :: al)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort al)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (selsort l n0)), (Permutation (l ++ l) (selsort l n)), (Permutation (l ++ l) (selsort l gv0)), (Permutation (l ++ l) (selsort al n1)), (Permutation (l ++ l) (selsort al n0)), (Permutation (l ++ l) (selsort al n)), (Permutation (l ++ l) (selsort al gv0)), (Permutation (l ++ l) (l ++ al)), (Permutation (l ++ l) (al ++ l)), (Permutation (l ++ l) (al ++ al))
(Permutation (l ++ l) []), (Permutation (l ++ al) l), (Permutation (l ++ al) al), (Permutation (l ++ al) (n1 :: l)), (Permutation (l ++ al) (n1 :: al)), (Permutation (l ++ al) (n0 :: l)), (Permutation (l ++ al) (n0 :: al)), (Permutation (l ++ al) (n :: l)), (Permutation (l ++ al) (n :: al)), (Permutation (l ++ al) (gv0 :: l))
(Permutation (l ++ al) (gv0 :: al)), (Permutation (l ++ al) (selection_sort l)), (Permutation (l ++ al) (selection_sort al)), (Permutation (l ++ al) (selsort l n1)), (Permutation (l ++ al) (selsort l n0)), (Permutation (l ++ al) (selsort l n)), (Permutation (l ++ al) (selsort l gv0)), (Permutation (l ++ al) (selsort al n1)), (Permutation (l ++ al) (selsort al n0)), (Permutation (l ++ al) (selsort al n))
(Permutation (l ++ al) (selsort al gv0)), (Permutation (l ++ al) (l ++ l)), (Permutation (l ++ al) (al ++ l)), (Permutation (l ++ al) (al ++ al)), (Permutation (l ++ al) []), (Permutation (al ++ l) l), (Permutation (al ++ l) al), (Permutation (al ++ l) (n1 :: l)), (Permutation (al ++ l) (n1 :: al)), (Permutation (al ++ l) (n0 :: l))
(Permutation (al ++ l) (n0 :: al)), (Permutation (al ++ l) (n :: l)), (Permutation (al ++ l) (n :: al)), (Permutation (al ++ l) (gv0 :: l)), (Permutation (al ++ l) (gv0 :: al)), (Permutation (al ++ l) (selection_sort l)), (Permutation (al ++ l) (selection_sort al)), (Permutation (al ++ l) (selsort l n1)), (Permutation (al ++ l) (selsort l n0)), (Permutation (al ++ l) (selsort l n))
(Permutation (al ++ l) (selsort l gv0)), (Permutation (al ++ l) (selsort al n1)), (Permutation (al ++ l) (selsort al n0)), (Permutation (al ++ l) (selsort al n)), (Permutation (al ++ l) (selsort al gv0)), (Permutation (al ++ l) (l ++ l)), (Permutation (al ++ l) (l ++ al)), (Permutation (al ++ l) (al ++ al)), (Permutation (al ++ l) []), (Permutation (al ++ al) l)
(Permutation (al ++ al) al), (Permutation (al ++ al) (n1 :: l)), (Permutation (al ++ al) (n1 :: al)), (Permutation (al ++ al) (n0 :: l)), (Permutation (al ++ al) (n0 :: al)), (Permutation (al ++ al) (n :: l)), (Permutation (al ++ al) (n :: al)), (Permutation (al ++ al) (gv0 :: l)), (Permutation (al ++ al) (gv0 :: al)), (Permutation (al ++ al) (selection_sort l))
(Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selsort l n1)), (Permutation (al ++ al) (selsort l n0)), (Permutation (al ++ al) (selsort l n)), (Permutation (al ++ al) (selsort l gv0)), (Permutation (al ++ al) (selsort al n1)), (Permutation (al ++ al) (selsort al n0)), (Permutation (al ++ al) (selsort al n)), (Permutation (al ++ al) (selsort al gv0)), (Permutation (al ++ al) (l ++ l))
(Permutation (al ++ al) (l ++ al)), (Permutation (al ++ al) (al ++ l)), (Permutation (al ++ al) []), (Permutation [] l), (Permutation [] al), (Permutation [] (n1 :: l)), (Permutation [] (n1 :: al)), (Permutation [] (n0 :: l)), (Permutation [] (n0 :: al)), (Permutation [] (n :: l))
(Permutation [] (n :: al)), (Permutation [] (gv0 :: l)), (Permutation [] (gv0 :: al)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort al)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0)), (Permutation [] (selsort l n)), (Permutation [] (selsort l gv0)), (Permutation [] (selsort al n1))
(Permutation [] (selsort al n0)), (Permutation [] (selsort al n)), (Permutation [] (selsort al gv0)), (Permutation [] (l ++ l)), (Permutation [] (l ++ al)), (Permutation [] (al ++ l)), (Permutation [] (al ++ al)), (In n1 (n1 :: l)), (In n1 (n1 :: al)), (In n1 (n0 :: l))
(In n1 (n0 :: al)), (In n1 (n :: l)), (In n1 (n :: al)), (In n1 (gv0 :: l)), (In n1 (gv0 :: al)), (In n1 (selection_sort l)), (In n1 (selection_sort al)), (In n1 (selsort l n1)), (In n1 (selsort l n0)), (In n1 (selsort l n))
(In n1 (selsort l gv0)), (In n1 (selsort al n1)), (In n1 (selsort al n0)), (In n1 (selsort al n)), (In n1 (selsort al gv0)), (In n1 (l ++ l)), (In n1 (l ++ al)), (In n1 (al ++ l)), (In n1 (al ++ al)), (In n0 (n1 :: l))
(In n0 (n1 :: al)), (In n0 (n0 :: l)), (In n0 (n0 :: al)), (In n0 (n :: l)), (In n0 (n :: al)), (In n0 (gv0 :: l)), (In n0 (gv0 :: al)), (In n0 (selection_sort l)), (In n0 (selection_sort al)), (In n0 (selsort l n1))
(In n0 (selsort l n0)), (In n0 (selsort l n)), (In n0 (selsort l gv0)), (In n0 (selsort al n1)), (In n0 (selsort al n0)), (In n0 (selsort al n)), (In n0 (selsort al gv0)), (In n0 (l ++ l)), (In n0 (l ++ al)), (In n0 (al ++ l))
(In n0 (al ++ al)), (In n (n1 :: l)), (In n (n1 :: al)), (In n (n0 :: l)), (In n (n0 :: al)), (In n (n :: l)), (In n (n :: al)), (In n (gv0 :: l)), (In n (gv0 :: al)), (In n (selection_sort l))
(In n (selection_sort al)), (In n (selsort l n1)), (In n (selsort l n0)), (In n (selsort l n)), (In n (selsort l gv0)), (In n (selsort al n1)), (In n (selsort al n0)), (In n (selsort al n)), (In n (selsort al gv0)), (In n (l ++ l))
(In n (l ++ al)), (In n (al ++ l)), (In n (al ++ al)), (In gv0 (n1 :: l)), (In gv0 (n1 :: al)), (In gv0 (n0 :: l)), (In gv0 (n0 :: al)), (In gv0 (n :: l)), (In gv0 (n :: al)), (In gv0 (gv0 :: l))
(In gv0 (gv0 :: al)), (In gv0 (selection_sort l)), (In gv0 (selection_sort al)), (In gv0 (selsort l n1)), (In gv0 (selsort l n0)), (In gv0 (selsort l n)), (In gv0 (selsort l gv0)), (In gv0 (selsort al n1)), (In gv0 (selsort al n0)), (In gv0 (selsort al n))
(In gv0 (selsort al gv0)), (In gv0 (l ++ l)), (In gv0 (l ++ al)), (In gv0 (al ++ l)), (In gv0 (al ++ al)), (In (length l) l), (In (length l) al), (In (length l) (n1 :: l)), (In (length l) (n1 :: al)), (In (length l) (n0 :: l))
(In (length l) (n0 :: al)), (In (length l) (n :: l)), (In (length l) (n :: al)), (In (length l) (gv0 :: l)), (In (length l) (gv0 :: al)), (In (length l) (selection_sort l)), (In (length l) (selection_sort al)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (selsort l n))
(In (length l) (selsort l gv0)), (In (length l) (selsort al n1)), (In (length l) (selsort al n0)), (In (length l) (selsort al n)), (In (length l) (selsort al gv0)), (In (length l) (l ++ l)), (In (length l) (l ++ al)), (In (length l) (al ++ l)), (In (length l) (al ++ al)), (In (length al) l)
(In (length al) al), (In (length al) (n1 :: l)), (In (length al) (n1 :: al)), (In (length al) (n0 :: l)), (In (length al) (n0 :: al)), (In (length al) (n :: l)), (In (length al) (n :: al)), (In (length al) (gv0 :: l)), (In (length al) (gv0 :: al)), (In (length al) (selection_sort l))
(In (length al) (selection_sort al)), (In (length al) (selsort l n1)), (In (length al) (selsort l n0)), (In (length al) (selsort l n)), (In (length al) (selsort l gv0)), (In (length al) (selsort al n1)), (In (length al) (selsort al n0)), (In (length al) (selsort al n)), (In (length al) (selsort al gv0)), (In (length al) (l ++ l))
(In (length al) (l ++ al)), (In (length al) (al ++ l)), (In (length al) (al ++ al)), (n1 < length l), (n1 < length al), (n0 < length l), (n0 < length al), (n < length l), (n < length al), (gv0 < length l)
(gv0 < length al), (length l < n1), (length l < n0), (length l < n), (length l < gv0), (length l < length al), (length al < n1), (length al < n0), (length al < n), (length al < gv0)
(length al < length l), (n1 <= length l), (n1 <= length al), (n0 <= length l), (n0 <= length al), (n <= length l), (n <= length al), (gv0 <= length l), (gv0 <= length al), (length l <= n1)
(length l <= n0), (length l <= n), (length l <= gv0), (length l <= length al), (length al <= n1), (length al <= n0), (length al <= n), (length al <= gv0), (length al <= length l), (~ n1 <=* l)
(~ n1 <=* al), (~ n0 <=* l), (~ n0 <=* al), (~ n <=* l), (~ n <=* al), (~ gv0 <=* l), (~ gv0 <=* al), (~ sorted l), (~ sorted al), (~ Permutation l l)
(~ Permutation l al), (~ Permutation al l), (~ Permutation al al), (~ In n1 l), (~ In n1 al), (~ In n0 l), (~ In n0 al), (~ In n l), (~ In n al), (~ In gv0 l)
(~ In gv0 al), (~ n1 < n1), (~ n1 < n0), (~ n1 < n), (~ n1 < gv0), (~ n0 < n1), (~ n0 < n0), (~ n0 < n), (~ n0 < gv0), (~ n < n1)
(~ n < n0), (~ n < n), (~ n < gv0), (~ gv0 < n1), (~ gv0 < n0), (~ gv0 < n), (~ gv0 < gv0), (~ n1 <= n1), (~ n1 <= n0), (~ n1 <= n)
(~ n1 <= gv0), (~ n0 <= n1), (~ n0 <= n0), (~ n0 <= n), (~ n0 <= gv0), (~ n <= n1), (~ n <= n0), (~ n <= n), (~ n <= gv0), (~ gv0 <= n1)
(~ gv0 <= n0), (~ gv0 <= n), (~ gv0 <= gv0), (l <> l), (l <> al), (al <> l), (al <> al), (n1 <> n1), (n1 <> n0), (n1 <> n)
(n1 <> gv0), (n0 <> n1), (n0 <> n0), (n0 <> n), (n0 <> gv0), (n <> n1), (n <> n0), (n <> n), (n <> gv0), (gv0 <> n1)
(gv0 <> n0), (gv0 <> n), (gv0 <> gv0), (None = Some l), (None = Some al), (n1 :: l = l), (n1 :: l = al), (n1 :: l = selection_sort l), (n1 :: l = selection_sort al), (n1 :: l = selsort l n1)
(n1 :: l = selsort l n0), (n1 :: l = selsort l n), (n1 :: l = selsort l gv0), (n1 :: l = selsort al n1), (n1 :: l = selsort al n0), (n1 :: l = selsort al n), (n1 :: l = selsort al gv0), (n1 :: l = l ++ l), (n1 :: l = l ++ al), (n1 :: l = al ++ l)
(n1 :: l = al ++ al), (n1 :: l = []), (n1 :: al = l), (n1 :: al = al), (n1 :: al = selection_sort l), (n1 :: al = selection_sort al), (n1 :: al = selsort l n1), (n1 :: al = selsort l n0), (n1 :: al = selsort l n), (n1 :: al = selsort l gv0)
(n1 :: al = selsort al n1), (n1 :: al = selsort al n0), (n1 :: al = selsort al n), (n1 :: al = selsort al gv0), (n1 :: al = l ++ l), (n1 :: al = l ++ al), (n1 :: al = al ++ l), (n1 :: al = al ++ al), (n1 :: al = []), (n0 :: l = l)
(n0 :: l = al), (n0 :: l = selection_sort l), (n0 :: l = selection_sort al), (n0 :: l = selsort l n1), (n0 :: l = selsort l n0), (n0 :: l = selsort l n), (n0 :: l = selsort l gv0), (n0 :: l = selsort al n1), (n0 :: l = selsort al n0), (n0 :: l = selsort al n)
(n0 :: l = selsort al gv0), (n0 :: l = l ++ l), (n0 :: l = l ++ al), (n0 :: l = al ++ l), (n0 :: l = al ++ al), (n0 :: l = []), (n0 :: al = l), (n0 :: al = al), (n0 :: al = selection_sort l), (n0 :: al = selection_sort al)
(n0 :: al = selsort l n1), (n0 :: al = selsort l n0), (n0 :: al = selsort l n), (n0 :: al = selsort l gv0), (n0 :: al = selsort al n1), (n0 :: al = selsort al n0), (n0 :: al = selsort al n), (n0 :: al = selsort al gv0), (n0 :: al = l ++ l), (n0 :: al = l ++ al)
(n0 :: al = al ++ l), (n0 :: al = al ++ al), (n0 :: al = []), (n :: l = l), (n :: l = al), (n :: l = selection_sort l), (n :: l = selection_sort al), (n :: l = selsort l n1), (n :: l = selsort l n0), (n :: l = selsort l n)
(n :: l = selsort l gv0), (n :: l = selsort al n1), (n :: l = selsort al n0), (n :: l = selsort al n), (n :: l = selsort al gv0), (n :: l = l ++ l), (n :: l = l ++ al), (n :: l = al ++ l), (n :: l = al ++ al), (n :: l = [])
(n :: al = l), (n :: al = al), (n :: al = selection_sort l), (n :: al = selection_sort al), (n :: al = selsort l n1), (n :: al = selsort l n0), (n :: al = selsort l n), (n :: al = selsort l gv0), (n :: al = selsort al n1), (n :: al = selsort al n0)
(n :: al = selsort al n), (n :: al = selsort al gv0), (n :: al = l ++ l), (n :: al = l ++ al), (n :: al = al ++ l), (n :: al = al ++ al), (n :: al = []), (gv0 :: l = l), (gv0 :: l = al), (gv0 :: l = selection_sort l)
(gv0 :: l = selection_sort al), (gv0 :: l = selsort l n1), (gv0 :: l = selsort l n0), (gv0 :: l = selsort l n), (gv0 :: l = selsort l gv0), (gv0 :: l = selsort al n1), (gv0 :: l = selsort al n0), (gv0 :: l = selsort al n), (gv0 :: l = selsort al gv0), (gv0 :: l = l ++ l)
(gv0 :: l = l ++ al), (gv0 :: l = al ++ l), (gv0 :: l = al ++ al), (gv0 :: l = []), (gv0 :: al = l), (gv0 :: al = al), (gv0 :: al = selection_sort l), (gv0 :: al = selection_sort al), (gv0 :: al = selsort l n1), (gv0 :: al = selsort l n0)
(gv0 :: al = selsort l n), (gv0 :: al = selsort l gv0), (gv0 :: al = selsort al n1), (gv0 :: al = selsort al n0), (gv0 :: al = selsort al n), (gv0 :: al = selsort al gv0), (gv0 :: al = l ++ l), (gv0 :: al = l ++ al), (gv0 :: al = al ++ l), (gv0 :: al = al ++ al)
(gv0 :: al = []), (selection_sort l = l), (selection_sort l = al), (selection_sort l = l ++ l), (selection_sort l = l ++ al), (selection_sort l = al ++ l), (selection_sort l = al ++ al), (selection_sort al = l), (selection_sort al = al), (selection_sort al = l ++ l)
(selection_sort al = l ++ al), (selection_sort al = al ++ l), (selection_sort al = al ++ al), (selsort l n1 = l), (selsort l n1 = al), (selsort l n1 = selection_sort l), (selsort l n1 = selection_sort al), (selsort l n1 = l ++ l), (selsort l n1 = l ++ al), (selsort l n1 = al ++ l)
(selsort l n1 = al ++ al), (selsort l n0 = l), (selsort l n0 = al), (selsort l n0 = selection_sort l), (selsort l n0 = selection_sort al), (selsort l n0 = l ++ l), (selsort l n0 = l ++ al), (selsort l n0 = al ++ l), (selsort l n0 = al ++ al), (selsort l n = l)
(selsort l n = al), (selsort l n = selection_sort l), (selsort l n = selection_sort al), (selsort l n = l ++ l), (selsort l n = l ++ al), (selsort l n = al ++ l), (selsort l n = al ++ al), (selsort l gv0 = l), (selsort l gv0 = al), (selsort l gv0 = selection_sort l)
(selsort l gv0 = selection_sort al), (selsort l gv0 = l ++ l), (selsort l gv0 = l ++ al), (selsort l gv0 = al ++ l), (selsort l gv0 = al ++ al), (selsort al n1 = l), (selsort al n1 = al), (selsort al n1 = selection_sort l), (selsort al n1 = selection_sort al), (selsort al n1 = l ++ l)
(selsort al n1 = l ++ al), (selsort al n1 = al ++ l), (selsort al n1 = al ++ al), (selsort al n0 = l), (selsort al n0 = al), (selsort al n0 = selection_sort l), (selsort al n0 = selection_sort al), (selsort al n0 = l ++ l), (selsort al n0 = l ++ al), (selsort al n0 = al ++ l)
(selsort al n0 = al ++ al), (selsort al n = l), (selsort al n = al), (selsort al n = selection_sort l), (selsort al n = selection_sort al), (selsort al n = l ++ l), (selsort al n = l ++ al), (selsort al n = al ++ l), (selsort al n = al ++ al), (selsort al gv0 = l)
(selsort al gv0 = al), (selsort al gv0 = selection_sort l), (selsort al gv0 = selection_sort al), (selsort al gv0 = l ++ l), (selsort al gv0 = l ++ al), (selsort al gv0 = al ++ l), (selsort al gv0 = al ++ al), (l ++ l = l), (l ++ l = al), (l ++ al = l)
(l ++ al = al), (al ++ l = l), (al ++ l = al), (al ++ al = l), (al ++ al = al), ([] = l), ([] = al), ([] = selection_sort l), ([] = selection_sort al), ([] = selsort l n1)
([] = selsort l n0), ([] = selsort l n), ([] = selsort l gv0), ([] = selsort al n1), ([] = selsort al n0), ([] = selsort al n), ([] = selsort al gv0), ([] = l ++ l), ([] = l ++ al), ([] = al ++ l)
([] = al ++ al), (None = Some n1), (None = Some n0), (None = Some n), (None = Some gv0), ((n1, l) = select n1 l), ((n1, l) = select n1 al), ((n1, l) = select n0 l), ((n1, l) = select n0 al), ((n1, l) = select n l)
((n1, l) = select n al), ((n1, l) = select gv0 l), ((n1, l) = select gv0 al), ((n1, al) = select n1 l), ((n1, al) = select n1 al), ((n1, al) = select n0 l), ((n1, al) = select n0 al), ((n1, al) = select n l), ((n1, al) = select n al), ((n1, al) = select gv0 l)
((n1, al) = select gv0 al), ((n0, l) = select n1 l), ((n0, l) = select n1 al), ((n0, l) = select n0 l), ((n0, l) = select n0 al), ((n0, l) = select n l), ((n0, l) = select n al), ((n0, l) = select gv0 l), ((n0, l) = select gv0 al), ((n0, al) = select n1 l)
((n0, al) = select n1 al), ((n0, al) = select n0 l), ((n0, al) = select n0 al), ((n0, al) = select n l), ((n0, al) = select n al), ((n0, al) = select gv0 l), ((n0, al) = select gv0 al), ((n, l) = select n1 l), ((n, l) = select n1 al), ((n, l) = select n0 l)
((n, l) = select n0 al), ((n, l) = select n l), ((n, l) = select n al), ((n, l) = select gv0 l), ((n, l) = select gv0 al), ((n, al) = select n1 l), ((n, al) = select n1 al), ((n, al) = select n0 l), ((n, al) = select n0 al), ((n, al) = select n l)
((n, al) = select n al), ((n, al) = select gv0 l), ((n, al) = select gv0 al), ((gv0, l) = select n1 l), ((gv0, l) = select n1 al), ((gv0, l) = select n0 l), ((gv0, l) = select n0 al), ((gv0, l) = select n l), ((gv0, l) = select n al), ((gv0, l) = select gv0 l)
((gv0, l) = select gv0 al), ((gv0, al) = select n1 l), ((gv0, al) = select n1 al), ((gv0, al) = select n0 l), ((gv0, al) = select n0 al), ((gv0, al) = select n l), ((gv0, al) = select n al), ((gv0, al) = select gv0 l), ((gv0, al) = select gv0 al), (length l = n1)
(length l = n0), (length l = n), (length l = gv0), (length al = n1), (length al = n0), (length al = n), (length al = gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 48.602 seconds


Label: 0 (0)
(Permutation (n1 :: l) (n0 :: al)), (Permutation (n0 :: al) (n1 :: l)), ((n1, l) = select n0 al)

Label: 1 (1)
(length al = n)

Label: 2 (2)
(n = gv0), (gv0 = n), (length l = gv0), (length al = gv0), (Permutation (n :: l) (gv0 :: l)), (Permutation (gv0 :: l) (n :: l)), (Permutation (n :: al) (gv0 :: al)), (Permutation (gv0 :: al) (n :: al))


------------------------------ ALL RESULTS ------------------------------
1. (select n0 al = (n1, l) -> length (n0 :: al) = S n -> length l = n)

2. (length (n0 :: al) = S n -> length al = n)
(length al = n -> select n0 al = (n1, l) -> length l = n)

3. (select n0 al = (n1, l) -> Permutation (n1 :: l) (n0 :: al))
(Permutation (n1 :: l) (n0 :: al) -> length (n0 :: al) = S n -> length l = n)

4. (select n0 al = (n1, l) -> Permutation (n0 :: al) (n1 :: l))
(Permutation (n0 :: al) (n1 :: l) -> length (n0 :: al) = S n -> length l = n)

5. (length al = gv0 ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)

6. (Permutation (n :: l) (gv0 :: l) ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)

7. (Permutation (gv0 :: l) (n :: l) ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)

8. (Permutation (n :: al) (gv0 :: al) ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)

9. (Permutation (gv0 :: al) (n :: al) ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)



------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 73.419 seconds

Number of Result Pairs Returned: 9

1. (select n0 al = (n1, l) -> length (n0 :: al) = S n -> length l = n)

2. (length (n0 :: al) = S n -> length al = n)
(length al = n -> select n0 al = (n1, l) -> length l = n)

3. (select n0 al = (n1, l) -> Permutation (n1 :: l) (n0 :: al))
(Permutation (n1 :: l) (n0 :: al) -> length (n0 :: al) = S n -> length l = n)

4. (select n0 al = (n1, l) -> Permutation (n0 :: al) (n1 :: l))
(Permutation (n0 :: al) (n1 :: l) -> length (n0 :: al) = S n -> length l = n)

5. (length al = gv0 ->  select n0 al = (n1, l) -> length (n0 :: al) = S n -> gv0 = n)
