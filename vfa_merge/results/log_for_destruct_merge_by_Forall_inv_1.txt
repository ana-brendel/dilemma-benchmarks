Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (sorted (merge (a :: l1) []))
 -- (sorted [])
 -- (b <=* a :: l1)
 -- (forall b : nat,
 b <=* l1 ->
 forall l2 : list nat,
 sorted (merge l1 l2) -> sorted l2 -> sorted (merge (b :: l1) l2))

----------------------------------
Goal: (b <= a)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds



------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 95.118 seconds

Label: Generalization #0
Assumptions: 
 -- (b <=* a :: l1)

----------------------------------
Goal: (b <= a)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 96.266 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
@split : (forall X : Type, list X -> list X * list X)
merge : (list nat -> list nat -> list nat)
le_all : (nat -> list nat -> Prop)
list_ind2 : (forall (A : Type) (P : list A -> Prop),
 P [] ->
 (forall a : A, P [a]) ->
 (forall (a b : A) (l : list A), P l -> P (a :: b :: l)) ->
 forall l : list A, P l)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (b <=* a :: l1)
Positive Examples:
   [a := 4; b := 2; l1 := [3; 2; 3]]
   [a := 5; b := 1; l1 := [5; 1]]
   [a := 4; b := 1; l1 := [4; 1; 2; 4]]
   [a := 4; b := 0; l1 := [1; 2; 1; 1]]
   [a := 1; b := 0; l1 := [3; 1; 2]]
   [a := 0; b := 0; l1 := [2; 3]]
   [a := 5; b := 0; l1 := [4; 1; 5]]
   [a := 3; b := 0; l1 := [3; 4; 0]]
   [a := 5; b := 0; l1 := [3; 2]]
   [a := 3; b := 1; l1 := [4; 1; 4; 2]]
   etc ...

Negative Examples:
   [a := 1; b := 3; l1 := [1; 4]]
   [a := 3; b := 4; l1 := [0; 4; 0; 4; 2]]
   [a := 2; b := 4; l1 := [6; 1; 1; 0]]
   [a := 0; b := 1; l1 := [4; 3; 3; 2]]
   [a := 0; b := 2; l1 := [2; 5; 5]]
   [a := 1; b := 4; l1 := [5; 3]]
   [a := 1; b := 2; l1 := [0; 3; 4]]
   [a := 1; b := 6; l1 := [0; 3; 6; 2]]
   [a := 1; b := 2; l1 := [1; 5]]
   [a := 3; b := 5; l1 := [5; 4; 6]]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 97.498 seconds


Label: 0 (0)
(a <=* l1), (b <=* l1), (sorted l1), (Permutation l1 l1), (In a l1), (In b l1), (a < a), (a < b), (b < a), (b < b)
(a <= a), (a <= b), (b <= a), (b <= b), (l1 = l1), (a = a), (a = b), (b = a), (b = b), (false = sorted_bool l1)
(true = sorted_bool l1), (a <=* a :: l1), (a <=* b :: l1), (a <=* merge l1 l1), (a <=* l1 ++ l1), (a <=* []), (b <=* a :: l1), (b <=* b :: l1), (b <=* merge l1 l1), (b <=* l1 ++ l1)
(b <=* []), (length l1 <=* l1), (length l1 <=* a :: l1), (length l1 <=* b :: l1), (length l1 <=* merge l1 l1), (length l1 <=* l1 ++ l1), (length l1 <=* []), (sorted (a :: l1)), (sorted (b :: l1)), (sorted (merge l1 l1))
(sorted (l1 ++ l1)), (sorted []), (Permutation l1 (a :: l1)), (Permutation l1 (b :: l1)), (Permutation l1 (merge l1 l1)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a :: l1) l1), (Permutation (a :: l1) (b :: l1)), (Permutation (a :: l1) (merge l1 l1))
(Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (b :: l1) l1), (Permutation (b :: l1) (a :: l1)), (Permutation (b :: l1) (merge l1 l1)), (Permutation (b :: l1) (l1 ++ l1)), (Permutation (b :: l1) []), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (b :: l1))
(Permutation (merge l1 l1) (l1 ++ l1)), (Permutation (merge l1 l1) []), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a :: l1)), (Permutation (l1 ++ l1) (b :: l1)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) []), (Permutation [] l1), (Permutation [] (a :: l1)), (Permutation [] (b :: l1))
(Permutation [] (merge l1 l1)), (Permutation [] (l1 ++ l1)), (In a (a :: l1)), (In a (b :: l1)), (In a (merge l1 l1)), (In a (l1 ++ l1)), (In b (a :: l1)), (In b (b :: l1)), (In b (merge l1 l1)), (In b (l1 ++ l1))
(In (length l1) l1), (In (length l1) (a :: l1)), (In (length l1) (b :: l1)), (In (length l1) (merge l1 l1)), (In (length l1) (l1 ++ l1)), (a < length l1), (b < length l1), (length l1 < a), (length l1 < b), (a <= length l1)
(b <= length l1), (length l1 <= a), (length l1 <= b), (~ a <=* l1), (~ b <=* l1), (~ sorted l1), (~ Permutation l1 l1), (~ In a l1), (~ In b l1), (~ a < a)
(~ a < b), (~ b < a), (~ b < b), (~ a <= a), (~ a <= b), (~ b <= a), (~ b <= b), (l1 <> l1), (a <> a), (a <> b)
(b <> a), (b <> b), (None = Some l1), (a :: l1 = l1), (a :: l1 = merge l1 l1), (a :: l1 = l1 ++ l1), (a :: l1 = []), (b :: l1 = l1), (b :: l1 = merge l1 l1), (b :: l1 = l1 ++ l1)
(b :: l1 = []), (merge l1 l1 = l1), (merge l1 l1 = l1 ++ l1), (l1 ++ l1 = l1), ([] = l1), ([] = merge l1 l1), ([] = l1 ++ l1), (None = Some a), (None = Some b), ((l1, l1) = split l1)
(length l1 = a), (length l1 = b)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 187.045 seconds


Label: 0 (0)
(b <= a), (b <=* a :: l1), (~ a < b)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 223.173 seconds


(b <=* a :: l1)
 - (b <=* a :: l1)
 - (b <= a)
 - (~ a < b)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 223.174 seconds

Number of Result Pairs Returned: 2

(b <=* a :: l1 -> b <= a)

(b <=* a :: l1 -> ~ a < b)
(~ a < b -> b <= a)
