Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (b <= a0)
 -- (sorted (merge (a :: l1) (a0 :: l2)))
 -- (sorted (a0 :: l2))
 -- (b <=* a :: l1)
 -- (forall b : nat,
 b <=* l1 ->
 forall l2 : list nat,
 sorted (merge l1 l2) -> sorted l2 -> sorted (merge (b :: l1) l2))
 -- (sorted (merge (a :: l1) l2) ->
 sorted l2 ->
 forall b : nat, b <=* a :: l1 -> sorted (merge (b :: a :: l1) l2))

----------------------------------
Goal: (b <=* merge (a :: l1) (a0 :: l2))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : (list nat) = (a :: l1)
gv2 : (list nat) = (a0 :: l2)
gv0 : (list nat) = (merge (a :: l1) (a0 :: l2))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 221.274 seconds

Label: Generalization #0
Assumptions: 
 -- (gv0 = merge (a :: l1) (a0 :: l2))
 -- (b <= a0)
 -- (b <=* a :: l1)

----------------------------------
Goal: (b <=* gv0)
Case: 3

Label: Generalization #1
Assumptions: 
 -- (gv2 = a0 :: l2)
 -- (b <= a0)
 -- (sorted (merge (a :: l1) gv2))
 -- (b <=* a :: l1)

----------------------------------
Goal: (b <=* merge (a :: l1) gv2)
Case: 3

Label: Generalization #2
Assumptions: 
 -- (b <= a0)
 -- (sorted (merge gv1 (a0 :: l2)))
 -- (b <=* gv1)

----------------------------------
Goal: (b <=* merge gv1 (a0 :: l2))
Case: 3

Label: Generalization #3
Assumptions: 
 -- (b <= a0)
 -- (sorted (merge (a :: l1) (a0 :: l2)))
 -- (b <=* a :: l1)

----------------------------------
Goal: (b <=* merge (a :: l1) (a0 :: l2))
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 222.109 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
@split : (forall X : Type, list X -> list X * list X)
merge : (list nat -> list nat -> list nat)
le_all : (nat -> list nat -> Prop)
list_ind2_principle : Prop
list_ind2 : (forall (A : Type) (P : list A -> Prop),
 P [] ->
 (forall a : A, P [a]) ->
 (forall (a b : A) (l : list A), P l -> P (a :: b :: l)) ->
 forall l : list A, P l)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (gv0 = merge (a :: l1) (a0 :: l2))
Positive Examples:
   [a := 1; a0 := 2; b := 1; gv0 := [1; 2]; l1 := []; l2 := []]
   [a := 2; a0 := 2; b := 1; gv0 := [2; 2]; l1 := []; l2 := []]
   [a := 0; a0 := 2; b := 0; gv0 := [0; 2]; l1 := []; l2 := []]

Negative Examples:
   [a := 4; a0 := 5; b := 1; gv0 := [2; 6; 0]; l1 := [3]; l2 := []]
   [a := 3; a0 := 3; b := 3; gv0 := [0]; l1 := []; l2 := [1; 5; 3]]
   [a := 1; a0 := 1; b := 1; gv0 := [0; 2; 3; 5; 4]; l1 := [3; 4; 1]; l2 := [2; 3]]
   [a := 2; a0 := 3; b := 2; gv0 := [3; 2; 0]; l1 := [2]; l2 := [2]]
   [a := 2; a0 := 2; b := 1; gv0 := [0; 4; 6; 1; 2]; l1 := [1; 4; 1]; l2 := [5; 6; 6; 5; 4]]
   [a := 6; a0 := 3; b := 2; gv0 := [2; 3; 1; 0]; l1 := []; l2 := [2; 4]]
   [a := 2; a0 := 4; b := 1; gv0 := [2; 0; 2]; l1 := [3]; l2 := [4; 3; 0]]
   [a := 4; a0 := 5; b := 1; gv0 := [1; 5; 0]; l1 := [5]; l2 := [1; 5]]
   [a := 3; a0 := 2; b := 1; gv0 := [4; 2; 0; 3]; l1 := [4; 2; 4]; l2 := []]
   [a := 4; a0 := 1; b := 1; gv0 := [0]; l1 := [1; 1]; l2 := [0; 3]]
   etc ...


Label: 0 (1)
Abducted Assumption: (b <= a0)
Positive Examples:
   [a := 1; a0 := 2; b := 1; gv0 := [1; 2]; l1 := []; l2 := []]
   [a := 2; a0 := 2; b := 1; gv0 := [2; 2]; l1 := []; l2 := []]
   [a := 0; a0 := 2; b := 0; gv0 := [0; 2]; l1 := []; l2 := []]

Negative Examples:
   [a := 2; a0 := 1; b := 2; gv0 := [1; 2]; l1 := []; l2 := []]


Label: 0 (2)
Abducted Assumption: (b <=* a :: l1)
Positive Examples:
   [a := 1; a0 := 2; b := 1; gv0 := [1; 2]; l1 := []; l2 := []]
   [a := 2; a0 := 2; b := 1; gv0 := [2; 2]; l1 := []; l2 := []]
   [a := 0; a0 := 2; b := 0; gv0 := [0; 2]; l1 := []; l2 := []]

Negative Examples:
   [a := 0; a0 := 2; b := 1; gv0 := [0; 2]; l1 := []; l2 := []]


Label: 1 (3)
Abducted Assumption: (gv2 = a0 :: l2)
Positive Examples:
   [a := 2; a0 := 1; b := 1; gv2 := [1]; l1 := [2]; l2 := []]
   [a := 1; a0 := 2; b := 0; gv2 := [2]; l1 := [3]; l2 := []]
   [a := 4; a0 := 4; b := 2; gv2 := [4]; l1 := []; l2 := []]
   [a := 0; a0 := 0; b := 0; gv2 := [0]; l1 := [0]; l2 := []]
   [a := 2; a0 := 1; b := 1; gv2 := [1; 2]; l1 := [2]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv2 := [2]; l1 := [4]; l2 := []]
   [a := 0; a0 := 1; b := 0; gv2 := [1; 1]; l1 := []; l2 := [1]]
   [a := 1; a0 := 2; b := 1; gv2 := [2]; l1 := []; l2 := []]
   [a := 2; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   [a := 1; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   etc ...

Negative Examples:
   [a := 2; a0 := 2; b := 2; gv2 := [0]; l1 := []; l2 := [2]]
   [a := 2; a0 := 2; b := 2; gv2 := [0]; l1 := []; l2 := []]
   [a := 2; a0 := 3; b := 2; gv2 := [1]; l1 := [2]; l2 := [0]]
   [a := 2; a0 := 2; b := 2; gv2 := [0; 3]; l1 := []; l2 := []]
   [a := 3; a0 := 4; b := 2; gv2 := [1; 2]; l1 := [4; 5]; l2 := [2]]
   [a := 1; a0 := 1; b := 1; gv2 := [0; 0]; l1 := []; l2 := [2; 1]]
   [a := 2; a0 := 2; b := 1; gv2 := [0; 1]; l1 := []; l2 := [2; 1]]
   [a := 2; a0 := 2; b := 1; gv2 := [0; 0]; l1 := []; l2 := []]
   [a := 1; a0 := 3; b := 1; gv2 := [0]; l1 := []; l2 := [2; 0]]
   [a := 3; a0 := 1; b := 1; gv2 := [0]; l1 := []; l2 := [0]]
   etc ...


Label: 1 (4)
Abducted Assumption: (b <= a0)
Positive Examples:
   [a := 2; a0 := 1; b := 1; gv2 := [1]; l1 := [2]; l2 := []]
   [a := 1; a0 := 2; b := 0; gv2 := [2]; l1 := [3]; l2 := []]
   [a := 4; a0 := 4; b := 2; gv2 := [4]; l1 := []; l2 := []]
   [a := 0; a0 := 0; b := 0; gv2 := [0]; l1 := [0]; l2 := []]
   [a := 2; a0 := 1; b := 1; gv2 := [1; 2]; l1 := [2]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv2 := [2]; l1 := [4]; l2 := []]
   [a := 0; a0 := 1; b := 0; gv2 := [1; 1]; l1 := []; l2 := [1]]
   [a := 1; a0 := 2; b := 1; gv2 := [2]; l1 := []; l2 := []]
   [a := 2; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   [a := 1; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   etc ...

Negative Examples:
   [a := 3; a0 := 0; b := 1; gv2 := [0]; l1 := [3; 4]; l2 := []]
   [a := 2; a0 := 0; b := 1; gv2 := [0]; l1 := [2; 2]; l2 := []]
   [a := 2; a0 := 0; b := 1; gv2 := [0]; l1 := [5]; l2 := []]
   [a := 3; a0 := 0; b := 3; gv2 := [0]; l1 := [3]; l2 := []]
   [a := 2; a0 := 1; b := 2; gv2 := [1; 1]; l1 := []; l2 := [1]]
   [a := 2; a0 := 0; b := 1; gv2 := [0]; l1 := [2]; l2 := []]
   [a := 1; a0 := 0; b := 1; gv2 := [0]; l1 := []; l2 := []]
   [a := 1; a0 := 0; b := 1; gv2 := [0]; l1 := [1]; l2 := []]


Label: 1 (5)
Abducted Assumption: (sorted (merge (a :: l1) gv2))
Positive Examples:
   [a := 2; a0 := 1; b := 1; gv2 := [1]; l1 := [2]; l2 := []]
   [a := 1; a0 := 2; b := 0; gv2 := [2]; l1 := [3]; l2 := []]
   [a := 4; a0 := 4; b := 2; gv2 := [4]; l1 := []; l2 := []]
   [a := 0; a0 := 0; b := 0; gv2 := [0]; l1 := [0]; l2 := []]
   [a := 2; a0 := 1; b := 1; gv2 := [1; 2]; l1 := [2]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv2 := [2]; l1 := [4]; l2 := []]
   [a := 0; a0 := 1; b := 0; gv2 := [1; 1]; l1 := []; l2 := [1]]
   [a := 1; a0 := 2; b := 1; gv2 := [2]; l1 := []; l2 := []]
   [a := 2; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   [a := 1; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   etc ...

Negative Examples:
   [a := 2; a0 := 2; b := 2; gv2 := [2; 1]; l1 := []; l2 := [1]]


Label: 1 (6)
Abducted Assumption: (b <=* a :: l1)
Positive Examples:
   [a := 2; a0 := 1; b := 1; gv2 := [1]; l1 := [2]; l2 := []]
   [a := 1; a0 := 2; b := 0; gv2 := [2]; l1 := [3]; l2 := []]
   [a := 4; a0 := 4; b := 2; gv2 := [4]; l1 := []; l2 := []]
   [a := 0; a0 := 0; b := 0; gv2 := [0]; l1 := [0]; l2 := []]
   [a := 2; a0 := 1; b := 1; gv2 := [1; 2]; l1 := [2]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv2 := [2]; l1 := [4]; l2 := []]
   [a := 0; a0 := 1; b := 0; gv2 := [1; 1]; l1 := []; l2 := [1]]
   [a := 1; a0 := 2; b := 1; gv2 := [2]; l1 := []; l2 := []]
   [a := 2; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   [a := 1; a0 := 0; b := 0; gv2 := [0]; l1 := []; l2 := []]
   etc ...

Negative Examples:
   [a := 1; a0 := 3; b := 3; gv2 := [3]; l1 := [2]; l2 := []]
   [a := 1; a0 := 3; b := 3; gv2 := [3]; l1 := [1; 1]; l2 := []]
   [a := 0; a0 := 2; b := 2; gv2 := [2]; l1 := []; l2 := []]
   [a := 0; a0 := 1; b := 1; gv2 := [1; 1]; l1 := [1; 1]; l2 := [1]]
   [a := 0; a0 := 1; b := 1; gv2 := [1]; l1 := [0]; l2 := []]
   [a := 0; a0 := 2; b := 1; gv2 := [2]; l1 := []; l2 := []]
   [a := 0; a0 := 3; b := 2; gv2 := [3]; l1 := [1]; l2 := []]
   [a := 1; a0 := 3; b := 3; gv2 := [3]; l1 := []; l2 := []]
   [a := 0; a0 := 1; b := 1; gv2 := [1]; l1 := [1]; l2 := []]
   [a := 0; a0 := 2; b := 1; gv2 := [2]; l1 := [2]; l2 := []]
   etc ...


Label: 2 (7)
Abducted Assumption: (b <= a0)
Positive Examples:
   [a := 4; a0 := 2; b := 1; gv1 := [4]; l1 := [4]; l2 := [3]]
   [a := 2; a0 := 1; b := 0; gv1 := []; l1 := []; l2 := [1; 1]]
   [a := 0; a0 := 0; b := 0; gv1 := [1]; l1 := [2]; l2 := [0; 0]]
   [a := 0; a0 := 3; b := 0; gv1 := [2; 2]; l1 := [3]; l2 := []]
   [a := 3; a0 := 0; b := 0; gv1 := []; l1 := []; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv1 := []; l1 := [4]; l2 := [2]]
   [a := 2; a0 := 1; b := 0; gv1 := [0; 1; 1]; l1 := [3]; l2 := [1; 2]]
   [a := 3; a0 := 4; b := 3; gv1 := [4]; l1 := [4; 5]; l2 := []]
   [a := 4; a0 := 2; b := 2; gv1 := []; l1 := [3; 0; 2; 0; 2]; l2 := []]
   [a := 1; a0 := 0; b := 0; gv1 := [2; 4]; l1 := [3; 0; 0]; l2 := [1; 3]]
   etc ...

Negative Examples:
   [a := 1; a0 := 0; b := 3; gv1 := []; l1 := [3]; l2 := [0; 2; 3; 4]]
   [a := 2; a0 := 1; b := 2; gv1 := []; l1 := []; l2 := [1; 2]]
   [a := 4; a0 := 1; b := 2; gv1 := []; l1 := [3]; l2 := []]
   [a := 0; a0 := 1; b := 2; gv1 := [2]; l1 := [2]; l2 := [1; 1]]
   [a := 2; a0 := 1; b := 2; gv1 := [2; 2]; l1 := []; l2 := [1]]
   [a := 1; a0 := 0; b := 2; gv1 := []; l1 := [1]; l2 := [1]]
   [a := 4; a0 := 0; b := 2; gv1 := []; l1 := []; l2 := []]
   [a := 2; a0 := 0; b := 1; gv1 := []; l1 := [0]; l2 := []]
   [a := 6; a0 := 3; b := 4; gv1 := []; l1 := [6; 4; 0; 6; 0]; l2 := [3]]
   [a := 1; a0 := 0; b := 2; gv1 := []; l1 := [0; 1]; l2 := []]
   etc ...


Label: 2 (8)
Abducted Assumption: (sorted (merge gv1 (a0 :: l2)))
Positive Examples:
   [a := 4; a0 := 2; b := 1; gv1 := [4]; l1 := [4]; l2 := [3]]
   [a := 2; a0 := 1; b := 0; gv1 := []; l1 := []; l2 := [1; 1]]
   [a := 0; a0 := 0; b := 0; gv1 := [1]; l1 := [2]; l2 := [0; 0]]
   [a := 0; a0 := 3; b := 0; gv1 := [2; 2]; l1 := [3]; l2 := []]
   [a := 3; a0 := 0; b := 0; gv1 := []; l1 := []; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv1 := []; l1 := [4]; l2 := [2]]
   [a := 2; a0 := 1; b := 0; gv1 := [0; 1; 1]; l1 := [3]; l2 := [1; 2]]
   [a := 3; a0 := 4; b := 3; gv1 := [4]; l1 := [4; 5]; l2 := []]
   [a := 4; a0 := 2; b := 2; gv1 := []; l1 := [3; 0; 2; 0; 2]; l2 := []]
   [a := 1; a0 := 0; b := 0; gv1 := [2; 4]; l1 := [3; 0; 0]; l2 := [1; 3]]
   etc ...

Negative Examples:
   [a := 4; a0 := 2; b := 1; gv1 := [3; 4; 5]; l1 := [2; 1; 0; 4; 5]; l2 := [0; 2]]
   [a := 2; a0 := 4; b := 1; gv1 := []; l1 := [6]; l2 := [5; 0; 1; 2; 4]]
   [a := 3; a0 := 2; b := 2; gv1 := [3; 3; 5; 2; 3]; l1 := [2]; l2 := [1; 5; 0]]
   [a := 5; a0 := 5; b := 3; gv1 := []; l1 := [0; 2; 5]; l2 := [3; 1]]
   [a := 2; a0 := 3; b := 3; gv1 := [3]; l1 := [0; 1]; l2 := [0]]
   [a := 0; a0 := 3; b := 2; gv1 := [3]; l1 := []; l2 := [3; 0]]
   [a := 0; a0 := 3; b := 2; gv1 := [3; 3]; l1 := [0]; l2 := [1]]
   [a := 1; a0 := 4; b := 3; gv1 := []; l1 := [4; 5; 1; 3; 4]; l2 := [5; 0; 5; 5; 5]]
   [a := 1; a0 := 3; b := 2; gv1 := []; l1 := [2; 1; 4; 1]; l2 := [3; 0]]
   [a := 2; a0 := 1; b := 1; gv1 := [1; 3; 3]; l1 := [3; 0]; l2 := [1; 0]]
   etc ...


Label: 2 (9)
Abducted Assumption: (b <=* gv1)
Positive Examples:
   [a := 4; a0 := 2; b := 1; gv1 := [4]; l1 := [4]; l2 := [3]]
   [a := 2; a0 := 1; b := 0; gv1 := []; l1 := []; l2 := [1; 1]]
   [a := 0; a0 := 0; b := 0; gv1 := [1]; l1 := [2]; l2 := [0; 0]]
   [a := 0; a0 := 3; b := 0; gv1 := [2; 2]; l1 := [3]; l2 := []]
   [a := 3; a0 := 0; b := 0; gv1 := []; l1 := []; l2 := [2]]
   [a := 0; a0 := 2; b := 0; gv1 := []; l1 := [4]; l2 := [2]]
   [a := 2; a0 := 1; b := 0; gv1 := [0; 1; 1]; l1 := [3]; l2 := [1; 2]]
   [a := 3; a0 := 4; b := 3; gv1 := [4]; l1 := [4; 5]; l2 := []]
   [a := 4; a0 := 2; b := 2; gv1 := []; l1 := [3; 0; 2; 0; 2]; l2 := []]
   [a := 1; a0 := 0; b := 0; gv1 := [2; 4]; l1 := [3; 0; 0]; l2 := [1; 3]]
   etc ...

Negative Examples:
   [a := 4; a0 := 3; b := 3; gv1 := [2]; l1 := [0; 1; 2; 4]; l2 := [3; 3]]
   [a := 2; a0 := 2; b := 1; gv1 := [0]; l1 := [2]; l2 := []]
   [a := 1; a0 := 2; b := 2; gv1 := [0]; l1 := []; l2 := [2]]
   [a := 2; a0 := 2; b := 2; gv1 := [0; 1]; l1 := [2]; l2 := []]
   [a := 0; a0 := 2; b := 2; gv1 := [0; 1]; l1 := [3; 1; 0; 3]; l2 := [2]]
   [a := 0; a0 := 3; b := 3; gv1 := [0]; l1 := [0]; l2 := [3]]
   [a := 0; a0 := 3; b := 3; gv1 := [0; 3]; l1 := []; l2 := []]
   [a := 2; a0 := 2; b := 1; gv1 := [0; 2]; l1 := [2]; l2 := [2; 2]]
   [a := 0; a0 := 1; b := 1; gv1 := [0; 0]; l1 := [1; 2]; l2 := []]
   [a := 0; a0 := 2; b := 1; gv1 := [0; 2]; l1 := [2; 0]; l2 := []]
   etc ...


Label: 3 (10)
Abducted Assumption: (b <= a0)
Positive Examples:
   [a := 0; a0 := 2; b := 0; l1 := [1; 2; 3]; l2 := []]
   [a := 1; a0 := 3; b := 1; l1 := []; l2 := [3]]
   [a := 0; a0 := 1; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 1; a0 := 3; b := 0; l1 := []; l2 := [3; 5]]
   [a := 3; a0 := 5; b := 0; l1 := [4; 4]; l2 := []]
   [a := 2; a0 := 3; b := 0; l1 := [2]; l2 := []]
   [a := 1; a0 := 1; b := 0; l1 := [1; 2; 2]; l2 := [1]]
   [a := 2; a0 := 1; b := 0; l1 := []; l2 := [2; 2]]
   [a := 2; a0 := 3; b := 1; l1 := [2]; l2 := []]
   etc ...

Negative Examples:
   [a := 2; a0 := 1; b := 2; l1 := [2]; l2 := [1]]
   [a := 2; a0 := 0; b := 2; l1 := []; l2 := [3; 3]]
   [a := 2; a0 := 0; b := 2; l1 := []; l2 := [0]]
   [a := 1; a0 := 0; b := 1; l1 := [3; 3; 3]; l2 := [0]]
   [a := 1; a0 := 0; b := 1; l1 := [2]; l2 := [1; 2]]
   [a := 3; a0 := 0; b := 2; l1 := [3]; l2 := [0]]
   [a := 3; a0 := 2; b := 3; l1 := [4; 4]; l2 := [4]]
   [a := 2; a0 := 0; b := 2; l1 := []; l2 := [0; 2]]
   [a := 2; a0 := 0; b := 1; l1 := []; l2 := [2]]
   [a := 2; a0 := 1; b := 2; l1 := [2; 2]; l2 := [1]]
   etc ...


Label: 3 (11)
Abducted Assumption: (sorted (merge (a :: l1) (a0 :: l2)))
Positive Examples:
   [a := 0; a0 := 2; b := 0; l1 := [1; 2; 3]; l2 := []]
   [a := 1; a0 := 3; b := 1; l1 := []; l2 := [3]]
   [a := 0; a0 := 1; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 1; a0 := 3; b := 0; l1 := []; l2 := [3; 5]]
   [a := 3; a0 := 5; b := 0; l1 := [4; 4]; l2 := []]
   [a := 2; a0 := 3; b := 0; l1 := [2]; l2 := []]
   [a := 1; a0 := 1; b := 0; l1 := [1; 2; 2]; l2 := [1]]
   [a := 2; a0 := 1; b := 0; l1 := []; l2 := [2; 2]]
   [a := 2; a0 := 3; b := 1; l1 := [2]; l2 := []]
   etc ...

Negative Examples:
   [a := 3; a0 := 3; b := 1; l1 := [3; 3; 2]; l2 := [0; 3]]
   [a := 2; a0 := 2; b := 1; l1 := [2; 2]; l2 := [0; 1]]
   [a := 2; a0 := 3; b := 2; l1 := [3; 4]; l2 := [3; 2; 1; 2]]
   [a := 5; a0 := 6; b := 2; l1 := [6; 6; 3]; l2 := [2; 2; 6; 2; 0; 4]]
   [a := 3; a0 := 4; b := 3; l1 := [3; 4; 4]; l2 := [2; 1; 4]]
   [a := 2; a0 := 2; b := 1; l1 := [1]; l2 := [2; 0]]
   [a := 3; a0 := 4; b := 1; l1 := []; l2 := [0; 4]]
   [a := 1; a0 := 1; b := 1; l1 := [2; 1]; l2 := [0; 2]]
   [a := 4; a0 := 4; b := 2; l1 := [2; 2; 2]; l2 := [0]]
   [a := 5; a0 := 4; b := 1; l1 := [6; 2]; l2 := [1; 0; 1; 6]]
   etc ...


Label: 3 (12)
Abducted Assumption: (b <=* a :: l1)
Positive Examples:
   [a := 0; a0 := 2; b := 0; l1 := [1; 2; 3]; l2 := []]
   [a := 1; a0 := 3; b := 1; l1 := []; l2 := [3]]
   [a := 0; a0 := 1; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 0; a0 := 2; b := 0; l1 := [0; 4]; l2 := [2]]
   [a := 1; a0 := 3; b := 0; l1 := []; l2 := [3; 5]]
   [a := 3; a0 := 5; b := 0; l1 := [4; 4]; l2 := []]
   [a := 2; a0 := 3; b := 0; l1 := [2]; l2 := []]
   [a := 1; a0 := 1; b := 0; l1 := [1; 2; 2]; l2 := [1]]
   [a := 2; a0 := 1; b := 0; l1 := []; l2 := [2; 2]]
   [a := 2; a0 := 3; b := 1; l1 := [2]; l2 := []]
   etc ...

Negative Examples:
   [a := 0; a0 := 2; b := 2; l1 := [1; 3]; l2 := []]
   [a := 1; a0 := 2; b := 2; l1 := [2; 3; 3]; l2 := [2; 2]]
   [a := 0; a0 := 4; b := 1; l1 := [1]; l2 := [4; 5]]
   [a := 3; a0 := 5; b := 4; l1 := [5]; l2 := []]
   [a := 0; a0 := 5; b := 2; l1 := []; l2 := []]
   [a := 0; a0 := 4; b := 2; l1 := [4]; l2 := []]
   [a := 0; a0 := 2; b := 2; l1 := [3]; l2 := [2; 3; 3]]
   [a := 0; a0 := 3; b := 3; l1 := []; l2 := []]
   [a := 1; a0 := 2; b := 2; l1 := [1; 1; 1]; l2 := []]
   [a := 0; a0 := 2; b := 2; l1 := [0]; l2 := [2]]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 224.788 seconds


Label: 0 (0)
(false = sorted_bool gv0), (true = sorted_bool gv0), (a0 <=* gv0), (a0 <=* a0 :: gv0), (a0 <=* a :: gv0), (a0 <=* b :: gv0), (a0 <=* merge l2 gv0), (a0 <=* merge l1 gv0), (a0 <=* merge gv0 l2), (a0 <=* merge gv0 l1)
(a0 <=* l2 ++ gv0), (a0 <=* l1 ++ gv0), (a0 <=* gv0 ++ l2), (a0 <=* gv0 ++ l1), (a0 <=* gv0 ++ gv0), (a <=* gv0), (a <=* a0 :: gv0), (a <=* a :: gv0), (a <=* b :: gv0), (a <=* merge l2 gv0)
(a <=* merge gv0 l2), (a <=* merge gv0 l1), (a <=* merge gv0 gv0), (a <=* l2 ++ gv0), (a <=* l1 ++ gv0), (a <=* gv0 ++ l2), (a <=* gv0 ++ l1), (a <=* gv0 ++ gv0), (b <=* gv0), (b <=* a0 :: gv0)
(b <=* b :: gv0), (b <=* merge l2 gv0), (b <=* merge l1 gv0), (b <=* merge gv0 l2), (b <=* merge gv0 l1), (b <=* merge gv0 gv0), (b <=* l2 ++ gv0), (b <=* l1 ++ gv0), (b <=* gv0 ++ l2), (b <=* gv0 ++ l1)
(length l2 <=* gv0), (length l2 <=* a0 :: gv0), (length l2 <=* a :: gv0), (length l2 <=* b :: gv0), (length l2 <=* merge l2 gv0), (length l2 <=* merge l1 gv0), (length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 l1), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ gv0)
(length l2 <=* gv0 ++ l2), (length l2 <=* gv0 ++ l1), (length l2 <=* gv0 ++ gv0), (length l1 <=* gv0), (length l1 <=* a0 :: gv0), (length l1 <=* a :: gv0), (length l1 <=* b :: gv0), (length l1 <=* merge l2 gv0), (length l1 <=* merge l1 gv0), (length l1 <=* merge gv0 l2)
(length l1 <=* merge gv0 gv0), (length l1 <=* l2 ++ gv0), (length l1 <=* l1 ++ gv0), (length l1 <=* gv0 ++ l2), (length l1 <=* gv0 ++ l1), (length l1 <=* gv0 ++ gv0), (length gv0 <=* l2), (length gv0 <=* l1), (length gv0 <=* gv0), (length gv0 <=* a0 :: l2)
(length gv0 <=* a0 :: gv0), (length gv0 <=* a :: l2), (length gv0 <=* a :: l1), (length gv0 <=* a :: gv0), (length gv0 <=* b :: l2), (length gv0 <=* b :: l1), (length gv0 <=* b :: gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 l1), (length gv0 <=* merge l2 gv0)
(length gv0 <=* merge l1 l1), (length gv0 <=* merge l1 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 l1), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ l1), (length gv0 <=* l2 ++ gv0), (length gv0 <=* l1 ++ l2), (length gv0 <=* l1 ++ l1)
(length gv0 <=* gv0 ++ l2), (length gv0 <=* gv0 ++ l1), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted gv0), (sorted (a0 :: gv0)), (sorted (a :: gv0)), (sorted (b :: gv0)), (sorted (merge l2 gv0)), (sorted (merge l1 gv0))
(sorted (merge gv0 l1)), (sorted (merge gv0 gv0)), (sorted (l2 ++ gv0)), (sorted (l1 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ l1)), (sorted (gv0 ++ gv0)), (Permutation l2 gv0), (Permutation l2 (a0 :: gv0)), (Permutation l2 (a :: gv0))
(Permutation l2 (merge l2 gv0)), (Permutation l2 (merge l1 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 l1)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (l1 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ l1)), (Permutation l2 (gv0 ++ gv0))
(Permutation l1 (a0 :: gv0)), (Permutation l1 (a :: gv0)), (Permutation l1 (b :: gv0)), (Permutation l1 (merge l2 gv0)), (Permutation l1 (merge l1 gv0)), (Permutation l1 (merge gv0 l2)), (Permutation l1 (merge gv0 l1)), (Permutation l1 (merge gv0 gv0)), (Permutation l1 (l2 ++ gv0)), (Permutation l1 (l1 ++ gv0))
(Permutation l1 (gv0 ++ l1)), (Permutation l1 (gv0 ++ gv0)), (Permutation gv0 l2), (Permutation gv0 l1), (Permutation gv0 (a0 :: l2)), (Permutation gv0 (a0 :: l1)), (Permutation gv0 (a0 :: gv0)), (Permutation gv0 (a :: l2)), (Permutation gv0 (a :: l1)), (Permutation gv0 (a :: gv0))
(Permutation gv0 (b :: l1)), (Permutation gv0 (b :: gv0)), (Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 l1)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge l1 l2)), (Permutation gv0 (merge l1 l1)), (Permutation gv0 (merge l1 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 l1))
(Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ l1)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (l1 ++ l2)), (Permutation gv0 (l1 ++ l1)), (Permutation gv0 (l1 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ l1)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 [])
(Permutation (a0 :: l2) (a0 :: gv0)), (Permutation (a0 :: l2) (a :: gv0)), (Permutation (a0 :: l2) (b :: gv0)), (Permutation (a0 :: l2) (merge l2 gv0)), (Permutation (a0 :: l2) (merge l1 gv0)), (Permutation (a0 :: l2) (merge gv0 l2)), (Permutation (a0 :: l2) (merge gv0 l1)), (Permutation (a0 :: l2) (merge gv0 gv0)), (Permutation (a0 :: l2) (l2 ++ gv0)), (Permutation (a0 :: l2) (l1 ++ gv0))
(Permutation (a0 :: l2) (gv0 ++ l1)), (Permutation (a0 :: l2) (gv0 ++ gv0)), (Permutation (a0 :: l1) gv0), (Permutation (a0 :: l1) (a0 :: gv0)), (Permutation (a0 :: l1) (a :: gv0)), (Permutation (a0 :: l1) (b :: gv0)), (Permutation (a0 :: l1) (merge l2 gv0)), (Permutation (a0 :: l1) (merge l1 gv0)), (Permutation (a0 :: l1) (merge gv0 l2)), (Permutation (a0 :: l1) (merge gv0 l1))
(Permutation (a0 :: l1) (l2 ++ gv0)), (Permutation (a0 :: l1) (l1 ++ gv0)), (Permutation (a0 :: l1) (gv0 ++ l2)), (Permutation (a0 :: l1) (gv0 ++ l1)), (Permutation (a0 :: l1) (gv0 ++ gv0)), (Permutation (a0 :: gv0) l2), (Permutation (a0 :: gv0) l1), (Permutation (a0 :: gv0) gv0), (Permutation (a0 :: gv0) (a0 :: l2)), (Permutation (a0 :: gv0) (a0 :: l1))
(Permutation (a0 :: gv0) (a :: l1)), (Permutation (a0 :: gv0) (a :: gv0)), (Permutation (a0 :: gv0) (b :: l2)), (Permutation (a0 :: gv0) (b :: l1)), (Permutation (a0 :: gv0) (b :: gv0)), (Permutation (a0 :: gv0) (merge l2 l2)), (Permutation (a0 :: gv0) (merge l2 l1)), (Permutation (a0 :: gv0) (merge l2 gv0)), (Permutation (a0 :: gv0) (merge l1 l2)), (Permutation (a0 :: gv0) (merge l1 l1))
(Permutation (a0 :: gv0) (merge gv0 l2)), (Permutation (a0 :: gv0) (merge gv0 l1)), (Permutation (a0 :: gv0) (merge gv0 gv0)), (Permutation (a0 :: gv0) (l2 ++ l2)), (Permutation (a0 :: gv0) (l2 ++ l1)), (Permutation (a0 :: gv0) (l2 ++ gv0)), (Permutation (a0 :: gv0) (l1 ++ l2)), (Permutation (a0 :: gv0) (l1 ++ l1)), (Permutation (a0 :: gv0) (l1 ++ gv0)), (Permutation (a0 :: gv0) (gv0 ++ l2))
(Permutation (a0 :: gv0) (gv0 ++ gv0)), (Permutation (a0 :: gv0) []), (Permutation (a :: l2) gv0), (Permutation (a :: l2) (a0 :: gv0)), (Permutation (a :: l2) (a :: gv0)), (Permutation (a :: l2) (b :: gv0)), (Permutation (a :: l2) (merge l2 gv0)), (Permutation (a :: l2) (merge l1 gv0)), (Permutation (a :: l2) (merge gv0 l2)), (Permutation (a :: l2) (merge gv0 l1))
(Permutation (a :: l2) (l2 ++ gv0)), (Permutation (a :: l2) (l1 ++ gv0)), (Permutation (a :: l2) (gv0 ++ l2)), (Permutation (a :: l2) (gv0 ++ l1)), (Permutation (a :: l2) (gv0 ++ gv0)), (Permutation (a :: l1) gv0), (Permutation (a :: l1) (a0 :: gv0)), (Permutation (a :: l1) (a :: gv0)), (Permutation (a :: l1) (b :: gv0)), (Permutation (a :: l1) (merge l2 gv0))
(Permutation (a :: l1) (merge gv0 l2)), (Permutation (a :: l1) (merge gv0 l1)), (Permutation (a :: l1) (merge gv0 gv0)), (Permutation (a :: l1) (l2 ++ gv0)), (Permutation (a :: l1) (l1 ++ gv0)), (Permutation (a :: l1) (gv0 ++ l2)), (Permutation (a :: l1) (gv0 ++ l1)), (Permutation (a :: l1) (gv0 ++ gv0)), (Permutation (a :: gv0) l2), (Permutation (a :: gv0) l1)
(Permutation (a :: gv0) (a0 :: l2)), (Permutation (a :: gv0) (a0 :: l1)), (Permutation (a :: gv0) (a0 :: gv0)), (Permutation (a :: gv0) (a :: l2)), (Permutation (a :: gv0) (a :: l1)), (Permutation (a :: gv0) (b :: l2)), (Permutation (a :: gv0) (b :: l1)), (Permutation (a :: gv0) (b :: gv0)), (Permutation (a :: gv0) (merge l2 l2)), (Permutation (a :: gv0) (merge l2 l1))
(Permutation (a :: gv0) (merge l1 l2)), (Permutation (a :: gv0) (merge l1 l1)), (Permutation (a :: gv0) (merge l1 gv0)), (Permutation (a :: gv0) (merge gv0 l2)), (Permutation (a :: gv0) (merge gv0 l1)), (Permutation (a :: gv0) (merge gv0 gv0)), (Permutation (a :: gv0) (l2 ++ l2)), (Permutation (a :: gv0) (l2 ++ l1)), (Permutation (a :: gv0) (l2 ++ gv0)), (Permutation (a :: gv0) (l1 ++ l2))
(Permutation (a :: gv0) (l1 ++ gv0)), (Permutation (a :: gv0) (gv0 ++ l2)), (Permutation (a :: gv0) (gv0 ++ l1)), (Permutation (a :: gv0) (gv0 ++ gv0)), (Permutation (a :: gv0) []), (Permutation (b :: l2) gv0), (Permutation (b :: l2) (a0 :: gv0)), (Permutation (b :: l2) (a :: gv0)), (Permutation (b :: l2) (b :: gv0)), (Permutation (b :: l2) (merge l2 gv0))
(Permutation (b :: l2) (merge gv0 l2)), (Permutation (b :: l2) (merge gv0 l1)), (Permutation (b :: l2) (merge gv0 gv0)), (Permutation (b :: l2) (l2 ++ gv0)), (Permutation (b :: l2) (l1 ++ gv0)), (Permutation (b :: l2) (gv0 ++ l2)), (Permutation (b :: l2) (gv0 ++ l1)), (Permutation (b :: l2) (gv0 ++ gv0)), (Permutation (b :: l1) gv0), (Permutation (b :: l1) (a0 :: gv0))
(Permutation (b :: l1) (b :: gv0)), (Permutation (b :: l1) (merge l2 gv0)), (Permutation (b :: l1) (merge l1 gv0)), (Permutation (b :: l1) (merge gv0 l2)), (Permutation (b :: l1) (merge gv0 l1)), (Permutation (b :: l1) (merge gv0 gv0)), (Permutation (b :: l1) (l2 ++ gv0)), (Permutation (b :: l1) (l1 ++ gv0)), (Permutation (b :: l1) (gv0 ++ l2)), (Permutation (b :: l1) (gv0 ++ l1))
(Permutation (b :: gv0) l2), (Permutation (b :: gv0) l1), (Permutation (b :: gv0) gv0), (Permutation (b :: gv0) (a0 :: l2)), (Permutation (b :: gv0) (a0 :: l1)), (Permutation (b :: gv0) (a0 :: gv0)), (Permutation (b :: gv0) (a :: l2)), (Permutation (b :: gv0) (a :: l1)), (Permutation (b :: gv0) (a :: gv0)), (Permutation (b :: gv0) (b :: l2))
(Permutation (b :: gv0) (merge l2 l2)), (Permutation (b :: gv0) (merge l2 l1)), (Permutation (b :: gv0) (merge l2 gv0)), (Permutation (b :: gv0) (merge l1 l2)), (Permutation (b :: gv0) (merge l1 l1)), (Permutation (b :: gv0) (merge l1 gv0)), (Permutation (b :: gv0) (merge gv0 l2)), (Permutation (b :: gv0) (merge gv0 l1)), (Permutation (b :: gv0) (merge gv0 gv0)), (Permutation (b :: gv0) (l2 ++ l2))
(Permutation (b :: gv0) (l2 ++ gv0)), (Permutation (b :: gv0) (l1 ++ l2)), (Permutation (b :: gv0) (l1 ++ l1)), (Permutation (b :: gv0) (l1 ++ gv0)), (Permutation (b :: gv0) (gv0 ++ l2)), (Permutation (b :: gv0) (gv0 ++ l1)), (Permutation (b :: gv0) (gv0 ++ gv0)), (Permutation (b :: gv0) []), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (a0 :: gv0))
(Permutation (merge l2 l2) (b :: gv0)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge l1 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 l1)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (l1 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ l1))
(Permutation (merge l2 l1) gv0), (Permutation (merge l2 l1) (a0 :: gv0)), (Permutation (merge l2 l1) (a :: gv0)), (Permutation (merge l2 l1) (b :: gv0)), (Permutation (merge l2 l1) (merge l2 gv0)), (Permutation (merge l2 l1) (merge l1 gv0)), (Permutation (merge l2 l1) (merge gv0 l2)), (Permutation (merge l2 l1) (merge gv0 l1)), (Permutation (merge l2 l1) (merge gv0 gv0)), (Permutation (merge l2 l1) (l2 ++ gv0))
(Permutation (merge l2 l1) (gv0 ++ l2)), (Permutation (merge l2 l1) (gv0 ++ l1)), (Permutation (merge l2 l1) (gv0 ++ gv0)), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) l1), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (a0 :: l2)), (Permutation (merge l2 gv0) (a0 :: l1)), (Permutation (merge l2 gv0) (a0 :: gv0)), (Permutation (merge l2 gv0) (a :: l2))
(Permutation (merge l2 gv0) (a :: gv0)), (Permutation (merge l2 gv0) (b :: l2)), (Permutation (merge l2 gv0) (b :: l1)), (Permutation (merge l2 gv0) (b :: gv0)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 l1)), (Permutation (merge l2 gv0) (merge l1 l2)), (Permutation (merge l2 gv0) (merge l1 l1)), (Permutation (merge l2 gv0) (merge l1 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2))
(Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ l1)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (l1 ++ l2)), (Permutation (merge l2 gv0) (l1 ++ l1)), (Permutation (merge l2 gv0) (l1 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ l1)), (Permutation (merge l2 gv0) (gv0 ++ gv0))
(Permutation (merge l1 l2) gv0), (Permutation (merge l1 l2) (a0 :: gv0)), (Permutation (merge l1 l2) (a :: gv0)), (Permutation (merge l1 l2) (b :: gv0)), (Permutation (merge l1 l2) (merge l2 gv0)), (Permutation (merge l1 l2) (merge l1 gv0)), (Permutation (merge l1 l2) (merge gv0 l2)), (Permutation (merge l1 l2) (merge gv0 l1)), (Permutation (merge l1 l2) (merge gv0 gv0)), (Permutation (merge l1 l2) (l2 ++ gv0))
(Permutation (merge l1 l2) (gv0 ++ l2)), (Permutation (merge l1 l2) (gv0 ++ l1)), (Permutation (merge l1 l2) (gv0 ++ gv0)), (Permutation (merge l1 l1) gv0), (Permutation (merge l1 l1) (a0 :: gv0)), (Permutation (merge l1 l1) (a :: gv0)), (Permutation (merge l1 l1) (b :: gv0)), (Permutation (merge l1 l1) (merge l2 gv0)), (Permutation (merge l1 l1) (merge l1 gv0)), (Permutation (merge l1 l1) (merge gv0 l2))
(Permutation (merge l1 l1) (merge gv0 gv0)), (Permutation (merge l1 l1) (l2 ++ gv0)), (Permutation (merge l1 l1) (l1 ++ gv0)), (Permutation (merge l1 l1) (gv0 ++ l2)), (Permutation (merge l1 l1) (gv0 ++ l1)), (Permutation (merge l1 l1) (gv0 ++ gv0)), (Permutation (merge l1 gv0) l2), (Permutation (merge l1 gv0) l1), (Permutation (merge l1 gv0) gv0), (Permutation (merge l1 gv0) (a0 :: l2))
(Permutation (merge l1 gv0) (a0 :: gv0)), (Permutation (merge l1 gv0) (a :: l2)), (Permutation (merge l1 gv0) (a :: l1)), (Permutation (merge l1 gv0) (a :: gv0)), (Permutation (merge l1 gv0) (b :: l2)), (Permutation (merge l1 gv0) (b :: l1)), (Permutation (merge l1 gv0) (b :: gv0)), (Permutation (merge l1 gv0) (merge l2 l2)), (Permutation (merge l1 gv0) (merge l2 l1)), (Permutation (merge l1 gv0) (merge l2 gv0))
(Permutation (merge l1 gv0) (merge l1 l1)), (Permutation (merge l1 gv0) (merge gv0 l2)), (Permutation (merge l1 gv0) (merge gv0 l1)), (Permutation (merge l1 gv0) (merge gv0 gv0)), (Permutation (merge l1 gv0) (l2 ++ l2)), (Permutation (merge l1 gv0) (l2 ++ l1)), (Permutation (merge l1 gv0) (l2 ++ gv0)), (Permutation (merge l1 gv0) (l1 ++ l2)), (Permutation (merge l1 gv0) (l1 ++ l1)), (Permutation (merge l1 gv0) (l1 ++ gv0))
(Permutation (merge l1 gv0) (gv0 ++ l1)), (Permutation (merge l1 gv0) (gv0 ++ gv0)), (Permutation (merge l1 gv0) []), (Permutation (merge gv0 l2) l2), (Permutation (merge gv0 l2) l1), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (a0 :: l2)), (Permutation (merge gv0 l2) (a0 :: l1)), (Permutation (merge gv0 l2) (a0 :: gv0)), (Permutation (merge gv0 l2) (a :: l2))
(Permutation (merge gv0 l2) (a :: gv0)), (Permutation (merge gv0 l2) (b :: l2)), (Permutation (merge gv0 l2) (b :: l1)), (Permutation (merge gv0 l2) (b :: gv0)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 l1)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge l1 l2)), (Permutation (merge gv0 l2) (merge l1 l1)), (Permutation (merge gv0 l2) (merge l1 gv0))
(Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ l1)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (l1 ++ l2)), (Permutation (merge gv0 l2) (l1 ++ l1)), (Permutation (merge gv0 l2) (l1 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ l1)), (Permutation (merge gv0 l2) (gv0 ++ gv0))
(Permutation (merge gv0 l1) l2), (Permutation (merge gv0 l1) l1), (Permutation (merge gv0 l1) gv0), (Permutation (merge gv0 l1) (a0 :: l2)), (Permutation (merge gv0 l1) (a0 :: l1)), (Permutation (merge gv0 l1) (a0 :: gv0)), (Permutation (merge gv0 l1) (a :: l2)), (Permutation (merge gv0 l1) (a :: l1)), (Permutation (merge gv0 l1) (a :: gv0)), (Permutation (merge gv0 l1) (b :: l2))
(Permutation (merge gv0 l1) (b :: gv0)), (Permutation (merge gv0 l1) (merge l2 l2)), (Permutation (merge gv0 l1) (merge l2 l1)), (Permutation (merge gv0 l1) (merge l2 gv0)), (Permutation (merge gv0 l1) (merge l1 l2)), (Permutation (merge gv0 l1) (merge l1 l1)), (Permutation (merge gv0 l1) (merge l1 gv0)), (Permutation (merge gv0 l1) (merge gv0 l2)), (Permutation (merge gv0 l1) (merge gv0 gv0)), (Permutation (merge gv0 l1) (l2 ++ l2))
(Permutation (merge gv0 l1) (l2 ++ gv0)), (Permutation (merge gv0 l1) (l1 ++ l2)), (Permutation (merge gv0 l1) (l1 ++ l1)), (Permutation (merge gv0 l1) (l1 ++ gv0)), (Permutation (merge gv0 l1) (gv0 ++ l2)), (Permutation (merge gv0 l1) (gv0 ++ l1)), (Permutation (merge gv0 l1) (gv0 ++ gv0)), (Permutation (merge gv0 l1) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) l1)
(Permutation (merge gv0 gv0) (a0 :: l2)), (Permutation (merge gv0 gv0) (a0 :: l1)), (Permutation (merge gv0 gv0) (a0 :: gv0)), (Permutation (merge gv0 gv0) (a :: l2)), (Permutation (merge gv0 gv0) (a :: l1)), (Permutation (merge gv0 gv0) (a :: gv0)), (Permutation (merge gv0 gv0) (b :: l2)), (Permutation (merge gv0 gv0) (b :: l1)), (Permutation (merge gv0 gv0) (b :: gv0)), (Permutation (merge gv0 gv0) (merge l2 l2))
(Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge l1 l2)), (Permutation (merge gv0 gv0) (merge l1 l1)), (Permutation (merge gv0 gv0) (merge l1 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 l1)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ l1)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (l1 ++ l2))
(Permutation (merge gv0 gv0) (l1 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ l1)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (a0 :: gv0)), (Permutation (l2 ++ l2) (a :: gv0)), (Permutation (l2 ++ l2) (b :: gv0)), (Permutation (l2 ++ l2) (merge l2 gv0))
(Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 l1)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (l1 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ l1)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l1) gv0), (Permutation (l2 ++ l1) (a0 :: gv0))
(Permutation (l2 ++ l1) (b :: gv0)), (Permutation (l2 ++ l1) (merge l2 gv0)), (Permutation (l2 ++ l1) (merge l1 gv0)), (Permutation (l2 ++ l1) (merge gv0 l2)), (Permutation (l2 ++ l1) (merge gv0 l1)), (Permutation (l2 ++ l1) (merge gv0 gv0)), (Permutation (l2 ++ l1) (l2 ++ gv0)), (Permutation (l2 ++ l1) (l1 ++ gv0)), (Permutation (l2 ++ l1) (gv0 ++ l2)), (Permutation (l2 ++ l1) (gv0 ++ l1))
(Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) l1), (Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (a0 :: l2)), (Permutation (l2 ++ gv0) (a0 :: l1)), (Permutation (l2 ++ gv0) (a0 :: gv0)), (Permutation (l2 ++ gv0) (a :: l2)), (Permutation (l2 ++ gv0) (a :: l1)), (Permutation (l2 ++ gv0) (a :: gv0)), (Permutation (l2 ++ gv0) (b :: l2))
(Permutation (l2 ++ gv0) (b :: gv0)), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 l1)), (Permutation (l2 ++ gv0) (merge l2 gv0)), (Permutation (l2 ++ gv0) (merge l1 l2)), (Permutation (l2 ++ gv0) (merge l1 l1)), (Permutation (l2 ++ gv0) (merge l1 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 l1)), (Permutation (l2 ++ gv0) (merge gv0 gv0))
(Permutation (l2 ++ gv0) (l2 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ l2)), (Permutation (l2 ++ gv0) (l1 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ l1)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (l1 ++ l2) gv0), (Permutation (l1 ++ l2) (a0 :: gv0))
(Permutation (l1 ++ l2) (b :: gv0)), (Permutation (l1 ++ l2) (merge l2 gv0)), (Permutation (l1 ++ l2) (merge l1 gv0)), (Permutation (l1 ++ l2) (merge gv0 l2)), (Permutation (l1 ++ l2) (merge gv0 l1)), (Permutation (l1 ++ l2) (merge gv0 gv0)), (Permutation (l1 ++ l2) (l2 ++ gv0)), (Permutation (l1 ++ l2) (l1 ++ gv0)), (Permutation (l1 ++ l2) (gv0 ++ l2)), (Permutation (l1 ++ l2) (gv0 ++ l1))
(Permutation (l1 ++ l1) gv0), (Permutation (l1 ++ l1) (a0 :: gv0)), (Permutation (l1 ++ l1) (a :: gv0)), (Permutation (l1 ++ l1) (b :: gv0)), (Permutation (l1 ++ l1) (merge l2 gv0)), (Permutation (l1 ++ l1) (merge l1 gv0)), (Permutation (l1 ++ l1) (merge gv0 l2)), (Permutation (l1 ++ l1) (merge gv0 l1)), (Permutation (l1 ++ l1) (merge gv0 gv0)), (Permutation (l1 ++ l1) (l2 ++ gv0))
(Permutation (l1 ++ l1) (gv0 ++ l2)), (Permutation (l1 ++ l1) (gv0 ++ l1)), (Permutation (l1 ++ l1) (gv0 ++ gv0)), (Permutation (l1 ++ gv0) l2), (Permutation (l1 ++ gv0) l1), (Permutation (l1 ++ gv0) gv0), (Permutation (l1 ++ gv0) (a0 :: l2)), (Permutation (l1 ++ gv0) (a0 :: l1)), (Permutation (l1 ++ gv0) (a0 :: gv0)), (Permutation (l1 ++ gv0) (a :: l2))
(Permutation (l1 ++ gv0) (a :: gv0)), (Permutation (l1 ++ gv0) (b :: l2)), (Permutation (l1 ++ gv0) (b :: l1)), (Permutation (l1 ++ gv0) (b :: gv0)), (Permutation (l1 ++ gv0) (merge l2 l2)), (Permutation (l1 ++ gv0) (merge l2 l1)), (Permutation (l1 ++ gv0) (merge l2 gv0)), (Permutation (l1 ++ gv0) (merge l1 l2)), (Permutation (l1 ++ gv0) (merge l1 l1)), (Permutation (l1 ++ gv0) (merge l1 gv0))
(Permutation (l1 ++ gv0) (merge gv0 l1)), (Permutation (l1 ++ gv0) (merge gv0 gv0)), (Permutation (l1 ++ gv0) (l2 ++ l2)), (Permutation (l1 ++ gv0) (l2 ++ l1)), (Permutation (l1 ++ gv0) (l2 ++ gv0)), (Permutation (l1 ++ gv0) (l1 ++ l2)), (Permutation (l1 ++ gv0) (l1 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ l2)), (Permutation (l1 ++ gv0) (gv0 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ gv0))
(Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) l1), (Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (a0 :: l2)), (Permutation (gv0 ++ l2) (a0 :: l1)), (Permutation (gv0 ++ l2) (a0 :: gv0)), (Permutation (gv0 ++ l2) (a :: l2)), (Permutation (gv0 ++ l2) (a :: l1)), (Permutation (gv0 ++ l2) (a :: gv0)), (Permutation (gv0 ++ l2) (b :: l2))
(Permutation (gv0 ++ l2) (b :: gv0)), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 l1)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge l1 l2)), (Permutation (gv0 ++ l2) (merge l1 l1)), (Permutation (gv0 ++ l2) (merge l1 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 l1)), (Permutation (gv0 ++ l2) (merge gv0 gv0))
(Permutation (gv0 ++ l2) (l2 ++ l1)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (l1 ++ l2)), (Permutation (gv0 ++ l2) (l1 ++ l1)), (Permutation (gv0 ++ l2) (l1 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ l1)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ l1) l2), (Permutation (gv0 ++ l1) l1)
(Permutation (gv0 ++ l1) (a0 :: l2)), (Permutation (gv0 ++ l1) (a0 :: l1)), (Permutation (gv0 ++ l1) (a0 :: gv0)), (Permutation (gv0 ++ l1) (a :: l2)), (Permutation (gv0 ++ l1) (a :: l1)), (Permutation (gv0 ++ l1) (a :: gv0)), (Permutation (gv0 ++ l1) (b :: l2)), (Permutation (gv0 ++ l1) (b :: l1)), (Permutation (gv0 ++ l1) (b :: gv0)), (Permutation (gv0 ++ l1) (merge l2 l2))
(Permutation (gv0 ++ l1) (merge l2 gv0)), (Permutation (gv0 ++ l1) (merge l1 l2)), (Permutation (gv0 ++ l1) (merge l1 l1)), (Permutation (gv0 ++ l1) (merge l1 gv0)), (Permutation (gv0 ++ l1) (merge gv0 l2)), (Permutation (gv0 ++ l1) (merge gv0 l1)), (Permutation (gv0 ++ l1) (merge gv0 gv0)), (Permutation (gv0 ++ l1) (l2 ++ l2)), (Permutation (gv0 ++ l1) (l2 ++ l1)), (Permutation (gv0 ++ l1) (l2 ++ gv0))
(Permutation (gv0 ++ l1) (l1 ++ l1)), (Permutation (gv0 ++ l1) (l1 ++ gv0)), (Permutation (gv0 ++ l1) (gv0 ++ l2)), (Permutation (gv0 ++ l1) (gv0 ++ gv0)), (Permutation (gv0 ++ l1) []), (Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) l1), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (a0 :: l2)), (Permutation (gv0 ++ gv0) (a0 :: l1))
(Permutation (gv0 ++ gv0) (a :: l2)), (Permutation (gv0 ++ gv0) (a :: l1)), (Permutation (gv0 ++ gv0) (a :: gv0)), (Permutation (gv0 ++ gv0) (b :: l2)), (Permutation (gv0 ++ gv0) (b :: l1)), (Permutation (gv0 ++ gv0) (b :: gv0)), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 l1)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge l1 l2))
(Permutation (gv0 ++ gv0) (merge l1 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 l1)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ l1)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (l1 ++ l2)), (Permutation (gv0 ++ gv0) (l1 ++ l1)), (Permutation (gv0 ++ gv0) (l1 ++ gv0))
(Permutation (gv0 ++ gv0) (gv0 ++ l1)), (Permutation (gv0 ++ gv0) []), (Permutation [] gv0), (Permutation [] (a0 :: gv0)), (Permutation [] (a :: gv0)), (Permutation [] (b :: gv0)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge l1 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 l1))
(Permutation [] (l2 ++ gv0)), (Permutation [] (l1 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ l1)), (Permutation [] (gv0 ++ gv0)), (In a0 gv0), (In a0 (a0 :: gv0)), (In a0 (a :: gv0)), (In a0 (b :: gv0)), (In a0 (merge l2 gv0))
(In a0 (merge gv0 l2)), (In a0 (merge gv0 l1)), (In a0 (merge gv0 gv0)), (In a0 (l2 ++ gv0)), (In a0 (l1 ++ gv0)), (In a0 (gv0 ++ l2)), (In a0 (gv0 ++ l1)), (In a0 (gv0 ++ gv0)), (In a gv0), (In a (a0 :: gv0))
(In a (b :: gv0)), (In a (merge l2 gv0)), (In a (merge l1 gv0)), (In a (merge gv0 l2)), (In a (merge gv0 l1)), (In a (merge gv0 gv0)), (In a (l2 ++ gv0)), (In a (l1 ++ gv0)), (In a (gv0 ++ l2)), (In a (gv0 ++ l1))
(In b gv0), (In b (a0 :: gv0)), (In b (a :: gv0)), (In b (b :: gv0)), (In b (merge l2 gv0)), (In b (merge l1 gv0)), (In b (merge gv0 l2)), (In b (merge gv0 l1)), (In b (merge gv0 gv0)), (In b (l2 ++ gv0))
(In b (gv0 ++ l2)), (In b (gv0 ++ l1)), (In b (gv0 ++ gv0)), (In (length l2) gv0), (In (length l2) (a0 :: gv0)), (In (length l2) (a :: gv0)), (In (length l2) (b :: gv0)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge l1 gv0)), (In (length l2) (merge gv0 l2))
(In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ gv0)), (In (length l2) (l1 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ l1)), (In (length l2) (gv0 ++ gv0)), (In (length l1) gv0), (In (length l1) (a0 :: gv0)), (In (length l1) (a :: gv0)), (In (length l1) (b :: gv0))
(In (length l1) (merge l1 gv0)), (In (length l1) (merge gv0 l2)), (In (length l1) (merge gv0 l1)), (In (length l1) (merge gv0 gv0)), (In (length l1) (l2 ++ gv0)), (In (length l1) (l1 ++ gv0)), (In (length l1) (gv0 ++ l2)), (In (length l1) (gv0 ++ l1)), (In (length l1) (gv0 ++ gv0)), (In (length gv0) l2)
(In (length gv0) gv0), (In (length gv0) (a0 :: l2)), (In (length gv0) (a0 :: l1)), (In (length gv0) (a0 :: gv0)), (In (length gv0) (a :: l2)), (In (length gv0) (a :: l1)), (In (length gv0) (a :: gv0)), (In (length gv0) (b :: l2)), (In (length gv0) (b :: l1)), (In (length gv0) (b :: gv0))
(In (length gv0) (merge l2 l1)), (In (length gv0) (merge l2 gv0)), (In (length gv0) (merge l1 l2)), (In (length gv0) (merge l1 l1)), (In (length gv0) (merge l1 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 l1)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ l1))
(In (length gv0) (l1 ++ l2)), (In (length gv0) (l1 ++ l1)), (In (length gv0) (l1 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ l1)), (In (length gv0) (gv0 ++ gv0)), (a0 < length gv0), (a < length gv0), (b < length gv0), (length l2 < length gv0)
(length gv0 < a0), (length gv0 < a), (length gv0 < b), (length gv0 < length l2), (length gv0 < length l1), (a0 <= length gv0), (a <= length gv0), (b <= length gv0), (length l2 <= length gv0), (length l1 <= length gv0)
(length gv0 <= a), (length gv0 <= b), (length gv0 <= length l2), (length gv0 <= length l1), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = l1 ++ gv0), (merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ l1), (merge l2 l2 = gv0 ++ gv0)
(merge l2 l1 = l2 ++ gv0), (merge l2 l1 = l1 ++ gv0), (merge l2 l1 = gv0 ++ l2), (merge l2 l1 = gv0 ++ l1), (merge l2 l1 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = l1), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ l1)
(merge l2 gv0 = l1 ++ l2), (merge l2 gv0 = l1 ++ l1), (merge l2 gv0 = l1 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ l1), (merge l2 gv0 = gv0 ++ gv0), (merge l1 l2 = gv0), (merge l1 l2 = l2 ++ gv0), (merge l1 l2 = l1 ++ gv0), (merge l1 l2 = gv0 ++ l2)
(merge l1 l2 = gv0 ++ gv0), (merge l1 l1 = gv0), (merge l1 l1 = l2 ++ gv0), (merge l1 l1 = l1 ++ gv0), (merge l1 l1 = gv0 ++ l2), (merge l1 l1 = gv0 ++ l1), (merge l1 l1 = gv0 ++ gv0), (merge l1 gv0 = l2), (merge l1 gv0 = l1), (merge l1 gv0 = gv0)
(merge l1 gv0 = l2 ++ l1), (merge l1 gv0 = l2 ++ gv0), (merge l1 gv0 = l1 ++ l2), (merge l1 gv0 = l1 ++ l1), (merge l1 gv0 = l1 ++ gv0), (merge l1 gv0 = gv0 ++ l2), (merge l1 gv0 = gv0 ++ l1), (merge l1 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = l1)
(merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ l1), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = l1 ++ l2), (merge gv0 l2 = l1 ++ l1), (merge gv0 l2 = l1 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ l1), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 l1 = l2)
(merge gv0 l1 = gv0), (merge gv0 l1 = l2 ++ l2), (merge gv0 l1 = l2 ++ l1), (merge gv0 l1 = l2 ++ gv0), (merge gv0 l1 = l1 ++ l2), (merge gv0 l1 = l1 ++ l1), (merge gv0 l1 = l1 ++ gv0), (merge gv0 l1 = gv0 ++ l2), (merge gv0 l1 = gv0 ++ l1), (merge gv0 l1 = gv0 ++ gv0)
(merge gv0 gv0 = l1), (merge gv0 gv0 = gv0), (merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ l1), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = l1 ++ l2), (merge gv0 gv0 = l1 ++ l1), (merge gv0 gv0 = l1 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ l1)
(l2 ++ l2 = gv0), (l2 ++ l1 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = l1), (l2 ++ gv0 = gv0), (l1 ++ l2 = gv0), (l1 ++ l1 = gv0), (l1 ++ gv0 = l2), (l1 ++ gv0 = l1), (l1 ++ gv0 = gv0)
(gv0 ++ l2 = l1), (gv0 ++ l2 = gv0), (gv0 ++ l1 = l2), (gv0 ++ l1 = l1), (gv0 ++ l1 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = l1), (gv0 ++ gv0 = gv0), (length gv0 = a0), (length gv0 = a)

Label: 0 (1)
(false = sorted_bool gv0), (true = sorted_bool gv0), (a0 <=* gv0), (a0 <=* a0 :: gv0), (a0 <=* a :: gv0), (a0 <=* b :: gv0), (a0 <=* merge l2 gv0), (a0 <=* merge l1 gv0), (a0 <=* merge gv0 l2), (a0 <=* merge gv0 l1)
(a0 <=* l2 ++ gv0), (a0 <=* l1 ++ gv0), (a0 <=* gv0 ++ l2), (a0 <=* gv0 ++ l1), (a0 <=* gv0 ++ gv0), (a <=* gv0), (a <=* a0 :: gv0), (a <=* a :: gv0), (a <=* b :: gv0), (a <=* merge l2 gv0)
(a <=* merge gv0 l2), (a <=* merge gv0 l1), (a <=* merge gv0 gv0), (a <=* l2 ++ gv0), (a <=* l1 ++ gv0), (a <=* gv0 ++ l2), (a <=* gv0 ++ l1), (a <=* gv0 ++ gv0), (b <=* gv0), (b <=* a0 :: gv0)
(b <=* b :: gv0), (b <=* merge l2 gv0), (b <=* merge l1 gv0), (b <=* merge gv0 l2), (b <=* merge gv0 l1), (b <=* merge gv0 gv0), (b <=* l2 ++ gv0), (b <=* l1 ++ gv0), (b <=* gv0 ++ l2), (b <=* gv0 ++ l1)
(length l2 <=* gv0), (length l2 <=* a0 :: gv0), (length l2 <=* a :: gv0), (length l2 <=* b :: gv0), (length l2 <=* merge l2 gv0), (length l2 <=* merge l1 gv0), (length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 l1), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ gv0)
(length l2 <=* gv0 ++ l2), (length l2 <=* gv0 ++ l1), (length l2 <=* gv0 ++ gv0), (length l1 <=* gv0), (length l1 <=* a0 :: gv0), (length l1 <=* a :: gv0), (length l1 <=* b :: gv0), (length l1 <=* merge l2 gv0), (length l1 <=* merge l1 gv0), (length l1 <=* merge gv0 l2)
(length l1 <=* merge gv0 gv0), (length l1 <=* l2 ++ gv0), (length l1 <=* l1 ++ gv0), (length l1 <=* gv0 ++ l2), (length l1 <=* gv0 ++ l1), (length l1 <=* gv0 ++ gv0), (length gv0 <=* l2), (length gv0 <=* l1), (length gv0 <=* gv0), (length gv0 <=* a0 :: l2)
(length gv0 <=* a0 :: gv0), (length gv0 <=* a :: l2), (length gv0 <=* a :: l1), (length gv0 <=* a :: gv0), (length gv0 <=* b :: l2), (length gv0 <=* b :: l1), (length gv0 <=* b :: gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 l1), (length gv0 <=* merge l2 gv0)
(length gv0 <=* merge l1 l1), (length gv0 <=* merge l1 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 l1), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ l1), (length gv0 <=* l2 ++ gv0), (length gv0 <=* l1 ++ l2), (length gv0 <=* l1 ++ l1)
(length gv0 <=* gv0 ++ l2), (length gv0 <=* gv0 ++ l1), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted gv0), (sorted (a0 :: gv0)), (sorted (a :: gv0)), (sorted (b :: gv0)), (sorted (merge l2 gv0)), (sorted (merge l1 gv0))
(sorted (merge gv0 l1)), (sorted (merge gv0 gv0)), (sorted (l2 ++ gv0)), (sorted (l1 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ l1)), (sorted (gv0 ++ gv0)), (Permutation l2 gv0), (Permutation l2 (a0 :: gv0)), (Permutation l2 (a :: gv0))
(Permutation l2 (merge l2 gv0)), (Permutation l2 (merge l1 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 l1)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (l1 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ l1)), (Permutation l2 (gv0 ++ gv0))
(Permutation l1 (a0 :: gv0)), (Permutation l1 (a :: gv0)), (Permutation l1 (b :: gv0)), (Permutation l1 (merge l2 gv0)), (Permutation l1 (merge l1 gv0)), (Permutation l1 (merge gv0 l2)), (Permutation l1 (merge gv0 l1)), (Permutation l1 (merge gv0 gv0)), (Permutation l1 (l2 ++ gv0)), (Permutation l1 (l1 ++ gv0))
(Permutation l1 (gv0 ++ l1)), (Permutation l1 (gv0 ++ gv0)), (Permutation gv0 l2), (Permutation gv0 l1), (Permutation gv0 (a0 :: l2)), (Permutation gv0 (a0 :: l1)), (Permutation gv0 (a0 :: gv0)), (Permutation gv0 (a :: l2)), (Permutation gv0 (a :: l1)), (Permutation gv0 (a :: gv0))
(Permutation gv0 (b :: l1)), (Permutation gv0 (b :: gv0)), (Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 l1)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge l1 l2)), (Permutation gv0 (merge l1 l1)), (Permutation gv0 (merge l1 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 l1))
(Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ l1)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (l1 ++ l2)), (Permutation gv0 (l1 ++ l1)), (Permutation gv0 (l1 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ l1)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 [])
(Permutation (a0 :: l2) (a0 :: gv0)), (Permutation (a0 :: l2) (a :: gv0)), (Permutation (a0 :: l2) (b :: gv0)), (Permutation (a0 :: l2) (merge l2 gv0)), (Permutation (a0 :: l2) (merge l1 gv0)), (Permutation (a0 :: l2) (merge gv0 l2)), (Permutation (a0 :: l2) (merge gv0 l1)), (Permutation (a0 :: l2) (merge gv0 gv0)), (Permutation (a0 :: l2) (l2 ++ gv0)), (Permutation (a0 :: l2) (l1 ++ gv0))
(Permutation (a0 :: l2) (gv0 ++ l1)), (Permutation (a0 :: l2) (gv0 ++ gv0)), (Permutation (a0 :: l1) gv0), (Permutation (a0 :: l1) (a0 :: gv0)), (Permutation (a0 :: l1) (a :: gv0)), (Permutation (a0 :: l1) (b :: gv0)), (Permutation (a0 :: l1) (merge l2 gv0)), (Permutation (a0 :: l1) (merge l1 gv0)), (Permutation (a0 :: l1) (merge gv0 l2)), (Permutation (a0 :: l1) (merge gv0 l1))
(Permutation (a0 :: l1) (l2 ++ gv0)), (Permutation (a0 :: l1) (l1 ++ gv0)), (Permutation (a0 :: l1) (gv0 ++ l2)), (Permutation (a0 :: l1) (gv0 ++ l1)), (Permutation (a0 :: l1) (gv0 ++ gv0)), (Permutation (a0 :: gv0) l2), (Permutation (a0 :: gv0) l1), (Permutation (a0 :: gv0) gv0), (Permutation (a0 :: gv0) (a0 :: l2)), (Permutation (a0 :: gv0) (a0 :: l1))
(Permutation (a0 :: gv0) (a :: l1)), (Permutation (a0 :: gv0) (a :: gv0)), (Permutation (a0 :: gv0) (b :: l2)), (Permutation (a0 :: gv0) (b :: l1)), (Permutation (a0 :: gv0) (b :: gv0)), (Permutation (a0 :: gv0) (merge l2 l2)), (Permutation (a0 :: gv0) (merge l2 l1)), (Permutation (a0 :: gv0) (merge l2 gv0)), (Permutation (a0 :: gv0) (merge l1 l2)), (Permutation (a0 :: gv0) (merge l1 l1))
(Permutation (a0 :: gv0) (merge gv0 l2)), (Permutation (a0 :: gv0) (merge gv0 l1)), (Permutation (a0 :: gv0) (merge gv0 gv0)), (Permutation (a0 :: gv0) (l2 ++ l2)), (Permutation (a0 :: gv0) (l2 ++ l1)), (Permutation (a0 :: gv0) (l2 ++ gv0)), (Permutation (a0 :: gv0) (l1 ++ l2)), (Permutation (a0 :: gv0) (l1 ++ l1)), (Permutation (a0 :: gv0) (l1 ++ gv0)), (Permutation (a0 :: gv0) (gv0 ++ l2))
(Permutation (a0 :: gv0) (gv0 ++ gv0)), (Permutation (a0 :: gv0) []), (Permutation (a :: l2) gv0), (Permutation (a :: l2) (a0 :: gv0)), (Permutation (a :: l2) (a :: gv0)), (Permutation (a :: l2) (b :: gv0)), (Permutation (a :: l2) (merge l2 gv0)), (Permutation (a :: l2) (merge l1 gv0)), (Permutation (a :: l2) (merge gv0 l2)), (Permutation (a :: l2) (merge gv0 l1))
(Permutation (a :: l2) (l2 ++ gv0)), (Permutation (a :: l2) (l1 ++ gv0)), (Permutation (a :: l2) (gv0 ++ l2)), (Permutation (a :: l2) (gv0 ++ l1)), (Permutation (a :: l2) (gv0 ++ gv0)), (Permutation (a :: l1) gv0), (Permutation (a :: l1) (a0 :: gv0)), (Permutation (a :: l1) (a :: gv0)), (Permutation (a :: l1) (b :: gv0)), (Permutation (a :: l1) (merge l2 gv0))
(Permutation (a :: l1) (merge gv0 l2)), (Permutation (a :: l1) (merge gv0 l1)), (Permutation (a :: l1) (merge gv0 gv0)), (Permutation (a :: l1) (l2 ++ gv0)), (Permutation (a :: l1) (l1 ++ gv0)), (Permutation (a :: l1) (gv0 ++ l2)), (Permutation (a :: l1) (gv0 ++ l1)), (Permutation (a :: l1) (gv0 ++ gv0)), (Permutation (a :: gv0) l2), (Permutation (a :: gv0) l1)
(Permutation (a :: gv0) (a0 :: l2)), (Permutation (a :: gv0) (a0 :: l1)), (Permutation (a :: gv0) (a0 :: gv0)), (Permutation (a :: gv0) (a :: l2)), (Permutation (a :: gv0) (a :: l1)), (Permutation (a :: gv0) (b :: l2)), (Permutation (a :: gv0) (b :: l1)), (Permutation (a :: gv0) (b :: gv0)), (Permutation (a :: gv0) (merge l2 l2)), (Permutation (a :: gv0) (merge l2 l1))
(Permutation (a :: gv0) (merge l1 l2)), (Permutation (a :: gv0) (merge l1 l1)), (Permutation (a :: gv0) (merge l1 gv0)), (Permutation (a :: gv0) (merge gv0 l2)), (Permutation (a :: gv0) (merge gv0 l1)), (Permutation (a :: gv0) (merge gv0 gv0)), (Permutation (a :: gv0) (l2 ++ l2)), (Permutation (a :: gv0) (l2 ++ l1)), (Permutation (a :: gv0) (l2 ++ gv0)), (Permutation (a :: gv0) (l1 ++ l2))
(Permutation (a :: gv0) (l1 ++ gv0)), (Permutation (a :: gv0) (gv0 ++ l2)), (Permutation (a :: gv0) (gv0 ++ l1)), (Permutation (a :: gv0) (gv0 ++ gv0)), (Permutation (a :: gv0) []), (Permutation (b :: l2) gv0), (Permutation (b :: l2) (a0 :: gv0)), (Permutation (b :: l2) (a :: gv0)), (Permutation (b :: l2) (b :: gv0)), (Permutation (b :: l2) (merge l2 gv0))
(Permutation (b :: l2) (merge gv0 l2)), (Permutation (b :: l2) (merge gv0 l1)), (Permutation (b :: l2) (merge gv0 gv0)), (Permutation (b :: l2) (l2 ++ gv0)), (Permutation (b :: l2) (l1 ++ gv0)), (Permutation (b :: l2) (gv0 ++ l2)), (Permutation (b :: l2) (gv0 ++ l1)), (Permutation (b :: l2) (gv0 ++ gv0)), (Permutation (b :: l1) gv0), (Permutation (b :: l1) (a0 :: gv0))
(Permutation (b :: l1) (b :: gv0)), (Permutation (b :: l1) (merge l2 gv0)), (Permutation (b :: l1) (merge l1 gv0)), (Permutation (b :: l1) (merge gv0 l2)), (Permutation (b :: l1) (merge gv0 l1)), (Permutation (b :: l1) (merge gv0 gv0)), (Permutation (b :: l1) (l2 ++ gv0)), (Permutation (b :: l1) (l1 ++ gv0)), (Permutation (b :: l1) (gv0 ++ l2)), (Permutation (b :: l1) (gv0 ++ l1))
(Permutation (b :: gv0) l2), (Permutation (b :: gv0) l1), (Permutation (b :: gv0) gv0), (Permutation (b :: gv0) (a0 :: l2)), (Permutation (b :: gv0) (a0 :: l1)), (Permutation (b :: gv0) (a0 :: gv0)), (Permutation (b :: gv0) (a :: l2)), (Permutation (b :: gv0) (a :: l1)), (Permutation (b :: gv0) (a :: gv0)), (Permutation (b :: gv0) (b :: l2))
(Permutation (b :: gv0) (merge l2 l2)), (Permutation (b :: gv0) (merge l2 l1)), (Permutation (b :: gv0) (merge l2 gv0)), (Permutation (b :: gv0) (merge l1 l2)), (Permutation (b :: gv0) (merge l1 l1)), (Permutation (b :: gv0) (merge l1 gv0)), (Permutation (b :: gv0) (merge gv0 l2)), (Permutation (b :: gv0) (merge gv0 l1)), (Permutation (b :: gv0) (merge gv0 gv0)), (Permutation (b :: gv0) (l2 ++ l2))
(Permutation (b :: gv0) (l2 ++ gv0)), (Permutation (b :: gv0) (l1 ++ l2)), (Permutation (b :: gv0) (l1 ++ l1)), (Permutation (b :: gv0) (l1 ++ gv0)), (Permutation (b :: gv0) (gv0 ++ l2)), (Permutation (b :: gv0) (gv0 ++ l1)), (Permutation (b :: gv0) (gv0 ++ gv0)), (Permutation (b :: gv0) []), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (a0 :: gv0))
(Permutation (merge l2 l2) (b :: gv0)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge l1 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 l1)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (l1 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ l1))
(Permutation (merge l2 l1) gv0), (Permutation (merge l2 l1) (a0 :: gv0)), (Permutation (merge l2 l1) (a :: gv0)), (Permutation (merge l2 l1) (b :: gv0)), (Permutation (merge l2 l1) (merge l2 gv0)), (Permutation (merge l2 l1) (merge l1 gv0)), (Permutation (merge l2 l1) (merge gv0 l2)), (Permutation (merge l2 l1) (merge gv0 l1)), (Permutation (merge l2 l1) (merge gv0 gv0)), (Permutation (merge l2 l1) (l2 ++ gv0))
(Permutation (merge l2 l1) (gv0 ++ l2)), (Permutation (merge l2 l1) (gv0 ++ l1)), (Permutation (merge l2 l1) (gv0 ++ gv0)), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) l1), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (a0 :: l2)), (Permutation (merge l2 gv0) (a0 :: l1)), (Permutation (merge l2 gv0) (a0 :: gv0)), (Permutation (merge l2 gv0) (a :: l2))
(Permutation (merge l2 gv0) (a :: gv0)), (Permutation (merge l2 gv0) (b :: l2)), (Permutation (merge l2 gv0) (b :: l1)), (Permutation (merge l2 gv0) (b :: gv0)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 l1)), (Permutation (merge l2 gv0) (merge l1 l2)), (Permutation (merge l2 gv0) (merge l1 l1)), (Permutation (merge l2 gv0) (merge l1 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2))
(Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ l1)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (l1 ++ l2)), (Permutation (merge l2 gv0) (l1 ++ l1)), (Permutation (merge l2 gv0) (l1 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ l1)), (Permutation (merge l2 gv0) (gv0 ++ gv0))
(Permutation (merge l1 l2) gv0), (Permutation (merge l1 l2) (a0 :: gv0)), (Permutation (merge l1 l2) (a :: gv0)), (Permutation (merge l1 l2) (b :: gv0)), (Permutation (merge l1 l2) (merge l2 gv0)), (Permutation (merge l1 l2) (merge l1 gv0)), (Permutation (merge l1 l2) (merge gv0 l2)), (Permutation (merge l1 l2) (merge gv0 l1)), (Permutation (merge l1 l2) (merge gv0 gv0)), (Permutation (merge l1 l2) (l2 ++ gv0))
(Permutation (merge l1 l2) (gv0 ++ l2)), (Permutation (merge l1 l2) (gv0 ++ l1)), (Permutation (merge l1 l2) (gv0 ++ gv0)), (Permutation (merge l1 l1) gv0), (Permutation (merge l1 l1) (a0 :: gv0)), (Permutation (merge l1 l1) (a :: gv0)), (Permutation (merge l1 l1) (b :: gv0)), (Permutation (merge l1 l1) (merge l2 gv0)), (Permutation (merge l1 l1) (merge l1 gv0)), (Permutation (merge l1 l1) (merge gv0 l2))
(Permutation (merge l1 l1) (merge gv0 gv0)), (Permutation (merge l1 l1) (l2 ++ gv0)), (Permutation (merge l1 l1) (l1 ++ gv0)), (Permutation (merge l1 l1) (gv0 ++ l2)), (Permutation (merge l1 l1) (gv0 ++ l1)), (Permutation (merge l1 l1) (gv0 ++ gv0)), (Permutation (merge l1 gv0) l2), (Permutation (merge l1 gv0) l1), (Permutation (merge l1 gv0) gv0), (Permutation (merge l1 gv0) (a0 :: l2))
(Permutation (merge l1 gv0) (a0 :: gv0)), (Permutation (merge l1 gv0) (a :: l2)), (Permutation (merge l1 gv0) (a :: l1)), (Permutation (merge l1 gv0) (a :: gv0)), (Permutation (merge l1 gv0) (b :: l2)), (Permutation (merge l1 gv0) (b :: l1)), (Permutation (merge l1 gv0) (b :: gv0)), (Permutation (merge l1 gv0) (merge l2 l2)), (Permutation (merge l1 gv0) (merge l2 l1)), (Permutation (merge l1 gv0) (merge l2 gv0))
(Permutation (merge l1 gv0) (merge l1 l1)), (Permutation (merge l1 gv0) (merge gv0 l2)), (Permutation (merge l1 gv0) (merge gv0 l1)), (Permutation (merge l1 gv0) (merge gv0 gv0)), (Permutation (merge l1 gv0) (l2 ++ l2)), (Permutation (merge l1 gv0) (l2 ++ l1)), (Permutation (merge l1 gv0) (l2 ++ gv0)), (Permutation (merge l1 gv0) (l1 ++ l2)), (Permutation (merge l1 gv0) (l1 ++ l1)), (Permutation (merge l1 gv0) (l1 ++ gv0))
(Permutation (merge l1 gv0) (gv0 ++ l1)), (Permutation (merge l1 gv0) (gv0 ++ gv0)), (Permutation (merge l1 gv0) []), (Permutation (merge gv0 l2) l2), (Permutation (merge gv0 l2) l1), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (a0 :: l2)), (Permutation (merge gv0 l2) (a0 :: l1)), (Permutation (merge gv0 l2) (a0 :: gv0)), (Permutation (merge gv0 l2) (a :: l2))
(Permutation (merge gv0 l2) (a :: gv0)), (Permutation (merge gv0 l2) (b :: l2)), (Permutation (merge gv0 l2) (b :: l1)), (Permutation (merge gv0 l2) (b :: gv0)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 l1)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge l1 l2)), (Permutation (merge gv0 l2) (merge l1 l1)), (Permutation (merge gv0 l2) (merge l1 gv0))
(Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ l1)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (l1 ++ l2)), (Permutation (merge gv0 l2) (l1 ++ l1)), (Permutation (merge gv0 l2) (l1 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ l1)), (Permutation (merge gv0 l2) (gv0 ++ gv0))
(Permutation (merge gv0 l1) l2), (Permutation (merge gv0 l1) l1), (Permutation (merge gv0 l1) gv0), (Permutation (merge gv0 l1) (a0 :: l2)), (Permutation (merge gv0 l1) (a0 :: l1)), (Permutation (merge gv0 l1) (a0 :: gv0)), (Permutation (merge gv0 l1) (a :: l2)), (Permutation (merge gv0 l1) (a :: l1)), (Permutation (merge gv0 l1) (a :: gv0)), (Permutation (merge gv0 l1) (b :: l2))
(Permutation (merge gv0 l1) (b :: gv0)), (Permutation (merge gv0 l1) (merge l2 l2)), (Permutation (merge gv0 l1) (merge l2 l1)), (Permutation (merge gv0 l1) (merge l2 gv0)), (Permutation (merge gv0 l1) (merge l1 l2)), (Permutation (merge gv0 l1) (merge l1 l1)), (Permutation (merge gv0 l1) (merge l1 gv0)), (Permutation (merge gv0 l1) (merge gv0 l2)), (Permutation (merge gv0 l1) (merge gv0 gv0)), (Permutation (merge gv0 l1) (l2 ++ l2))
(Permutation (merge gv0 l1) (l2 ++ gv0)), (Permutation (merge gv0 l1) (l1 ++ l2)), (Permutation (merge gv0 l1) (l1 ++ l1)), (Permutation (merge gv0 l1) (l1 ++ gv0)), (Permutation (merge gv0 l1) (gv0 ++ l2)), (Permutation (merge gv0 l1) (gv0 ++ l1)), (Permutation (merge gv0 l1) (gv0 ++ gv0)), (Permutation (merge gv0 l1) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) l1)
(Permutation (merge gv0 gv0) (a0 :: l2)), (Permutation (merge gv0 gv0) (a0 :: l1)), (Permutation (merge gv0 gv0) (a0 :: gv0)), (Permutation (merge gv0 gv0) (a :: l2)), (Permutation (merge gv0 gv0) (a :: l1)), (Permutation (merge gv0 gv0) (a :: gv0)), (Permutation (merge gv0 gv0) (b :: l2)), (Permutation (merge gv0 gv0) (b :: l1)), (Permutation (merge gv0 gv0) (b :: gv0)), (Permutation (merge gv0 gv0) (merge l2 l2))
(Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge l1 l2)), (Permutation (merge gv0 gv0) (merge l1 l1)), (Permutation (merge gv0 gv0) (merge l1 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 l1)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ l1)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (l1 ++ l2))
(Permutation (merge gv0 gv0) (l1 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ l1)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (a0 :: gv0)), (Permutation (l2 ++ l2) (a :: gv0)), (Permutation (l2 ++ l2) (b :: gv0)), (Permutation (l2 ++ l2) (merge l2 gv0))
(Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 l1)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (l1 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ l1)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l1) gv0), (Permutation (l2 ++ l1) (a0 :: gv0))
(Permutation (l2 ++ l1) (b :: gv0)), (Permutation (l2 ++ l1) (merge l2 gv0)), (Permutation (l2 ++ l1) (merge l1 gv0)), (Permutation (l2 ++ l1) (merge gv0 l2)), (Permutation (l2 ++ l1) (merge gv0 l1)), (Permutation (l2 ++ l1) (merge gv0 gv0)), (Permutation (l2 ++ l1) (l2 ++ gv0)), (Permutation (l2 ++ l1) (l1 ++ gv0)), (Permutation (l2 ++ l1) (gv0 ++ l2)), (Permutation (l2 ++ l1) (gv0 ++ l1))
(Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) l1), (Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (a0 :: l2)), (Permutation (l2 ++ gv0) (a0 :: l1)), (Permutation (l2 ++ gv0) (a0 :: gv0)), (Permutation (l2 ++ gv0) (a :: l2)), (Permutation (l2 ++ gv0) (a :: l1)), (Permutation (l2 ++ gv0) (a :: gv0)), (Permutation (l2 ++ gv0) (b :: l2))
(Permutation (l2 ++ gv0) (b :: gv0)), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 l1)), (Permutation (l2 ++ gv0) (merge l2 gv0)), (Permutation (l2 ++ gv0) (merge l1 l2)), (Permutation (l2 ++ gv0) (merge l1 l1)), (Permutation (l2 ++ gv0) (merge l1 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 l1)), (Permutation (l2 ++ gv0) (merge gv0 gv0))
(Permutation (l2 ++ gv0) (l2 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ l2)), (Permutation (l2 ++ gv0) (l1 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ l1)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (l1 ++ l2) gv0), (Permutation (l1 ++ l2) (a0 :: gv0))
(Permutation (l1 ++ l2) (b :: gv0)), (Permutation (l1 ++ l2) (merge l2 gv0)), (Permutation (l1 ++ l2) (merge l1 gv0)), (Permutation (l1 ++ l2) (merge gv0 l2)), (Permutation (l1 ++ l2) (merge gv0 l1)), (Permutation (l1 ++ l2) (merge gv0 gv0)), (Permutation (l1 ++ l2) (l2 ++ gv0)), (Permutation (l1 ++ l2) (l1 ++ gv0)), (Permutation (l1 ++ l2) (gv0 ++ l2)), (Permutation (l1 ++ l2) (gv0 ++ l1))
(Permutation (l1 ++ l1) gv0), (Permutation (l1 ++ l1) (a0 :: gv0)), (Permutation (l1 ++ l1) (a :: gv0)), (Permutation (l1 ++ l1) (b :: gv0)), (Permutation (l1 ++ l1) (merge l2 gv0)), (Permutation (l1 ++ l1) (merge l1 gv0)), (Permutation (l1 ++ l1) (merge gv0 l2)), (Permutation (l1 ++ l1) (merge gv0 l1)), (Permutation (l1 ++ l1) (merge gv0 gv0)), (Permutation (l1 ++ l1) (l2 ++ gv0))
(Permutation (l1 ++ l1) (gv0 ++ l2)), (Permutation (l1 ++ l1) (gv0 ++ l1)), (Permutation (l1 ++ l1) (gv0 ++ gv0)), (Permutation (l1 ++ gv0) l2), (Permutation (l1 ++ gv0) l1), (Permutation (l1 ++ gv0) gv0), (Permutation (l1 ++ gv0) (a0 :: l2)), (Permutation (l1 ++ gv0) (a0 :: l1)), (Permutation (l1 ++ gv0) (a0 :: gv0)), (Permutation (l1 ++ gv0) (a :: l2))
(Permutation (l1 ++ gv0) (a :: gv0)), (Permutation (l1 ++ gv0) (b :: l2)), (Permutation (l1 ++ gv0) (b :: l1)), (Permutation (l1 ++ gv0) (b :: gv0)), (Permutation (l1 ++ gv0) (merge l2 l2)), (Permutation (l1 ++ gv0) (merge l2 l1)), (Permutation (l1 ++ gv0) (merge l2 gv0)), (Permutation (l1 ++ gv0) (merge l1 l2)), (Permutation (l1 ++ gv0) (merge l1 l1)), (Permutation (l1 ++ gv0) (merge l1 gv0))
(Permutation (l1 ++ gv0) (merge gv0 l1)), (Permutation (l1 ++ gv0) (merge gv0 gv0)), (Permutation (l1 ++ gv0) (l2 ++ l2)), (Permutation (l1 ++ gv0) (l2 ++ l1)), (Permutation (l1 ++ gv0) (l2 ++ gv0)), (Permutation (l1 ++ gv0) (l1 ++ l2)), (Permutation (l1 ++ gv0) (l1 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ l2)), (Permutation (l1 ++ gv0) (gv0 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ gv0))
(Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) l1), (Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (a0 :: l2)), (Permutation (gv0 ++ l2) (a0 :: l1)), (Permutation (gv0 ++ l2) (a0 :: gv0)), (Permutation (gv0 ++ l2) (a :: l2)), (Permutation (gv0 ++ l2) (a :: l1)), (Permutation (gv0 ++ l2) (a :: gv0)), (Permutation (gv0 ++ l2) (b :: l2))
(Permutation (gv0 ++ l2) (b :: gv0)), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 l1)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge l1 l2)), (Permutation (gv0 ++ l2) (merge l1 l1)), (Permutation (gv0 ++ l2) (merge l1 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 l1)), (Permutation (gv0 ++ l2) (merge gv0 gv0))
(Permutation (gv0 ++ l2) (l2 ++ l1)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (l1 ++ l2)), (Permutation (gv0 ++ l2) (l1 ++ l1)), (Permutation (gv0 ++ l2) (l1 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ l1)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ l1) l2), (Permutation (gv0 ++ l1) l1)
(Permutation (gv0 ++ l1) (a0 :: l2)), (Permutation (gv0 ++ l1) (a0 :: l1)), (Permutation (gv0 ++ l1) (a0 :: gv0)), (Permutation (gv0 ++ l1) (a :: l2)), (Permutation (gv0 ++ l1) (a :: l1)), (Permutation (gv0 ++ l1) (a :: gv0)), (Permutation (gv0 ++ l1) (b :: l2)), (Permutation (gv0 ++ l1) (b :: l1)), (Permutation (gv0 ++ l1) (b :: gv0)), (Permutation (gv0 ++ l1) (merge l2 l2))
(Permutation (gv0 ++ l1) (merge l2 gv0)), (Permutation (gv0 ++ l1) (merge l1 l2)), (Permutation (gv0 ++ l1) (merge l1 l1)), (Permutation (gv0 ++ l1) (merge l1 gv0)), (Permutation (gv0 ++ l1) (merge gv0 l2)), (Permutation (gv0 ++ l1) (merge gv0 l1)), (Permutation (gv0 ++ l1) (merge gv0 gv0)), (Permutation (gv0 ++ l1) (l2 ++ l2)), (Permutation (gv0 ++ l1) (l2 ++ l1)), (Permutation (gv0 ++ l1) (l2 ++ gv0))
(Permutation (gv0 ++ l1) (l1 ++ l1)), (Permutation (gv0 ++ l1) (l1 ++ gv0)), (Permutation (gv0 ++ l1) (gv0 ++ l2)), (Permutation (gv0 ++ l1) (gv0 ++ gv0)), (Permutation (gv0 ++ l1) []), (Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) l1), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (a0 :: l2)), (Permutation (gv0 ++ gv0) (a0 :: l1))
(Permutation (gv0 ++ gv0) (a :: l2)), (Permutation (gv0 ++ gv0) (a :: l1)), (Permutation (gv0 ++ gv0) (a :: gv0)), (Permutation (gv0 ++ gv0) (b :: l2)), (Permutation (gv0 ++ gv0) (b :: l1)), (Permutation (gv0 ++ gv0) (b :: gv0)), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 l1)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge l1 l2))
(Permutation (gv0 ++ gv0) (merge l1 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 l1)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ l1)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (l1 ++ l2)), (Permutation (gv0 ++ gv0) (l1 ++ l1)), (Permutation (gv0 ++ gv0) (l1 ++ gv0))
(Permutation (gv0 ++ gv0) (gv0 ++ l1)), (Permutation (gv0 ++ gv0) []), (Permutation [] gv0), (Permutation [] (a0 :: gv0)), (Permutation [] (a :: gv0)), (Permutation [] (b :: gv0)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge l1 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 l1))
(Permutation [] (l2 ++ gv0)), (Permutation [] (l1 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ l1)), (Permutation [] (gv0 ++ gv0)), (In a0 gv0), (In a0 (a0 :: gv0)), (In a0 (a :: gv0)), (In a0 (b :: gv0)), (In a0 (merge l2 gv0))
(In a0 (merge gv0 l2)), (In a0 (merge gv0 l1)), (In a0 (merge gv0 gv0)), (In a0 (l2 ++ gv0)), (In a0 (l1 ++ gv0)), (In a0 (gv0 ++ l2)), (In a0 (gv0 ++ l1)), (In a0 (gv0 ++ gv0)), (In a gv0), (In a (a0 :: gv0))
(In a (b :: gv0)), (In a (merge l2 gv0)), (In a (merge l1 gv0)), (In a (merge gv0 l2)), (In a (merge gv0 l1)), (In a (merge gv0 gv0)), (In a (l2 ++ gv0)), (In a (l1 ++ gv0)), (In a (gv0 ++ l2)), (In a (gv0 ++ l1))
(In b gv0), (In b (a0 :: gv0)), (In b (a :: gv0)), (In b (b :: gv0)), (In b (merge l2 gv0)), (In b (merge l1 gv0)), (In b (merge gv0 l2)), (In b (merge gv0 l1)), (In b (merge gv0 gv0)), (In b (l2 ++ gv0))
(In b (gv0 ++ l2)), (In b (gv0 ++ l1)), (In b (gv0 ++ gv0)), (In (length l2) gv0), (In (length l2) (a0 :: gv0)), (In (length l2) (a :: gv0)), (In (length l2) (b :: gv0)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge l1 gv0)), (In (length l2) (merge gv0 l2))
(In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ gv0)), (In (length l2) (l1 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ l1)), (In (length l2) (gv0 ++ gv0)), (In (length l1) gv0), (In (length l1) (a0 :: gv0)), (In (length l1) (a :: gv0)), (In (length l1) (b :: gv0))
(In (length l1) (merge l1 gv0)), (In (length l1) (merge gv0 l2)), (In (length l1) (merge gv0 l1)), (In (length l1) (merge gv0 gv0)), (In (length l1) (l2 ++ gv0)), (In (length l1) (l1 ++ gv0)), (In (length l1) (gv0 ++ l2)), (In (length l1) (gv0 ++ l1)), (In (length l1) (gv0 ++ gv0)), (In (length gv0) l2)
(In (length gv0) gv0), (In (length gv0) (a0 :: l2)), (In (length gv0) (a0 :: l1)), (In (length gv0) (a0 :: gv0)), (In (length gv0) (a :: l2)), (In (length gv0) (a :: l1)), (In (length gv0) (a :: gv0)), (In (length gv0) (b :: l2)), (In (length gv0) (b :: l1)), (In (length gv0) (b :: gv0))
(In (length gv0) (merge l2 l1)), (In (length gv0) (merge l2 gv0)), (In (length gv0) (merge l1 l2)), (In (length gv0) (merge l1 l1)), (In (length gv0) (merge l1 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 l1)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ l1))
(In (length gv0) (l1 ++ l2)), (In (length gv0) (l1 ++ l1)), (In (length gv0) (l1 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ l1)), (In (length gv0) (gv0 ++ gv0)), (a0 < length gv0), (a < length gv0), (b < length gv0), (length l2 < length gv0)
(length gv0 < a0), (length gv0 < a), (length gv0 < b), (length gv0 < length l2), (length gv0 < length l1), (a0 <= length gv0), (a <= length gv0), (b <= length gv0), (length l2 <= length gv0), (length l1 <= length gv0)
(length gv0 <= a), (length gv0 <= b), (length gv0 <= length l2), (length gv0 <= length l1), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = l1 ++ gv0), (merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ l1), (merge l2 l2 = gv0 ++ gv0)
(merge l2 l1 = l2 ++ gv0), (merge l2 l1 = l1 ++ gv0), (merge l2 l1 = gv0 ++ l2), (merge l2 l1 = gv0 ++ l1), (merge l2 l1 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = l1), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ l1)
(merge l2 gv0 = l1 ++ l2), (merge l2 gv0 = l1 ++ l1), (merge l2 gv0 = l1 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ l1), (merge l2 gv0 = gv0 ++ gv0), (merge l1 l2 = gv0), (merge l1 l2 = l2 ++ gv0), (merge l1 l2 = l1 ++ gv0), (merge l1 l2 = gv0 ++ l2)
(merge l1 l2 = gv0 ++ gv0), (merge l1 l1 = gv0), (merge l1 l1 = l2 ++ gv0), (merge l1 l1 = l1 ++ gv0), (merge l1 l1 = gv0 ++ l2), (merge l1 l1 = gv0 ++ l1), (merge l1 l1 = gv0 ++ gv0), (merge l1 gv0 = l2), (merge l1 gv0 = l1), (merge l1 gv0 = gv0)
(merge l1 gv0 = l2 ++ l1), (merge l1 gv0 = l2 ++ gv0), (merge l1 gv0 = l1 ++ l2), (merge l1 gv0 = l1 ++ l1), (merge l1 gv0 = l1 ++ gv0), (merge l1 gv0 = gv0 ++ l2), (merge l1 gv0 = gv0 ++ l1), (merge l1 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = l1)
(merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ l1), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = l1 ++ l2), (merge gv0 l2 = l1 ++ l1), (merge gv0 l2 = l1 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ l1), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 l1 = l2)
(merge gv0 l1 = gv0), (merge gv0 l1 = l2 ++ l2), (merge gv0 l1 = l2 ++ l1), (merge gv0 l1 = l2 ++ gv0), (merge gv0 l1 = l1 ++ l2), (merge gv0 l1 = l1 ++ l1), (merge gv0 l1 = l1 ++ gv0), (merge gv0 l1 = gv0 ++ l2), (merge gv0 l1 = gv0 ++ l1), (merge gv0 l1 = gv0 ++ gv0)
(merge gv0 gv0 = l1), (merge gv0 gv0 = gv0), (merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ l1), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = l1 ++ l2), (merge gv0 gv0 = l1 ++ l1), (merge gv0 gv0 = l1 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ l1)
(l2 ++ l2 = gv0), (l2 ++ l1 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = l1), (l2 ++ gv0 = gv0), (l1 ++ l2 = gv0), (l1 ++ l1 = gv0), (l1 ++ gv0 = l2), (l1 ++ gv0 = l1), (l1 ++ gv0 = gv0)
(gv0 ++ l2 = l1), (gv0 ++ l2 = gv0), (gv0 ++ l1 = l2), (gv0 ++ l1 = l1), (gv0 ++ l1 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = l1), (gv0 ++ gv0 = gv0), (length gv0 = a0), (length gv0 = a)

Label: 0 (2)
(false = sorted_bool gv0), (true = sorted_bool gv0), (a0 <=* gv0), (a0 <=* a0 :: gv0), (a0 <=* a :: gv0), (a0 <=* b :: gv0), (a0 <=* merge l2 gv0), (a0 <=* merge l1 gv0), (a0 <=* merge gv0 l2), (a0 <=* merge gv0 l1)
(a0 <=* l2 ++ gv0), (a0 <=* l1 ++ gv0), (a0 <=* gv0 ++ l2), (a0 <=* gv0 ++ l1), (a0 <=* gv0 ++ gv0), (a <=* gv0), (a <=* a0 :: gv0), (a <=* a :: gv0), (a <=* b :: gv0), (a <=* merge l2 gv0)
(a <=* merge gv0 l2), (a <=* merge gv0 l1), (a <=* merge gv0 gv0), (a <=* l2 ++ gv0), (a <=* l1 ++ gv0), (a <=* gv0 ++ l2), (a <=* gv0 ++ l1), (a <=* gv0 ++ gv0), (b <=* gv0), (b <=* a0 :: gv0)
(b <=* b :: gv0), (b <=* merge l2 gv0), (b <=* merge l1 gv0), (b <=* merge gv0 l2), (b <=* merge gv0 l1), (b <=* merge gv0 gv0), (b <=* l2 ++ gv0), (b <=* l1 ++ gv0), (b <=* gv0 ++ l2), (b <=* gv0 ++ l1)
(length l2 <=* gv0), (length l2 <=* a0 :: gv0), (length l2 <=* a :: gv0), (length l2 <=* b :: gv0), (length l2 <=* merge l2 gv0), (length l2 <=* merge l1 gv0), (length l2 <=* merge gv0 l2), (length l2 <=* merge gv0 l1), (length l2 <=* merge gv0 gv0), (length l2 <=* l2 ++ gv0)
(length l2 <=* gv0 ++ l2), (length l2 <=* gv0 ++ l1), (length l2 <=* gv0 ++ gv0), (length l1 <=* gv0), (length l1 <=* a0 :: gv0), (length l1 <=* a :: gv0), (length l1 <=* b :: gv0), (length l1 <=* merge l2 gv0), (length l1 <=* merge l1 gv0), (length l1 <=* merge gv0 l2)
(length l1 <=* merge gv0 gv0), (length l1 <=* l2 ++ gv0), (length l1 <=* l1 ++ gv0), (length l1 <=* gv0 ++ l2), (length l1 <=* gv0 ++ l1), (length l1 <=* gv0 ++ gv0), (length gv0 <=* l2), (length gv0 <=* l1), (length gv0 <=* gv0), (length gv0 <=* a0 :: l2)
(length gv0 <=* a0 :: gv0), (length gv0 <=* a :: l2), (length gv0 <=* a :: l1), (length gv0 <=* a :: gv0), (length gv0 <=* b :: l2), (length gv0 <=* b :: l1), (length gv0 <=* b :: gv0), (length gv0 <=* merge l2 l2), (length gv0 <=* merge l2 l1), (length gv0 <=* merge l2 gv0)
(length gv0 <=* merge l1 l1), (length gv0 <=* merge l1 gv0), (length gv0 <=* merge gv0 l2), (length gv0 <=* merge gv0 l1), (length gv0 <=* merge gv0 gv0), (length gv0 <=* l2 ++ l2), (length gv0 <=* l2 ++ l1), (length gv0 <=* l2 ++ gv0), (length gv0 <=* l1 ++ l2), (length gv0 <=* l1 ++ l1)
(length gv0 <=* gv0 ++ l2), (length gv0 <=* gv0 ++ l1), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted gv0), (sorted (a0 :: gv0)), (sorted (a :: gv0)), (sorted (b :: gv0)), (sorted (merge l2 gv0)), (sorted (merge l1 gv0))
(sorted (merge gv0 l1)), (sorted (merge gv0 gv0)), (sorted (l2 ++ gv0)), (sorted (l1 ++ gv0)), (sorted (gv0 ++ l2)), (sorted (gv0 ++ l1)), (sorted (gv0 ++ gv0)), (Permutation l2 gv0), (Permutation l2 (a0 :: gv0)), (Permutation l2 (a :: gv0))
(Permutation l2 (merge l2 gv0)), (Permutation l2 (merge l1 gv0)), (Permutation l2 (merge gv0 l2)), (Permutation l2 (merge gv0 l1)), (Permutation l2 (merge gv0 gv0)), (Permutation l2 (l2 ++ gv0)), (Permutation l2 (l1 ++ gv0)), (Permutation l2 (gv0 ++ l2)), (Permutation l2 (gv0 ++ l1)), (Permutation l2 (gv0 ++ gv0))
(Permutation l1 (a0 :: gv0)), (Permutation l1 (a :: gv0)), (Permutation l1 (b :: gv0)), (Permutation l1 (merge l2 gv0)), (Permutation l1 (merge l1 gv0)), (Permutation l1 (merge gv0 l2)), (Permutation l1 (merge gv0 l1)), (Permutation l1 (merge gv0 gv0)), (Permutation l1 (l2 ++ gv0)), (Permutation l1 (l1 ++ gv0))
(Permutation l1 (gv0 ++ l1)), (Permutation l1 (gv0 ++ gv0)), (Permutation gv0 l2), (Permutation gv0 l1), (Permutation gv0 (a0 :: l2)), (Permutation gv0 (a0 :: l1)), (Permutation gv0 (a0 :: gv0)), (Permutation gv0 (a :: l2)), (Permutation gv0 (a :: l1)), (Permutation gv0 (a :: gv0))
(Permutation gv0 (b :: l1)), (Permutation gv0 (b :: gv0)), (Permutation gv0 (merge l2 l2)), (Permutation gv0 (merge l2 l1)), (Permutation gv0 (merge l2 gv0)), (Permutation gv0 (merge l1 l2)), (Permutation gv0 (merge l1 l1)), (Permutation gv0 (merge l1 gv0)), (Permutation gv0 (merge gv0 l2)), (Permutation gv0 (merge gv0 l1))
(Permutation gv0 (l2 ++ l2)), (Permutation gv0 (l2 ++ l1)), (Permutation gv0 (l2 ++ gv0)), (Permutation gv0 (l1 ++ l2)), (Permutation gv0 (l1 ++ l1)), (Permutation gv0 (l1 ++ gv0)), (Permutation gv0 (gv0 ++ l2)), (Permutation gv0 (gv0 ++ l1)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 [])
(Permutation (a0 :: l2) (a0 :: gv0)), (Permutation (a0 :: l2) (a :: gv0)), (Permutation (a0 :: l2) (b :: gv0)), (Permutation (a0 :: l2) (merge l2 gv0)), (Permutation (a0 :: l2) (merge l1 gv0)), (Permutation (a0 :: l2) (merge gv0 l2)), (Permutation (a0 :: l2) (merge gv0 l1)), (Permutation (a0 :: l2) (merge gv0 gv0)), (Permutation (a0 :: l2) (l2 ++ gv0)), (Permutation (a0 :: l2) (l1 ++ gv0))
(Permutation (a0 :: l2) (gv0 ++ l1)), (Permutation (a0 :: l2) (gv0 ++ gv0)), (Permutation (a0 :: l1) gv0), (Permutation (a0 :: l1) (a0 :: gv0)), (Permutation (a0 :: l1) (a :: gv0)), (Permutation (a0 :: l1) (b :: gv0)), (Permutation (a0 :: l1) (merge l2 gv0)), (Permutation (a0 :: l1) (merge l1 gv0)), (Permutation (a0 :: l1) (merge gv0 l2)), (Permutation (a0 :: l1) (merge gv0 l1))
(Permutation (a0 :: l1) (l2 ++ gv0)), (Permutation (a0 :: l1) (l1 ++ gv0)), (Permutation (a0 :: l1) (gv0 ++ l2)), (Permutation (a0 :: l1) (gv0 ++ l1)), (Permutation (a0 :: l1) (gv0 ++ gv0)), (Permutation (a0 :: gv0) l2), (Permutation (a0 :: gv0) l1), (Permutation (a0 :: gv0) gv0), (Permutation (a0 :: gv0) (a0 :: l2)), (Permutation (a0 :: gv0) (a0 :: l1))
(Permutation (a0 :: gv0) (a :: l1)), (Permutation (a0 :: gv0) (a :: gv0)), (Permutation (a0 :: gv0) (b :: l2)), (Permutation (a0 :: gv0) (b :: l1)), (Permutation (a0 :: gv0) (b :: gv0)), (Permutation (a0 :: gv0) (merge l2 l2)), (Permutation (a0 :: gv0) (merge l2 l1)), (Permutation (a0 :: gv0) (merge l2 gv0)), (Permutation (a0 :: gv0) (merge l1 l2)), (Permutation (a0 :: gv0) (merge l1 l1))
(Permutation (a0 :: gv0) (merge gv0 l2)), (Permutation (a0 :: gv0) (merge gv0 l1)), (Permutation (a0 :: gv0) (merge gv0 gv0)), (Permutation (a0 :: gv0) (l2 ++ l2)), (Permutation (a0 :: gv0) (l2 ++ l1)), (Permutation (a0 :: gv0) (l2 ++ gv0)), (Permutation (a0 :: gv0) (l1 ++ l2)), (Permutation (a0 :: gv0) (l1 ++ l1)), (Permutation (a0 :: gv0) (l1 ++ gv0)), (Permutation (a0 :: gv0) (gv0 ++ l2))
(Permutation (a0 :: gv0) (gv0 ++ gv0)), (Permutation (a0 :: gv0) []), (Permutation (a :: l2) gv0), (Permutation (a :: l2) (a0 :: gv0)), (Permutation (a :: l2) (a :: gv0)), (Permutation (a :: l2) (b :: gv0)), (Permutation (a :: l2) (merge l2 gv0)), (Permutation (a :: l2) (merge l1 gv0)), (Permutation (a :: l2) (merge gv0 l2)), (Permutation (a :: l2) (merge gv0 l1))
(Permutation (a :: l2) (l2 ++ gv0)), (Permutation (a :: l2) (l1 ++ gv0)), (Permutation (a :: l2) (gv0 ++ l2)), (Permutation (a :: l2) (gv0 ++ l1)), (Permutation (a :: l2) (gv0 ++ gv0)), (Permutation (a :: l1) gv0), (Permutation (a :: l1) (a0 :: gv0)), (Permutation (a :: l1) (a :: gv0)), (Permutation (a :: l1) (b :: gv0)), (Permutation (a :: l1) (merge l2 gv0))
(Permutation (a :: l1) (merge gv0 l2)), (Permutation (a :: l1) (merge gv0 l1)), (Permutation (a :: l1) (merge gv0 gv0)), (Permutation (a :: l1) (l2 ++ gv0)), (Permutation (a :: l1) (l1 ++ gv0)), (Permutation (a :: l1) (gv0 ++ l2)), (Permutation (a :: l1) (gv0 ++ l1)), (Permutation (a :: l1) (gv0 ++ gv0)), (Permutation (a :: gv0) l2), (Permutation (a :: gv0) l1)
(Permutation (a :: gv0) (a0 :: l2)), (Permutation (a :: gv0) (a0 :: l1)), (Permutation (a :: gv0) (a0 :: gv0)), (Permutation (a :: gv0) (a :: l2)), (Permutation (a :: gv0) (a :: l1)), (Permutation (a :: gv0) (b :: l2)), (Permutation (a :: gv0) (b :: l1)), (Permutation (a :: gv0) (b :: gv0)), (Permutation (a :: gv0) (merge l2 l2)), (Permutation (a :: gv0) (merge l2 l1))
(Permutation (a :: gv0) (merge l1 l2)), (Permutation (a :: gv0) (merge l1 l1)), (Permutation (a :: gv0) (merge l1 gv0)), (Permutation (a :: gv0) (merge gv0 l2)), (Permutation (a :: gv0) (merge gv0 l1)), (Permutation (a :: gv0) (merge gv0 gv0)), (Permutation (a :: gv0) (l2 ++ l2)), (Permutation (a :: gv0) (l2 ++ l1)), (Permutation (a :: gv0) (l2 ++ gv0)), (Permutation (a :: gv0) (l1 ++ l2))
(Permutation (a :: gv0) (l1 ++ gv0)), (Permutation (a :: gv0) (gv0 ++ l2)), (Permutation (a :: gv0) (gv0 ++ l1)), (Permutation (a :: gv0) (gv0 ++ gv0)), (Permutation (a :: gv0) []), (Permutation (b :: l2) gv0), (Permutation (b :: l2) (a0 :: gv0)), (Permutation (b :: l2) (a :: gv0)), (Permutation (b :: l2) (b :: gv0)), (Permutation (b :: l2) (merge l2 gv0))
(Permutation (b :: l2) (merge gv0 l2)), (Permutation (b :: l2) (merge gv0 l1)), (Permutation (b :: l2) (merge gv0 gv0)), (Permutation (b :: l2) (l2 ++ gv0)), (Permutation (b :: l2) (l1 ++ gv0)), (Permutation (b :: l2) (gv0 ++ l2)), (Permutation (b :: l2) (gv0 ++ l1)), (Permutation (b :: l2) (gv0 ++ gv0)), (Permutation (b :: l1) gv0), (Permutation (b :: l1) (a0 :: gv0))
(Permutation (b :: l1) (b :: gv0)), (Permutation (b :: l1) (merge l2 gv0)), (Permutation (b :: l1) (merge l1 gv0)), (Permutation (b :: l1) (merge gv0 l2)), (Permutation (b :: l1) (merge gv0 l1)), (Permutation (b :: l1) (merge gv0 gv0)), (Permutation (b :: l1) (l2 ++ gv0)), (Permutation (b :: l1) (l1 ++ gv0)), (Permutation (b :: l1) (gv0 ++ l2)), (Permutation (b :: l1) (gv0 ++ l1))
(Permutation (b :: gv0) l2), (Permutation (b :: gv0) l1), (Permutation (b :: gv0) gv0), (Permutation (b :: gv0) (a0 :: l2)), (Permutation (b :: gv0) (a0 :: l1)), (Permutation (b :: gv0) (a0 :: gv0)), (Permutation (b :: gv0) (a :: l2)), (Permutation (b :: gv0) (a :: l1)), (Permutation (b :: gv0) (a :: gv0)), (Permutation (b :: gv0) (b :: l2))
(Permutation (b :: gv0) (merge l2 l2)), (Permutation (b :: gv0) (merge l2 l1)), (Permutation (b :: gv0) (merge l2 gv0)), (Permutation (b :: gv0) (merge l1 l2)), (Permutation (b :: gv0) (merge l1 l1)), (Permutation (b :: gv0) (merge l1 gv0)), (Permutation (b :: gv0) (merge gv0 l2)), (Permutation (b :: gv0) (merge gv0 l1)), (Permutation (b :: gv0) (merge gv0 gv0)), (Permutation (b :: gv0) (l2 ++ l2))
(Permutation (b :: gv0) (l2 ++ gv0)), (Permutation (b :: gv0) (l1 ++ l2)), (Permutation (b :: gv0) (l1 ++ l1)), (Permutation (b :: gv0) (l1 ++ gv0)), (Permutation (b :: gv0) (gv0 ++ l2)), (Permutation (b :: gv0) (gv0 ++ l1)), (Permutation (b :: gv0) (gv0 ++ gv0)), (Permutation (b :: gv0) []), (Permutation (merge l2 l2) gv0), (Permutation (merge l2 l2) (a0 :: gv0))
(Permutation (merge l2 l2) (b :: gv0)), (Permutation (merge l2 l2) (merge l2 gv0)), (Permutation (merge l2 l2) (merge l1 gv0)), (Permutation (merge l2 l2) (merge gv0 l2)), (Permutation (merge l2 l2) (merge gv0 l1)), (Permutation (merge l2 l2) (merge gv0 gv0)), (Permutation (merge l2 l2) (l2 ++ gv0)), (Permutation (merge l2 l2) (l1 ++ gv0)), (Permutation (merge l2 l2) (gv0 ++ l2)), (Permutation (merge l2 l2) (gv0 ++ l1))
(Permutation (merge l2 l1) gv0), (Permutation (merge l2 l1) (a0 :: gv0)), (Permutation (merge l2 l1) (a :: gv0)), (Permutation (merge l2 l1) (b :: gv0)), (Permutation (merge l2 l1) (merge l2 gv0)), (Permutation (merge l2 l1) (merge l1 gv0)), (Permutation (merge l2 l1) (merge gv0 l2)), (Permutation (merge l2 l1) (merge gv0 l1)), (Permutation (merge l2 l1) (merge gv0 gv0)), (Permutation (merge l2 l1) (l2 ++ gv0))
(Permutation (merge l2 l1) (gv0 ++ l2)), (Permutation (merge l2 l1) (gv0 ++ l1)), (Permutation (merge l2 l1) (gv0 ++ gv0)), (Permutation (merge l2 gv0) l2), (Permutation (merge l2 gv0) l1), (Permutation (merge l2 gv0) gv0), (Permutation (merge l2 gv0) (a0 :: l2)), (Permutation (merge l2 gv0) (a0 :: l1)), (Permutation (merge l2 gv0) (a0 :: gv0)), (Permutation (merge l2 gv0) (a :: l2))
(Permutation (merge l2 gv0) (a :: gv0)), (Permutation (merge l2 gv0) (b :: l2)), (Permutation (merge l2 gv0) (b :: l1)), (Permutation (merge l2 gv0) (b :: gv0)), (Permutation (merge l2 gv0) (merge l2 l2)), (Permutation (merge l2 gv0) (merge l2 l1)), (Permutation (merge l2 gv0) (merge l1 l2)), (Permutation (merge l2 gv0) (merge l1 l1)), (Permutation (merge l2 gv0) (merge l1 gv0)), (Permutation (merge l2 gv0) (merge gv0 l2))
(Permutation (merge l2 gv0) (merge gv0 gv0)), (Permutation (merge l2 gv0) (l2 ++ l2)), (Permutation (merge l2 gv0) (l2 ++ l1)), (Permutation (merge l2 gv0) (l2 ++ gv0)), (Permutation (merge l2 gv0) (l1 ++ l2)), (Permutation (merge l2 gv0) (l1 ++ l1)), (Permutation (merge l2 gv0) (l1 ++ gv0)), (Permutation (merge l2 gv0) (gv0 ++ l2)), (Permutation (merge l2 gv0) (gv0 ++ l1)), (Permutation (merge l2 gv0) (gv0 ++ gv0))
(Permutation (merge l1 l2) gv0), (Permutation (merge l1 l2) (a0 :: gv0)), (Permutation (merge l1 l2) (a :: gv0)), (Permutation (merge l1 l2) (b :: gv0)), (Permutation (merge l1 l2) (merge l2 gv0)), (Permutation (merge l1 l2) (merge l1 gv0)), (Permutation (merge l1 l2) (merge gv0 l2)), (Permutation (merge l1 l2) (merge gv0 l1)), (Permutation (merge l1 l2) (merge gv0 gv0)), (Permutation (merge l1 l2) (l2 ++ gv0))
(Permutation (merge l1 l2) (gv0 ++ l2)), (Permutation (merge l1 l2) (gv0 ++ l1)), (Permutation (merge l1 l2) (gv0 ++ gv0)), (Permutation (merge l1 l1) gv0), (Permutation (merge l1 l1) (a0 :: gv0)), (Permutation (merge l1 l1) (a :: gv0)), (Permutation (merge l1 l1) (b :: gv0)), (Permutation (merge l1 l1) (merge l2 gv0)), (Permutation (merge l1 l1) (merge l1 gv0)), (Permutation (merge l1 l1) (merge gv0 l2))
(Permutation (merge l1 l1) (merge gv0 gv0)), (Permutation (merge l1 l1) (l2 ++ gv0)), (Permutation (merge l1 l1) (l1 ++ gv0)), (Permutation (merge l1 l1) (gv0 ++ l2)), (Permutation (merge l1 l1) (gv0 ++ l1)), (Permutation (merge l1 l1) (gv0 ++ gv0)), (Permutation (merge l1 gv0) l2), (Permutation (merge l1 gv0) l1), (Permutation (merge l1 gv0) gv0), (Permutation (merge l1 gv0) (a0 :: l2))
(Permutation (merge l1 gv0) (a0 :: gv0)), (Permutation (merge l1 gv0) (a :: l2)), (Permutation (merge l1 gv0) (a :: l1)), (Permutation (merge l1 gv0) (a :: gv0)), (Permutation (merge l1 gv0) (b :: l2)), (Permutation (merge l1 gv0) (b :: l1)), (Permutation (merge l1 gv0) (b :: gv0)), (Permutation (merge l1 gv0) (merge l2 l2)), (Permutation (merge l1 gv0) (merge l2 l1)), (Permutation (merge l1 gv0) (merge l2 gv0))
(Permutation (merge l1 gv0) (merge l1 l1)), (Permutation (merge l1 gv0) (merge gv0 l2)), (Permutation (merge l1 gv0) (merge gv0 l1)), (Permutation (merge l1 gv0) (merge gv0 gv0)), (Permutation (merge l1 gv0) (l2 ++ l2)), (Permutation (merge l1 gv0) (l2 ++ l1)), (Permutation (merge l1 gv0) (l2 ++ gv0)), (Permutation (merge l1 gv0) (l1 ++ l2)), (Permutation (merge l1 gv0) (l1 ++ l1)), (Permutation (merge l1 gv0) (l1 ++ gv0))
(Permutation (merge l1 gv0) (gv0 ++ l1)), (Permutation (merge l1 gv0) (gv0 ++ gv0)), (Permutation (merge l1 gv0) []), (Permutation (merge gv0 l2) l2), (Permutation (merge gv0 l2) l1), (Permutation (merge gv0 l2) gv0), (Permutation (merge gv0 l2) (a0 :: l2)), (Permutation (merge gv0 l2) (a0 :: l1)), (Permutation (merge gv0 l2) (a0 :: gv0)), (Permutation (merge gv0 l2) (a :: l2))
(Permutation (merge gv0 l2) (a :: gv0)), (Permutation (merge gv0 l2) (b :: l2)), (Permutation (merge gv0 l2) (b :: l1)), (Permutation (merge gv0 l2) (b :: gv0)), (Permutation (merge gv0 l2) (merge l2 l2)), (Permutation (merge gv0 l2) (merge l2 l1)), (Permutation (merge gv0 l2) (merge l2 gv0)), (Permutation (merge gv0 l2) (merge l1 l2)), (Permutation (merge gv0 l2) (merge l1 l1)), (Permutation (merge gv0 l2) (merge l1 gv0))
(Permutation (merge gv0 l2) (merge gv0 gv0)), (Permutation (merge gv0 l2) (l2 ++ l2)), (Permutation (merge gv0 l2) (l2 ++ l1)), (Permutation (merge gv0 l2) (l2 ++ gv0)), (Permutation (merge gv0 l2) (l1 ++ l2)), (Permutation (merge gv0 l2) (l1 ++ l1)), (Permutation (merge gv0 l2) (l1 ++ gv0)), (Permutation (merge gv0 l2) (gv0 ++ l2)), (Permutation (merge gv0 l2) (gv0 ++ l1)), (Permutation (merge gv0 l2) (gv0 ++ gv0))
(Permutation (merge gv0 l1) l2), (Permutation (merge gv0 l1) l1), (Permutation (merge gv0 l1) gv0), (Permutation (merge gv0 l1) (a0 :: l2)), (Permutation (merge gv0 l1) (a0 :: l1)), (Permutation (merge gv0 l1) (a0 :: gv0)), (Permutation (merge gv0 l1) (a :: l2)), (Permutation (merge gv0 l1) (a :: l1)), (Permutation (merge gv0 l1) (a :: gv0)), (Permutation (merge gv0 l1) (b :: l2))
(Permutation (merge gv0 l1) (b :: gv0)), (Permutation (merge gv0 l1) (merge l2 l2)), (Permutation (merge gv0 l1) (merge l2 l1)), (Permutation (merge gv0 l1) (merge l2 gv0)), (Permutation (merge gv0 l1) (merge l1 l2)), (Permutation (merge gv0 l1) (merge l1 l1)), (Permutation (merge gv0 l1) (merge l1 gv0)), (Permutation (merge gv0 l1) (merge gv0 l2)), (Permutation (merge gv0 l1) (merge gv0 gv0)), (Permutation (merge gv0 l1) (l2 ++ l2))
(Permutation (merge gv0 l1) (l2 ++ gv0)), (Permutation (merge gv0 l1) (l1 ++ l2)), (Permutation (merge gv0 l1) (l1 ++ l1)), (Permutation (merge gv0 l1) (l1 ++ gv0)), (Permutation (merge gv0 l1) (gv0 ++ l2)), (Permutation (merge gv0 l1) (gv0 ++ l1)), (Permutation (merge gv0 l1) (gv0 ++ gv0)), (Permutation (merge gv0 l1) []), (Permutation (merge gv0 gv0) l2), (Permutation (merge gv0 gv0) l1)
(Permutation (merge gv0 gv0) (a0 :: l2)), (Permutation (merge gv0 gv0) (a0 :: l1)), (Permutation (merge gv0 gv0) (a0 :: gv0)), (Permutation (merge gv0 gv0) (a :: l2)), (Permutation (merge gv0 gv0) (a :: l1)), (Permutation (merge gv0 gv0) (a :: gv0)), (Permutation (merge gv0 gv0) (b :: l2)), (Permutation (merge gv0 gv0) (b :: l1)), (Permutation (merge gv0 gv0) (b :: gv0)), (Permutation (merge gv0 gv0) (merge l2 l2))
(Permutation (merge gv0 gv0) (merge l2 gv0)), (Permutation (merge gv0 gv0) (merge l1 l2)), (Permutation (merge gv0 gv0) (merge l1 l1)), (Permutation (merge gv0 gv0) (merge l1 gv0)), (Permutation (merge gv0 gv0) (merge gv0 l2)), (Permutation (merge gv0 gv0) (merge gv0 l1)), (Permutation (merge gv0 gv0) (l2 ++ l2)), (Permutation (merge gv0 gv0) (l2 ++ l1)), (Permutation (merge gv0 gv0) (l2 ++ gv0)), (Permutation (merge gv0 gv0) (l1 ++ l2))
(Permutation (merge gv0 gv0) (l1 ++ gv0)), (Permutation (merge gv0 gv0) (gv0 ++ l2)), (Permutation (merge gv0 gv0) (gv0 ++ l1)), (Permutation (merge gv0 gv0) (gv0 ++ gv0)), (Permutation (merge gv0 gv0) []), (Permutation (l2 ++ l2) gv0), (Permutation (l2 ++ l2) (a0 :: gv0)), (Permutation (l2 ++ l2) (a :: gv0)), (Permutation (l2 ++ l2) (b :: gv0)), (Permutation (l2 ++ l2) (merge l2 gv0))
(Permutation (l2 ++ l2) (merge gv0 l2)), (Permutation (l2 ++ l2) (merge gv0 l1)), (Permutation (l2 ++ l2) (merge gv0 gv0)), (Permutation (l2 ++ l2) (l2 ++ gv0)), (Permutation (l2 ++ l2) (l1 ++ gv0)), (Permutation (l2 ++ l2) (gv0 ++ l2)), (Permutation (l2 ++ l2) (gv0 ++ l1)), (Permutation (l2 ++ l2) (gv0 ++ gv0)), (Permutation (l2 ++ l1) gv0), (Permutation (l2 ++ l1) (a0 :: gv0))
(Permutation (l2 ++ l1) (b :: gv0)), (Permutation (l2 ++ l1) (merge l2 gv0)), (Permutation (l2 ++ l1) (merge l1 gv0)), (Permutation (l2 ++ l1) (merge gv0 l2)), (Permutation (l2 ++ l1) (merge gv0 l1)), (Permutation (l2 ++ l1) (merge gv0 gv0)), (Permutation (l2 ++ l1) (l2 ++ gv0)), (Permutation (l2 ++ l1) (l1 ++ gv0)), (Permutation (l2 ++ l1) (gv0 ++ l2)), (Permutation (l2 ++ l1) (gv0 ++ l1))
(Permutation (l2 ++ gv0) l2), (Permutation (l2 ++ gv0) l1), (Permutation (l2 ++ gv0) gv0), (Permutation (l2 ++ gv0) (a0 :: l2)), (Permutation (l2 ++ gv0) (a0 :: l1)), (Permutation (l2 ++ gv0) (a0 :: gv0)), (Permutation (l2 ++ gv0) (a :: l2)), (Permutation (l2 ++ gv0) (a :: l1)), (Permutation (l2 ++ gv0) (a :: gv0)), (Permutation (l2 ++ gv0) (b :: l2))
(Permutation (l2 ++ gv0) (b :: gv0)), (Permutation (l2 ++ gv0) (merge l2 l2)), (Permutation (l2 ++ gv0) (merge l2 l1)), (Permutation (l2 ++ gv0) (merge l2 gv0)), (Permutation (l2 ++ gv0) (merge l1 l2)), (Permutation (l2 ++ gv0) (merge l1 l1)), (Permutation (l2 ++ gv0) (merge l1 gv0)), (Permutation (l2 ++ gv0) (merge gv0 l2)), (Permutation (l2 ++ gv0) (merge gv0 l1)), (Permutation (l2 ++ gv0) (merge gv0 gv0))
(Permutation (l2 ++ gv0) (l2 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ l2)), (Permutation (l2 ++ gv0) (l1 ++ l1)), (Permutation (l2 ++ gv0) (l1 ++ gv0)), (Permutation (l2 ++ gv0) (gv0 ++ l2)), (Permutation (l2 ++ gv0) (gv0 ++ l1)), (Permutation (l2 ++ gv0) (gv0 ++ gv0)), (Permutation (l2 ++ gv0) []), (Permutation (l1 ++ l2) gv0), (Permutation (l1 ++ l2) (a0 :: gv0))
(Permutation (l1 ++ l2) (b :: gv0)), (Permutation (l1 ++ l2) (merge l2 gv0)), (Permutation (l1 ++ l2) (merge l1 gv0)), (Permutation (l1 ++ l2) (merge gv0 l2)), (Permutation (l1 ++ l2) (merge gv0 l1)), (Permutation (l1 ++ l2) (merge gv0 gv0)), (Permutation (l1 ++ l2) (l2 ++ gv0)), (Permutation (l1 ++ l2) (l1 ++ gv0)), (Permutation (l1 ++ l2) (gv0 ++ l2)), (Permutation (l1 ++ l2) (gv0 ++ l1))
(Permutation (l1 ++ l1) gv0), (Permutation (l1 ++ l1) (a0 :: gv0)), (Permutation (l1 ++ l1) (a :: gv0)), (Permutation (l1 ++ l1) (b :: gv0)), (Permutation (l1 ++ l1) (merge l2 gv0)), (Permutation (l1 ++ l1) (merge l1 gv0)), (Permutation (l1 ++ l1) (merge gv0 l2)), (Permutation (l1 ++ l1) (merge gv0 l1)), (Permutation (l1 ++ l1) (merge gv0 gv0)), (Permutation (l1 ++ l1) (l2 ++ gv0))
(Permutation (l1 ++ l1) (gv0 ++ l2)), (Permutation (l1 ++ l1) (gv0 ++ l1)), (Permutation (l1 ++ l1) (gv0 ++ gv0)), (Permutation (l1 ++ gv0) l2), (Permutation (l1 ++ gv0) l1), (Permutation (l1 ++ gv0) gv0), (Permutation (l1 ++ gv0) (a0 :: l2)), (Permutation (l1 ++ gv0) (a0 :: l1)), (Permutation (l1 ++ gv0) (a0 :: gv0)), (Permutation (l1 ++ gv0) (a :: l2))
(Permutation (l1 ++ gv0) (a :: gv0)), (Permutation (l1 ++ gv0) (b :: l2)), (Permutation (l1 ++ gv0) (b :: l1)), (Permutation (l1 ++ gv0) (b :: gv0)), (Permutation (l1 ++ gv0) (merge l2 l2)), (Permutation (l1 ++ gv0) (merge l2 l1)), (Permutation (l1 ++ gv0) (merge l2 gv0)), (Permutation (l1 ++ gv0) (merge l1 l2)), (Permutation (l1 ++ gv0) (merge l1 l1)), (Permutation (l1 ++ gv0) (merge l1 gv0))
(Permutation (l1 ++ gv0) (merge gv0 l1)), (Permutation (l1 ++ gv0) (merge gv0 gv0)), (Permutation (l1 ++ gv0) (l2 ++ l2)), (Permutation (l1 ++ gv0) (l2 ++ l1)), (Permutation (l1 ++ gv0) (l2 ++ gv0)), (Permutation (l1 ++ gv0) (l1 ++ l2)), (Permutation (l1 ++ gv0) (l1 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ l2)), (Permutation (l1 ++ gv0) (gv0 ++ l1)), (Permutation (l1 ++ gv0) (gv0 ++ gv0))
(Permutation (gv0 ++ l2) l2), (Permutation (gv0 ++ l2) l1), (Permutation (gv0 ++ l2) gv0), (Permutation (gv0 ++ l2) (a0 :: l2)), (Permutation (gv0 ++ l2) (a0 :: l1)), (Permutation (gv0 ++ l2) (a0 :: gv0)), (Permutation (gv0 ++ l2) (a :: l2)), (Permutation (gv0 ++ l2) (a :: l1)), (Permutation (gv0 ++ l2) (a :: gv0)), (Permutation (gv0 ++ l2) (b :: l2))
(Permutation (gv0 ++ l2) (b :: gv0)), (Permutation (gv0 ++ l2) (merge l2 l2)), (Permutation (gv0 ++ l2) (merge l2 l1)), (Permutation (gv0 ++ l2) (merge l2 gv0)), (Permutation (gv0 ++ l2) (merge l1 l2)), (Permutation (gv0 ++ l2) (merge l1 l1)), (Permutation (gv0 ++ l2) (merge l1 gv0)), (Permutation (gv0 ++ l2) (merge gv0 l2)), (Permutation (gv0 ++ l2) (merge gv0 l1)), (Permutation (gv0 ++ l2) (merge gv0 gv0))
(Permutation (gv0 ++ l2) (l2 ++ l1)), (Permutation (gv0 ++ l2) (l2 ++ gv0)), (Permutation (gv0 ++ l2) (l1 ++ l2)), (Permutation (gv0 ++ l2) (l1 ++ l1)), (Permutation (gv0 ++ l2) (l1 ++ gv0)), (Permutation (gv0 ++ l2) (gv0 ++ l1)), (Permutation (gv0 ++ l2) (gv0 ++ gv0)), (Permutation (gv0 ++ l2) []), (Permutation (gv0 ++ l1) l2), (Permutation (gv0 ++ l1) l1)
(Permutation (gv0 ++ l1) (a0 :: l2)), (Permutation (gv0 ++ l1) (a0 :: l1)), (Permutation (gv0 ++ l1) (a0 :: gv0)), (Permutation (gv0 ++ l1) (a :: l2)), (Permutation (gv0 ++ l1) (a :: l1)), (Permutation (gv0 ++ l1) (a :: gv0)), (Permutation (gv0 ++ l1) (b :: l2)), (Permutation (gv0 ++ l1) (b :: l1)), (Permutation (gv0 ++ l1) (b :: gv0)), (Permutation (gv0 ++ l1) (merge l2 l2))
(Permutation (gv0 ++ l1) (merge l2 gv0)), (Permutation (gv0 ++ l1) (merge l1 l2)), (Permutation (gv0 ++ l1) (merge l1 l1)), (Permutation (gv0 ++ l1) (merge l1 gv0)), (Permutation (gv0 ++ l1) (merge gv0 l2)), (Permutation (gv0 ++ l1) (merge gv0 l1)), (Permutation (gv0 ++ l1) (merge gv0 gv0)), (Permutation (gv0 ++ l1) (l2 ++ l2)), (Permutation (gv0 ++ l1) (l2 ++ l1)), (Permutation (gv0 ++ l1) (l2 ++ gv0))
(Permutation (gv0 ++ l1) (l1 ++ l1)), (Permutation (gv0 ++ l1) (l1 ++ gv0)), (Permutation (gv0 ++ l1) (gv0 ++ l2)), (Permutation (gv0 ++ l1) (gv0 ++ gv0)), (Permutation (gv0 ++ l1) []), (Permutation (gv0 ++ gv0) l2), (Permutation (gv0 ++ gv0) l1), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (a0 :: l2)), (Permutation (gv0 ++ gv0) (a0 :: l1))
(Permutation (gv0 ++ gv0) (a :: l2)), (Permutation (gv0 ++ gv0) (a :: l1)), (Permutation (gv0 ++ gv0) (a :: gv0)), (Permutation (gv0 ++ gv0) (b :: l2)), (Permutation (gv0 ++ gv0) (b :: l1)), (Permutation (gv0 ++ gv0) (b :: gv0)), (Permutation (gv0 ++ gv0) (merge l2 l2)), (Permutation (gv0 ++ gv0) (merge l2 l1)), (Permutation (gv0 ++ gv0) (merge l2 gv0)), (Permutation (gv0 ++ gv0) (merge l1 l2))
(Permutation (gv0 ++ gv0) (merge l1 gv0)), (Permutation (gv0 ++ gv0) (merge gv0 l2)), (Permutation (gv0 ++ gv0) (merge gv0 l1)), (Permutation (gv0 ++ gv0) (merge gv0 gv0)), (Permutation (gv0 ++ gv0) (l2 ++ l2)), (Permutation (gv0 ++ gv0) (l2 ++ l1)), (Permutation (gv0 ++ gv0) (l2 ++ gv0)), (Permutation (gv0 ++ gv0) (l1 ++ l2)), (Permutation (gv0 ++ gv0) (l1 ++ l1)), (Permutation (gv0 ++ gv0) (l1 ++ gv0))
(Permutation (gv0 ++ gv0) (gv0 ++ l1)), (Permutation (gv0 ++ gv0) []), (Permutation [] gv0), (Permutation [] (a0 :: gv0)), (Permutation [] (a :: gv0)), (Permutation [] (b :: gv0)), (Permutation [] (merge l2 gv0)), (Permutation [] (merge l1 gv0)), (Permutation [] (merge gv0 l2)), (Permutation [] (merge gv0 l1))
(Permutation [] (l2 ++ gv0)), (Permutation [] (l1 ++ gv0)), (Permutation [] (gv0 ++ l2)), (Permutation [] (gv0 ++ l1)), (Permutation [] (gv0 ++ gv0)), (In a0 gv0), (In a0 (a0 :: gv0)), (In a0 (a :: gv0)), (In a0 (b :: gv0)), (In a0 (merge l2 gv0))
(In a0 (merge gv0 l2)), (In a0 (merge gv0 l1)), (In a0 (merge gv0 gv0)), (In a0 (l2 ++ gv0)), (In a0 (l1 ++ gv0)), (In a0 (gv0 ++ l2)), (In a0 (gv0 ++ l1)), (In a0 (gv0 ++ gv0)), (In a gv0), (In a (a0 :: gv0))
(In a (b :: gv0)), (In a (merge l2 gv0)), (In a (merge l1 gv0)), (In a (merge gv0 l2)), (In a (merge gv0 l1)), (In a (merge gv0 gv0)), (In a (l2 ++ gv0)), (In a (l1 ++ gv0)), (In a (gv0 ++ l2)), (In a (gv0 ++ l1))
(In b gv0), (In b (a0 :: gv0)), (In b (a :: gv0)), (In b (b :: gv0)), (In b (merge l2 gv0)), (In b (merge l1 gv0)), (In b (merge gv0 l2)), (In b (merge gv0 l1)), (In b (merge gv0 gv0)), (In b (l2 ++ gv0))
(In b (gv0 ++ l2)), (In b (gv0 ++ l1)), (In b (gv0 ++ gv0)), (In (length l2) gv0), (In (length l2) (a0 :: gv0)), (In (length l2) (a :: gv0)), (In (length l2) (b :: gv0)), (In (length l2) (merge l2 gv0)), (In (length l2) (merge l1 gv0)), (In (length l2) (merge gv0 l2))
(In (length l2) (merge gv0 gv0)), (In (length l2) (l2 ++ gv0)), (In (length l2) (l1 ++ gv0)), (In (length l2) (gv0 ++ l2)), (In (length l2) (gv0 ++ l1)), (In (length l2) (gv0 ++ gv0)), (In (length l1) gv0), (In (length l1) (a0 :: gv0)), (In (length l1) (a :: gv0)), (In (length l1) (b :: gv0))
(In (length l1) (merge l1 gv0)), (In (length l1) (merge gv0 l2)), (In (length l1) (merge gv0 l1)), (In (length l1) (merge gv0 gv0)), (In (length l1) (l2 ++ gv0)), (In (length l1) (l1 ++ gv0)), (In (length l1) (gv0 ++ l2)), (In (length l1) (gv0 ++ l1)), (In (length l1) (gv0 ++ gv0)), (In (length gv0) l2)
(In (length gv0) gv0), (In (length gv0) (a0 :: l2)), (In (length gv0) (a0 :: l1)), (In (length gv0) (a0 :: gv0)), (In (length gv0) (a :: l2)), (In (length gv0) (a :: l1)), (In (length gv0) (a :: gv0)), (In (length gv0) (b :: l2)), (In (length gv0) (b :: l1)), (In (length gv0) (b :: gv0))
(In (length gv0) (merge l2 l1)), (In (length gv0) (merge l2 gv0)), (In (length gv0) (merge l1 l2)), (In (length gv0) (merge l1 l1)), (In (length gv0) (merge l1 gv0)), (In (length gv0) (merge gv0 l2)), (In (length gv0) (merge gv0 l1)), (In (length gv0) (merge gv0 gv0)), (In (length gv0) (l2 ++ l2)), (In (length gv0) (l2 ++ l1))
(In (length gv0) (l1 ++ l2)), (In (length gv0) (l1 ++ l1)), (In (length gv0) (l1 ++ gv0)), (In (length gv0) (gv0 ++ l2)), (In (length gv0) (gv0 ++ l1)), (In (length gv0) (gv0 ++ gv0)), (a0 < length gv0), (a < length gv0), (b < length gv0), (length l2 < length gv0)
(length gv0 < a0), (length gv0 < a), (length gv0 < b), (length gv0 < length l2), (length gv0 < length l1), (a0 <= length gv0), (a <= length gv0), (b <= length gv0), (length l2 <= length gv0), (length l1 <= length gv0)
(length gv0 <= a), (length gv0 <= b), (length gv0 <= length l2), (length gv0 <= length l1), (merge l2 l2 = gv0), (merge l2 l2 = l2 ++ gv0), (merge l2 l2 = l1 ++ gv0), (merge l2 l2 = gv0 ++ l2), (merge l2 l2 = gv0 ++ l1), (merge l2 l2 = gv0 ++ gv0)
(merge l2 l1 = l2 ++ gv0), (merge l2 l1 = l1 ++ gv0), (merge l2 l1 = gv0 ++ l2), (merge l2 l1 = gv0 ++ l1), (merge l2 l1 = gv0 ++ gv0), (merge l2 gv0 = l2), (merge l2 gv0 = l1), (merge l2 gv0 = gv0), (merge l2 gv0 = l2 ++ l2), (merge l2 gv0 = l2 ++ l1)
(merge l2 gv0 = l1 ++ l2), (merge l2 gv0 = l1 ++ l1), (merge l2 gv0 = l1 ++ gv0), (merge l2 gv0 = gv0 ++ l2), (merge l2 gv0 = gv0 ++ l1), (merge l2 gv0 = gv0 ++ gv0), (merge l1 l2 = gv0), (merge l1 l2 = l2 ++ gv0), (merge l1 l2 = l1 ++ gv0), (merge l1 l2 = gv0 ++ l2)
(merge l1 l2 = gv0 ++ gv0), (merge l1 l1 = gv0), (merge l1 l1 = l2 ++ gv0), (merge l1 l1 = l1 ++ gv0), (merge l1 l1 = gv0 ++ l2), (merge l1 l1 = gv0 ++ l1), (merge l1 l1 = gv0 ++ gv0), (merge l1 gv0 = l2), (merge l1 gv0 = l1), (merge l1 gv0 = gv0)
(merge l1 gv0 = l2 ++ l1), (merge l1 gv0 = l2 ++ gv0), (merge l1 gv0 = l1 ++ l2), (merge l1 gv0 = l1 ++ l1), (merge l1 gv0 = l1 ++ gv0), (merge l1 gv0 = gv0 ++ l2), (merge l1 gv0 = gv0 ++ l1), (merge l1 gv0 = gv0 ++ gv0), (merge gv0 l2 = l2), (merge gv0 l2 = l1)
(merge gv0 l2 = l2 ++ l2), (merge gv0 l2 = l2 ++ l1), (merge gv0 l2 = l2 ++ gv0), (merge gv0 l2 = l1 ++ l2), (merge gv0 l2 = l1 ++ l1), (merge gv0 l2 = l1 ++ gv0), (merge gv0 l2 = gv0 ++ l2), (merge gv0 l2 = gv0 ++ l1), (merge gv0 l2 = gv0 ++ gv0), (merge gv0 l1 = l2)
(merge gv0 l1 = gv0), (merge gv0 l1 = l2 ++ l2), (merge gv0 l1 = l2 ++ l1), (merge gv0 l1 = l2 ++ gv0), (merge gv0 l1 = l1 ++ l2), (merge gv0 l1 = l1 ++ l1), (merge gv0 l1 = l1 ++ gv0), (merge gv0 l1 = gv0 ++ l2), (merge gv0 l1 = gv0 ++ l1), (merge gv0 l1 = gv0 ++ gv0)
(merge gv0 gv0 = l1), (merge gv0 gv0 = gv0), (merge gv0 gv0 = l2 ++ l2), (merge gv0 gv0 = l2 ++ l1), (merge gv0 gv0 = l2 ++ gv0), (merge gv0 gv0 = l1 ++ l2), (merge gv0 gv0 = l1 ++ l1), (merge gv0 gv0 = l1 ++ gv0), (merge gv0 gv0 = gv0 ++ l2), (merge gv0 gv0 = gv0 ++ l1)
(l2 ++ l2 = gv0), (l2 ++ l1 = gv0), (l2 ++ gv0 = l2), (l2 ++ gv0 = l1), (l2 ++ gv0 = gv0), (l1 ++ l2 = gv0), (l1 ++ l1 = gv0), (l1 ++ gv0 = l2), (l1 ++ gv0 = l1), (l1 ++ gv0 = gv0)
(gv0 ++ l2 = l1), (gv0 ++ l2 = gv0), (gv0 ++ l1 = l2), (gv0 ++ l1 = l1), (gv0 ++ l1 = gv0), (gv0 ++ gv0 = l2), (gv0 ++ gv0 = l1), (gv0 ++ gv0 = gv0), (length gv0 = a0), (length gv0 = a)

Label: 1 (3)
(false = sorted_bool gv2), (true = sorted_bool gv2), (a0 <=* gv2), (a0 <=* a0 :: gv2), (a0 <=* a :: gv2), (a0 <=* b :: gv2), (a0 <=* merge l2 gv2), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 l1)
(a0 <=* l2 ++ gv2), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ l1), (a0 <=* l1 ++ gv2), (a <=* gv2), (a <=* a0 :: gv2), (a <=* a :: gv2), (a <=* b :: gv2), (a <=* merge l2 gv2)
(a <=* merge gv2 gv2), (a <=* merge gv2 l1), (a <=* merge l1 gv2), (a <=* l2 ++ gv2), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2), (a <=* gv2 ++ l1), (a <=* l1 ++ gv2), (b <=* gv2), (b <=* a0 :: gv2)
(b <=* b :: gv2), (b <=* merge l2 gv2), (b <=* merge gv2 l2), (b <=* merge gv2 gv2), (b <=* merge gv2 l1), (b <=* merge l1 gv2), (b <=* l2 ++ gv2), (b <=* gv2 ++ l2), (b <=* gv2 ++ gv2), (b <=* gv2 ++ l1)
(length l2 <=* gv2), (length l2 <=* a0 :: gv2), (length l2 <=* a :: gv2), (length l2 <=* b :: gv2), (length l2 <=* merge l2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l1), (length l2 <=* merge l1 gv2), (length l2 <=* l2 ++ gv2)
(length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l1), (length l2 <=* l1 ++ gv2), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* l1), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: l1), (length gv2 <=* a :: l2)
(length gv2 <=* a :: l1), (length gv2 <=* b :: l2), (length gv2 <=* b :: gv2), (length gv2 <=* b :: l1), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l1), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l1)
(length gv2 <=* merge l1 gv2), (length gv2 <=* merge l1 l1), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l1), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l1), (length gv2 <=* l1 ++ l2), (length gv2 <=* l1 ++ gv2)
(length gv2 <=* []), (length l1 <=* gv2), (length l1 <=* a0 :: gv2), (length l1 <=* a :: gv2), (length l1 <=* b :: gv2), (length l1 <=* merge l2 gv2), (length l1 <=* merge gv2 l2), (length l1 <=* merge gv2 gv2), (length l1 <=* merge gv2 l1), (length l1 <=* merge l1 gv2)
(length l1 <=* gv2 ++ l2), (length l1 <=* gv2 ++ gv2), (length l1 <=* gv2 ++ l1), (length l1 <=* l1 ++ gv2), (sorted gv2), (sorted (a0 :: gv2)), (sorted (a :: gv2)), (sorted (b :: gv2)), (sorted (merge l2 gv2)), (sorted (merge gv2 l2))
(sorted (merge gv2 l1)), (sorted (merge l1 gv2)), (sorted (l2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l1)), (sorted (l1 ++ gv2)), (Permutation l2 gv2), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a :: gv2))
(Permutation l2 (merge l2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l1)), (Permutation l2 (merge l1 gv2)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l1)), (Permutation l2 (l1 ++ gv2))
(Permutation gv2 l1), (Permutation gv2 (a0 :: l2)), (Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: l1)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: l1)), (Permutation gv2 (b :: l2)), (Permutation gv2 (b :: gv2)), (Permutation gv2 (b :: l1))
(Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 l1)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l1)), (Permutation gv2 (merge l1 l2)), (Permutation gv2 (merge l1 gv2)), (Permutation gv2 (merge l1 l1)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2))
(Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l1)), (Permutation gv2 (l1 ++ l2)), (Permutation gv2 (l1 ++ gv2)), (Permutation gv2 (l1 ++ l1)), (Permutation gv2 []), (Permutation l1 gv2), (Permutation l1 (a0 :: gv2)), (Permutation l1 (a :: gv2))
(Permutation l1 (merge l2 gv2)), (Permutation l1 (merge gv2 l2)), (Permutation l1 (merge gv2 gv2)), (Permutation l1 (merge gv2 l1)), (Permutation l1 (merge l1 gv2)), (Permutation l1 (l2 ++ gv2)), (Permutation l1 (gv2 ++ l2)), (Permutation l1 (gv2 ++ gv2)), (Permutation l1 (gv2 ++ l1)), (Permutation l1 (l1 ++ gv2))
(Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (b :: gv2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 l1)), (Permutation (a0 :: l2) (merge l1 gv2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ gv2)), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) l1), (Permutation (a0 :: gv2) (a0 :: l2)), (Permutation (a0 :: gv2) (a0 :: l1)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: l1))
(Permutation (a0 :: gv2) (b :: gv2)), (Permutation (a0 :: gv2) (b :: l1)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 l1)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 l1)), (Permutation (a0 :: gv2) (merge l1 l2)), (Permutation (a0 :: gv2) (merge l1 gv2))
(Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ l1)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ l1)), (Permutation (a0 :: gv2) (l1 ++ l2)), (Permutation (a0 :: gv2) (l1 ++ gv2)), (Permutation (a0 :: gv2) (l1 ++ l1)), (Permutation (a0 :: gv2) [])
(Permutation (a0 :: l1) (a0 :: gv2)), (Permutation (a0 :: l1) (a :: gv2)), (Permutation (a0 :: l1) (b :: gv2)), (Permutation (a0 :: l1) (merge l2 gv2)), (Permutation (a0 :: l1) (merge gv2 l2)), (Permutation (a0 :: l1) (merge gv2 gv2)), (Permutation (a0 :: l1) (merge gv2 l1)), (Permutation (a0 :: l1) (merge l1 gv2)), (Permutation (a0 :: l1) (l2 ++ gv2)), (Permutation (a0 :: l1) (gv2 ++ l2))
(Permutation (a0 :: l1) (gv2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ gv2)), (Permutation (a :: l2) gv2), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (b :: gv2)), (Permutation (a :: l2) (merge l2 gv2)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 l1))
(Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l1)), (Permutation (a :: l2) (l1 ++ gv2)), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) l1), (Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2))
(Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: l1)), (Permutation (a :: gv2) (b :: l2)), (Permutation (a :: gv2) (b :: gv2)), (Permutation (a :: gv2) (b :: l1)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 l1)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge l1 l2)), (Permutation (a :: gv2) (merge l1 gv2)), (Permutation (a :: gv2) (merge l1 l1)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ l1)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ l1)), (Permutation (a :: gv2) (l1 ++ l2))
(Permutation (a :: gv2) (l1 ++ l1)), (Permutation (a :: gv2) []), (Permutation (a :: l1) gv2), (Permutation (a :: l1) (a0 :: gv2)), (Permutation (a :: l1) (a :: gv2)), (Permutation (a :: l1) (b :: gv2)), (Permutation (a :: l1) (merge l2 gv2)), (Permutation (a :: l1) (merge gv2 l2)), (Permutation (a :: l1) (merge gv2 gv2)), (Permutation (a :: l1) (merge gv2 l1))
(Permutation (a :: l1) (l2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l2)), (Permutation (a :: l1) (gv2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l1)), (Permutation (a :: l1) (l1 ++ gv2)), (Permutation (b :: l2) gv2), (Permutation (b :: l2) (a0 :: gv2)), (Permutation (b :: l2) (a :: gv2)), (Permutation (b :: l2) (b :: gv2)), (Permutation (b :: l2) (merge l2 gv2))
(Permutation (b :: l2) (merge gv2 gv2)), (Permutation (b :: l2) (merge gv2 l1)), (Permutation (b :: l2) (merge l1 gv2)), (Permutation (b :: l2) (l2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l2)), (Permutation (b :: l2) (gv2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l1)), (Permutation (b :: l2) (l1 ++ gv2)), (Permutation (b :: gv2) l2), (Permutation (b :: gv2) gv2)
(Permutation (b :: gv2) (a0 :: l2)), (Permutation (b :: gv2) (a0 :: gv2)), (Permutation (b :: gv2) (a0 :: l1)), (Permutation (b :: gv2) (a :: l2)), (Permutation (b :: gv2) (a :: gv2)), (Permutation (b :: gv2) (a :: l1)), (Permutation (b :: gv2) (b :: l2)), (Permutation (b :: gv2) (b :: l1)), (Permutation (b :: gv2) (merge l2 l2)), (Permutation (b :: gv2) (merge l2 gv2))
(Permutation (b :: gv2) (merge gv2 l2)), (Permutation (b :: gv2) (merge gv2 gv2)), (Permutation (b :: gv2) (merge gv2 l1)), (Permutation (b :: gv2) (merge l1 l2)), (Permutation (b :: gv2) (merge l1 gv2)), (Permutation (b :: gv2) (merge l1 l1)), (Permutation (b :: gv2) (l2 ++ l2)), (Permutation (b :: gv2) (l2 ++ gv2)), (Permutation (b :: gv2) (l2 ++ l1)), (Permutation (b :: gv2) (gv2 ++ l2))
(Permutation (b :: gv2) (gv2 ++ l1)), (Permutation (b :: gv2) (l1 ++ l2)), (Permutation (b :: gv2) (l1 ++ gv2)), (Permutation (b :: gv2) (l1 ++ l1)), (Permutation (b :: gv2) []), (Permutation (b :: l1) gv2), (Permutation (b :: l1) (a0 :: gv2)), (Permutation (b :: l1) (a :: gv2)), (Permutation (b :: l1) (b :: gv2)), (Permutation (b :: l1) (merge l2 gv2))
(Permutation (b :: l1) (merge gv2 gv2)), (Permutation (b :: l1) (merge gv2 l1)), (Permutation (b :: l1) (merge l1 gv2)), (Permutation (b :: l1) (l2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l2)), (Permutation (b :: l1) (gv2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l1)), (Permutation (b :: l1) (l1 ++ gv2)), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) (a0 :: gv2))
(Permutation (merge l2 l2) (b :: gv2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l1)), (Permutation (merge l2 l2) (merge l1 gv2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l1))
(Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) l1), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: l1)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: l1)), (Permutation (merge l2 gv2) (b :: l2))
(Permutation (merge l2 gv2) (b :: l1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 l1)), (Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 l1)), (Permutation (merge l2 gv2) (merge l1 l2)), (Permutation (merge l2 gv2) (merge l1 gv2)), (Permutation (merge l2 gv2) (merge l1 l1)), (Permutation (merge l2 gv2) (l2 ++ l2))
(Permutation (merge l2 gv2) (l2 ++ l1)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l1)), (Permutation (merge l2 gv2) (l1 ++ l2)), (Permutation (merge l2 gv2) (l1 ++ gv2)), (Permutation (merge l2 gv2) (l1 ++ l1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l1) gv2), (Permutation (merge l2 l1) (a0 :: gv2))
(Permutation (merge l2 l1) (b :: gv2)), (Permutation (merge l2 l1) (merge l2 gv2)), (Permutation (merge l2 l1) (merge gv2 l2)), (Permutation (merge l2 l1) (merge gv2 gv2)), (Permutation (merge l2 l1) (merge gv2 l1)), (Permutation (merge l2 l1) (merge l1 gv2)), (Permutation (merge l2 l1) (l2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l2)), (Permutation (merge l2 l1) (gv2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l1))
(Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) l1), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: l1)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2)), (Permutation (merge gv2 l2) (a :: l1)), (Permutation (merge gv2 l2) (b :: l2))
(Permutation (merge gv2 l2) (b :: l1)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 l1)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 l1)), (Permutation (merge gv2 l2) (merge l1 l2)), (Permutation (merge gv2 l2) (merge l1 gv2)), (Permutation (merge gv2 l2) (merge l1 l1)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ l1)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l1)), (Permutation (merge gv2 l2) (l1 ++ l2)), (Permutation (merge gv2 l2) (l1 ++ gv2)), (Permutation (merge gv2 l2) (l1 ++ l1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) gv2)
(Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: l1)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: l1)), (Permutation (merge gv2 gv2) (b :: l2)), (Permutation (merge gv2 gv2) (b :: gv2)), (Permutation (merge gv2 gv2) (b :: l1)), (Permutation (merge gv2 gv2) (merge l2 l2))
(Permutation (merge gv2 gv2) (merge l2 l1)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 l1)), (Permutation (merge gv2 gv2) (merge l1 l2)), (Permutation (merge gv2 gv2) (merge l1 gv2)), (Permutation (merge gv2 gv2) (merge l1 l1)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l1)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ l1)), (Permutation (merge gv2 gv2) (l1 ++ l2)), (Permutation (merge gv2 gv2) (l1 ++ gv2)), (Permutation (merge gv2 gv2) (l1 ++ l1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l1) l2), (Permutation (merge gv2 l1) gv2), (Permutation (merge gv2 l1) l1), (Permutation (merge gv2 l1) (a0 :: l2)), (Permutation (merge gv2 l1) (a0 :: gv2))
(Permutation (merge gv2 l1) (a :: l2)), (Permutation (merge gv2 l1) (a :: gv2)), (Permutation (merge gv2 l1) (a :: l1)), (Permutation (merge gv2 l1) (b :: l2)), (Permutation (merge gv2 l1) (b :: gv2)), (Permutation (merge gv2 l1) (b :: l1)), (Permutation (merge gv2 l1) (merge l2 l2)), (Permutation (merge gv2 l1) (merge l2 gv2)), (Permutation (merge gv2 l1) (merge l2 l1)), (Permutation (merge gv2 l1) (merge gv2 l2))
(Permutation (merge gv2 l1) (merge l1 l2)), (Permutation (merge gv2 l1) (merge l1 gv2)), (Permutation (merge gv2 l1) (merge l1 l1)), (Permutation (merge gv2 l1) (l2 ++ l2)), (Permutation (merge gv2 l1) (l2 ++ gv2)), (Permutation (merge gv2 l1) (l2 ++ l1)), (Permutation (merge gv2 l1) (gv2 ++ l2)), (Permutation (merge gv2 l1) (gv2 ++ gv2)), (Permutation (merge gv2 l1) (gv2 ++ l1)), (Permutation (merge gv2 l1) (l1 ++ l2))
(Permutation (merge gv2 l1) (l1 ++ l1)), (Permutation (merge gv2 l1) []), (Permutation (merge l1 l2) gv2), (Permutation (merge l1 l2) (a0 :: gv2)), (Permutation (merge l1 l2) (a :: gv2)), (Permutation (merge l1 l2) (b :: gv2)), (Permutation (merge l1 l2) (merge l2 gv2)), (Permutation (merge l1 l2) (merge gv2 l2)), (Permutation (merge l1 l2) (merge gv2 gv2)), (Permutation (merge l1 l2) (merge gv2 l1))
(Permutation (merge l1 l2) (l2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l2)), (Permutation (merge l1 l2) (gv2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ gv2)), (Permutation (merge l1 gv2) l2), (Permutation (merge l1 gv2) gv2), (Permutation (merge l1 gv2) l1), (Permutation (merge l1 gv2) (a0 :: l2)), (Permutation (merge l1 gv2) (a0 :: gv2))
(Permutation (merge l1 gv2) (a :: l2)), (Permutation (merge l1 gv2) (a :: gv2)), (Permutation (merge l1 gv2) (a :: l1)), (Permutation (merge l1 gv2) (b :: l2)), (Permutation (merge l1 gv2) (b :: gv2)), (Permutation (merge l1 gv2) (b :: l1)), (Permutation (merge l1 gv2) (merge l2 l2)), (Permutation (merge l1 gv2) (merge l2 gv2)), (Permutation (merge l1 gv2) (merge l2 l1)), (Permutation (merge l1 gv2) (merge gv2 l2))
(Permutation (merge l1 gv2) (merge gv2 l1)), (Permutation (merge l1 gv2) (merge l1 l2)), (Permutation (merge l1 gv2) (merge l1 l1)), (Permutation (merge l1 gv2) (l2 ++ l2)), (Permutation (merge l1 gv2) (l2 ++ gv2)), (Permutation (merge l1 gv2) (l2 ++ l1)), (Permutation (merge l1 gv2) (gv2 ++ l2)), (Permutation (merge l1 gv2) (gv2 ++ gv2)), (Permutation (merge l1 gv2) (gv2 ++ l1)), (Permutation (merge l1 gv2) (l1 ++ l2))
(Permutation (merge l1 gv2) (l1 ++ l1)), (Permutation (merge l1 gv2) []), (Permutation (merge l1 l1) gv2), (Permutation (merge l1 l1) (a0 :: gv2)), (Permutation (merge l1 l1) (a :: gv2)), (Permutation (merge l1 l1) (b :: gv2)), (Permutation (merge l1 l1) (merge l2 gv2)), (Permutation (merge l1 l1) (merge gv2 l2)), (Permutation (merge l1 l1) (merge gv2 gv2)), (Permutation (merge l1 l1) (merge gv2 l1))
(Permutation (merge l1 l1) (l2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l2)), (Permutation (merge l1 l1) (gv2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ gv2)), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (b :: gv2)), (Permutation (l2 ++ l2) (merge l2 gv2))
(Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 l1)), (Permutation (l2 ++ l2) (merge l1 gv2)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2)
(Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: l1)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: l1)), (Permutation (l2 ++ gv2) (b :: l2)), (Permutation (l2 ++ gv2) (b :: gv2)), (Permutation (l2 ++ gv2) (b :: l1)), (Permutation (l2 ++ gv2) (merge l2 l2))
(Permutation (l2 ++ gv2) (merge l2 l1)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l1)), (Permutation (l2 ++ gv2) (merge l1 l2)), (Permutation (l2 ++ gv2) (merge l1 gv2)), (Permutation (l2 ++ gv2) (merge l1 l1)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l1)), (Permutation (l2 ++ gv2) (gv2 ++ l2))
(Permutation (l2 ++ gv2) (gv2 ++ l1)), (Permutation (l2 ++ gv2) (l1 ++ l2)), (Permutation (l2 ++ gv2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) (l1 ++ l1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l1) gv2), (Permutation (l2 ++ l1) (a0 :: gv2)), (Permutation (l2 ++ l1) (a :: gv2)), (Permutation (l2 ++ l1) (b :: gv2)), (Permutation (l2 ++ l1) (merge l2 gv2))
(Permutation (l2 ++ l1) (merge gv2 gv2)), (Permutation (l2 ++ l1) (merge gv2 l1)), (Permutation (l2 ++ l1) (merge l1 gv2)), (Permutation (l2 ++ l1) (l2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l2)), (Permutation (l2 ++ l1) (gv2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2)
(Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2)), (Permutation (gv2 ++ l2) (a0 :: l1)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: l1)), (Permutation (gv2 ++ l2) (b :: l2)), (Permutation (gv2 ++ l2) (b :: gv2)), (Permutation (gv2 ++ l2) (b :: l1)), (Permutation (gv2 ++ l2) (merge l2 l2))
(Permutation (gv2 ++ l2) (merge l2 l1)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l1)), (Permutation (gv2 ++ l2) (merge l1 l2)), (Permutation (gv2 ++ l2) (merge l1 gv2)), (Permutation (gv2 ++ l2) (merge l1 l1)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l1))
(Permutation (gv2 ++ l2) (gv2 ++ l1)), (Permutation (gv2 ++ l2) (l1 ++ l2)), (Permutation (gv2 ++ l2) (l1 ++ gv2)), (Permutation (gv2 ++ l2) (l1 ++ l1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) l1), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2))
(Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2)), (Permutation (gv2 ++ gv2) (a :: l1)), (Permutation (gv2 ++ gv2) (b :: l2)), (Permutation (gv2 ++ gv2) (b :: gv2)), (Permutation (gv2 ++ gv2) (b :: l1)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l1)), (Permutation (gv2 ++ gv2) (merge gv2 l2))
(Permutation (gv2 ++ gv2) (merge gv2 l1)), (Permutation (gv2 ++ gv2) (merge l1 l2)), (Permutation (gv2 ++ gv2) (merge l1 gv2)), (Permutation (gv2 ++ gv2) (merge l1 l1)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l1)), (Permutation (gv2 ++ gv2) (l1 ++ l2))
(Permutation (gv2 ++ gv2) (l1 ++ l1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l1) l2), (Permutation (gv2 ++ l1) gv2), (Permutation (gv2 ++ l1) l1), (Permutation (gv2 ++ l1) (a0 :: l2)), (Permutation (gv2 ++ l1) (a0 :: gv2)), (Permutation (gv2 ++ l1) (a0 :: l1)), (Permutation (gv2 ++ l1) (a :: l2)), (Permutation (gv2 ++ l1) (a :: gv2))
(Permutation (gv2 ++ l1) (b :: l2)), (Permutation (gv2 ++ l1) (b :: gv2)), (Permutation (gv2 ++ l1) (b :: l1)), (Permutation (gv2 ++ l1) (merge l2 l2)), (Permutation (gv2 ++ l1) (merge l2 gv2)), (Permutation (gv2 ++ l1) (merge l2 l1)), (Permutation (gv2 ++ l1) (merge gv2 l2)), (Permutation (gv2 ++ l1) (merge gv2 gv2)), (Permutation (gv2 ++ l1) (merge gv2 l1)), (Permutation (gv2 ++ l1) (merge l1 l2))
(Permutation (gv2 ++ l1) (merge l1 l1)), (Permutation (gv2 ++ l1) (l2 ++ l2)), (Permutation (gv2 ++ l1) (l2 ++ gv2)), (Permutation (gv2 ++ l1) (l2 ++ l1)), (Permutation (gv2 ++ l1) (gv2 ++ l2)), (Permutation (gv2 ++ l1) (gv2 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l2)), (Permutation (gv2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l1)), (Permutation (gv2 ++ l1) [])
(Permutation (l1 ++ l2) (a0 :: gv2)), (Permutation (l1 ++ l2) (a :: gv2)), (Permutation (l1 ++ l2) (b :: gv2)), (Permutation (l1 ++ l2) (merge l2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l2)), (Permutation (l1 ++ l2) (merge gv2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l1)), (Permutation (l1 ++ l2) (merge l1 gv2)), (Permutation (l1 ++ l2) (l2 ++ gv2)), (Permutation (l1 ++ l2) (gv2 ++ l2))
(Permutation (l1 ++ l2) (gv2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv2)), (Permutation (l1 ++ gv2) l2), (Permutation (l1 ++ gv2) gv2), (Permutation (l1 ++ gv2) l1), (Permutation (l1 ++ gv2) (a0 :: l2)), (Permutation (l1 ++ gv2) (a0 :: gv2)), (Permutation (l1 ++ gv2) (a0 :: l1)), (Permutation (l1 ++ gv2) (a :: l2)), (Permutation (l1 ++ gv2) (a :: gv2))
(Permutation (l1 ++ gv2) (b :: l2)), (Permutation (l1 ++ gv2) (b :: gv2)), (Permutation (l1 ++ gv2) (b :: l1)), (Permutation (l1 ++ gv2) (merge l2 l2)), (Permutation (l1 ++ gv2) (merge l2 gv2)), (Permutation (l1 ++ gv2) (merge l2 l1)), (Permutation (l1 ++ gv2) (merge gv2 l2)), (Permutation (l1 ++ gv2) (merge gv2 gv2)), (Permutation (l1 ++ gv2) (merge gv2 l1)), (Permutation (l1 ++ gv2) (merge l1 l2))
(Permutation (l1 ++ gv2) (merge l1 l1)), (Permutation (l1 ++ gv2) (l2 ++ l2)), (Permutation (l1 ++ gv2) (l2 ++ gv2)), (Permutation (l1 ++ gv2) (l2 ++ l1)), (Permutation (l1 ++ gv2) (gv2 ++ l2)), (Permutation (l1 ++ gv2) (gv2 ++ gv2)), (Permutation (l1 ++ gv2) (gv2 ++ l1)), (Permutation (l1 ++ gv2) (l1 ++ l2)), (Permutation (l1 ++ gv2) (l1 ++ l1)), (Permutation (l1 ++ gv2) [])
(Permutation (l1 ++ l1) (a0 :: gv2)), (Permutation (l1 ++ l1) (a :: gv2)), (Permutation (l1 ++ l1) (b :: gv2)), (Permutation (l1 ++ l1) (merge l2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l2)), (Permutation (l1 ++ l1) (merge gv2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l1)), (Permutation (l1 ++ l1) (merge l1 gv2)), (Permutation (l1 ++ l1) (l2 ++ gv2)), (Permutation (l1 ++ l1) (gv2 ++ l2))
(Permutation (l1 ++ l1) (gv2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ gv2)), (Permutation [] gv2), (Permutation [] (a0 :: gv2)), (Permutation [] (a :: gv2)), (Permutation [] (b :: gv2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l1))
(Permutation [] (l2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l1)), (Permutation [] (l1 ++ gv2)), (In a0 gv2), (In a0 (a0 :: gv2)), (In a0 (a :: gv2)), (In a0 (b :: gv2)), (In a0 (merge l2 gv2))
(In a0 (merge gv2 gv2)), (In a0 (merge gv2 l1)), (In a0 (merge l1 gv2)), (In a0 (l2 ++ gv2)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ l1)), (In a0 (l1 ++ gv2)), (In a gv2), (In a (a0 :: gv2))
(In a (b :: gv2)), (In a (merge l2 gv2)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 l1)), (In a (merge l1 gv2)), (In a (l2 ++ gv2)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ l1))
(In b gv2), (In b (a0 :: gv2)), (In b (a :: gv2)), (In b (b :: gv2)), (In b (merge l2 gv2)), (In b (merge gv2 l2)), (In b (merge gv2 gv2)), (In b (merge gv2 l1)), (In b (merge l1 gv2)), (In b (l2 ++ gv2))
(In b (gv2 ++ gv2)), (In b (gv2 ++ l1)), (In b (l1 ++ gv2)), (In (length l2) gv2), (In (length l2) (a0 :: gv2)), (In (length l2) (a :: gv2)), (In (length l2) (b :: gv2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2))
(In (length l2) (merge l1 gv2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l1)), (In (length l2) (l1 ++ gv2)), (In (length gv2) l2), (In (length gv2) gv2), (In (length gv2) l1), (In (length gv2) (a0 :: l2))
(In (length gv2) (a0 :: l1)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: l1)), (In (length gv2) (b :: l2)), (In (length gv2) (b :: gv2)), (In (length gv2) (b :: l1)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l1))
(In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l1)), (In (length gv2) (merge l1 l2)), (In (length gv2) (merge l1 gv2)), (In (length gv2) (merge l1 l1)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l1)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2))
(In (length gv2) (l1 ++ l2)), (In (length gv2) (l1 ++ gv2)), (In (length gv2) (l1 ++ l1)), (In (length l1) gv2), (In (length l1) (a0 :: gv2)), (In (length l1) (a :: gv2)), (In (length l1) (b :: gv2)), (In (length l1) (merge l2 gv2)), (In (length l1) (merge gv2 l2)), (In (length l1) (merge gv2 gv2))
(In (length l1) (merge l1 gv2)), (In (length l1) (l2 ++ gv2)), (In (length l1) (gv2 ++ l2)), (In (length l1) (gv2 ++ gv2)), (In (length l1) (gv2 ++ l1)), (In (length l1) (l1 ++ gv2)), (a0 < length gv2), (a < length gv2), (b < length gv2), (length l2 < length gv2)
(length gv2 < a), (length gv2 < b), (length gv2 < length l2), (length gv2 < length l1), (length l1 < length gv2), (a0 <= length gv2), (a <= length gv2), (b <= length gv2), (length l2 <= length gv2), (length gv2 <= a0)
(length gv2 <= b), (length gv2 <= length l2), (length gv2 <= length l1), (length l1 <= length gv2), (merge l2 l2 = gv2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l1), (merge l2 l2 = l1 ++ gv2)
(merge l2 gv2 = gv2), (merge l2 gv2 = l1), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l1), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ l1), (merge l2 gv2 = l1 ++ l2), (merge l2 gv2 = l1 ++ gv2)
(merge l2 l1 = gv2), (merge l2 l1 = l2 ++ gv2), (merge l2 l1 = gv2 ++ l2), (merge l2 l1 = gv2 ++ gv2), (merge l2 l1 = gv2 ++ l1), (merge l2 l1 = l1 ++ gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = l1), (merge gv2 l2 = l2 ++ l2)
(merge gv2 l2 = l2 ++ l1), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l1), (merge gv2 l2 = l1 ++ l2), (merge gv2 l2 = l1 ++ gv2), (merge gv2 l2 = l1 ++ l1), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l1)
(merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ l1), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l1), (merge gv2 gv2 = l1 ++ l2), (merge gv2 gv2 = l1 ++ gv2), (merge gv2 gv2 = l1 ++ l1), (merge gv2 l1 = l2), (merge gv2 l1 = gv2)
(merge gv2 l1 = l2 ++ l2), (merge gv2 l1 = l2 ++ gv2), (merge gv2 l1 = l2 ++ l1), (merge gv2 l1 = gv2 ++ l2), (merge gv2 l1 = gv2 ++ gv2), (merge gv2 l1 = gv2 ++ l1), (merge gv2 l1 = l1 ++ l2), (merge gv2 l1 = l1 ++ gv2), (merge gv2 l1 = l1 ++ l1), (merge l1 l2 = gv2)
(merge l1 l2 = gv2 ++ l2), (merge l1 l2 = gv2 ++ gv2), (merge l1 l2 = gv2 ++ l1), (merge l1 l2 = l1 ++ gv2), (merge l1 gv2 = l2), (merge l1 gv2 = gv2), (merge l1 gv2 = l1), (merge l1 gv2 = l2 ++ l2), (merge l1 gv2 = l2 ++ gv2), (merge l1 gv2 = l2 ++ l1)
(merge l1 gv2 = gv2 ++ gv2), (merge l1 gv2 = gv2 ++ l1), (merge l1 gv2 = l1 ++ l2), (merge l1 gv2 = l1 ++ gv2), (merge l1 gv2 = l1 ++ l1), (merge l1 l1 = gv2), (merge l1 l1 = l2 ++ gv2), (merge l1 l1 = gv2 ++ l2), (merge l1 l1 = gv2 ++ gv2), (merge l1 l1 = gv2 ++ l1)
(l2 ++ l2 = gv2), (l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l1), (l2 ++ l1 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l1), (gv2 ++ gv2 = l2), (gv2 ++ gv2 = gv2)
(gv2 ++ l1 = l2), (gv2 ++ l1 = gv2), (gv2 ++ l1 = l1), (l1 ++ l2 = gv2), (l1 ++ gv2 = l2), (l1 ++ gv2 = gv2), (l1 ++ gv2 = l1), (l1 ++ l1 = gv2), (length gv2 = a0), (length gv2 = a)

Label: 1 (4)
(false = sorted_bool gv2), (true = sorted_bool gv2), (a0 <=* gv2), (a0 <=* a0 :: gv2), (a0 <=* a :: gv2), (a0 <=* b :: gv2), (a0 <=* merge l2 gv2), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 l1)
(a0 <=* l2 ++ gv2), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ l1), (a0 <=* l1 ++ gv2), (a <=* gv2), (a <=* a0 :: gv2), (a <=* a :: gv2), (a <=* b :: gv2), (a <=* merge l2 gv2)
(a <=* merge gv2 gv2), (a <=* merge gv2 l1), (a <=* merge l1 gv2), (a <=* l2 ++ gv2), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2), (a <=* gv2 ++ l1), (a <=* l1 ++ gv2), (b <=* gv2), (b <=* a0 :: gv2)
(b <=* b :: gv2), (b <=* merge l2 gv2), (b <=* merge gv2 l2), (b <=* merge gv2 gv2), (b <=* merge gv2 l1), (b <=* merge l1 gv2), (b <=* l2 ++ gv2), (b <=* gv2 ++ l2), (b <=* gv2 ++ gv2), (b <=* gv2 ++ l1)
(length l2 <=* gv2), (length l2 <=* a0 :: gv2), (length l2 <=* a :: gv2), (length l2 <=* b :: gv2), (length l2 <=* merge l2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l1), (length l2 <=* merge l1 gv2), (length l2 <=* l2 ++ gv2)
(length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l1), (length l2 <=* l1 ++ gv2), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* l1), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: l1), (length gv2 <=* a :: l2)
(length gv2 <=* a :: l1), (length gv2 <=* b :: l2), (length gv2 <=* b :: gv2), (length gv2 <=* b :: l1), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l1), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l1)
(length gv2 <=* merge l1 gv2), (length gv2 <=* merge l1 l1), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l1), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l1), (length gv2 <=* l1 ++ l2), (length gv2 <=* l1 ++ gv2)
(length gv2 <=* []), (length l1 <=* gv2), (length l1 <=* a0 :: gv2), (length l1 <=* a :: gv2), (length l1 <=* b :: gv2), (length l1 <=* merge l2 gv2), (length l1 <=* merge gv2 l2), (length l1 <=* merge gv2 gv2), (length l1 <=* merge gv2 l1), (length l1 <=* merge l1 gv2)
(length l1 <=* gv2 ++ l2), (length l1 <=* gv2 ++ gv2), (length l1 <=* gv2 ++ l1), (length l1 <=* l1 ++ gv2), (sorted gv2), (sorted (a0 :: gv2)), (sorted (a :: gv2)), (sorted (b :: gv2)), (sorted (merge l2 gv2)), (sorted (merge gv2 l2))
(sorted (merge gv2 l1)), (sorted (merge l1 gv2)), (sorted (l2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l1)), (sorted (l1 ++ gv2)), (Permutation l2 gv2), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a :: gv2))
(Permutation l2 (merge l2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l1)), (Permutation l2 (merge l1 gv2)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l1)), (Permutation l2 (l1 ++ gv2))
(Permutation gv2 l1), (Permutation gv2 (a0 :: l2)), (Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: l1)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: l1)), (Permutation gv2 (b :: l2)), (Permutation gv2 (b :: gv2)), (Permutation gv2 (b :: l1))
(Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 l1)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l1)), (Permutation gv2 (merge l1 l2)), (Permutation gv2 (merge l1 gv2)), (Permutation gv2 (merge l1 l1)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2))
(Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l1)), (Permutation gv2 (l1 ++ l2)), (Permutation gv2 (l1 ++ gv2)), (Permutation gv2 (l1 ++ l1)), (Permutation gv2 []), (Permutation l1 gv2), (Permutation l1 (a0 :: gv2)), (Permutation l1 (a :: gv2))
(Permutation l1 (merge l2 gv2)), (Permutation l1 (merge gv2 l2)), (Permutation l1 (merge gv2 gv2)), (Permutation l1 (merge gv2 l1)), (Permutation l1 (merge l1 gv2)), (Permutation l1 (l2 ++ gv2)), (Permutation l1 (gv2 ++ l2)), (Permutation l1 (gv2 ++ gv2)), (Permutation l1 (gv2 ++ l1)), (Permutation l1 (l1 ++ gv2))
(Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (b :: gv2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 l1)), (Permutation (a0 :: l2) (merge l1 gv2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ gv2)), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) l1), (Permutation (a0 :: gv2) (a0 :: l2)), (Permutation (a0 :: gv2) (a0 :: l1)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: l1))
(Permutation (a0 :: gv2) (b :: gv2)), (Permutation (a0 :: gv2) (b :: l1)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 l1)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 l1)), (Permutation (a0 :: gv2) (merge l1 l2)), (Permutation (a0 :: gv2) (merge l1 gv2))
(Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ l1)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ l1)), (Permutation (a0 :: gv2) (l1 ++ l2)), (Permutation (a0 :: gv2) (l1 ++ gv2)), (Permutation (a0 :: gv2) (l1 ++ l1)), (Permutation (a0 :: gv2) [])
(Permutation (a0 :: l1) (a0 :: gv2)), (Permutation (a0 :: l1) (a :: gv2)), (Permutation (a0 :: l1) (b :: gv2)), (Permutation (a0 :: l1) (merge l2 gv2)), (Permutation (a0 :: l1) (merge gv2 l2)), (Permutation (a0 :: l1) (merge gv2 gv2)), (Permutation (a0 :: l1) (merge gv2 l1)), (Permutation (a0 :: l1) (merge l1 gv2)), (Permutation (a0 :: l1) (l2 ++ gv2)), (Permutation (a0 :: l1) (gv2 ++ l2))
(Permutation (a0 :: l1) (gv2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ gv2)), (Permutation (a :: l2) gv2), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (b :: gv2)), (Permutation (a :: l2) (merge l2 gv2)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 l1))
(Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l1)), (Permutation (a :: l2) (l1 ++ gv2)), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) l1), (Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2))
(Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: l1)), (Permutation (a :: gv2) (b :: l2)), (Permutation (a :: gv2) (b :: gv2)), (Permutation (a :: gv2) (b :: l1)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 l1)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge l1 l2)), (Permutation (a :: gv2) (merge l1 gv2)), (Permutation (a :: gv2) (merge l1 l1)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ l1)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ l1)), (Permutation (a :: gv2) (l1 ++ l2))
(Permutation (a :: gv2) (l1 ++ l1)), (Permutation (a :: gv2) []), (Permutation (a :: l1) gv2), (Permutation (a :: l1) (a0 :: gv2)), (Permutation (a :: l1) (a :: gv2)), (Permutation (a :: l1) (b :: gv2)), (Permutation (a :: l1) (merge l2 gv2)), (Permutation (a :: l1) (merge gv2 l2)), (Permutation (a :: l1) (merge gv2 gv2)), (Permutation (a :: l1) (merge gv2 l1))
(Permutation (a :: l1) (l2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l2)), (Permutation (a :: l1) (gv2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l1)), (Permutation (a :: l1) (l1 ++ gv2)), (Permutation (b :: l2) gv2), (Permutation (b :: l2) (a0 :: gv2)), (Permutation (b :: l2) (a :: gv2)), (Permutation (b :: l2) (b :: gv2)), (Permutation (b :: l2) (merge l2 gv2))
(Permutation (b :: l2) (merge gv2 gv2)), (Permutation (b :: l2) (merge gv2 l1)), (Permutation (b :: l2) (merge l1 gv2)), (Permutation (b :: l2) (l2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l2)), (Permutation (b :: l2) (gv2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l1)), (Permutation (b :: l2) (l1 ++ gv2)), (Permutation (b :: gv2) l2), (Permutation (b :: gv2) gv2)
(Permutation (b :: gv2) (a0 :: l2)), (Permutation (b :: gv2) (a0 :: gv2)), (Permutation (b :: gv2) (a0 :: l1)), (Permutation (b :: gv2) (a :: l2)), (Permutation (b :: gv2) (a :: gv2)), (Permutation (b :: gv2) (a :: l1)), (Permutation (b :: gv2) (b :: l2)), (Permutation (b :: gv2) (b :: l1)), (Permutation (b :: gv2) (merge l2 l2)), (Permutation (b :: gv2) (merge l2 gv2))
(Permutation (b :: gv2) (merge gv2 l2)), (Permutation (b :: gv2) (merge gv2 gv2)), (Permutation (b :: gv2) (merge gv2 l1)), (Permutation (b :: gv2) (merge l1 l2)), (Permutation (b :: gv2) (merge l1 gv2)), (Permutation (b :: gv2) (merge l1 l1)), (Permutation (b :: gv2) (l2 ++ l2)), (Permutation (b :: gv2) (l2 ++ gv2)), (Permutation (b :: gv2) (l2 ++ l1)), (Permutation (b :: gv2) (gv2 ++ l2))
(Permutation (b :: gv2) (gv2 ++ l1)), (Permutation (b :: gv2) (l1 ++ l2)), (Permutation (b :: gv2) (l1 ++ gv2)), (Permutation (b :: gv2) (l1 ++ l1)), (Permutation (b :: gv2) []), (Permutation (b :: l1) gv2), (Permutation (b :: l1) (a0 :: gv2)), (Permutation (b :: l1) (a :: gv2)), (Permutation (b :: l1) (b :: gv2)), (Permutation (b :: l1) (merge l2 gv2))
(Permutation (b :: l1) (merge gv2 gv2)), (Permutation (b :: l1) (merge gv2 l1)), (Permutation (b :: l1) (merge l1 gv2)), (Permutation (b :: l1) (l2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l2)), (Permutation (b :: l1) (gv2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l1)), (Permutation (b :: l1) (l1 ++ gv2)), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) (a0 :: gv2))
(Permutation (merge l2 l2) (b :: gv2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l1)), (Permutation (merge l2 l2) (merge l1 gv2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l1))
(Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) l1), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: l1)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: l1)), (Permutation (merge l2 gv2) (b :: l2))
(Permutation (merge l2 gv2) (b :: l1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 l1)), (Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 l1)), (Permutation (merge l2 gv2) (merge l1 l2)), (Permutation (merge l2 gv2) (merge l1 gv2)), (Permutation (merge l2 gv2) (merge l1 l1)), (Permutation (merge l2 gv2) (l2 ++ l2))
(Permutation (merge l2 gv2) (l2 ++ l1)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l1)), (Permutation (merge l2 gv2) (l1 ++ l2)), (Permutation (merge l2 gv2) (l1 ++ gv2)), (Permutation (merge l2 gv2) (l1 ++ l1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l1) gv2), (Permutation (merge l2 l1) (a0 :: gv2))
(Permutation (merge l2 l1) (b :: gv2)), (Permutation (merge l2 l1) (merge l2 gv2)), (Permutation (merge l2 l1) (merge gv2 l2)), (Permutation (merge l2 l1) (merge gv2 gv2)), (Permutation (merge l2 l1) (merge gv2 l1)), (Permutation (merge l2 l1) (merge l1 gv2)), (Permutation (merge l2 l1) (l2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l2)), (Permutation (merge l2 l1) (gv2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l1))
(Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) l1), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: l1)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2)), (Permutation (merge gv2 l2) (a :: l1)), (Permutation (merge gv2 l2) (b :: l2))
(Permutation (merge gv2 l2) (b :: l1)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 l1)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 l1)), (Permutation (merge gv2 l2) (merge l1 l2)), (Permutation (merge gv2 l2) (merge l1 gv2)), (Permutation (merge gv2 l2) (merge l1 l1)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ l1)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l1)), (Permutation (merge gv2 l2) (l1 ++ l2)), (Permutation (merge gv2 l2) (l1 ++ gv2)), (Permutation (merge gv2 l2) (l1 ++ l1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) gv2)
(Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: l1)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: l1)), (Permutation (merge gv2 gv2) (b :: l2)), (Permutation (merge gv2 gv2) (b :: gv2)), (Permutation (merge gv2 gv2) (b :: l1)), (Permutation (merge gv2 gv2) (merge l2 l2))
(Permutation (merge gv2 gv2) (merge l2 l1)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 l1)), (Permutation (merge gv2 gv2) (merge l1 l2)), (Permutation (merge gv2 gv2) (merge l1 gv2)), (Permutation (merge gv2 gv2) (merge l1 l1)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l1)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ l1)), (Permutation (merge gv2 gv2) (l1 ++ l2)), (Permutation (merge gv2 gv2) (l1 ++ gv2)), (Permutation (merge gv2 gv2) (l1 ++ l1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l1) l2), (Permutation (merge gv2 l1) gv2), (Permutation (merge gv2 l1) l1), (Permutation (merge gv2 l1) (a0 :: l2)), (Permutation (merge gv2 l1) (a0 :: gv2))
(Permutation (merge gv2 l1) (a :: l2)), (Permutation (merge gv2 l1) (a :: gv2)), (Permutation (merge gv2 l1) (a :: l1)), (Permutation (merge gv2 l1) (b :: l2)), (Permutation (merge gv2 l1) (b :: gv2)), (Permutation (merge gv2 l1) (b :: l1)), (Permutation (merge gv2 l1) (merge l2 l2)), (Permutation (merge gv2 l1) (merge l2 gv2)), (Permutation (merge gv2 l1) (merge l2 l1)), (Permutation (merge gv2 l1) (merge gv2 l2))
(Permutation (merge gv2 l1) (merge l1 l2)), (Permutation (merge gv2 l1) (merge l1 gv2)), (Permutation (merge gv2 l1) (merge l1 l1)), (Permutation (merge gv2 l1) (l2 ++ l2)), (Permutation (merge gv2 l1) (l2 ++ gv2)), (Permutation (merge gv2 l1) (l2 ++ l1)), (Permutation (merge gv2 l1) (gv2 ++ l2)), (Permutation (merge gv2 l1) (gv2 ++ gv2)), (Permutation (merge gv2 l1) (gv2 ++ l1)), (Permutation (merge gv2 l1) (l1 ++ l2))
(Permutation (merge gv2 l1) (l1 ++ l1)), (Permutation (merge gv2 l1) []), (Permutation (merge l1 l2) gv2), (Permutation (merge l1 l2) (a0 :: gv2)), (Permutation (merge l1 l2) (a :: gv2)), (Permutation (merge l1 l2) (b :: gv2)), (Permutation (merge l1 l2) (merge l2 gv2)), (Permutation (merge l1 l2) (merge gv2 l2)), (Permutation (merge l1 l2) (merge gv2 gv2)), (Permutation (merge l1 l2) (merge gv2 l1))
(Permutation (merge l1 l2) (l2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l2)), (Permutation (merge l1 l2) (gv2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ gv2)), (Permutation (merge l1 gv2) l2), (Permutation (merge l1 gv2) gv2), (Permutation (merge l1 gv2) l1), (Permutation (merge l1 gv2) (a0 :: l2)), (Permutation (merge l1 gv2) (a0 :: gv2))
(Permutation (merge l1 gv2) (a :: l2)), (Permutation (merge l1 gv2) (a :: gv2)), (Permutation (merge l1 gv2) (a :: l1)), (Permutation (merge l1 gv2) (b :: l2)), (Permutation (merge l1 gv2) (b :: gv2)), (Permutation (merge l1 gv2) (b :: l1)), (Permutation (merge l1 gv2) (merge l2 l2)), (Permutation (merge l1 gv2) (merge l2 gv2)), (Permutation (merge l1 gv2) (merge l2 l1)), (Permutation (merge l1 gv2) (merge gv2 l2))
(Permutation (merge l1 gv2) (merge gv2 l1)), (Permutation (merge l1 gv2) (merge l1 l2)), (Permutation (merge l1 gv2) (merge l1 l1)), (Permutation (merge l1 gv2) (l2 ++ l2)), (Permutation (merge l1 gv2) (l2 ++ gv2)), (Permutation (merge l1 gv2) (l2 ++ l1)), (Permutation (merge l1 gv2) (gv2 ++ l2)), (Permutation (merge l1 gv2) (gv2 ++ gv2)), (Permutation (merge l1 gv2) (gv2 ++ l1)), (Permutation (merge l1 gv2) (l1 ++ l2))
(Permutation (merge l1 gv2) (l1 ++ l1)), (Permutation (merge l1 gv2) []), (Permutation (merge l1 l1) gv2), (Permutation (merge l1 l1) (a0 :: gv2)), (Permutation (merge l1 l1) (a :: gv2)), (Permutation (merge l1 l1) (b :: gv2)), (Permutation (merge l1 l1) (merge l2 gv2)), (Permutation (merge l1 l1) (merge gv2 l2)), (Permutation (merge l1 l1) (merge gv2 gv2)), (Permutation (merge l1 l1) (merge gv2 l1))
(Permutation (merge l1 l1) (l2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l2)), (Permutation (merge l1 l1) (gv2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ gv2)), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (b :: gv2)), (Permutation (l2 ++ l2) (merge l2 gv2))
(Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 l1)), (Permutation (l2 ++ l2) (merge l1 gv2)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2)
(Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: l1)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: l1)), (Permutation (l2 ++ gv2) (b :: l2)), (Permutation (l2 ++ gv2) (b :: gv2)), (Permutation (l2 ++ gv2) (b :: l1)), (Permutation (l2 ++ gv2) (merge l2 l2))
(Permutation (l2 ++ gv2) (merge l2 l1)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l1)), (Permutation (l2 ++ gv2) (merge l1 l2)), (Permutation (l2 ++ gv2) (merge l1 gv2)), (Permutation (l2 ++ gv2) (merge l1 l1)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l1)), (Permutation (l2 ++ gv2) (gv2 ++ l2))
(Permutation (l2 ++ gv2) (gv2 ++ l1)), (Permutation (l2 ++ gv2) (l1 ++ l2)), (Permutation (l2 ++ gv2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) (l1 ++ l1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l1) gv2), (Permutation (l2 ++ l1) (a0 :: gv2)), (Permutation (l2 ++ l1) (a :: gv2)), (Permutation (l2 ++ l1) (b :: gv2)), (Permutation (l2 ++ l1) (merge l2 gv2))
(Permutation (l2 ++ l1) (merge gv2 gv2)), (Permutation (l2 ++ l1) (merge gv2 l1)), (Permutation (l2 ++ l1) (merge l1 gv2)), (Permutation (l2 ++ l1) (l2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l2)), (Permutation (l2 ++ l1) (gv2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2)
(Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2)), (Permutation (gv2 ++ l2) (a0 :: l1)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: l1)), (Permutation (gv2 ++ l2) (b :: l2)), (Permutation (gv2 ++ l2) (b :: gv2)), (Permutation (gv2 ++ l2) (b :: l1)), (Permutation (gv2 ++ l2) (merge l2 l2))
(Permutation (gv2 ++ l2) (merge l2 l1)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l1)), (Permutation (gv2 ++ l2) (merge l1 l2)), (Permutation (gv2 ++ l2) (merge l1 gv2)), (Permutation (gv2 ++ l2) (merge l1 l1)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l1))
(Permutation (gv2 ++ l2) (gv2 ++ l1)), (Permutation (gv2 ++ l2) (l1 ++ l2)), (Permutation (gv2 ++ l2) (l1 ++ gv2)), (Permutation (gv2 ++ l2) (l1 ++ l1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) l1), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2))
(Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2)), (Permutation (gv2 ++ gv2) (a :: l1)), (Permutation (gv2 ++ gv2) (b :: l2)), (Permutation (gv2 ++ gv2) (b :: gv2)), (Permutation (gv2 ++ gv2) (b :: l1)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l1)), (Permutation (gv2 ++ gv2) (merge gv2 l2))
(Permutation (gv2 ++ gv2) (merge gv2 l1)), (Permutation (gv2 ++ gv2) (merge l1 l2)), (Permutation (gv2 ++ gv2) (merge l1 gv2)), (Permutation (gv2 ++ gv2) (merge l1 l1)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l1)), (Permutation (gv2 ++ gv2) (l1 ++ l2))
(Permutation (gv2 ++ gv2) (l1 ++ l1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l1) l2), (Permutation (gv2 ++ l1) gv2), (Permutation (gv2 ++ l1) l1), (Permutation (gv2 ++ l1) (a0 :: l2)), (Permutation (gv2 ++ l1) (a0 :: gv2)), (Permutation (gv2 ++ l1) (a0 :: l1)), (Permutation (gv2 ++ l1) (a :: l2)), (Permutation (gv2 ++ l1) (a :: gv2))
(Permutation (gv2 ++ l1) (b :: l2)), (Permutation (gv2 ++ l1) (b :: gv2)), (Permutation (gv2 ++ l1) (b :: l1)), (Permutation (gv2 ++ l1) (merge l2 l2)), (Permutation (gv2 ++ l1) (merge l2 gv2)), (Permutation (gv2 ++ l1) (merge l2 l1)), (Permutation (gv2 ++ l1) (merge gv2 l2)), (Permutation (gv2 ++ l1) (merge gv2 gv2)), (Permutation (gv2 ++ l1) (merge gv2 l1)), (Permutation (gv2 ++ l1) (merge l1 l2))
(Permutation (gv2 ++ l1) (merge l1 l1)), (Permutation (gv2 ++ l1) (l2 ++ l2)), (Permutation (gv2 ++ l1) (l2 ++ gv2)), (Permutation (gv2 ++ l1) (l2 ++ l1)), (Permutation (gv2 ++ l1) (gv2 ++ l2)), (Permutation (gv2 ++ l1) (gv2 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l2)), (Permutation (gv2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l1)), (Permutation (gv2 ++ l1) [])
(Permutation (l1 ++ l2) (a0 :: gv2)), (Permutation (l1 ++ l2) (a :: gv2)), (Permutation (l1 ++ l2) (b :: gv2)), (Permutation (l1 ++ l2) (merge l2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l2)), (Permutation (l1 ++ l2) (merge gv2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l1)), (Permutation (l1 ++ l2) (merge l1 gv2)), (Permutation (l1 ++ l2) (l2 ++ gv2)), (Permutation (l1 ++ l2) (gv2 ++ l2))
(Permutation (l1 ++ l2) (gv2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv2)), (Permutation (l1 ++ gv2) l2), (Permutation (l1 ++ gv2) gv2), (Permutation (l1 ++ gv2) l1), (Permutation (l1 ++ gv2) (a0 :: l2)), (Permutation (l1 ++ gv2) (a0 :: gv2)), (Permutation (l1 ++ gv2) (a0 :: l1)), (Permutation (l1 ++ gv2) (a :: l2)), (Permutation (l1 ++ gv2) (a :: gv2))
(Permutation (l1 ++ gv2) (b :: l2)), (Permutation (l1 ++ gv2) (b :: gv2)), (Permutation (l1 ++ gv2) (b :: l1)), (Permutation (l1 ++ gv2) (merge l2 l2)), (Permutation (l1 ++ gv2) (merge l2 gv2)), (Permutation (l1 ++ gv2) (merge l2 l1)), (Permutation (l1 ++ gv2) (merge gv2 l2)), (Permutation (l1 ++ gv2) (merge gv2 gv2)), (Permutation (l1 ++ gv2) (merge gv2 l1)), (Permutation (l1 ++ gv2) (merge l1 l2))
(Permutation (l1 ++ gv2) (merge l1 l1)), (Permutation (l1 ++ gv2) (l2 ++ l2)), (Permutation (l1 ++ gv2) (l2 ++ gv2)), (Permutation (l1 ++ gv2) (l2 ++ l1)), (Permutation (l1 ++ gv2) (gv2 ++ l2)), (Permutation (l1 ++ gv2) (gv2 ++ gv2)), (Permutation (l1 ++ gv2) (gv2 ++ l1)), (Permutation (l1 ++ gv2) (l1 ++ l2)), (Permutation (l1 ++ gv2) (l1 ++ l1)), (Permutation (l1 ++ gv2) [])
(Permutation (l1 ++ l1) (a0 :: gv2)), (Permutation (l1 ++ l1) (a :: gv2)), (Permutation (l1 ++ l1) (b :: gv2)), (Permutation (l1 ++ l1) (merge l2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l2)), (Permutation (l1 ++ l1) (merge gv2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l1)), (Permutation (l1 ++ l1) (merge l1 gv2)), (Permutation (l1 ++ l1) (l2 ++ gv2)), (Permutation (l1 ++ l1) (gv2 ++ l2))
(Permutation (l1 ++ l1) (gv2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ gv2)), (Permutation [] gv2), (Permutation [] (a0 :: gv2)), (Permutation [] (a :: gv2)), (Permutation [] (b :: gv2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l1))
(Permutation [] (l2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l1)), (Permutation [] (l1 ++ gv2)), (In a0 gv2), (In a0 (a0 :: gv2)), (In a0 (a :: gv2)), (In a0 (b :: gv2)), (In a0 (merge l2 gv2))
(In a0 (merge gv2 gv2)), (In a0 (merge gv2 l1)), (In a0 (merge l1 gv2)), (In a0 (l2 ++ gv2)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ l1)), (In a0 (l1 ++ gv2)), (In a gv2), (In a (a0 :: gv2))
(In a (b :: gv2)), (In a (merge l2 gv2)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 l1)), (In a (merge l1 gv2)), (In a (l2 ++ gv2)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ l1))
(In b gv2), (In b (a0 :: gv2)), (In b (a :: gv2)), (In b (b :: gv2)), (In b (merge l2 gv2)), (In b (merge gv2 l2)), (In b (merge gv2 gv2)), (In b (merge gv2 l1)), (In b (merge l1 gv2)), (In b (l2 ++ gv2))
(In b (gv2 ++ gv2)), (In b (gv2 ++ l1)), (In b (l1 ++ gv2)), (In (length l2) gv2), (In (length l2) (a0 :: gv2)), (In (length l2) (a :: gv2)), (In (length l2) (b :: gv2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2))
(In (length l2) (merge l1 gv2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l1)), (In (length l2) (l1 ++ gv2)), (In (length gv2) l2), (In (length gv2) gv2), (In (length gv2) l1), (In (length gv2) (a0 :: l2))
(In (length gv2) (a0 :: l1)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: l1)), (In (length gv2) (b :: l2)), (In (length gv2) (b :: gv2)), (In (length gv2) (b :: l1)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l1))
(In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l1)), (In (length gv2) (merge l1 l2)), (In (length gv2) (merge l1 gv2)), (In (length gv2) (merge l1 l1)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l1)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2))
(In (length gv2) (l1 ++ l2)), (In (length gv2) (l1 ++ gv2)), (In (length gv2) (l1 ++ l1)), (In (length l1) gv2), (In (length l1) (a0 :: gv2)), (In (length l1) (a :: gv2)), (In (length l1) (b :: gv2)), (In (length l1) (merge l2 gv2)), (In (length l1) (merge gv2 l2)), (In (length l1) (merge gv2 gv2))
(In (length l1) (merge l1 gv2)), (In (length l1) (l2 ++ gv2)), (In (length l1) (gv2 ++ l2)), (In (length l1) (gv2 ++ gv2)), (In (length l1) (gv2 ++ l1)), (In (length l1) (l1 ++ gv2)), (a0 < length gv2), (a < length gv2), (b < length gv2), (length l2 < length gv2)
(length gv2 < a), (length gv2 < b), (length gv2 < length l2), (length gv2 < length l1), (length l1 < length gv2), (a0 <= length gv2), (a <= length gv2), (b <= length gv2), (length l2 <= length gv2), (length gv2 <= a0)
(length gv2 <= b), (length gv2 <= length l2), (length gv2 <= length l1), (length l1 <= length gv2), (merge l2 l2 = gv2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l1), (merge l2 l2 = l1 ++ gv2)
(merge l2 gv2 = gv2), (merge l2 gv2 = l1), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l1), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ l1), (merge l2 gv2 = l1 ++ l2), (merge l2 gv2 = l1 ++ gv2)
(merge l2 l1 = gv2), (merge l2 l1 = l2 ++ gv2), (merge l2 l1 = gv2 ++ l2), (merge l2 l1 = gv2 ++ gv2), (merge l2 l1 = gv2 ++ l1), (merge l2 l1 = l1 ++ gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = l1), (merge gv2 l2 = l2 ++ l2)
(merge gv2 l2 = l2 ++ l1), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l1), (merge gv2 l2 = l1 ++ l2), (merge gv2 l2 = l1 ++ gv2), (merge gv2 l2 = l1 ++ l1), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l1)
(merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ l1), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l1), (merge gv2 gv2 = l1 ++ l2), (merge gv2 gv2 = l1 ++ gv2), (merge gv2 gv2 = l1 ++ l1), (merge gv2 l1 = l2), (merge gv2 l1 = gv2)
(merge gv2 l1 = l2 ++ l2), (merge gv2 l1 = l2 ++ gv2), (merge gv2 l1 = l2 ++ l1), (merge gv2 l1 = gv2 ++ l2), (merge gv2 l1 = gv2 ++ gv2), (merge gv2 l1 = gv2 ++ l1), (merge gv2 l1 = l1 ++ l2), (merge gv2 l1 = l1 ++ gv2), (merge gv2 l1 = l1 ++ l1), (merge l1 l2 = gv2)
(merge l1 l2 = gv2 ++ l2), (merge l1 l2 = gv2 ++ gv2), (merge l1 l2 = gv2 ++ l1), (merge l1 l2 = l1 ++ gv2), (merge l1 gv2 = l2), (merge l1 gv2 = gv2), (merge l1 gv2 = l1), (merge l1 gv2 = l2 ++ l2), (merge l1 gv2 = l2 ++ gv2), (merge l1 gv2 = l2 ++ l1)
(merge l1 gv2 = gv2 ++ gv2), (merge l1 gv2 = gv2 ++ l1), (merge l1 gv2 = l1 ++ l2), (merge l1 gv2 = l1 ++ gv2), (merge l1 gv2 = l1 ++ l1), (merge l1 l1 = gv2), (merge l1 l1 = l2 ++ gv2), (merge l1 l1 = gv2 ++ l2), (merge l1 l1 = gv2 ++ gv2), (merge l1 l1 = gv2 ++ l1)
(l2 ++ l2 = gv2), (l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l1), (l2 ++ l1 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l1), (gv2 ++ gv2 = l2), (gv2 ++ gv2 = gv2)
(gv2 ++ l1 = l2), (gv2 ++ l1 = gv2), (gv2 ++ l1 = l1), (l1 ++ l2 = gv2), (l1 ++ gv2 = l2), (l1 ++ gv2 = gv2), (l1 ++ gv2 = l1), (l1 ++ l1 = gv2), (length gv2 = a0), (length gv2 = a)

Label: 1 (5)
(false = sorted_bool gv2), (true = sorted_bool gv2), (a0 <=* gv2), (a0 <=* a0 :: gv2), (a0 <=* a :: gv2), (a0 <=* b :: gv2), (a0 <=* merge l2 gv2), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 l1)
(a0 <=* l2 ++ gv2), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ l1), (a0 <=* l1 ++ gv2), (a <=* gv2), (a <=* a0 :: gv2), (a <=* a :: gv2), (a <=* b :: gv2), (a <=* merge l2 gv2)
(a <=* merge gv2 gv2), (a <=* merge gv2 l1), (a <=* merge l1 gv2), (a <=* l2 ++ gv2), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2), (a <=* gv2 ++ l1), (a <=* l1 ++ gv2), (b <=* gv2), (b <=* a0 :: gv2)
(b <=* b :: gv2), (b <=* merge l2 gv2), (b <=* merge gv2 l2), (b <=* merge gv2 gv2), (b <=* merge gv2 l1), (b <=* merge l1 gv2), (b <=* l2 ++ gv2), (b <=* gv2 ++ l2), (b <=* gv2 ++ gv2), (b <=* gv2 ++ l1)
(length l2 <=* gv2), (length l2 <=* a0 :: gv2), (length l2 <=* a :: gv2), (length l2 <=* b :: gv2), (length l2 <=* merge l2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l1), (length l2 <=* merge l1 gv2), (length l2 <=* l2 ++ gv2)
(length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l1), (length l2 <=* l1 ++ gv2), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* l1), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: l1), (length gv2 <=* a :: l2)
(length gv2 <=* a :: l1), (length gv2 <=* b :: l2), (length gv2 <=* b :: gv2), (length gv2 <=* b :: l1), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l1), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l1)
(length gv2 <=* merge l1 gv2), (length gv2 <=* merge l1 l1), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l1), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l1), (length gv2 <=* l1 ++ l2), (length gv2 <=* l1 ++ gv2)
(length gv2 <=* []), (length l1 <=* gv2), (length l1 <=* a0 :: gv2), (length l1 <=* a :: gv2), (length l1 <=* b :: gv2), (length l1 <=* merge l2 gv2), (length l1 <=* merge gv2 l2), (length l1 <=* merge gv2 gv2), (length l1 <=* merge gv2 l1), (length l1 <=* merge l1 gv2)
(length l1 <=* gv2 ++ l2), (length l1 <=* gv2 ++ gv2), (length l1 <=* gv2 ++ l1), (length l1 <=* l1 ++ gv2), (sorted gv2), (sorted (a0 :: gv2)), (sorted (a :: gv2)), (sorted (b :: gv2)), (sorted (merge l2 gv2)), (sorted (merge gv2 l2))
(sorted (merge gv2 l1)), (sorted (merge l1 gv2)), (sorted (l2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l1)), (sorted (l1 ++ gv2)), (Permutation l2 gv2), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a :: gv2))
(Permutation l2 (merge l2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l1)), (Permutation l2 (merge l1 gv2)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l1)), (Permutation l2 (l1 ++ gv2))
(Permutation gv2 l1), (Permutation gv2 (a0 :: l2)), (Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: l1)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: l1)), (Permutation gv2 (b :: l2)), (Permutation gv2 (b :: gv2)), (Permutation gv2 (b :: l1))
(Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 l1)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l1)), (Permutation gv2 (merge l1 l2)), (Permutation gv2 (merge l1 gv2)), (Permutation gv2 (merge l1 l1)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2))
(Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l1)), (Permutation gv2 (l1 ++ l2)), (Permutation gv2 (l1 ++ gv2)), (Permutation gv2 (l1 ++ l1)), (Permutation gv2 []), (Permutation l1 gv2), (Permutation l1 (a0 :: gv2)), (Permutation l1 (a :: gv2))
(Permutation l1 (merge l2 gv2)), (Permutation l1 (merge gv2 l2)), (Permutation l1 (merge gv2 gv2)), (Permutation l1 (merge gv2 l1)), (Permutation l1 (merge l1 gv2)), (Permutation l1 (l2 ++ gv2)), (Permutation l1 (gv2 ++ l2)), (Permutation l1 (gv2 ++ gv2)), (Permutation l1 (gv2 ++ l1)), (Permutation l1 (l1 ++ gv2))
(Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (b :: gv2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 l1)), (Permutation (a0 :: l2) (merge l1 gv2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ gv2)), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) l1), (Permutation (a0 :: gv2) (a0 :: l2)), (Permutation (a0 :: gv2) (a0 :: l1)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: l1))
(Permutation (a0 :: gv2) (b :: gv2)), (Permutation (a0 :: gv2) (b :: l1)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 l1)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 l1)), (Permutation (a0 :: gv2) (merge l1 l2)), (Permutation (a0 :: gv2) (merge l1 gv2))
(Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ l1)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ l1)), (Permutation (a0 :: gv2) (l1 ++ l2)), (Permutation (a0 :: gv2) (l1 ++ gv2)), (Permutation (a0 :: gv2) (l1 ++ l1)), (Permutation (a0 :: gv2) [])
(Permutation (a0 :: l1) (a0 :: gv2)), (Permutation (a0 :: l1) (a :: gv2)), (Permutation (a0 :: l1) (b :: gv2)), (Permutation (a0 :: l1) (merge l2 gv2)), (Permutation (a0 :: l1) (merge gv2 l2)), (Permutation (a0 :: l1) (merge gv2 gv2)), (Permutation (a0 :: l1) (merge gv2 l1)), (Permutation (a0 :: l1) (merge l1 gv2)), (Permutation (a0 :: l1) (l2 ++ gv2)), (Permutation (a0 :: l1) (gv2 ++ l2))
(Permutation (a0 :: l1) (gv2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ gv2)), (Permutation (a :: l2) gv2), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (b :: gv2)), (Permutation (a :: l2) (merge l2 gv2)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 l1))
(Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l1)), (Permutation (a :: l2) (l1 ++ gv2)), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) l1), (Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2))
(Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: l1)), (Permutation (a :: gv2) (b :: l2)), (Permutation (a :: gv2) (b :: gv2)), (Permutation (a :: gv2) (b :: l1)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 l1)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge l1 l2)), (Permutation (a :: gv2) (merge l1 gv2)), (Permutation (a :: gv2) (merge l1 l1)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ l1)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ l1)), (Permutation (a :: gv2) (l1 ++ l2))
(Permutation (a :: gv2) (l1 ++ l1)), (Permutation (a :: gv2) []), (Permutation (a :: l1) gv2), (Permutation (a :: l1) (a0 :: gv2)), (Permutation (a :: l1) (a :: gv2)), (Permutation (a :: l1) (b :: gv2)), (Permutation (a :: l1) (merge l2 gv2)), (Permutation (a :: l1) (merge gv2 l2)), (Permutation (a :: l1) (merge gv2 gv2)), (Permutation (a :: l1) (merge gv2 l1))
(Permutation (a :: l1) (l2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l2)), (Permutation (a :: l1) (gv2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l1)), (Permutation (a :: l1) (l1 ++ gv2)), (Permutation (b :: l2) gv2), (Permutation (b :: l2) (a0 :: gv2)), (Permutation (b :: l2) (a :: gv2)), (Permutation (b :: l2) (b :: gv2)), (Permutation (b :: l2) (merge l2 gv2))
(Permutation (b :: l2) (merge gv2 gv2)), (Permutation (b :: l2) (merge gv2 l1)), (Permutation (b :: l2) (merge l1 gv2)), (Permutation (b :: l2) (l2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l2)), (Permutation (b :: l2) (gv2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l1)), (Permutation (b :: l2) (l1 ++ gv2)), (Permutation (b :: gv2) l2), (Permutation (b :: gv2) gv2)
(Permutation (b :: gv2) (a0 :: l2)), (Permutation (b :: gv2) (a0 :: gv2)), (Permutation (b :: gv2) (a0 :: l1)), (Permutation (b :: gv2) (a :: l2)), (Permutation (b :: gv2) (a :: gv2)), (Permutation (b :: gv2) (a :: l1)), (Permutation (b :: gv2) (b :: l2)), (Permutation (b :: gv2) (b :: l1)), (Permutation (b :: gv2) (merge l2 l2)), (Permutation (b :: gv2) (merge l2 gv2))
(Permutation (b :: gv2) (merge gv2 l2)), (Permutation (b :: gv2) (merge gv2 gv2)), (Permutation (b :: gv2) (merge gv2 l1)), (Permutation (b :: gv2) (merge l1 l2)), (Permutation (b :: gv2) (merge l1 gv2)), (Permutation (b :: gv2) (merge l1 l1)), (Permutation (b :: gv2) (l2 ++ l2)), (Permutation (b :: gv2) (l2 ++ gv2)), (Permutation (b :: gv2) (l2 ++ l1)), (Permutation (b :: gv2) (gv2 ++ l2))
(Permutation (b :: gv2) (gv2 ++ l1)), (Permutation (b :: gv2) (l1 ++ l2)), (Permutation (b :: gv2) (l1 ++ gv2)), (Permutation (b :: gv2) (l1 ++ l1)), (Permutation (b :: gv2) []), (Permutation (b :: l1) gv2), (Permutation (b :: l1) (a0 :: gv2)), (Permutation (b :: l1) (a :: gv2)), (Permutation (b :: l1) (b :: gv2)), (Permutation (b :: l1) (merge l2 gv2))
(Permutation (b :: l1) (merge gv2 gv2)), (Permutation (b :: l1) (merge gv2 l1)), (Permutation (b :: l1) (merge l1 gv2)), (Permutation (b :: l1) (l2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l2)), (Permutation (b :: l1) (gv2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l1)), (Permutation (b :: l1) (l1 ++ gv2)), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) (a0 :: gv2))
(Permutation (merge l2 l2) (b :: gv2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l1)), (Permutation (merge l2 l2) (merge l1 gv2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l1))
(Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) l1), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: l1)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: l1)), (Permutation (merge l2 gv2) (b :: l2))
(Permutation (merge l2 gv2) (b :: l1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 l1)), (Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 l1)), (Permutation (merge l2 gv2) (merge l1 l2)), (Permutation (merge l2 gv2) (merge l1 gv2)), (Permutation (merge l2 gv2) (merge l1 l1)), (Permutation (merge l2 gv2) (l2 ++ l2))
(Permutation (merge l2 gv2) (l2 ++ l1)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l1)), (Permutation (merge l2 gv2) (l1 ++ l2)), (Permutation (merge l2 gv2) (l1 ++ gv2)), (Permutation (merge l2 gv2) (l1 ++ l1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l1) gv2), (Permutation (merge l2 l1) (a0 :: gv2))
(Permutation (merge l2 l1) (b :: gv2)), (Permutation (merge l2 l1) (merge l2 gv2)), (Permutation (merge l2 l1) (merge gv2 l2)), (Permutation (merge l2 l1) (merge gv2 gv2)), (Permutation (merge l2 l1) (merge gv2 l1)), (Permutation (merge l2 l1) (merge l1 gv2)), (Permutation (merge l2 l1) (l2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l2)), (Permutation (merge l2 l1) (gv2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l1))
(Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) l1), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: l1)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2)), (Permutation (merge gv2 l2) (a :: l1)), (Permutation (merge gv2 l2) (b :: l2))
(Permutation (merge gv2 l2) (b :: l1)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 l1)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 l1)), (Permutation (merge gv2 l2) (merge l1 l2)), (Permutation (merge gv2 l2) (merge l1 gv2)), (Permutation (merge gv2 l2) (merge l1 l1)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ l1)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l1)), (Permutation (merge gv2 l2) (l1 ++ l2)), (Permutation (merge gv2 l2) (l1 ++ gv2)), (Permutation (merge gv2 l2) (l1 ++ l1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) gv2)
(Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: l1)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: l1)), (Permutation (merge gv2 gv2) (b :: l2)), (Permutation (merge gv2 gv2) (b :: gv2)), (Permutation (merge gv2 gv2) (b :: l1)), (Permutation (merge gv2 gv2) (merge l2 l2))
(Permutation (merge gv2 gv2) (merge l2 l1)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 l1)), (Permutation (merge gv2 gv2) (merge l1 l2)), (Permutation (merge gv2 gv2) (merge l1 gv2)), (Permutation (merge gv2 gv2) (merge l1 l1)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l1)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ l1)), (Permutation (merge gv2 gv2) (l1 ++ l2)), (Permutation (merge gv2 gv2) (l1 ++ gv2)), (Permutation (merge gv2 gv2) (l1 ++ l1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l1) l2), (Permutation (merge gv2 l1) gv2), (Permutation (merge gv2 l1) l1), (Permutation (merge gv2 l1) (a0 :: l2)), (Permutation (merge gv2 l1) (a0 :: gv2))
(Permutation (merge gv2 l1) (a :: l2)), (Permutation (merge gv2 l1) (a :: gv2)), (Permutation (merge gv2 l1) (a :: l1)), (Permutation (merge gv2 l1) (b :: l2)), (Permutation (merge gv2 l1) (b :: gv2)), (Permutation (merge gv2 l1) (b :: l1)), (Permutation (merge gv2 l1) (merge l2 l2)), (Permutation (merge gv2 l1) (merge l2 gv2)), (Permutation (merge gv2 l1) (merge l2 l1)), (Permutation (merge gv2 l1) (merge gv2 l2))
(Permutation (merge gv2 l1) (merge l1 l2)), (Permutation (merge gv2 l1) (merge l1 gv2)), (Permutation (merge gv2 l1) (merge l1 l1)), (Permutation (merge gv2 l1) (l2 ++ l2)), (Permutation (merge gv2 l1) (l2 ++ gv2)), (Permutation (merge gv2 l1) (l2 ++ l1)), (Permutation (merge gv2 l1) (gv2 ++ l2)), (Permutation (merge gv2 l1) (gv2 ++ gv2)), (Permutation (merge gv2 l1) (gv2 ++ l1)), (Permutation (merge gv2 l1) (l1 ++ l2))
(Permutation (merge gv2 l1) (l1 ++ l1)), (Permutation (merge gv2 l1) []), (Permutation (merge l1 l2) gv2), (Permutation (merge l1 l2) (a0 :: gv2)), (Permutation (merge l1 l2) (a :: gv2)), (Permutation (merge l1 l2) (b :: gv2)), (Permutation (merge l1 l2) (merge l2 gv2)), (Permutation (merge l1 l2) (merge gv2 l2)), (Permutation (merge l1 l2) (merge gv2 gv2)), (Permutation (merge l1 l2) (merge gv2 l1))
(Permutation (merge l1 l2) (l2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l2)), (Permutation (merge l1 l2) (gv2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ gv2)), (Permutation (merge l1 gv2) l2), (Permutation (merge l1 gv2) gv2), (Permutation (merge l1 gv2) l1), (Permutation (merge l1 gv2) (a0 :: l2)), (Permutation (merge l1 gv2) (a0 :: gv2))
(Permutation (merge l1 gv2) (a :: l2)), (Permutation (merge l1 gv2) (a :: gv2)), (Permutation (merge l1 gv2) (a :: l1)), (Permutation (merge l1 gv2) (b :: l2)), (Permutation (merge l1 gv2) (b :: gv2)), (Permutation (merge l1 gv2) (b :: l1)), (Permutation (merge l1 gv2) (merge l2 l2)), (Permutation (merge l1 gv2) (merge l2 gv2)), (Permutation (merge l1 gv2) (merge l2 l1)), (Permutation (merge l1 gv2) (merge gv2 l2))
(Permutation (merge l1 gv2) (merge gv2 l1)), (Permutation (merge l1 gv2) (merge l1 l2)), (Permutation (merge l1 gv2) (merge l1 l1)), (Permutation (merge l1 gv2) (l2 ++ l2)), (Permutation (merge l1 gv2) (l2 ++ gv2)), (Permutation (merge l1 gv2) (l2 ++ l1)), (Permutation (merge l1 gv2) (gv2 ++ l2)), (Permutation (merge l1 gv2) (gv2 ++ gv2)), (Permutation (merge l1 gv2) (gv2 ++ l1)), (Permutation (merge l1 gv2) (l1 ++ l2))
(Permutation (merge l1 gv2) (l1 ++ l1)), (Permutation (merge l1 gv2) []), (Permutation (merge l1 l1) gv2), (Permutation (merge l1 l1) (a0 :: gv2)), (Permutation (merge l1 l1) (a :: gv2)), (Permutation (merge l1 l1) (b :: gv2)), (Permutation (merge l1 l1) (merge l2 gv2)), (Permutation (merge l1 l1) (merge gv2 l2)), (Permutation (merge l1 l1) (merge gv2 gv2)), (Permutation (merge l1 l1) (merge gv2 l1))
(Permutation (merge l1 l1) (l2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l2)), (Permutation (merge l1 l1) (gv2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ gv2)), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (b :: gv2)), (Permutation (l2 ++ l2) (merge l2 gv2))
(Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 l1)), (Permutation (l2 ++ l2) (merge l1 gv2)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2)
(Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: l1)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: l1)), (Permutation (l2 ++ gv2) (b :: l2)), (Permutation (l2 ++ gv2) (b :: gv2)), (Permutation (l2 ++ gv2) (b :: l1)), (Permutation (l2 ++ gv2) (merge l2 l2))
(Permutation (l2 ++ gv2) (merge l2 l1)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l1)), (Permutation (l2 ++ gv2) (merge l1 l2)), (Permutation (l2 ++ gv2) (merge l1 gv2)), (Permutation (l2 ++ gv2) (merge l1 l1)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l1)), (Permutation (l2 ++ gv2) (gv2 ++ l2))
(Permutation (l2 ++ gv2) (gv2 ++ l1)), (Permutation (l2 ++ gv2) (l1 ++ l2)), (Permutation (l2 ++ gv2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) (l1 ++ l1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l1) gv2), (Permutation (l2 ++ l1) (a0 :: gv2)), (Permutation (l2 ++ l1) (a :: gv2)), (Permutation (l2 ++ l1) (b :: gv2)), (Permutation (l2 ++ l1) (merge l2 gv2))
(Permutation (l2 ++ l1) (merge gv2 gv2)), (Permutation (l2 ++ l1) (merge gv2 l1)), (Permutation (l2 ++ l1) (merge l1 gv2)), (Permutation (l2 ++ l1) (l2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l2)), (Permutation (l2 ++ l1) (gv2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2)
(Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2)), (Permutation (gv2 ++ l2) (a0 :: l1)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: l1)), (Permutation (gv2 ++ l2) (b :: l2)), (Permutation (gv2 ++ l2) (b :: gv2)), (Permutation (gv2 ++ l2) (b :: l1)), (Permutation (gv2 ++ l2) (merge l2 l2))
(Permutation (gv2 ++ l2) (merge l2 l1)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l1)), (Permutation (gv2 ++ l2) (merge l1 l2)), (Permutation (gv2 ++ l2) (merge l1 gv2)), (Permutation (gv2 ++ l2) (merge l1 l1)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l1))
(Permutation (gv2 ++ l2) (gv2 ++ l1)), (Permutation (gv2 ++ l2) (l1 ++ l2)), (Permutation (gv2 ++ l2) (l1 ++ gv2)), (Permutation (gv2 ++ l2) (l1 ++ l1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) l1), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2))
(Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2)), (Permutation (gv2 ++ gv2) (a :: l1)), (Permutation (gv2 ++ gv2) (b :: l2)), (Permutation (gv2 ++ gv2) (b :: gv2)), (Permutation (gv2 ++ gv2) (b :: l1)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l1)), (Permutation (gv2 ++ gv2) (merge gv2 l2))
(Permutation (gv2 ++ gv2) (merge gv2 l1)), (Permutation (gv2 ++ gv2) (merge l1 l2)), (Permutation (gv2 ++ gv2) (merge l1 gv2)), (Permutation (gv2 ++ gv2) (merge l1 l1)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l1)), (Permutation (gv2 ++ gv2) (l1 ++ l2))
(Permutation (gv2 ++ gv2) (l1 ++ l1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l1) l2), (Permutation (gv2 ++ l1) gv2), (Permutation (gv2 ++ l1) l1), (Permutation (gv2 ++ l1) (a0 :: l2)), (Permutation (gv2 ++ l1) (a0 :: gv2)), (Permutation (gv2 ++ l1) (a0 :: l1)), (Permutation (gv2 ++ l1) (a :: l2)), (Permutation (gv2 ++ l1) (a :: gv2))
(Permutation (gv2 ++ l1) (b :: l2)), (Permutation (gv2 ++ l1) (b :: gv2)), (Permutation (gv2 ++ l1) (b :: l1)), (Permutation (gv2 ++ l1) (merge l2 l2)), (Permutation (gv2 ++ l1) (merge l2 gv2)), (Permutation (gv2 ++ l1) (merge l2 l1)), (Permutation (gv2 ++ l1) (merge gv2 l2)), (Permutation (gv2 ++ l1) (merge gv2 gv2)), (Permutation (gv2 ++ l1) (merge gv2 l1)), (Permutation (gv2 ++ l1) (merge l1 l2))
(Permutation (gv2 ++ l1) (merge l1 l1)), (Permutation (gv2 ++ l1) (l2 ++ l2)), (Permutation (gv2 ++ l1) (l2 ++ gv2)), (Permutation (gv2 ++ l1) (l2 ++ l1)), (Permutation (gv2 ++ l1) (gv2 ++ l2)), (Permutation (gv2 ++ l1) (gv2 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l2)), (Permutation (gv2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l1)), (Permutation (gv2 ++ l1) [])
(Permutation (l1 ++ l2) (a0 :: gv2)), (Permutation (l1 ++ l2) (a :: gv2)), (Permutation (l1 ++ l2) (b :: gv2)), (Permutation (l1 ++ l2) (merge l2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l2)), (Permutation (l1 ++ l2) (merge gv2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l1)), (Permutation (l1 ++ l2) (merge l1 gv2)), (Permutation (l1 ++ l2) (l2 ++ gv2)), (Permutation (l1 ++ l2) (gv2 ++ l2))
(Permutation (l1 ++ l2) (gv2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv2)), (Permutation (l1 ++ gv2) l2), (Permutation (l1 ++ gv2) gv2), (Permutation (l1 ++ gv2) l1), (Permutation (l1 ++ gv2) (a0 :: l2)), (Permutation (l1 ++ gv2) (a0 :: gv2)), (Permutation (l1 ++ gv2) (a0 :: l1)), (Permutation (l1 ++ gv2) (a :: l2)), (Permutation (l1 ++ gv2) (a :: gv2))
(Permutation (l1 ++ gv2) (b :: l2)), (Permutation (l1 ++ gv2) (b :: gv2)), (Permutation (l1 ++ gv2) (b :: l1)), (Permutation (l1 ++ gv2) (merge l2 l2)), (Permutation (l1 ++ gv2) (merge l2 gv2)), (Permutation (l1 ++ gv2) (merge l2 l1)), (Permutation (l1 ++ gv2) (merge gv2 l2)), (Permutation (l1 ++ gv2) (merge gv2 gv2)), (Permutation (l1 ++ gv2) (merge gv2 l1)), (Permutation (l1 ++ gv2) (merge l1 l2))
(Permutation (l1 ++ gv2) (merge l1 l1)), (Permutation (l1 ++ gv2) (l2 ++ l2)), (Permutation (l1 ++ gv2) (l2 ++ gv2)), (Permutation (l1 ++ gv2) (l2 ++ l1)), (Permutation (l1 ++ gv2) (gv2 ++ l2)), (Permutation (l1 ++ gv2) (gv2 ++ gv2)), (Permutation (l1 ++ gv2) (gv2 ++ l1)), (Permutation (l1 ++ gv2) (l1 ++ l2)), (Permutation (l1 ++ gv2) (l1 ++ l1)), (Permutation (l1 ++ gv2) [])
(Permutation (l1 ++ l1) (a0 :: gv2)), (Permutation (l1 ++ l1) (a :: gv2)), (Permutation (l1 ++ l1) (b :: gv2)), (Permutation (l1 ++ l1) (merge l2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l2)), (Permutation (l1 ++ l1) (merge gv2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l1)), (Permutation (l1 ++ l1) (merge l1 gv2)), (Permutation (l1 ++ l1) (l2 ++ gv2)), (Permutation (l1 ++ l1) (gv2 ++ l2))
(Permutation (l1 ++ l1) (gv2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ gv2)), (Permutation [] gv2), (Permutation [] (a0 :: gv2)), (Permutation [] (a :: gv2)), (Permutation [] (b :: gv2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l1))
(Permutation [] (l2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l1)), (Permutation [] (l1 ++ gv2)), (In a0 gv2), (In a0 (a0 :: gv2)), (In a0 (a :: gv2)), (In a0 (b :: gv2)), (In a0 (merge l2 gv2))
(In a0 (merge gv2 gv2)), (In a0 (merge gv2 l1)), (In a0 (merge l1 gv2)), (In a0 (l2 ++ gv2)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ l1)), (In a0 (l1 ++ gv2)), (In a gv2), (In a (a0 :: gv2))
(In a (b :: gv2)), (In a (merge l2 gv2)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 l1)), (In a (merge l1 gv2)), (In a (l2 ++ gv2)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ l1))
(In b gv2), (In b (a0 :: gv2)), (In b (a :: gv2)), (In b (b :: gv2)), (In b (merge l2 gv2)), (In b (merge gv2 l2)), (In b (merge gv2 gv2)), (In b (merge gv2 l1)), (In b (merge l1 gv2)), (In b (l2 ++ gv2))
(In b (gv2 ++ gv2)), (In b (gv2 ++ l1)), (In b (l1 ++ gv2)), (In (length l2) gv2), (In (length l2) (a0 :: gv2)), (In (length l2) (a :: gv2)), (In (length l2) (b :: gv2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2))
(In (length l2) (merge l1 gv2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l1)), (In (length l2) (l1 ++ gv2)), (In (length gv2) l2), (In (length gv2) gv2), (In (length gv2) l1), (In (length gv2) (a0 :: l2))
(In (length gv2) (a0 :: l1)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: l1)), (In (length gv2) (b :: l2)), (In (length gv2) (b :: gv2)), (In (length gv2) (b :: l1)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l1))
(In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l1)), (In (length gv2) (merge l1 l2)), (In (length gv2) (merge l1 gv2)), (In (length gv2) (merge l1 l1)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l1)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2))
(In (length gv2) (l1 ++ l2)), (In (length gv2) (l1 ++ gv2)), (In (length gv2) (l1 ++ l1)), (In (length l1) gv2), (In (length l1) (a0 :: gv2)), (In (length l1) (a :: gv2)), (In (length l1) (b :: gv2)), (In (length l1) (merge l2 gv2)), (In (length l1) (merge gv2 l2)), (In (length l1) (merge gv2 gv2))
(In (length l1) (merge l1 gv2)), (In (length l1) (l2 ++ gv2)), (In (length l1) (gv2 ++ l2)), (In (length l1) (gv2 ++ gv2)), (In (length l1) (gv2 ++ l1)), (In (length l1) (l1 ++ gv2)), (a0 < length gv2), (a < length gv2), (b < length gv2), (length l2 < length gv2)
(length gv2 < a), (length gv2 < b), (length gv2 < length l2), (length gv2 < length l1), (length l1 < length gv2), (a0 <= length gv2), (a <= length gv2), (b <= length gv2), (length l2 <= length gv2), (length gv2 <= a0)
(length gv2 <= b), (length gv2 <= length l2), (length gv2 <= length l1), (length l1 <= length gv2), (merge l2 l2 = gv2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l1), (merge l2 l2 = l1 ++ gv2)
(merge l2 gv2 = gv2), (merge l2 gv2 = l1), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l1), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ l1), (merge l2 gv2 = l1 ++ l2), (merge l2 gv2 = l1 ++ gv2)
(merge l2 l1 = gv2), (merge l2 l1 = l2 ++ gv2), (merge l2 l1 = gv2 ++ l2), (merge l2 l1 = gv2 ++ gv2), (merge l2 l1 = gv2 ++ l1), (merge l2 l1 = l1 ++ gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = l1), (merge gv2 l2 = l2 ++ l2)
(merge gv2 l2 = l2 ++ l1), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l1), (merge gv2 l2 = l1 ++ l2), (merge gv2 l2 = l1 ++ gv2), (merge gv2 l2 = l1 ++ l1), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l1)
(merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ l1), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l1), (merge gv2 gv2 = l1 ++ l2), (merge gv2 gv2 = l1 ++ gv2), (merge gv2 gv2 = l1 ++ l1), (merge gv2 l1 = l2), (merge gv2 l1 = gv2)
(merge gv2 l1 = l2 ++ l2), (merge gv2 l1 = l2 ++ gv2), (merge gv2 l1 = l2 ++ l1), (merge gv2 l1 = gv2 ++ l2), (merge gv2 l1 = gv2 ++ gv2), (merge gv2 l1 = gv2 ++ l1), (merge gv2 l1 = l1 ++ l2), (merge gv2 l1 = l1 ++ gv2), (merge gv2 l1 = l1 ++ l1), (merge l1 l2 = gv2)
(merge l1 l2 = gv2 ++ l2), (merge l1 l2 = gv2 ++ gv2), (merge l1 l2 = gv2 ++ l1), (merge l1 l2 = l1 ++ gv2), (merge l1 gv2 = l2), (merge l1 gv2 = gv2), (merge l1 gv2 = l1), (merge l1 gv2 = l2 ++ l2), (merge l1 gv2 = l2 ++ gv2), (merge l1 gv2 = l2 ++ l1)
(merge l1 gv2 = gv2 ++ gv2), (merge l1 gv2 = gv2 ++ l1), (merge l1 gv2 = l1 ++ l2), (merge l1 gv2 = l1 ++ gv2), (merge l1 gv2 = l1 ++ l1), (merge l1 l1 = gv2), (merge l1 l1 = l2 ++ gv2), (merge l1 l1 = gv2 ++ l2), (merge l1 l1 = gv2 ++ gv2), (merge l1 l1 = gv2 ++ l1)
(l2 ++ l2 = gv2), (l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l1), (l2 ++ l1 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l1), (gv2 ++ gv2 = l2), (gv2 ++ gv2 = gv2)
(gv2 ++ l1 = l2), (gv2 ++ l1 = gv2), (gv2 ++ l1 = l1), (l1 ++ l2 = gv2), (l1 ++ gv2 = l2), (l1 ++ gv2 = gv2), (l1 ++ gv2 = l1), (l1 ++ l1 = gv2), (length gv2 = a0), (length gv2 = a)

Label: 1 (6)
(false = sorted_bool gv2), (true = sorted_bool gv2), (a0 <=* gv2), (a0 <=* a0 :: gv2), (a0 <=* a :: gv2), (a0 <=* b :: gv2), (a0 <=* merge l2 gv2), (a0 <=* merge gv2 l2), (a0 <=* merge gv2 gv2), (a0 <=* merge gv2 l1)
(a0 <=* l2 ++ gv2), (a0 <=* gv2 ++ l2), (a0 <=* gv2 ++ gv2), (a0 <=* gv2 ++ l1), (a0 <=* l1 ++ gv2), (a <=* gv2), (a <=* a0 :: gv2), (a <=* a :: gv2), (a <=* b :: gv2), (a <=* merge l2 gv2)
(a <=* merge gv2 gv2), (a <=* merge gv2 l1), (a <=* merge l1 gv2), (a <=* l2 ++ gv2), (a <=* gv2 ++ l2), (a <=* gv2 ++ gv2), (a <=* gv2 ++ l1), (a <=* l1 ++ gv2), (b <=* gv2), (b <=* a0 :: gv2)
(b <=* b :: gv2), (b <=* merge l2 gv2), (b <=* merge gv2 l2), (b <=* merge gv2 gv2), (b <=* merge gv2 l1), (b <=* merge l1 gv2), (b <=* l2 ++ gv2), (b <=* gv2 ++ l2), (b <=* gv2 ++ gv2), (b <=* gv2 ++ l1)
(length l2 <=* gv2), (length l2 <=* a0 :: gv2), (length l2 <=* a :: gv2), (length l2 <=* b :: gv2), (length l2 <=* merge l2 gv2), (length l2 <=* merge gv2 l2), (length l2 <=* merge gv2 gv2), (length l2 <=* merge gv2 l1), (length l2 <=* merge l1 gv2), (length l2 <=* l2 ++ gv2)
(length l2 <=* gv2 ++ gv2), (length l2 <=* gv2 ++ l1), (length l2 <=* l1 ++ gv2), (length gv2 <=* l2), (length gv2 <=* gv2), (length gv2 <=* l1), (length gv2 <=* a0 :: l2), (length gv2 <=* a0 :: gv2), (length gv2 <=* a0 :: l1), (length gv2 <=* a :: l2)
(length gv2 <=* a :: l1), (length gv2 <=* b :: l2), (length gv2 <=* b :: gv2), (length gv2 <=* b :: l1), (length gv2 <=* merge l2 l2), (length gv2 <=* merge l2 gv2), (length gv2 <=* merge l2 l1), (length gv2 <=* merge gv2 l2), (length gv2 <=* merge gv2 gv2), (length gv2 <=* merge gv2 l1)
(length gv2 <=* merge l1 gv2), (length gv2 <=* merge l1 l1), (length gv2 <=* l2 ++ l2), (length gv2 <=* l2 ++ gv2), (length gv2 <=* l2 ++ l1), (length gv2 <=* gv2 ++ l2), (length gv2 <=* gv2 ++ gv2), (length gv2 <=* gv2 ++ l1), (length gv2 <=* l1 ++ l2), (length gv2 <=* l1 ++ gv2)
(length gv2 <=* []), (length l1 <=* gv2), (length l1 <=* a0 :: gv2), (length l1 <=* a :: gv2), (length l1 <=* b :: gv2), (length l1 <=* merge l2 gv2), (length l1 <=* merge gv2 l2), (length l1 <=* merge gv2 gv2), (length l1 <=* merge gv2 l1), (length l1 <=* merge l1 gv2)
(length l1 <=* gv2 ++ l2), (length l1 <=* gv2 ++ gv2), (length l1 <=* gv2 ++ l1), (length l1 <=* l1 ++ gv2), (sorted gv2), (sorted (a0 :: gv2)), (sorted (a :: gv2)), (sorted (b :: gv2)), (sorted (merge l2 gv2)), (sorted (merge gv2 l2))
(sorted (merge gv2 l1)), (sorted (merge l1 gv2)), (sorted (l2 ++ gv2)), (sorted (gv2 ++ l2)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ l1)), (sorted (l1 ++ gv2)), (Permutation l2 gv2), (Permutation l2 (a0 :: gv2)), (Permutation l2 (a :: gv2))
(Permutation l2 (merge l2 gv2)), (Permutation l2 (merge gv2 l2)), (Permutation l2 (merge gv2 gv2)), (Permutation l2 (merge gv2 l1)), (Permutation l2 (merge l1 gv2)), (Permutation l2 (l2 ++ gv2)), (Permutation l2 (gv2 ++ l2)), (Permutation l2 (gv2 ++ gv2)), (Permutation l2 (gv2 ++ l1)), (Permutation l2 (l1 ++ gv2))
(Permutation gv2 l1), (Permutation gv2 (a0 :: l2)), (Permutation gv2 (a0 :: gv2)), (Permutation gv2 (a0 :: l1)), (Permutation gv2 (a :: l2)), (Permutation gv2 (a :: gv2)), (Permutation gv2 (a :: l1)), (Permutation gv2 (b :: l2)), (Permutation gv2 (b :: gv2)), (Permutation gv2 (b :: l1))
(Permutation gv2 (merge l2 gv2)), (Permutation gv2 (merge l2 l1)), (Permutation gv2 (merge gv2 l2)), (Permutation gv2 (merge gv2 gv2)), (Permutation gv2 (merge gv2 l1)), (Permutation gv2 (merge l1 l2)), (Permutation gv2 (merge l1 gv2)), (Permutation gv2 (merge l1 l1)), (Permutation gv2 (l2 ++ l2)), (Permutation gv2 (l2 ++ gv2))
(Permutation gv2 (gv2 ++ l2)), (Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ l1)), (Permutation gv2 (l1 ++ l2)), (Permutation gv2 (l1 ++ gv2)), (Permutation gv2 (l1 ++ l1)), (Permutation gv2 []), (Permutation l1 gv2), (Permutation l1 (a0 :: gv2)), (Permutation l1 (a :: gv2))
(Permutation l1 (merge l2 gv2)), (Permutation l1 (merge gv2 l2)), (Permutation l1 (merge gv2 gv2)), (Permutation l1 (merge gv2 l1)), (Permutation l1 (merge l1 gv2)), (Permutation l1 (l2 ++ gv2)), (Permutation l1 (gv2 ++ l2)), (Permutation l1 (gv2 ++ gv2)), (Permutation l1 (gv2 ++ l1)), (Permutation l1 (l1 ++ gv2))
(Permutation (a0 :: l2) (a0 :: gv2)), (Permutation (a0 :: l2) (a :: gv2)), (Permutation (a0 :: l2) (b :: gv2)), (Permutation (a0 :: l2) (merge l2 gv2)), (Permutation (a0 :: l2) (merge gv2 l2)), (Permutation (a0 :: l2) (merge gv2 gv2)), (Permutation (a0 :: l2) (merge gv2 l1)), (Permutation (a0 :: l2) (merge l1 gv2)), (Permutation (a0 :: l2) (l2 ++ gv2)), (Permutation (a0 :: l2) (gv2 ++ l2))
(Permutation (a0 :: l2) (gv2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ gv2)), (Permutation (a0 :: gv2) l2), (Permutation (a0 :: gv2) gv2), (Permutation (a0 :: gv2) l1), (Permutation (a0 :: gv2) (a0 :: l2)), (Permutation (a0 :: gv2) (a0 :: l1)), (Permutation (a0 :: gv2) (a :: l2)), (Permutation (a0 :: gv2) (a :: gv2)), (Permutation (a0 :: gv2) (a :: l1))
(Permutation (a0 :: gv2) (b :: gv2)), (Permutation (a0 :: gv2) (b :: l1)), (Permutation (a0 :: gv2) (merge l2 l2)), (Permutation (a0 :: gv2) (merge l2 gv2)), (Permutation (a0 :: gv2) (merge l2 l1)), (Permutation (a0 :: gv2) (merge gv2 l2)), (Permutation (a0 :: gv2) (merge gv2 gv2)), (Permutation (a0 :: gv2) (merge gv2 l1)), (Permutation (a0 :: gv2) (merge l1 l2)), (Permutation (a0 :: gv2) (merge l1 gv2))
(Permutation (a0 :: gv2) (l2 ++ l2)), (Permutation (a0 :: gv2) (l2 ++ gv2)), (Permutation (a0 :: gv2) (l2 ++ l1)), (Permutation (a0 :: gv2) (gv2 ++ l2)), (Permutation (a0 :: gv2) (gv2 ++ gv2)), (Permutation (a0 :: gv2) (gv2 ++ l1)), (Permutation (a0 :: gv2) (l1 ++ l2)), (Permutation (a0 :: gv2) (l1 ++ gv2)), (Permutation (a0 :: gv2) (l1 ++ l1)), (Permutation (a0 :: gv2) [])
(Permutation (a0 :: l1) (a0 :: gv2)), (Permutation (a0 :: l1) (a :: gv2)), (Permutation (a0 :: l1) (b :: gv2)), (Permutation (a0 :: l1) (merge l2 gv2)), (Permutation (a0 :: l1) (merge gv2 l2)), (Permutation (a0 :: l1) (merge gv2 gv2)), (Permutation (a0 :: l1) (merge gv2 l1)), (Permutation (a0 :: l1) (merge l1 gv2)), (Permutation (a0 :: l1) (l2 ++ gv2)), (Permutation (a0 :: l1) (gv2 ++ l2))
(Permutation (a0 :: l1) (gv2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ gv2)), (Permutation (a :: l2) gv2), (Permutation (a :: l2) (a0 :: gv2)), (Permutation (a :: l2) (a :: gv2)), (Permutation (a :: l2) (b :: gv2)), (Permutation (a :: l2) (merge l2 gv2)), (Permutation (a :: l2) (merge gv2 l2)), (Permutation (a :: l2) (merge gv2 gv2)), (Permutation (a :: l2) (merge gv2 l1))
(Permutation (a :: l2) (l2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l2)), (Permutation (a :: l2) (gv2 ++ gv2)), (Permutation (a :: l2) (gv2 ++ l1)), (Permutation (a :: l2) (l1 ++ gv2)), (Permutation (a :: gv2) l2), (Permutation (a :: gv2) gv2), (Permutation (a :: gv2) l1), (Permutation (a :: gv2) (a0 :: l2)), (Permutation (a :: gv2) (a0 :: gv2))
(Permutation (a :: gv2) (a :: l2)), (Permutation (a :: gv2) (a :: l1)), (Permutation (a :: gv2) (b :: l2)), (Permutation (a :: gv2) (b :: gv2)), (Permutation (a :: gv2) (b :: l1)), (Permutation (a :: gv2) (merge l2 l2)), (Permutation (a :: gv2) (merge l2 gv2)), (Permutation (a :: gv2) (merge l2 l1)), (Permutation (a :: gv2) (merge gv2 l2)), (Permutation (a :: gv2) (merge gv2 gv2))
(Permutation (a :: gv2) (merge l1 l2)), (Permutation (a :: gv2) (merge l1 gv2)), (Permutation (a :: gv2) (merge l1 l1)), (Permutation (a :: gv2) (l2 ++ l2)), (Permutation (a :: gv2) (l2 ++ gv2)), (Permutation (a :: gv2) (l2 ++ l1)), (Permutation (a :: gv2) (gv2 ++ l2)), (Permutation (a :: gv2) (gv2 ++ gv2)), (Permutation (a :: gv2) (gv2 ++ l1)), (Permutation (a :: gv2) (l1 ++ l2))
(Permutation (a :: gv2) (l1 ++ l1)), (Permutation (a :: gv2) []), (Permutation (a :: l1) gv2), (Permutation (a :: l1) (a0 :: gv2)), (Permutation (a :: l1) (a :: gv2)), (Permutation (a :: l1) (b :: gv2)), (Permutation (a :: l1) (merge l2 gv2)), (Permutation (a :: l1) (merge gv2 l2)), (Permutation (a :: l1) (merge gv2 gv2)), (Permutation (a :: l1) (merge gv2 l1))
(Permutation (a :: l1) (l2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l2)), (Permutation (a :: l1) (gv2 ++ gv2)), (Permutation (a :: l1) (gv2 ++ l1)), (Permutation (a :: l1) (l1 ++ gv2)), (Permutation (b :: l2) gv2), (Permutation (b :: l2) (a0 :: gv2)), (Permutation (b :: l2) (a :: gv2)), (Permutation (b :: l2) (b :: gv2)), (Permutation (b :: l2) (merge l2 gv2))
(Permutation (b :: l2) (merge gv2 gv2)), (Permutation (b :: l2) (merge gv2 l1)), (Permutation (b :: l2) (merge l1 gv2)), (Permutation (b :: l2) (l2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l2)), (Permutation (b :: l2) (gv2 ++ gv2)), (Permutation (b :: l2) (gv2 ++ l1)), (Permutation (b :: l2) (l1 ++ gv2)), (Permutation (b :: gv2) l2), (Permutation (b :: gv2) gv2)
(Permutation (b :: gv2) (a0 :: l2)), (Permutation (b :: gv2) (a0 :: gv2)), (Permutation (b :: gv2) (a0 :: l1)), (Permutation (b :: gv2) (a :: l2)), (Permutation (b :: gv2) (a :: gv2)), (Permutation (b :: gv2) (a :: l1)), (Permutation (b :: gv2) (b :: l2)), (Permutation (b :: gv2) (b :: l1)), (Permutation (b :: gv2) (merge l2 l2)), (Permutation (b :: gv2) (merge l2 gv2))
(Permutation (b :: gv2) (merge gv2 l2)), (Permutation (b :: gv2) (merge gv2 gv2)), (Permutation (b :: gv2) (merge gv2 l1)), (Permutation (b :: gv2) (merge l1 l2)), (Permutation (b :: gv2) (merge l1 gv2)), (Permutation (b :: gv2) (merge l1 l1)), (Permutation (b :: gv2) (l2 ++ l2)), (Permutation (b :: gv2) (l2 ++ gv2)), (Permutation (b :: gv2) (l2 ++ l1)), (Permutation (b :: gv2) (gv2 ++ l2))
(Permutation (b :: gv2) (gv2 ++ l1)), (Permutation (b :: gv2) (l1 ++ l2)), (Permutation (b :: gv2) (l1 ++ gv2)), (Permutation (b :: gv2) (l1 ++ l1)), (Permutation (b :: gv2) []), (Permutation (b :: l1) gv2), (Permutation (b :: l1) (a0 :: gv2)), (Permutation (b :: l1) (a :: gv2)), (Permutation (b :: l1) (b :: gv2)), (Permutation (b :: l1) (merge l2 gv2))
(Permutation (b :: l1) (merge gv2 gv2)), (Permutation (b :: l1) (merge gv2 l1)), (Permutation (b :: l1) (merge l1 gv2)), (Permutation (b :: l1) (l2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l2)), (Permutation (b :: l1) (gv2 ++ gv2)), (Permutation (b :: l1) (gv2 ++ l1)), (Permutation (b :: l1) (l1 ++ gv2)), (Permutation (merge l2 l2) gv2), (Permutation (merge l2 l2) (a0 :: gv2))
(Permutation (merge l2 l2) (b :: gv2)), (Permutation (merge l2 l2) (merge l2 gv2)), (Permutation (merge l2 l2) (merge gv2 l2)), (Permutation (merge l2 l2) (merge gv2 gv2)), (Permutation (merge l2 l2) (merge gv2 l1)), (Permutation (merge l2 l2) (merge l1 gv2)), (Permutation (merge l2 l2) (l2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l2)), (Permutation (merge l2 l2) (gv2 ++ gv2)), (Permutation (merge l2 l2) (gv2 ++ l1))
(Permutation (merge l2 gv2) l2), (Permutation (merge l2 gv2) gv2), (Permutation (merge l2 gv2) l1), (Permutation (merge l2 gv2) (a0 :: l2)), (Permutation (merge l2 gv2) (a0 :: gv2)), (Permutation (merge l2 gv2) (a0 :: l1)), (Permutation (merge l2 gv2) (a :: l2)), (Permutation (merge l2 gv2) (a :: gv2)), (Permutation (merge l2 gv2) (a :: l1)), (Permutation (merge l2 gv2) (b :: l2))
(Permutation (merge l2 gv2) (b :: l1)), (Permutation (merge l2 gv2) (merge l2 l2)), (Permutation (merge l2 gv2) (merge l2 l1)), (Permutation (merge l2 gv2) (merge gv2 l2)), (Permutation (merge l2 gv2) (merge gv2 gv2)), (Permutation (merge l2 gv2) (merge gv2 l1)), (Permutation (merge l2 gv2) (merge l1 l2)), (Permutation (merge l2 gv2) (merge l1 gv2)), (Permutation (merge l2 gv2) (merge l1 l1)), (Permutation (merge l2 gv2) (l2 ++ l2))
(Permutation (merge l2 gv2) (l2 ++ l1)), (Permutation (merge l2 gv2) (gv2 ++ l2)), (Permutation (merge l2 gv2) (gv2 ++ gv2)), (Permutation (merge l2 gv2) (gv2 ++ l1)), (Permutation (merge l2 gv2) (l1 ++ l2)), (Permutation (merge l2 gv2) (l1 ++ gv2)), (Permutation (merge l2 gv2) (l1 ++ l1)), (Permutation (merge l2 gv2) []), (Permutation (merge l2 l1) gv2), (Permutation (merge l2 l1) (a0 :: gv2))
(Permutation (merge l2 l1) (b :: gv2)), (Permutation (merge l2 l1) (merge l2 gv2)), (Permutation (merge l2 l1) (merge gv2 l2)), (Permutation (merge l2 l1) (merge gv2 gv2)), (Permutation (merge l2 l1) (merge gv2 l1)), (Permutation (merge l2 l1) (merge l1 gv2)), (Permutation (merge l2 l1) (l2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l2)), (Permutation (merge l2 l1) (gv2 ++ gv2)), (Permutation (merge l2 l1) (gv2 ++ l1))
(Permutation (merge gv2 l2) l2), (Permutation (merge gv2 l2) gv2), (Permutation (merge gv2 l2) l1), (Permutation (merge gv2 l2) (a0 :: l2)), (Permutation (merge gv2 l2) (a0 :: gv2)), (Permutation (merge gv2 l2) (a0 :: l1)), (Permutation (merge gv2 l2) (a :: l2)), (Permutation (merge gv2 l2) (a :: gv2)), (Permutation (merge gv2 l2) (a :: l1)), (Permutation (merge gv2 l2) (b :: l2))
(Permutation (merge gv2 l2) (b :: l1)), (Permutation (merge gv2 l2) (merge l2 l2)), (Permutation (merge gv2 l2) (merge l2 gv2)), (Permutation (merge gv2 l2) (merge l2 l1)), (Permutation (merge gv2 l2) (merge gv2 gv2)), (Permutation (merge gv2 l2) (merge gv2 l1)), (Permutation (merge gv2 l2) (merge l1 l2)), (Permutation (merge gv2 l2) (merge l1 gv2)), (Permutation (merge gv2 l2) (merge l1 l1)), (Permutation (merge gv2 l2) (l2 ++ l2))
(Permutation (merge gv2 l2) (l2 ++ l1)), (Permutation (merge gv2 l2) (gv2 ++ l2)), (Permutation (merge gv2 l2) (gv2 ++ gv2)), (Permutation (merge gv2 l2) (gv2 ++ l1)), (Permutation (merge gv2 l2) (l1 ++ l2)), (Permutation (merge gv2 l2) (l1 ++ gv2)), (Permutation (merge gv2 l2) (l1 ++ l1)), (Permutation (merge gv2 l2) []), (Permutation (merge gv2 gv2) l2), (Permutation (merge gv2 gv2) gv2)
(Permutation (merge gv2 gv2) (a0 :: l2)), (Permutation (merge gv2 gv2) (a0 :: gv2)), (Permutation (merge gv2 gv2) (a0 :: l1)), (Permutation (merge gv2 gv2) (a :: l2)), (Permutation (merge gv2 gv2) (a :: gv2)), (Permutation (merge gv2 gv2) (a :: l1)), (Permutation (merge gv2 gv2) (b :: l2)), (Permutation (merge gv2 gv2) (b :: gv2)), (Permutation (merge gv2 gv2) (b :: l1)), (Permutation (merge gv2 gv2) (merge l2 l2))
(Permutation (merge gv2 gv2) (merge l2 l1)), (Permutation (merge gv2 gv2) (merge gv2 l2)), (Permutation (merge gv2 gv2) (merge gv2 l1)), (Permutation (merge gv2 gv2) (merge l1 l2)), (Permutation (merge gv2 gv2) (merge l1 gv2)), (Permutation (merge gv2 gv2) (merge l1 l1)), (Permutation (merge gv2 gv2) (l2 ++ l2)), (Permutation (merge gv2 gv2) (l2 ++ gv2)), (Permutation (merge gv2 gv2) (l2 ++ l1)), (Permutation (merge gv2 gv2) (gv2 ++ l2))
(Permutation (merge gv2 gv2) (gv2 ++ l1)), (Permutation (merge gv2 gv2) (l1 ++ l2)), (Permutation (merge gv2 gv2) (l1 ++ gv2)), (Permutation (merge gv2 gv2) (l1 ++ l1)), (Permutation (merge gv2 gv2) []), (Permutation (merge gv2 l1) l2), (Permutation (merge gv2 l1) gv2), (Permutation (merge gv2 l1) l1), (Permutation (merge gv2 l1) (a0 :: l2)), (Permutation (merge gv2 l1) (a0 :: gv2))
(Permutation (merge gv2 l1) (a :: l2)), (Permutation (merge gv2 l1) (a :: gv2)), (Permutation (merge gv2 l1) (a :: l1)), (Permutation (merge gv2 l1) (b :: l2)), (Permutation (merge gv2 l1) (b :: gv2)), (Permutation (merge gv2 l1) (b :: l1)), (Permutation (merge gv2 l1) (merge l2 l2)), (Permutation (merge gv2 l1) (merge l2 gv2)), (Permutation (merge gv2 l1) (merge l2 l1)), (Permutation (merge gv2 l1) (merge gv2 l2))
(Permutation (merge gv2 l1) (merge l1 l2)), (Permutation (merge gv2 l1) (merge l1 gv2)), (Permutation (merge gv2 l1) (merge l1 l1)), (Permutation (merge gv2 l1) (l2 ++ l2)), (Permutation (merge gv2 l1) (l2 ++ gv2)), (Permutation (merge gv2 l1) (l2 ++ l1)), (Permutation (merge gv2 l1) (gv2 ++ l2)), (Permutation (merge gv2 l1) (gv2 ++ gv2)), (Permutation (merge gv2 l1) (gv2 ++ l1)), (Permutation (merge gv2 l1) (l1 ++ l2))
(Permutation (merge gv2 l1) (l1 ++ l1)), (Permutation (merge gv2 l1) []), (Permutation (merge l1 l2) gv2), (Permutation (merge l1 l2) (a0 :: gv2)), (Permutation (merge l1 l2) (a :: gv2)), (Permutation (merge l1 l2) (b :: gv2)), (Permutation (merge l1 l2) (merge l2 gv2)), (Permutation (merge l1 l2) (merge gv2 l2)), (Permutation (merge l1 l2) (merge gv2 gv2)), (Permutation (merge l1 l2) (merge gv2 l1))
(Permutation (merge l1 l2) (l2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l2)), (Permutation (merge l1 l2) (gv2 ++ gv2)), (Permutation (merge l1 l2) (gv2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ gv2)), (Permutation (merge l1 gv2) l2), (Permutation (merge l1 gv2) gv2), (Permutation (merge l1 gv2) l1), (Permutation (merge l1 gv2) (a0 :: l2)), (Permutation (merge l1 gv2) (a0 :: gv2))
(Permutation (merge l1 gv2) (a :: l2)), (Permutation (merge l1 gv2) (a :: gv2)), (Permutation (merge l1 gv2) (a :: l1)), (Permutation (merge l1 gv2) (b :: l2)), (Permutation (merge l1 gv2) (b :: gv2)), (Permutation (merge l1 gv2) (b :: l1)), (Permutation (merge l1 gv2) (merge l2 l2)), (Permutation (merge l1 gv2) (merge l2 gv2)), (Permutation (merge l1 gv2) (merge l2 l1)), (Permutation (merge l1 gv2) (merge gv2 l2))
(Permutation (merge l1 gv2) (merge gv2 l1)), (Permutation (merge l1 gv2) (merge l1 l2)), (Permutation (merge l1 gv2) (merge l1 l1)), (Permutation (merge l1 gv2) (l2 ++ l2)), (Permutation (merge l1 gv2) (l2 ++ gv2)), (Permutation (merge l1 gv2) (l2 ++ l1)), (Permutation (merge l1 gv2) (gv2 ++ l2)), (Permutation (merge l1 gv2) (gv2 ++ gv2)), (Permutation (merge l1 gv2) (gv2 ++ l1)), (Permutation (merge l1 gv2) (l1 ++ l2))
(Permutation (merge l1 gv2) (l1 ++ l1)), (Permutation (merge l1 gv2) []), (Permutation (merge l1 l1) gv2), (Permutation (merge l1 l1) (a0 :: gv2)), (Permutation (merge l1 l1) (a :: gv2)), (Permutation (merge l1 l1) (b :: gv2)), (Permutation (merge l1 l1) (merge l2 gv2)), (Permutation (merge l1 l1) (merge gv2 l2)), (Permutation (merge l1 l1) (merge gv2 gv2)), (Permutation (merge l1 l1) (merge gv2 l1))
(Permutation (merge l1 l1) (l2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l2)), (Permutation (merge l1 l1) (gv2 ++ gv2)), (Permutation (merge l1 l1) (gv2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ gv2)), (Permutation (l2 ++ l2) gv2), (Permutation (l2 ++ l2) (a0 :: gv2)), (Permutation (l2 ++ l2) (a :: gv2)), (Permutation (l2 ++ l2) (b :: gv2)), (Permutation (l2 ++ l2) (merge l2 gv2))
(Permutation (l2 ++ l2) (merge gv2 gv2)), (Permutation (l2 ++ l2) (merge gv2 l1)), (Permutation (l2 ++ l2) (merge l1 gv2)), (Permutation (l2 ++ l2) (l2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l2)), (Permutation (l2 ++ l2) (gv2 ++ gv2)), (Permutation (l2 ++ l2) (gv2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) l2), (Permutation (l2 ++ gv2) gv2)
(Permutation (l2 ++ gv2) (a0 :: l2)), (Permutation (l2 ++ gv2) (a0 :: gv2)), (Permutation (l2 ++ gv2) (a0 :: l1)), (Permutation (l2 ++ gv2) (a :: l2)), (Permutation (l2 ++ gv2) (a :: gv2)), (Permutation (l2 ++ gv2) (a :: l1)), (Permutation (l2 ++ gv2) (b :: l2)), (Permutation (l2 ++ gv2) (b :: gv2)), (Permutation (l2 ++ gv2) (b :: l1)), (Permutation (l2 ++ gv2) (merge l2 l2))
(Permutation (l2 ++ gv2) (merge l2 l1)), (Permutation (l2 ++ gv2) (merge gv2 l2)), (Permutation (l2 ++ gv2) (merge gv2 gv2)), (Permutation (l2 ++ gv2) (merge gv2 l1)), (Permutation (l2 ++ gv2) (merge l1 l2)), (Permutation (l2 ++ gv2) (merge l1 gv2)), (Permutation (l2 ++ gv2) (merge l1 l1)), (Permutation (l2 ++ gv2) (l2 ++ l2)), (Permutation (l2 ++ gv2) (l2 ++ l1)), (Permutation (l2 ++ gv2) (gv2 ++ l2))
(Permutation (l2 ++ gv2) (gv2 ++ l1)), (Permutation (l2 ++ gv2) (l1 ++ l2)), (Permutation (l2 ++ gv2) (l1 ++ gv2)), (Permutation (l2 ++ gv2) (l1 ++ l1)), (Permutation (l2 ++ gv2) []), (Permutation (l2 ++ l1) gv2), (Permutation (l2 ++ l1) (a0 :: gv2)), (Permutation (l2 ++ l1) (a :: gv2)), (Permutation (l2 ++ l1) (b :: gv2)), (Permutation (l2 ++ l1) (merge l2 gv2))
(Permutation (l2 ++ l1) (merge gv2 gv2)), (Permutation (l2 ++ l1) (merge gv2 l1)), (Permutation (l2 ++ l1) (merge l1 gv2)), (Permutation (l2 ++ l1) (l2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l2)), (Permutation (l2 ++ l1) (gv2 ++ gv2)), (Permutation (l2 ++ l1) (gv2 ++ l1)), (Permutation (l2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l2) l2), (Permutation (gv2 ++ l2) gv2)
(Permutation (gv2 ++ l2) (a0 :: l2)), (Permutation (gv2 ++ l2) (a0 :: gv2)), (Permutation (gv2 ++ l2) (a0 :: l1)), (Permutation (gv2 ++ l2) (a :: l2)), (Permutation (gv2 ++ l2) (a :: gv2)), (Permutation (gv2 ++ l2) (a :: l1)), (Permutation (gv2 ++ l2) (b :: l2)), (Permutation (gv2 ++ l2) (b :: gv2)), (Permutation (gv2 ++ l2) (b :: l1)), (Permutation (gv2 ++ l2) (merge l2 l2))
(Permutation (gv2 ++ l2) (merge l2 l1)), (Permutation (gv2 ++ l2) (merge gv2 l2)), (Permutation (gv2 ++ l2) (merge gv2 gv2)), (Permutation (gv2 ++ l2) (merge gv2 l1)), (Permutation (gv2 ++ l2) (merge l1 l2)), (Permutation (gv2 ++ l2) (merge l1 gv2)), (Permutation (gv2 ++ l2) (merge l1 l1)), (Permutation (gv2 ++ l2) (l2 ++ l2)), (Permutation (gv2 ++ l2) (l2 ++ gv2)), (Permutation (gv2 ++ l2) (l2 ++ l1))
(Permutation (gv2 ++ l2) (gv2 ++ l1)), (Permutation (gv2 ++ l2) (l1 ++ l2)), (Permutation (gv2 ++ l2) (l1 ++ gv2)), (Permutation (gv2 ++ l2) (l1 ++ l1)), (Permutation (gv2 ++ l2) []), (Permutation (gv2 ++ gv2) l2), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) l1), (Permutation (gv2 ++ gv2) (a0 :: l2)), (Permutation (gv2 ++ gv2) (a0 :: gv2))
(Permutation (gv2 ++ gv2) (a :: l2)), (Permutation (gv2 ++ gv2) (a :: gv2)), (Permutation (gv2 ++ gv2) (a :: l1)), (Permutation (gv2 ++ gv2) (b :: l2)), (Permutation (gv2 ++ gv2) (b :: gv2)), (Permutation (gv2 ++ gv2) (b :: l1)), (Permutation (gv2 ++ gv2) (merge l2 l2)), (Permutation (gv2 ++ gv2) (merge l2 gv2)), (Permutation (gv2 ++ gv2) (merge l2 l1)), (Permutation (gv2 ++ gv2) (merge gv2 l2))
(Permutation (gv2 ++ gv2) (merge gv2 l1)), (Permutation (gv2 ++ gv2) (merge l1 l2)), (Permutation (gv2 ++ gv2) (merge l1 gv2)), (Permutation (gv2 ++ gv2) (merge l1 l1)), (Permutation (gv2 ++ gv2) (l2 ++ l2)), (Permutation (gv2 ++ gv2) (l2 ++ gv2)), (Permutation (gv2 ++ gv2) (l2 ++ l1)), (Permutation (gv2 ++ gv2) (gv2 ++ l2)), (Permutation (gv2 ++ gv2) (gv2 ++ l1)), (Permutation (gv2 ++ gv2) (l1 ++ l2))
(Permutation (gv2 ++ gv2) (l1 ++ l1)), (Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ l1) l2), (Permutation (gv2 ++ l1) gv2), (Permutation (gv2 ++ l1) l1), (Permutation (gv2 ++ l1) (a0 :: l2)), (Permutation (gv2 ++ l1) (a0 :: gv2)), (Permutation (gv2 ++ l1) (a0 :: l1)), (Permutation (gv2 ++ l1) (a :: l2)), (Permutation (gv2 ++ l1) (a :: gv2))
(Permutation (gv2 ++ l1) (b :: l2)), (Permutation (gv2 ++ l1) (b :: gv2)), (Permutation (gv2 ++ l1) (b :: l1)), (Permutation (gv2 ++ l1) (merge l2 l2)), (Permutation (gv2 ++ l1) (merge l2 gv2)), (Permutation (gv2 ++ l1) (merge l2 l1)), (Permutation (gv2 ++ l1) (merge gv2 l2)), (Permutation (gv2 ++ l1) (merge gv2 gv2)), (Permutation (gv2 ++ l1) (merge gv2 l1)), (Permutation (gv2 ++ l1) (merge l1 l2))
(Permutation (gv2 ++ l1) (merge l1 l1)), (Permutation (gv2 ++ l1) (l2 ++ l2)), (Permutation (gv2 ++ l1) (l2 ++ gv2)), (Permutation (gv2 ++ l1) (l2 ++ l1)), (Permutation (gv2 ++ l1) (gv2 ++ l2)), (Permutation (gv2 ++ l1) (gv2 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l2)), (Permutation (gv2 ++ l1) (l1 ++ gv2)), (Permutation (gv2 ++ l1) (l1 ++ l1)), (Permutation (gv2 ++ l1) [])
(Permutation (l1 ++ l2) (a0 :: gv2)), (Permutation (l1 ++ l2) (a :: gv2)), (Permutation (l1 ++ l2) (b :: gv2)), (Permutation (l1 ++ l2) (merge l2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l2)), (Permutation (l1 ++ l2) (merge gv2 gv2)), (Permutation (l1 ++ l2) (merge gv2 l1)), (Permutation (l1 ++ l2) (merge l1 gv2)), (Permutation (l1 ++ l2) (l2 ++ gv2)), (Permutation (l1 ++ l2) (gv2 ++ l2))
(Permutation (l1 ++ l2) (gv2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ gv2)), (Permutation (l1 ++ gv2) l2), (Permutation (l1 ++ gv2) gv2), (Permutation (l1 ++ gv2) l1), (Permutation (l1 ++ gv2) (a0 :: l2)), (Permutation (l1 ++ gv2) (a0 :: gv2)), (Permutation (l1 ++ gv2) (a0 :: l1)), (Permutation (l1 ++ gv2) (a :: l2)), (Permutation (l1 ++ gv2) (a :: gv2))
(Permutation (l1 ++ gv2) (b :: l2)), (Permutation (l1 ++ gv2) (b :: gv2)), (Permutation (l1 ++ gv2) (b :: l1)), (Permutation (l1 ++ gv2) (merge l2 l2)), (Permutation (l1 ++ gv2) (merge l2 gv2)), (Permutation (l1 ++ gv2) (merge l2 l1)), (Permutation (l1 ++ gv2) (merge gv2 l2)), (Permutation (l1 ++ gv2) (merge gv2 gv2)), (Permutation (l1 ++ gv2) (merge gv2 l1)), (Permutation (l1 ++ gv2) (merge l1 l2))
(Permutation (l1 ++ gv2) (merge l1 l1)), (Permutation (l1 ++ gv2) (l2 ++ l2)), (Permutation (l1 ++ gv2) (l2 ++ gv2)), (Permutation (l1 ++ gv2) (l2 ++ l1)), (Permutation (l1 ++ gv2) (gv2 ++ l2)), (Permutation (l1 ++ gv2) (gv2 ++ gv2)), (Permutation (l1 ++ gv2) (gv2 ++ l1)), (Permutation (l1 ++ gv2) (l1 ++ l2)), (Permutation (l1 ++ gv2) (l1 ++ l1)), (Permutation (l1 ++ gv2) [])
(Permutation (l1 ++ l1) (a0 :: gv2)), (Permutation (l1 ++ l1) (a :: gv2)), (Permutation (l1 ++ l1) (b :: gv2)), (Permutation (l1 ++ l1) (merge l2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l2)), (Permutation (l1 ++ l1) (merge gv2 gv2)), (Permutation (l1 ++ l1) (merge gv2 l1)), (Permutation (l1 ++ l1) (merge l1 gv2)), (Permutation (l1 ++ l1) (l2 ++ gv2)), (Permutation (l1 ++ l1) (gv2 ++ l2))
(Permutation (l1 ++ l1) (gv2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ gv2)), (Permutation [] gv2), (Permutation [] (a0 :: gv2)), (Permutation [] (a :: gv2)), (Permutation [] (b :: gv2)), (Permutation [] (merge l2 gv2)), (Permutation [] (merge gv2 l2)), (Permutation [] (merge gv2 gv2)), (Permutation [] (merge gv2 l1))
(Permutation [] (l2 ++ gv2)), (Permutation [] (gv2 ++ l2)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ l1)), (Permutation [] (l1 ++ gv2)), (In a0 gv2), (In a0 (a0 :: gv2)), (In a0 (a :: gv2)), (In a0 (b :: gv2)), (In a0 (merge l2 gv2))
(In a0 (merge gv2 gv2)), (In a0 (merge gv2 l1)), (In a0 (merge l1 gv2)), (In a0 (l2 ++ gv2)), (In a0 (gv2 ++ l2)), (In a0 (gv2 ++ gv2)), (In a0 (gv2 ++ l1)), (In a0 (l1 ++ gv2)), (In a gv2), (In a (a0 :: gv2))
(In a (b :: gv2)), (In a (merge l2 gv2)), (In a (merge gv2 l2)), (In a (merge gv2 gv2)), (In a (merge gv2 l1)), (In a (merge l1 gv2)), (In a (l2 ++ gv2)), (In a (gv2 ++ l2)), (In a (gv2 ++ gv2)), (In a (gv2 ++ l1))
(In b gv2), (In b (a0 :: gv2)), (In b (a :: gv2)), (In b (b :: gv2)), (In b (merge l2 gv2)), (In b (merge gv2 l2)), (In b (merge gv2 gv2)), (In b (merge gv2 l1)), (In b (merge l1 gv2)), (In b (l2 ++ gv2))
(In b (gv2 ++ gv2)), (In b (gv2 ++ l1)), (In b (l1 ++ gv2)), (In (length l2) gv2), (In (length l2) (a0 :: gv2)), (In (length l2) (a :: gv2)), (In (length l2) (b :: gv2)), (In (length l2) (merge l2 gv2)), (In (length l2) (merge gv2 l2)), (In (length l2) (merge gv2 gv2))
(In (length l2) (merge l1 gv2)), (In (length l2) (l2 ++ gv2)), (In (length l2) (gv2 ++ l2)), (In (length l2) (gv2 ++ gv2)), (In (length l2) (gv2 ++ l1)), (In (length l2) (l1 ++ gv2)), (In (length gv2) l2), (In (length gv2) gv2), (In (length gv2) l1), (In (length gv2) (a0 :: l2))
(In (length gv2) (a0 :: l1)), (In (length gv2) (a :: l2)), (In (length gv2) (a :: gv2)), (In (length gv2) (a :: l1)), (In (length gv2) (b :: l2)), (In (length gv2) (b :: gv2)), (In (length gv2) (b :: l1)), (In (length gv2) (merge l2 l2)), (In (length gv2) (merge l2 gv2)), (In (length gv2) (merge l2 l1))
(In (length gv2) (merge gv2 gv2)), (In (length gv2) (merge gv2 l1)), (In (length gv2) (merge l1 l2)), (In (length gv2) (merge l1 gv2)), (In (length gv2) (merge l1 l1)), (In (length gv2) (l2 ++ l2)), (In (length gv2) (l2 ++ gv2)), (In (length gv2) (l2 ++ l1)), (In (length gv2) (gv2 ++ l2)), (In (length gv2) (gv2 ++ gv2))
(In (length gv2) (l1 ++ l2)), (In (length gv2) (l1 ++ gv2)), (In (length gv2) (l1 ++ l1)), (In (length l1) gv2), (In (length l1) (a0 :: gv2)), (In (length l1) (a :: gv2)), (In (length l1) (b :: gv2)), (In (length l1) (merge l2 gv2)), (In (length l1) (merge gv2 l2)), (In (length l1) (merge gv2 gv2))
(In (length l1) (merge l1 gv2)), (In (length l1) (l2 ++ gv2)), (In (length l1) (gv2 ++ l2)), (In (length l1) (gv2 ++ gv2)), (In (length l1) (gv2 ++ l1)), (In (length l1) (l1 ++ gv2)), (a0 < length gv2), (a < length gv2), (b < length gv2), (length l2 < length gv2)
(length gv2 < a), (length gv2 < b), (length gv2 < length l2), (length gv2 < length l1), (length l1 < length gv2), (a0 <= length gv2), (a <= length gv2), (b <= length gv2), (length l2 <= length gv2), (length gv2 <= a0)
(length gv2 <= b), (length gv2 <= length l2), (length gv2 <= length l1), (length l1 <= length gv2), (merge l2 l2 = gv2), (merge l2 l2 = l2 ++ gv2), (merge l2 l2 = gv2 ++ l2), (merge l2 l2 = gv2 ++ gv2), (merge l2 l2 = gv2 ++ l1), (merge l2 l2 = l1 ++ gv2)
(merge l2 gv2 = gv2), (merge l2 gv2 = l1), (merge l2 gv2 = l2 ++ l2), (merge l2 gv2 = l2 ++ gv2), (merge l2 gv2 = l2 ++ l1), (merge l2 gv2 = gv2 ++ l2), (merge l2 gv2 = gv2 ++ gv2), (merge l2 gv2 = gv2 ++ l1), (merge l2 gv2 = l1 ++ l2), (merge l2 gv2 = l1 ++ gv2)
(merge l2 l1 = gv2), (merge l2 l1 = l2 ++ gv2), (merge l2 l1 = gv2 ++ l2), (merge l2 l1 = gv2 ++ gv2), (merge l2 l1 = gv2 ++ l1), (merge l2 l1 = l1 ++ gv2), (merge gv2 l2 = l2), (merge gv2 l2 = gv2), (merge gv2 l2 = l1), (merge gv2 l2 = l2 ++ l2)
(merge gv2 l2 = l2 ++ l1), (merge gv2 l2 = gv2 ++ l2), (merge gv2 l2 = gv2 ++ gv2), (merge gv2 l2 = gv2 ++ l1), (merge gv2 l2 = l1 ++ l2), (merge gv2 l2 = l1 ++ gv2), (merge gv2 l2 = l1 ++ l1), (merge gv2 gv2 = l2), (merge gv2 gv2 = gv2), (merge gv2 gv2 = l1)
(merge gv2 gv2 = l2 ++ gv2), (merge gv2 gv2 = l2 ++ l1), (merge gv2 gv2 = gv2 ++ l2), (merge gv2 gv2 = gv2 ++ gv2), (merge gv2 gv2 = gv2 ++ l1), (merge gv2 gv2 = l1 ++ l2), (merge gv2 gv2 = l1 ++ gv2), (merge gv2 gv2 = l1 ++ l1), (merge gv2 l1 = l2), (merge gv2 l1 = gv2)
(merge gv2 l1 = l2 ++ l2), (merge gv2 l1 = l2 ++ gv2), (merge gv2 l1 = l2 ++ l1), (merge gv2 l1 = gv2 ++ l2), (merge gv2 l1 = gv2 ++ gv2), (merge gv2 l1 = gv2 ++ l1), (merge gv2 l1 = l1 ++ l2), (merge gv2 l1 = l1 ++ gv2), (merge gv2 l1 = l1 ++ l1), (merge l1 l2 = gv2)
(merge l1 l2 = gv2 ++ l2), (merge l1 l2 = gv2 ++ gv2), (merge l1 l2 = gv2 ++ l1), (merge l1 l2 = l1 ++ gv2), (merge l1 gv2 = l2), (merge l1 gv2 = gv2), (merge l1 gv2 = l1), (merge l1 gv2 = l2 ++ l2), (merge l1 gv2 = l2 ++ gv2), (merge l1 gv2 = l2 ++ l1)
(merge l1 gv2 = gv2 ++ gv2), (merge l1 gv2 = gv2 ++ l1), (merge l1 gv2 = l1 ++ l2), (merge l1 gv2 = l1 ++ gv2), (merge l1 gv2 = l1 ++ l1), (merge l1 l1 = gv2), (merge l1 l1 = l2 ++ gv2), (merge l1 l1 = gv2 ++ l2), (merge l1 l1 = gv2 ++ gv2), (merge l1 l1 = gv2 ++ l1)
(l2 ++ l2 = gv2), (l2 ++ gv2 = l2), (l2 ++ gv2 = gv2), (l2 ++ gv2 = l1), (l2 ++ l1 = gv2), (gv2 ++ l2 = l2), (gv2 ++ l2 = gv2), (gv2 ++ l2 = l1), (gv2 ++ gv2 = l2), (gv2 ++ gv2 = gv2)
(gv2 ++ l1 = l2), (gv2 ++ l1 = gv2), (gv2 ++ l1 = l1), (l1 ++ l2 = gv2), (l1 ++ gv2 = l2), (l1 ++ gv2 = gv2), (l1 ++ gv2 = l1), (l1 ++ l1 = gv2), (length gv2 = a0), (length gv2 = a)

Label: 2 (7)
(false = sorted_bool gv1), (true = sorted_bool gv1), (a0 <=* gv1), (a0 <=* a0 :: gv1), (a0 <=* b :: gv1), (a0 <=* merge l2 gv1), (a0 <=* merge gv1 l2), (a0 <=* merge gv1 gv1), (a0 <=* l2 ++ gv1), (a0 <=* gv1 ++ l2)
(b <=* gv1), (b <=* a0 :: gv1), (b <=* b :: gv1), (b <=* merge l2 gv1), (b <=* merge gv1 l2), (b <=* merge gv1 gv1), (b <=* l2 ++ gv1), (b <=* gv1 ++ l2), (b <=* gv1 ++ gv1), (length l2 <=* gv1)
(length l2 <=* b :: gv1), (length l2 <=* merge l2 gv1), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv1), (length l2 <=* l2 ++ gv1), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ gv1), (length gv1 <=* l2), (length gv1 <=* gv1), (length gv1 <=* a0 :: l2)
(length gv1 <=* b :: l2), (length gv1 <=* b :: gv1), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 gv1), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv1)
(sorted gv1), (sorted (a0 :: gv1)), (sorted (b :: gv1)), (sorted (merge l2 gv1)), (sorted (merge gv1 l2)), (sorted (merge gv1 gv1)), (sorted (l2 ++ gv1)), (sorted (gv1 ++ l2)), (sorted (gv1 ++ gv1)), (Permutation l2 gv1)
(Permutation l2 (b :: gv1)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv1)), (Permutation gv1 l2), (Permutation gv1 (a0 :: l2)), (Permutation gv1 (a0 :: gv1))
(Permutation gv1 (b :: gv1)), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 [])
(Permutation (a0 :: l2) (a0 :: gv1)), (Permutation (a0 :: l2) (b :: gv1)), (Permutation (a0 :: l2) (merge l2 gv1)), (Permutation (a0 :: l2) (merge gv1 l2)), (Permutation (a0 :: l2) (merge gv1 gv1)), (Permutation (a0 :: l2) (l2 ++ gv1)), (Permutation (a0 :: l2) (gv1 ++ l2)), (Permutation (a0 :: l2) (gv1 ++ gv1)), (Permutation (a0 :: gv1) l2), (Permutation (a0 :: gv1) gv1)
(Permutation (a0 :: gv1) (b :: l2)), (Permutation (a0 :: gv1) (b :: gv1)), (Permutation (a0 :: gv1) (merge l2 l2)), (Permutation (a0 :: gv1) (merge l2 gv1)), (Permutation (a0 :: gv1) (merge gv1 l2)), (Permutation (a0 :: gv1) (merge gv1 gv1)), (Permutation (a0 :: gv1) (l2 ++ l2)), (Permutation (a0 :: gv1) (l2 ++ gv1)), (Permutation (a0 :: gv1) (gv1 ++ l2)), (Permutation (a0 :: gv1) (gv1 ++ gv1))
(Permutation (b :: l2) gv1), (Permutation (b :: l2) (a0 :: gv1)), (Permutation (b :: l2) (b :: gv1)), (Permutation (b :: l2) (merge l2 gv1)), (Permutation (b :: l2) (merge gv1 l2)), (Permutation (b :: l2) (merge gv1 gv1)), (Permutation (b :: l2) (l2 ++ gv1)), (Permutation (b :: l2) (gv1 ++ l2)), (Permutation (b :: l2) (gv1 ++ gv1)), (Permutation (b :: gv1) l2)
(Permutation (b :: gv1) (a0 :: l2)), (Permutation (b :: gv1) (a0 :: gv1)), (Permutation (b :: gv1) (b :: l2)), (Permutation (b :: gv1) (merge l2 l2)), (Permutation (b :: gv1) (merge l2 gv1)), (Permutation (b :: gv1) (merge gv1 l2)), (Permutation (b :: gv1) (merge gv1 gv1)), (Permutation (b :: gv1) (l2 ++ l2)), (Permutation (b :: gv1) (l2 ++ gv1)), (Permutation (b :: gv1) (gv1 ++ l2))
(Permutation (b :: gv1) []), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) (a0 :: gv1)), (Permutation (merge l2 l2) (b :: gv1)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv1))
(Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (a0 :: l2)), (Permutation (merge l2 gv1) (a0 :: gv1)), (Permutation (merge l2 gv1) (b :: l2)), (Permutation (merge l2 gv1) (b :: gv1)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge gv1 l2)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv1))
(Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (a0 :: l2)), (Permutation (merge gv1 l2) (a0 :: gv1)), (Permutation (merge gv1 l2) (b :: l2)), (Permutation (merge gv1 l2) (b :: gv1)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 gv1))
(Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) (a0 :: l2)), (Permutation (merge gv1 gv1) (a0 :: gv1)), (Permutation (merge gv1 gv1) (b :: l2))
(Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv1)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (a0 :: gv1))
(Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) (a0 :: l2)), (Permutation (l2 ++ gv1) (a0 :: gv1))
(Permutation (l2 ++ gv1) (b :: gv1)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv1)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (gv1 ++ l2) l2)
(Permutation (gv1 ++ l2) (a0 :: l2)), (Permutation (gv1 ++ l2) (a0 :: gv1)), (Permutation (gv1 ++ l2) (b :: l2)), (Permutation (gv1 ++ l2) (b :: gv1)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv1)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv1))
(Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (a0 :: l2)), (Permutation (gv1 ++ gv1) (a0 :: gv1)), (Permutation (gv1 ++ gv1) (b :: l2)), (Permutation (gv1 ++ gv1) (b :: gv1)), (Permutation (gv1 ++ gv1) (merge l2 l2)), (Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 l2))
(Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (a0 :: gv1)), (Permutation [] (b :: gv1)), (Permutation [] (merge l2 gv1)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv1))
(Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv1)), (In a0 gv1), (In a0 (a0 :: gv1)), (In a0 (b :: gv1)), (In a0 (merge l2 gv1)), (In a0 (merge gv1 l2)), (In a0 (merge gv1 gv1)), (In a0 (l2 ++ gv1)), (In a0 (gv1 ++ l2))
(In b gv1), (In b (a0 :: gv1)), (In b (b :: gv1)), (In b (merge l2 gv1)), (In b (merge gv1 l2)), (In b (merge gv1 gv1)), (In b (l2 ++ gv1)), (In b (gv1 ++ l2)), (In b (gv1 ++ gv1)), (In (length l2) gv1)
(In (length l2) (b :: gv1)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv1)), (In (length l2) (l2 ++ gv1)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv1)), (In (length gv1) l2), (In (length gv1) gv1), (In (length gv1) (a0 :: l2))
(In (length gv1) (b :: l2)), (In (length gv1) (b :: gv1)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv1))
(b < length gv1), (length l2 < length gv1), (length gv1 < a0), (length gv1 < b), (length gv1 < length l2), (a0 <= length gv1), (b <= length gv1), (length l2 <= length gv1), (length gv1 <= a0), (length gv1 <= b)
(merge l2 l2 = gv1), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ gv1), (merge l2 gv1 = l2), (merge l2 gv1 = gv1), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ gv1)
(merge gv1 l2 = gv1), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 gv1 = l2), (merge gv1 gv1 = gv1), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = gv1 ++ l2)
(l2 ++ l2 = gv1), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv1), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv1), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv1), (length gv1 = a0), (length gv1 = b)

Label: 2 (8)
(false = sorted_bool gv1), (true = sorted_bool gv1), (a0 <=* gv1), (a0 <=* a0 :: gv1), (a0 <=* b :: gv1), (a0 <=* merge l2 gv1), (a0 <=* merge gv1 l2), (a0 <=* merge gv1 gv1), (a0 <=* l2 ++ gv1), (a0 <=* gv1 ++ l2)
(b <=* gv1), (b <=* a0 :: gv1), (b <=* b :: gv1), (b <=* merge l2 gv1), (b <=* merge gv1 l2), (b <=* merge gv1 gv1), (b <=* l2 ++ gv1), (b <=* gv1 ++ l2), (b <=* gv1 ++ gv1), (length l2 <=* gv1)
(length l2 <=* b :: gv1), (length l2 <=* merge l2 gv1), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv1), (length l2 <=* l2 ++ gv1), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ gv1), (length gv1 <=* l2), (length gv1 <=* gv1), (length gv1 <=* a0 :: l2)
(length gv1 <=* b :: l2), (length gv1 <=* b :: gv1), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 gv1), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv1)
(sorted gv1), (sorted (a0 :: gv1)), (sorted (b :: gv1)), (sorted (merge l2 gv1)), (sorted (merge gv1 l2)), (sorted (merge gv1 gv1)), (sorted (l2 ++ gv1)), (sorted (gv1 ++ l2)), (sorted (gv1 ++ gv1)), (Permutation l2 gv1)
(Permutation l2 (b :: gv1)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv1)), (Permutation gv1 l2), (Permutation gv1 (a0 :: l2)), (Permutation gv1 (a0 :: gv1))
(Permutation gv1 (b :: gv1)), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 [])
(Permutation (a0 :: l2) (a0 :: gv1)), (Permutation (a0 :: l2) (b :: gv1)), (Permutation (a0 :: l2) (merge l2 gv1)), (Permutation (a0 :: l2) (merge gv1 l2)), (Permutation (a0 :: l2) (merge gv1 gv1)), (Permutation (a0 :: l2) (l2 ++ gv1)), (Permutation (a0 :: l2) (gv1 ++ l2)), (Permutation (a0 :: l2) (gv1 ++ gv1)), (Permutation (a0 :: gv1) l2), (Permutation (a0 :: gv1) gv1)
(Permutation (a0 :: gv1) (b :: l2)), (Permutation (a0 :: gv1) (b :: gv1)), (Permutation (a0 :: gv1) (merge l2 l2)), (Permutation (a0 :: gv1) (merge l2 gv1)), (Permutation (a0 :: gv1) (merge gv1 l2)), (Permutation (a0 :: gv1) (merge gv1 gv1)), (Permutation (a0 :: gv1) (l2 ++ l2)), (Permutation (a0 :: gv1) (l2 ++ gv1)), (Permutation (a0 :: gv1) (gv1 ++ l2)), (Permutation (a0 :: gv1) (gv1 ++ gv1))
(Permutation (b :: l2) gv1), (Permutation (b :: l2) (a0 :: gv1)), (Permutation (b :: l2) (b :: gv1)), (Permutation (b :: l2) (merge l2 gv1)), (Permutation (b :: l2) (merge gv1 l2)), (Permutation (b :: l2) (merge gv1 gv1)), (Permutation (b :: l2) (l2 ++ gv1)), (Permutation (b :: l2) (gv1 ++ l2)), (Permutation (b :: l2) (gv1 ++ gv1)), (Permutation (b :: gv1) l2)
(Permutation (b :: gv1) (a0 :: l2)), (Permutation (b :: gv1) (a0 :: gv1)), (Permutation (b :: gv1) (b :: l2)), (Permutation (b :: gv1) (merge l2 l2)), (Permutation (b :: gv1) (merge l2 gv1)), (Permutation (b :: gv1) (merge gv1 l2)), (Permutation (b :: gv1) (merge gv1 gv1)), (Permutation (b :: gv1) (l2 ++ l2)), (Permutation (b :: gv1) (l2 ++ gv1)), (Permutation (b :: gv1) (gv1 ++ l2))
(Permutation (b :: gv1) []), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) (a0 :: gv1)), (Permutation (merge l2 l2) (b :: gv1)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv1))
(Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (a0 :: l2)), (Permutation (merge l2 gv1) (a0 :: gv1)), (Permutation (merge l2 gv1) (b :: l2)), (Permutation (merge l2 gv1) (b :: gv1)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge gv1 l2)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv1))
(Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (a0 :: l2)), (Permutation (merge gv1 l2) (a0 :: gv1)), (Permutation (merge gv1 l2) (b :: l2)), (Permutation (merge gv1 l2) (b :: gv1)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 gv1))
(Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) (a0 :: l2)), (Permutation (merge gv1 gv1) (a0 :: gv1)), (Permutation (merge gv1 gv1) (b :: l2))
(Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv1)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (a0 :: gv1))
(Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) (a0 :: l2)), (Permutation (l2 ++ gv1) (a0 :: gv1))
(Permutation (l2 ++ gv1) (b :: gv1)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv1)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (gv1 ++ l2) l2)
(Permutation (gv1 ++ l2) (a0 :: l2)), (Permutation (gv1 ++ l2) (a0 :: gv1)), (Permutation (gv1 ++ l2) (b :: l2)), (Permutation (gv1 ++ l2) (b :: gv1)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv1)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv1))
(Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (a0 :: l2)), (Permutation (gv1 ++ gv1) (a0 :: gv1)), (Permutation (gv1 ++ gv1) (b :: l2)), (Permutation (gv1 ++ gv1) (b :: gv1)), (Permutation (gv1 ++ gv1) (merge l2 l2)), (Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 l2))
(Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (a0 :: gv1)), (Permutation [] (b :: gv1)), (Permutation [] (merge l2 gv1)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv1))
(Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv1)), (In a0 gv1), (In a0 (a0 :: gv1)), (In a0 (b :: gv1)), (In a0 (merge l2 gv1)), (In a0 (merge gv1 l2)), (In a0 (merge gv1 gv1)), (In a0 (l2 ++ gv1)), (In a0 (gv1 ++ l2))
(In b gv1), (In b (a0 :: gv1)), (In b (b :: gv1)), (In b (merge l2 gv1)), (In b (merge gv1 l2)), (In b (merge gv1 gv1)), (In b (l2 ++ gv1)), (In b (gv1 ++ l2)), (In b (gv1 ++ gv1)), (In (length l2) gv1)
(In (length l2) (b :: gv1)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv1)), (In (length l2) (l2 ++ gv1)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv1)), (In (length gv1) l2), (In (length gv1) gv1), (In (length gv1) (a0 :: l2))
(In (length gv1) (b :: l2)), (In (length gv1) (b :: gv1)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv1))
(b < length gv1), (length l2 < length gv1), (length gv1 < a0), (length gv1 < b), (length gv1 < length l2), (a0 <= length gv1), (b <= length gv1), (length l2 <= length gv1), (length gv1 <= a0), (length gv1 <= b)
(merge l2 l2 = gv1), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ gv1), (merge l2 gv1 = l2), (merge l2 gv1 = gv1), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ gv1)
(merge gv1 l2 = gv1), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 gv1 = l2), (merge gv1 gv1 = gv1), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = gv1 ++ l2)
(l2 ++ l2 = gv1), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv1), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv1), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv1), (length gv1 = a0), (length gv1 = b)

Label: 2 (9)
(false = sorted_bool gv1), (true = sorted_bool gv1), (a0 <=* gv1), (a0 <=* a0 :: gv1), (a0 <=* b :: gv1), (a0 <=* merge l2 gv1), (a0 <=* merge gv1 l2), (a0 <=* merge gv1 gv1), (a0 <=* l2 ++ gv1), (a0 <=* gv1 ++ l2)
(b <=* gv1), (b <=* a0 :: gv1), (b <=* b :: gv1), (b <=* merge l2 gv1), (b <=* merge gv1 l2), (b <=* merge gv1 gv1), (b <=* l2 ++ gv1), (b <=* gv1 ++ l2), (b <=* gv1 ++ gv1), (length l2 <=* gv1)
(length l2 <=* b :: gv1), (length l2 <=* merge l2 gv1), (length l2 <=* merge gv1 l2), (length l2 <=* merge gv1 gv1), (length l2 <=* l2 ++ gv1), (length l2 <=* gv1 ++ l2), (length l2 <=* gv1 ++ gv1), (length gv1 <=* l2), (length gv1 <=* gv1), (length gv1 <=* a0 :: l2)
(length gv1 <=* b :: l2), (length gv1 <=* b :: gv1), (length gv1 <=* merge l2 l2), (length gv1 <=* merge l2 gv1), (length gv1 <=* merge gv1 l2), (length gv1 <=* merge gv1 gv1), (length gv1 <=* l2 ++ l2), (length gv1 <=* l2 ++ gv1), (length gv1 <=* gv1 ++ l2), (length gv1 <=* gv1 ++ gv1)
(sorted gv1), (sorted (a0 :: gv1)), (sorted (b :: gv1)), (sorted (merge l2 gv1)), (sorted (merge gv1 l2)), (sorted (merge gv1 gv1)), (sorted (l2 ++ gv1)), (sorted (gv1 ++ l2)), (sorted (gv1 ++ gv1)), (Permutation l2 gv1)
(Permutation l2 (b :: gv1)), (Permutation l2 (merge l2 gv1)), (Permutation l2 (merge gv1 l2)), (Permutation l2 (merge gv1 gv1)), (Permutation l2 (l2 ++ gv1)), (Permutation l2 (gv1 ++ l2)), (Permutation l2 (gv1 ++ gv1)), (Permutation gv1 l2), (Permutation gv1 (a0 :: l2)), (Permutation gv1 (a0 :: gv1))
(Permutation gv1 (b :: gv1)), (Permutation gv1 (merge l2 l2)), (Permutation gv1 (merge l2 gv1)), (Permutation gv1 (merge gv1 l2)), (Permutation gv1 (merge gv1 gv1)), (Permutation gv1 (l2 ++ l2)), (Permutation gv1 (l2 ++ gv1)), (Permutation gv1 (gv1 ++ l2)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 [])
(Permutation (a0 :: l2) (a0 :: gv1)), (Permutation (a0 :: l2) (b :: gv1)), (Permutation (a0 :: l2) (merge l2 gv1)), (Permutation (a0 :: l2) (merge gv1 l2)), (Permutation (a0 :: l2) (merge gv1 gv1)), (Permutation (a0 :: l2) (l2 ++ gv1)), (Permutation (a0 :: l2) (gv1 ++ l2)), (Permutation (a0 :: l2) (gv1 ++ gv1)), (Permutation (a0 :: gv1) l2), (Permutation (a0 :: gv1) gv1)
(Permutation (a0 :: gv1) (b :: l2)), (Permutation (a0 :: gv1) (b :: gv1)), (Permutation (a0 :: gv1) (merge l2 l2)), (Permutation (a0 :: gv1) (merge l2 gv1)), (Permutation (a0 :: gv1) (merge gv1 l2)), (Permutation (a0 :: gv1) (merge gv1 gv1)), (Permutation (a0 :: gv1) (l2 ++ l2)), (Permutation (a0 :: gv1) (l2 ++ gv1)), (Permutation (a0 :: gv1) (gv1 ++ l2)), (Permutation (a0 :: gv1) (gv1 ++ gv1))
(Permutation (b :: l2) gv1), (Permutation (b :: l2) (a0 :: gv1)), (Permutation (b :: l2) (b :: gv1)), (Permutation (b :: l2) (merge l2 gv1)), (Permutation (b :: l2) (merge gv1 l2)), (Permutation (b :: l2) (merge gv1 gv1)), (Permutation (b :: l2) (l2 ++ gv1)), (Permutation (b :: l2) (gv1 ++ l2)), (Permutation (b :: l2) (gv1 ++ gv1)), (Permutation (b :: gv1) l2)
(Permutation (b :: gv1) (a0 :: l2)), (Permutation (b :: gv1) (a0 :: gv1)), (Permutation (b :: gv1) (b :: l2)), (Permutation (b :: gv1) (merge l2 l2)), (Permutation (b :: gv1) (merge l2 gv1)), (Permutation (b :: gv1) (merge gv1 l2)), (Permutation (b :: gv1) (merge gv1 gv1)), (Permutation (b :: gv1) (l2 ++ l2)), (Permutation (b :: gv1) (l2 ++ gv1)), (Permutation (b :: gv1) (gv1 ++ l2))
(Permutation (b :: gv1) []), (Permutation (merge l2 l2) gv1), (Permutation (merge l2 l2) (a0 :: gv1)), (Permutation (merge l2 l2) (b :: gv1)), (Permutation (merge l2 l2) (merge l2 gv1)), (Permutation (merge l2 l2) (merge gv1 l2)), (Permutation (merge l2 l2) (merge gv1 gv1)), (Permutation (merge l2 l2) (l2 ++ gv1)), (Permutation (merge l2 l2) (gv1 ++ l2)), (Permutation (merge l2 l2) (gv1 ++ gv1))
(Permutation (merge l2 gv1) gv1), (Permutation (merge l2 gv1) (a0 :: l2)), (Permutation (merge l2 gv1) (a0 :: gv1)), (Permutation (merge l2 gv1) (b :: l2)), (Permutation (merge l2 gv1) (b :: gv1)), (Permutation (merge l2 gv1) (merge l2 l2)), (Permutation (merge l2 gv1) (merge gv1 l2)), (Permutation (merge l2 gv1) (merge gv1 gv1)), (Permutation (merge l2 gv1) (l2 ++ l2)), (Permutation (merge l2 gv1) (l2 ++ gv1))
(Permutation (merge l2 gv1) (gv1 ++ gv1)), (Permutation (merge l2 gv1) []), (Permutation (merge gv1 l2) l2), (Permutation (merge gv1 l2) gv1), (Permutation (merge gv1 l2) (a0 :: l2)), (Permutation (merge gv1 l2) (a0 :: gv1)), (Permutation (merge gv1 l2) (b :: l2)), (Permutation (merge gv1 l2) (b :: gv1)), (Permutation (merge gv1 l2) (merge l2 l2)), (Permutation (merge gv1 l2) (merge l2 gv1))
(Permutation (merge gv1 l2) (l2 ++ l2)), (Permutation (merge gv1 l2) (l2 ++ gv1)), (Permutation (merge gv1 l2) (gv1 ++ l2)), (Permutation (merge gv1 l2) (gv1 ++ gv1)), (Permutation (merge gv1 l2) []), (Permutation (merge gv1 gv1) l2), (Permutation (merge gv1 gv1) gv1), (Permutation (merge gv1 gv1) (a0 :: l2)), (Permutation (merge gv1 gv1) (a0 :: gv1)), (Permutation (merge gv1 gv1) (b :: l2))
(Permutation (merge gv1 gv1) (merge l2 l2)), (Permutation (merge gv1 gv1) (merge l2 gv1)), (Permutation (merge gv1 gv1) (merge gv1 l2)), (Permutation (merge gv1 gv1) (l2 ++ l2)), (Permutation (merge gv1 gv1) (l2 ++ gv1)), (Permutation (merge gv1 gv1) (gv1 ++ l2)), (Permutation (merge gv1 gv1) (gv1 ++ gv1)), (Permutation (merge gv1 gv1) []), (Permutation (l2 ++ l2) gv1), (Permutation (l2 ++ l2) (a0 :: gv1))
(Permutation (l2 ++ l2) (merge l2 gv1)), (Permutation (l2 ++ l2) (merge gv1 l2)), (Permutation (l2 ++ l2) (merge gv1 gv1)), (Permutation (l2 ++ l2) (l2 ++ gv1)), (Permutation (l2 ++ l2) (gv1 ++ l2)), (Permutation (l2 ++ l2) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) l2), (Permutation (l2 ++ gv1) gv1), (Permutation (l2 ++ gv1) (a0 :: l2)), (Permutation (l2 ++ gv1) (a0 :: gv1))
(Permutation (l2 ++ gv1) (b :: gv1)), (Permutation (l2 ++ gv1) (merge l2 l2)), (Permutation (l2 ++ gv1) (merge l2 gv1)), (Permutation (l2 ++ gv1) (merge gv1 l2)), (Permutation (l2 ++ gv1) (merge gv1 gv1)), (Permutation (l2 ++ gv1) (l2 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ l2)), (Permutation (l2 ++ gv1) (gv1 ++ gv1)), (Permutation (l2 ++ gv1) []), (Permutation (gv1 ++ l2) l2)
(Permutation (gv1 ++ l2) (a0 :: l2)), (Permutation (gv1 ++ l2) (a0 :: gv1)), (Permutation (gv1 ++ l2) (b :: l2)), (Permutation (gv1 ++ l2) (b :: gv1)), (Permutation (gv1 ++ l2) (merge l2 l2)), (Permutation (gv1 ++ l2) (merge l2 gv1)), (Permutation (gv1 ++ l2) (merge gv1 l2)), (Permutation (gv1 ++ l2) (merge gv1 gv1)), (Permutation (gv1 ++ l2) (l2 ++ l2)), (Permutation (gv1 ++ l2) (l2 ++ gv1))
(Permutation (gv1 ++ l2) []), (Permutation (gv1 ++ gv1) l2), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (a0 :: l2)), (Permutation (gv1 ++ gv1) (a0 :: gv1)), (Permutation (gv1 ++ gv1) (b :: l2)), (Permutation (gv1 ++ gv1) (b :: gv1)), (Permutation (gv1 ++ gv1) (merge l2 l2)), (Permutation (gv1 ++ gv1) (merge l2 gv1)), (Permutation (gv1 ++ gv1) (merge gv1 l2))
(Permutation (gv1 ++ gv1) (l2 ++ l2)), (Permutation (gv1 ++ gv1) (l2 ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l2)), (Permutation (gv1 ++ gv1) []), (Permutation [] gv1), (Permutation [] (a0 :: gv1)), (Permutation [] (b :: gv1)), (Permutation [] (merge l2 gv1)), (Permutation [] (merge gv1 l2)), (Permutation [] (merge gv1 gv1))
(Permutation [] (gv1 ++ l2)), (Permutation [] (gv1 ++ gv1)), (In a0 gv1), (In a0 (a0 :: gv1)), (In a0 (b :: gv1)), (In a0 (merge l2 gv1)), (In a0 (merge gv1 l2)), (In a0 (merge gv1 gv1)), (In a0 (l2 ++ gv1)), (In a0 (gv1 ++ l2))
(In b gv1), (In b (a0 :: gv1)), (In b (b :: gv1)), (In b (merge l2 gv1)), (In b (merge gv1 l2)), (In b (merge gv1 gv1)), (In b (l2 ++ gv1)), (In b (gv1 ++ l2)), (In b (gv1 ++ gv1)), (In (length l2) gv1)
(In (length l2) (b :: gv1)), (In (length l2) (merge l2 gv1)), (In (length l2) (merge gv1 l2)), (In (length l2) (merge gv1 gv1)), (In (length l2) (l2 ++ gv1)), (In (length l2) (gv1 ++ l2)), (In (length l2) (gv1 ++ gv1)), (In (length gv1) l2), (In (length gv1) gv1), (In (length gv1) (a0 :: l2))
(In (length gv1) (b :: l2)), (In (length gv1) (b :: gv1)), (In (length gv1) (merge l2 l2)), (In (length gv1) (merge l2 gv1)), (In (length gv1) (merge gv1 l2)), (In (length gv1) (merge gv1 gv1)), (In (length gv1) (l2 ++ l2)), (In (length gv1) (l2 ++ gv1)), (In (length gv1) (gv1 ++ l2)), (In (length gv1) (gv1 ++ gv1))
(b < length gv1), (length l2 < length gv1), (length gv1 < a0), (length gv1 < b), (length gv1 < length l2), (a0 <= length gv1), (b <= length gv1), (length l2 <= length gv1), (length gv1 <= a0), (length gv1 <= b)
(merge l2 l2 = gv1), (merge l2 l2 = l2 ++ gv1), (merge l2 l2 = gv1 ++ l2), (merge l2 l2 = gv1 ++ gv1), (merge l2 gv1 = l2), (merge l2 gv1 = gv1), (merge l2 gv1 = l2 ++ l2), (merge l2 gv1 = l2 ++ gv1), (merge l2 gv1 = gv1 ++ l2), (merge l2 gv1 = gv1 ++ gv1)
(merge gv1 l2 = gv1), (merge gv1 l2 = l2 ++ l2), (merge gv1 l2 = l2 ++ gv1), (merge gv1 l2 = gv1 ++ l2), (merge gv1 l2 = gv1 ++ gv1), (merge gv1 gv1 = l2), (merge gv1 gv1 = gv1), (merge gv1 gv1 = l2 ++ l2), (merge gv1 gv1 = l2 ++ gv1), (merge gv1 gv1 = gv1 ++ l2)
(l2 ++ l2 = gv1), (l2 ++ gv1 = l2), (l2 ++ gv1 = gv1), (gv1 ++ l2 = l2), (gv1 ++ l2 = gv1), (gv1 ++ gv1 = l2), (gv1 ++ gv1 = gv1), (length gv1 = a0), (length gv1 = b)

Label: 3 (10)
(false = sorted_bool l2), (false = sorted_bool l1), (true = sorted_bool l2), (true = sorted_bool l1), (a0 <=* l2), (a0 <=* l1), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1)
(a0 <=* b :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* [])
(a <=* l1), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* b :: l2), (a <=* b :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2)
(a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (b <=* l2), (b <=* l1), (b <=* a0 :: l2), (b <=* a0 :: l1), (b <=* a :: l2)
(b <=* b :: l2), (b <=* b :: l1), (b <=* merge l2 l2), (b <=* merge l2 l1), (b <=* merge l1 l2), (b <=* merge l1 l1), (b <=* l2 ++ l2), (b <=* l2 ++ l1), (b <=* l1 ++ l2), (b <=* l1 ++ l1)
(length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* b :: l2), (length l2 <=* b :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1)
(length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1), (length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1)
(length l1 <=* a :: l1), (length l1 <=* b :: l2), (length l1 <=* b :: l1), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2)
(length l1 <=* []), (sorted l2), (sorted l1), (sorted (a0 :: l2)), (sorted (a0 :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (b :: l2)), (sorted (b :: l1)), (sorted (merge l2 l2))
(sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 l1), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1))
(Permutation l2 (a :: l1)), (Permutation l2 (b :: l2)), (Permutation l2 (b :: l1)), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2))
(Permutation l2 []), (Permutation l1 l2), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (b :: l2)), (Permutation l1 (b :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1))
(Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a :: l2))
(Permutation (a0 :: l2) (b :: l2)), (Permutation (a0 :: l2) (b :: l1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (b :: l2)), (Permutation (a0 :: l1) (b :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (a :: l1))
(Permutation (a :: l2) (b :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) [])
(Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (b :: l2)), (Permutation (a :: l1) (b :: l1)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1))
(Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (b :: l2) l2), (Permutation (b :: l2) l1), (Permutation (b :: l2) (a0 :: l2)), (Permutation (b :: l2) (a0 :: l1)), (Permutation (b :: l2) (a :: l2)), (Permutation (b :: l2) (a :: l1))
(Permutation (b :: l2) (merge l2 l2)), (Permutation (b :: l2) (merge l2 l1)), (Permutation (b :: l2) (merge l1 l2)), (Permutation (b :: l2) (merge l1 l1)), (Permutation (b :: l2) (l2 ++ l2)), (Permutation (b :: l2) (l2 ++ l1)), (Permutation (b :: l2) (l1 ++ l2)), (Permutation (b :: l2) (l1 ++ l1)), (Permutation (b :: l2) []), (Permutation (b :: l1) l2)
(Permutation (b :: l1) (a0 :: l2)), (Permutation (b :: l1) (a0 :: l1)), (Permutation (b :: l1) (a :: l2)), (Permutation (b :: l1) (a :: l1)), (Permutation (b :: l1) (b :: l2)), (Permutation (b :: l1) (merge l2 l2)), (Permutation (b :: l1) (merge l2 l1)), (Permutation (b :: l1) (merge l1 l2)), (Permutation (b :: l1) (merge l1 l1)), (Permutation (b :: l1) (l2 ++ l2))
(Permutation (b :: l1) (l1 ++ l2)), (Permutation (b :: l1) (l1 ++ l1)), (Permutation (b :: l1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (b :: l2))
(Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1)
(Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (b :: l2)), (Permutation (merge l2 l1) (b :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1))
(Permutation (merge l2 l1) (l1 ++ l1)), (Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (b :: l2)), (Permutation (merge l1 l2) (b :: l1))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (b :: l2)), (Permutation (merge l1 l1) (b :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ l2))
(Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (b :: l2)), (Permutation (l2 ++ l2) (b :: l1)), (Permutation (l2 ++ l2) (merge l2 l2))
(Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1))
(Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (b :: l2)), (Permutation (l2 ++ l1) (b :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1))
(Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (b :: l2)), (Permutation (l1 ++ l2) (b :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1))
(Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (a :: l2))
(Permutation (l1 ++ l1) (b :: l2)), (Permutation (l1 ++ l1) (b :: l1)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) [])
(Permutation [] l1), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (b :: l2)), (Permutation [] (b :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2))
(Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 l2), (In a0 l1), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1))
(In a0 (b :: l1)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a l2)
(In a (a0 :: l2)), (In a (a0 :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (b :: l2)), (In a (b :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2)), (In a (merge l1 l1))
(In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In b l2), (In b l1), (In b (a0 :: l2)), (In b (a0 :: l1)), (In b (a :: l2)), (In b (a :: l1)), (In b (b :: l2))
(In b (merge l2 l2)), (In b (merge l2 l1)), (In b (merge l1 l2)), (In b (merge l1 l1)), (In b (l2 ++ l2)), (In b (l2 ++ l1)), (In b (l1 ++ l2)), (In b (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1)
(In (length l2) (a0 :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (b :: l2)), (In (length l2) (b :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2))
(In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (b :: l2)), (In (length l1) (b :: l1))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < a), (a0 < b), (a0 < length l2)
(a < a0), (a < b), (a < length l2), (a < length l1), (b < a0), (b < a), (b < length l2), (b < length l1), (length l2 < a0), (length l2 < a)
(length l2 < length l1), (length l1 < a0), (length l1 < a), (length l1 < b), (length l1 < length l2), (a0 <= a), (a0 <= b), (a0 <= length l2), (a0 <= length l1), (a <= a0)
(a <= length l2), (a <= length l1), (b <= a0), (b <= a), (b <= length l2), (b <= length l1), (length l2 <= a0), (length l2 <= a), (length l2 <= b), (length l2 <= length l1)
(length l1 <= a), (length l1 <= b), (length l1 <= length l2), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1), (l1 ++ l2 = l2)
(l1 ++ l1 = l2), (l1 ++ l1 = l1), (length l2 = a0), (length l2 = a), (length l2 = b), (length l1 = a0), (length l1 = a), (length l1 = b)

Label: 3 (11)
(false = sorted_bool l2), (false = sorted_bool l1), (true = sorted_bool l2), (true = sorted_bool l1), (a0 <=* l2), (a0 <=* l1), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1)
(a0 <=* b :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* [])
(a <=* l1), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* b :: l2), (a <=* b :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2)
(a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (b <=* l2), (b <=* l1), (b <=* a0 :: l2), (b <=* a0 :: l1), (b <=* a :: l2)
(b <=* b :: l2), (b <=* b :: l1), (b <=* merge l2 l2), (b <=* merge l2 l1), (b <=* merge l1 l2), (b <=* merge l1 l1), (b <=* l2 ++ l2), (b <=* l2 ++ l1), (b <=* l1 ++ l2), (b <=* l1 ++ l1)
(length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* b :: l2), (length l2 <=* b :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1)
(length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1), (length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1)
(length l1 <=* a :: l1), (length l1 <=* b :: l2), (length l1 <=* b :: l1), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2)
(length l1 <=* []), (sorted l2), (sorted l1), (sorted (a0 :: l2)), (sorted (a0 :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (b :: l2)), (sorted (b :: l1)), (sorted (merge l2 l2))
(sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 l1), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1))
(Permutation l2 (a :: l1)), (Permutation l2 (b :: l2)), (Permutation l2 (b :: l1)), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2))
(Permutation l2 []), (Permutation l1 l2), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (b :: l2)), (Permutation l1 (b :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1))
(Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a :: l2))
(Permutation (a0 :: l2) (b :: l2)), (Permutation (a0 :: l2) (b :: l1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (b :: l2)), (Permutation (a0 :: l1) (b :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (a :: l1))
(Permutation (a :: l2) (b :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) [])
(Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (b :: l2)), (Permutation (a :: l1) (b :: l1)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1))
(Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (b :: l2) l2), (Permutation (b :: l2) l1), (Permutation (b :: l2) (a0 :: l2)), (Permutation (b :: l2) (a0 :: l1)), (Permutation (b :: l2) (a :: l2)), (Permutation (b :: l2) (a :: l1))
(Permutation (b :: l2) (merge l2 l2)), (Permutation (b :: l2) (merge l2 l1)), (Permutation (b :: l2) (merge l1 l2)), (Permutation (b :: l2) (merge l1 l1)), (Permutation (b :: l2) (l2 ++ l2)), (Permutation (b :: l2) (l2 ++ l1)), (Permutation (b :: l2) (l1 ++ l2)), (Permutation (b :: l2) (l1 ++ l1)), (Permutation (b :: l2) []), (Permutation (b :: l1) l2)
(Permutation (b :: l1) (a0 :: l2)), (Permutation (b :: l1) (a0 :: l1)), (Permutation (b :: l1) (a :: l2)), (Permutation (b :: l1) (a :: l1)), (Permutation (b :: l1) (b :: l2)), (Permutation (b :: l1) (merge l2 l2)), (Permutation (b :: l1) (merge l2 l1)), (Permutation (b :: l1) (merge l1 l2)), (Permutation (b :: l1) (merge l1 l1)), (Permutation (b :: l1) (l2 ++ l2))
(Permutation (b :: l1) (l1 ++ l2)), (Permutation (b :: l1) (l1 ++ l1)), (Permutation (b :: l1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (b :: l2))
(Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1)
(Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (b :: l2)), (Permutation (merge l2 l1) (b :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1))
(Permutation (merge l2 l1) (l1 ++ l1)), (Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (b :: l2)), (Permutation (merge l1 l2) (b :: l1))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (b :: l2)), (Permutation (merge l1 l1) (b :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ l2))
(Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (b :: l2)), (Permutation (l2 ++ l2) (b :: l1)), (Permutation (l2 ++ l2) (merge l2 l2))
(Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1))
(Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (b :: l2)), (Permutation (l2 ++ l1) (b :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1))
(Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (b :: l2)), (Permutation (l1 ++ l2) (b :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1))
(Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (a :: l2))
(Permutation (l1 ++ l1) (b :: l2)), (Permutation (l1 ++ l1) (b :: l1)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) [])
(Permutation [] l1), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (b :: l2)), (Permutation [] (b :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2))
(Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 l2), (In a0 l1), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1))
(In a0 (b :: l1)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a l2)
(In a (a0 :: l2)), (In a (a0 :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (b :: l2)), (In a (b :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2)), (In a (merge l1 l1))
(In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In b l2), (In b l1), (In b (a0 :: l2)), (In b (a0 :: l1)), (In b (a :: l2)), (In b (a :: l1)), (In b (b :: l2))
(In b (merge l2 l2)), (In b (merge l2 l1)), (In b (merge l1 l2)), (In b (merge l1 l1)), (In b (l2 ++ l2)), (In b (l2 ++ l1)), (In b (l1 ++ l2)), (In b (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1)
(In (length l2) (a0 :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (b :: l2)), (In (length l2) (b :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2))
(In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (b :: l2)), (In (length l1) (b :: l1))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < a), (a0 < b), (a0 < length l2)
(a < a0), (a < b), (a < length l2), (a < length l1), (b < a0), (b < a), (b < length l2), (b < length l1), (length l2 < a0), (length l2 < a)
(length l2 < length l1), (length l1 < a0), (length l1 < a), (length l1 < b), (length l1 < length l2), (a0 <= a), (a0 <= b), (a0 <= length l2), (a0 <= length l1), (a <= a0)
(a <= length l2), (a <= length l1), (b <= a0), (b <= a), (b <= length l2), (b <= length l1), (length l2 <= a0), (length l2 <= a), (length l2 <= b), (length l2 <= length l1)
(length l1 <= a), (length l1 <= b), (length l1 <= length l2), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1), (l1 ++ l2 = l2)
(l1 ++ l1 = l2), (l1 ++ l1 = l1), (length l2 = a0), (length l2 = a), (length l2 = b), (length l1 = a0), (length l1 = a), (length l1 = b)

Label: 3 (12)
(false = sorted_bool l2), (false = sorted_bool l1), (true = sorted_bool l2), (true = sorted_bool l1), (a0 <=* l2), (a0 <=* l1), (a0 <=* a0 :: l2), (a0 <=* a0 :: l1), (a0 <=* a :: l2), (a0 <=* a :: l1)
(a0 <=* b :: l1), (a0 <=* merge l2 l2), (a0 <=* merge l2 l1), (a0 <=* merge l1 l2), (a0 <=* merge l1 l1), (a0 <=* l2 ++ l2), (a0 <=* l2 ++ l1), (a0 <=* l1 ++ l2), (a0 <=* l1 ++ l1), (a0 <=* [])
(a <=* l1), (a <=* a0 :: l2), (a <=* a0 :: l1), (a <=* a :: l2), (a <=* a :: l1), (a <=* b :: l2), (a <=* b :: l1), (a <=* merge l2 l2), (a <=* merge l2 l1), (a <=* merge l1 l2)
(a <=* l2 ++ l2), (a <=* l2 ++ l1), (a <=* l1 ++ l2), (a <=* l1 ++ l1), (a <=* []), (b <=* l2), (b <=* l1), (b <=* a0 :: l2), (b <=* a0 :: l1), (b <=* a :: l2)
(b <=* b :: l2), (b <=* b :: l1), (b <=* merge l2 l2), (b <=* merge l2 l1), (b <=* merge l1 l2), (b <=* merge l1 l1), (b <=* l2 ++ l2), (b <=* l2 ++ l1), (b <=* l1 ++ l2), (b <=* l1 ++ l1)
(length l2 <=* l2), (length l2 <=* l1), (length l2 <=* a0 :: l2), (length l2 <=* a0 :: l1), (length l2 <=* a :: l2), (length l2 <=* a :: l1), (length l2 <=* b :: l2), (length l2 <=* b :: l1), (length l2 <=* merge l2 l2), (length l2 <=* merge l2 l1)
(length l2 <=* merge l1 l1), (length l2 <=* l2 ++ l2), (length l2 <=* l2 ++ l1), (length l2 <=* l1 ++ l2), (length l2 <=* l1 ++ l1), (length l2 <=* []), (length l1 <=* l2), (length l1 <=* l1), (length l1 <=* a0 :: l2), (length l1 <=* a0 :: l1)
(length l1 <=* a :: l1), (length l1 <=* b :: l2), (length l1 <=* b :: l1), (length l1 <=* merge l2 l2), (length l1 <=* merge l2 l1), (length l1 <=* merge l1 l2), (length l1 <=* merge l1 l1), (length l1 <=* l2 ++ l2), (length l1 <=* l2 ++ l1), (length l1 <=* l1 ++ l2)
(length l1 <=* []), (sorted l2), (sorted l1), (sorted (a0 :: l2)), (sorted (a0 :: l1)), (sorted (a :: l2)), (sorted (a :: l1)), (sorted (b :: l2)), (sorted (b :: l1)), (sorted (merge l2 l2))
(sorted (merge l1 l2)), (sorted (merge l1 l1)), (sorted (l2 ++ l2)), (sorted (l2 ++ l1)), (sorted (l1 ++ l2)), (sorted (l1 ++ l1)), (sorted []), (Permutation l2 l1), (Permutation l2 (a0 :: l2)), (Permutation l2 (a0 :: l1))
(Permutation l2 (a :: l1)), (Permutation l2 (b :: l2)), (Permutation l2 (b :: l1)), (Permutation l2 (merge l2 l2)), (Permutation l2 (merge l2 l1)), (Permutation l2 (merge l1 l2)), (Permutation l2 (merge l1 l1)), (Permutation l2 (l2 ++ l2)), (Permutation l2 (l2 ++ l1)), (Permutation l2 (l1 ++ l2))
(Permutation l2 []), (Permutation l1 l2), (Permutation l1 (a0 :: l2)), (Permutation l1 (a0 :: l1)), (Permutation l1 (a :: l2)), (Permutation l1 (a :: l1)), (Permutation l1 (b :: l2)), (Permutation l1 (b :: l1)), (Permutation l1 (merge l2 l2)), (Permutation l1 (merge l2 l1))
(Permutation l1 (merge l1 l1)), (Permutation l1 (l2 ++ l2)), (Permutation l1 (l2 ++ l1)), (Permutation l1 (l1 ++ l2)), (Permutation l1 (l1 ++ l1)), (Permutation l1 []), (Permutation (a0 :: l2) l2), (Permutation (a0 :: l2) l1), (Permutation (a0 :: l2) (a0 :: l1)), (Permutation (a0 :: l2) (a :: l2))
(Permutation (a0 :: l2) (b :: l2)), (Permutation (a0 :: l2) (b :: l1)), (Permutation (a0 :: l2) (merge l2 l2)), (Permutation (a0 :: l2) (merge l2 l1)), (Permutation (a0 :: l2) (merge l1 l2)), (Permutation (a0 :: l2) (merge l1 l1)), (Permutation (a0 :: l2) (l2 ++ l2)), (Permutation (a0 :: l2) (l2 ++ l1)), (Permutation (a0 :: l2) (l1 ++ l2)), (Permutation (a0 :: l2) (l1 ++ l1))
(Permutation (a0 :: l1) l2), (Permutation (a0 :: l1) l1), (Permutation (a0 :: l1) (a0 :: l2)), (Permutation (a0 :: l1) (a :: l2)), (Permutation (a0 :: l1) (a :: l1)), (Permutation (a0 :: l1) (b :: l2)), (Permutation (a0 :: l1) (b :: l1)), (Permutation (a0 :: l1) (merge l2 l2)), (Permutation (a0 :: l1) (merge l2 l1)), (Permutation (a0 :: l1) (merge l1 l2))
(Permutation (a0 :: l1) (l2 ++ l2)), (Permutation (a0 :: l1) (l2 ++ l1)), (Permutation (a0 :: l1) (l1 ++ l2)), (Permutation (a0 :: l1) (l1 ++ l1)), (Permutation (a0 :: l1) []), (Permutation (a :: l2) l2), (Permutation (a :: l2) l1), (Permutation (a :: l2) (a0 :: l2)), (Permutation (a :: l2) (a0 :: l1)), (Permutation (a :: l2) (a :: l1))
(Permutation (a :: l2) (b :: l1)), (Permutation (a :: l2) (merge l2 l2)), (Permutation (a :: l2) (merge l2 l1)), (Permutation (a :: l2) (merge l1 l2)), (Permutation (a :: l2) (merge l1 l1)), (Permutation (a :: l2) (l2 ++ l2)), (Permutation (a :: l2) (l2 ++ l1)), (Permutation (a :: l2) (l1 ++ l2)), (Permutation (a :: l2) (l1 ++ l1)), (Permutation (a :: l2) [])
(Permutation (a :: l1) l1), (Permutation (a :: l1) (a0 :: l2)), (Permutation (a :: l1) (a0 :: l1)), (Permutation (a :: l1) (a :: l2)), (Permutation (a :: l1) (b :: l2)), (Permutation (a :: l1) (b :: l1)), (Permutation (a :: l1) (merge l2 l2)), (Permutation (a :: l1) (merge l2 l1)), (Permutation (a :: l1) (merge l1 l2)), (Permutation (a :: l1) (merge l1 l1))
(Permutation (a :: l1) (l2 ++ l1)), (Permutation (a :: l1) (l1 ++ l2)), (Permutation (a :: l1) (l1 ++ l1)), (Permutation (a :: l1) []), (Permutation (b :: l2) l2), (Permutation (b :: l2) l1), (Permutation (b :: l2) (a0 :: l2)), (Permutation (b :: l2) (a0 :: l1)), (Permutation (b :: l2) (a :: l2)), (Permutation (b :: l2) (a :: l1))
(Permutation (b :: l2) (merge l2 l2)), (Permutation (b :: l2) (merge l2 l1)), (Permutation (b :: l2) (merge l1 l2)), (Permutation (b :: l2) (merge l1 l1)), (Permutation (b :: l2) (l2 ++ l2)), (Permutation (b :: l2) (l2 ++ l1)), (Permutation (b :: l2) (l1 ++ l2)), (Permutation (b :: l2) (l1 ++ l1)), (Permutation (b :: l2) []), (Permutation (b :: l1) l2)
(Permutation (b :: l1) (a0 :: l2)), (Permutation (b :: l1) (a0 :: l1)), (Permutation (b :: l1) (a :: l2)), (Permutation (b :: l1) (a :: l1)), (Permutation (b :: l1) (b :: l2)), (Permutation (b :: l1) (merge l2 l2)), (Permutation (b :: l1) (merge l2 l1)), (Permutation (b :: l1) (merge l1 l2)), (Permutation (b :: l1) (merge l1 l1)), (Permutation (b :: l1) (l2 ++ l2))
(Permutation (b :: l1) (l1 ++ l2)), (Permutation (b :: l1) (l1 ++ l1)), (Permutation (b :: l1) []), (Permutation (merge l2 l2) l2), (Permutation (merge l2 l2) l1), (Permutation (merge l2 l2) (a0 :: l2)), (Permutation (merge l2 l2) (a0 :: l1)), (Permutation (merge l2 l2) (a :: l2)), (Permutation (merge l2 l2) (a :: l1)), (Permutation (merge l2 l2) (b :: l2))
(Permutation (merge l2 l2) (merge l2 l1)), (Permutation (merge l2 l2) (merge l1 l2)), (Permutation (merge l2 l2) (merge l1 l1)), (Permutation (merge l2 l2) (l2 ++ l2)), (Permutation (merge l2 l2) (l2 ++ l1)), (Permutation (merge l2 l2) (l1 ++ l2)), (Permutation (merge l2 l2) (l1 ++ l1)), (Permutation (merge l2 l2) []), (Permutation (merge l2 l1) l2), (Permutation (merge l2 l1) l1)
(Permutation (merge l2 l1) (a0 :: l1)), (Permutation (merge l2 l1) (a :: l2)), (Permutation (merge l2 l1) (a :: l1)), (Permutation (merge l2 l1) (b :: l2)), (Permutation (merge l2 l1) (b :: l1)), (Permutation (merge l2 l1) (merge l2 l2)), (Permutation (merge l2 l1) (merge l1 l2)), (Permutation (merge l2 l1) (merge l1 l1)), (Permutation (merge l2 l1) (l2 ++ l2)), (Permutation (merge l2 l1) (l2 ++ l1))
(Permutation (merge l2 l1) (l1 ++ l1)), (Permutation (merge l2 l1) []), (Permutation (merge l1 l2) l2), (Permutation (merge l1 l2) l1), (Permutation (merge l1 l2) (a0 :: l2)), (Permutation (merge l1 l2) (a0 :: l1)), (Permutation (merge l1 l2) (a :: l2)), (Permutation (merge l1 l2) (a :: l1)), (Permutation (merge l1 l2) (b :: l2)), (Permutation (merge l1 l2) (b :: l1))
(Permutation (merge l1 l2) (merge l2 l1)), (Permutation (merge l1 l2) (merge l1 l1)), (Permutation (merge l1 l2) (l2 ++ l2)), (Permutation (merge l1 l2) (l2 ++ l1)), (Permutation (merge l1 l2) (l1 ++ l2)), (Permutation (merge l1 l2) (l1 ++ l1)), (Permutation (merge l1 l2) []), (Permutation (merge l1 l1) l2), (Permutation (merge l1 l1) l1), (Permutation (merge l1 l1) (a0 :: l2))
(Permutation (merge l1 l1) (a :: l2)), (Permutation (merge l1 l1) (a :: l1)), (Permutation (merge l1 l1) (b :: l2)), (Permutation (merge l1 l1) (b :: l1)), (Permutation (merge l1 l1) (merge l2 l2)), (Permutation (merge l1 l1) (merge l2 l1)), (Permutation (merge l1 l1) (merge l1 l2)), (Permutation (merge l1 l1) (l2 ++ l2)), (Permutation (merge l1 l1) (l2 ++ l1)), (Permutation (merge l1 l1) (l1 ++ l2))
(Permutation (merge l1 l1) []), (Permutation (l2 ++ l2) l2), (Permutation (l2 ++ l2) l1), (Permutation (l2 ++ l2) (a0 :: l2)), (Permutation (l2 ++ l2) (a0 :: l1)), (Permutation (l2 ++ l2) (a :: l2)), (Permutation (l2 ++ l2) (a :: l1)), (Permutation (l2 ++ l2) (b :: l2)), (Permutation (l2 ++ l2) (b :: l1)), (Permutation (l2 ++ l2) (merge l2 l2))
(Permutation (l2 ++ l2) (merge l1 l2)), (Permutation (l2 ++ l2) (merge l1 l1)), (Permutation (l2 ++ l2) (l2 ++ l1)), (Permutation (l2 ++ l2) (l1 ++ l2)), (Permutation (l2 ++ l2) (l1 ++ l1)), (Permutation (l2 ++ l2) []), (Permutation (l2 ++ l1) l2), (Permutation (l2 ++ l1) l1), (Permutation (l2 ++ l1) (a0 :: l2)), (Permutation (l2 ++ l1) (a0 :: l1))
(Permutation (l2 ++ l1) (a :: l1)), (Permutation (l2 ++ l1) (b :: l2)), (Permutation (l2 ++ l1) (b :: l1)), (Permutation (l2 ++ l1) (merge l2 l2)), (Permutation (l2 ++ l1) (merge l2 l1)), (Permutation (l2 ++ l1) (merge l1 l2)), (Permutation (l2 ++ l1) (merge l1 l1)), (Permutation (l2 ++ l1) (l2 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l2)), (Permutation (l2 ++ l1) (l1 ++ l1))
(Permutation (l1 ++ l2) l2), (Permutation (l1 ++ l2) l1), (Permutation (l1 ++ l2) (a0 :: l2)), (Permutation (l1 ++ l2) (a0 :: l1)), (Permutation (l1 ++ l2) (a :: l2)), (Permutation (l1 ++ l2) (a :: l1)), (Permutation (l1 ++ l2) (b :: l2)), (Permutation (l1 ++ l2) (b :: l1)), (Permutation (l1 ++ l2) (merge l2 l2)), (Permutation (l1 ++ l2) (merge l2 l1))
(Permutation (l1 ++ l2) (merge l1 l1)), (Permutation (l1 ++ l2) (l2 ++ l2)), (Permutation (l1 ++ l2) (l2 ++ l1)), (Permutation (l1 ++ l2) (l1 ++ l1)), (Permutation (l1 ++ l2) []), (Permutation (l1 ++ l1) l2), (Permutation (l1 ++ l1) l1), (Permutation (l1 ++ l1) (a0 :: l2)), (Permutation (l1 ++ l1) (a0 :: l1)), (Permutation (l1 ++ l1) (a :: l2))
(Permutation (l1 ++ l1) (b :: l2)), (Permutation (l1 ++ l1) (b :: l1)), (Permutation (l1 ++ l1) (merge l2 l2)), (Permutation (l1 ++ l1) (merge l2 l1)), (Permutation (l1 ++ l1) (merge l1 l2)), (Permutation (l1 ++ l1) (merge l1 l1)), (Permutation (l1 ++ l1) (l2 ++ l2)), (Permutation (l1 ++ l1) (l2 ++ l1)), (Permutation (l1 ++ l1) (l1 ++ l2)), (Permutation (l1 ++ l1) [])
(Permutation [] l1), (Permutation [] (a0 :: l2)), (Permutation [] (a0 :: l1)), (Permutation [] (a :: l2)), (Permutation [] (a :: l1)), (Permutation [] (b :: l2)), (Permutation [] (b :: l1)), (Permutation [] (merge l2 l2)), (Permutation [] (merge l2 l1)), (Permutation [] (merge l1 l2))
(Permutation [] (l2 ++ l2)), (Permutation [] (l2 ++ l1)), (Permutation [] (l1 ++ l2)), (Permutation [] (l1 ++ l1)), (In a0 l2), (In a0 l1), (In a0 (a0 :: l2)), (In a0 (a0 :: l1)), (In a0 (a :: l2)), (In a0 (a :: l1))
(In a0 (b :: l1)), (In a0 (merge l2 l2)), (In a0 (merge l2 l1)), (In a0 (merge l1 l2)), (In a0 (merge l1 l1)), (In a0 (l2 ++ l2)), (In a0 (l2 ++ l1)), (In a0 (l1 ++ l2)), (In a0 (l1 ++ l1)), (In a l2)
(In a (a0 :: l2)), (In a (a0 :: l1)), (In a (a :: l2)), (In a (a :: l1)), (In a (b :: l2)), (In a (b :: l1)), (In a (merge l2 l2)), (In a (merge l2 l1)), (In a (merge l1 l2)), (In a (merge l1 l1))
(In a (l2 ++ l1)), (In a (l1 ++ l2)), (In a (l1 ++ l1)), (In b l2), (In b l1), (In b (a0 :: l2)), (In b (a0 :: l1)), (In b (a :: l2)), (In b (a :: l1)), (In b (b :: l2))
(In b (merge l2 l2)), (In b (merge l2 l1)), (In b (merge l1 l2)), (In b (merge l1 l1)), (In b (l2 ++ l2)), (In b (l2 ++ l1)), (In b (l1 ++ l2)), (In b (l1 ++ l1)), (In (length l2) l2), (In (length l2) l1)
(In (length l2) (a0 :: l1)), (In (length l2) (a :: l2)), (In (length l2) (a :: l1)), (In (length l2) (b :: l2)), (In (length l2) (b :: l1)), (In (length l2) (merge l2 l2)), (In (length l2) (merge l2 l1)), (In (length l2) (merge l1 l2)), (In (length l2) (merge l1 l1)), (In (length l2) (l2 ++ l2))
(In (length l2) (l1 ++ l2)), (In (length l2) (l1 ++ l1)), (In (length l1) l2), (In (length l1) l1), (In (length l1) (a0 :: l2)), (In (length l1) (a0 :: l1)), (In (length l1) (a :: l2)), (In (length l1) (a :: l1)), (In (length l1) (b :: l2)), (In (length l1) (b :: l1))
(In (length l1) (merge l2 l1)), (In (length l1) (merge l1 l2)), (In (length l1) (merge l1 l1)), (In (length l1) (l2 ++ l2)), (In (length l1) (l2 ++ l1)), (In (length l1) (l1 ++ l2)), (In (length l1) (l1 ++ l1)), (a0 < a), (a0 < b), (a0 < length l2)
(a < a0), (a < b), (a < length l2), (a < length l1), (b < a0), (b < a), (b < length l2), (b < length l1), (length l2 < a0), (length l2 < a)
(length l2 < length l1), (length l1 < a0), (length l1 < a), (length l1 < b), (length l1 < length l2), (a0 <= a), (a0 <= b), (a0 <= length l2), (a0 <= length l1), (a <= a0)
(a <= length l2), (a <= length l1), (b <= a0), (b <= a), (b <= length l2), (b <= length l1), (length l2 <= a0), (length l2 <= a), (length l2 <= b), (length l2 <= length l1)
(length l1 <= a), (length l1 <= b), (length l1 <= length l2), (merge l2 l2 = l2), (merge l2 l2 = l1), (merge l2 l2 = l2 ++ l2), (merge l2 l2 = l2 ++ l1), (merge l2 l2 = l1 ++ l2), (merge l2 l2 = l1 ++ l1), (merge l2 l1 = l2)
(merge l2 l1 = l2 ++ l2), (merge l2 l1 = l2 ++ l1), (merge l2 l1 = l1 ++ l2), (merge l2 l1 = l1 ++ l1), (merge l1 l2 = l2), (merge l1 l2 = l1), (merge l1 l2 = l2 ++ l2), (merge l1 l2 = l2 ++ l1), (merge l1 l2 = l1 ++ l2), (merge l1 l2 = l1 ++ l1)
(merge l1 l1 = l1), (merge l1 l1 = l2 ++ l2), (merge l1 l1 = l2 ++ l1), (merge l1 l1 = l1 ++ l2), (merge l1 l1 = l1 ++ l1), (l2 ++ l2 = l2), (l2 ++ l2 = l1), (l2 ++ l1 = l2), (l2 ++ l1 = l1), (l1 ++ l2 = l2)
(l1 ++ l1 = l2), (l1 ++ l1 = l1), (length l2 = a0), (length l2 = a), (length l2 = b), (length l1 = a0), (length l1 = a), (length l1 = b)