Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (sorted (selection_sort al))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv0 : (list nat) = (selection_sort al)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 15.549 seconds

Label: Generalization #0
Assumptions: 
 -- (selection_sort al = gv0)

----------------------------------
Goal: (sorted gv0)
Case: 3

Label: Generalization #1
Assumptions: 

----------------------------------
Goal: (sorted (selection_sort al))
Case: 1



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 16.227 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (selection_sort al = gv0)
Positive Examples:
   [al := [4; 2]; gv0 := [2; 4]]
   [al := [1; 1]; gv0 := [1; 1]]
   [al := [1; 3; 3]; gv0 := [1; 3; 3]]
   [al := [2; 3]; gv0 := [2; 3]]
   [al := [2; 1]; gv0 := [1; 2]]
   [al := [4]; gv0 := [4]]
   [al := [2; 2]; gv0 := [2; 2]]
   [al := [0; 0]; gv0 := [0; 0]]
   [al := [3]; gv0 := [3]]
   [al := [2; 2; 3]; gv0 := [2; 2; 3]]
   etc ...

Negative Examples:
   [al := [5; 1; 2; 1; 1]; gv0 := [5; 2; 0; 1]]
   [al := [2; 0]; gv0 := [1; 0; 3]]
   [al := [1; 1]; gv0 := [3; 3; 1; 2; 4]]
   [al := [0; 0; 3]; gv0 := [2; 1; 3]]
   [al := [4; 2]; gv0 := [3; 0; 4; 1; 5; 6]]
   [al := [0]; gv0 := [1; 0; 3]]
   [al := [6; 3; 1; 6]; gv0 := [4; 4; 3; 0; 4; 6]]
   [al := []; gv0 := [1; 4; 3; 3; 2]]
   [al := [2; 6; 0]; gv0 := [4; 0; 5; 3]]
   [al := [1; 2]; gv0 := [1; 0]]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 16.937 seconds


Label: 0 (0)
(sorted al), (sorted gv0), (Permutation al al), (Permutation al gv0), (Permutation gv0 al), (Permutation gv0 gv0), (al = al), (al = gv0), (gv0 = al), (gv0 = gv0)
(false = sorted_bool al), (false = sorted_bool gv0), (true = sorted_bool al), (true = sorted_bool gv0), (length al <=* al), (length al <=* gv0), (length al <=* selection_sort al), (length al <=* selection_sort gv0), (length al <=* al ++ al), (length al <=* al ++ gv0)
(length al <=* gv0 ++ al), (length al <=* gv0 ++ gv0), (length al <=* []), (length gv0 <=* al), (length gv0 <=* gv0), (length gv0 <=* selection_sort al), (length gv0 <=* selection_sort gv0), (length gv0 <=* al ++ al), (length gv0 <=* al ++ gv0), (length gv0 <=* gv0 ++ al)
(length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted (selection_sort al)), (sorted (selection_sort gv0)), (sorted (al ++ al)), (sorted (al ++ gv0)), (sorted (gv0 ++ al)), (sorted (gv0 ++ gv0)), (sorted []), (Permutation al (selection_sort al))
(Permutation al (selection_sort gv0)), (Permutation al (al ++ al)), (Permutation al (al ++ gv0)), (Permutation al (gv0 ++ al)), (Permutation al (gv0 ++ gv0)), (Permutation al []), (Permutation gv0 (selection_sort al)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (al ++ al)), (Permutation gv0 (al ++ gv0))
(Permutation gv0 (gv0 ++ al)), (Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) gv0), (Permutation (selection_sort al) (selection_sort gv0)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ gv0)), (Permutation (selection_sort al) (gv0 ++ al)), (Permutation (selection_sort al) (gv0 ++ gv0))
(Permutation (selection_sort al) []), (Permutation (selection_sort gv0) al), (Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (selection_sort al)), (Permutation (selection_sort gv0) (al ++ al)), (Permutation (selection_sort gv0) (al ++ gv0)), (Permutation (selection_sort gv0) (gv0 ++ al)), (Permutation (selection_sort gv0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) []), (Permutation (al ++ al) al)
(Permutation (al ++ al) gv0), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort gv0)), (Permutation (al ++ al) (al ++ gv0)), (Permutation (al ++ al) (gv0 ++ al)), (Permutation (al ++ al) (gv0 ++ gv0)), (Permutation (al ++ al) []), (Permutation (al ++ gv0) al), (Permutation (al ++ gv0) gv0), (Permutation (al ++ gv0) (selection_sort al))
(Permutation (al ++ gv0) (selection_sort gv0)), (Permutation (al ++ gv0) (al ++ al)), (Permutation (al ++ gv0) (gv0 ++ al)), (Permutation (al ++ gv0) (gv0 ++ gv0)), (Permutation (al ++ gv0) []), (Permutation (gv0 ++ al) al), (Permutation (gv0 ++ al) gv0), (Permutation (gv0 ++ al) (selection_sort al)), (Permutation (gv0 ++ al) (selection_sort gv0)), (Permutation (gv0 ++ al) (al ++ al))
(Permutation (gv0 ++ al) (al ++ gv0)), (Permutation (gv0 ++ al) (gv0 ++ gv0)), (Permutation (gv0 ++ al) []), (Permutation (gv0 ++ gv0) al), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (selection_sort al)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (al ++ al)), (Permutation (gv0 ++ gv0) (al ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ al))
(Permutation (gv0 ++ gv0) []), (Permutation [] al), (Permutation [] gv0), (Permutation [] (selection_sort al)), (Permutation [] (selection_sort gv0)), (Permutation [] (al ++ al)), (Permutation [] (al ++ gv0)), (Permutation [] (gv0 ++ al)), (Permutation [] (gv0 ++ gv0)), (In (length al) al)
(In (length al) gv0), (In (length al) (selection_sort al)), (In (length al) (selection_sort gv0)), (In (length al) (al ++ al)), (In (length al) (al ++ gv0)), (In (length al) (gv0 ++ al)), (In (length al) (gv0 ++ gv0)), (In (length gv0) al), (In (length gv0) gv0), (In (length gv0) (selection_sort al))
(In (length gv0) (selection_sort gv0)), (In (length gv0) (al ++ al)), (In (length gv0) (al ++ gv0)), (In (length gv0) (gv0 ++ al)), (In (length gv0) (gv0 ++ gv0)), (length al < length gv0), (length gv0 < length al), (length al <= length gv0), (length gv0 <= length al), (~ sorted al)
(~ sorted gv0), (~ Permutation al al), (~ Permutation al gv0), (~ Permutation gv0 al), (~ Permutation gv0 gv0), (al <> al), (al <> gv0), (gv0 <> al), (gv0 <> gv0), (None = Some al)
(None = Some gv0), (selection_sort al = al), (selection_sort al = gv0), (selection_sort al = al ++ al), (selection_sort al = al ++ gv0), (selection_sort al = gv0 ++ al), (selection_sort al = gv0 ++ gv0), (selection_sort gv0 = al), (selection_sort gv0 = gv0), (selection_sort gv0 = al ++ al)
(selection_sort gv0 = al ++ gv0), (selection_sort gv0 = gv0 ++ al), (selection_sort gv0 = gv0 ++ gv0), (al ++ al = al), (al ++ al = gv0), (al ++ gv0 = al), (al ++ gv0 = gv0), (gv0 ++ al = al), (gv0 ++ al = gv0), (gv0 ++ gv0 = al)
(gv0 ++ gv0 = gv0), ([] = al), ([] = gv0), ([] = selection_sort al), ([] = selection_sort gv0), ([] = al ++ al), ([] = al ++ gv0), ([] = gv0 ++ al), ([] = gv0 ++ gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 67.2 seconds


Label: 0 (0)
(sorted gv0), (Permutation al gv0), (Permutation gv0 al), (true = sorted_bool gv0), (Permutation al (selection_sort gv0)), (Permutation gv0 (selection_sort al)), (Permutation (selection_sort al) gv0), (Permutation (selection_sort al) (selection_sort gv0)), (Permutation (selection_sort gv0) al), (Permutation (selection_sort gv0) (selection_sort al))
(Permutation (al ++ al) (al ++ gv0)), (Permutation (al ++ al) (gv0 ++ al)), (Permutation (al ++ al) (gv0 ++ gv0)), (Permutation (al ++ gv0) (al ++ al)), (Permutation (al ++ gv0) (gv0 ++ gv0)), (Permutation (gv0 ++ al) (al ++ al)), (Permutation (gv0 ++ al) (gv0 ++ gv0)), (Permutation (gv0 ++ gv0) (al ++ al)), (Permutation (gv0 ++ gv0) (al ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ al))
(selection_sort al = gv0), (selection_sort gv0 = gv0)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 132.108 seconds


(selection_sort al = gv0)
 - (selection_sort al = gv0)
 - (sorted gv0)
 - (Permutation al gv0)
 - (Permutation gv0 al)
 - (true = sorted_bool gv0)
 - (Permutation al (selection_sort gv0))
 - (Permutation gv0 (selection_sort al))
 - (Permutation (selection_sort al) gv0)
 - (Permutation (selection_sort al) (selection_sort gv0))
 - (Permutation (selection_sort gv0) al)
 - (Permutation (selection_sort gv0) (selection_sort al))
 - (Permutation (al ++ al) (al ++ gv0))
 - (Permutation (al ++ al) (gv0 ++ al))
 - (Permutation (al ++ al) (gv0 ++ gv0))
 - (Permutation (al ++ gv0) (al ++ al))
 - (Permutation (al ++ gv0) (gv0 ++ gv0))
 - (Permutation (gv0 ++ al) (al ++ al))
 - (Permutation (gv0 ++ al) (gv0 ++ gv0))
 - (Permutation (gv0 ++ gv0) (al ++ al))
 - (Permutation (gv0 ++ gv0) (al ++ gv0))
 - (Permutation (gv0 ++ gv0) (gv0 ++ al))
 - (selection_sort gv0 = gv0)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 132.109 seconds

Number of Result Pairs Returned: 3

(selection_sort al = gv0 -> true = sorted_bool gv0)
(true = sorted_bool gv0 -> sorted gv0)

(selection_sort al = gv0 -> selection_sort gv0 = gv0)
(selection_sort gv0 = gv0 -> sorted gv0)

(sorted (selection_sort al))
