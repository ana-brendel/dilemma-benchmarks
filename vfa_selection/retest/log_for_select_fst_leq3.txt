Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (x :: x1 = bl)
 -- (exists (i : nat) (j : list nat), select a al = (i, j))
 -- (forall (bl : list nat) (y x : nat), select x al = (y, bl) -> y <= x)
 -- (x0 = y)
 -- (x0 <= m)
 -- (S m = a)
 -- ((x0, x :: x1) = (y, bl))
 -- (exists j : list nat, select a al = (x0, j))
 -- (a < x)
 -- (x0 <= a)

----------------------------------
Goal: (x0 < S x)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv0 : nat = (S x)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 298.569 seconds

Label: Generalization #0
Assumptions: 
 -- (S m = a)
 -- (x :: x1 = bl)
 -- ((x0, x :: x1) = (y, bl))
 -- (a < x)

----------------------------------
Goal: (x0 < gv0)
Case: 2

Label: Generalization #1
Assumptions: 
 -- (a < x)
 -- (x0 <= a)

----------------------------------
Goal: (x0 < S x)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 299.234 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: n/a
Positive Examples:


Negative Examples:
   [a := 1; bl := [2]; gv0 := 2; m := 0; x := 2; x0 := 2; x1 := []; y := 2]
   [a := 1; bl := [2; 2]; gv0 := 0; m := 0; x := 2; x0 := 0; x1 := [2]; y := 0]
   [a := 1; bl := [2]; gv0 := 0; m := 0; x := 2; x0 := 2; x1 := []; y := 2]


Label: 1 (1)
Abducted Assumption: (a < x)
Positive Examples:
   [a := 2; x := 6; x0 := 2]
   [a := 3; x := 6; x0 := 3]
   [a := 0; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 1]
   [a := 1; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 5]
   [a := 3; x := 6; x0 := 0]
   [a := 2; x := 6; x0 := 1]
   [a := 4; x := 6; x0 := 2]
   [a := 5; x := 6; x0 := 0]
   etc ...

Negative Examples:
   [a := 6; x := 3; x0 := 6]
   [a := 6; x := 2; x0 := 5]
   [a := 6; x := 2; x0 := 6]
   [a := 6; x := 1; x0 := 5]
   [a := 6; x := 4; x0 := 6]
   [a := 5; x := 3; x0 := 4]
   [a := 6; x := 1; x0 := 2]
   [a := 6; x := 0; x0 := 3]
   [a := 5; x := 0; x0 := 4]
   [a := 6; x := 2; x0 := 4]
   etc ...


Label: 1 (2)
Abducted Assumption: (x0 <= a)
Positive Examples:
   [a := 2; x := 6; x0 := 2]
   [a := 3; x := 6; x0 := 3]
   [a := 0; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 1]
   [a := 1; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 5]
   [a := 3; x := 6; x0 := 0]
   [a := 2; x := 6; x0 := 1]
   [a := 4; x := 6; x0 := 2]
   [a := 5; x := 6; x0 := 0]
   etc ...

Negative Examples:
   [a := 4; x := 5; x0 := 6]
   [a := 0; x := 1; x0 := 6]
   [a := 1; x := 5; x0 := 6]
   [a := 1; x := 3; x0 := 6]
   [a := 1; x := 4; x0 := 6]
   [a := 0; x := 3; x0 := 6]
   [a := 0; x := 3; x0 := 4]
   [a := 1; x := 2; x0 := 6]
   [a := 2; x := 5; x0 := 6]
   [a := 0; x := 2; x0 := 5]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 300.366 seconds


Label: 0 (0)
(m <=* bl), (m <=* x1), (y <=* bl), (y <=* x1), (x <=* bl), (x <=* x1), (a <=* bl), (a <=* x1), (gv0 <=* bl), (gv0 <=* x1)
(x0 <=* x1), (sorted bl), (sorted x1), (Permutation bl bl), (Permutation bl x1), (Permutation x1 bl), (Permutation x1 x1), (In m bl), (In m x1), (In y bl)
(In x bl), (In x x1), (In a bl), (In a x1), (In gv0 bl), (In gv0 x1), (In x0 bl), (In x0 x1), (m < m), (m < y)
(m < a), (m < gv0), (m < x0), (y < m), (y < y), (y < x), (y < a), (y < gv0), (y < x0), (x < m)
(x < x), (x < a), (x < gv0), (x < x0), (a < m), (a < y), (a < x), (a < a), (a < gv0), (a < x0)
(gv0 < y), (gv0 < x), (gv0 < a), (gv0 < gv0), (gv0 < x0), (x0 < m), (x0 < y), (x0 < x), (x0 < a), (x0 < gv0)
(m <= m), (m <= y), (m <= x), (m <= a), (m <= gv0), (m <= x0), (y <= m), (y <= y), (y <= x), (y <= a)
(y <= x0), (x <= m), (x <= y), (x <= x), (x <= a), (x <= gv0), (x <= x0), (a <= m), (a <= y), (a <= x)
(a <= gv0), (a <= x0), (gv0 <= m), (gv0 <= y), (gv0 <= x), (gv0 <= a), (gv0 <= gv0), (gv0 <= x0), (x0 <= m), (x0 <= y)
(x0 <= a), (x0 <= gv0), (x0 <= x0), (bl = bl), (bl = x1), (x1 = bl), (x1 = x1), (m = m), (m = y), (m = x)
(m = gv0), (m = x0), (y = m), (y = y), (y = x), (y = a), (y = gv0), (y = x0), (x = m), (x = y)
(x = a), (x = gv0), (x = x0), (a = m), (a = y), (a = x), (a = a), (a = gv0), (a = x0), (gv0 = m)
(gv0 = x), (gv0 = a), (gv0 = gv0), (gv0 = x0), (x0 = m), (x0 = y), (x0 = x), (x0 = a), (x0 = gv0), (x0 = x0)
(false = sorted_bool x1), (true = sorted_bool bl), (true = sorted_bool x1), (m <=* m :: bl), (m <=* m :: x1), (m <=* y :: bl), (m <=* y :: x1), (m <=* x :: bl), (m <=* x :: x1), (m <=* a :: bl)
(m <=* gv0 :: bl), (m <=* gv0 :: x1), (m <=* x0 :: bl), (m <=* x0 :: x1), (m <=* selection_sort bl), (m <=* selection_sort x1), (m <=* selsort bl m), (m <=* selsort bl y), (m <=* selsort bl x), (m <=* selsort bl a)
(m <=* selsort bl x0), (m <=* selsort x1 m), (m <=* selsort x1 y), (m <=* selsort x1 x), (m <=* selsort x1 a), (m <=* selsort x1 gv0), (m <=* selsort x1 x0), (m <=* bl ++ bl), (m <=* bl ++ x1), (m <=* x1 ++ bl)
(m <=* []), (y <=* m :: bl), (y <=* m :: x1), (y <=* y :: bl), (y <=* y :: x1), (y <=* x :: bl), (y <=* x :: x1), (y <=* a :: bl), (y <=* a :: x1), (y <=* gv0 :: bl)
(y <=* x0 :: bl), (y <=* x0 :: x1), (y <=* selection_sort bl), (y <=* selection_sort x1), (y <=* selsort bl m), (y <=* selsort bl y), (y <=* selsort bl x), (y <=* selsort bl a), (y <=* selsort bl gv0), (y <=* selsort bl x0)
(y <=* selsort x1 y), (y <=* selsort x1 x), (y <=* selsort x1 a), (y <=* selsort x1 gv0), (y <=* selsort x1 x0), (y <=* bl ++ bl), (y <=* bl ++ x1), (y <=* x1 ++ bl), (y <=* x1 ++ x1), (y <=* [])
(x <=* m :: x1), (x <=* y :: bl), (x <=* y :: x1), (x <=* x :: bl), (x <=* x :: x1), (x <=* a :: bl), (x <=* a :: x1), (x <=* gv0 :: bl), (x <=* gv0 :: x1), (x <=* x0 :: bl)
(x <=* selection_sort bl), (x <=* selection_sort x1), (x <=* selsort bl m), (x <=* selsort bl y), (x <=* selsort bl x), (x <=* selsort bl a), (x <=* selsort bl gv0), (x <=* selsort bl x0), (x <=* selsort x1 m), (x <=* selsort x1 y)
(x <=* selsort x1 a), (x <=* selsort x1 gv0), (x <=* selsort x1 x0), (x <=* bl ++ bl), (x <=* bl ++ x1), (x <=* x1 ++ bl), (x <=* x1 ++ x1), (x <=* []), (a <=* m :: bl), (a <=* m :: x1)
(a <=* y :: x1), (a <=* x :: bl), (a <=* x :: x1), (a <=* a :: bl), (a <=* a :: x1), (a <=* gv0 :: bl), (a <=* gv0 :: x1), (a <=* x0 :: bl), (a <=* x0 :: x1), (a <=* selection_sort bl)
(a <=* selsort bl m), (a <=* selsort bl y), (a <=* selsort bl x), (a <=* selsort bl a), (a <=* selsort bl gv0), (a <=* selsort bl x0), (a <=* selsort x1 m), (a <=* selsort x1 y), (a <=* selsort x1 x), (a <=* selsort x1 a)
(a <=* selsort x1 x0), (a <=* bl ++ bl), (a <=* bl ++ x1), (a <=* x1 ++ bl), (a <=* x1 ++ x1), (a <=* []), (gv0 <=* m :: bl), (gv0 <=* m :: x1), (gv0 <=* y :: bl), (gv0 <=* y :: x1)
(gv0 <=* x :: x1), (gv0 <=* a :: bl), (gv0 <=* a :: x1), (gv0 <=* gv0 :: bl), (gv0 <=* gv0 :: x1), (gv0 <=* x0 :: bl), (gv0 <=* x0 :: x1), (gv0 <=* selection_sort bl), (gv0 <=* selection_sort x1), (gv0 <=* selsort bl m)
(gv0 <=* selsort bl x), (gv0 <=* selsort bl a), (gv0 <=* selsort bl gv0), (gv0 <=* selsort bl x0), (gv0 <=* selsort x1 m), (gv0 <=* selsort x1 y), (gv0 <=* selsort x1 x), (gv0 <=* selsort x1 a), (gv0 <=* selsort x1 gv0), (gv0 <=* selsort x1 x0)
(gv0 <=* bl ++ x1), (gv0 <=* x1 ++ bl), (gv0 <=* x1 ++ x1), (gv0 <=* []), (x0 <=* m :: bl), (x0 <=* m :: x1), (x0 <=* y :: bl), (x0 <=* y :: x1), (x0 <=* x :: bl), (x0 <=* x :: x1)
(x0 <=* a :: x1), (x0 <=* gv0 :: bl), (x0 <=* gv0 :: x1), (x0 <=* x0 :: bl), (x0 <=* x0 :: x1), (x0 <=* selection_sort bl), (x0 <=* selection_sort x1), (x0 <=* selsort bl m), (x0 <=* selsort bl y), (x0 <=* selsort bl x)
(x0 <=* selsort bl gv0), (x0 <=* selsort bl x0), (x0 <=* selsort x1 m), (x0 <=* selsort x1 y), (x0 <=* selsort x1 x), (x0 <=* selsort x1 a), (x0 <=* selsort x1 gv0), (x0 <=* selsort x1 x0), (x0 <=* bl ++ bl), (x0 <=* bl ++ x1)
(x0 <=* x1 ++ x1), (x0 <=* []), (length bl <=* bl), (length bl <=* x1), (length bl <=* m :: bl), (length bl <=* m :: x1), (length bl <=* y :: bl), (length bl <=* y :: x1), (length bl <=* x :: bl), (length bl <=* x :: x1)
(length bl <=* a :: x1), (length bl <=* gv0 :: bl), (length bl <=* gv0 :: x1), (length bl <=* x0 :: bl), (length bl <=* x0 :: x1), (length bl <=* selection_sort bl), (length bl <=* selection_sort x1), (length bl <=* selsort bl m), (length bl <=* selsort bl y), (length bl <=* selsort bl x)
(length bl <=* selsort bl gv0), (length bl <=* selsort bl x0), (length bl <=* selsort x1 m), (length bl <=* selsort x1 y), (length bl <=* selsort x1 x), (length bl <=* selsort x1 a), (length bl <=* selsort x1 gv0), (length bl <=* selsort x1 x0), (length bl <=* bl ++ bl), (length bl <=* bl ++ x1)
(length bl <=* x1 ++ x1), (length bl <=* []), (length x1 <=* bl), (length x1 <=* x1), (length x1 <=* m :: bl), (length x1 <=* m :: x1), (length x1 <=* y :: bl), (length x1 <=* y :: x1), (length x1 <=* x :: bl), (length x1 <=* x :: x1)
(length x1 <=* a :: x1), (length x1 <=* gv0 :: bl), (length x1 <=* gv0 :: x1), (length x1 <=* x0 :: bl), (length x1 <=* x0 :: x1), (length x1 <=* selection_sort bl), (length x1 <=* selection_sort x1), (length x1 <=* selsort bl m), (length x1 <=* selsort bl y), (length x1 <=* selsort bl x)
(length x1 <=* selsort bl gv0), (length x1 <=* selsort bl x0), (length x1 <=* selsort x1 m), (length x1 <=* selsort x1 y), (length x1 <=* selsort x1 x), (length x1 <=* selsort x1 a), (length x1 <=* selsort x1 gv0), (length x1 <=* selsort x1 x0), (length x1 <=* bl ++ bl), (length x1 <=* bl ++ x1)
(length x1 <=* x1 ++ x1), (length x1 <=* []), (sorted (m :: bl)), (sorted (m :: x1)), (sorted (y :: bl)), (sorted (y :: x1)), (sorted (x :: bl)), (sorted (x :: x1)), (sorted (a :: bl)), (sorted (a :: x1))
(sorted (gv0 :: x1)), (sorted (x0 :: bl)), (sorted (x0 :: x1)), (sorted (selection_sort bl)), (sorted (selection_sort x1)), (sorted (selsort bl m)), (sorted (selsort bl y)), (sorted (selsort bl x)), (sorted (selsort bl a)), (sorted (selsort bl gv0))
(sorted (selsort x1 m)), (sorted (selsort x1 y)), (sorted (selsort x1 x)), (sorted (selsort x1 a)), (sorted (selsort x1 gv0)), (sorted (selsort x1 x0)), (sorted (bl ++ bl)), (sorted (bl ++ x1)), (sorted (x1 ++ bl)), (sorted (x1 ++ x1))
(Permutation bl (m :: bl)), (Permutation bl (m :: x1)), (Permutation bl (y :: bl)), (Permutation bl (y :: x1)), (Permutation bl (x :: bl)), (Permutation bl (x :: x1)), (Permutation bl (a :: bl)), (Permutation bl (a :: x1)), (Permutation bl (gv0 :: bl)), (Permutation bl (gv0 :: x1))
(Permutation bl (x0 :: x1)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort x1)), (Permutation bl (selsort bl m)), (Permutation bl (selsort bl y)), (Permutation bl (selsort bl x)), (Permutation bl (selsort bl a)), (Permutation bl (selsort bl gv0)), (Permutation bl (selsort bl x0)), (Permutation bl (selsort x1 m))
(Permutation bl (selsort x1 x)), (Permutation bl (selsort x1 a)), (Permutation bl (selsort x1 gv0)), (Permutation bl (selsort x1 x0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ x1)), (Permutation bl (x1 ++ bl)), (Permutation bl (x1 ++ x1)), (Permutation bl []), (Permutation x1 (m :: bl))
(Permutation x1 (y :: bl)), (Permutation x1 (y :: x1)), (Permutation x1 (x :: bl)), (Permutation x1 (x :: x1)), (Permutation x1 (a :: bl)), (Permutation x1 (a :: x1)), (Permutation x1 (gv0 :: bl)), (Permutation x1 (gv0 :: x1)), (Permutation x1 (x0 :: bl)), (Permutation x1 (x0 :: x1))
(Permutation x1 (selection_sort x1)), (Permutation x1 (selsort bl m)), (Permutation x1 (selsort bl y)), (Permutation x1 (selsort bl x)), (Permutation x1 (selsort bl a)), (Permutation x1 (selsort bl gv0)), (Permutation x1 (selsort bl x0)), (Permutation x1 (selsort x1 m)), (Permutation x1 (selsort x1 y)), (Permutation x1 (selsort x1 x))
(Permutation x1 (selsort x1 gv0)), (Permutation x1 (selsort x1 x0)), (Permutation x1 (bl ++ bl)), (Permutation x1 (bl ++ x1)), (Permutation x1 (x1 ++ bl)), (Permutation x1 (x1 ++ x1)), (Permutation x1 []), (Permutation (m :: bl) bl), (Permutation (m :: bl) x1), (Permutation (m :: bl) (m :: x1))
(Permutation (m :: bl) (y :: x1)), (Permutation (m :: bl) (x :: bl)), (Permutation (m :: bl) (x :: x1)), (Permutation (m :: bl) (a :: bl)), (Permutation (m :: bl) (a :: x1)), (Permutation (m :: bl) (gv0 :: bl)), (Permutation (m :: bl) (gv0 :: x1)), (Permutation (m :: bl) (x0 :: bl)), (Permutation (m :: bl) (x0 :: x1)), (Permutation (m :: bl) (selection_sort bl))
(Permutation (m :: bl) (selsort bl m)), (Permutation (m :: bl) (selsort bl y)), (Permutation (m :: bl) (selsort bl x)), (Permutation (m :: bl) (selsort bl a)), (Permutation (m :: bl) (selsort bl gv0)), (Permutation (m :: bl) (selsort bl x0)), (Permutation (m :: bl) (selsort x1 m)), (Permutation (m :: bl) (selsort x1 y)), (Permutation (m :: bl) (selsort x1 x)), (Permutation (m :: bl) (selsort x1 a))
(Permutation (m :: bl) (selsort x1 x0)), (Permutation (m :: bl) (bl ++ bl)), (Permutation (m :: bl) (bl ++ x1)), (Permutation (m :: bl) (x1 ++ bl)), (Permutation (m :: bl) (x1 ++ x1)), (Permutation (m :: bl) []), (Permutation (m :: x1) bl), (Permutation (m :: x1) x1), (Permutation (m :: x1) (m :: bl)), (Permutation (m :: x1) (y :: bl))
(Permutation (m :: x1) (x :: bl)), (Permutation (m :: x1) (x :: x1)), (Permutation (m :: x1) (a :: bl)), (Permutation (m :: x1) (a :: x1)), (Permutation (m :: x1) (gv0 :: bl)), (Permutation (m :: x1) (gv0 :: x1)), (Permutation (m :: x1) (x0 :: bl)), (Permutation (m :: x1) (x0 :: x1)), (Permutation (m :: x1) (selection_sort bl)), (Permutation (m :: x1) (selection_sort x1))
(Permutation (m :: x1) (selsort bl y)), (Permutation (m :: x1) (selsort bl x)), (Permutation (m :: x1) (selsort bl a)), (Permutation (m :: x1) (selsort bl gv0)), (Permutation (m :: x1) (selsort bl x0)), (Permutation (m :: x1) (selsort x1 m)), (Permutation (m :: x1) (selsort x1 y)), (Permutation (m :: x1) (selsort x1 x)), (Permutation (m :: x1) (selsort x1 a)), (Permutation (m :: x1) (selsort x1 gv0))
(Permutation (m :: x1) (bl ++ bl)), (Permutation (m :: x1) (bl ++ x1)), (Permutation (m :: x1) (x1 ++ bl)), (Permutation (m :: x1) (x1 ++ x1)), (Permutation (m :: x1) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) x1), (Permutation (y :: bl) (m :: bl)), (Permutation (y :: bl) (m :: x1)), (Permutation (y :: bl) (y :: x1))
(Permutation (y :: bl) (x :: x1)), (Permutation (y :: bl) (a :: bl)), (Permutation (y :: bl) (a :: x1)), (Permutation (y :: bl) (gv0 :: bl)), (Permutation (y :: bl) (gv0 :: x1)), (Permutation (y :: bl) (x0 :: bl)), (Permutation (y :: bl) (x0 :: x1)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort x1)), (Permutation (y :: bl) (selsort bl m))
(Permutation (y :: bl) (selsort bl x)), (Permutation (y :: bl) (selsort bl a)), (Permutation (y :: bl) (selsort bl gv0)), (Permutation (y :: bl) (selsort bl x0)), (Permutation (y :: bl) (selsort x1 m)), (Permutation (y :: bl) (selsort x1 y)), (Permutation (y :: bl) (selsort x1 x)), (Permutation (y :: bl) (selsort x1 a)), (Permutation (y :: bl) (selsort x1 gv0)), (Permutation (y :: bl) (selsort x1 x0))
(Permutation (y :: bl) (bl ++ x1)), (Permutation (y :: bl) (x1 ++ bl)), (Permutation (y :: bl) (x1 ++ x1)), (Permutation (y :: bl) []), (Permutation (y :: x1) bl), (Permutation (y :: x1) x1), (Permutation (y :: x1) (m :: bl)), (Permutation (y :: x1) (m :: x1)), (Permutation (y :: x1) (y :: bl)), (Permutation (y :: x1) (x :: bl))
(Permutation (y :: x1) (a :: bl)), (Permutation (y :: x1) (a :: x1)), (Permutation (y :: x1) (gv0 :: bl)), (Permutation (y :: x1) (gv0 :: x1)), (Permutation (y :: x1) (x0 :: bl)), (Permutation (y :: x1) (x0 :: x1)), (Permutation (y :: x1) (selection_sort bl)), (Permutation (y :: x1) (selection_sort x1)), (Permutation (y :: x1) (selsort bl m)), (Permutation (y :: x1) (selsort bl y))
(Permutation (y :: x1) (selsort bl a)), (Permutation (y :: x1) (selsort bl gv0)), (Permutation (y :: x1) (selsort bl x0)), (Permutation (y :: x1) (selsort x1 m)), (Permutation (y :: x1) (selsort x1 y)), (Permutation (y :: x1) (selsort x1 x)), (Permutation (y :: x1) (selsort x1 a)), (Permutation (y :: x1) (selsort x1 gv0)), (Permutation (y :: x1) (selsort x1 x0)), (Permutation (y :: x1) (bl ++ bl))
(Permutation (y :: x1) (x1 ++ bl)), (Permutation (y :: x1) (x1 ++ x1)), (Permutation (y :: x1) []), (Permutation (x :: bl) bl), (Permutation (x :: bl) x1), (Permutation (x :: bl) (m :: bl)), (Permutation (x :: bl) (m :: x1)), (Permutation (x :: bl) (y :: bl)), (Permutation (x :: bl) (y :: x1)), (Permutation (x :: bl) (x :: x1))
(Permutation (x :: bl) (a :: x1)), (Permutation (x :: bl) (gv0 :: bl)), (Permutation (x :: bl) (gv0 :: x1)), (Permutation (x :: bl) (x0 :: bl)), (Permutation (x :: bl) (x0 :: x1)), (Permutation (x :: bl) (selection_sort bl)), (Permutation (x :: bl) (selection_sort x1)), (Permutation (x :: bl) (selsort bl m)), (Permutation (x :: bl) (selsort bl y)), (Permutation (x :: bl) (selsort bl x))
(Permutation (x :: bl) (selsort bl gv0)), (Permutation (x :: bl) (selsort bl x0)), (Permutation (x :: bl) (selsort x1 m)), (Permutation (x :: bl) (selsort x1 y)), (Permutation (x :: bl) (selsort x1 x)), (Permutation (x :: bl) (selsort x1 a)), (Permutation (x :: bl) (selsort x1 gv0)), (Permutation (x :: bl) (selsort x1 x0)), (Permutation (x :: bl) (bl ++ bl)), (Permutation (x :: bl) (bl ++ x1))
(Permutation (x :: bl) (x1 ++ x1)), (Permutation (x :: bl) []), (Permutation (x :: x1) bl), (Permutation (x :: x1) x1), (Permutation (x :: x1) (m :: bl)), (Permutation (x :: x1) (m :: x1)), (Permutation (x :: x1) (y :: bl)), (Permutation (x :: x1) (y :: x1)), (Permutation (x :: x1) (x :: bl)), (Permutation (x :: x1) (a :: bl))
(Permutation (x :: x1) (gv0 :: bl)), (Permutation (x :: x1) (gv0 :: x1)), (Permutation (x :: x1) (x0 :: bl)), (Permutation (x :: x1) (x0 :: x1)), (Permutation (x :: x1) (selection_sort bl)), (Permutation (x :: x1) (selection_sort x1)), (Permutation (x :: x1) (selsort bl m)), (Permutation (x :: x1) (selsort bl y)), (Permutation (x :: x1) (selsort bl x)), (Permutation (x :: x1) (selsort bl a))
(Permutation (x :: x1) (selsort bl x0)), (Permutation (x :: x1) (selsort x1 m)), (Permutation (x :: x1) (selsort x1 y)), (Permutation (x :: x1) (selsort x1 x)), (Permutation (x :: x1) (selsort x1 a)), (Permutation (x :: x1) (selsort x1 gv0)), (Permutation (x :: x1) (selsort x1 x0)), (Permutation (x :: x1) (bl ++ bl)), (Permutation (x :: x1) (bl ++ x1)), (Permutation (x :: x1) (x1 ++ bl))
(Permutation (x :: x1) []), (Permutation (a :: bl) bl), (Permutation (a :: bl) x1), (Permutation (a :: bl) (m :: bl)), (Permutation (a :: bl) (m :: x1)), (Permutation (a :: bl) (y :: bl)), (Permutation (a :: bl) (y :: x1)), (Permutation (a :: bl) (x :: bl)), (Permutation (a :: bl) (x :: x1)), (Permutation (a :: bl) (a :: x1))
(Permutation (a :: bl) (gv0 :: x1)), (Permutation (a :: bl) (x0 :: bl)), (Permutation (a :: bl) (x0 :: x1)), (Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selection_sort x1)), (Permutation (a :: bl) (selsort bl m)), (Permutation (a :: bl) (selsort bl y)), (Permutation (a :: bl) (selsort bl x)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl gv0))
(Permutation (a :: bl) (selsort x1 m)), (Permutation (a :: bl) (selsort x1 y)), (Permutation (a :: bl) (selsort x1 x)), (Permutation (a :: bl) (selsort x1 a)), (Permutation (a :: bl) (selsort x1 gv0)), (Permutation (a :: bl) (selsort x1 x0)), (Permutation (a :: bl) (bl ++ bl)), (Permutation (a :: bl) (bl ++ x1)), (Permutation (a :: bl) (x1 ++ bl)), (Permutation (a :: bl) (x1 ++ x1))
(Permutation (a :: x1) bl), (Permutation (a :: x1) x1), (Permutation (a :: x1) (m :: bl)), (Permutation (a :: x1) (m :: x1)), (Permutation (a :: x1) (y :: bl)), (Permutation (a :: x1) (y :: x1)), (Permutation (a :: x1) (x :: bl)), (Permutation (a :: x1) (x :: x1)), (Permutation (a :: x1) (a :: bl)), (Permutation (a :: x1) (gv0 :: bl))
(Permutation (a :: x1) (x0 :: bl)), (Permutation (a :: x1) (x0 :: x1)), (Permutation (a :: x1) (selection_sort bl)), (Permutation (a :: x1) (selection_sort x1)), (Permutation (a :: x1) (selsort bl m)), (Permutation (a :: x1) (selsort bl y)), (Permutation (a :: x1) (selsort bl x)), (Permutation (a :: x1) (selsort bl a)), (Permutation (a :: x1) (selsort bl gv0)), (Permutation (a :: x1) (selsort bl x0))
(Permutation (a :: x1) (selsort x1 y)), (Permutation (a :: x1) (selsort x1 x)), (Permutation (a :: x1) (selsort x1 a)), (Permutation (a :: x1) (selsort x1 gv0)), (Permutation (a :: x1) (selsort x1 x0)), (Permutation (a :: x1) (bl ++ bl)), (Permutation (a :: x1) (bl ++ x1)), (Permutation (a :: x1) (x1 ++ bl)), (Permutation (a :: x1) (x1 ++ x1)), (Permutation (a :: x1) [])
(Permutation (gv0 :: bl) x1), (Permutation (gv0 :: bl) (m :: bl)), (Permutation (gv0 :: bl) (m :: x1)), (Permutation (gv0 :: bl) (y :: bl)), (Permutation (gv0 :: bl) (y :: x1)), (Permutation (gv0 :: bl) (x :: bl)), (Permutation (gv0 :: bl) (x :: x1)), (Permutation (gv0 :: bl) (a :: bl)), (Permutation (gv0 :: bl) (a :: x1)), (Permutation (gv0 :: bl) (gv0 :: x1))
(Permutation (gv0 :: bl) (x0 :: x1)), (Permutation (gv0 :: bl) (selection_sort bl)), (Permutation (gv0 :: bl) (selection_sort x1)), (Permutation (gv0 :: bl) (selsort bl m)), (Permutation (gv0 :: bl) (selsort bl y)), (Permutation (gv0 :: bl) (selsort bl x)), (Permutation (gv0 :: bl) (selsort bl a)), (Permutation (gv0 :: bl) (selsort bl gv0)), (Permutation (gv0 :: bl) (selsort bl x0)), (Permutation (gv0 :: bl) (selsort x1 m))
(Permutation (gv0 :: bl) (selsort x1 x)), (Permutation (gv0 :: bl) (selsort x1 a)), (Permutation (gv0 :: bl) (selsort x1 gv0)), (Permutation (gv0 :: bl) (selsort x1 x0)), (Permutation (gv0 :: bl) (bl ++ bl)), (Permutation (gv0 :: bl) (bl ++ x1)), (Permutation (gv0 :: bl) (x1 ++ bl)), (Permutation (gv0 :: bl) (x1 ++ x1)), (Permutation (gv0 :: bl) []), (Permutation (gv0 :: x1) bl)
(Permutation (gv0 :: x1) (m :: bl)), (Permutation (gv0 :: x1) (m :: x1)), (Permutation (gv0 :: x1) (y :: bl)), (Permutation (gv0 :: x1) (y :: x1)), (Permutation (gv0 :: x1) (x :: bl)), (Permutation (gv0 :: x1) (x :: x1)), (Permutation (gv0 :: x1) (a :: bl)), (Permutation (gv0 :: x1) (a :: x1)), (Permutation (gv0 :: x1) (gv0 :: bl)), (Permutation (gv0 :: x1) (x0 :: bl))
(Permutation (gv0 :: x1) (selection_sort bl)), (Permutation (gv0 :: x1) (selection_sort x1)), (Permutation (gv0 :: x1) (selsort bl m)), (Permutation (gv0 :: x1) (selsort bl y)), (Permutation (gv0 :: x1) (selsort bl x)), (Permutation (gv0 :: x1) (selsort bl a)), (Permutation (gv0 :: x1) (selsort bl gv0)), (Permutation (gv0 :: x1) (selsort bl x0)), (Permutation (gv0 :: x1) (selsort x1 m)), (Permutation (gv0 :: x1) (selsort x1 y))
(Permutation (gv0 :: x1) (selsort x1 a)), (Permutation (gv0 :: x1) (selsort x1 gv0)), (Permutation (gv0 :: x1) (selsort x1 x0)), (Permutation (gv0 :: x1) (bl ++ bl)), (Permutation (gv0 :: x1) (bl ++ x1)), (Permutation (gv0 :: x1) (x1 ++ bl)), (Permutation (gv0 :: x1) (x1 ++ x1)), (Permutation (gv0 :: x1) []), (Permutation (x0 :: bl) bl), (Permutation (x0 :: bl) x1)
(Permutation (x0 :: bl) (m :: x1)), (Permutation (x0 :: bl) (y :: bl)), (Permutation (x0 :: bl) (y :: x1)), (Permutation (x0 :: bl) (x :: bl)), (Permutation (x0 :: bl) (x :: x1)), (Permutation (x0 :: bl) (a :: bl)), (Permutation (x0 :: bl) (a :: x1)), (Permutation (x0 :: bl) (gv0 :: bl)), (Permutation (x0 :: bl) (gv0 :: x1)), (Permutation (x0 :: bl) (x0 :: x1))
(Permutation (x0 :: bl) (selection_sort x1)), (Permutation (x0 :: bl) (selsort bl m)), (Permutation (x0 :: bl) (selsort bl y)), (Permutation (x0 :: bl) (selsort bl x)), (Permutation (x0 :: bl) (selsort bl a)), (Permutation (x0 :: bl) (selsort bl gv0)), (Permutation (x0 :: bl) (selsort bl x0)), (Permutation (x0 :: bl) (selsort x1 m)), (Permutation (x0 :: bl) (selsort x1 y)), (Permutation (x0 :: bl) (selsort x1 x))
(Permutation (x0 :: bl) (selsort x1 gv0)), (Permutation (x0 :: bl) (selsort x1 x0)), (Permutation (x0 :: bl) (bl ++ bl)), (Permutation (x0 :: bl) (bl ++ x1)), (Permutation (x0 :: bl) (x1 ++ bl)), (Permutation (x0 :: bl) (x1 ++ x1)), (Permutation (x0 :: bl) []), (Permutation (x0 :: x1) bl), (Permutation (x0 :: x1) x1), (Permutation (x0 :: x1) (m :: bl))
(Permutation (x0 :: x1) (y :: bl)), (Permutation (x0 :: x1) (y :: x1)), (Permutation (x0 :: x1) (x :: bl)), (Permutation (x0 :: x1) (x :: x1)), (Permutation (x0 :: x1) (a :: bl)), (Permutation (x0 :: x1) (a :: x1)), (Permutation (x0 :: x1) (gv0 :: bl)), (Permutation (x0 :: x1) (gv0 :: x1)), (Permutation (x0 :: x1) (x0 :: bl)), (Permutation (x0 :: x1) (selection_sort bl))
(Permutation (x0 :: x1) (selsort bl m)), (Permutation (x0 :: x1) (selsort bl y)), (Permutation (x0 :: x1) (selsort bl x)), (Permutation (x0 :: x1) (selsort bl a)), (Permutation (x0 :: x1) (selsort bl gv0)), (Permutation (x0 :: x1) (selsort bl x0)), (Permutation (x0 :: x1) (selsort x1 m)), (Permutation (x0 :: x1) (selsort x1 y)), (Permutation (x0 :: x1) (selsort x1 x)), (Permutation (x0 :: x1) (selsort x1 a))
(Permutation (x0 :: x1) (selsort x1 x0)), (Permutation (x0 :: x1) (bl ++ bl)), (Permutation (x0 :: x1) (bl ++ x1)), (Permutation (x0 :: x1) (x1 ++ bl)), (Permutation (x0 :: x1) (x1 ++ x1)), (Permutation (x0 :: x1) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) x1), (Permutation (selection_sort bl) (m :: bl)), (Permutation (selection_sort bl) (m :: x1))
(Permutation (selection_sort bl) (y :: x1)), (Permutation (selection_sort bl) (x :: bl)), (Permutation (selection_sort bl) (x :: x1)), (Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (a :: x1)), (Permutation (selection_sort bl) (gv0 :: bl)), (Permutation (selection_sort bl) (gv0 :: x1)), (Permutation (selection_sort bl) (x0 :: bl)), (Permutation (selection_sort bl) (x0 :: x1)), (Permutation (selection_sort bl) (selection_sort x1))
(Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort bl x)), (Permutation (selection_sort bl) (selsort bl a)), (Permutation (selection_sort bl) (selsort bl gv0)), (Permutation (selection_sort bl) (selsort bl x0)), (Permutation (selection_sort bl) (selsort x1 m)), (Permutation (selection_sort bl) (selsort x1 y)), (Permutation (selection_sort bl) (selsort x1 x)), (Permutation (selection_sort bl) (selsort x1 a)), (Permutation (selection_sort bl) (selsort x1 gv0))
(Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ x1)), (Permutation (selection_sort bl) (x1 ++ bl)), (Permutation (selection_sort bl) (x1 ++ x1)), (Permutation (selection_sort bl) []), (Permutation (selection_sort x1) bl), (Permutation (selection_sort x1) x1), (Permutation (selection_sort x1) (m :: bl)), (Permutation (selection_sort x1) (m :: x1)), (Permutation (selection_sort x1) (y :: bl))
(Permutation (selection_sort x1) (x :: bl)), (Permutation (selection_sort x1) (x :: x1)), (Permutation (selection_sort x1) (a :: bl)), (Permutation (selection_sort x1) (a :: x1)), (Permutation (selection_sort x1) (gv0 :: bl)), (Permutation (selection_sort x1) (gv0 :: x1)), (Permutation (selection_sort x1) (x0 :: bl)), (Permutation (selection_sort x1) (x0 :: x1)), (Permutation (selection_sort x1) (selection_sort bl)), (Permutation (selection_sort x1) (selsort bl m))
(Permutation (selection_sort x1) (selsort bl x)), (Permutation (selection_sort x1) (selsort bl a)), (Permutation (selection_sort x1) (selsort bl gv0)), (Permutation (selection_sort x1) (selsort bl x0)), (Permutation (selection_sort x1) (selsort x1 m)), (Permutation (selection_sort x1) (selsort x1 y)), (Permutation (selection_sort x1) (selsort x1 x)), (Permutation (selection_sort x1) (selsort x1 a)), (Permutation (selection_sort x1) (selsort x1 gv0)), (Permutation (selection_sort x1) (selsort x1 x0))
(Permutation (selection_sort x1) (bl ++ x1)), (Permutation (selection_sort x1) (x1 ++ bl)), (Permutation (selection_sort x1) (x1 ++ x1)), (Permutation (selection_sort x1) []), (Permutation (selsort bl m) bl), (Permutation (selsort bl m) x1), (Permutation (selsort bl m) (m :: bl)), (Permutation (selsort bl m) (m :: x1)), (Permutation (selsort bl m) (y :: bl)), (Permutation (selsort bl m) (y :: x1))
(Permutation (selsort bl m) (x :: x1)), (Permutation (selsort bl m) (a :: bl)), (Permutation (selsort bl m) (a :: x1)), (Permutation (selsort bl m) (gv0 :: bl)), (Permutation (selsort bl m) (gv0 :: x1)), (Permutation (selsort bl m) (x0 :: bl)), (Permutation (selsort bl m) (x0 :: x1)), (Permutation (selsort bl m) (selection_sort bl)), (Permutation (selsort bl m) (selection_sort x1)), (Permutation (selsort bl m) (selsort bl y))
(Permutation (selsort bl m) (selsort bl a)), (Permutation (selsort bl m) (selsort bl gv0)), (Permutation (selsort bl m) (selsort bl x0)), (Permutation (selsort bl m) (selsort x1 m)), (Permutation (selsort bl m) (selsort x1 y)), (Permutation (selsort bl m) (selsort x1 x)), (Permutation (selsort bl m) (selsort x1 a)), (Permutation (selsort bl m) (selsort x1 gv0)), (Permutation (selsort bl m) (selsort x1 x0)), (Permutation (selsort bl m) (bl ++ bl))
(Permutation (selsort bl m) (x1 ++ bl)), (Permutation (selsort bl m) (x1 ++ x1)), (Permutation (selsort bl m) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) x1), (Permutation (selsort bl y) (m :: bl)), (Permutation (selsort bl y) (m :: x1)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: x1)), (Permutation (selsort bl y) (x :: bl))
(Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (a :: x1)), (Permutation (selsort bl y) (gv0 :: bl)), (Permutation (selsort bl y) (gv0 :: x1)), (Permutation (selsort bl y) (x0 :: bl)), (Permutation (selsort bl y) (x0 :: x1)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort x1)), (Permutation (selsort bl y) (selsort bl m)), (Permutation (selsort bl y) (selsort bl x))
(Permutation (selsort bl y) (selsort bl gv0)), (Permutation (selsort bl y) (selsort bl x0)), (Permutation (selsort bl y) (selsort x1 m)), (Permutation (selsort bl y) (selsort x1 y)), (Permutation (selsort bl y) (selsort x1 x)), (Permutation (selsort bl y) (selsort x1 a)), (Permutation (selsort bl y) (selsort x1 gv0)), (Permutation (selsort bl y) (selsort x1 x0)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ x1))
(Permutation (selsort bl y) (x1 ++ x1)), (Permutation (selsort bl y) []), (Permutation (selsort bl x) bl), (Permutation (selsort bl x) x1), (Permutation (selsort bl x) (m :: bl)), (Permutation (selsort bl x) (m :: x1)), (Permutation (selsort bl x) (y :: bl)), (Permutation (selsort bl x) (y :: x1)), (Permutation (selsort bl x) (x :: bl)), (Permutation (selsort bl x) (x :: x1))
(Permutation (selsort bl x) (a :: x1)), (Permutation (selsort bl x) (gv0 :: bl)), (Permutation (selsort bl x) (gv0 :: x1)), (Permutation (selsort bl x) (x0 :: bl)), (Permutation (selsort bl x) (x0 :: x1)), (Permutation (selsort bl x) (selection_sort bl)), (Permutation (selsort bl x) (selection_sort x1)), (Permutation (selsort bl x) (selsort bl m)), (Permutation (selsort bl x) (selsort bl y)), (Permutation (selsort bl x) (selsort bl a))
(Permutation (selsort bl x) (selsort bl x0)), (Permutation (selsort bl x) (selsort x1 m)), (Permutation (selsort bl x) (selsort x1 y)), (Permutation (selsort bl x) (selsort x1 x)), (Permutation (selsort bl x) (selsort x1 a)), (Permutation (selsort bl x) (selsort x1 gv0)), (Permutation (selsort bl x) (selsort x1 x0)), (Permutation (selsort bl x) (bl ++ bl)), (Permutation (selsort bl x) (bl ++ x1)), (Permutation (selsort bl x) (x1 ++ bl))
(Permutation (selsort bl x) []), (Permutation (selsort bl a) bl), (Permutation (selsort bl a) x1), (Permutation (selsort bl a) (m :: bl)), (Permutation (selsort bl a) (m :: x1)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (y :: x1)), (Permutation (selsort bl a) (x :: bl)), (Permutation (selsort bl a) (x :: x1)), (Permutation (selsort bl a) (a :: bl))
(Permutation (selsort bl a) (gv0 :: bl)), (Permutation (selsort bl a) (gv0 :: x1)), (Permutation (selsort bl a) (x0 :: bl)), (Permutation (selsort bl a) (x0 :: x1)), (Permutation (selsort bl a) (selection_sort bl)), (Permutation (selsort bl a) (selection_sort x1)), (Permutation (selsort bl a) (selsort bl m)), (Permutation (selsort bl a) (selsort bl y)), (Permutation (selsort bl a) (selsort bl x)), (Permutation (selsort bl a) (selsort bl gv0))
(Permutation (selsort bl a) (selsort x1 m)), (Permutation (selsort bl a) (selsort x1 y)), (Permutation (selsort bl a) (selsort x1 x)), (Permutation (selsort bl a) (selsort x1 a)), (Permutation (selsort bl a) (selsort x1 gv0)), (Permutation (selsort bl a) (selsort x1 x0)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) (bl ++ x1)), (Permutation (selsort bl a) (x1 ++ bl)), (Permutation (selsort bl a) (x1 ++ x1))
(Permutation (selsort bl gv0) bl), (Permutation (selsort bl gv0) x1), (Permutation (selsort bl gv0) (m :: bl)), (Permutation (selsort bl gv0) (m :: x1)), (Permutation (selsort bl gv0) (y :: bl)), (Permutation (selsort bl gv0) (y :: x1)), (Permutation (selsort bl gv0) (x :: bl)), (Permutation (selsort bl gv0) (x :: x1)), (Permutation (selsort bl gv0) (a :: bl)), (Permutation (selsort bl gv0) (a :: x1))
(Permutation (selsort bl gv0) (gv0 :: x1)), (Permutation (selsort bl gv0) (x0 :: bl)), (Permutation (selsort bl gv0) (x0 :: x1)), (Permutation (selsort bl gv0) (selection_sort bl)), (Permutation (selsort bl gv0) (selection_sort x1)), (Permutation (selsort bl gv0) (selsort bl m)), (Permutation (selsort bl gv0) (selsort bl y)), (Permutation (selsort bl gv0) (selsort bl x)), (Permutation (selsort bl gv0) (selsort bl a)), (Permutation (selsort bl gv0) (selsort bl x0))
(Permutation (selsort bl gv0) (selsort x1 y)), (Permutation (selsort bl gv0) (selsort x1 x)), (Permutation (selsort bl gv0) (selsort x1 a)), (Permutation (selsort bl gv0) (selsort x1 gv0)), (Permutation (selsort bl gv0) (selsort x1 x0)), (Permutation (selsort bl gv0) (bl ++ bl)), (Permutation (selsort bl gv0) (bl ++ x1)), (Permutation (selsort bl gv0) (x1 ++ bl)), (Permutation (selsort bl gv0) (x1 ++ x1)), (Permutation (selsort bl gv0) [])
(Permutation (selsort bl x0) x1), (Permutation (selsort bl x0) (m :: bl)), (Permutation (selsort bl x0) (m :: x1)), (Permutation (selsort bl x0) (y :: bl)), (Permutation (selsort bl x0) (y :: x1)), (Permutation (selsort bl x0) (x :: bl)), (Permutation (selsort bl x0) (x :: x1)), (Permutation (selsort bl x0) (a :: bl)), (Permutation (selsort bl x0) (a :: x1)), (Permutation (selsort bl x0) (gv0 :: bl))
(Permutation (selsort bl x0) (x0 :: bl)), (Permutation (selsort bl x0) (x0 :: x1)), (Permutation (selsort bl x0) (selection_sort bl)), (Permutation (selsort bl x0) (selection_sort x1)), (Permutation (selsort bl x0) (selsort bl m)), (Permutation (selsort bl x0) (selsort bl y)), (Permutation (selsort bl x0) (selsort bl x)), (Permutation (selsort bl x0) (selsort bl a)), (Permutation (selsort bl x0) (selsort bl gv0)), (Permutation (selsort bl x0) (selsort x1 m))
(Permutation (selsort bl x0) (selsort x1 x)), (Permutation (selsort bl x0) (selsort x1 a)), (Permutation (selsort bl x0) (selsort x1 gv0)), (Permutation (selsort bl x0) (selsort x1 x0)), (Permutation (selsort bl x0) (bl ++ bl)), (Permutation (selsort bl x0) (bl ++ x1)), (Permutation (selsort bl x0) (x1 ++ bl)), (Permutation (selsort bl x0) (x1 ++ x1)), (Permutation (selsort bl x0) []), (Permutation (selsort x1 m) bl)
(Permutation (selsort x1 m) (m :: bl)), (Permutation (selsort x1 m) (m :: x1)), (Permutation (selsort x1 m) (y :: bl)), (Permutation (selsort x1 m) (y :: x1)), (Permutation (selsort x1 m) (x :: bl)), (Permutation (selsort x1 m) (x :: x1)), (Permutation (selsort x1 m) (a :: bl)), (Permutation (selsort x1 m) (a :: x1)), (Permutation (selsort x1 m) (gv0 :: bl)), (Permutation (selsort x1 m) (gv0 :: x1))
(Permutation (selsort x1 m) (x0 :: x1)), (Permutation (selsort x1 m) (selection_sort bl)), (Permutation (selsort x1 m) (selection_sort x1)), (Permutation (selsort x1 m) (selsort bl m)), (Permutation (selsort x1 m) (selsort bl y)), (Permutation (selsort x1 m) (selsort bl x)), (Permutation (selsort x1 m) (selsort bl a)), (Permutation (selsort x1 m) (selsort bl gv0)), (Permutation (selsort x1 m) (selsort bl x0)), (Permutation (selsort x1 m) (selsort x1 y))
(Permutation (selsort x1 m) (selsort x1 a)), (Permutation (selsort x1 m) (selsort x1 gv0)), (Permutation (selsort x1 m) (selsort x1 x0)), (Permutation (selsort x1 m) (bl ++ bl)), (Permutation (selsort x1 m) (bl ++ x1)), (Permutation (selsort x1 m) (x1 ++ bl)), (Permutation (selsort x1 m) (x1 ++ x1)), (Permutation (selsort x1 m) []), (Permutation (selsort x1 y) bl), (Permutation (selsort x1 y) x1)
(Permutation (selsort x1 y) (m :: x1)), (Permutation (selsort x1 y) (y :: bl)), (Permutation (selsort x1 y) (y :: x1)), (Permutation (selsort x1 y) (x :: bl)), (Permutation (selsort x1 y) (x :: x1)), (Permutation (selsort x1 y) (a :: bl)), (Permutation (selsort x1 y) (a :: x1)), (Permutation (selsort x1 y) (gv0 :: bl)), (Permutation (selsort x1 y) (gv0 :: x1)), (Permutation (selsort x1 y) (x0 :: bl))
(Permutation (selsort x1 y) (selection_sort bl)), (Permutation (selsort x1 y) (selection_sort x1)), (Permutation (selsort x1 y) (selsort bl m)), (Permutation (selsort x1 y) (selsort bl y)), (Permutation (selsort x1 y) (selsort bl x)), (Permutation (selsort x1 y) (selsort bl a)), (Permutation (selsort x1 y) (selsort bl gv0)), (Permutation (selsort x1 y) (selsort bl x0)), (Permutation (selsort x1 y) (selsort x1 m)), (Permutation (selsort x1 y) (selsort x1 x))
(Permutation (selsort x1 y) (selsort x1 gv0)), (Permutation (selsort x1 y) (selsort x1 x0)), (Permutation (selsort x1 y) (bl ++ bl)), (Permutation (selsort x1 y) (bl ++ x1)), (Permutation (selsort x1 y) (x1 ++ bl)), (Permutation (selsort x1 y) (x1 ++ x1)), (Permutation (selsort x1 y) []), (Permutation (selsort x1 x) bl), (Permutation (selsort x1 x) x1), (Permutation (selsort x1 x) (m :: bl))
(Permutation (selsort x1 x) (y :: bl)), (Permutation (selsort x1 x) (y :: x1)), (Permutation (selsort x1 x) (x :: bl)), (Permutation (selsort x1 x) (x :: x1)), (Permutation (selsort x1 x) (a :: bl)), (Permutation (selsort x1 x) (a :: x1)), (Permutation (selsort x1 x) (gv0 :: bl)), (Permutation (selsort x1 x) (gv0 :: x1)), (Permutation (selsort x1 x) (x0 :: bl)), (Permutation (selsort x1 x) (x0 :: x1))
(Permutation (selsort x1 x) (selection_sort x1)), (Permutation (selsort x1 x) (selsort bl m)), (Permutation (selsort x1 x) (selsort bl y)), (Permutation (selsort x1 x) (selsort bl x)), (Permutation (selsort x1 x) (selsort bl a)), (Permutation (selsort x1 x) (selsort bl gv0)), (Permutation (selsort x1 x) (selsort bl x0)), (Permutation (selsort x1 x) (selsort x1 m)), (Permutation (selsort x1 x) (selsort x1 y)), (Permutation (selsort x1 x) (selsort x1 a))
(Permutation (selsort x1 x) (selsort x1 x0)), (Permutation (selsort x1 x) (bl ++ bl)), (Permutation (selsort x1 x) (bl ++ x1)), (Permutation (selsort x1 x) (x1 ++ bl)), (Permutation (selsort x1 x) (x1 ++ x1)), (Permutation (selsort x1 x) []), (Permutation (selsort x1 a) bl), (Permutation (selsort x1 a) x1), (Permutation (selsort x1 a) (m :: bl)), (Permutation (selsort x1 a) (m :: x1))
(Permutation (selsort x1 a) (y :: x1)), (Permutation (selsort x1 a) (x :: bl)), (Permutation (selsort x1 a) (x :: x1)), (Permutation (selsort x1 a) (a :: bl)), (Permutation (selsort x1 a) (a :: x1)), (Permutation (selsort x1 a) (gv0 :: bl)), (Permutation (selsort x1 a) (gv0 :: x1)), (Permutation (selsort x1 a) (x0 :: bl)), (Permutation (selsort x1 a) (x0 :: x1)), (Permutation (selsort x1 a) (selection_sort bl))
(Permutation (selsort x1 a) (selsort bl m)), (Permutation (selsort x1 a) (selsort bl y)), (Permutation (selsort x1 a) (selsort bl x)), (Permutation (selsort x1 a) (selsort bl a)), (Permutation (selsort x1 a) (selsort bl gv0)), (Permutation (selsort x1 a) (selsort bl x0)), (Permutation (selsort x1 a) (selsort x1 m)), (Permutation (selsort x1 a) (selsort x1 y)), (Permutation (selsort x1 a) (selsort x1 x)), (Permutation (selsort x1 a) (selsort x1 gv0))
(Permutation (selsort x1 a) (bl ++ bl)), (Permutation (selsort x1 a) (bl ++ x1)), (Permutation (selsort x1 a) (x1 ++ bl)), (Permutation (selsort x1 a) (x1 ++ x1)), (Permutation (selsort x1 a) []), (Permutation (selsort x1 gv0) bl), (Permutation (selsort x1 gv0) x1), (Permutation (selsort x1 gv0) (m :: bl)), (Permutation (selsort x1 gv0) (m :: x1)), (Permutation (selsort x1 gv0) (y :: bl))
(Permutation (selsort x1 gv0) (x :: bl)), (Permutation (selsort x1 gv0) (x :: x1)), (Permutation (selsort x1 gv0) (a :: bl)), (Permutation (selsort x1 gv0) (a :: x1)), (Permutation (selsort x1 gv0) (gv0 :: bl)), (Permutation (selsort x1 gv0) (gv0 :: x1)), (Permutation (selsort x1 gv0) (x0 :: bl)), (Permutation (selsort x1 gv0) (x0 :: x1)), (Permutation (selsort x1 gv0) (selection_sort bl)), (Permutation (selsort x1 gv0) (selection_sort x1))
(Permutation (selsort x1 gv0) (selsort bl y)), (Permutation (selsort x1 gv0) (selsort bl x)), (Permutation (selsort x1 gv0) (selsort bl a)), (Permutation (selsort x1 gv0) (selsort bl gv0)), (Permutation (selsort x1 gv0) (selsort bl x0)), (Permutation (selsort x1 gv0) (selsort x1 m)), (Permutation (selsort x1 gv0) (selsort x1 y)), (Permutation (selsort x1 gv0) (selsort x1 x)), (Permutation (selsort x1 gv0) (selsort x1 a)), (Permutation (selsort x1 gv0) (selsort x1 x0))
(Permutation (selsort x1 gv0) (bl ++ x1)), (Permutation (selsort x1 gv0) (x1 ++ bl)), (Permutation (selsort x1 gv0) (x1 ++ x1)), (Permutation (selsort x1 gv0) []), (Permutation (selsort x1 x0) bl), (Permutation (selsort x1 x0) x1), (Permutation (selsort x1 x0) (m :: bl)), (Permutation (selsort x1 x0) (m :: x1)), (Permutation (selsort x1 x0) (y :: bl)), (Permutation (selsort x1 x0) (y :: x1))
(Permutation (selsort x1 x0) (x :: x1)), (Permutation (selsort x1 x0) (a :: bl)), (Permutation (selsort x1 x0) (a :: x1)), (Permutation (selsort x1 x0) (gv0 :: bl)), (Permutation (selsort x1 x0) (gv0 :: x1)), (Permutation (selsort x1 x0) (x0 :: bl)), (Permutation (selsort x1 x0) (x0 :: x1)), (Permutation (selsort x1 x0) (selection_sort bl)), (Permutation (selsort x1 x0) (selection_sort x1)), (Permutation (selsort x1 x0) (selsort bl m))
(Permutation (selsort x1 x0) (selsort bl x)), (Permutation (selsort x1 x0) (selsort bl a)), (Permutation (selsort x1 x0) (selsort bl gv0)), (Permutation (selsort x1 x0) (selsort bl x0)), (Permutation (selsort x1 x0) (selsort x1 m)), (Permutation (selsort x1 x0) (selsort x1 y)), (Permutation (selsort x1 x0) (selsort x1 x)), (Permutation (selsort x1 x0) (selsort x1 a)), (Permutation (selsort x1 x0) (selsort x1 gv0)), (Permutation (selsort x1 x0) (bl ++ bl))
(Permutation (selsort x1 x0) (x1 ++ bl)), (Permutation (selsort x1 x0) (x1 ++ x1)), (Permutation (selsort x1 x0) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) x1), (Permutation (bl ++ bl) (m :: bl)), (Permutation (bl ++ bl) (m :: x1)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: x1)), (Permutation (bl ++ bl) (x :: bl))
(Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (a :: x1)), (Permutation (bl ++ bl) (gv0 :: bl)), (Permutation (bl ++ bl) (gv0 :: x1)), (Permutation (bl ++ bl) (x0 :: bl)), (Permutation (bl ++ bl) (x0 :: x1)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort x1)), (Permutation (bl ++ bl) (selsort bl m)), (Permutation (bl ++ bl) (selsort bl y))
(Permutation (bl ++ bl) (selsort bl a)), (Permutation (bl ++ bl) (selsort bl gv0)), (Permutation (bl ++ bl) (selsort bl x0)), (Permutation (bl ++ bl) (selsort x1 m)), (Permutation (bl ++ bl) (selsort x1 y)), (Permutation (bl ++ bl) (selsort x1 x)), (Permutation (bl ++ bl) (selsort x1 a)), (Permutation (bl ++ bl) (selsort x1 gv0)), (Permutation (bl ++ bl) (selsort x1 x0)), (Permutation (bl ++ bl) (bl ++ x1))
(Permutation (bl ++ bl) (x1 ++ x1)), (Permutation (bl ++ bl) []), (Permutation (bl ++ x1) bl), (Permutation (bl ++ x1) x1), (Permutation (bl ++ x1) (m :: bl)), (Permutation (bl ++ x1) (m :: x1)), (Permutation (bl ++ x1) (y :: bl)), (Permutation (bl ++ x1) (y :: x1)), (Permutation (bl ++ x1) (x :: bl)), (Permutation (bl ++ x1) (x :: x1))
(Permutation (bl ++ x1) (a :: x1)), (Permutation (bl ++ x1) (gv0 :: bl)), (Permutation (bl ++ x1) (gv0 :: x1)), (Permutation (bl ++ x1) (x0 :: bl)), (Permutation (bl ++ x1) (x0 :: x1)), (Permutation (bl ++ x1) (selection_sort bl)), (Permutation (bl ++ x1) (selection_sort x1)), (Permutation (bl ++ x1) (selsort bl m)), (Permutation (bl ++ x1) (selsort bl y)), (Permutation (bl ++ x1) (selsort bl x))
(Permutation (bl ++ x1) (selsort bl gv0)), (Permutation (bl ++ x1) (selsort bl x0)), (Permutation (bl ++ x1) (selsort x1 m)), (Permutation (bl ++ x1) (selsort x1 y)), (Permutation (bl ++ x1) (selsort x1 x)), (Permutation (bl ++ x1) (selsort x1 a)), (Permutation (bl ++ x1) (selsort x1 gv0)), (Permutation (bl ++ x1) (selsort x1 x0)), (Permutation (bl ++ x1) (bl ++ bl)), (Permutation (bl ++ x1) (x1 ++ bl))
(Permutation (bl ++ x1) []), (Permutation (x1 ++ bl) bl), (Permutation (x1 ++ bl) x1), (Permutation (x1 ++ bl) (m :: bl)), (Permutation (x1 ++ bl) (m :: x1)), (Permutation (x1 ++ bl) (y :: bl)), (Permutation (x1 ++ bl) (y :: x1)), (Permutation (x1 ++ bl) (x :: bl)), (Permutation (x1 ++ bl) (x :: x1)), (Permutation (x1 ++ bl) (a :: bl))
(Permutation (x1 ++ bl) (gv0 :: bl)), (Permutation (x1 ++ bl) (gv0 :: x1)), (Permutation (x1 ++ bl) (x0 :: bl)), (Permutation (x1 ++ bl) (x0 :: x1)), (Permutation (x1 ++ bl) (selection_sort bl)), (Permutation (x1 ++ bl) (selection_sort x1)), (Permutation (x1 ++ bl) (selsort bl m)), (Permutation (x1 ++ bl) (selsort bl y)), (Permutation (x1 ++ bl) (selsort bl x)), (Permutation (x1 ++ bl) (selsort bl a))
(Permutation (x1 ++ bl) (selsort bl x0)), (Permutation (x1 ++ bl) (selsort x1 m)), (Permutation (x1 ++ bl) (selsort x1 y)), (Permutation (x1 ++ bl) (selsort x1 x)), (Permutation (x1 ++ bl) (selsort x1 a)), (Permutation (x1 ++ bl) (selsort x1 gv0)), (Permutation (x1 ++ bl) (selsort x1 x0)), (Permutation (x1 ++ bl) (bl ++ bl)), (Permutation (x1 ++ bl) (bl ++ x1)), (Permutation (x1 ++ bl) (x1 ++ x1))
(Permutation (x1 ++ x1) bl), (Permutation (x1 ++ x1) x1), (Permutation (x1 ++ x1) (m :: bl)), (Permutation (x1 ++ x1) (m :: x1)), (Permutation (x1 ++ x1) (y :: bl)), (Permutation (x1 ++ x1) (y :: x1)), (Permutation (x1 ++ x1) (x :: bl)), (Permutation (x1 ++ x1) (x :: x1)), (Permutation (x1 ++ x1) (a :: bl)), (Permutation (x1 ++ x1) (a :: x1))
(Permutation (x1 ++ x1) (gv0 :: x1)), (Permutation (x1 ++ x1) (x0 :: bl)), (Permutation (x1 ++ x1) (x0 :: x1)), (Permutation (x1 ++ x1) (selection_sort bl)), (Permutation (x1 ++ x1) (selection_sort x1)), (Permutation (x1 ++ x1) (selsort bl m)), (Permutation (x1 ++ x1) (selsort bl y)), (Permutation (x1 ++ x1) (selsort bl x)), (Permutation (x1 ++ x1) (selsort bl a)), (Permutation (x1 ++ x1) (selsort bl gv0))
(Permutation (x1 ++ x1) (selsort x1 m)), (Permutation (x1 ++ x1) (selsort x1 y)), (Permutation (x1 ++ x1) (selsort x1 x)), (Permutation (x1 ++ x1) (selsort x1 a)), (Permutation (x1 ++ x1) (selsort x1 gv0)), (Permutation (x1 ++ x1) (selsort x1 x0)), (Permutation (x1 ++ x1) (bl ++ bl)), (Permutation (x1 ++ x1) (bl ++ x1)), (Permutation (x1 ++ x1) (x1 ++ bl)), (Permutation (x1 ++ x1) [])
(Permutation [] x1), (Permutation [] (m :: bl)), (Permutation [] (m :: x1)), (Permutation [] (y :: bl)), (Permutation [] (y :: x1)), (Permutation [] (x :: bl)), (Permutation [] (x :: x1)), (Permutation [] (a :: bl)), (Permutation [] (a :: x1)), (Permutation [] (gv0 :: bl))
(Permutation [] (x0 :: bl)), (Permutation [] (x0 :: x1)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort x1)), (Permutation [] (selsort bl m)), (Permutation [] (selsort bl y)), (Permutation [] (selsort bl x)), (Permutation [] (selsort bl a)), (Permutation [] (selsort bl gv0)), (Permutation [] (selsort bl x0))
(Permutation [] (selsort x1 y)), (Permutation [] (selsort x1 x)), (Permutation [] (selsort x1 a)), (Permutation [] (selsort x1 gv0)), (Permutation [] (selsort x1 x0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ x1)), (Permutation [] (x1 ++ bl)), (Permutation [] (x1 ++ x1)), (In m (m :: bl))
(In m (y :: bl)), (In m (y :: x1)), (In m (x :: bl)), (In m (x :: x1)), (In m (a :: bl)), (In m (a :: x1)), (In m (gv0 :: bl)), (In m (gv0 :: x1)), (In m (x0 :: bl)), (In m (x0 :: x1))
(In m (selection_sort x1)), (In m (selsort bl m)), (In m (selsort bl y)), (In m (selsort bl x)), (In m (selsort bl a)), (In m (selsort bl gv0)), (In m (selsort bl x0)), (In m (selsort x1 m)), (In m (selsort x1 y)), (In m (selsort x1 x))
(In m (selsort x1 gv0)), (In m (selsort x1 x0)), (In m (bl ++ bl)), (In m (bl ++ x1)), (In m (x1 ++ bl)), (In m (x1 ++ x1)), (In y (m :: bl)), (In y (m :: x1)), (In y (y :: bl)), (In y (y :: x1))
(In y (x :: x1)), (In y (a :: bl)), (In y (a :: x1)), (In y (gv0 :: bl)), (In y (gv0 :: x1)), (In y (x0 :: bl)), (In y (x0 :: x1)), (In y (selection_sort bl)), (In y (selection_sort x1)), (In y (selsort bl m))
(In y (selsort bl x)), (In y (selsort bl a)), (In y (selsort bl gv0)), (In y (selsort bl x0)), (In y (selsort x1 m)), (In y (selsort x1 y)), (In y (selsort x1 x)), (In y (selsort x1 a)), (In y (selsort x1 gv0)), (In y (selsort x1 x0))
(In y (bl ++ x1)), (In y (x1 ++ bl)), (In y (x1 ++ x1)), (In x (m :: bl)), (In x (m :: x1)), (In x (y :: bl)), (In x (y :: x1)), (In x (x :: bl)), (In x (x :: x1)), (In x (a :: bl))
(In x (gv0 :: bl)), (In x (gv0 :: x1)), (In x (x0 :: bl)), (In x (x0 :: x1)), (In x (selection_sort bl)), (In x (selection_sort x1)), (In x (selsort bl m)), (In x (selsort bl y)), (In x (selsort bl x)), (In x (selsort bl a))
(In x (selsort bl x0)), (In x (selsort x1 m)), (In x (selsort x1 y)), (In x (selsort x1 x)), (In x (selsort x1 a)), (In x (selsort x1 gv0)), (In x (selsort x1 x0)), (In x (bl ++ bl)), (In x (bl ++ x1)), (In x (x1 ++ bl))
(In a (m :: bl)), (In a (m :: x1)), (In a (y :: bl)), (In a (y :: x1)), (In a (x :: bl)), (In a (x :: x1)), (In a (a :: bl)), (In a (a :: x1)), (In a (gv0 :: bl)), (In a (gv0 :: x1))
(In a (x0 :: x1)), (In a (selection_sort bl)), (In a (selection_sort x1)), (In a (selsort bl m)), (In a (selsort bl y)), (In a (selsort bl x)), (In a (selsort bl a)), (In a (selsort bl gv0)), (In a (selsort bl x0)), (In a (selsort x1 m))
(In a (selsort x1 x)), (In a (selsort x1 a)), (In a (selsort x1 gv0)), (In a (selsort x1 x0)), (In a (bl ++ bl)), (In a (bl ++ x1)), (In a (x1 ++ bl)), (In a (x1 ++ x1)), (In gv0 (m :: bl)), (In gv0 (m :: x1))
(In gv0 (y :: x1)), (In gv0 (x :: bl)), (In gv0 (x :: x1)), (In gv0 (a :: bl)), (In gv0 (a :: x1)), (In gv0 (gv0 :: bl)), (In gv0 (gv0 :: x1)), (In gv0 (x0 :: bl)), (In gv0 (x0 :: x1)), (In gv0 (selection_sort bl))
(In gv0 (selsort bl m)), (In gv0 (selsort bl y)), (In gv0 (selsort bl x)), (In gv0 (selsort bl a)), (In gv0 (selsort bl gv0)), (In gv0 (selsort bl x0)), (In gv0 (selsort x1 m)), (In gv0 (selsort x1 y)), (In gv0 (selsort x1 x)), (In gv0 (selsort x1 a))
(In gv0 (selsort x1 x0)), (In gv0 (bl ++ bl)), (In gv0 (bl ++ x1)), (In gv0 (x1 ++ bl)), (In gv0 (x1 ++ x1)), (In x0 (m :: bl)), (In x0 (m :: x1)), (In x0 (y :: bl)), (In x0 (y :: x1)), (In x0 (x :: bl))
(In x0 (a :: bl)), (In x0 (a :: x1)), (In x0 (gv0 :: bl)), (In x0 (gv0 :: x1)), (In x0 (x0 :: bl)), (In x0 (x0 :: x1)), (In x0 (selection_sort bl)), (In x0 (selection_sort x1)), (In x0 (selsort bl m)), (In x0 (selsort bl y))
(In x0 (selsort bl a)), (In x0 (selsort bl gv0)), (In x0 (selsort bl x0)), (In x0 (selsort x1 m)), (In x0 (selsort x1 y)), (In x0 (selsort x1 x)), (In x0 (selsort x1 a)), (In x0 (selsort x1 gv0)), (In x0 (selsort x1 x0)), (In x0 (bl ++ bl))
(In x0 (x1 ++ bl)), (In x0 (x1 ++ x1)), (In (length bl) bl), (In (length bl) x1), (In (length bl) (m :: bl)), (In (length bl) (m :: x1)), (In (length bl) (y :: bl)), (In (length bl) (y :: x1)), (In (length bl) (x :: bl)), (In (length bl) (x :: x1))
(In (length bl) (a :: x1)), (In (length bl) (gv0 :: bl)), (In (length bl) (gv0 :: x1)), (In (length bl) (x0 :: bl)), (In (length bl) (x0 :: x1)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort x1)), (In (length bl) (selsort bl m)), (In (length bl) (selsort bl y)), (In (length bl) (selsort bl x))
(In (length bl) (selsort bl gv0)), (In (length bl) (selsort bl x0)), (In (length bl) (selsort x1 m)), (In (length bl) (selsort x1 y)), (In (length bl) (selsort x1 x)), (In (length bl) (selsort x1 a)), (In (length bl) (selsort x1 gv0)), (In (length bl) (selsort x1 x0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ x1))
(In (length bl) (x1 ++ x1)), (In (length x1) bl), (In (length x1) x1), (In (length x1) (m :: bl)), (In (length x1) (m :: x1)), (In (length x1) (y :: bl)), (In (length x1) (y :: x1)), (In (length x1) (x :: bl)), (In (length x1) (x :: x1)), (In (length x1) (a :: bl))
(In (length x1) (gv0 :: bl)), (In (length x1) (gv0 :: x1)), (In (length x1) (x0 :: bl)), (In (length x1) (x0 :: x1)), (In (length x1) (selection_sort bl)), (In (length x1) (selection_sort x1)), (In (length x1) (selsort bl m)), (In (length x1) (selsort bl y)), (In (length x1) (selsort bl x)), (In (length x1) (selsort bl a))
(In (length x1) (selsort bl x0)), (In (length x1) (selsort x1 m)), (In (length x1) (selsort x1 y)), (In (length x1) (selsort x1 x)), (In (length x1) (selsort x1 a)), (In (length x1) (selsort x1 gv0)), (In (length x1) (selsort x1 x0)), (In (length x1) (bl ++ bl)), (In (length x1) (bl ++ x1)), (In (length x1) (x1 ++ bl))
(m < length bl), (m < length x1), (y < length bl), (y < length x1), (x < length bl), (x < length x1), (a < length bl), (a < length x1), (gv0 < length bl), (gv0 < length x1)
(x0 < length x1), (length bl < m), (length bl < y), (length bl < x), (length bl < a), (length bl < gv0), (length bl < x0), (length bl < length x1), (length x1 < m), (length x1 < y)
(length x1 < a), (length x1 < gv0), (length x1 < x0), (length x1 < length bl), (m <= length bl), (m <= length x1), (y <= length bl), (y <= length x1), (x <= length bl), (x <= length x1)
(a <= length x1), (gv0 <= length bl), (gv0 <= length x1), (x0 <= length bl), (x0 <= length x1), (length bl <= m), (length bl <= y), (length bl <= x), (length bl <= a), (length bl <= gv0)
(length bl <= length x1), (length x1 <= m), (length x1 <= y), (length x1 <= x), (length x1 <= a), (length x1 <= gv0), (length x1 <= x0), (length x1 <= length bl), (~ m <=* bl), (~ m <=* x1)
(~ y <=* x1), (~ x <=* bl), (~ x <=* x1), (~ a <=* bl), (~ a <=* x1), (~ gv0 <=* bl), (~ gv0 <=* x1), (~ x0 <=* bl), (~ x0 <=* x1), (~ sorted bl)
(~ Permutation bl bl), (~ Permutation bl x1), (~ Permutation x1 bl), (~ Permutation x1 x1), (~ In m bl), (~ In m x1), (~ In y bl), (~ In y x1), (~ In x bl), (~ In x x1)
(~ In a x1), (~ In gv0 bl), (~ In gv0 x1), (~ In x0 bl), (~ In x0 x1), (~ m < m), (~ m < y), (~ m < x), (~ m < a), (~ m < gv0)
(~ y < m), (~ y < y), (~ y < x), (~ y < a), (~ y < gv0), (~ y < x0), (~ x < m), (~ x < y), (~ x < x), (~ x < a)
(~ x < x0), (~ a < m), (~ a < y), (~ a < x), (~ a < a), (~ a < gv0), (~ a < x0), (~ gv0 < m), (~ gv0 < y), (~ gv0 < x)
(~ gv0 < gv0), (~ gv0 < x0), (~ x0 < m), (~ x0 < y), (~ x0 < x), (~ x0 < a), (~ x0 < gv0), (~ x0 < x0), (~ m <= m), (~ m <= y)
(~ m <= a), (~ m <= gv0), (~ m <= x0), (~ y <= m), (~ y <= y), (~ y <= x), (~ y <= a), (~ y <= gv0), (~ y <= x0), (~ x <= m)
(~ x <= x), (~ x <= a), (~ x <= gv0), (~ x <= x0), (~ a <= m), (~ a <= y), (~ a <= x), (~ a <= a), (~ a <= gv0), (~ a <= x0)
(~ gv0 <= y), (~ gv0 <= x), (~ gv0 <= a), (~ gv0 <= gv0), (~ gv0 <= x0), (~ x0 <= m), (~ x0 <= y), (~ x0 <= x), (~ x0 <= a), (~ x0 <= gv0)
(bl <> bl), (bl <> x1), (x1 <> bl), (x1 <> x1), (m <> m), (m <> y), (m <> x), (m <> a), (m <> gv0), (m <> x0)
(y <> y), (y <> x), (y <> a), (y <> gv0), (y <> x0), (x <> m), (x <> y), (x <> x), (x <> a), (x <> gv0)
(a <> m), (a <> y), (a <> x), (a <> a), (a <> gv0), (a <> x0), (gv0 <> m), (gv0 <> y), (gv0 <> x), (gv0 <> a)
(gv0 <> x0), (x0 <> m), (x0 <> y), (x0 <> x), (x0 <> a), (x0 <> gv0), (x0 <> x0), (None = Some bl), (None = Some x1), (m :: bl = bl)
(m :: bl = selection_sort bl), (m :: bl = selection_sort x1), (m :: bl = selsort bl m), (m :: bl = selsort bl y), (m :: bl = selsort bl x), (m :: bl = selsort bl a), (m :: bl = selsort bl gv0), (m :: bl = selsort bl x0), (m :: bl = selsort x1 m), (m :: bl = selsort x1 y)
(m :: bl = selsort x1 a), (m :: bl = selsort x1 gv0), (m :: bl = selsort x1 x0), (m :: bl = bl ++ bl), (m :: bl = bl ++ x1), (m :: bl = x1 ++ bl), (m :: bl = x1 ++ x1), (m :: bl = []), (m :: x1 = bl), (m :: x1 = x1)
(m :: x1 = selection_sort x1), (m :: x1 = selsort bl m), (m :: x1 = selsort bl y), (m :: x1 = selsort bl x), (m :: x1 = selsort bl a), (m :: x1 = selsort bl gv0), (m :: x1 = selsort bl x0), (m :: x1 = selsort x1 m), (m :: x1 = selsort x1 y), (m :: x1 = selsort x1 x)
(m :: x1 = selsort x1 gv0), (m :: x1 = selsort x1 x0), (m :: x1 = bl ++ bl), (m :: x1 = bl ++ x1), (m :: x1 = x1 ++ bl), (m :: x1 = x1 ++ x1), (m :: x1 = []), (y :: bl = bl), (y :: bl = x1), (y :: bl = selection_sort bl)
(y :: bl = selsort bl m), (y :: bl = selsort bl y), (y :: bl = selsort bl x), (y :: bl = selsort bl a), (y :: bl = selsort bl gv0), (y :: bl = selsort bl x0), (y :: bl = selsort x1 m), (y :: bl = selsort x1 y), (y :: bl = selsort x1 x), (y :: bl = selsort x1 a)
(y :: bl = selsort x1 x0), (y :: bl = bl ++ bl), (y :: bl = bl ++ x1), (y :: bl = x1 ++ bl), (y :: bl = x1 ++ x1), (y :: bl = []), (y :: x1 = bl), (y :: x1 = x1), (y :: x1 = selection_sort bl), (y :: x1 = selection_sort x1)
(y :: x1 = selsort bl y), (y :: x1 = selsort bl x), (y :: x1 = selsort bl a), (y :: x1 = selsort bl gv0), (y :: x1 = selsort bl x0), (y :: x1 = selsort x1 m), (y :: x1 = selsort x1 y), (y :: x1 = selsort x1 x), (y :: x1 = selsort x1 a), (y :: x1 = selsort x1 gv0)
(y :: x1 = bl ++ bl), (y :: x1 = bl ++ x1), (y :: x1 = x1 ++ bl), (y :: x1 = x1 ++ x1), (y :: x1 = []), (x :: bl = bl), (x :: bl = x1), (x :: bl = selection_sort bl), (x :: bl = selection_sort x1), (x :: bl = selsort bl m)
(x :: bl = selsort bl x), (x :: bl = selsort bl a), (x :: bl = selsort bl gv0), (x :: bl = selsort bl x0), (x :: bl = selsort x1 m), (x :: bl = selsort x1 y), (x :: bl = selsort x1 x), (x :: bl = selsort x1 a), (x :: bl = selsort x1 gv0), (x :: bl = selsort x1 x0)
(x :: bl = bl ++ x1), (x :: bl = x1 ++ bl), (x :: bl = x1 ++ x1), (x :: bl = []), (x :: x1 = bl), (x :: x1 = x1), (x :: x1 = selection_sort bl), (x :: x1 = selection_sort x1), (x :: x1 = selsort bl m), (x :: x1 = selsort bl y)
(x :: x1 = selsort bl a), (x :: x1 = selsort bl gv0), (x :: x1 = selsort bl x0), (x :: x1 = selsort x1 m), (x :: x1 = selsort x1 y), (x :: x1 = selsort x1 x), (x :: x1 = selsort x1 a), (x :: x1 = selsort x1 gv0), (x :: x1 = selsort x1 x0), (x :: x1 = bl ++ bl)
(x :: x1 = x1 ++ bl), (x :: x1 = x1 ++ x1), (x :: x1 = []), (a :: bl = bl), (a :: bl = x1), (a :: bl = selection_sort bl), (a :: bl = selection_sort x1), (a :: bl = selsort bl m), (a :: bl = selsort bl y), (a :: bl = selsort bl x)
(a :: bl = selsort bl gv0), (a :: bl = selsort bl x0), (a :: bl = selsort x1 m), (a :: bl = selsort x1 y), (a :: bl = selsort x1 x), (a :: bl = selsort x1 a), (a :: bl = selsort x1 gv0), (a :: bl = selsort x1 x0), (a :: bl = bl ++ bl), (a :: bl = bl ++ x1)
(a :: bl = x1 ++ x1), (a :: bl = []), (a :: x1 = bl), (a :: x1 = x1), (a :: x1 = selection_sort bl), (a :: x1 = selection_sort x1), (a :: x1 = selsort bl m), (a :: x1 = selsort bl y), (a :: x1 = selsort bl x), (a :: x1 = selsort bl a)
(a :: x1 = selsort bl x0), (a :: x1 = selsort x1 m), (a :: x1 = selsort x1 y), (a :: x1 = selsort x1 x), (a :: x1 = selsort x1 a), (a :: x1 = selsort x1 gv0), (a :: x1 = selsort x1 x0), (a :: x1 = bl ++ bl), (a :: x1 = bl ++ x1), (a :: x1 = x1 ++ bl)
(a :: x1 = []), (gv0 :: bl = bl), (gv0 :: bl = x1), (gv0 :: bl = selection_sort bl), (gv0 :: bl = selection_sort x1), (gv0 :: bl = selsort bl m), (gv0 :: bl = selsort bl y), (gv0 :: bl = selsort bl x), (gv0 :: bl = selsort bl a), (gv0 :: bl = selsort bl gv0)
(gv0 :: bl = selsort x1 m), (gv0 :: bl = selsort x1 y), (gv0 :: bl = selsort x1 x), (gv0 :: bl = selsort x1 a), (gv0 :: bl = selsort x1 gv0), (gv0 :: bl = selsort x1 x0), (gv0 :: bl = bl ++ bl), (gv0 :: bl = bl ++ x1), (gv0 :: bl = x1 ++ bl), (gv0 :: bl = x1 ++ x1)
(gv0 :: x1 = bl), (gv0 :: x1 = x1), (gv0 :: x1 = selection_sort bl), (gv0 :: x1 = selection_sort x1), (gv0 :: x1 = selsort bl m), (gv0 :: x1 = selsort bl y), (gv0 :: x1 = selsort bl x), (gv0 :: x1 = selsort bl a), (gv0 :: x1 = selsort bl gv0), (gv0 :: x1 = selsort bl x0)
(gv0 :: x1 = selsort x1 y), (gv0 :: x1 = selsort x1 x), (gv0 :: x1 = selsort x1 a), (gv0 :: x1 = selsort x1 gv0), (gv0 :: x1 = selsort x1 x0), (gv0 :: x1 = bl ++ bl), (gv0 :: x1 = bl ++ x1), (gv0 :: x1 = x1 ++ bl), (gv0 :: x1 = x1 ++ x1), (gv0 :: x1 = [])
(x0 :: bl = x1), (x0 :: bl = selection_sort bl), (x0 :: bl = selection_sort x1), (x0 :: bl = selsort bl m), (x0 :: bl = selsort bl y), (x0 :: bl = selsort bl x), (x0 :: bl = selsort bl a), (x0 :: bl = selsort bl gv0), (x0 :: bl = selsort bl x0), (x0 :: bl = selsort x1 m)
(x0 :: bl = selsort x1 x), (x0 :: bl = selsort x1 a), (x0 :: bl = selsort x1 gv0), (x0 :: bl = selsort x1 x0), (x0 :: bl = bl ++ bl), (x0 :: bl = bl ++ x1), (x0 :: bl = x1 ++ bl), (x0 :: bl = x1 ++ x1), (x0 :: bl = []), (x0 :: x1 = bl)
(x0 :: x1 = selection_sort bl), (x0 :: x1 = selection_sort x1), (x0 :: x1 = selsort bl m), (x0 :: x1 = selsort bl y), (x0 :: x1 = selsort bl x), (x0 :: x1 = selsort bl a), (x0 :: x1 = selsort bl gv0), (x0 :: x1 = selsort bl x0), (x0 :: x1 = selsort x1 m), (x0 :: x1 = selsort x1 y)
(x0 :: x1 = selsort x1 a), (x0 :: x1 = selsort x1 gv0), (x0 :: x1 = selsort x1 x0), (x0 :: x1 = bl ++ bl), (x0 :: x1 = bl ++ x1), (x0 :: x1 = x1 ++ bl), (x0 :: x1 = x1 ++ x1), (x0 :: x1 = []), (selection_sort bl = bl), (selection_sort bl = x1)
(selection_sort bl = bl ++ x1), (selection_sort bl = x1 ++ bl), (selection_sort bl = x1 ++ x1), (selection_sort x1 = bl), (selection_sort x1 = x1), (selection_sort x1 = bl ++ bl), (selection_sort x1 = bl ++ x1), (selection_sort x1 = x1 ++ bl), (selection_sort x1 = x1 ++ x1), (selsort bl m = bl)
(selsort bl m = selection_sort bl), (selsort bl m = selection_sort x1), (selsort bl m = bl ++ bl), (selsort bl m = bl ++ x1), (selsort bl m = x1 ++ bl), (selsort bl m = x1 ++ x1), (selsort bl y = bl), (selsort bl y = x1), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort x1)
(selsort bl y = bl ++ x1), (selsort bl y = x1 ++ bl), (selsort bl y = x1 ++ x1), (selsort bl x = bl), (selsort bl x = x1), (selsort bl x = selection_sort bl), (selsort bl x = selection_sort x1), (selsort bl x = bl ++ bl), (selsort bl x = bl ++ x1), (selsort bl x = x1 ++ bl)
(selsort bl a = bl), (selsort bl a = x1), (selsort bl a = selection_sort bl), (selsort bl a = selection_sort x1), (selsort bl a = bl ++ bl), (selsort bl a = bl ++ x1), (selsort bl a = x1 ++ bl), (selsort bl a = x1 ++ x1), (selsort bl gv0 = bl), (selsort bl gv0 = x1)
(selsort bl gv0 = selection_sort x1), (selsort bl gv0 = bl ++ bl), (selsort bl gv0 = bl ++ x1), (selsort bl gv0 = x1 ++ bl), (selsort bl gv0 = x1 ++ x1), (selsort bl x0 = bl), (selsort bl x0 = x1), (selsort bl x0 = selection_sort bl), (selsort bl x0 = selection_sort x1), (selsort bl x0 = bl ++ bl)
(selsort bl x0 = x1 ++ bl), (selsort bl x0 = x1 ++ x1), (selsort x1 m = bl), (selsort x1 m = x1), (selsort x1 m = selection_sort bl), (selsort x1 m = selection_sort x1), (selsort x1 m = bl ++ bl), (selsort x1 m = bl ++ x1), (selsort x1 m = x1 ++ bl), (selsort x1 m = x1 ++ x1)
(selsort x1 y = x1), (selsort x1 y = selection_sort bl), (selsort x1 y = selection_sort x1), (selsort x1 y = bl ++ bl), (selsort x1 y = bl ++ x1), (selsort x1 y = x1 ++ bl), (selsort x1 y = x1 ++ x1), (selsort x1 x = bl), (selsort x1 x = x1), (selsort x1 x = selection_sort bl)
(selsort x1 x = bl ++ bl), (selsort x1 x = bl ++ x1), (selsort x1 x = x1 ++ bl), (selsort x1 x = x1 ++ x1), (selsort x1 a = bl), (selsort x1 a = x1), (selsort x1 a = selection_sort bl), (selsort x1 a = selection_sort x1), (selsort x1 a = bl ++ bl), (selsort x1 a = bl ++ x1)
(selsort x1 a = x1 ++ x1), (selsort x1 gv0 = bl), (selsort x1 gv0 = x1), (selsort x1 gv0 = selection_sort bl), (selsort x1 gv0 = selection_sort x1), (selsort x1 gv0 = bl ++ bl), (selsort x1 gv0 = bl ++ x1), (selsort x1 gv0 = x1 ++ bl), (selsort x1 gv0 = x1 ++ x1), (selsort x1 x0 = bl)
(selsort x1 x0 = selection_sort bl), (selsort x1 x0 = selection_sort x1), (selsort x1 x0 = bl ++ bl), (selsort x1 x0 = bl ++ x1), (selsort x1 x0 = x1 ++ bl), (selsort x1 x0 = x1 ++ x1), (bl ++ bl = bl), (bl ++ bl = x1), (bl ++ x1 = bl), (bl ++ x1 = x1)
(x1 ++ bl = x1), (x1 ++ x1 = bl), (x1 ++ x1 = x1), ([] = bl), ([] = x1), ([] = selection_sort bl), ([] = selection_sort x1), ([] = selsort bl m), ([] = selsort bl y), ([] = selsort bl x)
([] = selsort bl gv0), ([] = selsort bl x0), ([] = selsort x1 m), ([] = selsort x1 y), ([] = selsort x1 x), ([] = selsort x1 a), ([] = selsort x1 gv0), ([] = selsort x1 x0), ([] = bl ++ bl), ([] = bl ++ x1)
([] = x1 ++ x1), (None = Some m), (None = Some y), (None = Some x), (None = Some a), (None = Some gv0), (None = Some x0), ((m, bl) = select m bl), ((m, bl) = select m x1), ((m, bl) = select y bl)
((m, bl) = select x bl), ((m, bl) = select x x1), ((m, bl) = select a bl), ((m, bl) = select a x1), ((m, bl) = select gv0 bl), ((m, bl) = select gv0 x1), ((m, bl) = select x0 bl), ((m, bl) = select x0 x1), ((m, x1) = select m bl), ((m, x1) = select m x1)
((m, x1) = select y x1), ((m, x1) = select x bl), ((m, x1) = select x x1), ((m, x1) = select a bl), ((m, x1) = select a x1), ((m, x1) = select gv0 bl), ((m, x1) = select gv0 x1), ((m, x1) = select x0 bl), ((m, x1) = select x0 x1), ((y, bl) = select m bl)
((y, bl) = select y bl), ((y, bl) = select y x1), ((y, bl) = select x bl), ((y, bl) = select x x1), ((y, bl) = select a bl), ((y, bl) = select a x1), ((y, bl) = select gv0 bl), ((y, bl) = select gv0 x1), ((y, bl) = select x0 bl), ((y, bl) = select x0 x1)
((y, x1) = select m x1), ((y, x1) = select y bl), ((y, x1) = select y x1), ((y, x1) = select x bl), ((y, x1) = select x x1), ((y, x1) = select a bl), ((y, x1) = select a x1), ((y, x1) = select gv0 bl), ((y, x1) = select gv0 x1), ((y, x1) = select x0 bl)
((x, bl) = select m bl), ((x, bl) = select m x1), ((x, bl) = select y bl), ((x, bl) = select y x1), ((x, bl) = select x bl), ((x, bl) = select x x1), ((x, bl) = select a bl), ((x, bl) = select a x1), ((x, bl) = select gv0 bl), ((x, bl) = select gv0 x1)
((x, bl) = select x0 x1), ((x, x1) = select m bl), ((x, x1) = select m x1), ((x, x1) = select y bl), ((x, x1) = select y x1), ((x, x1) = select x bl), ((x, x1) = select x x1), ((x, x1) = select a bl), ((x, x1) = select a x1), ((x, x1) = select gv0 bl)
((x, x1) = select x0 bl), ((x, x1) = select x0 x1), ((a, bl) = select m bl), ((a, bl) = select m x1), ((a, bl) = select y bl), ((a, bl) = select y x1), ((a, bl) = select x bl), ((a, bl) = select x x1), ((a, bl) = select a bl), ((a, bl) = select a x1)
((a, bl) = select gv0 x1), ((a, bl) = select x0 bl), ((a, bl) = select x0 x1), ((a, x1) = select m bl), ((a, x1) = select m x1), ((a, x1) = select y bl), ((a, x1) = select y x1), ((a, x1) = select x bl), ((a, x1) = select x x1), ((a, x1) = select a bl)
((a, x1) = select gv0 bl), ((a, x1) = select gv0 x1), ((a, x1) = select x0 bl), ((a, x1) = select x0 x1), ((gv0, bl) = select m bl), ((gv0, bl) = select m x1), ((gv0, bl) = select y bl), ((gv0, bl) = select y x1), ((gv0, bl) = select x bl), ((gv0, bl) = select x x1)
((gv0, bl) = select a x1), ((gv0, bl) = select gv0 bl), ((gv0, bl) = select gv0 x1), ((gv0, bl) = select x0 bl), ((gv0, bl) = select x0 x1), ((gv0, x1) = select m bl), ((gv0, x1) = select m x1), ((gv0, x1) = select y bl), ((gv0, x1) = select y x1), ((gv0, x1) = select x bl)
((gv0, x1) = select a bl), ((gv0, x1) = select a x1), ((gv0, x1) = select gv0 bl), ((gv0, x1) = select gv0 x1), ((gv0, x1) = select x0 bl), ((gv0, x1) = select x0 x1), ((x0, bl) = select m bl), ((x0, bl) = select m x1), ((x0, bl) = select y bl), ((x0, bl) = select y x1)
((x0, bl) = select x x1), ((x0, bl) = select a bl), ((x0, bl) = select a x1), ((x0, bl) = select gv0 bl), ((x0, bl) = select gv0 x1), ((x0, bl) = select x0 bl), ((x0, bl) = select x0 x1), ((x0, x1) = select m bl), ((x0, x1) = select m x1), ((x0, x1) = select y bl)
((x0, x1) = select x bl), ((x0, x1) = select x x1), ((x0, x1) = select a bl), ((x0, x1) = select a x1), ((x0, x1) = select gv0 bl), ((x0, x1) = select gv0 x1), ((x0, x1) = select x0 bl), ((x0, x1) = select x0 x1), (length bl = m), (length bl = y)
(length bl = a), (length bl = gv0), (length bl = x0), (length x1 = m), (length x1 = y), (length x1 = x), (length x1 = a), (length x1 = gv0), (length x1 = x0)

Label: 1 (1)
(a < a), (a < x), (a < x0), (x < a), (x < x), (x < x0), (x0 < a), (x0 < x), (x0 < x0), (a <= a)
(a <= x0), (x <= a), (x <= x), (x <= x0), (x0 <= a), (x0 <= x), (x0 <= x0), (a = a), (a = x), (a = x0)
(x = x), (x = x0), (x0 = a), (x0 = x), (x0 = x0), (a <=* []), (x <=* []), (x0 <=* []), (sorted []), (~ a < a)
(~ a < x0), (~ x < a), (~ x < x), (~ x < x0), (~ x0 < a), (~ x0 < x), (~ x0 < x0), (~ a <= a), (~ a <= x), (~ a <= x0)
(~ x <= x), (~ x <= x0), (~ x0 <= a), (~ x0 <= x), (~ x0 <= x0), (a <> a), (a <> x), (a <> x0), (x <> a), (x <> x)
(x0 <> a), (x0 <> x), (x0 <> x0), (None = Some a), (None = Some x), (None = Some x0)

Label: 1 (2)
(a < a), (a < x), (a < x0), (x < a), (x < x), (x < x0), (x0 < a), (x0 < x), (x0 < x0), (a <= a)
(a <= x0), (x <= a), (x <= x), (x <= x0), (x0 <= a), (x0 <= x), (x0 <= x0), (a = a), (a = x), (a = x0)
(x = x), (x = x0), (x0 = a), (x0 = x), (x0 = x0), (a <=* []), (x <=* []), (x0 <=* []), (sorted []), (~ a < a)
(~ a < x0), (~ x < a), (~ x < x), (~ x < x0), (~ x0 < a), (~ x0 < x), (~ x0 < x0), (~ a <= a), (~ a <= x), (~ a <= x0)
(~ x <= x), (~ x <= x0), (~ x0 <= a), (~ x0 <= x), (~ x0 <= x0), (a <> a), (a <> x), (a <> x0), (x <> a), (x <> x)
(x0 <> a), (x0 <> x), (x0 <> x0), (None = Some a), (None = Some x), (None = Some x0)


------------------------------ COMBINED SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 300.465 seconds


Label: 0 (0)
Abducted Assumption: n/a
Positive Examples:


Negative Examples:
   [a := 1; bl := [2]; gv0 := 2; m := 0; x := 2; x0 := 2; x1 := []; y := 2]
   [a := 1; bl := [2; 2]; gv0 := 0; m := 0; x := 2; x0 := 0; x1 := [2]; y := 0]
   [a := 1; bl := [2]; gv0 := 0; m := 0; x := 2; x0 := 2; x1 := []; y := 2]

(m <=* bl), (m <=* x1), (y <=* bl), (y <=* x1), (x <=* bl), (x <=* x1), (a <=* bl), (a <=* x1), (gv0 <=* bl), (gv0 <=* x1)
(x0 <=* x1), (sorted bl), (sorted x1), (Permutation bl bl), (Permutation bl x1), (Permutation x1 bl), (Permutation x1 x1), (In m bl), (In m x1), (In y bl)
(In x bl), (In x x1), (In a bl), (In a x1), (In gv0 bl), (In gv0 x1), (In x0 bl), (In x0 x1), (m < m), (m < y)
(m < a), (m < gv0), (m < x0), (y < m), (y < y), (y < x), (y < a), (y < gv0), (y < x0), (x < m)
(x < x), (x < a), (x < gv0), (x < x0), (a < m), (a < y), (a < x), (a < a), (a < gv0), (a < x0)
(gv0 < y), (gv0 < x), (gv0 < a), (gv0 < gv0), (gv0 < x0), (x0 < m), (x0 < y), (x0 < x), (x0 < a), (x0 < gv0)
(m <= m), (m <= y), (m <= x), (m <= a), (m <= gv0), (m <= x0), (y <= m), (y <= y), (y <= x), (y <= a)
(y <= x0), (x <= m), (x <= y), (x <= x), (x <= a), (x <= gv0), (x <= x0), (a <= m), (a <= y), (a <= x)
(a <= gv0), (a <= x0), (gv0 <= m), (gv0 <= y), (gv0 <= x), (gv0 <= a), (gv0 <= gv0), (gv0 <= x0), (x0 <= m), (x0 <= y)
(x0 <= a), (x0 <= gv0), (x0 <= x0), (bl = bl), (bl = x1), (x1 = bl), (x1 = x1), (m = m), (m = y), (m = x)
(m = gv0), (m = x0), (y = m), (y = y), (y = x), (y = a), (y = gv0), (y = x0), (x = m), (x = y)
(x = a), (x = gv0), (x = x0), (a = m), (a = y), (a = x), (a = a), (a = gv0), (a = x0), (gv0 = m)
(gv0 = x), (gv0 = a), (gv0 = gv0), (gv0 = x0), (x0 = m), (x0 = y), (x0 = x), (x0 = a), (x0 = gv0), (x0 = x0)
(false = sorted_bool x1), (true = sorted_bool bl), (true = sorted_bool x1), (m <=* m :: bl), (m <=* m :: x1), (m <=* y :: bl), (m <=* y :: x1), (m <=* x :: bl), (m <=* x :: x1), (m <=* a :: bl)
(m <=* gv0 :: bl), (m <=* gv0 :: x1), (m <=* x0 :: bl), (m <=* x0 :: x1), (m <=* selection_sort bl), (m <=* selection_sort x1), (m <=* selsort bl m), (m <=* selsort bl y), (m <=* selsort bl x), (m <=* selsort bl a)
(m <=* selsort bl x0), (m <=* selsort x1 m), (m <=* selsort x1 y), (m <=* selsort x1 x), (m <=* selsort x1 a), (m <=* selsort x1 gv0), (m <=* selsort x1 x0), (m <=* bl ++ bl), (m <=* bl ++ x1), (m <=* x1 ++ bl)
(m <=* []), (y <=* m :: bl), (y <=* m :: x1), (y <=* y :: bl), (y <=* y :: x1), (y <=* x :: bl), (y <=* x :: x1), (y <=* a :: bl), (y <=* a :: x1), (y <=* gv0 :: bl)
(y <=* x0 :: bl), (y <=* x0 :: x1), (y <=* selection_sort bl), (y <=* selection_sort x1), (y <=* selsort bl m), (y <=* selsort bl y), (y <=* selsort bl x), (y <=* selsort bl a), (y <=* selsort bl gv0), (y <=* selsort bl x0)
(y <=* selsort x1 y), (y <=* selsort x1 x), (y <=* selsort x1 a), (y <=* selsort x1 gv0), (y <=* selsort x1 x0), (y <=* bl ++ bl), (y <=* bl ++ x1), (y <=* x1 ++ bl), (y <=* x1 ++ x1), (y <=* [])
(x <=* m :: x1), (x <=* y :: bl), (x <=* y :: x1), (x <=* x :: bl), (x <=* x :: x1), (x <=* a :: bl), (x <=* a :: x1), (x <=* gv0 :: bl), (x <=* gv0 :: x1), (x <=* x0 :: bl)
(x <=* selection_sort bl), (x <=* selection_sort x1), (x <=* selsort bl m), (x <=* selsort bl y), (x <=* selsort bl x), (x <=* selsort bl a), (x <=* selsort bl gv0), (x <=* selsort bl x0), (x <=* selsort x1 m), (x <=* selsort x1 y)
(x <=* selsort x1 a), (x <=* selsort x1 gv0), (x <=* selsort x1 x0), (x <=* bl ++ bl), (x <=* bl ++ x1), (x <=* x1 ++ bl), (x <=* x1 ++ x1), (x <=* []), (a <=* m :: bl), (a <=* m :: x1)
(a <=* y :: x1), (a <=* x :: bl), (a <=* x :: x1), (a <=* a :: bl), (a <=* a :: x1), (a <=* gv0 :: bl), (a <=* gv0 :: x1), (a <=* x0 :: bl), (a <=* x0 :: x1), (a <=* selection_sort bl)
(a <=* selsort bl m), (a <=* selsort bl y), (a <=* selsort bl x), (a <=* selsort bl a), (a <=* selsort bl gv0), (a <=* selsort bl x0), (a <=* selsort x1 m), (a <=* selsort x1 y), (a <=* selsort x1 x), (a <=* selsort x1 a)
(a <=* selsort x1 x0), (a <=* bl ++ bl), (a <=* bl ++ x1), (a <=* x1 ++ bl), (a <=* x1 ++ x1), (a <=* []), (gv0 <=* m :: bl), (gv0 <=* m :: x1), (gv0 <=* y :: bl), (gv0 <=* y :: x1)
(gv0 <=* x :: x1), (gv0 <=* a :: bl), (gv0 <=* a :: x1), (gv0 <=* gv0 :: bl), (gv0 <=* gv0 :: x1), (gv0 <=* x0 :: bl), (gv0 <=* x0 :: x1), (gv0 <=* selection_sort bl), (gv0 <=* selection_sort x1), (gv0 <=* selsort bl m)
(gv0 <=* selsort bl x), (gv0 <=* selsort bl a), (gv0 <=* selsort bl gv0), (gv0 <=* selsort bl x0), (gv0 <=* selsort x1 m), (gv0 <=* selsort x1 y), (gv0 <=* selsort x1 x), (gv0 <=* selsort x1 a), (gv0 <=* selsort x1 gv0), (gv0 <=* selsort x1 x0)
(gv0 <=* bl ++ x1), (gv0 <=* x1 ++ bl), (gv0 <=* x1 ++ x1), (gv0 <=* []), (x0 <=* m :: bl), (x0 <=* m :: x1), (x0 <=* y :: bl), (x0 <=* y :: x1), (x0 <=* x :: bl), (x0 <=* x :: x1)
(x0 <=* a :: x1), (x0 <=* gv0 :: bl), (x0 <=* gv0 :: x1), (x0 <=* x0 :: bl), (x0 <=* x0 :: x1), (x0 <=* selection_sort bl), (x0 <=* selection_sort x1), (x0 <=* selsort bl m), (x0 <=* selsort bl y), (x0 <=* selsort bl x)
(x0 <=* selsort bl gv0), (x0 <=* selsort bl x0), (x0 <=* selsort x1 m), (x0 <=* selsort x1 y), (x0 <=* selsort x1 x), (x0 <=* selsort x1 a), (x0 <=* selsort x1 gv0), (x0 <=* selsort x1 x0), (x0 <=* bl ++ bl), (x0 <=* bl ++ x1)
(x0 <=* x1 ++ x1), (x0 <=* []), (length bl <=* bl), (length bl <=* x1), (length bl <=* m :: bl), (length bl <=* m :: x1), (length bl <=* y :: bl), (length bl <=* y :: x1), (length bl <=* x :: bl), (length bl <=* x :: x1)
(length bl <=* a :: x1), (length bl <=* gv0 :: bl), (length bl <=* gv0 :: x1), (length bl <=* x0 :: bl), (length bl <=* x0 :: x1), (length bl <=* selection_sort bl), (length bl <=* selection_sort x1), (length bl <=* selsort bl m), (length bl <=* selsort bl y), (length bl <=* selsort bl x)
(length bl <=* selsort bl gv0), (length bl <=* selsort bl x0), (length bl <=* selsort x1 m), (length bl <=* selsort x1 y), (length bl <=* selsort x1 x), (length bl <=* selsort x1 a), (length bl <=* selsort x1 gv0), (length bl <=* selsort x1 x0), (length bl <=* bl ++ bl), (length bl <=* bl ++ x1)
(length bl <=* x1 ++ x1), (length bl <=* []), (length x1 <=* bl), (length x1 <=* x1), (length x1 <=* m :: bl), (length x1 <=* m :: x1), (length x1 <=* y :: bl), (length x1 <=* y :: x1), (length x1 <=* x :: bl), (length x1 <=* x :: x1)
(length x1 <=* a :: x1), (length x1 <=* gv0 :: bl), (length x1 <=* gv0 :: x1), (length x1 <=* x0 :: bl), (length x1 <=* x0 :: x1), (length x1 <=* selection_sort bl), (length x1 <=* selection_sort x1), (length x1 <=* selsort bl m), (length x1 <=* selsort bl y), (length x1 <=* selsort bl x)
(length x1 <=* selsort bl gv0), (length x1 <=* selsort bl x0), (length x1 <=* selsort x1 m), (length x1 <=* selsort x1 y), (length x1 <=* selsort x1 x), (length x1 <=* selsort x1 a), (length x1 <=* selsort x1 gv0), (length x1 <=* selsort x1 x0), (length x1 <=* bl ++ bl), (length x1 <=* bl ++ x1)
(length x1 <=* x1 ++ x1), (length x1 <=* []), (sorted (m :: bl)), (sorted (m :: x1)), (sorted (y :: bl)), (sorted (y :: x1)), (sorted (x :: bl)), (sorted (x :: x1)), (sorted (a :: bl)), (sorted (a :: x1))
(sorted (gv0 :: x1)), (sorted (x0 :: bl)), (sorted (x0 :: x1)), (sorted (selection_sort bl)), (sorted (selection_sort x1)), (sorted (selsort bl m)), (sorted (selsort bl y)), (sorted (selsort bl x)), (sorted (selsort bl a)), (sorted (selsort bl gv0))
(sorted (selsort x1 m)), (sorted (selsort x1 y)), (sorted (selsort x1 x)), (sorted (selsort x1 a)), (sorted (selsort x1 gv0)), (sorted (selsort x1 x0)), (sorted (bl ++ bl)), (sorted (bl ++ x1)), (sorted (x1 ++ bl)), (sorted (x1 ++ x1))
(Permutation bl (m :: bl)), (Permutation bl (m :: x1)), (Permutation bl (y :: bl)), (Permutation bl (y :: x1)), (Permutation bl (x :: bl)), (Permutation bl (x :: x1)), (Permutation bl (a :: bl)), (Permutation bl (a :: x1)), (Permutation bl (gv0 :: bl)), (Permutation bl (gv0 :: x1))
(Permutation bl (x0 :: x1)), (Permutation bl (selection_sort bl)), (Permutation bl (selection_sort x1)), (Permutation bl (selsort bl m)), (Permutation bl (selsort bl y)), (Permutation bl (selsort bl x)), (Permutation bl (selsort bl a)), (Permutation bl (selsort bl gv0)), (Permutation bl (selsort bl x0)), (Permutation bl (selsort x1 m))
(Permutation bl (selsort x1 x)), (Permutation bl (selsort x1 a)), (Permutation bl (selsort x1 gv0)), (Permutation bl (selsort x1 x0)), (Permutation bl (bl ++ bl)), (Permutation bl (bl ++ x1)), (Permutation bl (x1 ++ bl)), (Permutation bl (x1 ++ x1)), (Permutation bl []), (Permutation x1 (m :: bl))
(Permutation x1 (y :: bl)), (Permutation x1 (y :: x1)), (Permutation x1 (x :: bl)), (Permutation x1 (x :: x1)), (Permutation x1 (a :: bl)), (Permutation x1 (a :: x1)), (Permutation x1 (gv0 :: bl)), (Permutation x1 (gv0 :: x1)), (Permutation x1 (x0 :: bl)), (Permutation x1 (x0 :: x1))
(Permutation x1 (selection_sort x1)), (Permutation x1 (selsort bl m)), (Permutation x1 (selsort bl y)), (Permutation x1 (selsort bl x)), (Permutation x1 (selsort bl a)), (Permutation x1 (selsort bl gv0)), (Permutation x1 (selsort bl x0)), (Permutation x1 (selsort x1 m)), (Permutation x1 (selsort x1 y)), (Permutation x1 (selsort x1 x))
(Permutation x1 (selsort x1 gv0)), (Permutation x1 (selsort x1 x0)), (Permutation x1 (bl ++ bl)), (Permutation x1 (bl ++ x1)), (Permutation x1 (x1 ++ bl)), (Permutation x1 (x1 ++ x1)), (Permutation x1 []), (Permutation (m :: bl) bl), (Permutation (m :: bl) x1), (Permutation (m :: bl) (m :: x1))
(Permutation (m :: bl) (y :: x1)), (Permutation (m :: bl) (x :: bl)), (Permutation (m :: bl) (x :: x1)), (Permutation (m :: bl) (a :: bl)), (Permutation (m :: bl) (a :: x1)), (Permutation (m :: bl) (gv0 :: bl)), (Permutation (m :: bl) (gv0 :: x1)), (Permutation (m :: bl) (x0 :: bl)), (Permutation (m :: bl) (x0 :: x1)), (Permutation (m :: bl) (selection_sort bl))
(Permutation (m :: bl) (selsort bl m)), (Permutation (m :: bl) (selsort bl y)), (Permutation (m :: bl) (selsort bl x)), (Permutation (m :: bl) (selsort bl a)), (Permutation (m :: bl) (selsort bl gv0)), (Permutation (m :: bl) (selsort bl x0)), (Permutation (m :: bl) (selsort x1 m)), (Permutation (m :: bl) (selsort x1 y)), (Permutation (m :: bl) (selsort x1 x)), (Permutation (m :: bl) (selsort x1 a))
(Permutation (m :: bl) (selsort x1 x0)), (Permutation (m :: bl) (bl ++ bl)), (Permutation (m :: bl) (bl ++ x1)), (Permutation (m :: bl) (x1 ++ bl)), (Permutation (m :: bl) (x1 ++ x1)), (Permutation (m :: bl) []), (Permutation (m :: x1) bl), (Permutation (m :: x1) x1), (Permutation (m :: x1) (m :: bl)), (Permutation (m :: x1) (y :: bl))
(Permutation (m :: x1) (x :: bl)), (Permutation (m :: x1) (x :: x1)), (Permutation (m :: x1) (a :: bl)), (Permutation (m :: x1) (a :: x1)), (Permutation (m :: x1) (gv0 :: bl)), (Permutation (m :: x1) (gv0 :: x1)), (Permutation (m :: x1) (x0 :: bl)), (Permutation (m :: x1) (x0 :: x1)), (Permutation (m :: x1) (selection_sort bl)), (Permutation (m :: x1) (selection_sort x1))
(Permutation (m :: x1) (selsort bl y)), (Permutation (m :: x1) (selsort bl x)), (Permutation (m :: x1) (selsort bl a)), (Permutation (m :: x1) (selsort bl gv0)), (Permutation (m :: x1) (selsort bl x0)), (Permutation (m :: x1) (selsort x1 m)), (Permutation (m :: x1) (selsort x1 y)), (Permutation (m :: x1) (selsort x1 x)), (Permutation (m :: x1) (selsort x1 a)), (Permutation (m :: x1) (selsort x1 gv0))
(Permutation (m :: x1) (bl ++ bl)), (Permutation (m :: x1) (bl ++ x1)), (Permutation (m :: x1) (x1 ++ bl)), (Permutation (m :: x1) (x1 ++ x1)), (Permutation (m :: x1) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) x1), (Permutation (y :: bl) (m :: bl)), (Permutation (y :: bl) (m :: x1)), (Permutation (y :: bl) (y :: x1))
(Permutation (y :: bl) (x :: x1)), (Permutation (y :: bl) (a :: bl)), (Permutation (y :: bl) (a :: x1)), (Permutation (y :: bl) (gv0 :: bl)), (Permutation (y :: bl) (gv0 :: x1)), (Permutation (y :: bl) (x0 :: bl)), (Permutation (y :: bl) (x0 :: x1)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort x1)), (Permutation (y :: bl) (selsort bl m))
(Permutation (y :: bl) (selsort bl x)), (Permutation (y :: bl) (selsort bl a)), (Permutation (y :: bl) (selsort bl gv0)), (Permutation (y :: bl) (selsort bl x0)), (Permutation (y :: bl) (selsort x1 m)), (Permutation (y :: bl) (selsort x1 y)), (Permutation (y :: bl) (selsort x1 x)), (Permutation (y :: bl) (selsort x1 a)), (Permutation (y :: bl) (selsort x1 gv0)), (Permutation (y :: bl) (selsort x1 x0))
(Permutation (y :: bl) (bl ++ x1)), (Permutation (y :: bl) (x1 ++ bl)), (Permutation (y :: bl) (x1 ++ x1)), (Permutation (y :: bl) []), (Permutation (y :: x1) bl), (Permutation (y :: x1) x1), (Permutation (y :: x1) (m :: bl)), (Permutation (y :: x1) (m :: x1)), (Permutation (y :: x1) (y :: bl)), (Permutation (y :: x1) (x :: bl))
(Permutation (y :: x1) (a :: bl)), (Permutation (y :: x1) (a :: x1)), (Permutation (y :: x1) (gv0 :: bl)), (Permutation (y :: x1) (gv0 :: x1)), (Permutation (y :: x1) (x0 :: bl)), (Permutation (y :: x1) (x0 :: x1)), (Permutation (y :: x1) (selection_sort bl)), (Permutation (y :: x1) (selection_sort x1)), (Permutation (y :: x1) (selsort bl m)), (Permutation (y :: x1) (selsort bl y))
(Permutation (y :: x1) (selsort bl a)), (Permutation (y :: x1) (selsort bl gv0)), (Permutation (y :: x1) (selsort bl x0)), (Permutation (y :: x1) (selsort x1 m)), (Permutation (y :: x1) (selsort x1 y)), (Permutation (y :: x1) (selsort x1 x)), (Permutation (y :: x1) (selsort x1 a)), (Permutation (y :: x1) (selsort x1 gv0)), (Permutation (y :: x1) (selsort x1 x0)), (Permutation (y :: x1) (bl ++ bl))
(Permutation (y :: x1) (x1 ++ bl)), (Permutation (y :: x1) (x1 ++ x1)), (Permutation (y :: x1) []), (Permutation (x :: bl) bl), (Permutation (x :: bl) x1), (Permutation (x :: bl) (m :: bl)), (Permutation (x :: bl) (m :: x1)), (Permutation (x :: bl) (y :: bl)), (Permutation (x :: bl) (y :: x1)), (Permutation (x :: bl) (x :: x1))
(Permutation (x :: bl) (a :: x1)), (Permutation (x :: bl) (gv0 :: bl)), (Permutation (x :: bl) (gv0 :: x1)), (Permutation (x :: bl) (x0 :: bl)), (Permutation (x :: bl) (x0 :: x1)), (Permutation (x :: bl) (selection_sort bl)), (Permutation (x :: bl) (selection_sort x1)), (Permutation (x :: bl) (selsort bl m)), (Permutation (x :: bl) (selsort bl y)), (Permutation (x :: bl) (selsort bl x))
(Permutation (x :: bl) (selsort bl gv0)), (Permutation (x :: bl) (selsort bl x0)), (Permutation (x :: bl) (selsort x1 m)), (Permutation (x :: bl) (selsort x1 y)), (Permutation (x :: bl) (selsort x1 x)), (Permutation (x :: bl) (selsort x1 a)), (Permutation (x :: bl) (selsort x1 gv0)), (Permutation (x :: bl) (selsort x1 x0)), (Permutation (x :: bl) (bl ++ bl)), (Permutation (x :: bl) (bl ++ x1))
(Permutation (x :: bl) (x1 ++ x1)), (Permutation (x :: bl) []), (Permutation (x :: x1) bl), (Permutation (x :: x1) x1), (Permutation (x :: x1) (m :: bl)), (Permutation (x :: x1) (m :: x1)), (Permutation (x :: x1) (y :: bl)), (Permutation (x :: x1) (y :: x1)), (Permutation (x :: x1) (x :: bl)), (Permutation (x :: x1) (a :: bl))
(Permutation (x :: x1) (gv0 :: bl)), (Permutation (x :: x1) (gv0 :: x1)), (Permutation (x :: x1) (x0 :: bl)), (Permutation (x :: x1) (x0 :: x1)), (Permutation (x :: x1) (selection_sort bl)), (Permutation (x :: x1) (selection_sort x1)), (Permutation (x :: x1) (selsort bl m)), (Permutation (x :: x1) (selsort bl y)), (Permutation (x :: x1) (selsort bl x)), (Permutation (x :: x1) (selsort bl a))
(Permutation (x :: x1) (selsort bl x0)), (Permutation (x :: x1) (selsort x1 m)), (Permutation (x :: x1) (selsort x1 y)), (Permutation (x :: x1) (selsort x1 x)), (Permutation (x :: x1) (selsort x1 a)), (Permutation (x :: x1) (selsort x1 gv0)), (Permutation (x :: x1) (selsort x1 x0)), (Permutation (x :: x1) (bl ++ bl)), (Permutation (x :: x1) (bl ++ x1)), (Permutation (x :: x1) (x1 ++ bl))
(Permutation (x :: x1) []), (Permutation (a :: bl) bl), (Permutation (a :: bl) x1), (Permutation (a :: bl) (m :: bl)), (Permutation (a :: bl) (m :: x1)), (Permutation (a :: bl) (y :: bl)), (Permutation (a :: bl) (y :: x1)), (Permutation (a :: bl) (x :: bl)), (Permutation (a :: bl) (x :: x1)), (Permutation (a :: bl) (a :: x1))
(Permutation (a :: bl) (gv0 :: x1)), (Permutation (a :: bl) (x0 :: bl)), (Permutation (a :: bl) (x0 :: x1)), (Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selection_sort x1)), (Permutation (a :: bl) (selsort bl m)), (Permutation (a :: bl) (selsort bl y)), (Permutation (a :: bl) (selsort bl x)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl gv0))
(Permutation (a :: bl) (selsort x1 m)), (Permutation (a :: bl) (selsort x1 y)), (Permutation (a :: bl) (selsort x1 x)), (Permutation (a :: bl) (selsort x1 a)), (Permutation (a :: bl) (selsort x1 gv0)), (Permutation (a :: bl) (selsort x1 x0)), (Permutation (a :: bl) (bl ++ bl)), (Permutation (a :: bl) (bl ++ x1)), (Permutation (a :: bl) (x1 ++ bl)), (Permutation (a :: bl) (x1 ++ x1))
(Permutation (a :: x1) bl), (Permutation (a :: x1) x1), (Permutation (a :: x1) (m :: bl)), (Permutation (a :: x1) (m :: x1)), (Permutation (a :: x1) (y :: bl)), (Permutation (a :: x1) (y :: x1)), (Permutation (a :: x1) (x :: bl)), (Permutation (a :: x1) (x :: x1)), (Permutation (a :: x1) (a :: bl)), (Permutation (a :: x1) (gv0 :: bl))
(Permutation (a :: x1) (x0 :: bl)), (Permutation (a :: x1) (x0 :: x1)), (Permutation (a :: x1) (selection_sort bl)), (Permutation (a :: x1) (selection_sort x1)), (Permutation (a :: x1) (selsort bl m)), (Permutation (a :: x1) (selsort bl y)), (Permutation (a :: x1) (selsort bl x)), (Permutation (a :: x1) (selsort bl a)), (Permutation (a :: x1) (selsort bl gv0)), (Permutation (a :: x1) (selsort bl x0))
(Permutation (a :: x1) (selsort x1 y)), (Permutation (a :: x1) (selsort x1 x)), (Permutation (a :: x1) (selsort x1 a)), (Permutation (a :: x1) (selsort x1 gv0)), (Permutation (a :: x1) (selsort x1 x0)), (Permutation (a :: x1) (bl ++ bl)), (Permutation (a :: x1) (bl ++ x1)), (Permutation (a :: x1) (x1 ++ bl)), (Permutation (a :: x1) (x1 ++ x1)), (Permutation (a :: x1) [])
(Permutation (gv0 :: bl) x1), (Permutation (gv0 :: bl) (m :: bl)), (Permutation (gv0 :: bl) (m :: x1)), (Permutation (gv0 :: bl) (y :: bl)), (Permutation (gv0 :: bl) (y :: x1)), (Permutation (gv0 :: bl) (x :: bl)), (Permutation (gv0 :: bl) (x :: x1)), (Permutation (gv0 :: bl) (a :: bl)), (Permutation (gv0 :: bl) (a :: x1)), (Permutation (gv0 :: bl) (gv0 :: x1))
(Permutation (gv0 :: bl) (x0 :: x1)), (Permutation (gv0 :: bl) (selection_sort bl)), (Permutation (gv0 :: bl) (selection_sort x1)), (Permutation (gv0 :: bl) (selsort bl m)), (Permutation (gv0 :: bl) (selsort bl y)), (Permutation (gv0 :: bl) (selsort bl x)), (Permutation (gv0 :: bl) (selsort bl a)), (Permutation (gv0 :: bl) (selsort bl gv0)), (Permutation (gv0 :: bl) (selsort bl x0)), (Permutation (gv0 :: bl) (selsort x1 m))
(Permutation (gv0 :: bl) (selsort x1 x)), (Permutation (gv0 :: bl) (selsort x1 a)), (Permutation (gv0 :: bl) (selsort x1 gv0)), (Permutation (gv0 :: bl) (selsort x1 x0)), (Permutation (gv0 :: bl) (bl ++ bl)), (Permutation (gv0 :: bl) (bl ++ x1)), (Permutation (gv0 :: bl) (x1 ++ bl)), (Permutation (gv0 :: bl) (x1 ++ x1)), (Permutation (gv0 :: bl) []), (Permutation (gv0 :: x1) bl)
(Permutation (gv0 :: x1) (m :: bl)), (Permutation (gv0 :: x1) (m :: x1)), (Permutation (gv0 :: x1) (y :: bl)), (Permutation (gv0 :: x1) (y :: x1)), (Permutation (gv0 :: x1) (x :: bl)), (Permutation (gv0 :: x1) (x :: x1)), (Permutation (gv0 :: x1) (a :: bl)), (Permutation (gv0 :: x1) (a :: x1)), (Permutation (gv0 :: x1) (gv0 :: bl)), (Permutation (gv0 :: x1) (x0 :: bl))
(Permutation (gv0 :: x1) (selection_sort bl)), (Permutation (gv0 :: x1) (selection_sort x1)), (Permutation (gv0 :: x1) (selsort bl m)), (Permutation (gv0 :: x1) (selsort bl y)), (Permutation (gv0 :: x1) (selsort bl x)), (Permutation (gv0 :: x1) (selsort bl a)), (Permutation (gv0 :: x1) (selsort bl gv0)), (Permutation (gv0 :: x1) (selsort bl x0)), (Permutation (gv0 :: x1) (selsort x1 m)), (Permutation (gv0 :: x1) (selsort x1 y))
(Permutation (gv0 :: x1) (selsort x1 a)), (Permutation (gv0 :: x1) (selsort x1 gv0)), (Permutation (gv0 :: x1) (selsort x1 x0)), (Permutation (gv0 :: x1) (bl ++ bl)), (Permutation (gv0 :: x1) (bl ++ x1)), (Permutation (gv0 :: x1) (x1 ++ bl)), (Permutation (gv0 :: x1) (x1 ++ x1)), (Permutation (gv0 :: x1) []), (Permutation (x0 :: bl) bl), (Permutation (x0 :: bl) x1)
(Permutation (x0 :: bl) (m :: x1)), (Permutation (x0 :: bl) (y :: bl)), (Permutation (x0 :: bl) (y :: x1)), (Permutation (x0 :: bl) (x :: bl)), (Permutation (x0 :: bl) (x :: x1)), (Permutation (x0 :: bl) (a :: bl)), (Permutation (x0 :: bl) (a :: x1)), (Permutation (x0 :: bl) (gv0 :: bl)), (Permutation (x0 :: bl) (gv0 :: x1)), (Permutation (x0 :: bl) (x0 :: x1))
(Permutation (x0 :: bl) (selection_sort x1)), (Permutation (x0 :: bl) (selsort bl m)), (Permutation (x0 :: bl) (selsort bl y)), (Permutation (x0 :: bl) (selsort bl x)), (Permutation (x0 :: bl) (selsort bl a)), (Permutation (x0 :: bl) (selsort bl gv0)), (Permutation (x0 :: bl) (selsort bl x0)), (Permutation (x0 :: bl) (selsort x1 m)), (Permutation (x0 :: bl) (selsort x1 y)), (Permutation (x0 :: bl) (selsort x1 x))
(Permutation (x0 :: bl) (selsort x1 gv0)), (Permutation (x0 :: bl) (selsort x1 x0)), (Permutation (x0 :: bl) (bl ++ bl)), (Permutation (x0 :: bl) (bl ++ x1)), (Permutation (x0 :: bl) (x1 ++ bl)), (Permutation (x0 :: bl) (x1 ++ x1)), (Permutation (x0 :: bl) []), (Permutation (x0 :: x1) bl), (Permutation (x0 :: x1) x1), (Permutation (x0 :: x1) (m :: bl))
(Permutation (x0 :: x1) (y :: bl)), (Permutation (x0 :: x1) (y :: x1)), (Permutation (x0 :: x1) (x :: bl)), (Permutation (x0 :: x1) (x :: x1)), (Permutation (x0 :: x1) (a :: bl)), (Permutation (x0 :: x1) (a :: x1)), (Permutation (x0 :: x1) (gv0 :: bl)), (Permutation (x0 :: x1) (gv0 :: x1)), (Permutation (x0 :: x1) (x0 :: bl)), (Permutation (x0 :: x1) (selection_sort bl))
(Permutation (x0 :: x1) (selsort bl m)), (Permutation (x0 :: x1) (selsort bl y)), (Permutation (x0 :: x1) (selsort bl x)), (Permutation (x0 :: x1) (selsort bl a)), (Permutation (x0 :: x1) (selsort bl gv0)), (Permutation (x0 :: x1) (selsort bl x0)), (Permutation (x0 :: x1) (selsort x1 m)), (Permutation (x0 :: x1) (selsort x1 y)), (Permutation (x0 :: x1) (selsort x1 x)), (Permutation (x0 :: x1) (selsort x1 a))
(Permutation (x0 :: x1) (selsort x1 x0)), (Permutation (x0 :: x1) (bl ++ bl)), (Permutation (x0 :: x1) (bl ++ x1)), (Permutation (x0 :: x1) (x1 ++ bl)), (Permutation (x0 :: x1) (x1 ++ x1)), (Permutation (x0 :: x1) []), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) x1), (Permutation (selection_sort bl) (m :: bl)), (Permutation (selection_sort bl) (m :: x1))
(Permutation (selection_sort bl) (y :: x1)), (Permutation (selection_sort bl) (x :: bl)), (Permutation (selection_sort bl) (x :: x1)), (Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (a :: x1)), (Permutation (selection_sort bl) (gv0 :: bl)), (Permutation (selection_sort bl) (gv0 :: x1)), (Permutation (selection_sort bl) (x0 :: bl)), (Permutation (selection_sort bl) (x0 :: x1)), (Permutation (selection_sort bl) (selection_sort x1))
(Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (selsort bl x)), (Permutation (selection_sort bl) (selsort bl a)), (Permutation (selection_sort bl) (selsort bl gv0)), (Permutation (selection_sort bl) (selsort bl x0)), (Permutation (selection_sort bl) (selsort x1 m)), (Permutation (selection_sort bl) (selsort x1 y)), (Permutation (selection_sort bl) (selsort x1 x)), (Permutation (selection_sort bl) (selsort x1 a)), (Permutation (selection_sort bl) (selsort x1 gv0))
(Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) (bl ++ x1)), (Permutation (selection_sort bl) (x1 ++ bl)), (Permutation (selection_sort bl) (x1 ++ x1)), (Permutation (selection_sort bl) []), (Permutation (selection_sort x1) bl), (Permutation (selection_sort x1) x1), (Permutation (selection_sort x1) (m :: bl)), (Permutation (selection_sort x1) (m :: x1)), (Permutation (selection_sort x1) (y :: bl))
(Permutation (selection_sort x1) (x :: bl)), (Permutation (selection_sort x1) (x :: x1)), (Permutation (selection_sort x1) (a :: bl)), (Permutation (selection_sort x1) (a :: x1)), (Permutation (selection_sort x1) (gv0 :: bl)), (Permutation (selection_sort x1) (gv0 :: x1)), (Permutation (selection_sort x1) (x0 :: bl)), (Permutation (selection_sort x1) (x0 :: x1)), (Permutation (selection_sort x1) (selection_sort bl)), (Permutation (selection_sort x1) (selsort bl m))
(Permutation (selection_sort x1) (selsort bl x)), (Permutation (selection_sort x1) (selsort bl a)), (Permutation (selection_sort x1) (selsort bl gv0)), (Permutation (selection_sort x1) (selsort bl x0)), (Permutation (selection_sort x1) (selsort x1 m)), (Permutation (selection_sort x1) (selsort x1 y)), (Permutation (selection_sort x1) (selsort x1 x)), (Permutation (selection_sort x1) (selsort x1 a)), (Permutation (selection_sort x1) (selsort x1 gv0)), (Permutation (selection_sort x1) (selsort x1 x0))
(Permutation (selection_sort x1) (bl ++ x1)), (Permutation (selection_sort x1) (x1 ++ bl)), (Permutation (selection_sort x1) (x1 ++ x1)), (Permutation (selection_sort x1) []), (Permutation (selsort bl m) bl), (Permutation (selsort bl m) x1), (Permutation (selsort bl m) (m :: bl)), (Permutation (selsort bl m) (m :: x1)), (Permutation (selsort bl m) (y :: bl)), (Permutation (selsort bl m) (y :: x1))
(Permutation (selsort bl m) (x :: x1)), (Permutation (selsort bl m) (a :: bl)), (Permutation (selsort bl m) (a :: x1)), (Permutation (selsort bl m) (gv0 :: bl)), (Permutation (selsort bl m) (gv0 :: x1)), (Permutation (selsort bl m) (x0 :: bl)), (Permutation (selsort bl m) (x0 :: x1)), (Permutation (selsort bl m) (selection_sort bl)), (Permutation (selsort bl m) (selection_sort x1)), (Permutation (selsort bl m) (selsort bl y))
(Permutation (selsort bl m) (selsort bl a)), (Permutation (selsort bl m) (selsort bl gv0)), (Permutation (selsort bl m) (selsort bl x0)), (Permutation (selsort bl m) (selsort x1 m)), (Permutation (selsort bl m) (selsort x1 y)), (Permutation (selsort bl m) (selsort x1 x)), (Permutation (selsort bl m) (selsort x1 a)), (Permutation (selsort bl m) (selsort x1 gv0)), (Permutation (selsort bl m) (selsort x1 x0)), (Permutation (selsort bl m) (bl ++ bl))
(Permutation (selsort bl m) (x1 ++ bl)), (Permutation (selsort bl m) (x1 ++ x1)), (Permutation (selsort bl m) []), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) x1), (Permutation (selsort bl y) (m :: bl)), (Permutation (selsort bl y) (m :: x1)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (y :: x1)), (Permutation (selsort bl y) (x :: bl))
(Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (a :: x1)), (Permutation (selsort bl y) (gv0 :: bl)), (Permutation (selsort bl y) (gv0 :: x1)), (Permutation (selsort bl y) (x0 :: bl)), (Permutation (selsort bl y) (x0 :: x1)), (Permutation (selsort bl y) (selection_sort bl)), (Permutation (selsort bl y) (selection_sort x1)), (Permutation (selsort bl y) (selsort bl m)), (Permutation (selsort bl y) (selsort bl x))
(Permutation (selsort bl y) (selsort bl gv0)), (Permutation (selsort bl y) (selsort bl x0)), (Permutation (selsort bl y) (selsort x1 m)), (Permutation (selsort bl y) (selsort x1 y)), (Permutation (selsort bl y) (selsort x1 x)), (Permutation (selsort bl y) (selsort x1 a)), (Permutation (selsort bl y) (selsort x1 gv0)), (Permutation (selsort bl y) (selsort x1 x0)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (bl ++ x1))
(Permutation (selsort bl y) (x1 ++ x1)), (Permutation (selsort bl y) []), (Permutation (selsort bl x) bl), (Permutation (selsort bl x) x1), (Permutation (selsort bl x) (m :: bl)), (Permutation (selsort bl x) (m :: x1)), (Permutation (selsort bl x) (y :: bl)), (Permutation (selsort bl x) (y :: x1)), (Permutation (selsort bl x) (x :: bl)), (Permutation (selsort bl x) (x :: x1))
(Permutation (selsort bl x) (a :: x1)), (Permutation (selsort bl x) (gv0 :: bl)), (Permutation (selsort bl x) (gv0 :: x1)), (Permutation (selsort bl x) (x0 :: bl)), (Permutation (selsort bl x) (x0 :: x1)), (Permutation (selsort bl x) (selection_sort bl)), (Permutation (selsort bl x) (selection_sort x1)), (Permutation (selsort bl x) (selsort bl m)), (Permutation (selsort bl x) (selsort bl y)), (Permutation (selsort bl x) (selsort bl a))
(Permutation (selsort bl x) (selsort bl x0)), (Permutation (selsort bl x) (selsort x1 m)), (Permutation (selsort bl x) (selsort x1 y)), (Permutation (selsort bl x) (selsort x1 x)), (Permutation (selsort bl x) (selsort x1 a)), (Permutation (selsort bl x) (selsort x1 gv0)), (Permutation (selsort bl x) (selsort x1 x0)), (Permutation (selsort bl x) (bl ++ bl)), (Permutation (selsort bl x) (bl ++ x1)), (Permutation (selsort bl x) (x1 ++ bl))
(Permutation (selsort bl x) []), (Permutation (selsort bl a) bl), (Permutation (selsort bl a) x1), (Permutation (selsort bl a) (m :: bl)), (Permutation (selsort bl a) (m :: x1)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (y :: x1)), (Permutation (selsort bl a) (x :: bl)), (Permutation (selsort bl a) (x :: x1)), (Permutation (selsort bl a) (a :: bl))
(Permutation (selsort bl a) (gv0 :: bl)), (Permutation (selsort bl a) (gv0 :: x1)), (Permutation (selsort bl a) (x0 :: bl)), (Permutation (selsort bl a) (x0 :: x1)), (Permutation (selsort bl a) (selection_sort bl)), (Permutation (selsort bl a) (selection_sort x1)), (Permutation (selsort bl a) (selsort bl m)), (Permutation (selsort bl a) (selsort bl y)), (Permutation (selsort bl a) (selsort bl x)), (Permutation (selsort bl a) (selsort bl gv0))
(Permutation (selsort bl a) (selsort x1 m)), (Permutation (selsort bl a) (selsort x1 y)), (Permutation (selsort bl a) (selsort x1 x)), (Permutation (selsort bl a) (selsort x1 a)), (Permutation (selsort bl a) (selsort x1 gv0)), (Permutation (selsort bl a) (selsort x1 x0)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) (bl ++ x1)), (Permutation (selsort bl a) (x1 ++ bl)), (Permutation (selsort bl a) (x1 ++ x1))
(Permutation (selsort bl gv0) bl), (Permutation (selsort bl gv0) x1), (Permutation (selsort bl gv0) (m :: bl)), (Permutation (selsort bl gv0) (m :: x1)), (Permutation (selsort bl gv0) (y :: bl)), (Permutation (selsort bl gv0) (y :: x1)), (Permutation (selsort bl gv0) (x :: bl)), (Permutation (selsort bl gv0) (x :: x1)), (Permutation (selsort bl gv0) (a :: bl)), (Permutation (selsort bl gv0) (a :: x1))
(Permutation (selsort bl gv0) (gv0 :: x1)), (Permutation (selsort bl gv0) (x0 :: bl)), (Permutation (selsort bl gv0) (x0 :: x1)), (Permutation (selsort bl gv0) (selection_sort bl)), (Permutation (selsort bl gv0) (selection_sort x1)), (Permutation (selsort bl gv0) (selsort bl m)), (Permutation (selsort bl gv0) (selsort bl y)), (Permutation (selsort bl gv0) (selsort bl x)), (Permutation (selsort bl gv0) (selsort bl a)), (Permutation (selsort bl gv0) (selsort bl x0))
(Permutation (selsort bl gv0) (selsort x1 y)), (Permutation (selsort bl gv0) (selsort x1 x)), (Permutation (selsort bl gv0) (selsort x1 a)), (Permutation (selsort bl gv0) (selsort x1 gv0)), (Permutation (selsort bl gv0) (selsort x1 x0)), (Permutation (selsort bl gv0) (bl ++ bl)), (Permutation (selsort bl gv0) (bl ++ x1)), (Permutation (selsort bl gv0) (x1 ++ bl)), (Permutation (selsort bl gv0) (x1 ++ x1)), (Permutation (selsort bl gv0) [])
(Permutation (selsort bl x0) x1), (Permutation (selsort bl x0) (m :: bl)), (Permutation (selsort bl x0) (m :: x1)), (Permutation (selsort bl x0) (y :: bl)), (Permutation (selsort bl x0) (y :: x1)), (Permutation (selsort bl x0) (x :: bl)), (Permutation (selsort bl x0) (x :: x1)), (Permutation (selsort bl x0) (a :: bl)), (Permutation (selsort bl x0) (a :: x1)), (Permutation (selsort bl x0) (gv0 :: bl))
(Permutation (selsort bl x0) (x0 :: bl)), (Permutation (selsort bl x0) (x0 :: x1)), (Permutation (selsort bl x0) (selection_sort bl)), (Permutation (selsort bl x0) (selection_sort x1)), (Permutation (selsort bl x0) (selsort bl m)), (Permutation (selsort bl x0) (selsort bl y)), (Permutation (selsort bl x0) (selsort bl x)), (Permutation (selsort bl x0) (selsort bl a)), (Permutation (selsort bl x0) (selsort bl gv0)), (Permutation (selsort bl x0) (selsort x1 m))
(Permutation (selsort bl x0) (selsort x1 x)), (Permutation (selsort bl x0) (selsort x1 a)), (Permutation (selsort bl x0) (selsort x1 gv0)), (Permutation (selsort bl x0) (selsort x1 x0)), (Permutation (selsort bl x0) (bl ++ bl)), (Permutation (selsort bl x0) (bl ++ x1)), (Permutation (selsort bl x0) (x1 ++ bl)), (Permutation (selsort bl x0) (x1 ++ x1)), (Permutation (selsort bl x0) []), (Permutation (selsort x1 m) bl)
(Permutation (selsort x1 m) (m :: bl)), (Permutation (selsort x1 m) (m :: x1)), (Permutation (selsort x1 m) (y :: bl)), (Permutation (selsort x1 m) (y :: x1)), (Permutation (selsort x1 m) (x :: bl)), (Permutation (selsort x1 m) (x :: x1)), (Permutation (selsort x1 m) (a :: bl)), (Permutation (selsort x1 m) (a :: x1)), (Permutation (selsort x1 m) (gv0 :: bl)), (Permutation (selsort x1 m) (gv0 :: x1))
(Permutation (selsort x1 m) (x0 :: x1)), (Permutation (selsort x1 m) (selection_sort bl)), (Permutation (selsort x1 m) (selection_sort x1)), (Permutation (selsort x1 m) (selsort bl m)), (Permutation (selsort x1 m) (selsort bl y)), (Permutation (selsort x1 m) (selsort bl x)), (Permutation (selsort x1 m) (selsort bl a)), (Permutation (selsort x1 m) (selsort bl gv0)), (Permutation (selsort x1 m) (selsort bl x0)), (Permutation (selsort x1 m) (selsort x1 y))
(Permutation (selsort x1 m) (selsort x1 a)), (Permutation (selsort x1 m) (selsort x1 gv0)), (Permutation (selsort x1 m) (selsort x1 x0)), (Permutation (selsort x1 m) (bl ++ bl)), (Permutation (selsort x1 m) (bl ++ x1)), (Permutation (selsort x1 m) (x1 ++ bl)), (Permutation (selsort x1 m) (x1 ++ x1)), (Permutation (selsort x1 m) []), (Permutation (selsort x1 y) bl), (Permutation (selsort x1 y) x1)
(Permutation (selsort x1 y) (m :: x1)), (Permutation (selsort x1 y) (y :: bl)), (Permutation (selsort x1 y) (y :: x1)), (Permutation (selsort x1 y) (x :: bl)), (Permutation (selsort x1 y) (x :: x1)), (Permutation (selsort x1 y) (a :: bl)), (Permutation (selsort x1 y) (a :: x1)), (Permutation (selsort x1 y) (gv0 :: bl)), (Permutation (selsort x1 y) (gv0 :: x1)), (Permutation (selsort x1 y) (x0 :: bl))
(Permutation (selsort x1 y) (selection_sort bl)), (Permutation (selsort x1 y) (selection_sort x1)), (Permutation (selsort x1 y) (selsort bl m)), (Permutation (selsort x1 y) (selsort bl y)), (Permutation (selsort x1 y) (selsort bl x)), (Permutation (selsort x1 y) (selsort bl a)), (Permutation (selsort x1 y) (selsort bl gv0)), (Permutation (selsort x1 y) (selsort bl x0)), (Permutation (selsort x1 y) (selsort x1 m)), (Permutation (selsort x1 y) (selsort x1 x))
(Permutation (selsort x1 y) (selsort x1 gv0)), (Permutation (selsort x1 y) (selsort x1 x0)), (Permutation (selsort x1 y) (bl ++ bl)), (Permutation (selsort x1 y) (bl ++ x1)), (Permutation (selsort x1 y) (x1 ++ bl)), (Permutation (selsort x1 y) (x1 ++ x1)), (Permutation (selsort x1 y) []), (Permutation (selsort x1 x) bl), (Permutation (selsort x1 x) x1), (Permutation (selsort x1 x) (m :: bl))
(Permutation (selsort x1 x) (y :: bl)), (Permutation (selsort x1 x) (y :: x1)), (Permutation (selsort x1 x) (x :: bl)), (Permutation (selsort x1 x) (x :: x1)), (Permutation (selsort x1 x) (a :: bl)), (Permutation (selsort x1 x) (a :: x1)), (Permutation (selsort x1 x) (gv0 :: bl)), (Permutation (selsort x1 x) (gv0 :: x1)), (Permutation (selsort x1 x) (x0 :: bl)), (Permutation (selsort x1 x) (x0 :: x1))
(Permutation (selsort x1 x) (selection_sort x1)), (Permutation (selsort x1 x) (selsort bl m)), (Permutation (selsort x1 x) (selsort bl y)), (Permutation (selsort x1 x) (selsort bl x)), (Permutation (selsort x1 x) (selsort bl a)), (Permutation (selsort x1 x) (selsort bl gv0)), (Permutation (selsort x1 x) (selsort bl x0)), (Permutation (selsort x1 x) (selsort x1 m)), (Permutation (selsort x1 x) (selsort x1 y)), (Permutation (selsort x1 x) (selsort x1 a))
(Permutation (selsort x1 x) (selsort x1 x0)), (Permutation (selsort x1 x) (bl ++ bl)), (Permutation (selsort x1 x) (bl ++ x1)), (Permutation (selsort x1 x) (x1 ++ bl)), (Permutation (selsort x1 x) (x1 ++ x1)), (Permutation (selsort x1 x) []), (Permutation (selsort x1 a) bl), (Permutation (selsort x1 a) x1), (Permutation (selsort x1 a) (m :: bl)), (Permutation (selsort x1 a) (m :: x1))
(Permutation (selsort x1 a) (y :: x1)), (Permutation (selsort x1 a) (x :: bl)), (Permutation (selsort x1 a) (x :: x1)), (Permutation (selsort x1 a) (a :: bl)), (Permutation (selsort x1 a) (a :: x1)), (Permutation (selsort x1 a) (gv0 :: bl)), (Permutation (selsort x1 a) (gv0 :: x1)), (Permutation (selsort x1 a) (x0 :: bl)), (Permutation (selsort x1 a) (x0 :: x1)), (Permutation (selsort x1 a) (selection_sort bl))
(Permutation (selsort x1 a) (selsort bl m)), (Permutation (selsort x1 a) (selsort bl y)), (Permutation (selsort x1 a) (selsort bl x)), (Permutation (selsort x1 a) (selsort bl a)), (Permutation (selsort x1 a) (selsort bl gv0)), (Permutation (selsort x1 a) (selsort bl x0)), (Permutation (selsort x1 a) (selsort x1 m)), (Permutation (selsort x1 a) (selsort x1 y)), (Permutation (selsort x1 a) (selsort x1 x)), (Permutation (selsort x1 a) (selsort x1 gv0))
(Permutation (selsort x1 a) (bl ++ bl)), (Permutation (selsort x1 a) (bl ++ x1)), (Permutation (selsort x1 a) (x1 ++ bl)), (Permutation (selsort x1 a) (x1 ++ x1)), (Permutation (selsort x1 a) []), (Permutation (selsort x1 gv0) bl), (Permutation (selsort x1 gv0) x1), (Permutation (selsort x1 gv0) (m :: bl)), (Permutation (selsort x1 gv0) (m :: x1)), (Permutation (selsort x1 gv0) (y :: bl))
(Permutation (selsort x1 gv0) (x :: bl)), (Permutation (selsort x1 gv0) (x :: x1)), (Permutation (selsort x1 gv0) (a :: bl)), (Permutation (selsort x1 gv0) (a :: x1)), (Permutation (selsort x1 gv0) (gv0 :: bl)), (Permutation (selsort x1 gv0) (gv0 :: x1)), (Permutation (selsort x1 gv0) (x0 :: bl)), (Permutation (selsort x1 gv0) (x0 :: x1)), (Permutation (selsort x1 gv0) (selection_sort bl)), (Permutation (selsort x1 gv0) (selection_sort x1))
(Permutation (selsort x1 gv0) (selsort bl y)), (Permutation (selsort x1 gv0) (selsort bl x)), (Permutation (selsort x1 gv0) (selsort bl a)), (Permutation (selsort x1 gv0) (selsort bl gv0)), (Permutation (selsort x1 gv0) (selsort bl x0)), (Permutation (selsort x1 gv0) (selsort x1 m)), (Permutation (selsort x1 gv0) (selsort x1 y)), (Permutation (selsort x1 gv0) (selsort x1 x)), (Permutation (selsort x1 gv0) (selsort x1 a)), (Permutation (selsort x1 gv0) (selsort x1 x0))
(Permutation (selsort x1 gv0) (bl ++ x1)), (Permutation (selsort x1 gv0) (x1 ++ bl)), (Permutation (selsort x1 gv0) (x1 ++ x1)), (Permutation (selsort x1 gv0) []), (Permutation (selsort x1 x0) bl), (Permutation (selsort x1 x0) x1), (Permutation (selsort x1 x0) (m :: bl)), (Permutation (selsort x1 x0) (m :: x1)), (Permutation (selsort x1 x0) (y :: bl)), (Permutation (selsort x1 x0) (y :: x1))
(Permutation (selsort x1 x0) (x :: x1)), (Permutation (selsort x1 x0) (a :: bl)), (Permutation (selsort x1 x0) (a :: x1)), (Permutation (selsort x1 x0) (gv0 :: bl)), (Permutation (selsort x1 x0) (gv0 :: x1)), (Permutation (selsort x1 x0) (x0 :: bl)), (Permutation (selsort x1 x0) (x0 :: x1)), (Permutation (selsort x1 x0) (selection_sort bl)), (Permutation (selsort x1 x0) (selection_sort x1)), (Permutation (selsort x1 x0) (selsort bl m))
(Permutation (selsort x1 x0) (selsort bl x)), (Permutation (selsort x1 x0) (selsort bl a)), (Permutation (selsort x1 x0) (selsort bl gv0)), (Permutation (selsort x1 x0) (selsort bl x0)), (Permutation (selsort x1 x0) (selsort x1 m)), (Permutation (selsort x1 x0) (selsort x1 y)), (Permutation (selsort x1 x0) (selsort x1 x)), (Permutation (selsort x1 x0) (selsort x1 a)), (Permutation (selsort x1 x0) (selsort x1 gv0)), (Permutation (selsort x1 x0) (bl ++ bl))
(Permutation (selsort x1 x0) (x1 ++ bl)), (Permutation (selsort x1 x0) (x1 ++ x1)), (Permutation (selsort x1 x0) []), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) x1), (Permutation (bl ++ bl) (m :: bl)), (Permutation (bl ++ bl) (m :: x1)), (Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (y :: x1)), (Permutation (bl ++ bl) (x :: bl))
(Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (a :: x1)), (Permutation (bl ++ bl) (gv0 :: bl)), (Permutation (bl ++ bl) (gv0 :: x1)), (Permutation (bl ++ bl) (x0 :: bl)), (Permutation (bl ++ bl) (x0 :: x1)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selection_sort x1)), (Permutation (bl ++ bl) (selsort bl m)), (Permutation (bl ++ bl) (selsort bl y))
(Permutation (bl ++ bl) (selsort bl a)), (Permutation (bl ++ bl) (selsort bl gv0)), (Permutation (bl ++ bl) (selsort bl x0)), (Permutation (bl ++ bl) (selsort x1 m)), (Permutation (bl ++ bl) (selsort x1 y)), (Permutation (bl ++ bl) (selsort x1 x)), (Permutation (bl ++ bl) (selsort x1 a)), (Permutation (bl ++ bl) (selsort x1 gv0)), (Permutation (bl ++ bl) (selsort x1 x0)), (Permutation (bl ++ bl) (bl ++ x1))
(Permutation (bl ++ bl) (x1 ++ x1)), (Permutation (bl ++ bl) []), (Permutation (bl ++ x1) bl), (Permutation (bl ++ x1) x1), (Permutation (bl ++ x1) (m :: bl)), (Permutation (bl ++ x1) (m :: x1)), (Permutation (bl ++ x1) (y :: bl)), (Permutation (bl ++ x1) (y :: x1)), (Permutation (bl ++ x1) (x :: bl)), (Permutation (bl ++ x1) (x :: x1))
(Permutation (bl ++ x1) (a :: x1)), (Permutation (bl ++ x1) (gv0 :: bl)), (Permutation (bl ++ x1) (gv0 :: x1)), (Permutation (bl ++ x1) (x0 :: bl)), (Permutation (bl ++ x1) (x0 :: x1)), (Permutation (bl ++ x1) (selection_sort bl)), (Permutation (bl ++ x1) (selection_sort x1)), (Permutation (bl ++ x1) (selsort bl m)), (Permutation (bl ++ x1) (selsort bl y)), (Permutation (bl ++ x1) (selsort bl x))
(Permutation (bl ++ x1) (selsort bl gv0)), (Permutation (bl ++ x1) (selsort bl x0)), (Permutation (bl ++ x1) (selsort x1 m)), (Permutation (bl ++ x1) (selsort x1 y)), (Permutation (bl ++ x1) (selsort x1 x)), (Permutation (bl ++ x1) (selsort x1 a)), (Permutation (bl ++ x1) (selsort x1 gv0)), (Permutation (bl ++ x1) (selsort x1 x0)), (Permutation (bl ++ x1) (bl ++ bl)), (Permutation (bl ++ x1) (x1 ++ bl))
(Permutation (bl ++ x1) []), (Permutation (x1 ++ bl) bl), (Permutation (x1 ++ bl) x1), (Permutation (x1 ++ bl) (m :: bl)), (Permutation (x1 ++ bl) (m :: x1)), (Permutation (x1 ++ bl) (y :: bl)), (Permutation (x1 ++ bl) (y :: x1)), (Permutation (x1 ++ bl) (x :: bl)), (Permutation (x1 ++ bl) (x :: x1)), (Permutation (x1 ++ bl) (a :: bl))
(Permutation (x1 ++ bl) (gv0 :: bl)), (Permutation (x1 ++ bl) (gv0 :: x1)), (Permutation (x1 ++ bl) (x0 :: bl)), (Permutation (x1 ++ bl) (x0 :: x1)), (Permutation (x1 ++ bl) (selection_sort bl)), (Permutation (x1 ++ bl) (selection_sort x1)), (Permutation (x1 ++ bl) (selsort bl m)), (Permutation (x1 ++ bl) (selsort bl y)), (Permutation (x1 ++ bl) (selsort bl x)), (Permutation (x1 ++ bl) (selsort bl a))
(Permutation (x1 ++ bl) (selsort bl x0)), (Permutation (x1 ++ bl) (selsort x1 m)), (Permutation (x1 ++ bl) (selsort x1 y)), (Permutation (x1 ++ bl) (selsort x1 x)), (Permutation (x1 ++ bl) (selsort x1 a)), (Permutation (x1 ++ bl) (selsort x1 gv0)), (Permutation (x1 ++ bl) (selsort x1 x0)), (Permutation (x1 ++ bl) (bl ++ bl)), (Permutation (x1 ++ bl) (bl ++ x1)), (Permutation (x1 ++ bl) (x1 ++ x1))
(Permutation (x1 ++ x1) bl), (Permutation (x1 ++ x1) x1), (Permutation (x1 ++ x1) (m :: bl)), (Permutation (x1 ++ x1) (m :: x1)), (Permutation (x1 ++ x1) (y :: bl)), (Permutation (x1 ++ x1) (y :: x1)), (Permutation (x1 ++ x1) (x :: bl)), (Permutation (x1 ++ x1) (x :: x1)), (Permutation (x1 ++ x1) (a :: bl)), (Permutation (x1 ++ x1) (a :: x1))
(Permutation (x1 ++ x1) (gv0 :: x1)), (Permutation (x1 ++ x1) (x0 :: bl)), (Permutation (x1 ++ x1) (x0 :: x1)), (Permutation (x1 ++ x1) (selection_sort bl)), (Permutation (x1 ++ x1) (selection_sort x1)), (Permutation (x1 ++ x1) (selsort bl m)), (Permutation (x1 ++ x1) (selsort bl y)), (Permutation (x1 ++ x1) (selsort bl x)), (Permutation (x1 ++ x1) (selsort bl a)), (Permutation (x1 ++ x1) (selsort bl gv0))
(Permutation (x1 ++ x1) (selsort x1 m)), (Permutation (x1 ++ x1) (selsort x1 y)), (Permutation (x1 ++ x1) (selsort x1 x)), (Permutation (x1 ++ x1) (selsort x1 a)), (Permutation (x1 ++ x1) (selsort x1 gv0)), (Permutation (x1 ++ x1) (selsort x1 x0)), (Permutation (x1 ++ x1) (bl ++ bl)), (Permutation (x1 ++ x1) (bl ++ x1)), (Permutation (x1 ++ x1) (x1 ++ bl)), (Permutation (x1 ++ x1) [])
(Permutation [] x1), (Permutation [] (m :: bl)), (Permutation [] (m :: x1)), (Permutation [] (y :: bl)), (Permutation [] (y :: x1)), (Permutation [] (x :: bl)), (Permutation [] (x :: x1)), (Permutation [] (a :: bl)), (Permutation [] (a :: x1)), (Permutation [] (gv0 :: bl))
(Permutation [] (x0 :: bl)), (Permutation [] (x0 :: x1)), (Permutation [] (selection_sort bl)), (Permutation [] (selection_sort x1)), (Permutation [] (selsort bl m)), (Permutation [] (selsort bl y)), (Permutation [] (selsort bl x)), (Permutation [] (selsort bl a)), (Permutation [] (selsort bl gv0)), (Permutation [] (selsort bl x0))
(Permutation [] (selsort x1 y)), (Permutation [] (selsort x1 x)), (Permutation [] (selsort x1 a)), (Permutation [] (selsort x1 gv0)), (Permutation [] (selsort x1 x0)), (Permutation [] (bl ++ bl)), (Permutation [] (bl ++ x1)), (Permutation [] (x1 ++ bl)), (Permutation [] (x1 ++ x1)), (In m (m :: bl))
(In m (y :: bl)), (In m (y :: x1)), (In m (x :: bl)), (In m (x :: x1)), (In m (a :: bl)), (In m (a :: x1)), (In m (gv0 :: bl)), (In m (gv0 :: x1)), (In m (x0 :: bl)), (In m (x0 :: x1))
(In m (selection_sort x1)), (In m (selsort bl m)), (In m (selsort bl y)), (In m (selsort bl x)), (In m (selsort bl a)), (In m (selsort bl gv0)), (In m (selsort bl x0)), (In m (selsort x1 m)), (In m (selsort x1 y)), (In m (selsort x1 x))
(In m (selsort x1 gv0)), (In m (selsort x1 x0)), (In m (bl ++ bl)), (In m (bl ++ x1)), (In m (x1 ++ bl)), (In m (x1 ++ x1)), (In y (m :: bl)), (In y (m :: x1)), (In y (y :: bl)), (In y (y :: x1))
(In y (x :: x1)), (In y (a :: bl)), (In y (a :: x1)), (In y (gv0 :: bl)), (In y (gv0 :: x1)), (In y (x0 :: bl)), (In y (x0 :: x1)), (In y (selection_sort bl)), (In y (selection_sort x1)), (In y (selsort bl m))
(In y (selsort bl x)), (In y (selsort bl a)), (In y (selsort bl gv0)), (In y (selsort bl x0)), (In y (selsort x1 m)), (In y (selsort x1 y)), (In y (selsort x1 x)), (In y (selsort x1 a)), (In y (selsort x1 gv0)), (In y (selsort x1 x0))
(In y (bl ++ x1)), (In y (x1 ++ bl)), (In y (x1 ++ x1)), (In x (m :: bl)), (In x (m :: x1)), (In x (y :: bl)), (In x (y :: x1)), (In x (x :: bl)), (In x (x :: x1)), (In x (a :: bl))
(In x (gv0 :: bl)), (In x (gv0 :: x1)), (In x (x0 :: bl)), (In x (x0 :: x1)), (In x (selection_sort bl)), (In x (selection_sort x1)), (In x (selsort bl m)), (In x (selsort bl y)), (In x (selsort bl x)), (In x (selsort bl a))
(In x (selsort bl x0)), (In x (selsort x1 m)), (In x (selsort x1 y)), (In x (selsort x1 x)), (In x (selsort x1 a)), (In x (selsort x1 gv0)), (In x (selsort x1 x0)), (In x (bl ++ bl)), (In x (bl ++ x1)), (In x (x1 ++ bl))
(In a (m :: bl)), (In a (m :: x1)), (In a (y :: bl)), (In a (y :: x1)), (In a (x :: bl)), (In a (x :: x1)), (In a (a :: bl)), (In a (a :: x1)), (In a (gv0 :: bl)), (In a (gv0 :: x1))
(In a (x0 :: x1)), (In a (selection_sort bl)), (In a (selection_sort x1)), (In a (selsort bl m)), (In a (selsort bl y)), (In a (selsort bl x)), (In a (selsort bl a)), (In a (selsort bl gv0)), (In a (selsort bl x0)), (In a (selsort x1 m))
(In a (selsort x1 x)), (In a (selsort x1 a)), (In a (selsort x1 gv0)), (In a (selsort x1 x0)), (In a (bl ++ bl)), (In a (bl ++ x1)), (In a (x1 ++ bl)), (In a (x1 ++ x1)), (In gv0 (m :: bl)), (In gv0 (m :: x1))
(In gv0 (y :: x1)), (In gv0 (x :: bl)), (In gv0 (x :: x1)), (In gv0 (a :: bl)), (In gv0 (a :: x1)), (In gv0 (gv0 :: bl)), (In gv0 (gv0 :: x1)), (In gv0 (x0 :: bl)), (In gv0 (x0 :: x1)), (In gv0 (selection_sort bl))
(In gv0 (selsort bl m)), (In gv0 (selsort bl y)), (In gv0 (selsort bl x)), (In gv0 (selsort bl a)), (In gv0 (selsort bl gv0)), (In gv0 (selsort bl x0)), (In gv0 (selsort x1 m)), (In gv0 (selsort x1 y)), (In gv0 (selsort x1 x)), (In gv0 (selsort x1 a))
(In gv0 (selsort x1 x0)), (In gv0 (bl ++ bl)), (In gv0 (bl ++ x1)), (In gv0 (x1 ++ bl)), (In gv0 (x1 ++ x1)), (In x0 (m :: bl)), (In x0 (m :: x1)), (In x0 (y :: bl)), (In x0 (y :: x1)), (In x0 (x :: bl))
(In x0 (a :: bl)), (In x0 (a :: x1)), (In x0 (gv0 :: bl)), (In x0 (gv0 :: x1)), (In x0 (x0 :: bl)), (In x0 (x0 :: x1)), (In x0 (selection_sort bl)), (In x0 (selection_sort x1)), (In x0 (selsort bl m)), (In x0 (selsort bl y))
(In x0 (selsort bl a)), (In x0 (selsort bl gv0)), (In x0 (selsort bl x0)), (In x0 (selsort x1 m)), (In x0 (selsort x1 y)), (In x0 (selsort x1 x)), (In x0 (selsort x1 a)), (In x0 (selsort x1 gv0)), (In x0 (selsort x1 x0)), (In x0 (bl ++ bl))
(In x0 (x1 ++ bl)), (In x0 (x1 ++ x1)), (In (length bl) bl), (In (length bl) x1), (In (length bl) (m :: bl)), (In (length bl) (m :: x1)), (In (length bl) (y :: bl)), (In (length bl) (y :: x1)), (In (length bl) (x :: bl)), (In (length bl) (x :: x1))
(In (length bl) (a :: x1)), (In (length bl) (gv0 :: bl)), (In (length bl) (gv0 :: x1)), (In (length bl) (x0 :: bl)), (In (length bl) (x0 :: x1)), (In (length bl) (selection_sort bl)), (In (length bl) (selection_sort x1)), (In (length bl) (selsort bl m)), (In (length bl) (selsort bl y)), (In (length bl) (selsort bl x))
(In (length bl) (selsort bl gv0)), (In (length bl) (selsort bl x0)), (In (length bl) (selsort x1 m)), (In (length bl) (selsort x1 y)), (In (length bl) (selsort x1 x)), (In (length bl) (selsort x1 a)), (In (length bl) (selsort x1 gv0)), (In (length bl) (selsort x1 x0)), (In (length bl) (bl ++ bl)), (In (length bl) (bl ++ x1))
(In (length bl) (x1 ++ x1)), (In (length x1) bl), (In (length x1) x1), (In (length x1) (m :: bl)), (In (length x1) (m :: x1)), (In (length x1) (y :: bl)), (In (length x1) (y :: x1)), (In (length x1) (x :: bl)), (In (length x1) (x :: x1)), (In (length x1) (a :: bl))
(In (length x1) (gv0 :: bl)), (In (length x1) (gv0 :: x1)), (In (length x1) (x0 :: bl)), (In (length x1) (x0 :: x1)), (In (length x1) (selection_sort bl)), (In (length x1) (selection_sort x1)), (In (length x1) (selsort bl m)), (In (length x1) (selsort bl y)), (In (length x1) (selsort bl x)), (In (length x1) (selsort bl a))
(In (length x1) (selsort bl x0)), (In (length x1) (selsort x1 m)), (In (length x1) (selsort x1 y)), (In (length x1) (selsort x1 x)), (In (length x1) (selsort x1 a)), (In (length x1) (selsort x1 gv0)), (In (length x1) (selsort x1 x0)), (In (length x1) (bl ++ bl)), (In (length x1) (bl ++ x1)), (In (length x1) (x1 ++ bl))
(m < length bl), (m < length x1), (y < length bl), (y < length x1), (x < length bl), (x < length x1), (a < length bl), (a < length x1), (gv0 < length bl), (gv0 < length x1)
(x0 < length x1), (length bl < m), (length bl < y), (length bl < x), (length bl < a), (length bl < gv0), (length bl < x0), (length bl < length x1), (length x1 < m), (length x1 < y)
(length x1 < a), (length x1 < gv0), (length x1 < x0), (length x1 < length bl), (m <= length bl), (m <= length x1), (y <= length bl), (y <= length x1), (x <= length bl), (x <= length x1)
(a <= length x1), (gv0 <= length bl), (gv0 <= length x1), (x0 <= length bl), (x0 <= length x1), (length bl <= m), (length bl <= y), (length bl <= x), (length bl <= a), (length bl <= gv0)
(length bl <= length x1), (length x1 <= m), (length x1 <= y), (length x1 <= x), (length x1 <= a), (length x1 <= gv0), (length x1 <= x0), (length x1 <= length bl), (~ m <=* bl), (~ m <=* x1)
(~ y <=* x1), (~ x <=* bl), (~ x <=* x1), (~ a <=* bl), (~ a <=* x1), (~ gv0 <=* bl), (~ gv0 <=* x1), (~ x0 <=* bl), (~ x0 <=* x1), (~ sorted bl)
(~ Permutation bl bl), (~ Permutation bl x1), (~ Permutation x1 bl), (~ Permutation x1 x1), (~ In m bl), (~ In m x1), (~ In y bl), (~ In y x1), (~ In x bl), (~ In x x1)
(~ In a x1), (~ In gv0 bl), (~ In gv0 x1), (~ In x0 bl), (~ In x0 x1), (~ m < m), (~ m < y), (~ m < x), (~ m < a), (~ m < gv0)
(~ y < m), (~ y < y), (~ y < x), (~ y < a), (~ y < gv0), (~ y < x0), (~ x < m), (~ x < y), (~ x < x), (~ x < a)
(~ x < x0), (~ a < m), (~ a < y), (~ a < x), (~ a < a), (~ a < gv0), (~ a < x0), (~ gv0 < m), (~ gv0 < y), (~ gv0 < x)
(~ gv0 < gv0), (~ gv0 < x0), (~ x0 < m), (~ x0 < y), (~ x0 < x), (~ x0 < a), (~ x0 < gv0), (~ x0 < x0), (~ m <= m), (~ m <= y)
(~ m <= a), (~ m <= gv0), (~ m <= x0), (~ y <= m), (~ y <= y), (~ y <= x), (~ y <= a), (~ y <= gv0), (~ y <= x0), (~ x <= m)
(~ x <= x), (~ x <= a), (~ x <= gv0), (~ x <= x0), (~ a <= m), (~ a <= y), (~ a <= x), (~ a <= a), (~ a <= gv0), (~ a <= x0)
(~ gv0 <= y), (~ gv0 <= x), (~ gv0 <= a), (~ gv0 <= gv0), (~ gv0 <= x0), (~ x0 <= m), (~ x0 <= y), (~ x0 <= x), (~ x0 <= a), (~ x0 <= gv0)
(bl <> bl), (bl <> x1), (x1 <> bl), (x1 <> x1), (m <> m), (m <> y), (m <> x), (m <> a), (m <> gv0), (m <> x0)
(y <> y), (y <> x), (y <> a), (y <> gv0), (y <> x0), (x <> m), (x <> y), (x <> x), (x <> a), (x <> gv0)
(a <> m), (a <> y), (a <> x), (a <> a), (a <> gv0), (a <> x0), (gv0 <> m), (gv0 <> y), (gv0 <> x), (gv0 <> a)
(gv0 <> x0), (x0 <> m), (x0 <> y), (x0 <> x), (x0 <> a), (x0 <> gv0), (x0 <> x0), (None = Some bl), (None = Some x1), (m :: bl = bl)
(m :: bl = selection_sort bl), (m :: bl = selection_sort x1), (m :: bl = selsort bl m), (m :: bl = selsort bl y), (m :: bl = selsort bl x), (m :: bl = selsort bl a), (m :: bl = selsort bl gv0), (m :: bl = selsort bl x0), (m :: bl = selsort x1 m), (m :: bl = selsort x1 y)
(m :: bl = selsort x1 a), (m :: bl = selsort x1 gv0), (m :: bl = selsort x1 x0), (m :: bl = bl ++ bl), (m :: bl = bl ++ x1), (m :: bl = x1 ++ bl), (m :: bl = x1 ++ x1), (m :: bl = []), (m :: x1 = bl), (m :: x1 = x1)
(m :: x1 = selection_sort x1), (m :: x1 = selsort bl m), (m :: x1 = selsort bl y), (m :: x1 = selsort bl x), (m :: x1 = selsort bl a), (m :: x1 = selsort bl gv0), (m :: x1 = selsort bl x0), (m :: x1 = selsort x1 m), (m :: x1 = selsort x1 y), (m :: x1 = selsort x1 x)
(m :: x1 = selsort x1 gv0), (m :: x1 = selsort x1 x0), (m :: x1 = bl ++ bl), (m :: x1 = bl ++ x1), (m :: x1 = x1 ++ bl), (m :: x1 = x1 ++ x1), (m :: x1 = []), (y :: bl = bl), (y :: bl = x1), (y :: bl = selection_sort bl)
(y :: bl = selsort bl m), (y :: bl = selsort bl y), (y :: bl = selsort bl x), (y :: bl = selsort bl a), (y :: bl = selsort bl gv0), (y :: bl = selsort bl x0), (y :: bl = selsort x1 m), (y :: bl = selsort x1 y), (y :: bl = selsort x1 x), (y :: bl = selsort x1 a)
(y :: bl = selsort x1 x0), (y :: bl = bl ++ bl), (y :: bl = bl ++ x1), (y :: bl = x1 ++ bl), (y :: bl = x1 ++ x1), (y :: bl = []), (y :: x1 = bl), (y :: x1 = x1), (y :: x1 = selection_sort bl), (y :: x1 = selection_sort x1)
(y :: x1 = selsort bl y), (y :: x1 = selsort bl x), (y :: x1 = selsort bl a), (y :: x1 = selsort bl gv0), (y :: x1 = selsort bl x0), (y :: x1 = selsort x1 m), (y :: x1 = selsort x1 y), (y :: x1 = selsort x1 x), (y :: x1 = selsort x1 a), (y :: x1 = selsort x1 gv0)
(y :: x1 = bl ++ bl), (y :: x1 = bl ++ x1), (y :: x1 = x1 ++ bl), (y :: x1 = x1 ++ x1), (y :: x1 = []), (x :: bl = bl), (x :: bl = x1), (x :: bl = selection_sort bl), (x :: bl = selection_sort x1), (x :: bl = selsort bl m)
(x :: bl = selsort bl x), (x :: bl = selsort bl a), (x :: bl = selsort bl gv0), (x :: bl = selsort bl x0), (x :: bl = selsort x1 m), (x :: bl = selsort x1 y), (x :: bl = selsort x1 x), (x :: bl = selsort x1 a), (x :: bl = selsort x1 gv0), (x :: bl = selsort x1 x0)
(x :: bl = bl ++ x1), (x :: bl = x1 ++ bl), (x :: bl = x1 ++ x1), (x :: bl = []), (x :: x1 = bl), (x :: x1 = x1), (x :: x1 = selection_sort bl), (x :: x1 = selection_sort x1), (x :: x1 = selsort bl m), (x :: x1 = selsort bl y)
(x :: x1 = selsort bl a), (x :: x1 = selsort bl gv0), (x :: x1 = selsort bl x0), (x :: x1 = selsort x1 m), (x :: x1 = selsort x1 y), (x :: x1 = selsort x1 x), (x :: x1 = selsort x1 a), (x :: x1 = selsort x1 gv0), (x :: x1 = selsort x1 x0), (x :: x1 = bl ++ bl)
(x :: x1 = x1 ++ bl), (x :: x1 = x1 ++ x1), (x :: x1 = []), (a :: bl = bl), (a :: bl = x1), (a :: bl = selection_sort bl), (a :: bl = selection_sort x1), (a :: bl = selsort bl m), (a :: bl = selsort bl y), (a :: bl = selsort bl x)
(a :: bl = selsort bl gv0), (a :: bl = selsort bl x0), (a :: bl = selsort x1 m), (a :: bl = selsort x1 y), (a :: bl = selsort x1 x), (a :: bl = selsort x1 a), (a :: bl = selsort x1 gv0), (a :: bl = selsort x1 x0), (a :: bl = bl ++ bl), (a :: bl = bl ++ x1)
(a :: bl = x1 ++ x1), (a :: bl = []), (a :: x1 = bl), (a :: x1 = x1), (a :: x1 = selection_sort bl), (a :: x1 = selection_sort x1), (a :: x1 = selsort bl m), (a :: x1 = selsort bl y), (a :: x1 = selsort bl x), (a :: x1 = selsort bl a)
(a :: x1 = selsort bl x0), (a :: x1 = selsort x1 m), (a :: x1 = selsort x1 y), (a :: x1 = selsort x1 x), (a :: x1 = selsort x1 a), (a :: x1 = selsort x1 gv0), (a :: x1 = selsort x1 x0), (a :: x1 = bl ++ bl), (a :: x1 = bl ++ x1), (a :: x1 = x1 ++ bl)
(a :: x1 = []), (gv0 :: bl = bl), (gv0 :: bl = x1), (gv0 :: bl = selection_sort bl), (gv0 :: bl = selection_sort x1), (gv0 :: bl = selsort bl m), (gv0 :: bl = selsort bl y), (gv0 :: bl = selsort bl x), (gv0 :: bl = selsort bl a), (gv0 :: bl = selsort bl gv0)
(gv0 :: bl = selsort x1 m), (gv0 :: bl = selsort x1 y), (gv0 :: bl = selsort x1 x), (gv0 :: bl = selsort x1 a), (gv0 :: bl = selsort x1 gv0), (gv0 :: bl = selsort x1 x0), (gv0 :: bl = bl ++ bl), (gv0 :: bl = bl ++ x1), (gv0 :: bl = x1 ++ bl), (gv0 :: bl = x1 ++ x1)
(gv0 :: x1 = bl), (gv0 :: x1 = x1), (gv0 :: x1 = selection_sort bl), (gv0 :: x1 = selection_sort x1), (gv0 :: x1 = selsort bl m), (gv0 :: x1 = selsort bl y), (gv0 :: x1 = selsort bl x), (gv0 :: x1 = selsort bl a), (gv0 :: x1 = selsort bl gv0), (gv0 :: x1 = selsort bl x0)
(gv0 :: x1 = selsort x1 y), (gv0 :: x1 = selsort x1 x), (gv0 :: x1 = selsort x1 a), (gv0 :: x1 = selsort x1 gv0), (gv0 :: x1 = selsort x1 x0), (gv0 :: x1 = bl ++ bl), (gv0 :: x1 = bl ++ x1), (gv0 :: x1 = x1 ++ bl), (gv0 :: x1 = x1 ++ x1), (gv0 :: x1 = [])
(x0 :: bl = x1), (x0 :: bl = selection_sort bl), (x0 :: bl = selection_sort x1), (x0 :: bl = selsort bl m), (x0 :: bl = selsort bl y), (x0 :: bl = selsort bl x), (x0 :: bl = selsort bl a), (x0 :: bl = selsort bl gv0), (x0 :: bl = selsort bl x0), (x0 :: bl = selsort x1 m)
(x0 :: bl = selsort x1 x), (x0 :: bl = selsort x1 a), (x0 :: bl = selsort x1 gv0), (x0 :: bl = selsort x1 x0), (x0 :: bl = bl ++ bl), (x0 :: bl = bl ++ x1), (x0 :: bl = x1 ++ bl), (x0 :: bl = x1 ++ x1), (x0 :: bl = []), (x0 :: x1 = bl)
(x0 :: x1 = selection_sort bl), (x0 :: x1 = selection_sort x1), (x0 :: x1 = selsort bl m), (x0 :: x1 = selsort bl y), (x0 :: x1 = selsort bl x), (x0 :: x1 = selsort bl a), (x0 :: x1 = selsort bl gv0), (x0 :: x1 = selsort bl x0), (x0 :: x1 = selsort x1 m), (x0 :: x1 = selsort x1 y)
(x0 :: x1 = selsort x1 a), (x0 :: x1 = selsort x1 gv0), (x0 :: x1 = selsort x1 x0), (x0 :: x1 = bl ++ bl), (x0 :: x1 = bl ++ x1), (x0 :: x1 = x1 ++ bl), (x0 :: x1 = x1 ++ x1), (x0 :: x1 = []), (selection_sort bl = bl), (selection_sort bl = x1)
(selection_sort bl = bl ++ x1), (selection_sort bl = x1 ++ bl), (selection_sort bl = x1 ++ x1), (selection_sort x1 = bl), (selection_sort x1 = x1), (selection_sort x1 = bl ++ bl), (selection_sort x1 = bl ++ x1), (selection_sort x1 = x1 ++ bl), (selection_sort x1 = x1 ++ x1), (selsort bl m = bl)
(selsort bl m = selection_sort bl), (selsort bl m = selection_sort x1), (selsort bl m = bl ++ bl), (selsort bl m = bl ++ x1), (selsort bl m = x1 ++ bl), (selsort bl m = x1 ++ x1), (selsort bl y = bl), (selsort bl y = x1), (selsort bl y = selection_sort bl), (selsort bl y = selection_sort x1)
(selsort bl y = bl ++ x1), (selsort bl y = x1 ++ bl), (selsort bl y = x1 ++ x1), (selsort bl x = bl), (selsort bl x = x1), (selsort bl x = selection_sort bl), (selsort bl x = selection_sort x1), (selsort bl x = bl ++ bl), (selsort bl x = bl ++ x1), (selsort bl x = x1 ++ bl)
(selsort bl a = bl), (selsort bl a = x1), (selsort bl a = selection_sort bl), (selsort bl a = selection_sort x1), (selsort bl a = bl ++ bl), (selsort bl a = bl ++ x1), (selsort bl a = x1 ++ bl), (selsort bl a = x1 ++ x1), (selsort bl gv0 = bl), (selsort bl gv0 = x1)
(selsort bl gv0 = selection_sort x1), (selsort bl gv0 = bl ++ bl), (selsort bl gv0 = bl ++ x1), (selsort bl gv0 = x1 ++ bl), (selsort bl gv0 = x1 ++ x1), (selsort bl x0 = bl), (selsort bl x0 = x1), (selsort bl x0 = selection_sort bl), (selsort bl x0 = selection_sort x1), (selsort bl x0 = bl ++ bl)
(selsort bl x0 = x1 ++ bl), (selsort bl x0 = x1 ++ x1), (selsort x1 m = bl), (selsort x1 m = x1), (selsort x1 m = selection_sort bl), (selsort x1 m = selection_sort x1), (selsort x1 m = bl ++ bl), (selsort x1 m = bl ++ x1), (selsort x1 m = x1 ++ bl), (selsort x1 m = x1 ++ x1)
(selsort x1 y = x1), (selsort x1 y = selection_sort bl), (selsort x1 y = selection_sort x1), (selsort x1 y = bl ++ bl), (selsort x1 y = bl ++ x1), (selsort x1 y = x1 ++ bl), (selsort x1 y = x1 ++ x1), (selsort x1 x = bl), (selsort x1 x = x1), (selsort x1 x = selection_sort bl)
(selsort x1 x = bl ++ bl), (selsort x1 x = bl ++ x1), (selsort x1 x = x1 ++ bl), (selsort x1 x = x1 ++ x1), (selsort x1 a = bl), (selsort x1 a = x1), (selsort x1 a = selection_sort bl), (selsort x1 a = selection_sort x1), (selsort x1 a = bl ++ bl), (selsort x1 a = bl ++ x1)
(selsort x1 a = x1 ++ x1), (selsort x1 gv0 = bl), (selsort x1 gv0 = x1), (selsort x1 gv0 = selection_sort bl), (selsort x1 gv0 = selection_sort x1), (selsort x1 gv0 = bl ++ bl), (selsort x1 gv0 = bl ++ x1), (selsort x1 gv0 = x1 ++ bl), (selsort x1 gv0 = x1 ++ x1), (selsort x1 x0 = bl)
(selsort x1 x0 = selection_sort bl), (selsort x1 x0 = selection_sort x1), (selsort x1 x0 = bl ++ bl), (selsort x1 x0 = bl ++ x1), (selsort x1 x0 = x1 ++ bl), (selsort x1 x0 = x1 ++ x1), (bl ++ bl = bl), (bl ++ bl = x1), (bl ++ x1 = bl), (bl ++ x1 = x1)
(x1 ++ bl = x1), (x1 ++ x1 = bl), (x1 ++ x1 = x1), ([] = bl), ([] = x1), ([] = selection_sort bl), ([] = selection_sort x1), ([] = selsort bl m), ([] = selsort bl y), ([] = selsort bl x)
([] = selsort bl gv0), ([] = selsort bl x0), ([] = selsort x1 m), ([] = selsort x1 y), ([] = selsort x1 x), ([] = selsort x1 a), ([] = selsort x1 gv0), ([] = selsort x1 x0), ([] = bl ++ bl), ([] = bl ++ x1)
([] = x1 ++ x1), (None = Some m), (None = Some y), (None = Some x), (None = Some a), (None = Some gv0), (None = Some x0), ((m, bl) = select m bl), ((m, bl) = select m x1), ((m, bl) = select y bl)
((m, bl) = select x bl), ((m, bl) = select x x1), ((m, bl) = select a bl), ((m, bl) = select a x1), ((m, bl) = select gv0 bl), ((m, bl) = select gv0 x1), ((m, bl) = select x0 bl), ((m, bl) = select x0 x1), ((m, x1) = select m bl), ((m, x1) = select m x1)
((m, x1) = select y x1), ((m, x1) = select x bl), ((m, x1) = select x x1), ((m, x1) = select a bl), ((m, x1) = select a x1), ((m, x1) = select gv0 bl), ((m, x1) = select gv0 x1), ((m, x1) = select x0 bl), ((m, x1) = select x0 x1), ((y, bl) = select m bl)
((y, bl) = select y bl), ((y, bl) = select y x1), ((y, bl) = select x bl), ((y, bl) = select x x1), ((y, bl) = select a bl), ((y, bl) = select a x1), ((y, bl) = select gv0 bl), ((y, bl) = select gv0 x1), ((y, bl) = select x0 bl), ((y, bl) = select x0 x1)
((y, x1) = select m x1), ((y, x1) = select y bl), ((y, x1) = select y x1), ((y, x1) = select x bl), ((y, x1) = select x x1), ((y, x1) = select a bl), ((y, x1) = select a x1), ((y, x1) = select gv0 bl), ((y, x1) = select gv0 x1), ((y, x1) = select x0 bl)
((x, bl) = select m bl), ((x, bl) = select m x1), ((x, bl) = select y bl), ((x, bl) = select y x1), ((x, bl) = select x bl), ((x, bl) = select x x1), ((x, bl) = select a bl), ((x, bl) = select a x1), ((x, bl) = select gv0 bl), ((x, bl) = select gv0 x1)
((x, bl) = select x0 x1), ((x, x1) = select m bl), ((x, x1) = select m x1), ((x, x1) = select y bl), ((x, x1) = select y x1), ((x, x1) = select x bl), ((x, x1) = select x x1), ((x, x1) = select a bl), ((x, x1) = select a x1), ((x, x1) = select gv0 bl)
((x, x1) = select x0 bl), ((x, x1) = select x0 x1), ((a, bl) = select m bl), ((a, bl) = select m x1), ((a, bl) = select y bl), ((a, bl) = select y x1), ((a, bl) = select x bl), ((a, bl) = select x x1), ((a, bl) = select a bl), ((a, bl) = select a x1)
((a, bl) = select gv0 x1), ((a, bl) = select x0 bl), ((a, bl) = select x0 x1), ((a, x1) = select m bl), ((a, x1) = select m x1), ((a, x1) = select y bl), ((a, x1) = select y x1), ((a, x1) = select x bl), ((a, x1) = select x x1), ((a, x1) = select a bl)
((a, x1) = select gv0 bl), ((a, x1) = select gv0 x1), ((a, x1) = select x0 bl), ((a, x1) = select x0 x1), ((gv0, bl) = select m bl), ((gv0, bl) = select m x1), ((gv0, bl) = select y bl), ((gv0, bl) = select y x1), ((gv0, bl) = select x bl), ((gv0, bl) = select x x1)
((gv0, bl) = select a x1), ((gv0, bl) = select gv0 bl), ((gv0, bl) = select gv0 x1), ((gv0, bl) = select x0 bl), ((gv0, bl) = select x0 x1), ((gv0, x1) = select m bl), ((gv0, x1) = select m x1), ((gv0, x1) = select y bl), ((gv0, x1) = select y x1), ((gv0, x1) = select x bl)
((gv0, x1) = select a bl), ((gv0, x1) = select a x1), ((gv0, x1) = select gv0 bl), ((gv0, x1) = select gv0 x1), ((gv0, x1) = select x0 bl), ((gv0, x1) = select x0 x1), ((x0, bl) = select m bl), ((x0, bl) = select m x1), ((x0, bl) = select y bl), ((x0, bl) = select y x1)
((x0, bl) = select x x1), ((x0, bl) = select a bl), ((x0, bl) = select a x1), ((x0, bl) = select gv0 bl), ((x0, bl) = select gv0 x1), ((x0, bl) = select x0 bl), ((x0, bl) = select x0 x1), ((x0, x1) = select m bl), ((x0, x1) = select m x1), ((x0, x1) = select y bl)
((x0, x1) = select x bl), ((x0, x1) = select x x1), ((x0, x1) = select a bl), ((x0, x1) = select a x1), ((x0, x1) = select gv0 bl), ((x0, x1) = select gv0 x1), ((x0, x1) = select x0 bl), ((x0, x1) = select x0 x1), (length bl = m), (length bl = y)
(length bl = a), (length bl = gv0), (length bl = x0), (length x1 = m), (length x1 = y), (length x1 = x), (length x1 = a), (length x1 = gv0), (length x1 = x0)

Label: 1 (1)
Abducted Assumption: (x0 <= a)
Positive Examples:
   [a := 2; x := 6; x0 := 2]
   [a := 3; x := 6; x0 := 3]
   [a := 0; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 1]
   [a := 1; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 5]
   [a := 3; x := 6; x0 := 0]
   [a := 2; x := 6; x0 := 1]
   [a := 4; x := 6; x0 := 2]
   [a := 5; x := 6; x0 := 0]
   etc ...

Negative Examples:
   [a := 4; x := 5; x0 := 6]
   [a := 0; x := 1; x0 := 6]
   [a := 1; x := 5; x0 := 6]
   [a := 1; x := 3; x0 := 6]
   [a := 1; x := 4; x0 := 6]
   [a := 0; x := 3; x0 := 6]
   [a := 0; x := 3; x0 := 4]
   [a := 1; x := 2; x0 := 6]
   [a := 2; x := 5; x0 := 6]
   [a := 0; x := 2; x0 := 5]
   etc ...

(a < a), (a < x), (a < x0), (x < a), (x < x), (x < x0), (x0 < a), (x0 < x), (x0 < x0), (a <= a)
(a <= x0), (x <= a), (x <= x), (x <= x0), (x0 <= a), (x0 <= x), (x0 <= x0), (a = a), (a = x), (a = x0)
(x = x), (x = x0), (x0 = a), (x0 = x), (x0 = x0), (a <=* []), (x <=* []), (x0 <=* []), (sorted []), (~ a < a)
(~ a < x0), (~ x < a), (~ x < x), (~ x < x0), (~ x0 < a), (~ x0 < x), (~ x0 < x0), (~ a <= a), (~ a <= x), (~ a <= x0)
(~ x <= x), (~ x <= x0), (~ x0 <= a), (~ x0 <= x), (~ x0 <= x0), (a <> a), (a <> x), (a <> x0), (x <> a), (x <> x)
(x0 <> a), (x0 <> x), (x0 <> x0), (None = Some a), (None = Some x), (None = Some x0)

Label: 1 (2)
Abducted Assumption: (a < x)
Positive Examples:
   [a := 2; x := 6; x0 := 2]
   [a := 3; x := 6; x0 := 3]
   [a := 0; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 1]
   [a := 1; x := 6; x0 := 0]
   [a := 5; x := 6; x0 := 5]
   [a := 3; x := 6; x0 := 0]
   [a := 2; x := 6; x0 := 1]
   [a := 4; x := 6; x0 := 2]
   [a := 5; x := 6; x0 := 0]
   etc ...

Negative Examples:
   [a := 6; x := 3; x0 := 6]
   [a := 6; x := 2; x0 := 5]
   [a := 6; x := 2; x0 := 6]
   [a := 6; x := 1; x0 := 5]
   [a := 6; x := 4; x0 := 6]
   [a := 5; x := 3; x0 := 4]
   [a := 6; x := 1; x0 := 2]
   [a := 6; x := 0; x0 := 3]
   [a := 5; x := 0; x0 := 4]
   [a := 6; x := 2; x0 := 4]
   etc ...

(a < a), (a < x), (a < x0), (x < a), (x < x), (x < x0), (x0 < a), (x0 < x), (x0 < x0), (a <= a)
(a <= x0), (x <= a), (x <= x), (x <= x0), (x0 <= a), (x0 <= x), (x0 <= x0), (a = a), (a = x), (a = x0)
(x = x), (x = x0), (x0 = a), (x0 = x), (x0 = x0), (a <=* []), (x <=* []), (x0 <=* []), (sorted []), (~ a < a)
(~ a < x0), (~ x < a), (~ x < x), (~ x < x0), (~ x0 < a), (~ x0 < x), (~ x0 < x0), (~ a <= a), (~ a <= x), (~ a <= x0)
(~ x <= x), (~ x <= x0), (~ x0 <= a), (~ x0 <= x), (~ x0 <= x0), (a <> a), (a <> x), (a <> x0), (x <> a), (x <> x)
(x0 <> a), (x0 <> x), (x0 <> x0), (None = Some a), (None = Some x), (None = Some x0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 1479.543 seconds


Label: 0 (0)
(Permutation bl x1), (Permutation x1 bl), (In m bl), (In m x1), (In y x1), (In a bl), (In a x1), (In gv0 x1), (In x0 x1), (m < m)
(y < y), (y < gv0), (y < x0), (x < m), (x < y), (x < x), (x < a), (x < gv0), (x < x0), (a < m)
(gv0 < m), (gv0 < gv0), (x0 < m), (x0 < y), (x0 < gv0), (x0 < x0), (x <= m), (x <= a), (a <= m), (bl = x1)
(m = x), (m = a), (y = a), (x = m), (x = a), (a = m), (a = y), (a = x), (a = gv0), (a = x0)
(x0 = a), (false = sorted_bool bl), (false = sorted_bool x1), (x <=* m :: bl), (x <=* m :: x1), (x <=* a :: bl), (x <=* a :: x1), (a <=* m :: bl), (a <=* m :: x1), (length bl <=* m :: bl)
(Permutation bl (m :: bl)), (Permutation bl (m :: x1)), (Permutation bl (y :: bl)), (Permutation bl (x :: bl)), (Permutation bl (a :: bl)), (Permutation bl (a :: x1)), (Permutation bl (gv0 :: bl)), (Permutation bl (x0 :: bl)), (Permutation bl (selection_sort x1)), (Permutation bl (selsort bl m))
(Permutation bl (selsort x1 y)), (Permutation bl (selsort x1 x)), (Permutation bl (selsort x1 a)), (Permutation bl (selsort x1 gv0)), (Permutation bl (selsort x1 x0)), (Permutation bl (bl ++ bl)), (Permutation bl []), (Permutation x1 (m :: bl)), (Permutation x1 (m :: x1)), (Permutation x1 (y :: bl))
(Permutation x1 (x :: bl)), (Permutation x1 (x :: x1)), (Permutation x1 (a :: bl)), (Permutation x1 (a :: x1)), (Permutation x1 (gv0 :: bl)), (Permutation x1 (gv0 :: x1)), (Permutation x1 (x0 :: bl)), (Permutation x1 (x0 :: x1)), (Permutation x1 (selection_sort bl)), (Permutation x1 (selsort bl y))
(Permutation x1 (selsort bl x0)), (Permutation x1 (bl ++ bl)), (Permutation x1 (bl ++ x1)), (Permutation x1 (x1 ++ bl)), (Permutation (m :: bl) bl), (Permutation (m :: bl) x1), (Permutation (m :: bl) (m :: x1)), (Permutation (m :: bl) (x :: bl)), (Permutation (m :: bl) (x :: x1)), (Permutation (m :: bl) (a :: bl))
(Permutation (m :: bl) (gv0 :: x1)), (Permutation (m :: bl) (x0 :: x1)), (Permutation (m :: bl) (selection_sort bl)), (Permutation (m :: bl) (selection_sort x1)), (Permutation (m :: bl) (selsort bl m)), (Permutation (m :: bl) (selsort bl y)), (Permutation (m :: bl) (selsort bl x)), (Permutation (m :: bl) (selsort bl a)), (Permutation (m :: bl) (selsort bl gv0)), (Permutation (m :: bl) (selsort bl x0))
(Permutation (m :: bl) (selsort x1 y)), (Permutation (m :: bl) (selsort x1 x)), (Permutation (m :: bl) (selsort x1 a)), (Permutation (m :: bl) (selsort x1 gv0)), (Permutation (m :: bl) (selsort x1 x0)), (Permutation (m :: bl) (bl ++ bl)), (Permutation (m :: bl) (bl ++ x1)), (Permutation (m :: bl) (x1 ++ bl)), (Permutation (m :: bl) (x1 ++ x1)), (Permutation (m :: bl) [])
(Permutation (m :: x1) x1), (Permutation (m :: x1) (m :: bl)), (Permutation (m :: x1) (y :: bl)), (Permutation (m :: x1) (x :: bl)), (Permutation (m :: x1) (x :: x1)), (Permutation (m :: x1) (a :: bl)), (Permutation (m :: x1) (a :: x1)), (Permutation (m :: x1) (gv0 :: bl)), (Permutation (m :: x1) (x0 :: bl)), (Permutation (m :: x1) (selection_sort bl))
(Permutation (m :: x1) (selsort bl m)), (Permutation (m :: x1) (selsort bl y)), (Permutation (m :: x1) (selsort bl x)), (Permutation (m :: x1) (selsort bl a)), (Permutation (m :: x1) (selsort bl gv0)), (Permutation (m :: x1) (selsort bl x0)), (Permutation (m :: x1) (selsort x1 m)), (Permutation (m :: x1) (selsort x1 y)), (Permutation (m :: x1) (selsort x1 x)), (Permutation (m :: x1) (selsort x1 a))
(Permutation (m :: x1) (selsort x1 x0)), (Permutation (m :: x1) (bl ++ bl)), (Permutation (m :: x1) (bl ++ x1)), (Permutation (m :: x1) (x1 ++ bl)), (Permutation (m :: x1) (x1 ++ x1)), (Permutation (m :: x1) []), (Permutation (y :: bl) bl), (Permutation (y :: bl) x1), (Permutation (y :: bl) (m :: x1)), (Permutation (y :: bl) (y :: x1))
(Permutation (y :: bl) (a :: bl)), (Permutation (y :: bl) (a :: x1)), (Permutation (y :: bl) (gv0 :: x1)), (Permutation (y :: bl) (x0 :: x1)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selection_sort x1)), (Permutation (y :: bl) (selsort bl m)), (Permutation (y :: bl) (selsort bl y)), (Permutation (y :: bl) (selsort bl x)), (Permutation (y :: bl) (selsort bl a))
(Permutation (y :: bl) (selsort bl x0)), (Permutation (y :: bl) (selsort x1 m)), (Permutation (y :: bl) (selsort x1 y)), (Permutation (y :: bl) (selsort x1 x)), (Permutation (y :: bl) (selsort x1 a)), (Permutation (y :: bl) (selsort x1 gv0)), (Permutation (y :: bl) (selsort x1 x0)), (Permutation (y :: bl) (bl ++ x1)), (Permutation (y :: bl) (x1 ++ bl)), (Permutation (y :: bl) (x1 ++ x1))
(Permutation (y :: x1) x1), (Permutation (y :: x1) (m :: bl)), (Permutation (y :: x1) (y :: bl)), (Permutation (y :: x1) (x :: bl)), (Permutation (y :: x1) (a :: bl)), (Permutation (y :: x1) (a :: x1)), (Permutation (y :: x1) (gv0 :: bl)), (Permutation (y :: x1) (x0 :: bl)), (Permutation (y :: x1) (selection_sort x1)), (Permutation (y :: x1) (selsort bl m))
(Permutation (y :: x1) (selsort x1 y)), (Permutation (y :: x1) (selsort x1 x)), (Permutation (y :: x1) (selsort x1 a)), (Permutation (y :: x1) (selsort x1 gv0)), (Permutation (y :: x1) (selsort x1 x0)), (Permutation (y :: x1) (bl ++ bl)), (Permutation (y :: x1) (x1 ++ x1)), (Permutation (y :: x1) []), (Permutation (x :: bl) bl), (Permutation (x :: bl) x1)
(Permutation (x :: bl) (m :: x1)), (Permutation (x :: bl) (y :: x1)), (Permutation (x :: bl) (x :: x1)), (Permutation (x :: bl) (a :: bl)), (Permutation (x :: bl) (a :: x1)), (Permutation (x :: bl) (gv0 :: x1)), (Permutation (x :: bl) (x0 :: x1)), (Permutation (x :: bl) (selection_sort bl)), (Permutation (x :: bl) (selection_sort x1)), (Permutation (x :: bl) (selsort bl m))
(Permutation (x :: bl) (selsort bl x)), (Permutation (x :: bl) (selsort bl a)), (Permutation (x :: bl) (selsort bl gv0)), (Permutation (x :: bl) (selsort bl x0)), (Permutation (x :: bl) (selsort x1 m)), (Permutation (x :: bl) (selsort x1 y)), (Permutation (x :: bl) (selsort x1 x)), (Permutation (x :: bl) (selsort x1 a)), (Permutation (x :: bl) (selsort x1 gv0)), (Permutation (x :: bl) (selsort x1 x0))
(Permutation (x :: bl) []), (Permutation (x :: x1) x1), (Permutation (x :: x1) (m :: bl)), (Permutation (x :: x1) (m :: x1)), (Permutation (x :: x1) (y :: bl)), (Permutation (x :: x1) (x :: bl)), (Permutation (x :: x1) (a :: bl)), (Permutation (x :: x1) (a :: x1)), (Permutation (x :: x1) (gv0 :: bl)), (Permutation (x :: x1) (x0 :: bl))
(Permutation (x :: x1) (selsort bl m)), (Permutation (x :: x1) (selsort x1 m)), (Permutation (x :: x1) (selsort x1 y)), (Permutation (x :: x1) (selsort x1 x)), (Permutation (x :: x1) (selsort x1 a)), (Permutation (x :: x1) (selsort x1 gv0)), (Permutation (x :: x1) (selsort x1 x0)), (Permutation (x :: x1) (bl ++ bl)), (Permutation (x :: x1) []), (Permutation (a :: bl) bl)
(Permutation (a :: bl) (m :: bl)), (Permutation (a :: bl) (m :: x1)), (Permutation (a :: bl) (y :: bl)), (Permutation (a :: bl) (y :: x1)), (Permutation (a :: bl) (x :: bl)), (Permutation (a :: bl) (x :: x1)), (Permutation (a :: bl) (a :: x1)), (Permutation (a :: bl) (gv0 :: bl)), (Permutation (a :: bl) (gv0 :: x1)), (Permutation (a :: bl) (x0 :: bl))
(Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selection_sort x1)), (Permutation (a :: bl) (selsort bl m)), (Permutation (a :: bl) (selsort bl y)), (Permutation (a :: bl) (selsort bl x)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl gv0)), (Permutation (a :: bl) (selsort bl x0)), (Permutation (a :: bl) (selsort x1 m)), (Permutation (a :: bl) (selsort x1 y))
(Permutation (a :: bl) (selsort x1 a)), (Permutation (a :: bl) (selsort x1 gv0)), (Permutation (a :: bl) (selsort x1 x0)), (Permutation (a :: bl) (bl ++ bl)), (Permutation (a :: bl) (bl ++ x1)), (Permutation (a :: bl) (x1 ++ bl)), (Permutation (a :: bl) (x1 ++ x1)), (Permutation (a :: bl) []), (Permutation (a :: x1) bl), (Permutation (a :: x1) x1)
(Permutation (a :: x1) (m :: x1)), (Permutation (a :: x1) (y :: bl)), (Permutation (a :: x1) (y :: x1)), (Permutation (a :: x1) (x :: bl)), (Permutation (a :: x1) (x :: x1)), (Permutation (a :: x1) (a :: bl)), (Permutation (a :: x1) (gv0 :: bl)), (Permutation (a :: x1) (gv0 :: x1)), (Permutation (a :: x1) (x0 :: bl)), (Permutation (a :: x1) (x0 :: x1))
(Permutation (a :: x1) (selection_sort x1)), (Permutation (a :: x1) (selsort bl m)), (Permutation (a :: x1) (selsort bl y)), (Permutation (a :: x1) (selsort bl x)), (Permutation (a :: x1) (selsort bl a)), (Permutation (a :: x1) (selsort bl gv0)), (Permutation (a :: x1) (selsort bl x0)), (Permutation (a :: x1) (selsort x1 m)), (Permutation (a :: x1) (selsort x1 y)), (Permutation (a :: x1) (selsort x1 x))
(Permutation (a :: x1) (selsort x1 gv0)), (Permutation (a :: x1) (selsort x1 x0)), (Permutation (a :: x1) (x1 ++ bl)), (Permutation (a :: x1) (x1 ++ x1)), (Permutation (a :: x1) []), (Permutation (gv0 :: bl) bl), (Permutation (gv0 :: bl) x1), (Permutation (gv0 :: bl) (m :: x1)), (Permutation (gv0 :: bl) (y :: x1)), (Permutation (gv0 :: bl) (x :: x1))
(Permutation (gv0 :: bl) (a :: x1)), (Permutation (gv0 :: bl) (gv0 :: x1)), (Permutation (gv0 :: bl) (x0 :: x1)), (Permutation (gv0 :: bl) (selection_sort bl)), (Permutation (gv0 :: bl) (selection_sort x1)), (Permutation (gv0 :: bl) (selsort bl m)), (Permutation (gv0 :: bl) (selsort bl y)), (Permutation (gv0 :: bl) (selsort bl x)), (Permutation (gv0 :: bl) (selsort bl a)), (Permutation (gv0 :: bl) (selsort bl gv0))
(Permutation (gv0 :: bl) (selsort x1 m)), (Permutation (gv0 :: bl) (selsort x1 y)), (Permutation (gv0 :: bl) (selsort x1 x)), (Permutation (gv0 :: bl) (selsort x1 a)), (Permutation (gv0 :: bl) (selsort x1 gv0)), (Permutation (gv0 :: bl) (selsort x1 x0)), (Permutation (gv0 :: bl) (bl ++ x1)), (Permutation (gv0 :: bl) (x1 ++ bl)), (Permutation (gv0 :: bl) (x1 ++ x1)), (Permutation (gv0 :: bl) [])
(Permutation (gv0 :: x1) (m :: bl)), (Permutation (gv0 :: x1) (y :: bl)), (Permutation (gv0 :: x1) (x :: bl)), (Permutation (gv0 :: x1) (a :: bl)), (Permutation (gv0 :: x1) (a :: x1)), (Permutation (gv0 :: x1) (gv0 :: bl)), (Permutation (gv0 :: x1) (x0 :: bl)), (Permutation (gv0 :: x1) (selection_sort x1)), (Permutation (gv0 :: x1) (selsort bl m)), (Permutation (gv0 :: x1) (selsort x1 m))
(Permutation (gv0 :: x1) (selsort x1 x)), (Permutation (gv0 :: x1) (selsort x1 a)), (Permutation (gv0 :: x1) (selsort x1 gv0)), (Permutation (gv0 :: x1) (selsort x1 x0)), (Permutation (gv0 :: x1) (bl ++ bl)), (Permutation (gv0 :: x1) (x1 ++ x1)), (Permutation (gv0 :: x1) []), (Permutation (x0 :: bl) bl), (Permutation (x0 :: bl) x1), (Permutation (x0 :: bl) (m :: x1))
(Permutation (x0 :: bl) (x :: x1)), (Permutation (x0 :: bl) (a :: bl)), (Permutation (x0 :: bl) (a :: x1)), (Permutation (x0 :: bl) (gv0 :: x1)), (Permutation (x0 :: bl) (x0 :: x1)), (Permutation (x0 :: bl) (selection_sort bl)), (Permutation (x0 :: bl) (selection_sort x1)), (Permutation (x0 :: bl) (selsort bl m)), (Permutation (x0 :: bl) (selsort bl y)), (Permutation (x0 :: bl) (selsort bl x))
(Permutation (x0 :: bl) (selsort bl gv0)), (Permutation (x0 :: bl) (selsort bl x0)), (Permutation (x0 :: bl) (selsort x1 m)), (Permutation (x0 :: bl) (selsort x1 y)), (Permutation (x0 :: bl) (selsort x1 x)), (Permutation (x0 :: bl) (selsort x1 a)), (Permutation (x0 :: bl) (selsort x1 gv0)), (Permutation (x0 :: bl) (selsort x1 x0)), (Permutation (x0 :: bl) (bl ++ x1)), (Permutation (x0 :: bl) (x1 ++ bl))
(Permutation (x0 :: bl) []), (Permutation (x0 :: x1) x1), (Permutation (x0 :: x1) (m :: bl)), (Permutation (x0 :: x1) (y :: bl)), (Permutation (x0 :: x1) (x :: bl)), (Permutation (x0 :: x1) (a :: bl)), (Permutation (x0 :: x1) (a :: x1)), (Permutation (x0 :: x1) (gv0 :: bl)), (Permutation (x0 :: x1) (x0 :: bl)), (Permutation (x0 :: x1) (selection_sort x1))
(Permutation (x0 :: x1) (selsort x1 m)), (Permutation (x0 :: x1) (selsort x1 y)), (Permutation (x0 :: x1) (selsort x1 x)), (Permutation (x0 :: x1) (selsort x1 a)), (Permutation (x0 :: x1) (selsort x1 gv0)), (Permutation (x0 :: x1) (selsort x1 x0)), (Permutation (x0 :: x1) (bl ++ bl)), (Permutation (x0 :: x1) (x1 ++ x1)), (Permutation (x0 :: x1) []), (Permutation (selection_sort bl) x1)
(Permutation (selection_sort bl) (m :: x1)), (Permutation (selection_sort bl) (y :: bl)), (Permutation (selection_sort bl) (x :: bl)), (Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (a :: x1)), (Permutation (selection_sort bl) (gv0 :: bl)), (Permutation (selection_sort bl) (x0 :: bl)), (Permutation (selection_sort bl) (selection_sort x1)), (Permutation (selection_sort bl) (selsort bl m)), (Permutation (selection_sort bl) (selsort x1 m))
(Permutation (selection_sort bl) (selsort x1 x)), (Permutation (selection_sort bl) (selsort x1 a)), (Permutation (selection_sort bl) (selsort x1 gv0)), (Permutation (selection_sort bl) (selsort x1 x0)), (Permutation (selection_sort bl) (bl ++ bl)), (Permutation (selection_sort bl) []), (Permutation (selection_sort x1) bl), (Permutation (selection_sort x1) (m :: bl)), (Permutation (selection_sort x1) (m :: x1)), (Permutation (selection_sort x1) (y :: bl))
(Permutation (selection_sort x1) (x :: bl)), (Permutation (selection_sort x1) (x :: x1)), (Permutation (selection_sort x1) (a :: bl)), (Permutation (selection_sort x1) (a :: x1)), (Permutation (selection_sort x1) (gv0 :: bl)), (Permutation (selection_sort x1) (gv0 :: x1)), (Permutation (selection_sort x1) (x0 :: bl)), (Permutation (selection_sort x1) (x0 :: x1)), (Permutation (selection_sort x1) (selection_sort bl)), (Permutation (selection_sort x1) (selsort bl y))
(Permutation (selection_sort x1) (selsort bl x0)), (Permutation (selection_sort x1) (bl ++ bl)), (Permutation (selection_sort x1) (bl ++ x1)), (Permutation (selection_sort x1) (x1 ++ bl)), (Permutation (selsort bl m) bl), (Permutation (selsort bl m) (m :: bl)), (Permutation (selsort bl m) (m :: x1)), (Permutation (selsort bl m) (y :: bl)), (Permutation (selsort bl m) (y :: x1)), (Permutation (selsort bl m) (x :: bl))
(Permutation (selsort bl m) (a :: bl)), (Permutation (selsort bl m) (a :: x1)), (Permutation (selsort bl m) (gv0 :: bl)), (Permutation (selsort bl m) (gv0 :: x1)), (Permutation (selsort bl m) (x0 :: bl)), (Permutation (selsort bl m) (x0 :: x1)), (Permutation (selsort bl m) (selection_sort bl)), (Permutation (selsort bl m) (selsort bl x)), (Permutation (selsort bl m) (selsort bl a)), (Permutation (selsort bl m) (bl ++ bl))
(Permutation (selsort bl m) (x1 ++ bl)), (Permutation (selsort bl y) x1), (Permutation (selsort bl y) (m :: bl)), (Permutation (selsort bl y) (m :: x1)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (x :: bl)), (Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (a :: x1)), (Permutation (selsort bl y) (gv0 :: bl)), (Permutation (selsort bl y) (x0 :: bl))
(Permutation (selsort bl y) (selsort x1 x)), (Permutation (selsort bl y) (selsort x1 a)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) (x1 ++ x1)), (Permutation (selsort bl x) x1), (Permutation (selsort bl x) (m :: bl)), (Permutation (selsort bl x) (m :: x1)), (Permutation (selsort bl x) (y :: bl)), (Permutation (selsort bl x) (x :: bl)), (Permutation (selsort bl x) (a :: bl))
(Permutation (selsort bl x) (gv0 :: bl)), (Permutation (selsort bl x) (x0 :: bl)), (Permutation (selsort bl x) (selection_sort x1)), (Permutation (selsort bl x) (selsort bl m)), (Permutation (selsort bl x) (selsort x1 m)), (Permutation (selsort bl x) (selsort x1 y)), (Permutation (selsort bl x) (selsort x1 x)), (Permutation (selsort bl x) (selsort x1 a)), (Permutation (selsort bl x) (selsort x1 gv0)), (Permutation (selsort bl x) (selsort x1 x0))
(Permutation (selsort bl x) []), (Permutation (selsort bl a) (m :: bl)), (Permutation (selsort bl a) (m :: x1)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (x :: bl)), (Permutation (selsort bl a) (a :: bl)), (Permutation (selsort bl a) (a :: x1)), (Permutation (selsort bl a) (gv0 :: bl)), (Permutation (selsort bl a) (x0 :: bl)), (Permutation (selsort bl a) (selsort bl m))
(Permutation (selsort bl a) (selsort x1 y)), (Permutation (selsort bl a) (selsort x1 gv0)), (Permutation (selsort bl a) (selsort x1 x0)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) (x1 ++ x1)), (Permutation (selsort bl a) []), (Permutation (selsort bl gv0) (m :: bl)), (Permutation (selsort bl gv0) (m :: x1)), (Permutation (selsort bl gv0) (y :: bl)), (Permutation (selsort bl gv0) (x :: bl))
(Permutation (selsort bl gv0) (a :: x1)), (Permutation (selsort bl gv0) (gv0 :: bl)), (Permutation (selsort bl gv0) (x0 :: bl)), (Permutation (selsort bl gv0) (bl ++ bl)), (Permutation (selsort bl x0) x1), (Permutation (selsort bl x0) (m :: bl)), (Permutation (selsort bl x0) (m :: x1)), (Permutation (selsort bl x0) (y :: bl)), (Permutation (selsort bl x0) (x :: bl)), (Permutation (selsort bl x0) (a :: bl))
(Permutation (selsort bl x0) (gv0 :: bl)), (Permutation (selsort bl x0) (x0 :: bl)), (Permutation (selsort bl x0) (selection_sort x1)), (Permutation (selsort bl x0) (selsort x1 x)), (Permutation (selsort bl x0) (selsort x1 a)), (Permutation (selsort bl x0) (bl ++ bl)), (Permutation (selsort bl x0) (x1 ++ x1)), (Permutation (selsort x1 m) bl), (Permutation (selsort x1 m) (m :: bl)), (Permutation (selsort x1 m) (m :: x1))
(Permutation (selsort x1 m) (y :: x1)), (Permutation (selsort x1 m) (x :: bl)), (Permutation (selsort x1 m) (x :: x1)), (Permutation (selsort x1 m) (a :: bl)), (Permutation (selsort x1 m) (a :: x1)), (Permutation (selsort x1 m) (gv0 :: bl)), (Permutation (selsort x1 m) (gv0 :: x1)), (Permutation (selsort x1 m) (x0 :: bl)), (Permutation (selsort x1 m) (x0 :: x1)), (Permutation (selsort x1 m) (selection_sort bl))
(Permutation (selsort x1 m) (selsort bl a)), (Permutation (selsort x1 m) (bl ++ bl)), (Permutation (selsort x1 m) (bl ++ x1)), (Permutation (selsort x1 m) (x1 ++ bl)), (Permutation (selsort x1 y) bl), (Permutation (selsort x1 y) (m :: bl)), (Permutation (selsort x1 y) (m :: x1)), (Permutation (selsort x1 y) (y :: bl)), (Permutation (selsort x1 y) (y :: x1)), (Permutation (selsort x1 y) (x :: bl))
(Permutation (selsort x1 y) (a :: bl)), (Permutation (selsort x1 y) (a :: x1)), (Permutation (selsort x1 y) (gv0 :: bl)), (Permutation (selsort x1 y) (gv0 :: x1)), (Permutation (selsort x1 y) (x0 :: bl)), (Permutation (selsort x1 y) (x0 :: x1)), (Permutation (selsort x1 y) (selection_sort bl)), (Permutation (selsort x1 y) (selsort bl x)), (Permutation (selsort x1 y) (selsort bl a)), (Permutation (selsort x1 y) (bl ++ bl))
(Permutation (selsort x1 y) (x1 ++ bl)), (Permutation (selsort x1 x) bl), (Permutation (selsort x1 x) (m :: bl)), (Permutation (selsort x1 x) (m :: x1)), (Permutation (selsort x1 x) (y :: bl)), (Permutation (selsort x1 x) (y :: x1)), (Permutation (selsort x1 x) (x :: bl)), (Permutation (selsort x1 x) (x :: x1)), (Permutation (selsort x1 x) (a :: bl)), (Permutation (selsort x1 x) (a :: x1))
(Permutation (selsort x1 x) (gv0 :: x1)), (Permutation (selsort x1 x) (x0 :: bl)), (Permutation (selsort x1 x) (x0 :: x1)), (Permutation (selsort x1 x) (selection_sort bl)), (Permutation (selsort x1 x) (selsort bl y)), (Permutation (selsort x1 x) (selsort bl x)), (Permutation (selsort x1 x) (selsort bl x0)), (Permutation (selsort x1 x) (bl ++ bl)), (Permutation (selsort x1 x) (bl ++ x1)), (Permutation (selsort x1 x) (x1 ++ bl))
(Permutation (selsort x1 a) (m :: bl)), (Permutation (selsort x1 a) (m :: x1)), (Permutation (selsort x1 a) (y :: bl)), (Permutation (selsort x1 a) (y :: x1)), (Permutation (selsort x1 a) (x :: bl)), (Permutation (selsort x1 a) (x :: x1)), (Permutation (selsort x1 a) (a :: bl)), (Permutation (selsort x1 a) (a :: x1)), (Permutation (selsort x1 a) (gv0 :: bl)), (Permutation (selsort x1 a) (x0 :: x1))
(Permutation (selsort x1 a) (selsort bl y)), (Permutation (selsort x1 a) (selsort bl x)), (Permutation (selsort x1 a) (selsort bl x0)), (Permutation (selsort x1 a) (bl ++ bl)), (Permutation (selsort x1 a) (bl ++ x1)), (Permutation (selsort x1 a) (x1 ++ bl)), (Permutation (selsort x1 gv0) bl), (Permutation (selsort x1 gv0) (m :: bl)), (Permutation (selsort x1 gv0) (m :: x1)), (Permutation (selsort x1 gv0) (y :: bl))
(Permutation (selsort x1 gv0) (x :: bl)), (Permutation (selsort x1 gv0) (x :: x1)), (Permutation (selsort x1 gv0) (a :: bl)), (Permutation (selsort x1 gv0) (a :: x1)), (Permutation (selsort x1 gv0) (gv0 :: bl)), (Permutation (selsort x1 gv0) (gv0 :: x1)), (Permutation (selsort x1 gv0) (x0 :: bl)), (Permutation (selsort x1 gv0) (x0 :: x1)), (Permutation (selsort x1 gv0) (selection_sort bl)), (Permutation (selsort x1 gv0) (selsort bl x))
(Permutation (selsort x1 gv0) (bl ++ bl)), (Permutation (selsort x1 gv0) (bl ++ x1)), (Permutation (selsort x1 gv0) (x1 ++ bl)), (Permutation (selsort x1 x0) bl), (Permutation (selsort x1 x0) (m :: bl)), (Permutation (selsort x1 x0) (m :: x1)), (Permutation (selsort x1 x0) (y :: bl)), (Permutation (selsort x1 x0) (y :: x1)), (Permutation (selsort x1 x0) (x :: bl)), (Permutation (selsort x1 x0) (x :: x1))
(Permutation (selsort x1 x0) (a :: x1)), (Permutation (selsort x1 x0) (gv0 :: bl)), (Permutation (selsort x1 x0) (gv0 :: x1)), (Permutation (selsort x1 x0) (x0 :: bl)), (Permutation (selsort x1 x0) (x0 :: x1)), (Permutation (selsort x1 x0) (selection_sort bl)), (Permutation (selsort x1 x0) (selsort bl x)), (Permutation (selsort x1 x0) (selsort bl a)), (Permutation (selsort x1 x0) (bl ++ bl)), (Permutation (selsort x1 x0) (bl ++ x1))
(Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) x1), (Permutation (bl ++ bl) (m :: bl)), (Permutation (bl ++ bl) (m :: x1)), (Permutation (bl ++ bl) (y :: x1)), (Permutation (bl ++ bl) (x :: x1)), (Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (a :: x1)), (Permutation (bl ++ bl) (gv0 :: x1)), (Permutation (bl ++ bl) (x0 :: x1))
(Permutation (bl ++ bl) (selection_sort x1)), (Permutation (bl ++ bl) (selsort bl m)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (selsort bl x)), (Permutation (bl ++ bl) (selsort bl a)), (Permutation (bl ++ bl) (selsort bl gv0)), (Permutation (bl ++ bl) (selsort bl x0)), (Permutation (bl ++ bl) (selsort x1 m)), (Permutation (bl ++ bl) (selsort x1 y)), (Permutation (bl ++ bl) (selsort x1 x))
(Permutation (bl ++ bl) (selsort x1 gv0)), (Permutation (bl ++ bl) (selsort x1 x0)), (Permutation (bl ++ bl) (bl ++ x1)), (Permutation (bl ++ bl) (x1 ++ bl)), (Permutation (bl ++ bl) (x1 ++ x1)), (Permutation (bl ++ bl) []), (Permutation (bl ++ x1) x1), (Permutation (bl ++ x1) (m :: bl)), (Permutation (bl ++ x1) (m :: x1)), (Permutation (bl ++ x1) (y :: bl))
(Permutation (bl ++ x1) (a :: x1)), (Permutation (bl ++ x1) (gv0 :: bl)), (Permutation (bl ++ x1) (x0 :: bl)), (Permutation (bl ++ x1) (selection_sort x1)), (Permutation (bl ++ x1) (selsort bl m)), (Permutation (bl ++ x1) (selsort x1 m)), (Permutation (bl ++ x1) (selsort x1 y)), (Permutation (bl ++ x1) (selsort x1 x)), (Permutation (bl ++ x1) (selsort x1 a)), (Permutation (bl ++ x1) (selsort x1 gv0))
(Permutation (bl ++ x1) (bl ++ bl)), (Permutation (bl ++ x1) (x1 ++ x1)), (Permutation (bl ++ x1) []), (Permutation (x1 ++ bl) x1), (Permutation (x1 ++ bl) (m :: bl)), (Permutation (x1 ++ bl) (m :: x1)), (Permutation (x1 ++ bl) (y :: bl)), (Permutation (x1 ++ bl) (a :: bl)), (Permutation (x1 ++ bl) (a :: x1)), (Permutation (x1 ++ bl) (gv0 :: bl))
(Permutation (x1 ++ bl) (selection_sort x1)), (Permutation (x1 ++ bl) (selsort bl m)), (Permutation (x1 ++ bl) (selsort x1 m)), (Permutation (x1 ++ bl) (selsort x1 y)), (Permutation (x1 ++ bl) (selsort x1 x)), (Permutation (x1 ++ bl) (selsort x1 a)), (Permutation (x1 ++ bl) (selsort x1 gv0)), (Permutation (x1 ++ bl) (selsort x1 x0)), (Permutation (x1 ++ bl) (bl ++ bl)), (Permutation (x1 ++ bl) (x1 ++ x1))
(Permutation (x1 ++ x1) (m :: bl)), (Permutation (x1 ++ x1) (m :: x1)), (Permutation (x1 ++ x1) (y :: bl)), (Permutation (x1 ++ x1) (y :: x1)), (Permutation (x1 ++ x1) (x :: bl)), (Permutation (x1 ++ x1) (a :: bl)), (Permutation (x1 ++ x1) (a :: x1)), (Permutation (x1 ++ x1) (gv0 :: bl)), (Permutation (x1 ++ x1) (gv0 :: x1)), (Permutation (x1 ++ x1) (x0 :: bl))
(Permutation (x1 ++ x1) (selsort bl y)), (Permutation (x1 ++ x1) (selsort bl a)), (Permutation (x1 ++ x1) (selsort bl x0)), (Permutation (x1 ++ x1) (bl ++ bl)), (Permutation (x1 ++ x1) (bl ++ x1)), (Permutation (x1 ++ x1) (x1 ++ bl)), (Permutation [] bl), (Permutation [] (m :: bl)), (Permutation [] (m :: x1)), (Permutation [] (y :: bl))
(Permutation [] (x :: bl)), (Permutation [] (x :: x1)), (Permutation [] (a :: bl)), (Permutation [] (a :: x1)), (Permutation [] (gv0 :: bl)), (Permutation [] (gv0 :: x1)), (Permutation [] (x0 :: bl)), (Permutation [] (x0 :: x1)), (Permutation [] (selection_sort bl)), (Permutation [] (selsort bl x))
(Permutation [] (bl ++ bl)), (Permutation [] (bl ++ x1)), (Permutation [] (x1 ++ bl)), (In m (x :: x1)), (In m (a :: bl)), (In m (a :: x1)), (In m (selection_sort bl)), (In m (selection_sort x1)), (In m (selsort bl m)), (In m (selsort bl y))
(In m (selsort bl a)), (In m (selsort bl gv0)), (In m (selsort bl x0)), (In m (selsort x1 m)), (In m (selsort x1 y)), (In m (selsort x1 x)), (In m (selsort x1 a)), (In m (selsort x1 gv0)), (In m (selsort x1 x0)), (In m (bl ++ bl))
(In m (x1 ++ bl)), (In m (x1 ++ x1)), (In y (a :: x1)), (In y (selection_sort x1)), (In y (selsort bl m)), (In y (selsort x1 m)), (In y (selsort x1 y)), (In y (selsort x1 x)), (In y (selsort x1 a)), (In y (selsort x1 gv0))
(In y (x1 ++ x1)), (In x (selsort bl m)), (In x (selsort x1 m)), (In x (selsort x1 y)), (In x (selsort x1 gv0)), (In x (selsort x1 x0)), (In a (m :: bl)), (In a (m :: x1)), (In a (y :: bl)), (In a (y :: x1))
(In a (x :: x1)), (In a (gv0 :: bl)), (In a (gv0 :: x1)), (In a (x0 :: bl)), (In a (x0 :: x1)), (In a (selection_sort bl)), (In a (selection_sort x1)), (In a (selsort bl m)), (In a (selsort bl y)), (In a (selsort bl x))
(In a (selsort bl gv0)), (In a (selsort bl x0)), (In a (selsort x1 m)), (In a (selsort x1 y)), (In a (selsort x1 x)), (In a (selsort x1 a)), (In a (selsort x1 gv0)), (In a (selsort x1 x0)), (In a (bl ++ bl)), (In a (bl ++ x1))
(In a (x1 ++ x1)), (In gv0 (a :: x1)), (In gv0 (selection_sort x1)), (In gv0 (selsort bl m)), (In gv0 (selsort x1 m)), (In gv0 (selsort x1 y)), (In gv0 (selsort x1 x)), (In gv0 (selsort x1 a)), (In gv0 (selsort x1 gv0)), (In gv0 (selsort x1 x0))
(In x0 (a :: x1)), (In x0 (selection_sort x1)), (In x0 (selsort bl m)), (In x0 (selsort x1 m)), (In x0 (selsort x1 y)), (In x0 (selsort x1 x)), (In x0 (selsort x1 a)), (In x0 (selsort x1 gv0)), (In x0 (selsort x1 x0)), (In x0 (x1 ++ x1))
(In (length bl) (selsort bl y)), (In (length bl) (selsort bl gv0)), (In (length bl) (selsort bl x0)), (In (length bl) (selsort x1 m)), (In (length bl) (selsort x1 y)), (In (length bl) (selsort x1 gv0)), (In (length bl) (selsort x1 x0)), (In (length x1) bl), (In (length x1) x1), (In (length x1) (y :: bl))
(In (length x1) (x :: bl)), (In (length x1) (x :: x1)), (In (length x1) (x0 :: bl)), (In (length x1) (x0 :: x1)), (In (length x1) (selection_sort bl)), (In (length x1) (selection_sort x1)), (In (length x1) (selsort bl m)), (In (length x1) (selsort bl y)), (In (length x1) (selsort bl x)), (In (length x1) (selsort bl a))
(In (length x1) (selsort bl x0)), (In (length x1) (selsort x1 m)), (In (length x1) (selsort x1 y)), (In (length x1) (selsort x1 x)), (In (length x1) (selsort x1 a)), (In (length x1) (selsort x1 gv0)), (In (length x1) (selsort x1 x0)), (In (length x1) (bl ++ bl)), (In (length x1) (bl ++ x1)), (In (length x1) (x1 ++ bl))
(x < length bl), (x < length x1), (length bl < m), (length bl < a), (length bl < length x1), (length x1 < m), (x <= length x1), (length bl <= m), (length bl <= length x1), (~ m <=* bl)
(~ y <=* bl), (~ y <=* x1), (~ x <=* bl), (~ x <=* x1), (~ a <=* bl), (~ a <=* x1), (~ gv0 <=* bl), (~ gv0 <=* x1), (~ x0 <=* bl), (~ x0 <=* x1)
(~ sorted x1), (~ Permutation bl bl), (~ Permutation x1 x1), (~ In x bl), (~ m < x), (~ m < a), (~ a < x), (~ m <= m), (~ m <= y), (~ m <= x)
(~ m <= gv0), (~ m <= x0), (~ y <= y), (~ y <= x), (~ y <= x0), (~ x <= x), (~ a <= x), (~ a <= a), (~ gv0 <= y), (~ gv0 <= x)
(~ gv0 <= x0), (~ x0 <= y), (~ x0 <= x), (~ x0 <= x0), (bl <> bl), (x1 <> x1), (m <> m), (y <> y), (y <> x0), (x <> x)
(gv0 <> gv0), (x0 <> y), (x0 <> x0), (None = Some bl), (None = Some x1), (m :: bl = bl), (m :: bl = x1), (m :: bl = selection_sort bl), (m :: bl = selection_sort x1), (m :: bl = selsort bl m)
(m :: bl = selsort bl x), (m :: bl = selsort bl a), (m :: bl = selsort bl gv0), (m :: bl = selsort bl x0), (m :: bl = selsort x1 m), (m :: bl = selsort x1 y), (m :: bl = selsort x1 x), (m :: bl = selsort x1 a), (m :: bl = selsort x1 gv0), (m :: bl = selsort x1 x0)
(m :: bl = bl ++ x1), (m :: bl = x1 ++ bl), (m :: bl = x1 ++ x1), (m :: bl = []), (m :: x1 = bl), (m :: x1 = x1), (m :: x1 = selection_sort bl), (m :: x1 = selection_sort x1), (m :: x1 = selsort bl m), (m :: x1 = selsort bl y)
(m :: x1 = selsort bl a), (m :: x1 = selsort bl gv0), (m :: x1 = selsort bl x0), (m :: x1 = selsort x1 m), (m :: x1 = selsort x1 y), (m :: x1 = selsort x1 x), (m :: x1 = selsort x1 a), (m :: x1 = selsort x1 gv0), (m :: x1 = selsort x1 x0), (m :: x1 = bl ++ bl)
(m :: x1 = x1 ++ bl), (m :: x1 = x1 ++ x1), (m :: x1 = []), (y :: bl = bl), (y :: bl = x1), (y :: bl = selection_sort bl), (y :: bl = selection_sort x1), (y :: bl = selsort bl m), (y :: bl = selsort bl y), (y :: bl = selsort bl x)
(y :: bl = selsort bl gv0), (y :: bl = selsort bl x0), (y :: bl = selsort x1 m), (y :: bl = selsort x1 y), (y :: bl = selsort x1 x), (y :: bl = selsort x1 a), (y :: bl = selsort x1 gv0), (y :: bl = selsort x1 x0), (y :: bl = x1 ++ x1), (y :: bl = [])
(y :: x1 = selection_sort x1), (y :: x1 = selsort bl m), (y :: x1 = selsort x1 m), (y :: x1 = selsort x1 y), (y :: x1 = selsort x1 x), (y :: x1 = selsort x1 a), (y :: x1 = selsort x1 gv0), (y :: x1 = selsort x1 x0), (y :: x1 = bl ++ bl), (y :: x1 = x1 ++ x1)
(x :: bl = bl), (x :: bl = x1), (x :: bl = selection_sort bl), (x :: bl = selection_sort x1), (x :: bl = selsort bl m), (x :: bl = selsort bl y), (x :: bl = selsort bl x), (x :: bl = selsort bl a), (x :: bl = selsort bl gv0), (x :: bl = selsort bl x0)
(x :: bl = selsort x1 y), (x :: bl = selsort x1 x), (x :: bl = selsort x1 a), (x :: bl = selsort x1 gv0), (x :: bl = selsort x1 x0), (x :: bl = x1 ++ x1), (x :: bl = []), (x :: x1 = x1), (x :: x1 = selection_sort x1), (x :: x1 = selsort bl m)
(x :: x1 = selsort x1 y), (x :: x1 = selsort x1 x), (x :: x1 = selsort x1 a), (x :: x1 = selsort x1 gv0), (x :: x1 = selsort x1 x0), (x :: x1 = bl ++ bl), (x :: x1 = []), (a :: bl = bl), (a :: bl = x1), (a :: bl = selection_sort bl)
(a :: bl = selsort bl m), (a :: bl = selsort bl y), (a :: bl = selsort bl x), (a :: bl = selsort bl a), (a :: bl = selsort bl gv0), (a :: bl = selsort bl x0), (a :: bl = selsort x1 m), (a :: bl = selsort x1 y), (a :: bl = selsort x1 x), (a :: bl = selsort x1 a)
(a :: bl = selsort x1 x0), (a :: bl = bl ++ bl), (a :: bl = bl ++ x1), (a :: bl = x1 ++ bl), (a :: bl = x1 ++ x1), (a :: bl = []), (a :: x1 = bl), (a :: x1 = x1), (a :: x1 = selection_sort bl), (a :: x1 = selection_sort x1)
(a :: x1 = selsort bl y), (a :: x1 = selsort bl x), (a :: x1 = selsort bl a), (a :: x1 = selsort bl gv0), (a :: x1 = selsort bl x0), (a :: x1 = selsort x1 m), (a :: x1 = selsort x1 y), (a :: x1 = selsort x1 x), (a :: x1 = selsort x1 a), (a :: x1 = selsort x1 gv0)
(a :: x1 = bl ++ bl), (a :: x1 = bl ++ x1), (a :: x1 = x1 ++ bl), (a :: x1 = x1 ++ x1), (a :: x1 = []), (gv0 :: bl = bl), (gv0 :: bl = x1), (gv0 :: bl = selection_sort bl), (gv0 :: bl = selection_sort x1), (gv0 :: bl = selsort bl m)
(gv0 :: bl = selsort bl x), (gv0 :: bl = selsort bl a), (gv0 :: bl = selsort bl gv0), (gv0 :: bl = selsort bl x0), (gv0 :: bl = selsort x1 m), (gv0 :: bl = selsort x1 y), (gv0 :: bl = selsort x1 x), (gv0 :: bl = selsort x1 a), (gv0 :: bl = selsort x1 gv0), (gv0 :: bl = selsort x1 x0)
(gv0 :: bl = x1 ++ bl), (gv0 :: bl = x1 ++ x1), (gv0 :: bl = []), (gv0 :: x1 = x1), (gv0 :: x1 = selection_sort x1), (gv0 :: x1 = selsort bl m), (gv0 :: x1 = selsort x1 m), (gv0 :: x1 = selsort x1 y), (gv0 :: x1 = selsort x1 x), (gv0 :: x1 = selsort x1 a)
(gv0 :: x1 = selsort x1 x0), (gv0 :: x1 = bl ++ bl), (gv0 :: x1 = x1 ++ x1), (gv0 :: x1 = []), (x0 :: bl = bl), (x0 :: bl = x1), (x0 :: bl = selection_sort bl), (x0 :: bl = selection_sort x1), (x0 :: bl = selsort bl m), (x0 :: bl = selsort bl y)
(x0 :: bl = selsort bl a), (x0 :: bl = selsort bl gv0), (x0 :: bl = selsort bl x0), (x0 :: bl = selsort x1 m), (x0 :: bl = selsort x1 y), (x0 :: bl = selsort x1 x), (x0 :: bl = selsort x1 a), (x0 :: bl = selsort x1 gv0), (x0 :: bl = selsort x1 x0), (x0 :: bl = bl ++ x1)
(x0 :: bl = x1 ++ x1), (x0 :: bl = []), (x0 :: x1 = x1), (x0 :: x1 = selection_sort x1), (x0 :: x1 = selsort bl m), (x0 :: x1 = selsort x1 m), (x0 :: x1 = selsort x1 y), (x0 :: x1 = selsort x1 x), (x0 :: x1 = selsort x1 a), (x0 :: x1 = selsort x1 gv0)
(x0 :: x1 = bl ++ bl), (x0 :: x1 = x1 ++ x1), (x0 :: x1 = []), (selection_sort bl = x1), (selection_sort bl = bl ++ bl), (selection_sort x1 = bl), (selection_sort x1 = bl ++ bl), (selection_sort x1 = bl ++ x1), (selection_sort x1 = x1 ++ bl), (selsort bl m = bl)
(selsort bl m = bl ++ bl), (selsort bl m = bl ++ x1), (selsort bl m = x1 ++ bl), (selsort bl y = x1), (selsort bl y = selection_sort x1), (selsort bl y = bl ++ bl), (selsort bl y = x1 ++ x1), (selsort bl x = x1), (selsort bl x = selection_sort x1), (selsort bl x = bl ++ bl)
(selsort bl a = x1 ++ x1), (selsort bl gv0 = bl ++ bl), (selsort bl x0 = x1), (selsort bl x0 = x1 ++ x1), (selsort x1 m = bl), (selsort x1 m = selection_sort bl), (selsort x1 m = bl ++ bl), (selsort x1 m = bl ++ x1), (selsort x1 m = x1 ++ bl), (selsort x1 y = bl)
(selsort x1 y = bl ++ bl), (selsort x1 y = bl ++ x1), (selsort x1 y = x1 ++ bl), (selsort x1 x = bl), (selsort x1 x = selection_sort bl), (selsort x1 x = bl ++ bl), (selsort x1 x = bl ++ x1), (selsort x1 x = x1 ++ bl), (selsort x1 a = bl), (selsort x1 a = selection_sort bl)
(selsort x1 a = bl ++ x1), (selsort x1 a = x1 ++ bl), (selsort x1 gv0 = bl), (selsort x1 gv0 = selection_sort bl), (selsort x1 gv0 = bl ++ bl), (selsort x1 gv0 = bl ++ x1), (selsort x1 gv0 = x1 ++ bl), (selsort x1 x0 = bl), (selsort x1 x0 = selection_sort bl), (selsort x1 x0 = bl ++ bl)
(selsort x1 x0 = x1 ++ bl), (bl ++ bl = bl), (bl ++ bl = x1), (bl ++ x1 = x1), (x1 ++ bl = x1), ([] = bl), ([] = selection_sort bl), ([] = selsort bl x), ([] = selsort bl a), ([] = bl ++ bl)
([] = x1 ++ bl), (None = Some m), (None = Some y), (None = Some x), (None = Some a), (None = Some gv0), (None = Some x0), ((m, bl) = select m x1), ((m, bl) = select y x1), ((m, bl) = select x bl)
((m, bl) = select a bl), ((m, bl) = select a x1), ((m, bl) = select gv0 x1), ((m, bl) = select x0 x1), ((m, x1) = select m bl), ((m, x1) = select y bl), ((m, x1) = select x bl), ((m, x1) = select x x1), ((m, x1) = select a bl), ((m, x1) = select a x1)
((m, x1) = select x0 bl), ((y, bl) = select m x1), ((y, bl) = select y x1), ((y, bl) = select x x1), ((y, bl) = select a bl), ((y, bl) = select a x1), ((y, bl) = select gv0 x1), ((y, bl) = select x0 x1), ((y, x1) = select m bl), ((y, x1) = select y bl)
((y, x1) = select a bl), ((y, x1) = select a x1), ((y, x1) = select gv0 bl), ((y, x1) = select x0 bl), ((x, bl) = select m bl), ((x, bl) = select m x1), ((x, bl) = select y x1), ((x, bl) = select x x1), ((x, bl) = select a bl), ((x, bl) = select a x1)
((x, bl) = select x0 x1), ((x, x1) = select m bl), ((x, x1) = select m x1), ((x, x1) = select y bl), ((x, x1) = select x bl), ((x, x1) = select a bl), ((x, x1) = select a x1), ((x, x1) = select gv0 bl), ((x, x1) = select x0 bl), ((a, bl) = select m bl)
((a, bl) = select y bl), ((a, bl) = select y x1), ((a, bl) = select x bl), ((a, bl) = select x x1), ((a, bl) = select a x1), ((a, bl) = select gv0 bl), ((a, bl) = select gv0 x1), ((a, bl) = select x0 bl), ((a, bl) = select x0 x1), ((a, x1) = select m bl)
((a, x1) = select y bl), ((a, x1) = select y x1), ((a, x1) = select x bl), ((a, x1) = select x x1), ((a, x1) = select a bl), ((a, x1) = select gv0 bl), ((a, x1) = select gv0 x1), ((a, x1) = select x0 bl), ((a, x1) = select x0 x1), ((gv0, bl) = select m x1)
((gv0, bl) = select x x1), ((gv0, bl) = select a bl), ((gv0, bl) = select a x1), ((gv0, bl) = select gv0 x1), ((gv0, bl) = select x0 x1), ((gv0, x1) = select m bl), ((gv0, x1) = select y bl), ((gv0, x1) = select x bl), ((gv0, x1) = select a bl), ((gv0, x1) = select a x1)
((gv0, x1) = select x0 bl), ((x0, bl) = select m x1), ((x0, bl) = select y x1), ((x0, bl) = select x x1), ((x0, bl) = select a bl), ((x0, bl) = select a x1), ((x0, bl) = select gv0 x1), ((x0, bl) = select x0 x1), ((x0, x1) = select m bl), ((x0, x1) = select y bl)
((x0, x1) = select a bl), ((x0, x1) = select a x1), ((x0, x1) = select gv0 bl), ((x0, x1) = select x0 bl), (length bl = m), (length bl = y), (length bl = gv0), (length bl = x0), (length x1 = y), (length x1 = x)

Label: 1 (1)
(x0 < x), (x0 <= a), (~ x < x0), (~ x <= x0)

Label: 1 (2)
(a < x), (x0 < x), (a <= x), (~ x < x0), (~ x <= a), (~ x <= x0)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 1512.269 seconds


(a < x)
 - (a < x)
 - (x0 < x)
 - (a <= x)
 - (~ x < x0)
 - (~ x <= a)
 - (~ x <= x0)

(x0 <= a)
 - (x0 <= a)
 - (x0 < x)
 - (~ x < x0)
 - (~ x <= x0)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 1512.269 seconds

Number of Result Pairs Returned: 3

(a < x -> x0 <= a -> x0 < S x)

(a < x -> a <= x)
(a <= x -> x0 <= a -> x0 < S x)

(a < x -> ~ x <= a)
(~ x <= a -> x0 <= a -> x0 < S x)
