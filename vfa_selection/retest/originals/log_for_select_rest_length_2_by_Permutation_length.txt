Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (select x l = (y, r))

----------------------------------
Goal: (length (x :: l) = length (y :: r))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : (list nat) = (x :: l)
gv0 : nat = (length (x :: l))
gv3 : (list nat) = (y :: r)
gv2 : nat = (length (y :: r))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 170.252 seconds

Label: Generalization #0
Assumptions: 
 -- (select x l = (y, r))
 -- (length (y :: r) = gv2)

----------------------------------
Goal: (length (x :: l) = gv2)
Case: 3

Label: Generalization #1
Assumptions: 
 -- (select x l = (y, r))
 -- (y :: r = gv3)

----------------------------------
Goal: (length (x :: l) = length gv3)
Case: 3

Label: Generalization #2
Assumptions: 
 -- (select x l = (y, r))
 -- (length (x :: l) = gv0)

----------------------------------
Goal: (gv0 = length (y :: r))
Case: 3

Label: Generalization #3
Assumptions: 
 -- (select x l = (y, r))
 -- (x :: l = gv1)

----------------------------------
Goal: (length gv1 = length (y :: r))
Case: 3

Label: Generalization #4
Assumptions: 
 -- (select x l = (y, r))

----------------------------------
Goal: (length (x :: l) = length (y :: r))
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 172.819 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (select x l = (y, r))
Positive Examples:
   [gv2 := 2; l := [1]; r := [3]; x := 3; y := 1]
   [gv2 := 2; l := [2]; r := [2]; x := 0; y := 0]
   [gv2 := 1; l := []; r := []; x := 3; y := 3]
   [gv2 := 2; l := [1]; r := [1]; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 2; y := 2]
   [gv2 := 2; l := [1]; r := [1]; x := 0; y := 0]
   [gv2 := 1; l := []; r := []; x := 4; y := 4]
   [gv2 := 3; l := [1; 1]; r := [1; 1]; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 0; y := 0]

Negative Examples:
   [gv2 := 2; l := []; r := [4]; x := 1; y := 3]
   [gv2 := 1; l := [0; 1]; r := []; x := 4; y := 2]
   [gv2 := 3; l := [2; 3; 2]; r := [0; 0]; x := 1; y := 0]
   [gv2 := 1; l := [2; 0; 2]; r := []; x := 3; y := 2]
   [gv2 := 1; l := [6]; r := []; x := 0; y := 0]
   [gv2 := 3; l := [3; 0; 2]; r := [3; 2]; x := 0; y := 2]
   [gv2 := 4; l := [1; 0; 3; 4; 3]; r := [4; 5; 6]; x := 3; y := 2]
   [gv2 := 3; l := [0]; r := [2; 0]; x := 0; y := 2]
   [gv2 := 1; l := [4; 2; 1; 3]; r := []; x := 2; y := 1]
   [gv2 := 4; l := [5]; r := [5; 0; 2]; x := 2; y := 6]
   etc ...


Label: 0 (1)
Abducted Assumption: (length (y :: r) = gv2)
Positive Examples:
   [gv2 := 2; l := [1]; r := [3]; x := 3; y := 1]
   [gv2 := 2; l := [2]; r := [2]; x := 0; y := 0]
   [gv2 := 1; l := []; r := []; x := 3; y := 3]
   [gv2 := 2; l := [1]; r := [1]; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 2; y := 2]
   [gv2 := 2; l := [1]; r := [1]; x := 0; y := 0]
   [gv2 := 1; l := []; r := []; x := 4; y := 4]
   [gv2 := 3; l := [1; 1]; r := [1; 1]; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 1; y := 1]
   [gv2 := 1; l := []; r := []; x := 0; y := 0]

Negative Examples:
   [gv2 := 5; l := []; r := []; x := 0; y := 0]
   [gv2 := 1; l := [0; 0]; r := [2; 0]; x := 2; y := 0]
   [gv2 := 2; l := []; r := []; x := 5; y := 5]
   [gv2 := 5; l := []; r := []; x := 4; y := 4]
   [gv2 := 2; l := [2; 1]; r := [2; 1]; x := 0; y := 0]
   [gv2 := 1; l := [2]; r := [2]; x := 0; y := 0]
   [gv2 := 2; l := [0; 1]; r := [1; 1]; x := 1; y := 0]
   [gv2 := 0; l := [0]; r := [2]; x := 2; y := 0]
   [gv2 := 0; l := [2]; r := [2]; x := 0; y := 0]
   [gv2 := 3; l := [6]; r := [6]; x := 0; y := 0]
   etc ...


Label: 1 (2)
Abducted Assumption: (select x l = (y, r))
Positive Examples:
   [gv3 := [2]; l := []; r := []; x := 2; y := 2]
   [gv3 := [1]; l := []; r := []; x := 1; y := 1]
   [gv3 := [0]; l := []; r := []; x := 0; y := 0]

Negative Examples:
   [gv3 := [1]; l := [1; 0]; r := []; x := 1; y := 1]
   [gv3 := [0]; l := [0]; r := []; x := 2; y := 0]
   [gv3 := [3]; l := [2; 2]; r := []; x := 0; y := 3]
   [gv3 := [0; 1; 3]; l := [2]; r := [1; 3]; x := 2; y := 0]
   [gv3 := [2; 0]; l := []; r := [0]; x := 2; y := 2]
   [gv3 := [5]; l := [4]; r := []; x := 2; y := 5]
   [gv3 := [0; 0]; l := [2; 1]; r := [0]; x := 0; y := 0]
   [gv3 := [2]; l := [0]; r := []; x := 0; y := 2]
   [gv3 := [4]; l := [2; 1; 1; 2]; r := []; x := 0; y := 4]
   [gv3 := [2]; l := [2; 1]; r := []; x := 0; y := 2]
   etc ...


Label: 1 (3)
Abducted Assumption: (y :: r = gv3)
Positive Examples:
   [gv3 := [2]; l := []; r := []; x := 2; y := 2]
   [gv3 := [1]; l := []; r := []; x := 1; y := 1]
   [gv3 := [0]; l := []; r := []; x := 0; y := 0]

Negative Examples:
   [gv3 := [0]; l := [2; 1]; r := [2; 1]; x := 1; y := 1]
   [gv3 := []; l := [3]; r := [3]; x := 3; y := 3]
   [gv3 := []; l := [0; 2]; r := [2; 2]; x := 2; y := 0]
   [gv3 := [3; 0; 5; 1]; l := []; r := []; x := 3; y := 3]
   [gv3 := [1; 2]; l := []; r := []; x := 0; y := 0]
   [gv3 := [5; 1; 1]; l := []; r := []; x := 0; y := 0]
   [gv3 := [2; 2]; l := []; r := []; x := 0; y := 0]
   [gv3 := [2]; l := [1]; r := [1]; x := 0; y := 0]
   [gv3 := [2]; l := [0; 2]; r := [2; 2]; x := 2; y := 0]
   [gv3 := [1; 0]; l := []; r := []; x := 0; y := 0]
   etc ...


Label: 2 (4)
Abducted Assumption: (select x l = (y, r))
Positive Examples:
   [gv0 := 2; l := [0]; r := [0]; x := 0; y := 0]
   [gv0 := 2; l := [1]; r := [1]; x := 0; y := 0]
   [gv0 := 2; l := [0]; r := [2]; x := 2; y := 0]
   [gv0 := 1; l := []; r := []; x := 2; y := 2]
   [gv0 := 2; l := [2]; r := [2]; x := 2; y := 2]
   [gv0 := 1; l := []; r := []; x := 0; y := 0]
   [gv0 := 1; l := []; r := []; x := 1; y := 1]

Negative Examples:
   [gv0 := 2; l := [2]; r := [4; 1; 1; 0]; x := 1; y := 1]
   [gv0 := 3; l := [2; 1]; r := []; x := 1; y := 4]
   [gv0 := 3; l := [1; 1]; r := [1; 2; 1]; x := 0; y := 2]
   [gv0 := 3; l := [2; 3]; r := []; x := 1; y := 0]
   [gv0 := 3; l := [1; 1]; r := []; x := 2; y := 0]
   [gv0 := 1; l := []; r := [2; 3]; x := 2; y := 1]
   [gv0 := 4; l := [1; 4; 5]; r := [2; 2]; x := 3; y := 0]
   [gv0 := 3; l := [2; 3]; r := []; x := 2; y := 1]
   [gv0 := 1; l := []; r := [1; 5; 0; 3; 1; 6]; x := 1; y := 1]
   [gv0 := 3; l := [0; 0]; r := [1; 2; 2]; x := 1; y := 1]
   etc ...


Label: 2 (5)
Abducted Assumption: (length (x :: l) = gv0)
Positive Examples:
   [gv0 := 2; l := [0]; r := [0]; x := 0; y := 0]
   [gv0 := 2; l := [1]; r := [1]; x := 0; y := 0]
   [gv0 := 2; l := [0]; r := [2]; x := 2; y := 0]
   [gv0 := 1; l := []; r := []; x := 2; y := 2]
   [gv0 := 2; l := [2]; r := [2]; x := 2; y := 2]
   [gv0 := 1; l := []; r := []; x := 0; y := 0]
   [gv0 := 1; l := []; r := []; x := 1; y := 1]

Negative Examples:
   [gv0 := 0; l := [0]; r := [3]; x := 3; y := 0]
   [gv0 := 4; l := []; r := []; x := 5; y := 5]
   [gv0 := 5; l := []; r := []; x := 5; y := 5]
   [gv0 := 2; l := []; r := []; x := 5; y := 5]
   [gv0 := 2; l := [1; 0]; r := [1; 0]; x := 0; y := 0]
   [gv0 := 1; l := [0]; r := [3]; x := 3; y := 0]
   [gv0 := 0; l := [0; 2]; r := [2; 2]; x := 2; y := 0]
   [gv0 := 2; l := [0; 2]; r := [0; 2]; x := 0; y := 0]
   [gv0 := 1; l := [5]; r := [5]; x := 1; y := 1]
   [gv0 := 1; l := [2]; r := [2]; x := 2; y := 2]
   etc ...


Label: 3 (6)
Abducted Assumption: (select x l = (y, r))
Positive Examples:
   [gv1 := [0]; l := []; r := []; x := 0; y := 0]
   [gv1 := [2; 1]; l := [1]; r := [2]; x := 2; y := 1]
   [gv1 := [1]; l := []; r := []; x := 1; y := 1]

Negative Examples:
   [gv1 := [0; 0]; l := [0]; r := [0; 2]; x := 0; y := 1]
   [gv1 := [1]; l := []; r := [4; 2; 0]; x := 1; y := 2]
   [gv1 := [3; 2]; l := [2]; r := [2; 1]; x := 3; y := 1]
   [gv1 := [1]; l := []; r := [0; 0]; x := 1; y := 2]
   [gv1 := [2]; l := []; r := [2; 2]; x := 2; y := 1]
   [gv1 := [3; 1]; l := [1]; r := [1; 2; 1]; x := 3; y := 0]
   [gv1 := [2]; l := []; r := [0; 0]; x := 2; y := 1]
   [gv1 := [0]; l := []; r := [1; 1]; x := 0; y := 2]
   [gv1 := [0]; l := []; r := [2; 2]; x := 0; y := 1]
   [gv1 := [1; 2]; l := [2]; r := []; x := 1; y := 2]
   etc ...


Label: 3 (7)
Abducted Assumption: (x :: l = gv1)
Positive Examples:
   [gv1 := [0]; l := []; r := []; x := 0; y := 0]
   [gv1 := [2; 1]; l := [1]; r := [2]; x := 2; y := 1]
   [gv1 := [1]; l := []; r := []; x := 1; y := 1]

Negative Examples:
   [gv1 := [2]; l := [2]; r := [2]; x := 1; y := 1]
   [gv1 := [1; 3; 2]; l := [0]; r := [2]; x := 2; y := 0]
   [gv1 := [3; 4]; l := []; r := []; x := 4; y := 4]
   [gv1 := [2; 1]; l := []; r := []; x := 2; y := 2]
   [gv1 := [2; 2]; l := []; r := []; x := 0; y := 0]
   [gv1 := [4; 4]; l := []; r := []; x := 4; y := 4]
   [gv1 := [0]; l := [1]; r := [1]; x := 0; y := 0]
   [gv1 := [0; 3; 3]; l := []; r := []; x := 2; y := 2]
   [gv1 := [3; 1; 4; 1]; l := []; r := []; x := 0; y := 0]
   [gv1 := [0; 0]; l := []; r := []; x := 1; y := 1]
   etc ...


Label: 4 (8)
Abducted Assumption: (select x l = (y, r))
Positive Examples:
   [l := [0]; r := [3]; x := 3; y := 0]
   [l := [2; 2; 3]; r := [3; 2; 3]; x := 3; y := 2]
   [l := [5]; r := [5]; x := 1; y := 1]
   [l := [2]; r := [3]; x := 3; y := 2]
   [l := [0]; r := [2]; x := 2; y := 0]
   [l := []; r := []; x := 5; y := 5]
   [l := [1; 3; 0]; r := [3; 3; 1]; x := 3; y := 0]
   [l := [2; 2]; r := [2; 2]; x := 0; y := 0]
   [l := [2]; r := [2]; x := 0; y := 0]
   [l := [1]; r := [2]; x := 2; y := 1]
   etc ...

Negative Examples:
   [l := [0; 0; 3]; r := [2; 3; 3; 0]; x := 4; y := 2]
   [l := [4; 2]; r := [4; 0; 0; 5]; x := 4; y := 4]
   [l := [4]; r := [1; 1]; x := 3; y := 2]
   [l := [0; 0; 3; 0]; r := [2; 0]; x := 3; y := 4]
   [l := [3; 3; 5; 4; 5]; r := [3; 2]; x := 3; y := 3]
   [l := [0; 2]; r := [1]; x := 3; y := 1]
   [l := [4; 3; 0]; r := [1; 0; 4; 1]; x := 3; y := 3]
   [l := [4; 4]; r := [2]; x := 3; y := 3]
   [l := [3; 2; 1]; r := []; x := 3; y := 1]
   [l := [2; 2]; r := [4; 5; 1]; x := 0; y := 0]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 176.916 seconds


Label: 0 (0)
(y <=* r), (y <=* l), (gv2 <=* r), (gv2 <=* l), (x <=* r), (x <=* l), (sorted r), (sorted l), (Permutation r r), (Permutation r l)
(Permutation l l), (In y r), (In y l), (In gv2 r), (In gv2 l), (In x r), (In x l), (y < y), (y < gv2), (y < x)
(gv2 < gv2), (gv2 < x), (x < y), (x < gv2), (x < x), (y <= y), (y <= gv2), (y <= x), (gv2 <= y), (gv2 <= gv2)
(x <= y), (x <= gv2), (x <= x), (r = r), (r = l), (l = r), (l = l), (y = y), (y = gv2), (y = x)
(gv2 = gv2), (gv2 = x), (x = y), (x = gv2), (x = x), (false = sorted_bool r), (false = sorted_bool l), (true = sorted_bool r), (true = sorted_bool l), (y <=* y :: r)
(y <=* gv2 :: r), (y <=* gv2 :: l), (y <=* x :: r), (y <=* x :: l), (y <=* selection_sort r), (y <=* selection_sort l), (y <=* selsort r y), (y <=* selsort r gv2), (y <=* selsort r x), (y <=* selsort l y)
(y <=* selsort l x), (y <=* r ++ r), (y <=* r ++ l), (y <=* l ++ r), (y <=* l ++ l), (y <=* []), (gv2 <=* y :: r), (gv2 <=* y :: l), (gv2 <=* gv2 :: r), (gv2 <=* gv2 :: l)
(gv2 <=* x :: l), (gv2 <=* selection_sort r), (gv2 <=* selection_sort l), (gv2 <=* selsort r y), (gv2 <=* selsort r gv2), (gv2 <=* selsort r x), (gv2 <=* selsort l y), (gv2 <=* selsort l gv2), (gv2 <=* selsort l x), (gv2 <=* r ++ r)
(gv2 <=* l ++ r), (gv2 <=* l ++ l), (gv2 <=* []), (x <=* y :: r), (x <=* y :: l), (x <=* gv2 :: r), (x <=* gv2 :: l), (x <=* x :: r), (x <=* x :: l), (x <=* selection_sort r)
(x <=* selsort r y), (x <=* selsort r gv2), (x <=* selsort r x), (x <=* selsort l y), (x <=* selsort l gv2), (x <=* selsort l x), (x <=* r ++ r), (x <=* r ++ l), (x <=* l ++ r), (x <=* l ++ l)
(length r <=* r), (length r <=* l), (length r <=* y :: r), (length r <=* y :: l), (length r <=* gv2 :: r), (length r <=* gv2 :: l), (length r <=* x :: r), (length r <=* x :: l), (length r <=* selection_sort r), (length r <=* selection_sort l)
(length r <=* selsort r gv2), (length r <=* selsort r x), (length r <=* selsort l y), (length r <=* selsort l gv2), (length r <=* selsort l x), (length r <=* r ++ r), (length r <=* r ++ l), (length r <=* l ++ r), (length r <=* l ++ l), (length r <=* [])
(length l <=* l), (length l <=* y :: r), (length l <=* y :: l), (length l <=* gv2 :: r), (length l <=* gv2 :: l), (length l <=* x :: r), (length l <=* x :: l), (length l <=* selection_sort r), (length l <=* selection_sort l), (length l <=* selsort r y)
(length l <=* selsort r x), (length l <=* selsort l y), (length l <=* selsort l gv2), (length l <=* selsort l x), (length l <=* r ++ r), (length l <=* r ++ l), (length l <=* l ++ r), (length l <=* l ++ l), (length l <=* []), (sorted (y :: r))
(sorted (gv2 :: r)), (sorted (gv2 :: l)), (sorted (x :: r)), (sorted (x :: l)), (sorted (selection_sort r)), (sorted (selection_sort l)), (sorted (selsort r y)), (sorted (selsort r gv2)), (sorted (selsort r x)), (sorted (selsort l y))
(sorted (selsort l x)), (sorted (r ++ r)), (sorted (r ++ l)), (sorted (l ++ r)), (sorted (l ++ l)), (sorted []), (Permutation r (y :: r)), (Permutation r (y :: l)), (Permutation r (gv2 :: r)), (Permutation r (gv2 :: l))
(Permutation r (x :: l)), (Permutation r (selection_sort r)), (Permutation r (selection_sort l)), (Permutation r (selsort r y)), (Permutation r (selsort r gv2)), (Permutation r (selsort r x)), (Permutation r (selsort l y)), (Permutation r (selsort l gv2)), (Permutation r (selsort l x)), (Permutation r (r ++ r))
(Permutation r (l ++ r)), (Permutation r (l ++ l)), (Permutation r []), (Permutation l (y :: r)), (Permutation l (y :: l)), (Permutation l (gv2 :: r)), (Permutation l (gv2 :: l)), (Permutation l (x :: r)), (Permutation l (x :: l)), (Permutation l (selection_sort r))
(Permutation l (selsort r y)), (Permutation l (selsort r gv2)), (Permutation l (selsort r x)), (Permutation l (selsort l y)), (Permutation l (selsort l gv2)), (Permutation l (selsort l x)), (Permutation l (r ++ r)), (Permutation l (r ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ l))
(Permutation (y :: r) r), (Permutation (y :: r) l), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (gv2 :: r)), (Permutation (y :: r) (gv2 :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selsort r y))
(Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l gv2)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) []), (Permutation (y :: l) r)
(Permutation (y :: l) (y :: r)), (Permutation (y :: l) (gv2 :: r)), (Permutation (y :: l) (gv2 :: l)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort r y)), (Permutation (y :: l) (selsort r gv2)), (Permutation (y :: l) (selsort r x))
(Permutation (y :: l) (selsort l gv2)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (l ++ r)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (gv2 :: r) r), (Permutation (gv2 :: r) l), (Permutation (gv2 :: r) (y :: r))
(Permutation (gv2 :: r) (gv2 :: l)), (Permutation (gv2 :: r) (x :: r)), (Permutation (gv2 :: r) (x :: l)), (Permutation (gv2 :: r) (selection_sort r)), (Permutation (gv2 :: r) (selection_sort l)), (Permutation (gv2 :: r) (selsort r y)), (Permutation (gv2 :: r) (selsort r gv2)), (Permutation (gv2 :: r) (selsort r x)), (Permutation (gv2 :: r) (selsort l y)), (Permutation (gv2 :: r) (selsort l gv2))
(Permutation (gv2 :: r) (r ++ r)), (Permutation (gv2 :: r) (r ++ l)), (Permutation (gv2 :: r) (l ++ r)), (Permutation (gv2 :: r) (l ++ l)), (Permutation (gv2 :: r) []), (Permutation (gv2 :: l) r), (Permutation (gv2 :: l) l), (Permutation (gv2 :: l) (y :: r)), (Permutation (gv2 :: l) (y :: l)), (Permutation (gv2 :: l) (gv2 :: r))
(Permutation (gv2 :: l) (x :: l)), (Permutation (gv2 :: l) (selection_sort r)), (Permutation (gv2 :: l) (selection_sort l)), (Permutation (gv2 :: l) (selsort r y)), (Permutation (gv2 :: l) (selsort r gv2)), (Permutation (gv2 :: l) (selsort r x)), (Permutation (gv2 :: l) (selsort l y)), (Permutation (gv2 :: l) (selsort l gv2)), (Permutation (gv2 :: l) (selsort l x)), (Permutation (gv2 :: l) (r ++ r))
(Permutation (gv2 :: l) (l ++ r)), (Permutation (gv2 :: l) (l ++ l)), (Permutation (gv2 :: l) []), (Permutation (x :: r) r), (Permutation (x :: r) l), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (gv2 :: r)), (Permutation (x :: r) (gv2 :: l)), (Permutation (x :: r) (x :: l))
(Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r gv2)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l gv2)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (l ++ r))
(Permutation (x :: r) []), (Permutation (x :: l) r), (Permutation (x :: l) l), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (gv2 :: r)), (Permutation (x :: l) (gv2 :: l)), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selection_sort l))
(Permutation (x :: l) (selsort r gv2)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort l gv2)), (Permutation (x :: l) (selsort l x)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) [])
(Permutation (selection_sort r) l), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (gv2 :: r)), (Permutation (selection_sort r) (gv2 :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort r gv2))
(Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l gv2)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) []), (Permutation (selection_sort l) r), (Permutation (selection_sort l) l)
(Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (gv2 :: r)), (Permutation (selection_sort l) (gv2 :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r gv2)), (Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort r y) r), (Permutation (selsort r y) l), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: l))
(Permutation (selsort r y) (gv2 :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selsort r gv2)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort l gv2)), (Permutation (selsort r y) (selsort l x))
(Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) []), (Permutation (selsort r gv2) r), (Permutation (selsort r gv2) l), (Permutation (selsort r gv2) (y :: r)), (Permutation (selsort r gv2) (y :: l)), (Permutation (selsort r gv2) (gv2 :: r)), (Permutation (selsort r gv2) (gv2 :: l))
(Permutation (selsort r gv2) (x :: l)), (Permutation (selsort r gv2) (selection_sort r)), (Permutation (selsort r gv2) (selection_sort l)), (Permutation (selsort r gv2) (selsort r y)), (Permutation (selsort r gv2) (selsort r x)), (Permutation (selsort r gv2) (selsort l y)), (Permutation (selsort r gv2) (selsort l gv2)), (Permutation (selsort r gv2) (selsort l x)), (Permutation (selsort r gv2) (r ++ r)), (Permutation (selsort r gv2) (r ++ l))
(Permutation (selsort r gv2) (l ++ l)), (Permutation (selsort r gv2) []), (Permutation (selsort r x) r), (Permutation (selsort r x) l), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (gv2 :: r)), (Permutation (selsort r x) (gv2 :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: l))
(Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort r gv2)), (Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort l gv2)), (Permutation (selsort r x) (selsort l x)), (Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ l))
(Permutation (selsort l y) r), (Permutation (selsort l y) l), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (gv2 :: r)), (Permutation (selsort l y) (gv2 :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selsort r gv2)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort l gv2)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (l ++ r)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (selsort l gv2) r)
(Permutation (selsort l gv2) (y :: r)), (Permutation (selsort l gv2) (y :: l)), (Permutation (selsort l gv2) (gv2 :: r)), (Permutation (selsort l gv2) (gv2 :: l)), (Permutation (selsort l gv2) (x :: r)), (Permutation (selsort l gv2) (x :: l)), (Permutation (selsort l gv2) (selection_sort r)), (Permutation (selsort l gv2) (selection_sort l)), (Permutation (selsort l gv2) (selsort r y)), (Permutation (selsort l gv2) (selsort r gv2))
(Permutation (selsort l gv2) (selsort l y)), (Permutation (selsort l gv2) (selsort l x)), (Permutation (selsort l gv2) (r ++ r)), (Permutation (selsort l gv2) (r ++ l)), (Permutation (selsort l gv2) (l ++ r)), (Permutation (selsort l gv2) (l ++ l)), (Permutation (selsort l gv2) []), (Permutation (selsort l x) r), (Permutation (selsort l x) l), (Permutation (selsort l x) (y :: r))
(Permutation (selsort l x) (gv2 :: r)), (Permutation (selsort l x) (gv2 :: l)), (Permutation (selsort l x) (x :: r)), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r gv2)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort l y))
(Permutation (selsort l x) (r ++ r)), (Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) []), (Permutation (r ++ r) r), (Permutation (r ++ r) l), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (gv2 :: r))
(Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selsort r y)), (Permutation (r ++ r) (selsort r gv2)), (Permutation (r ++ r) (selsort r x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort l gv2)), (Permutation (r ++ r) (selsort l x))
(Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) []), (Permutation (r ++ l) r), (Permutation (r ++ l) l), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (gv2 :: r)), (Permutation (r ++ l) (gv2 :: l)), (Permutation (r ++ l) (x :: r))
(Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort l)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r gv2)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l gv2)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (l ++ r))
(Permutation (r ++ l) []), (Permutation (l ++ r) r), (Permutation (l ++ r) l), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (gv2 :: r)), (Permutation (l ++ r) (gv2 :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (selection_sort r))
(Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r gv2)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort l gv2)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ l) l), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (gv2 :: r)), (Permutation (l ++ l) (gv2 :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort r y))
(Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort l gv2)), (Permutation (l ++ l) (selsort l x)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) []), (Permutation [] r), (Permutation [] l)
(Permutation [] (y :: l)), (Permutation [] (gv2 :: r)), (Permutation [] (gv2 :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort l)), (Permutation [] (selsort r y)), (Permutation [] (selsort r gv2)), (Permutation [] (selsort r x))
(Permutation [] (selsort l gv2)), (Permutation [] (selsort l x)), (Permutation [] (r ++ r)), (Permutation [] (r ++ l)), (Permutation [] (l ++ r)), (Permutation [] (l ++ l)), (In y (y :: r)), (In y (y :: l)), (In y (gv2 :: r)), (In y (gv2 :: l))
(In y (x :: l)), (In y (selection_sort r)), (In y (selection_sort l)), (In y (selsort r y)), (In y (selsort r gv2)), (In y (selsort r x)), (In y (selsort l y)), (In y (selsort l gv2)), (In y (selsort l x)), (In y (r ++ r))
(In y (l ++ r)), (In y (l ++ l)), (In gv2 (y :: r)), (In gv2 (y :: l)), (In gv2 (gv2 :: r)), (In gv2 (gv2 :: l)), (In gv2 (x :: r)), (In gv2 (x :: l)), (In gv2 (selection_sort r)), (In gv2 (selection_sort l))
(In gv2 (selsort r gv2)), (In gv2 (selsort r x)), (In gv2 (selsort l y)), (In gv2 (selsort l gv2)), (In gv2 (selsort l x)), (In gv2 (r ++ r)), (In gv2 (r ++ l)), (In gv2 (l ++ r)), (In gv2 (l ++ l)), (In x (y :: r))
(In x (gv2 :: r)), (In x (gv2 :: l)), (In x (x :: r)), (In x (x :: l)), (In x (selection_sort r)), (In x (selection_sort l)), (In x (selsort r y)), (In x (selsort r gv2)), (In x (selsort r x)), (In x (selsort l y))
(In x (selsort l x)), (In x (r ++ r)), (In x (r ++ l)), (In x (l ++ r)), (In x (l ++ l)), (In (length r) r), (In (length r) l), (In (length r) (y :: r)), (In (length r) (y :: l)), (In (length r) (gv2 :: r))
(In (length r) (x :: r)), (In (length r) (x :: l)), (In (length r) (selection_sort r)), (In (length r) (selection_sort l)), (In (length r) (selsort r y)), (In (length r) (selsort r gv2)), (In (length r) (selsort r x)), (In (length r) (selsort l y)), (In (length r) (selsort l gv2)), (In (length r) (selsort l x))
(In (length r) (r ++ l)), (In (length r) (l ++ r)), (In (length r) (l ++ l)), (In (length l) r), (In (length l) l), (In (length l) (y :: r)), (In (length l) (y :: l)), (In (length l) (gv2 :: r)), (In (length l) (gv2 :: l)), (In (length l) (x :: r))
(In (length l) (selection_sort r)), (In (length l) (selection_sort l)), (In (length l) (selsort r y)), (In (length l) (selsort r gv2)), (In (length l) (selsort r x)), (In (length l) (selsort l y)), (In (length l) (selsort l gv2)), (In (length l) (selsort l x)), (In (length l) (r ++ r)), (In (length l) (r ++ l))
(In (length l) (l ++ l)), (y < length r), (y < length l), (gv2 < length r), (gv2 < length l), (x < length r), (x < length l), (length r < y), (length r < gv2), (length r < x)
(length l < y), (length l < gv2), (length l < x), (length l < length r), (y <= length r), (y <= length l), (gv2 <= length r), (gv2 <= length l), (x <= length r), (x <= length l)
(length r <= gv2), (length r <= x), (length r <= length l), (length l <= y), (length l <= gv2), (length l <= x), (length l <= length r), (~ y <=* r), (~ y <=* l), (~ gv2 <=* r)
(~ x <=* r), (~ x <=* l), (~ sorted r), (~ sorted l), (~ Permutation r r), (~ Permutation r l), (~ Permutation l r), (~ Permutation l l), (~ In y r), (~ In y l)
(~ In gv2 l), (~ In x r), (~ In x l), (~ y < y), (~ y < gv2), (~ y < x), (~ gv2 < y), (~ gv2 < gv2), (~ gv2 < x), (~ x < y)
(~ x < x), (~ y <= y), (~ y <= gv2), (~ y <= x), (~ gv2 <= y), (~ gv2 <= gv2), (~ gv2 <= x), (~ x <= y), (~ x <= gv2), (~ x <= x)
(r <> l), (l <> r), (l <> l), (y <> y), (y <> gv2), (y <> x), (gv2 <> y), (gv2 <> gv2), (gv2 <> x), (x <> y)
(x <> x), (None = Some r), (None = Some l), (y :: r = r), (y :: r = l), (y :: r = selection_sort r), (y :: r = selection_sort l), (y :: r = selsort r y), (y :: r = selsort r gv2), (y :: r = selsort r x)
(y :: r = selsort l gv2), (y :: r = selsort l x), (y :: r = r ++ r), (y :: r = r ++ l), (y :: r = l ++ r), (y :: r = l ++ l), (y :: r = []), (y :: l = r), (y :: l = l), (y :: l = selection_sort r)
(y :: l = selsort r y), (y :: l = selsort r gv2), (y :: l = selsort r x), (y :: l = selsort l y), (y :: l = selsort l gv2), (y :: l = selsort l x), (y :: l = r ++ r), (y :: l = r ++ l), (y :: l = l ++ r), (y :: l = l ++ l)
(gv2 :: r = r), (gv2 :: r = l), (gv2 :: r = selection_sort r), (gv2 :: r = selection_sort l), (gv2 :: r = selsort r y), (gv2 :: r = selsort r gv2), (gv2 :: r = selsort r x), (gv2 :: r = selsort l y), (gv2 :: r = selsort l gv2), (gv2 :: r = selsort l x)
(gv2 :: r = r ++ l), (gv2 :: r = l ++ r), (gv2 :: r = l ++ l), (gv2 :: r = []), (gv2 :: l = r), (gv2 :: l = l), (gv2 :: l = selection_sort r), (gv2 :: l = selection_sort l), (gv2 :: l = selsort r y), (gv2 :: l = selsort r gv2)
(gv2 :: l = selsort l y), (gv2 :: l = selsort l gv2), (gv2 :: l = selsort l x), (gv2 :: l = r ++ r), (gv2 :: l = r ++ l), (gv2 :: l = l ++ r), (gv2 :: l = l ++ l), (gv2 :: l = []), (x :: r = r), (x :: r = l)
(x :: r = selection_sort l), (x :: r = selsort r y), (x :: r = selsort r gv2), (x :: r = selsort r x), (x :: r = selsort l y), (x :: r = selsort l gv2), (x :: r = selsort l x), (x :: r = r ++ r), (x :: r = r ++ l), (x :: r = l ++ r)
(x :: r = []), (x :: l = r), (x :: l = l), (x :: l = selection_sort r), (x :: l = selection_sort l), (x :: l = selsort r y), (x :: l = selsort r gv2), (x :: l = selsort r x), (x :: l = selsort l y), (x :: l = selsort l gv2)
(x :: l = r ++ r), (x :: l = r ++ l), (x :: l = l ++ r), (x :: l = l ++ l), (x :: l = []), (selection_sort r = r), (selection_sort r = l), (selection_sort r = r ++ r), (selection_sort r = r ++ l), (selection_sort r = l ++ r)
(selection_sort l = r), (selection_sort l = l), (selection_sort l = r ++ r), (selection_sort l = r ++ l), (selection_sort l = l ++ r), (selection_sort l = l ++ l), (selsort r y = r), (selsort r y = l), (selsort r y = selection_sort r), (selsort r y = selection_sort l)
(selsort r y = r ++ l), (selsort r y = l ++ r), (selsort r y = l ++ l), (selsort r gv2 = r), (selsort r gv2 = l), (selsort r gv2 = selection_sort r), (selsort r gv2 = selection_sort l), (selsort r gv2 = r ++ r), (selsort r gv2 = r ++ l), (selsort r gv2 = l ++ r)
(selsort r x = r), (selsort r x = l), (selsort r x = selection_sort r), (selsort r x = selection_sort l), (selsort r x = r ++ r), (selsort r x = r ++ l), (selsort r x = l ++ r), (selsort r x = l ++ l), (selsort l y = r), (selsort l y = l)
(selsort l y = selection_sort l), (selsort l y = r ++ r), (selsort l y = r ++ l), (selsort l y = l ++ r), (selsort l y = l ++ l), (selsort l gv2 = r), (selsort l gv2 = l), (selsort l gv2 = selection_sort r), (selsort l gv2 = selection_sort l), (selsort l gv2 = r ++ r)
(selsort l gv2 = l ++ r), (selsort l gv2 = l ++ l), (selsort l x = r), (selsort l x = l), (selsort l x = selection_sort r), (selsort l x = selection_sort l), (selsort l x = r ++ r), (selsort l x = r ++ l), (selsort l x = l ++ r), (selsort l x = l ++ l)
(r ++ r = l), (r ++ l = r), (r ++ l = l), (l ++ r = r), (l ++ r = l), (l ++ l = r), (l ++ l = l), ([] = r), ([] = l), ([] = selection_sort r)
([] = selsort r y), ([] = selsort r gv2), ([] = selsort r x), ([] = selsort l y), ([] = selsort l gv2), ([] = selsort l x), ([] = r ++ r), ([] = r ++ l), ([] = l ++ r), ([] = l ++ l)
(None = Some gv2), (None = Some x), ((y, r) = select y r), ((y, r) = select y l), ((y, r) = select gv2 r), ((y, r) = select gv2 l), ((y, r) = select x r), ((y, r) = select x l), ((y, l) = select y r), ((y, l) = select y l)
((y, l) = select gv2 l), ((y, l) = select x r), ((y, l) = select x l), ((gv2, r) = select y r), ((gv2, r) = select y l), ((gv2, r) = select gv2 r), ((gv2, r) = select gv2 l), ((gv2, r) = select x r), ((gv2, r) = select x l), ((gv2, l) = select y r)
((gv2, l) = select gv2 r), ((gv2, l) = select gv2 l), ((gv2, l) = select x r), ((gv2, l) = select x l), ((x, r) = select y r), ((x, r) = select y l), ((x, r) = select gv2 r), ((x, r) = select gv2 l), ((x, r) = select x r), ((x, r) = select x l)
((x, l) = select y l), ((x, l) = select gv2 r), ((x, l) = select gv2 l), ((x, l) = select x r), ((x, l) = select x l), (length r = y), (length r = gv2), (length r = x), (length l = y), (length l = gv2)

Label: 0 (1)
(y <=* r), (y <=* l), (gv2 <=* r), (gv2 <=* l), (x <=* r), (x <=* l), (sorted r), (sorted l), (Permutation r r), (Permutation r l)
(Permutation l l), (In y r), (In y l), (In gv2 r), (In gv2 l), (In x r), (In x l), (y < y), (y < gv2), (y < x)
(gv2 < gv2), (gv2 < x), (x < y), (x < gv2), (x < x), (y <= y), (y <= gv2), (y <= x), (gv2 <= y), (gv2 <= gv2)
(x <= y), (x <= gv2), (x <= x), (r = r), (r = l), (l = r), (l = l), (y = y), (y = gv2), (y = x)
(gv2 = gv2), (gv2 = x), (x = y), (x = gv2), (x = x), (false = sorted_bool r), (false = sorted_bool l), (true = sorted_bool r), (true = sorted_bool l), (y <=* y :: r)
(y <=* gv2 :: r), (y <=* gv2 :: l), (y <=* x :: r), (y <=* x :: l), (y <=* selection_sort r), (y <=* selection_sort l), (y <=* selsort r y), (y <=* selsort r gv2), (y <=* selsort r x), (y <=* selsort l y)
(y <=* selsort l x), (y <=* r ++ r), (y <=* r ++ l), (y <=* l ++ r), (y <=* l ++ l), (y <=* []), (gv2 <=* y :: r), (gv2 <=* y :: l), (gv2 <=* gv2 :: r), (gv2 <=* gv2 :: l)
(gv2 <=* x :: l), (gv2 <=* selection_sort r), (gv2 <=* selection_sort l), (gv2 <=* selsort r y), (gv2 <=* selsort r gv2), (gv2 <=* selsort r x), (gv2 <=* selsort l y), (gv2 <=* selsort l gv2), (gv2 <=* selsort l x), (gv2 <=* r ++ r)
(gv2 <=* l ++ r), (gv2 <=* l ++ l), (gv2 <=* []), (x <=* y :: r), (x <=* y :: l), (x <=* gv2 :: r), (x <=* gv2 :: l), (x <=* x :: r), (x <=* x :: l), (x <=* selection_sort r)
(x <=* selsort r y), (x <=* selsort r gv2), (x <=* selsort r x), (x <=* selsort l y), (x <=* selsort l gv2), (x <=* selsort l x), (x <=* r ++ r), (x <=* r ++ l), (x <=* l ++ r), (x <=* l ++ l)
(length r <=* r), (length r <=* l), (length r <=* y :: r), (length r <=* y :: l), (length r <=* gv2 :: r), (length r <=* gv2 :: l), (length r <=* x :: r), (length r <=* x :: l), (length r <=* selection_sort r), (length r <=* selection_sort l)
(length r <=* selsort r gv2), (length r <=* selsort r x), (length r <=* selsort l y), (length r <=* selsort l gv2), (length r <=* selsort l x), (length r <=* r ++ r), (length r <=* r ++ l), (length r <=* l ++ r), (length r <=* l ++ l), (length r <=* [])
(length l <=* l), (length l <=* y :: r), (length l <=* y :: l), (length l <=* gv2 :: r), (length l <=* gv2 :: l), (length l <=* x :: r), (length l <=* x :: l), (length l <=* selection_sort r), (length l <=* selection_sort l), (length l <=* selsort r y)
(length l <=* selsort r x), (length l <=* selsort l y), (length l <=* selsort l gv2), (length l <=* selsort l x), (length l <=* r ++ r), (length l <=* r ++ l), (length l <=* l ++ r), (length l <=* l ++ l), (length l <=* []), (sorted (y :: r))
(sorted (gv2 :: r)), (sorted (gv2 :: l)), (sorted (x :: r)), (sorted (x :: l)), (sorted (selection_sort r)), (sorted (selection_sort l)), (sorted (selsort r y)), (sorted (selsort r gv2)), (sorted (selsort r x)), (sorted (selsort l y))
(sorted (selsort l x)), (sorted (r ++ r)), (sorted (r ++ l)), (sorted (l ++ r)), (sorted (l ++ l)), (sorted []), (Permutation r (y :: r)), (Permutation r (y :: l)), (Permutation r (gv2 :: r)), (Permutation r (gv2 :: l))
(Permutation r (x :: l)), (Permutation r (selection_sort r)), (Permutation r (selection_sort l)), (Permutation r (selsort r y)), (Permutation r (selsort r gv2)), (Permutation r (selsort r x)), (Permutation r (selsort l y)), (Permutation r (selsort l gv2)), (Permutation r (selsort l x)), (Permutation r (r ++ r))
(Permutation r (l ++ r)), (Permutation r (l ++ l)), (Permutation r []), (Permutation l (y :: r)), (Permutation l (y :: l)), (Permutation l (gv2 :: r)), (Permutation l (gv2 :: l)), (Permutation l (x :: r)), (Permutation l (x :: l)), (Permutation l (selection_sort r))
(Permutation l (selsort r y)), (Permutation l (selsort r gv2)), (Permutation l (selsort r x)), (Permutation l (selsort l y)), (Permutation l (selsort l gv2)), (Permutation l (selsort l x)), (Permutation l (r ++ r)), (Permutation l (r ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ l))
(Permutation (y :: r) r), (Permutation (y :: r) l), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (gv2 :: r)), (Permutation (y :: r) (gv2 :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selsort r y))
(Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l gv2)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) []), (Permutation (y :: l) r)
(Permutation (y :: l) (y :: r)), (Permutation (y :: l) (gv2 :: r)), (Permutation (y :: l) (gv2 :: l)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort r y)), (Permutation (y :: l) (selsort r gv2)), (Permutation (y :: l) (selsort r x))
(Permutation (y :: l) (selsort l gv2)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (l ++ r)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (gv2 :: r) r), (Permutation (gv2 :: r) l), (Permutation (gv2 :: r) (y :: r))
(Permutation (gv2 :: r) (gv2 :: l)), (Permutation (gv2 :: r) (x :: r)), (Permutation (gv2 :: r) (x :: l)), (Permutation (gv2 :: r) (selection_sort r)), (Permutation (gv2 :: r) (selection_sort l)), (Permutation (gv2 :: r) (selsort r y)), (Permutation (gv2 :: r) (selsort r gv2)), (Permutation (gv2 :: r) (selsort r x)), (Permutation (gv2 :: r) (selsort l y)), (Permutation (gv2 :: r) (selsort l gv2))
(Permutation (gv2 :: r) (r ++ r)), (Permutation (gv2 :: r) (r ++ l)), (Permutation (gv2 :: r) (l ++ r)), (Permutation (gv2 :: r) (l ++ l)), (Permutation (gv2 :: r) []), (Permutation (gv2 :: l) r), (Permutation (gv2 :: l) l), (Permutation (gv2 :: l) (y :: r)), (Permutation (gv2 :: l) (y :: l)), (Permutation (gv2 :: l) (gv2 :: r))
(Permutation (gv2 :: l) (x :: l)), (Permutation (gv2 :: l) (selection_sort r)), (Permutation (gv2 :: l) (selection_sort l)), (Permutation (gv2 :: l) (selsort r y)), (Permutation (gv2 :: l) (selsort r gv2)), (Permutation (gv2 :: l) (selsort r x)), (Permutation (gv2 :: l) (selsort l y)), (Permutation (gv2 :: l) (selsort l gv2)), (Permutation (gv2 :: l) (selsort l x)), (Permutation (gv2 :: l) (r ++ r))
(Permutation (gv2 :: l) (l ++ r)), (Permutation (gv2 :: l) (l ++ l)), (Permutation (gv2 :: l) []), (Permutation (x :: r) r), (Permutation (x :: r) l), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (gv2 :: r)), (Permutation (x :: r) (gv2 :: l)), (Permutation (x :: r) (x :: l))
(Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r gv2)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l gv2)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (l ++ r))
(Permutation (x :: r) []), (Permutation (x :: l) r), (Permutation (x :: l) l), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (gv2 :: r)), (Permutation (x :: l) (gv2 :: l)), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selection_sort l))
(Permutation (x :: l) (selsort r gv2)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort l gv2)), (Permutation (x :: l) (selsort l x)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) [])
(Permutation (selection_sort r) l), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (gv2 :: r)), (Permutation (selection_sort r) (gv2 :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort r gv2))
(Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l gv2)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) []), (Permutation (selection_sort l) r), (Permutation (selection_sort l) l)
(Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (gv2 :: r)), (Permutation (selection_sort l) (gv2 :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r gv2)), (Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort r y) r), (Permutation (selsort r y) l), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: l))
(Permutation (selsort r y) (gv2 :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selsort r gv2)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort l gv2)), (Permutation (selsort r y) (selsort l x))
(Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) []), (Permutation (selsort r gv2) r), (Permutation (selsort r gv2) l), (Permutation (selsort r gv2) (y :: r)), (Permutation (selsort r gv2) (y :: l)), (Permutation (selsort r gv2) (gv2 :: r)), (Permutation (selsort r gv2) (gv2 :: l))
(Permutation (selsort r gv2) (x :: l)), (Permutation (selsort r gv2) (selection_sort r)), (Permutation (selsort r gv2) (selection_sort l)), (Permutation (selsort r gv2) (selsort r y)), (Permutation (selsort r gv2) (selsort r x)), (Permutation (selsort r gv2) (selsort l y)), (Permutation (selsort r gv2) (selsort l gv2)), (Permutation (selsort r gv2) (selsort l x)), (Permutation (selsort r gv2) (r ++ r)), (Permutation (selsort r gv2) (r ++ l))
(Permutation (selsort r gv2) (l ++ l)), (Permutation (selsort r gv2) []), (Permutation (selsort r x) r), (Permutation (selsort r x) l), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (gv2 :: r)), (Permutation (selsort r x) (gv2 :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: l))
(Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort r gv2)), (Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort l gv2)), (Permutation (selsort r x) (selsort l x)), (Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ l))
(Permutation (selsort l y) r), (Permutation (selsort l y) l), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (gv2 :: r)), (Permutation (selsort l y) (gv2 :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selsort r gv2)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort l gv2)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (l ++ r)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (selsort l gv2) r)
(Permutation (selsort l gv2) (y :: r)), (Permutation (selsort l gv2) (y :: l)), (Permutation (selsort l gv2) (gv2 :: r)), (Permutation (selsort l gv2) (gv2 :: l)), (Permutation (selsort l gv2) (x :: r)), (Permutation (selsort l gv2) (x :: l)), (Permutation (selsort l gv2) (selection_sort r)), (Permutation (selsort l gv2) (selection_sort l)), (Permutation (selsort l gv2) (selsort r y)), (Permutation (selsort l gv2) (selsort r gv2))
(Permutation (selsort l gv2) (selsort l y)), (Permutation (selsort l gv2) (selsort l x)), (Permutation (selsort l gv2) (r ++ r)), (Permutation (selsort l gv2) (r ++ l)), (Permutation (selsort l gv2) (l ++ r)), (Permutation (selsort l gv2) (l ++ l)), (Permutation (selsort l gv2) []), (Permutation (selsort l x) r), (Permutation (selsort l x) l), (Permutation (selsort l x) (y :: r))
(Permutation (selsort l x) (gv2 :: r)), (Permutation (selsort l x) (gv2 :: l)), (Permutation (selsort l x) (x :: r)), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r gv2)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort l y))
(Permutation (selsort l x) (r ++ r)), (Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) []), (Permutation (r ++ r) r), (Permutation (r ++ r) l), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (gv2 :: r))
(Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selsort r y)), (Permutation (r ++ r) (selsort r gv2)), (Permutation (r ++ r) (selsort r x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort l gv2)), (Permutation (r ++ r) (selsort l x))
(Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) []), (Permutation (r ++ l) r), (Permutation (r ++ l) l), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (gv2 :: r)), (Permutation (r ++ l) (gv2 :: l)), (Permutation (r ++ l) (x :: r))
(Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort l)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r gv2)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l gv2)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (l ++ r))
(Permutation (r ++ l) []), (Permutation (l ++ r) r), (Permutation (l ++ r) l), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (gv2 :: r)), (Permutation (l ++ r) (gv2 :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (selection_sort r))
(Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r gv2)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort l gv2)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ l) l), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (gv2 :: r)), (Permutation (l ++ l) (gv2 :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort r y))
(Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort l gv2)), (Permutation (l ++ l) (selsort l x)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) []), (Permutation [] r), (Permutation [] l)
(Permutation [] (y :: l)), (Permutation [] (gv2 :: r)), (Permutation [] (gv2 :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort l)), (Permutation [] (selsort r y)), (Permutation [] (selsort r gv2)), (Permutation [] (selsort r x))
(Permutation [] (selsort l gv2)), (Permutation [] (selsort l x)), (Permutation [] (r ++ r)), (Permutation [] (r ++ l)), (Permutation [] (l ++ r)), (Permutation [] (l ++ l)), (In y (y :: r)), (In y (y :: l)), (In y (gv2 :: r)), (In y (gv2 :: l))
(In y (x :: l)), (In y (selection_sort r)), (In y (selection_sort l)), (In y (selsort r y)), (In y (selsort r gv2)), (In y (selsort r x)), (In y (selsort l y)), (In y (selsort l gv2)), (In y (selsort l x)), (In y (r ++ r))
(In y (l ++ r)), (In y (l ++ l)), (In gv2 (y :: r)), (In gv2 (y :: l)), (In gv2 (gv2 :: r)), (In gv2 (gv2 :: l)), (In gv2 (x :: r)), (In gv2 (x :: l)), (In gv2 (selection_sort r)), (In gv2 (selection_sort l))
(In gv2 (selsort r gv2)), (In gv2 (selsort r x)), (In gv2 (selsort l y)), (In gv2 (selsort l gv2)), (In gv2 (selsort l x)), (In gv2 (r ++ r)), (In gv2 (r ++ l)), (In gv2 (l ++ r)), (In gv2 (l ++ l)), (In x (y :: r))
(In x (gv2 :: r)), (In x (gv2 :: l)), (In x (x :: r)), (In x (x :: l)), (In x (selection_sort r)), (In x (selection_sort l)), (In x (selsort r y)), (In x (selsort r gv2)), (In x (selsort r x)), (In x (selsort l y))
(In x (selsort l x)), (In x (r ++ r)), (In x (r ++ l)), (In x (l ++ r)), (In x (l ++ l)), (In (length r) r), (In (length r) l), (In (length r) (y :: r)), (In (length r) (y :: l)), (In (length r) (gv2 :: r))
(In (length r) (x :: r)), (In (length r) (x :: l)), (In (length r) (selection_sort r)), (In (length r) (selection_sort l)), (In (length r) (selsort r y)), (In (length r) (selsort r gv2)), (In (length r) (selsort r x)), (In (length r) (selsort l y)), (In (length r) (selsort l gv2)), (In (length r) (selsort l x))
(In (length r) (r ++ l)), (In (length r) (l ++ r)), (In (length r) (l ++ l)), (In (length l) r), (In (length l) l), (In (length l) (y :: r)), (In (length l) (y :: l)), (In (length l) (gv2 :: r)), (In (length l) (gv2 :: l)), (In (length l) (x :: r))
(In (length l) (selection_sort r)), (In (length l) (selection_sort l)), (In (length l) (selsort r y)), (In (length l) (selsort r gv2)), (In (length l) (selsort r x)), (In (length l) (selsort l y)), (In (length l) (selsort l gv2)), (In (length l) (selsort l x)), (In (length l) (r ++ r)), (In (length l) (r ++ l))
(In (length l) (l ++ l)), (y < length r), (y < length l), (gv2 < length r), (gv2 < length l), (x < length r), (x < length l), (length r < y), (length r < gv2), (length r < x)
(length l < y), (length l < gv2), (length l < x), (length l < length r), (y <= length r), (y <= length l), (gv2 <= length r), (gv2 <= length l), (x <= length r), (x <= length l)
(length r <= gv2), (length r <= x), (length r <= length l), (length l <= y), (length l <= gv2), (length l <= x), (length l <= length r), (~ y <=* r), (~ y <=* l), (~ gv2 <=* r)
(~ x <=* r), (~ x <=* l), (~ sorted r), (~ sorted l), (~ Permutation r r), (~ Permutation r l), (~ Permutation l r), (~ Permutation l l), (~ In y r), (~ In y l)
(~ In gv2 l), (~ In x r), (~ In x l), (~ y < y), (~ y < gv2), (~ y < x), (~ gv2 < y), (~ gv2 < gv2), (~ gv2 < x), (~ x < y)
(~ x < x), (~ y <= y), (~ y <= gv2), (~ y <= x), (~ gv2 <= y), (~ gv2 <= gv2), (~ gv2 <= x), (~ x <= y), (~ x <= gv2), (~ x <= x)
(r <> l), (l <> r), (l <> l), (y <> y), (y <> gv2), (y <> x), (gv2 <> y), (gv2 <> gv2), (gv2 <> x), (x <> y)
(x <> x), (None = Some r), (None = Some l), (y :: r = r), (y :: r = l), (y :: r = selection_sort r), (y :: r = selection_sort l), (y :: r = selsort r y), (y :: r = selsort r gv2), (y :: r = selsort r x)
(y :: r = selsort l gv2), (y :: r = selsort l x), (y :: r = r ++ r), (y :: r = r ++ l), (y :: r = l ++ r), (y :: r = l ++ l), (y :: r = []), (y :: l = r), (y :: l = l), (y :: l = selection_sort r)
(y :: l = selsort r y), (y :: l = selsort r gv2), (y :: l = selsort r x), (y :: l = selsort l y), (y :: l = selsort l gv2), (y :: l = selsort l x), (y :: l = r ++ r), (y :: l = r ++ l), (y :: l = l ++ r), (y :: l = l ++ l)
(gv2 :: r = r), (gv2 :: r = l), (gv2 :: r = selection_sort r), (gv2 :: r = selection_sort l), (gv2 :: r = selsort r y), (gv2 :: r = selsort r gv2), (gv2 :: r = selsort r x), (gv2 :: r = selsort l y), (gv2 :: r = selsort l gv2), (gv2 :: r = selsort l x)
(gv2 :: r = r ++ l), (gv2 :: r = l ++ r), (gv2 :: r = l ++ l), (gv2 :: r = []), (gv2 :: l = r), (gv2 :: l = l), (gv2 :: l = selection_sort r), (gv2 :: l = selection_sort l), (gv2 :: l = selsort r y), (gv2 :: l = selsort r gv2)
(gv2 :: l = selsort l y), (gv2 :: l = selsort l gv2), (gv2 :: l = selsort l x), (gv2 :: l = r ++ r), (gv2 :: l = r ++ l), (gv2 :: l = l ++ r), (gv2 :: l = l ++ l), (gv2 :: l = []), (x :: r = r), (x :: r = l)
(x :: r = selection_sort l), (x :: r = selsort r y), (x :: r = selsort r gv2), (x :: r = selsort r x), (x :: r = selsort l y), (x :: r = selsort l gv2), (x :: r = selsort l x), (x :: r = r ++ r), (x :: r = r ++ l), (x :: r = l ++ r)
(x :: r = []), (x :: l = r), (x :: l = l), (x :: l = selection_sort r), (x :: l = selection_sort l), (x :: l = selsort r y), (x :: l = selsort r gv2), (x :: l = selsort r x), (x :: l = selsort l y), (x :: l = selsort l gv2)
(x :: l = r ++ r), (x :: l = r ++ l), (x :: l = l ++ r), (x :: l = l ++ l), (x :: l = []), (selection_sort r = r), (selection_sort r = l), (selection_sort r = r ++ r), (selection_sort r = r ++ l), (selection_sort r = l ++ r)
(selection_sort l = r), (selection_sort l = l), (selection_sort l = r ++ r), (selection_sort l = r ++ l), (selection_sort l = l ++ r), (selection_sort l = l ++ l), (selsort r y = r), (selsort r y = l), (selsort r y = selection_sort r), (selsort r y = selection_sort l)
(selsort r y = r ++ l), (selsort r y = l ++ r), (selsort r y = l ++ l), (selsort r gv2 = r), (selsort r gv2 = l), (selsort r gv2 = selection_sort r), (selsort r gv2 = selection_sort l), (selsort r gv2 = r ++ r), (selsort r gv2 = r ++ l), (selsort r gv2 = l ++ r)
(selsort r x = r), (selsort r x = l), (selsort r x = selection_sort r), (selsort r x = selection_sort l), (selsort r x = r ++ r), (selsort r x = r ++ l), (selsort r x = l ++ r), (selsort r x = l ++ l), (selsort l y = r), (selsort l y = l)
(selsort l y = selection_sort l), (selsort l y = r ++ r), (selsort l y = r ++ l), (selsort l y = l ++ r), (selsort l y = l ++ l), (selsort l gv2 = r), (selsort l gv2 = l), (selsort l gv2 = selection_sort r), (selsort l gv2 = selection_sort l), (selsort l gv2 = r ++ r)
(selsort l gv2 = l ++ r), (selsort l gv2 = l ++ l), (selsort l x = r), (selsort l x = l), (selsort l x = selection_sort r), (selsort l x = selection_sort l), (selsort l x = r ++ r), (selsort l x = r ++ l), (selsort l x = l ++ r), (selsort l x = l ++ l)
(r ++ r = l), (r ++ l = r), (r ++ l = l), (l ++ r = r), (l ++ r = l), (l ++ l = r), (l ++ l = l), ([] = r), ([] = l), ([] = selection_sort r)
([] = selsort r y), ([] = selsort r gv2), ([] = selsort r x), ([] = selsort l y), ([] = selsort l gv2), ([] = selsort l x), ([] = r ++ r), ([] = r ++ l), ([] = l ++ r), ([] = l ++ l)
(None = Some gv2), (None = Some x), ((y, r) = select y r), ((y, r) = select y l), ((y, r) = select gv2 r), ((y, r) = select gv2 l), ((y, r) = select x r), ((y, r) = select x l), ((y, l) = select y r), ((y, l) = select y l)
((y, l) = select gv2 l), ((y, l) = select x r), ((y, l) = select x l), ((gv2, r) = select y r), ((gv2, r) = select y l), ((gv2, r) = select gv2 r), ((gv2, r) = select gv2 l), ((gv2, r) = select x r), ((gv2, r) = select x l), ((gv2, l) = select y r)
((gv2, l) = select gv2 r), ((gv2, l) = select gv2 l), ((gv2, l) = select x r), ((gv2, l) = select x l), ((x, r) = select y r), ((x, r) = select y l), ((x, r) = select gv2 r), ((x, r) = select gv2 l), ((x, r) = select x r), ((x, r) = select x l)
((x, l) = select y l), ((x, l) = select gv2 r), ((x, l) = select gv2 l), ((x, l) = select x r), ((x, l) = select x l), (length r = y), (length r = gv2), (length r = x), (length l = y), (length l = gv2)

Label: 1 (2)
(y <=* r), (y <=* gv3), (y <=* l), (x <=* r), (x <=* gv3), (x <=* l), (sorted r), (sorted gv3), (sorted l), (Permutation r r)
(Permutation r l), (Permutation gv3 r), (Permutation gv3 gv3), (Permutation gv3 l), (Permutation l r), (Permutation l gv3), (Permutation l l), (In y r), (In y gv3), (In y l)
(In x gv3), (In x l), (y < y), (y < x), (x < y), (x < x), (y <= y), (y <= x), (x <= y), (x <= x)
(r = gv3), (r = l), (gv3 = r), (gv3 = gv3), (gv3 = l), (l = r), (l = gv3), (l = l), (y = y), (y = x)
(x = x), (false = sorted_bool r), (false = sorted_bool gv3), (false = sorted_bool l), (true = sorted_bool r), (true = sorted_bool gv3), (true = sorted_bool l), (y <=* y :: r), (y <=* y :: gv3), (y <=* y :: l)
(y <=* x :: gv3), (y <=* x :: l), (y <=* selection_sort r), (y <=* selection_sort gv3), (y <=* selection_sort l), (y <=* selsort r y), (y <=* selsort r x), (y <=* selsort gv3 y), (y <=* selsort gv3 x), (y <=* selsort l y)
(y <=* r ++ r), (y <=* r ++ gv3), (y <=* r ++ l), (y <=* gv3 ++ r), (y <=* gv3 ++ gv3), (y <=* gv3 ++ l), (y <=* l ++ r), (y <=* l ++ gv3), (y <=* l ++ l), (y <=* [])
(x <=* y :: gv3), (x <=* y :: l), (x <=* x :: r), (x <=* x :: gv3), (x <=* x :: l), (x <=* selection_sort r), (x <=* selection_sort gv3), (x <=* selection_sort l), (x <=* selsort r y), (x <=* selsort r x)
(x <=* selsort gv3 x), (x <=* selsort l y), (x <=* selsort l x), (x <=* r ++ r), (x <=* r ++ gv3), (x <=* r ++ l), (x <=* gv3 ++ r), (x <=* gv3 ++ gv3), (x <=* gv3 ++ l), (x <=* l ++ r)
(x <=* l ++ l), (x <=* []), (length r <=* r), (length r <=* gv3), (length r <=* l), (length r <=* y :: r), (length r <=* y :: gv3), (length r <=* y :: l), (length r <=* x :: r), (length r <=* x :: gv3)
(length r <=* selection_sort r), (length r <=* selection_sort gv3), (length r <=* selection_sort l), (length r <=* selsort r y), (length r <=* selsort r x), (length r <=* selsort gv3 y), (length r <=* selsort gv3 x), (length r <=* selsort l y), (length r <=* selsort l x), (length r <=* r ++ r)
(length r <=* r ++ l), (length r <=* gv3 ++ r), (length r <=* gv3 ++ gv3), (length r <=* gv3 ++ l), (length r <=* l ++ r), (length r <=* l ++ gv3), (length r <=* l ++ l), (length r <=* []), (length gv3 <=* r), (length gv3 <=* gv3)
(length gv3 <=* y :: r), (length gv3 <=* y :: gv3), (length gv3 <=* y :: l), (length gv3 <=* x :: r), (length gv3 <=* x :: gv3), (length gv3 <=* x :: l), (length gv3 <=* selection_sort r), (length gv3 <=* selection_sort gv3), (length gv3 <=* selection_sort l), (length gv3 <=* selsort r y)
(length gv3 <=* selsort gv3 y), (length gv3 <=* selsort gv3 x), (length gv3 <=* selsort l y), (length gv3 <=* selsort l x), (length gv3 <=* r ++ r), (length gv3 <=* r ++ gv3), (length gv3 <=* r ++ l), (length gv3 <=* gv3 ++ r), (length gv3 <=* gv3 ++ gv3), (length gv3 <=* gv3 ++ l)
(length gv3 <=* l ++ gv3), (length gv3 <=* l ++ l), (length gv3 <=* []), (length l <=* r), (length l <=* gv3), (length l <=* l), (length l <=* y :: r), (length l <=* y :: gv3), (length l <=* y :: l), (length l <=* x :: r)
(length l <=* x :: l), (length l <=* selection_sort r), (length l <=* selection_sort gv3), (length l <=* selection_sort l), (length l <=* selsort r y), (length l <=* selsort r x), (length l <=* selsort gv3 y), (length l <=* selsort gv3 x), (length l <=* selsort l y), (length l <=* selsort l x)
(length l <=* r ++ gv3), (length l <=* r ++ l), (length l <=* gv3 ++ r), (length l <=* gv3 ++ gv3), (length l <=* gv3 ++ l), (length l <=* l ++ r), (length l <=* l ++ gv3), (length l <=* l ++ l), (length l <=* []), (sorted (y :: r))
(sorted (y :: l)), (sorted (x :: r)), (sorted (x :: gv3)), (sorted (x :: l)), (sorted (selection_sort r)), (sorted (selection_sort gv3)), (sorted (selection_sort l)), (sorted (selsort r y)), (sorted (selsort r x)), (sorted (selsort gv3 y))
(sorted (selsort l y)), (sorted (selsort l x)), (sorted (r ++ r)), (sorted (r ++ gv3)), (sorted (r ++ l)), (sorted (gv3 ++ r)), (sorted (gv3 ++ gv3)), (sorted (gv3 ++ l)), (sorted (l ++ r)), (sorted (l ++ gv3))
(sorted []), (Permutation r (y :: r)), (Permutation r (y :: gv3)), (Permutation r (y :: l)), (Permutation r (x :: r)), (Permutation r (x :: gv3)), (Permutation r (x :: l)), (Permutation r (selection_sort r)), (Permutation r (selection_sort gv3)), (Permutation r (selection_sort l))
(Permutation r (selsort r x)), (Permutation r (selsort gv3 y)), (Permutation r (selsort gv3 x)), (Permutation r (selsort l y)), (Permutation r (selsort l x)), (Permutation r (r ++ r)), (Permutation r (r ++ gv3)), (Permutation r (r ++ l)), (Permutation r (gv3 ++ r)), (Permutation r (gv3 ++ gv3))
(Permutation r (l ++ r)), (Permutation r (l ++ gv3)), (Permutation r (l ++ l)), (Permutation r []), (Permutation gv3 (y :: r)), (Permutation gv3 (y :: gv3)), (Permutation gv3 (y :: l)), (Permutation gv3 (x :: r)), (Permutation gv3 (x :: gv3)), (Permutation gv3 (x :: l))
(Permutation gv3 (selection_sort gv3)), (Permutation gv3 (selection_sort l)), (Permutation gv3 (selsort r y)), (Permutation gv3 (selsort r x)), (Permutation gv3 (selsort gv3 y)), (Permutation gv3 (selsort gv3 x)), (Permutation gv3 (selsort l y)), (Permutation gv3 (selsort l x)), (Permutation gv3 (r ++ r)), (Permutation gv3 (r ++ gv3))
(Permutation gv3 (gv3 ++ r)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ l)), (Permutation gv3 (l ++ r)), (Permutation gv3 (l ++ gv3)), (Permutation gv3 (l ++ l)), (Permutation gv3 []), (Permutation l (y :: r)), (Permutation l (y :: gv3)), (Permutation l (y :: l))
(Permutation l (x :: gv3)), (Permutation l (x :: l)), (Permutation l (selection_sort r)), (Permutation l (selection_sort gv3)), (Permutation l (selection_sort l)), (Permutation l (selsort r y)), (Permutation l (selsort r x)), (Permutation l (selsort gv3 y)), (Permutation l (selsort gv3 x)), (Permutation l (selsort l y))
(Permutation l (r ++ r)), (Permutation l (r ++ gv3)), (Permutation l (r ++ l)), (Permutation l (gv3 ++ r)), (Permutation l (gv3 ++ gv3)), (Permutation l (gv3 ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ gv3)), (Permutation l (l ++ l)), (Permutation l [])
(Permutation (y :: r) gv3), (Permutation (y :: r) l), (Permutation (y :: r) (y :: gv3)), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: gv3)), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort gv3)), (Permutation (y :: r) (selection_sort l))
(Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort gv3 y)), (Permutation (y :: r) (selsort gv3 x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ gv3)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (gv3 ++ r)), (Permutation (y :: r) (gv3 ++ gv3))
(Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ gv3)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) []), (Permutation (y :: gv3) r), (Permutation (y :: gv3) gv3), (Permutation (y :: gv3) l), (Permutation (y :: gv3) (y :: r)), (Permutation (y :: gv3) (y :: l)), (Permutation (y :: gv3) (x :: r))
(Permutation (y :: gv3) (x :: l)), (Permutation (y :: gv3) (selection_sort r)), (Permutation (y :: gv3) (selection_sort gv3)), (Permutation (y :: gv3) (selection_sort l)), (Permutation (y :: gv3) (selsort r y)), (Permutation (y :: gv3) (selsort r x)), (Permutation (y :: gv3) (selsort gv3 y)), (Permutation (y :: gv3) (selsort gv3 x)), (Permutation (y :: gv3) (selsort l y)), (Permutation (y :: gv3) (selsort l x))
(Permutation (y :: gv3) (r ++ gv3)), (Permutation (y :: gv3) (r ++ l)), (Permutation (y :: gv3) (gv3 ++ r)), (Permutation (y :: gv3) (gv3 ++ gv3)), (Permutation (y :: gv3) (gv3 ++ l)), (Permutation (y :: gv3) (l ++ r)), (Permutation (y :: gv3) (l ++ gv3)), (Permutation (y :: gv3) (l ++ l)), (Permutation (y :: gv3) []), (Permutation (y :: l) r)
(Permutation (y :: l) l), (Permutation (y :: l) (y :: r)), (Permutation (y :: l) (y :: gv3)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: gv3)), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort gv3)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort r y))
(Permutation (y :: l) (selsort gv3 y)), (Permutation (y :: l) (selsort gv3 x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ gv3)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (gv3 ++ r)), (Permutation (y :: l) (gv3 ++ gv3)), (Permutation (y :: l) (gv3 ++ l))
(Permutation (y :: l) (l ++ gv3)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (x :: r) r), (Permutation (x :: r) gv3), (Permutation (x :: r) l), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (y :: gv3)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (x :: gv3))
(Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selection_sort gv3)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort gv3 y)), (Permutation (x :: r) (selsort gv3 x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (r ++ r))
(Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (gv3 ++ r)), (Permutation (x :: r) (gv3 ++ gv3)), (Permutation (x :: r) (gv3 ++ l)), (Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (l ++ gv3)), (Permutation (x :: r) (l ++ l)), (Permutation (x :: r) []), (Permutation (x :: gv3) r), (Permutation (x :: gv3) gv3)
(Permutation (x :: gv3) (y :: r)), (Permutation (x :: gv3) (y :: gv3)), (Permutation (x :: gv3) (y :: l)), (Permutation (x :: gv3) (x :: r)), (Permutation (x :: gv3) (x :: l)), (Permutation (x :: gv3) (selection_sort r)), (Permutation (x :: gv3) (selection_sort gv3)), (Permutation (x :: gv3) (selection_sort l)), (Permutation (x :: gv3) (selsort r y)), (Permutation (x :: gv3) (selsort r x))
(Permutation (x :: gv3) (selsort gv3 x)), (Permutation (x :: gv3) (selsort l y)), (Permutation (x :: gv3) (selsort l x)), (Permutation (x :: gv3) (r ++ r)), (Permutation (x :: gv3) (r ++ gv3)), (Permutation (x :: gv3) (r ++ l)), (Permutation (x :: gv3) (gv3 ++ r)), (Permutation (x :: gv3) (gv3 ++ gv3)), (Permutation (x :: gv3) (gv3 ++ l)), (Permutation (x :: gv3) (l ++ r))
(Permutation (x :: gv3) (l ++ l)), (Permutation (x :: gv3) []), (Permutation (x :: l) r), (Permutation (x :: l) gv3), (Permutation (x :: l) l), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: gv3)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (x :: gv3))
(Permutation (x :: l) (selection_sort gv3)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort gv3 y)), (Permutation (x :: l) (selsort gv3 x)), (Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort l x)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) (r ++ gv3))
(Permutation (x :: l) (gv3 ++ r)), (Permutation (x :: l) (gv3 ++ gv3)), (Permutation (x :: l) (gv3 ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ gv3)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) []), (Permutation (selection_sort r) r), (Permutation (selection_sort r) gv3), (Permutation (selection_sort r) l)
(Permutation (selection_sort r) (y :: gv3)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: gv3)), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (selection_sort gv3)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort r x)), (Permutation (selection_sort r) (selsort gv3 y))
(Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ gv3)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (gv3 ++ r)), (Permutation (selection_sort r) (gv3 ++ gv3)), (Permutation (selection_sort r) (gv3 ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ gv3))
(Permutation (selection_sort r) []), (Permutation (selection_sort gv3) r), (Permutation (selection_sort gv3) gv3), (Permutation (selection_sort gv3) l), (Permutation (selection_sort gv3) (y :: r)), (Permutation (selection_sort gv3) (y :: gv3)), (Permutation (selection_sort gv3) (y :: l)), (Permutation (selection_sort gv3) (x :: r)), (Permutation (selection_sort gv3) (x :: gv3)), (Permutation (selection_sort gv3) (x :: l))
(Permutation (selection_sort gv3) (selection_sort l)), (Permutation (selection_sort gv3) (selsort r y)), (Permutation (selection_sort gv3) (selsort r x)), (Permutation (selection_sort gv3) (selsort gv3 y)), (Permutation (selection_sort gv3) (selsort gv3 x)), (Permutation (selection_sort gv3) (selsort l y)), (Permutation (selection_sort gv3) (selsort l x)), (Permutation (selection_sort gv3) (r ++ r)), (Permutation (selection_sort gv3) (r ++ gv3)), (Permutation (selection_sort gv3) (r ++ l))
(Permutation (selection_sort gv3) (gv3 ++ gv3)), (Permutation (selection_sort gv3) (gv3 ++ l)), (Permutation (selection_sort gv3) (l ++ r)), (Permutation (selection_sort gv3) (l ++ gv3)), (Permutation (selection_sort gv3) (l ++ l)), (Permutation (selection_sort gv3) []), (Permutation (selection_sort l) r), (Permutation (selection_sort l) gv3), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (y :: r))
(Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: gv3)), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selection_sort gv3)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort gv3 y)), (Permutation (selection_sort l) (selsort gv3 x))
(Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ gv3)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (gv3 ++ r)), (Permutation (selection_sort l) (gv3 ++ gv3)), (Permutation (selection_sort l) (gv3 ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ gv3)), (Permutation (selection_sort l) (l ++ l))
(Permutation (selsort r y) r), (Permutation (selsort r y) gv3), (Permutation (selsort r y) l), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: gv3)), (Permutation (selsort r y) (y :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: gv3)), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (selection_sort r))
(Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort gv3 y)), (Permutation (selsort r y) (selsort gv3 x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) (r ++ gv3)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (gv3 ++ r))
(Permutation (selsort r y) (gv3 ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ gv3)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) []), (Permutation (selsort r x) r), (Permutation (selsort r x) gv3), (Permutation (selsort r x) l), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: gv3))
(Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: gv3)), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (selection_sort r)), (Permutation (selsort r x) (selection_sort gv3)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort gv3 y)), (Permutation (selsort r x) (selsort gv3 x)), (Permutation (selsort r x) (selsort l y))
(Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) (r ++ gv3)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (gv3 ++ r)), (Permutation (selsort r x) (gv3 ++ gv3)), (Permutation (selsort r x) (gv3 ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ gv3)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) [])
(Permutation (selsort gv3 y) gv3), (Permutation (selsort gv3 y) l), (Permutation (selsort gv3 y) (y :: r)), (Permutation (selsort gv3 y) (y :: gv3)), (Permutation (selsort gv3 y) (y :: l)), (Permutation (selsort gv3 y) (x :: r)), (Permutation (selsort gv3 y) (x :: gv3)), (Permutation (selsort gv3 y) (x :: l)), (Permutation (selsort gv3 y) (selection_sort r)), (Permutation (selsort gv3 y) (selection_sort gv3))
(Permutation (selsort gv3 y) (selsort r y)), (Permutation (selsort gv3 y) (selsort r x)), (Permutation (selsort gv3 y) (selsort gv3 x)), (Permutation (selsort gv3 y) (selsort l y)), (Permutation (selsort gv3 y) (selsort l x)), (Permutation (selsort gv3 y) (r ++ r)), (Permutation (selsort gv3 y) (r ++ gv3)), (Permutation (selsort gv3 y) (r ++ l)), (Permutation (selsort gv3 y) (gv3 ++ r)), (Permutation (selsort gv3 y) (gv3 ++ gv3))
(Permutation (selsort gv3 y) (l ++ r)), (Permutation (selsort gv3 y) (l ++ gv3)), (Permutation (selsort gv3 y) (l ++ l)), (Permutation (selsort gv3 y) []), (Permutation (selsort gv3 x) r), (Permutation (selsort gv3 x) gv3), (Permutation (selsort gv3 x) l), (Permutation (selsort gv3 x) (y :: r)), (Permutation (selsort gv3 x) (y :: gv3)), (Permutation (selsort gv3 x) (y :: l))
(Permutation (selsort gv3 x) (x :: gv3)), (Permutation (selsort gv3 x) (x :: l)), (Permutation (selsort gv3 x) (selection_sort r)), (Permutation (selsort gv3 x) (selection_sort gv3)), (Permutation (selsort gv3 x) (selection_sort l)), (Permutation (selsort gv3 x) (selsort r y)), (Permutation (selsort gv3 x) (selsort r x)), (Permutation (selsort gv3 x) (selsort gv3 y)), (Permutation (selsort gv3 x) (selsort l y)), (Permutation (selsort gv3 x) (selsort l x))
(Permutation (selsort gv3 x) (r ++ gv3)), (Permutation (selsort gv3 x) (r ++ l)), (Permutation (selsort gv3 x) (gv3 ++ r)), (Permutation (selsort gv3 x) (gv3 ++ gv3)), (Permutation (selsort gv3 x) (gv3 ++ l)), (Permutation (selsort gv3 x) (l ++ r)), (Permutation (selsort gv3 x) (l ++ gv3)), (Permutation (selsort gv3 x) (l ++ l)), (Permutation (selsort gv3 x) []), (Permutation (selsort l y) r)
(Permutation (selsort l y) l), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: gv3)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (x :: gv3)), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort gv3)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort gv3 y)), (Permutation (selsort l y) (selsort gv3 x)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ gv3)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (gv3 ++ r)), (Permutation (selsort l y) (gv3 ++ gv3)), (Permutation (selsort l y) (gv3 ++ l))
(Permutation (selsort l y) (l ++ gv3)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (selsort l x) r), (Permutation (selsort l x) gv3), (Permutation (selsort l x) l), (Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (y :: gv3)), (Permutation (selsort l x) (y :: l)), (Permutation (selsort l x) (x :: r))
(Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selection_sort gv3)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort gv3 y)), (Permutation (selsort l x) (selsort gv3 x)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (r ++ r))
(Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (gv3 ++ r)), (Permutation (selsort l x) (gv3 ++ gv3)), (Permutation (selsort l x) (gv3 ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ gv3)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) []), (Permutation (r ++ r) r), (Permutation (r ++ r) gv3)
(Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: gv3)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (x :: gv3)), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort gv3)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selsort r y))
(Permutation (r ++ r) (selsort gv3 y)), (Permutation (r ++ r) (selsort gv3 x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort l x)), (Permutation (r ++ r) (r ++ gv3)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (gv3 ++ r)), (Permutation (r ++ r) (gv3 ++ gv3)), (Permutation (r ++ r) (gv3 ++ l)), (Permutation (r ++ r) (l ++ r))
(Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) []), (Permutation (r ++ gv3) r), (Permutation (r ++ gv3) gv3), (Permutation (r ++ gv3) l), (Permutation (r ++ gv3) (y :: r)), (Permutation (r ++ gv3) (y :: gv3)), (Permutation (r ++ gv3) (y :: l)), (Permutation (r ++ gv3) (x :: r)), (Permutation (r ++ gv3) (x :: gv3))
(Permutation (r ++ gv3) (selection_sort r)), (Permutation (r ++ gv3) (selection_sort gv3)), (Permutation (r ++ gv3) (selection_sort l)), (Permutation (r ++ gv3) (selsort r y)), (Permutation (r ++ gv3) (selsort r x)), (Permutation (r ++ gv3) (selsort gv3 y)), (Permutation (r ++ gv3) (selsort gv3 x)), (Permutation (r ++ gv3) (selsort l y)), (Permutation (r ++ gv3) (selsort l x)), (Permutation (r ++ gv3) (r ++ r))
(Permutation (r ++ gv3) (gv3 ++ r)), (Permutation (r ++ gv3) (gv3 ++ gv3)), (Permutation (r ++ gv3) (gv3 ++ l)), (Permutation (r ++ gv3) (l ++ r)), (Permutation (r ++ gv3) (l ++ gv3)), (Permutation (r ++ gv3) (l ++ l)), (Permutation (r ++ gv3) []), (Permutation (r ++ l) r), (Permutation (r ++ l) gv3), (Permutation (r ++ l) l)
(Permutation (r ++ l) (y :: gv3)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (x :: gv3)), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort gv3)), (Permutation (r ++ l) (selection_sort l)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r x))
(Permutation (r ++ l) (selsort gv3 x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (r ++ gv3)), (Permutation (r ++ l) (gv3 ++ r)), (Permutation (r ++ l) (gv3 ++ gv3)), (Permutation (r ++ l) (gv3 ++ l)), (Permutation (r ++ l) (l ++ r)), (Permutation (r ++ l) (l ++ gv3))
(Permutation (r ++ l) []), (Permutation (gv3 ++ r) r), (Permutation (gv3 ++ r) gv3), (Permutation (gv3 ++ r) l), (Permutation (gv3 ++ r) (y :: r)), (Permutation (gv3 ++ r) (y :: gv3)), (Permutation (gv3 ++ r) (y :: l)), (Permutation (gv3 ++ r) (x :: r)), (Permutation (gv3 ++ r) (x :: gv3)), (Permutation (gv3 ++ r) (x :: l))
(Permutation (gv3 ++ r) (selection_sort gv3)), (Permutation (gv3 ++ r) (selection_sort l)), (Permutation (gv3 ++ r) (selsort r y)), (Permutation (gv3 ++ r) (selsort r x)), (Permutation (gv3 ++ r) (selsort gv3 y)), (Permutation (gv3 ++ r) (selsort gv3 x)), (Permutation (gv3 ++ r) (selsort l y)), (Permutation (gv3 ++ r) (selsort l x)), (Permutation (gv3 ++ r) (r ++ r)), (Permutation (gv3 ++ r) (r ++ gv3))
(Permutation (gv3 ++ r) (gv3 ++ gv3)), (Permutation (gv3 ++ r) (gv3 ++ l)), (Permutation (gv3 ++ r) (l ++ r)), (Permutation (gv3 ++ r) (l ++ gv3)), (Permutation (gv3 ++ r) (l ++ l)), (Permutation (gv3 ++ r) []), (Permutation (gv3 ++ gv3) r), (Permutation (gv3 ++ gv3) gv3), (Permutation (gv3 ++ gv3) l), (Permutation (gv3 ++ gv3) (y :: r))
(Permutation (gv3 ++ gv3) (y :: l)), (Permutation (gv3 ++ gv3) (x :: r)), (Permutation (gv3 ++ gv3) (x :: gv3)), (Permutation (gv3 ++ gv3) (x :: l)), (Permutation (gv3 ++ gv3) (selection_sort r)), (Permutation (gv3 ++ gv3) (selection_sort gv3)), (Permutation (gv3 ++ gv3) (selection_sort l)), (Permutation (gv3 ++ gv3) (selsort r y)), (Permutation (gv3 ++ gv3) (selsort r x)), (Permutation (gv3 ++ gv3) (selsort gv3 y))
(Permutation (gv3 ++ gv3) (selsort l y)), (Permutation (gv3 ++ gv3) (selsort l x)), (Permutation (gv3 ++ gv3) (r ++ r)), (Permutation (gv3 ++ gv3) (r ++ gv3)), (Permutation (gv3 ++ gv3) (r ++ l)), (Permutation (gv3 ++ gv3) (gv3 ++ r)), (Permutation (gv3 ++ gv3) (gv3 ++ l)), (Permutation (gv3 ++ gv3) (l ++ r)), (Permutation (gv3 ++ gv3) (l ++ gv3)), (Permutation (gv3 ++ gv3) (l ++ l))
(Permutation (gv3 ++ l) r), (Permutation (gv3 ++ l) gv3), (Permutation (gv3 ++ l) l), (Permutation (gv3 ++ l) (y :: r)), (Permutation (gv3 ++ l) (y :: gv3)), (Permutation (gv3 ++ l) (y :: l)), (Permutation (gv3 ++ l) (x :: r)), (Permutation (gv3 ++ l) (x :: gv3)), (Permutation (gv3 ++ l) (x :: l)), (Permutation (gv3 ++ l) (selection_sort r))
(Permutation (gv3 ++ l) (selection_sort l)), (Permutation (gv3 ++ l) (selsort r y)), (Permutation (gv3 ++ l) (selsort r x)), (Permutation (gv3 ++ l) (selsort gv3 y)), (Permutation (gv3 ++ l) (selsort gv3 x)), (Permutation (gv3 ++ l) (selsort l y)), (Permutation (gv3 ++ l) (selsort l x)), (Permutation (gv3 ++ l) (r ++ r)), (Permutation (gv3 ++ l) (r ++ gv3)), (Permutation (gv3 ++ l) (r ++ l))
(Permutation (gv3 ++ l) (gv3 ++ gv3)), (Permutation (gv3 ++ l) (l ++ r)), (Permutation (gv3 ++ l) (l ++ gv3)), (Permutation (gv3 ++ l) (l ++ l)), (Permutation (gv3 ++ l) []), (Permutation (l ++ r) r), (Permutation (l ++ r) gv3), (Permutation (l ++ r) l), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (y :: gv3))
(Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: gv3)), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selection_sort gv3)), (Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort gv3 y)), (Permutation (l ++ r) (selsort gv3 x))
(Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ gv3)), (Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (gv3 ++ r)), (Permutation (l ++ r) (gv3 ++ gv3)), (Permutation (l ++ r) (gv3 ++ l)), (Permutation (l ++ r) (l ++ gv3)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ gv3) gv3), (Permutation (l ++ gv3) l), (Permutation (l ++ gv3) (y :: r)), (Permutation (l ++ gv3) (y :: gv3)), (Permutation (l ++ gv3) (y :: l)), (Permutation (l ++ gv3) (x :: r)), (Permutation (l ++ gv3) (x :: gv3)), (Permutation (l ++ gv3) (x :: l)), (Permutation (l ++ gv3) (selection_sort r)), (Permutation (l ++ gv3) (selection_sort gv3))
(Permutation (l ++ gv3) (selsort r y)), (Permutation (l ++ gv3) (selsort r x)), (Permutation (l ++ gv3) (selsort gv3 y)), (Permutation (l ++ gv3) (selsort gv3 x)), (Permutation (l ++ gv3) (selsort l y)), (Permutation (l ++ gv3) (selsort l x)), (Permutation (l ++ gv3) (r ++ r)), (Permutation (l ++ gv3) (r ++ gv3)), (Permutation (l ++ gv3) (r ++ l)), (Permutation (l ++ gv3) (gv3 ++ r))
(Permutation (l ++ gv3) (gv3 ++ l)), (Permutation (l ++ gv3) (l ++ r)), (Permutation (l ++ gv3) (l ++ l)), (Permutation (l ++ gv3) []), (Permutation (l ++ l) r), (Permutation (l ++ l) gv3), (Permutation (l ++ l) l), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: gv3)), (Permutation (l ++ l) (y :: l))
(Permutation (l ++ l) (x :: gv3)), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort gv3)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort gv3 y)), (Permutation (l ++ l) (selsort gv3 x)), (Permutation (l ++ l) (selsort l y))
(Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ gv3)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (gv3 ++ r)), (Permutation (l ++ l) (gv3 ++ gv3)), (Permutation (l ++ l) (gv3 ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) (l ++ gv3)), (Permutation (l ++ l) []), (Permutation [] r)
(Permutation [] l), (Permutation [] (y :: r)), (Permutation [] (y :: gv3)), (Permutation [] (y :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: gv3)), (Permutation [] (x :: l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort gv3)), (Permutation [] (selection_sort l))
(Permutation [] (selsort r x)), (Permutation [] (selsort gv3 y)), (Permutation [] (selsort gv3 x)), (Permutation [] (selsort l y)), (Permutation [] (selsort l x)), (Permutation [] (r ++ r)), (Permutation [] (r ++ gv3)), (Permutation [] (r ++ l)), (Permutation [] (gv3 ++ r)), (Permutation [] (gv3 ++ gv3))
(Permutation [] (l ++ r)), (Permutation [] (l ++ gv3)), (Permutation [] (l ++ l)), (In y (y :: r)), (In y (y :: gv3)), (In y (y :: l)), (In y (x :: r)), (In y (x :: gv3)), (In y (x :: l)), (In y (selection_sort r))
(In y (selection_sort l)), (In y (selsort r y)), (In y (selsort r x)), (In y (selsort gv3 y)), (In y (selsort gv3 x)), (In y (selsort l y)), (In y (selsort l x)), (In y (r ++ r)), (In y (r ++ gv3)), (In y (r ++ l))
(In y (gv3 ++ gv3)), (In y (gv3 ++ l)), (In y (l ++ r)), (In y (l ++ gv3)), (In y (l ++ l)), (In x (y :: r)), (In x (y :: gv3)), (In x (y :: l)), (In x (x :: r)), (In x (x :: gv3))
(In x (selection_sort r)), (In x (selection_sort gv3)), (In x (selection_sort l)), (In x (selsort r y)), (In x (selsort r x)), (In x (selsort gv3 y)), (In x (selsort gv3 x)), (In x (selsort l y)), (In x (selsort l x)), (In x (r ++ r))
(In x (r ++ l)), (In x (gv3 ++ r)), (In x (gv3 ++ gv3)), (In x (gv3 ++ l)), (In x (l ++ r)), (In x (l ++ gv3)), (In x (l ++ l)), (In (length r) r), (In (length r) gv3), (In (length r) l)
(In (length r) (y :: gv3)), (In (length r) (y :: l)), (In (length r) (x :: r)), (In (length r) (x :: gv3)), (In (length r) (x :: l)), (In (length r) (selection_sort r)), (In (length r) (selection_sort gv3)), (In (length r) (selection_sort l)), (In (length r) (selsort r y)), (In (length r) (selsort r x))
(In (length r) (selsort gv3 x)), (In (length r) (selsort l y)), (In (length r) (selsort l x)), (In (length r) (r ++ r)), (In (length r) (r ++ gv3)), (In (length r) (r ++ l)), (In (length r) (gv3 ++ r)), (In (length r) (gv3 ++ gv3)), (In (length r) (gv3 ++ l)), (In (length r) (l ++ r))
(In (length r) (l ++ l)), (In (length gv3) r), (In (length gv3) gv3), (In (length gv3) l), (In (length gv3) (y :: r)), (In (length gv3) (y :: gv3)), (In (length gv3) (y :: l)), (In (length gv3) (x :: r)), (In (length gv3) (x :: gv3)), (In (length gv3) (x :: l))
(In (length gv3) (selection_sort gv3)), (In (length gv3) (selection_sort l)), (In (length gv3) (selsort r y)), (In (length gv3) (selsort r x)), (In (length gv3) (selsort gv3 y)), (In (length gv3) (selsort gv3 x)), (In (length gv3) (selsort l y)), (In (length gv3) (selsort l x)), (In (length gv3) (r ++ r)), (In (length gv3) (r ++ gv3))
(In (length gv3) (gv3 ++ r)), (In (length gv3) (gv3 ++ gv3)), (In (length gv3) (gv3 ++ l)), (In (length gv3) (l ++ r)), (In (length gv3) (l ++ gv3)), (In (length gv3) (l ++ l)), (In (length l) r), (In (length l) gv3), (In (length l) l), (In (length l) (y :: r))
(In (length l) (y :: l)), (In (length l) (x :: r)), (In (length l) (x :: gv3)), (In (length l) (x :: l)), (In (length l) (selection_sort r)), (In (length l) (selection_sort gv3)), (In (length l) (selection_sort l)), (In (length l) (selsort r y)), (In (length l) (selsort r x)), (In (length l) (selsort gv3 y))
(In (length l) (selsort l y)), (In (length l) (selsort l x)), (In (length l) (r ++ r)), (In (length l) (r ++ gv3)), (In (length l) (r ++ l)), (In (length l) (gv3 ++ r)), (In (length l) (gv3 ++ gv3)), (In (length l) (gv3 ++ l)), (In (length l) (l ++ r)), (In (length l) (l ++ gv3))
(y < length r), (y < length gv3), (y < length l), (x < length r), (x < length gv3), (x < length l), (length r < y), (length r < x), (length r < length gv3), (length r < length l)
(length gv3 < x), (length gv3 < length r), (length gv3 < length l), (length l < y), (length l < x), (length l < length r), (length l < length gv3), (y <= length r), (y <= length gv3), (y <= length l)
(x <= length gv3), (x <= length l), (length r <= y), (length r <= x), (length r <= length gv3), (length r <= length l), (length gv3 <= y), (length gv3 <= x), (length gv3 <= length r), (length gv3 <= length l)
(length l <= x), (length l <= length r), (length l <= length gv3), (~ y <=* r), (~ y <=* gv3), (~ y <=* l), (~ x <=* r), (~ x <=* gv3), (~ x <=* l), (~ sorted r)
(~ sorted l), (~ Permutation r r), (~ Permutation r gv3), (~ Permutation r l), (~ Permutation gv3 r), (~ Permutation gv3 gv3), (~ Permutation gv3 l), (~ Permutation l r), (~ Permutation l gv3), (~ Permutation l l)
(~ In y gv3), (~ In y l), (~ In x r), (~ In x gv3), (~ In x l), (~ y < y), (~ y < x), (~ x < y), (~ x < x), (~ y <= y)
(~ x <= y), (~ x <= x), (r <> r), (r <> gv3), (r <> l), (gv3 <> r), (gv3 <> gv3), (gv3 <> l), (l <> r), (l <> gv3)
(y <> y), (y <> x), (x <> y), (x <> x), (None = Some r), (None = Some gv3), (None = Some l), (y :: r = r), (y :: r = gv3), (y :: r = l)
(y :: r = selection_sort gv3), (y :: r = selection_sort l), (y :: r = selsort r y), (y :: r = selsort r x), (y :: r = selsort gv3 y), (y :: r = selsort gv3 x), (y :: r = selsort l y), (y :: r = selsort l x), (y :: r = r ++ r), (y :: r = r ++ gv3)
(y :: r = gv3 ++ r), (y :: r = gv3 ++ gv3), (y :: r = gv3 ++ l), (y :: r = l ++ r), (y :: r = l ++ gv3), (y :: r = l ++ l), (y :: r = []), (y :: gv3 = r), (y :: gv3 = gv3), (y :: gv3 = l)
(y :: gv3 = selection_sort gv3), (y :: gv3 = selection_sort l), (y :: gv3 = selsort r y), (y :: gv3 = selsort r x), (y :: gv3 = selsort gv3 y), (y :: gv3 = selsort gv3 x), (y :: gv3 = selsort l y), (y :: gv3 = selsort l x), (y :: gv3 = r ++ r), (y :: gv3 = r ++ gv3)
(y :: gv3 = gv3 ++ r), (y :: gv3 = gv3 ++ gv3), (y :: gv3 = gv3 ++ l), (y :: gv3 = l ++ r), (y :: gv3 = l ++ gv3), (y :: gv3 = l ++ l), (y :: gv3 = []), (y :: l = r), (y :: l = gv3), (y :: l = l)
(y :: l = selection_sort gv3), (y :: l = selection_sort l), (y :: l = selsort r y), (y :: l = selsort r x), (y :: l = selsort gv3 y), (y :: l = selsort gv3 x), (y :: l = selsort l y), (y :: l = selsort l x), (y :: l = r ++ r), (y :: l = r ++ gv3)
(y :: l = gv3 ++ r), (y :: l = gv3 ++ gv3), (y :: l = gv3 ++ l), (y :: l = l ++ r), (y :: l = l ++ gv3), (y :: l = l ++ l), (y :: l = []), (x :: r = r), (x :: r = gv3), (x :: r = l)
(x :: r = selection_sort gv3), (x :: r = selection_sort l), (x :: r = selsort r y), (x :: r = selsort r x), (x :: r = selsort gv3 y), (x :: r = selsort gv3 x), (x :: r = selsort l y), (x :: r = selsort l x), (x :: r = r ++ r), (x :: r = r ++ gv3)
(x :: r = gv3 ++ r), (x :: r = gv3 ++ gv3), (x :: r = gv3 ++ l), (x :: r = l ++ r), (x :: r = l ++ gv3), (x :: r = l ++ l), (x :: r = []), (x :: gv3 = r), (x :: gv3 = gv3), (x :: gv3 = l)
(x :: gv3 = selection_sort gv3), (x :: gv3 = selection_sort l), (x :: gv3 = selsort r y), (x :: gv3 = selsort r x), (x :: gv3 = selsort gv3 y), (x :: gv3 = selsort gv3 x), (x :: gv3 = selsort l y), (x :: gv3 = selsort l x), (x :: gv3 = r ++ r), (x :: gv3 = r ++ gv3)
(x :: gv3 = gv3 ++ r), (x :: gv3 = gv3 ++ gv3), (x :: gv3 = gv3 ++ l), (x :: gv3 = l ++ r), (x :: gv3 = l ++ gv3), (x :: gv3 = l ++ l), (x :: gv3 = []), (x :: l = r), (x :: l = gv3), (x :: l = l)
(x :: l = selection_sort gv3), (x :: l = selection_sort l), (x :: l = selsort r y), (x :: l = selsort r x), (x :: l = selsort gv3 y), (x :: l = selsort gv3 x), (x :: l = selsort l y), (x :: l = selsort l x), (x :: l = r ++ r), (x :: l = r ++ gv3)
(x :: l = gv3 ++ r), (x :: l = gv3 ++ gv3), (x :: l = gv3 ++ l), (x :: l = l ++ r), (x :: l = l ++ gv3), (x :: l = l ++ l), (x :: l = []), (selection_sort r = r), (selection_sort r = gv3), (selection_sort r = l)
(selection_sort r = r ++ gv3), (selection_sort r = r ++ l), (selection_sort r = gv3 ++ r), (selection_sort r = gv3 ++ gv3), (selection_sort r = gv3 ++ l), (selection_sort r = l ++ r), (selection_sort r = l ++ gv3), (selection_sort r = l ++ l), (selection_sort gv3 = r), (selection_sort gv3 = gv3)
(selection_sort gv3 = r ++ r), (selection_sort gv3 = r ++ gv3), (selection_sort gv3 = r ++ l), (selection_sort gv3 = gv3 ++ r), (selection_sort gv3 = gv3 ++ gv3), (selection_sort gv3 = gv3 ++ l), (selection_sort gv3 = l ++ r), (selection_sort gv3 = l ++ gv3), (selection_sort gv3 = l ++ l), (selection_sort l = r)
(selection_sort l = l), (selection_sort l = r ++ r), (selection_sort l = r ++ gv3), (selection_sort l = r ++ l), (selection_sort l = gv3 ++ r), (selection_sort l = gv3 ++ gv3), (selection_sort l = gv3 ++ l), (selection_sort l = l ++ r), (selection_sort l = l ++ gv3), (selection_sort l = l ++ l)
(selsort r y = gv3), (selsort r y = l), (selsort r y = selection_sort r), (selsort r y = selection_sort gv3), (selsort r y = selection_sort l), (selsort r y = r ++ r), (selsort r y = r ++ gv3), (selsort r y = r ++ l), (selsort r y = gv3 ++ r), (selsort r y = gv3 ++ gv3)
(selsort r y = l ++ r), (selsort r y = l ++ gv3), (selsort r y = l ++ l), (selsort r x = r), (selsort r x = gv3), (selsort r x = l), (selsort r x = selection_sort r), (selsort r x = selection_sort gv3), (selsort r x = selection_sort l), (selsort r x = r ++ r)
(selsort r x = r ++ l), (selsort r x = gv3 ++ r), (selsort r x = gv3 ++ gv3), (selsort r x = gv3 ++ l), (selsort r x = l ++ r), (selsort r x = l ++ gv3), (selsort r x = l ++ l), (selsort gv3 y = r), (selsort gv3 y = gv3), (selsort gv3 y = l)
(selsort gv3 y = selection_sort gv3), (selsort gv3 y = selection_sort l), (selsort gv3 y = r ++ r), (selsort gv3 y = r ++ gv3), (selsort gv3 y = r ++ l), (selsort gv3 y = gv3 ++ r), (selsort gv3 y = gv3 ++ gv3), (selsort gv3 y = gv3 ++ l), (selsort gv3 y = l ++ r), (selsort gv3 y = l ++ gv3)
(selsort gv3 x = r), (selsort gv3 x = gv3), (selsort gv3 x = l), (selsort gv3 x = selection_sort r), (selsort gv3 x = selection_sort gv3), (selsort gv3 x = selection_sort l), (selsort gv3 x = r ++ r), (selsort gv3 x = r ++ gv3), (selsort gv3 x = r ++ l), (selsort gv3 x = gv3 ++ r)
(selsort gv3 x = gv3 ++ l), (selsort gv3 x = l ++ r), (selsort gv3 x = l ++ gv3), (selsort gv3 x = l ++ l), (selsort l y = r), (selsort l y = gv3), (selsort l y = l), (selsort l y = selection_sort r), (selsort l y = selection_sort gv3), (selsort l y = selection_sort l)
(selsort l y = r ++ gv3), (selsort l y = r ++ l), (selsort l y = gv3 ++ r), (selsort l y = gv3 ++ gv3), (selsort l y = gv3 ++ l), (selsort l y = l ++ r), (selsort l y = l ++ gv3), (selsort l y = l ++ l), (selsort l x = r), (selsort l x = gv3)
(selsort l x = selection_sort r), (selsort l x = selection_sort gv3), (selsort l x = selection_sort l), (selsort l x = r ++ r), (selsort l x = r ++ gv3), (selsort l x = r ++ l), (selsort l x = gv3 ++ r), (selsort l x = gv3 ++ gv3), (selsort l x = gv3 ++ l), (selsort l x = l ++ r)
(selsort l x = l ++ l), (r ++ r = r), (r ++ r = gv3), (r ++ r = l), (r ++ gv3 = r), (r ++ gv3 = gv3), (r ++ gv3 = l), (r ++ l = r), (r ++ l = gv3), (r ++ l = l)
(gv3 ++ r = gv3), (gv3 ++ r = l), (gv3 ++ gv3 = r), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = l), (gv3 ++ l = r), (gv3 ++ l = gv3), (gv3 ++ l = l), (l ++ r = r), (l ++ r = gv3)
(l ++ gv3 = r), (l ++ gv3 = gv3), (l ++ gv3 = l), (l ++ l = r), (l ++ l = gv3), (l ++ l = l), ([] = r), ([] = gv3), ([] = l), ([] = selection_sort r)
([] = selection_sort l), ([] = selsort r y), ([] = selsort r x), ([] = selsort gv3 y), ([] = selsort gv3 x), ([] = selsort l y), ([] = selsort l x), ([] = r ++ r), ([] = r ++ gv3), ([] = r ++ l)
([] = gv3 ++ gv3), ([] = gv3 ++ l), ([] = l ++ r), ([] = l ++ gv3), ([] = l ++ l), (None = Some y), (None = Some x), ((y, r) = select y r), ((y, r) = select y gv3), ((y, r) = select y l)
((y, r) = select x gv3), ((y, r) = select x l), ((y, gv3) = select y r), ((y, gv3) = select y gv3), ((y, gv3) = select y l), ((y, gv3) = select x r), ((y, gv3) = select x gv3), ((y, gv3) = select x l), ((y, l) = select y r), ((y, l) = select y gv3)
((y, l) = select x r), ((y, l) = select x gv3), ((y, l) = select x l), ((x, r) = select y r), ((x, r) = select y gv3), ((x, r) = select y l), ((x, r) = select x r), ((x, r) = select x gv3), ((x, r) = select x l), ((x, gv3) = select y r)
((x, gv3) = select y l), ((x, gv3) = select x r), ((x, gv3) = select x gv3), ((x, gv3) = select x l), ((x, l) = select y r), ((x, l) = select y gv3), ((x, l) = select y l), ((x, l) = select x r), ((x, l) = select x gv3), ((x, l) = select x l)
(length r = x), (length gv3 = y), (length gv3 = x), (length l = y), (length l = x)

Label: 1 (3)
(y <=* r), (y <=* gv3), (y <=* l), (x <=* r), (x <=* gv3), (x <=* l), (sorted r), (sorted gv3), (sorted l), (Permutation r r)
(Permutation r l), (Permutation gv3 r), (Permutation gv3 gv3), (Permutation gv3 l), (Permutation l r), (Permutation l gv3), (Permutation l l), (In y r), (In y gv3), (In y l)
(In x gv3), (In x l), (y < y), (y < x), (x < y), (x < x), (y <= y), (y <= x), (x <= y), (x <= x)
(r = gv3), (r = l), (gv3 = r), (gv3 = gv3), (gv3 = l), (l = r), (l = gv3), (l = l), (y = y), (y = x)
(x = x), (false = sorted_bool r), (false = sorted_bool gv3), (false = sorted_bool l), (true = sorted_bool r), (true = sorted_bool gv3), (true = sorted_bool l), (y <=* y :: r), (y <=* y :: gv3), (y <=* y :: l)
(y <=* x :: gv3), (y <=* x :: l), (y <=* selection_sort r), (y <=* selection_sort gv3), (y <=* selection_sort l), (y <=* selsort r y), (y <=* selsort r x), (y <=* selsort gv3 y), (y <=* selsort gv3 x), (y <=* selsort l y)
(y <=* r ++ r), (y <=* r ++ gv3), (y <=* r ++ l), (y <=* gv3 ++ r), (y <=* gv3 ++ gv3), (y <=* gv3 ++ l), (y <=* l ++ r), (y <=* l ++ gv3), (y <=* l ++ l), (y <=* [])
(x <=* y :: gv3), (x <=* y :: l), (x <=* x :: r), (x <=* x :: gv3), (x <=* x :: l), (x <=* selection_sort r), (x <=* selection_sort gv3), (x <=* selection_sort l), (x <=* selsort r y), (x <=* selsort r x)
(x <=* selsort gv3 x), (x <=* selsort l y), (x <=* selsort l x), (x <=* r ++ r), (x <=* r ++ gv3), (x <=* r ++ l), (x <=* gv3 ++ r), (x <=* gv3 ++ gv3), (x <=* gv3 ++ l), (x <=* l ++ r)
(x <=* l ++ l), (x <=* []), (length r <=* r), (length r <=* gv3), (length r <=* l), (length r <=* y :: r), (length r <=* y :: gv3), (length r <=* y :: l), (length r <=* x :: r), (length r <=* x :: gv3)
(length r <=* selection_sort r), (length r <=* selection_sort gv3), (length r <=* selection_sort l), (length r <=* selsort r y), (length r <=* selsort r x), (length r <=* selsort gv3 y), (length r <=* selsort gv3 x), (length r <=* selsort l y), (length r <=* selsort l x), (length r <=* r ++ r)
(length r <=* r ++ l), (length r <=* gv3 ++ r), (length r <=* gv3 ++ gv3), (length r <=* gv3 ++ l), (length r <=* l ++ r), (length r <=* l ++ gv3), (length r <=* l ++ l), (length r <=* []), (length gv3 <=* r), (length gv3 <=* gv3)
(length gv3 <=* y :: r), (length gv3 <=* y :: gv3), (length gv3 <=* y :: l), (length gv3 <=* x :: r), (length gv3 <=* x :: gv3), (length gv3 <=* x :: l), (length gv3 <=* selection_sort r), (length gv3 <=* selection_sort gv3), (length gv3 <=* selection_sort l), (length gv3 <=* selsort r y)
(length gv3 <=* selsort gv3 y), (length gv3 <=* selsort gv3 x), (length gv3 <=* selsort l y), (length gv3 <=* selsort l x), (length gv3 <=* r ++ r), (length gv3 <=* r ++ gv3), (length gv3 <=* r ++ l), (length gv3 <=* gv3 ++ r), (length gv3 <=* gv3 ++ gv3), (length gv3 <=* gv3 ++ l)
(length gv3 <=* l ++ gv3), (length gv3 <=* l ++ l), (length gv3 <=* []), (length l <=* r), (length l <=* gv3), (length l <=* l), (length l <=* y :: r), (length l <=* y :: gv3), (length l <=* y :: l), (length l <=* x :: r)
(length l <=* x :: l), (length l <=* selection_sort r), (length l <=* selection_sort gv3), (length l <=* selection_sort l), (length l <=* selsort r y), (length l <=* selsort r x), (length l <=* selsort gv3 y), (length l <=* selsort gv3 x), (length l <=* selsort l y), (length l <=* selsort l x)
(length l <=* r ++ gv3), (length l <=* r ++ l), (length l <=* gv3 ++ r), (length l <=* gv3 ++ gv3), (length l <=* gv3 ++ l), (length l <=* l ++ r), (length l <=* l ++ gv3), (length l <=* l ++ l), (length l <=* []), (sorted (y :: r))
(sorted (y :: l)), (sorted (x :: r)), (sorted (x :: gv3)), (sorted (x :: l)), (sorted (selection_sort r)), (sorted (selection_sort gv3)), (sorted (selection_sort l)), (sorted (selsort r y)), (sorted (selsort r x)), (sorted (selsort gv3 y))
(sorted (selsort l y)), (sorted (selsort l x)), (sorted (r ++ r)), (sorted (r ++ gv3)), (sorted (r ++ l)), (sorted (gv3 ++ r)), (sorted (gv3 ++ gv3)), (sorted (gv3 ++ l)), (sorted (l ++ r)), (sorted (l ++ gv3))
(sorted []), (Permutation r (y :: r)), (Permutation r (y :: gv3)), (Permutation r (y :: l)), (Permutation r (x :: r)), (Permutation r (x :: gv3)), (Permutation r (x :: l)), (Permutation r (selection_sort r)), (Permutation r (selection_sort gv3)), (Permutation r (selection_sort l))
(Permutation r (selsort r x)), (Permutation r (selsort gv3 y)), (Permutation r (selsort gv3 x)), (Permutation r (selsort l y)), (Permutation r (selsort l x)), (Permutation r (r ++ r)), (Permutation r (r ++ gv3)), (Permutation r (r ++ l)), (Permutation r (gv3 ++ r)), (Permutation r (gv3 ++ gv3))
(Permutation r (l ++ r)), (Permutation r (l ++ gv3)), (Permutation r (l ++ l)), (Permutation r []), (Permutation gv3 (y :: r)), (Permutation gv3 (y :: gv3)), (Permutation gv3 (y :: l)), (Permutation gv3 (x :: r)), (Permutation gv3 (x :: gv3)), (Permutation gv3 (x :: l))
(Permutation gv3 (selection_sort gv3)), (Permutation gv3 (selection_sort l)), (Permutation gv3 (selsort r y)), (Permutation gv3 (selsort r x)), (Permutation gv3 (selsort gv3 y)), (Permutation gv3 (selsort gv3 x)), (Permutation gv3 (selsort l y)), (Permutation gv3 (selsort l x)), (Permutation gv3 (r ++ r)), (Permutation gv3 (r ++ gv3))
(Permutation gv3 (gv3 ++ r)), (Permutation gv3 (gv3 ++ gv3)), (Permutation gv3 (gv3 ++ l)), (Permutation gv3 (l ++ r)), (Permutation gv3 (l ++ gv3)), (Permutation gv3 (l ++ l)), (Permutation gv3 []), (Permutation l (y :: r)), (Permutation l (y :: gv3)), (Permutation l (y :: l))
(Permutation l (x :: gv3)), (Permutation l (x :: l)), (Permutation l (selection_sort r)), (Permutation l (selection_sort gv3)), (Permutation l (selection_sort l)), (Permutation l (selsort r y)), (Permutation l (selsort r x)), (Permutation l (selsort gv3 y)), (Permutation l (selsort gv3 x)), (Permutation l (selsort l y))
(Permutation l (r ++ r)), (Permutation l (r ++ gv3)), (Permutation l (r ++ l)), (Permutation l (gv3 ++ r)), (Permutation l (gv3 ++ gv3)), (Permutation l (gv3 ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ gv3)), (Permutation l (l ++ l)), (Permutation l [])
(Permutation (y :: r) gv3), (Permutation (y :: r) l), (Permutation (y :: r) (y :: gv3)), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: gv3)), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort gv3)), (Permutation (y :: r) (selection_sort l))
(Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort gv3 y)), (Permutation (y :: r) (selsort gv3 x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ gv3)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (gv3 ++ r)), (Permutation (y :: r) (gv3 ++ gv3))
(Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ gv3)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) []), (Permutation (y :: gv3) r), (Permutation (y :: gv3) gv3), (Permutation (y :: gv3) l), (Permutation (y :: gv3) (y :: r)), (Permutation (y :: gv3) (y :: l)), (Permutation (y :: gv3) (x :: r))
(Permutation (y :: gv3) (x :: l)), (Permutation (y :: gv3) (selection_sort r)), (Permutation (y :: gv3) (selection_sort gv3)), (Permutation (y :: gv3) (selection_sort l)), (Permutation (y :: gv3) (selsort r y)), (Permutation (y :: gv3) (selsort r x)), (Permutation (y :: gv3) (selsort gv3 y)), (Permutation (y :: gv3) (selsort gv3 x)), (Permutation (y :: gv3) (selsort l y)), (Permutation (y :: gv3) (selsort l x))
(Permutation (y :: gv3) (r ++ gv3)), (Permutation (y :: gv3) (r ++ l)), (Permutation (y :: gv3) (gv3 ++ r)), (Permutation (y :: gv3) (gv3 ++ gv3)), (Permutation (y :: gv3) (gv3 ++ l)), (Permutation (y :: gv3) (l ++ r)), (Permutation (y :: gv3) (l ++ gv3)), (Permutation (y :: gv3) (l ++ l)), (Permutation (y :: gv3) []), (Permutation (y :: l) r)
(Permutation (y :: l) l), (Permutation (y :: l) (y :: r)), (Permutation (y :: l) (y :: gv3)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: gv3)), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort gv3)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort r y))
(Permutation (y :: l) (selsort gv3 y)), (Permutation (y :: l) (selsort gv3 x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ gv3)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (gv3 ++ r)), (Permutation (y :: l) (gv3 ++ gv3)), (Permutation (y :: l) (gv3 ++ l))
(Permutation (y :: l) (l ++ gv3)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) []), (Permutation (x :: r) r), (Permutation (x :: r) gv3), (Permutation (x :: r) l), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (y :: gv3)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (x :: gv3))
(Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selection_sort gv3)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort gv3 y)), (Permutation (x :: r) (selsort gv3 x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (r ++ r))
(Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (gv3 ++ r)), (Permutation (x :: r) (gv3 ++ gv3)), (Permutation (x :: r) (gv3 ++ l)), (Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (l ++ gv3)), (Permutation (x :: r) (l ++ l)), (Permutation (x :: r) []), (Permutation (x :: gv3) r), (Permutation (x :: gv3) gv3)
(Permutation (x :: gv3) (y :: r)), (Permutation (x :: gv3) (y :: gv3)), (Permutation (x :: gv3) (y :: l)), (Permutation (x :: gv3) (x :: r)), (Permutation (x :: gv3) (x :: l)), (Permutation (x :: gv3) (selection_sort r)), (Permutation (x :: gv3) (selection_sort gv3)), (Permutation (x :: gv3) (selection_sort l)), (Permutation (x :: gv3) (selsort r y)), (Permutation (x :: gv3) (selsort r x))
(Permutation (x :: gv3) (selsort gv3 x)), (Permutation (x :: gv3) (selsort l y)), (Permutation (x :: gv3) (selsort l x)), (Permutation (x :: gv3) (r ++ r)), (Permutation (x :: gv3) (r ++ gv3)), (Permutation (x :: gv3) (r ++ l)), (Permutation (x :: gv3) (gv3 ++ r)), (Permutation (x :: gv3) (gv3 ++ gv3)), (Permutation (x :: gv3) (gv3 ++ l)), (Permutation (x :: gv3) (l ++ r))
(Permutation (x :: gv3) (l ++ l)), (Permutation (x :: gv3) []), (Permutation (x :: l) r), (Permutation (x :: l) gv3), (Permutation (x :: l) l), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: gv3)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (x :: gv3))
(Permutation (x :: l) (selection_sort gv3)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort gv3 y)), (Permutation (x :: l) (selsort gv3 x)), (Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort l x)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) (r ++ gv3))
(Permutation (x :: l) (gv3 ++ r)), (Permutation (x :: l) (gv3 ++ gv3)), (Permutation (x :: l) (gv3 ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ gv3)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) []), (Permutation (selection_sort r) r), (Permutation (selection_sort r) gv3), (Permutation (selection_sort r) l)
(Permutation (selection_sort r) (y :: gv3)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: gv3)), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (selection_sort gv3)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort r x)), (Permutation (selection_sort r) (selsort gv3 y))
(Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ gv3)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (gv3 ++ r)), (Permutation (selection_sort r) (gv3 ++ gv3)), (Permutation (selection_sort r) (gv3 ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ gv3))
(Permutation (selection_sort r) []), (Permutation (selection_sort gv3) r), (Permutation (selection_sort gv3) gv3), (Permutation (selection_sort gv3) l), (Permutation (selection_sort gv3) (y :: r)), (Permutation (selection_sort gv3) (y :: gv3)), (Permutation (selection_sort gv3) (y :: l)), (Permutation (selection_sort gv3) (x :: r)), (Permutation (selection_sort gv3) (x :: gv3)), (Permutation (selection_sort gv3) (x :: l))
(Permutation (selection_sort gv3) (selection_sort l)), (Permutation (selection_sort gv3) (selsort r y)), (Permutation (selection_sort gv3) (selsort r x)), (Permutation (selection_sort gv3) (selsort gv3 y)), (Permutation (selection_sort gv3) (selsort gv3 x)), (Permutation (selection_sort gv3) (selsort l y)), (Permutation (selection_sort gv3) (selsort l x)), (Permutation (selection_sort gv3) (r ++ r)), (Permutation (selection_sort gv3) (r ++ gv3)), (Permutation (selection_sort gv3) (r ++ l))
(Permutation (selection_sort gv3) (gv3 ++ gv3)), (Permutation (selection_sort gv3) (gv3 ++ l)), (Permutation (selection_sort gv3) (l ++ r)), (Permutation (selection_sort gv3) (l ++ gv3)), (Permutation (selection_sort gv3) (l ++ l)), (Permutation (selection_sort gv3) []), (Permutation (selection_sort l) r), (Permutation (selection_sort l) gv3), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (y :: r))
(Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: gv3)), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selection_sort gv3)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort gv3 y)), (Permutation (selection_sort l) (selsort gv3 x))
(Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ gv3)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (gv3 ++ r)), (Permutation (selection_sort l) (gv3 ++ gv3)), (Permutation (selection_sort l) (gv3 ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ gv3)), (Permutation (selection_sort l) (l ++ l))
(Permutation (selsort r y) r), (Permutation (selsort r y) gv3), (Permutation (selsort r y) l), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: gv3)), (Permutation (selsort r y) (y :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: gv3)), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (selection_sort r))
(Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort gv3 y)), (Permutation (selsort r y) (selsort gv3 x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) (r ++ gv3)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (gv3 ++ r))
(Permutation (selsort r y) (gv3 ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ gv3)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) []), (Permutation (selsort r x) r), (Permutation (selsort r x) gv3), (Permutation (selsort r x) l), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: gv3))
(Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: gv3)), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (selection_sort r)), (Permutation (selsort r x) (selection_sort gv3)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort gv3 y)), (Permutation (selsort r x) (selsort gv3 x)), (Permutation (selsort r x) (selsort l y))
(Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) (r ++ gv3)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (gv3 ++ r)), (Permutation (selsort r x) (gv3 ++ gv3)), (Permutation (selsort r x) (gv3 ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ gv3)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) [])
(Permutation (selsort gv3 y) gv3), (Permutation (selsort gv3 y) l), (Permutation (selsort gv3 y) (y :: r)), (Permutation (selsort gv3 y) (y :: gv3)), (Permutation (selsort gv3 y) (y :: l)), (Permutation (selsort gv3 y) (x :: r)), (Permutation (selsort gv3 y) (x :: gv3)), (Permutation (selsort gv3 y) (x :: l)), (Permutation (selsort gv3 y) (selection_sort r)), (Permutation (selsort gv3 y) (selection_sort gv3))
(Permutation (selsort gv3 y) (selsort r y)), (Permutation (selsort gv3 y) (selsort r x)), (Permutation (selsort gv3 y) (selsort gv3 x)), (Permutation (selsort gv3 y) (selsort l y)), (Permutation (selsort gv3 y) (selsort l x)), (Permutation (selsort gv3 y) (r ++ r)), (Permutation (selsort gv3 y) (r ++ gv3)), (Permutation (selsort gv3 y) (r ++ l)), (Permutation (selsort gv3 y) (gv3 ++ r)), (Permutation (selsort gv3 y) (gv3 ++ gv3))
(Permutation (selsort gv3 y) (l ++ r)), (Permutation (selsort gv3 y) (l ++ gv3)), (Permutation (selsort gv3 y) (l ++ l)), (Permutation (selsort gv3 y) []), (Permutation (selsort gv3 x) r), (Permutation (selsort gv3 x) gv3), (Permutation (selsort gv3 x) l), (Permutation (selsort gv3 x) (y :: r)), (Permutation (selsort gv3 x) (y :: gv3)), (Permutation (selsort gv3 x) (y :: l))
(Permutation (selsort gv3 x) (x :: gv3)), (Permutation (selsort gv3 x) (x :: l)), (Permutation (selsort gv3 x) (selection_sort r)), (Permutation (selsort gv3 x) (selection_sort gv3)), (Permutation (selsort gv3 x) (selection_sort l)), (Permutation (selsort gv3 x) (selsort r y)), (Permutation (selsort gv3 x) (selsort r x)), (Permutation (selsort gv3 x) (selsort gv3 y)), (Permutation (selsort gv3 x) (selsort l y)), (Permutation (selsort gv3 x) (selsort l x))
(Permutation (selsort gv3 x) (r ++ gv3)), (Permutation (selsort gv3 x) (r ++ l)), (Permutation (selsort gv3 x) (gv3 ++ r)), (Permutation (selsort gv3 x) (gv3 ++ gv3)), (Permutation (selsort gv3 x) (gv3 ++ l)), (Permutation (selsort gv3 x) (l ++ r)), (Permutation (selsort gv3 x) (l ++ gv3)), (Permutation (selsort gv3 x) (l ++ l)), (Permutation (selsort gv3 x) []), (Permutation (selsort l y) r)
(Permutation (selsort l y) l), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: gv3)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (x :: gv3)), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort gv3)), (Permutation (selsort l y) (selection_sort l))
(Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort gv3 y)), (Permutation (selsort l y) (selsort gv3 x)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ gv3)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (gv3 ++ r)), (Permutation (selsort l y) (gv3 ++ gv3)), (Permutation (selsort l y) (gv3 ++ l))
(Permutation (selsort l y) (l ++ gv3)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) []), (Permutation (selsort l x) r), (Permutation (selsort l x) gv3), (Permutation (selsort l x) l), (Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (y :: gv3)), (Permutation (selsort l x) (y :: l)), (Permutation (selsort l x) (x :: r))
(Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selection_sort gv3)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort gv3 y)), (Permutation (selsort l x) (selsort gv3 x)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (r ++ r))
(Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (gv3 ++ r)), (Permutation (selsort l x) (gv3 ++ gv3)), (Permutation (selsort l x) (gv3 ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ gv3)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) []), (Permutation (r ++ r) r), (Permutation (r ++ r) gv3)
(Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: gv3)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (x :: gv3)), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort gv3)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selsort r y))
(Permutation (r ++ r) (selsort gv3 y)), (Permutation (r ++ r) (selsort gv3 x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort l x)), (Permutation (r ++ r) (r ++ gv3)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (gv3 ++ r)), (Permutation (r ++ r) (gv3 ++ gv3)), (Permutation (r ++ r) (gv3 ++ l)), (Permutation (r ++ r) (l ++ r))
(Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) []), (Permutation (r ++ gv3) r), (Permutation (r ++ gv3) gv3), (Permutation (r ++ gv3) l), (Permutation (r ++ gv3) (y :: r)), (Permutation (r ++ gv3) (y :: gv3)), (Permutation (r ++ gv3) (y :: l)), (Permutation (r ++ gv3) (x :: r)), (Permutation (r ++ gv3) (x :: gv3))
(Permutation (r ++ gv3) (selection_sort r)), (Permutation (r ++ gv3) (selection_sort gv3)), (Permutation (r ++ gv3) (selection_sort l)), (Permutation (r ++ gv3) (selsort r y)), (Permutation (r ++ gv3) (selsort r x)), (Permutation (r ++ gv3) (selsort gv3 y)), (Permutation (r ++ gv3) (selsort gv3 x)), (Permutation (r ++ gv3) (selsort l y)), (Permutation (r ++ gv3) (selsort l x)), (Permutation (r ++ gv3) (r ++ r))
(Permutation (r ++ gv3) (gv3 ++ r)), (Permutation (r ++ gv3) (gv3 ++ gv3)), (Permutation (r ++ gv3) (gv3 ++ l)), (Permutation (r ++ gv3) (l ++ r)), (Permutation (r ++ gv3) (l ++ gv3)), (Permutation (r ++ gv3) (l ++ l)), (Permutation (r ++ gv3) []), (Permutation (r ++ l) r), (Permutation (r ++ l) gv3), (Permutation (r ++ l) l)
(Permutation (r ++ l) (y :: gv3)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (x :: gv3)), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort gv3)), (Permutation (r ++ l) (selection_sort l)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r x))
(Permutation (r ++ l) (selsort gv3 x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (r ++ gv3)), (Permutation (r ++ l) (gv3 ++ r)), (Permutation (r ++ l) (gv3 ++ gv3)), (Permutation (r ++ l) (gv3 ++ l)), (Permutation (r ++ l) (l ++ r)), (Permutation (r ++ l) (l ++ gv3))
(Permutation (r ++ l) []), (Permutation (gv3 ++ r) r), (Permutation (gv3 ++ r) gv3), (Permutation (gv3 ++ r) l), (Permutation (gv3 ++ r) (y :: r)), (Permutation (gv3 ++ r) (y :: gv3)), (Permutation (gv3 ++ r) (y :: l)), (Permutation (gv3 ++ r) (x :: r)), (Permutation (gv3 ++ r) (x :: gv3)), (Permutation (gv3 ++ r) (x :: l))
(Permutation (gv3 ++ r) (selection_sort gv3)), (Permutation (gv3 ++ r) (selection_sort l)), (Permutation (gv3 ++ r) (selsort r y)), (Permutation (gv3 ++ r) (selsort r x)), (Permutation (gv3 ++ r) (selsort gv3 y)), (Permutation (gv3 ++ r) (selsort gv3 x)), (Permutation (gv3 ++ r) (selsort l y)), (Permutation (gv3 ++ r) (selsort l x)), (Permutation (gv3 ++ r) (r ++ r)), (Permutation (gv3 ++ r) (r ++ gv3))
(Permutation (gv3 ++ r) (gv3 ++ gv3)), (Permutation (gv3 ++ r) (gv3 ++ l)), (Permutation (gv3 ++ r) (l ++ r)), (Permutation (gv3 ++ r) (l ++ gv3)), (Permutation (gv3 ++ r) (l ++ l)), (Permutation (gv3 ++ r) []), (Permutation (gv3 ++ gv3) r), (Permutation (gv3 ++ gv3) gv3), (Permutation (gv3 ++ gv3) l), (Permutation (gv3 ++ gv3) (y :: r))
(Permutation (gv3 ++ gv3) (y :: l)), (Permutation (gv3 ++ gv3) (x :: r)), (Permutation (gv3 ++ gv3) (x :: gv3)), (Permutation (gv3 ++ gv3) (x :: l)), (Permutation (gv3 ++ gv3) (selection_sort r)), (Permutation (gv3 ++ gv3) (selection_sort gv3)), (Permutation (gv3 ++ gv3) (selection_sort l)), (Permutation (gv3 ++ gv3) (selsort r y)), (Permutation (gv3 ++ gv3) (selsort r x)), (Permutation (gv3 ++ gv3) (selsort gv3 y))
(Permutation (gv3 ++ gv3) (selsort l y)), (Permutation (gv3 ++ gv3) (selsort l x)), (Permutation (gv3 ++ gv3) (r ++ r)), (Permutation (gv3 ++ gv3) (r ++ gv3)), (Permutation (gv3 ++ gv3) (r ++ l)), (Permutation (gv3 ++ gv3) (gv3 ++ r)), (Permutation (gv3 ++ gv3) (gv3 ++ l)), (Permutation (gv3 ++ gv3) (l ++ r)), (Permutation (gv3 ++ gv3) (l ++ gv3)), (Permutation (gv3 ++ gv3) (l ++ l))
(Permutation (gv3 ++ l) r), (Permutation (gv3 ++ l) gv3), (Permutation (gv3 ++ l) l), (Permutation (gv3 ++ l) (y :: r)), (Permutation (gv3 ++ l) (y :: gv3)), (Permutation (gv3 ++ l) (y :: l)), (Permutation (gv3 ++ l) (x :: r)), (Permutation (gv3 ++ l) (x :: gv3)), (Permutation (gv3 ++ l) (x :: l)), (Permutation (gv3 ++ l) (selection_sort r))
(Permutation (gv3 ++ l) (selection_sort l)), (Permutation (gv3 ++ l) (selsort r y)), (Permutation (gv3 ++ l) (selsort r x)), (Permutation (gv3 ++ l) (selsort gv3 y)), (Permutation (gv3 ++ l) (selsort gv3 x)), (Permutation (gv3 ++ l) (selsort l y)), (Permutation (gv3 ++ l) (selsort l x)), (Permutation (gv3 ++ l) (r ++ r)), (Permutation (gv3 ++ l) (r ++ gv3)), (Permutation (gv3 ++ l) (r ++ l))
(Permutation (gv3 ++ l) (gv3 ++ gv3)), (Permutation (gv3 ++ l) (l ++ r)), (Permutation (gv3 ++ l) (l ++ gv3)), (Permutation (gv3 ++ l) (l ++ l)), (Permutation (gv3 ++ l) []), (Permutation (l ++ r) r), (Permutation (l ++ r) gv3), (Permutation (l ++ r) l), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (y :: gv3))
(Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: gv3)), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selection_sort gv3)), (Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort gv3 y)), (Permutation (l ++ r) (selsort gv3 x))
(Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ gv3)), (Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (gv3 ++ r)), (Permutation (l ++ r) (gv3 ++ gv3)), (Permutation (l ++ r) (gv3 ++ l)), (Permutation (l ++ r) (l ++ gv3)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ gv3) gv3), (Permutation (l ++ gv3) l), (Permutation (l ++ gv3) (y :: r)), (Permutation (l ++ gv3) (y :: gv3)), (Permutation (l ++ gv3) (y :: l)), (Permutation (l ++ gv3) (x :: r)), (Permutation (l ++ gv3) (x :: gv3)), (Permutation (l ++ gv3) (x :: l)), (Permutation (l ++ gv3) (selection_sort r)), (Permutation (l ++ gv3) (selection_sort gv3))
(Permutation (l ++ gv3) (selsort r y)), (Permutation (l ++ gv3) (selsort r x)), (Permutation (l ++ gv3) (selsort gv3 y)), (Permutation (l ++ gv3) (selsort gv3 x)), (Permutation (l ++ gv3) (selsort l y)), (Permutation (l ++ gv3) (selsort l x)), (Permutation (l ++ gv3) (r ++ r)), (Permutation (l ++ gv3) (r ++ gv3)), (Permutation (l ++ gv3) (r ++ l)), (Permutation (l ++ gv3) (gv3 ++ r))
(Permutation (l ++ gv3) (gv3 ++ l)), (Permutation (l ++ gv3) (l ++ r)), (Permutation (l ++ gv3) (l ++ l)), (Permutation (l ++ gv3) []), (Permutation (l ++ l) r), (Permutation (l ++ l) gv3), (Permutation (l ++ l) l), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: gv3)), (Permutation (l ++ l) (y :: l))
(Permutation (l ++ l) (x :: gv3)), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort gv3)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort gv3 y)), (Permutation (l ++ l) (selsort gv3 x)), (Permutation (l ++ l) (selsort l y))
(Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ gv3)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (gv3 ++ r)), (Permutation (l ++ l) (gv3 ++ gv3)), (Permutation (l ++ l) (gv3 ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) (l ++ gv3)), (Permutation (l ++ l) []), (Permutation [] r)
(Permutation [] l), (Permutation [] (y :: r)), (Permutation [] (y :: gv3)), (Permutation [] (y :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: gv3)), (Permutation [] (x :: l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort gv3)), (Permutation [] (selection_sort l))
(Permutation [] (selsort r x)), (Permutation [] (selsort gv3 y)), (Permutation [] (selsort gv3 x)), (Permutation [] (selsort l y)), (Permutation [] (selsort l x)), (Permutation [] (r ++ r)), (Permutation [] (r ++ gv3)), (Permutation [] (r ++ l)), (Permutation [] (gv3 ++ r)), (Permutation [] (gv3 ++ gv3))
(Permutation [] (l ++ r)), (Permutation [] (l ++ gv3)), (Permutation [] (l ++ l)), (In y (y :: r)), (In y (y :: gv3)), (In y (y :: l)), (In y (x :: r)), (In y (x :: gv3)), (In y (x :: l)), (In y (selection_sort r))
(In y (selection_sort l)), (In y (selsort r y)), (In y (selsort r x)), (In y (selsort gv3 y)), (In y (selsort gv3 x)), (In y (selsort l y)), (In y (selsort l x)), (In y (r ++ r)), (In y (r ++ gv3)), (In y (r ++ l))
(In y (gv3 ++ gv3)), (In y (gv3 ++ l)), (In y (l ++ r)), (In y (l ++ gv3)), (In y (l ++ l)), (In x (y :: r)), (In x (y :: gv3)), (In x (y :: l)), (In x (x :: r)), (In x (x :: gv3))
(In x (selection_sort r)), (In x (selection_sort gv3)), (In x (selection_sort l)), (In x (selsort r y)), (In x (selsort r x)), (In x (selsort gv3 y)), (In x (selsort gv3 x)), (In x (selsort l y)), (In x (selsort l x)), (In x (r ++ r))
(In x (r ++ l)), (In x (gv3 ++ r)), (In x (gv3 ++ gv3)), (In x (gv3 ++ l)), (In x (l ++ r)), (In x (l ++ gv3)), (In x (l ++ l)), (In (length r) r), (In (length r) gv3), (In (length r) l)
(In (length r) (y :: gv3)), (In (length r) (y :: l)), (In (length r) (x :: r)), (In (length r) (x :: gv3)), (In (length r) (x :: l)), (In (length r) (selection_sort r)), (In (length r) (selection_sort gv3)), (In (length r) (selection_sort l)), (In (length r) (selsort r y)), (In (length r) (selsort r x))
(In (length r) (selsort gv3 x)), (In (length r) (selsort l y)), (In (length r) (selsort l x)), (In (length r) (r ++ r)), (In (length r) (r ++ gv3)), (In (length r) (r ++ l)), (In (length r) (gv3 ++ r)), (In (length r) (gv3 ++ gv3)), (In (length r) (gv3 ++ l)), (In (length r) (l ++ r))
(In (length r) (l ++ l)), (In (length gv3) r), (In (length gv3) gv3), (In (length gv3) l), (In (length gv3) (y :: r)), (In (length gv3) (y :: gv3)), (In (length gv3) (y :: l)), (In (length gv3) (x :: r)), (In (length gv3) (x :: gv3)), (In (length gv3) (x :: l))
(In (length gv3) (selection_sort gv3)), (In (length gv3) (selection_sort l)), (In (length gv3) (selsort r y)), (In (length gv3) (selsort r x)), (In (length gv3) (selsort gv3 y)), (In (length gv3) (selsort gv3 x)), (In (length gv3) (selsort l y)), (In (length gv3) (selsort l x)), (In (length gv3) (r ++ r)), (In (length gv3) (r ++ gv3))
(In (length gv3) (gv3 ++ r)), (In (length gv3) (gv3 ++ gv3)), (In (length gv3) (gv3 ++ l)), (In (length gv3) (l ++ r)), (In (length gv3) (l ++ gv3)), (In (length gv3) (l ++ l)), (In (length l) r), (In (length l) gv3), (In (length l) l), (In (length l) (y :: r))
(In (length l) (y :: l)), (In (length l) (x :: r)), (In (length l) (x :: gv3)), (In (length l) (x :: l)), (In (length l) (selection_sort r)), (In (length l) (selection_sort gv3)), (In (length l) (selection_sort l)), (In (length l) (selsort r y)), (In (length l) (selsort r x)), (In (length l) (selsort gv3 y))
(In (length l) (selsort l y)), (In (length l) (selsort l x)), (In (length l) (r ++ r)), (In (length l) (r ++ gv3)), (In (length l) (r ++ l)), (In (length l) (gv3 ++ r)), (In (length l) (gv3 ++ gv3)), (In (length l) (gv3 ++ l)), (In (length l) (l ++ r)), (In (length l) (l ++ gv3))
(y < length r), (y < length gv3), (y < length l), (x < length r), (x < length gv3), (x < length l), (length r < y), (length r < x), (length r < length gv3), (length r < length l)
(length gv3 < x), (length gv3 < length r), (length gv3 < length l), (length l < y), (length l < x), (length l < length r), (length l < length gv3), (y <= length r), (y <= length gv3), (y <= length l)
(x <= length gv3), (x <= length l), (length r <= y), (length r <= x), (length r <= length gv3), (length r <= length l), (length gv3 <= y), (length gv3 <= x), (length gv3 <= length r), (length gv3 <= length l)
(length l <= x), (length l <= length r), (length l <= length gv3), (~ y <=* r), (~ y <=* gv3), (~ y <=* l), (~ x <=* r), (~ x <=* gv3), (~ x <=* l), (~ sorted r)
(~ sorted l), (~ Permutation r r), (~ Permutation r gv3), (~ Permutation r l), (~ Permutation gv3 r), (~ Permutation gv3 gv3), (~ Permutation gv3 l), (~ Permutation l r), (~ Permutation l gv3), (~ Permutation l l)
(~ In y gv3), (~ In y l), (~ In x r), (~ In x gv3), (~ In x l), (~ y < y), (~ y < x), (~ x < y), (~ x < x), (~ y <= y)
(~ x <= y), (~ x <= x), (r <> r), (r <> gv3), (r <> l), (gv3 <> r), (gv3 <> gv3), (gv3 <> l), (l <> r), (l <> gv3)
(y <> y), (y <> x), (x <> y), (x <> x), (None = Some r), (None = Some gv3), (None = Some l), (y :: r = r), (y :: r = gv3), (y :: r = l)
(y :: r = selection_sort gv3), (y :: r = selection_sort l), (y :: r = selsort r y), (y :: r = selsort r x), (y :: r = selsort gv3 y), (y :: r = selsort gv3 x), (y :: r = selsort l y), (y :: r = selsort l x), (y :: r = r ++ r), (y :: r = r ++ gv3)
(y :: r = gv3 ++ r), (y :: r = gv3 ++ gv3), (y :: r = gv3 ++ l), (y :: r = l ++ r), (y :: r = l ++ gv3), (y :: r = l ++ l), (y :: r = []), (y :: gv3 = r), (y :: gv3 = gv3), (y :: gv3 = l)
(y :: gv3 = selection_sort gv3), (y :: gv3 = selection_sort l), (y :: gv3 = selsort r y), (y :: gv3 = selsort r x), (y :: gv3 = selsort gv3 y), (y :: gv3 = selsort gv3 x), (y :: gv3 = selsort l y), (y :: gv3 = selsort l x), (y :: gv3 = r ++ r), (y :: gv3 = r ++ gv3)
(y :: gv3 = gv3 ++ r), (y :: gv3 = gv3 ++ gv3), (y :: gv3 = gv3 ++ l), (y :: gv3 = l ++ r), (y :: gv3 = l ++ gv3), (y :: gv3 = l ++ l), (y :: gv3 = []), (y :: l = r), (y :: l = gv3), (y :: l = l)
(y :: l = selection_sort gv3), (y :: l = selection_sort l), (y :: l = selsort r y), (y :: l = selsort r x), (y :: l = selsort gv3 y), (y :: l = selsort gv3 x), (y :: l = selsort l y), (y :: l = selsort l x), (y :: l = r ++ r), (y :: l = r ++ gv3)
(y :: l = gv3 ++ r), (y :: l = gv3 ++ gv3), (y :: l = gv3 ++ l), (y :: l = l ++ r), (y :: l = l ++ gv3), (y :: l = l ++ l), (y :: l = []), (x :: r = r), (x :: r = gv3), (x :: r = l)
(x :: r = selection_sort gv3), (x :: r = selection_sort l), (x :: r = selsort r y), (x :: r = selsort r x), (x :: r = selsort gv3 y), (x :: r = selsort gv3 x), (x :: r = selsort l y), (x :: r = selsort l x), (x :: r = r ++ r), (x :: r = r ++ gv3)
(x :: r = gv3 ++ r), (x :: r = gv3 ++ gv3), (x :: r = gv3 ++ l), (x :: r = l ++ r), (x :: r = l ++ gv3), (x :: r = l ++ l), (x :: r = []), (x :: gv3 = r), (x :: gv3 = gv3), (x :: gv3 = l)
(x :: gv3 = selection_sort gv3), (x :: gv3 = selection_sort l), (x :: gv3 = selsort r y), (x :: gv3 = selsort r x), (x :: gv3 = selsort gv3 y), (x :: gv3 = selsort gv3 x), (x :: gv3 = selsort l y), (x :: gv3 = selsort l x), (x :: gv3 = r ++ r), (x :: gv3 = r ++ gv3)
(x :: gv3 = gv3 ++ r), (x :: gv3 = gv3 ++ gv3), (x :: gv3 = gv3 ++ l), (x :: gv3 = l ++ r), (x :: gv3 = l ++ gv3), (x :: gv3 = l ++ l), (x :: gv3 = []), (x :: l = r), (x :: l = gv3), (x :: l = l)
(x :: l = selection_sort gv3), (x :: l = selection_sort l), (x :: l = selsort r y), (x :: l = selsort r x), (x :: l = selsort gv3 y), (x :: l = selsort gv3 x), (x :: l = selsort l y), (x :: l = selsort l x), (x :: l = r ++ r), (x :: l = r ++ gv3)
(x :: l = gv3 ++ r), (x :: l = gv3 ++ gv3), (x :: l = gv3 ++ l), (x :: l = l ++ r), (x :: l = l ++ gv3), (x :: l = l ++ l), (x :: l = []), (selection_sort r = r), (selection_sort r = gv3), (selection_sort r = l)
(selection_sort r = r ++ gv3), (selection_sort r = r ++ l), (selection_sort r = gv3 ++ r), (selection_sort r = gv3 ++ gv3), (selection_sort r = gv3 ++ l), (selection_sort r = l ++ r), (selection_sort r = l ++ gv3), (selection_sort r = l ++ l), (selection_sort gv3 = r), (selection_sort gv3 = gv3)
(selection_sort gv3 = r ++ r), (selection_sort gv3 = r ++ gv3), (selection_sort gv3 = r ++ l), (selection_sort gv3 = gv3 ++ r), (selection_sort gv3 = gv3 ++ gv3), (selection_sort gv3 = gv3 ++ l), (selection_sort gv3 = l ++ r), (selection_sort gv3 = l ++ gv3), (selection_sort gv3 = l ++ l), (selection_sort l = r)
(selection_sort l = l), (selection_sort l = r ++ r), (selection_sort l = r ++ gv3), (selection_sort l = r ++ l), (selection_sort l = gv3 ++ r), (selection_sort l = gv3 ++ gv3), (selection_sort l = gv3 ++ l), (selection_sort l = l ++ r), (selection_sort l = l ++ gv3), (selection_sort l = l ++ l)
(selsort r y = gv3), (selsort r y = l), (selsort r y = selection_sort r), (selsort r y = selection_sort gv3), (selsort r y = selection_sort l), (selsort r y = r ++ r), (selsort r y = r ++ gv3), (selsort r y = r ++ l), (selsort r y = gv3 ++ r), (selsort r y = gv3 ++ gv3)
(selsort r y = l ++ r), (selsort r y = l ++ gv3), (selsort r y = l ++ l), (selsort r x = r), (selsort r x = gv3), (selsort r x = l), (selsort r x = selection_sort r), (selsort r x = selection_sort gv3), (selsort r x = selection_sort l), (selsort r x = r ++ r)
(selsort r x = r ++ l), (selsort r x = gv3 ++ r), (selsort r x = gv3 ++ gv3), (selsort r x = gv3 ++ l), (selsort r x = l ++ r), (selsort r x = l ++ gv3), (selsort r x = l ++ l), (selsort gv3 y = r), (selsort gv3 y = gv3), (selsort gv3 y = l)
(selsort gv3 y = selection_sort gv3), (selsort gv3 y = selection_sort l), (selsort gv3 y = r ++ r), (selsort gv3 y = r ++ gv3), (selsort gv3 y = r ++ l), (selsort gv3 y = gv3 ++ r), (selsort gv3 y = gv3 ++ gv3), (selsort gv3 y = gv3 ++ l), (selsort gv3 y = l ++ r), (selsort gv3 y = l ++ gv3)
(selsort gv3 x = r), (selsort gv3 x = gv3), (selsort gv3 x = l), (selsort gv3 x = selection_sort r), (selsort gv3 x = selection_sort gv3), (selsort gv3 x = selection_sort l), (selsort gv3 x = r ++ r), (selsort gv3 x = r ++ gv3), (selsort gv3 x = r ++ l), (selsort gv3 x = gv3 ++ r)
(selsort gv3 x = gv3 ++ l), (selsort gv3 x = l ++ r), (selsort gv3 x = l ++ gv3), (selsort gv3 x = l ++ l), (selsort l y = r), (selsort l y = gv3), (selsort l y = l), (selsort l y = selection_sort r), (selsort l y = selection_sort gv3), (selsort l y = selection_sort l)
(selsort l y = r ++ gv3), (selsort l y = r ++ l), (selsort l y = gv3 ++ r), (selsort l y = gv3 ++ gv3), (selsort l y = gv3 ++ l), (selsort l y = l ++ r), (selsort l y = l ++ gv3), (selsort l y = l ++ l), (selsort l x = r), (selsort l x = gv3)
(selsort l x = selection_sort r), (selsort l x = selection_sort gv3), (selsort l x = selection_sort l), (selsort l x = r ++ r), (selsort l x = r ++ gv3), (selsort l x = r ++ l), (selsort l x = gv3 ++ r), (selsort l x = gv3 ++ gv3), (selsort l x = gv3 ++ l), (selsort l x = l ++ r)
(selsort l x = l ++ l), (r ++ r = r), (r ++ r = gv3), (r ++ r = l), (r ++ gv3 = r), (r ++ gv3 = gv3), (r ++ gv3 = l), (r ++ l = r), (r ++ l = gv3), (r ++ l = l)
(gv3 ++ r = gv3), (gv3 ++ r = l), (gv3 ++ gv3 = r), (gv3 ++ gv3 = gv3), (gv3 ++ gv3 = l), (gv3 ++ l = r), (gv3 ++ l = gv3), (gv3 ++ l = l), (l ++ r = r), (l ++ r = gv3)
(l ++ gv3 = r), (l ++ gv3 = gv3), (l ++ gv3 = l), (l ++ l = r), (l ++ l = gv3), (l ++ l = l), ([] = r), ([] = gv3), ([] = l), ([] = selection_sort r)
([] = selection_sort l), ([] = selsort r y), ([] = selsort r x), ([] = selsort gv3 y), ([] = selsort gv3 x), ([] = selsort l y), ([] = selsort l x), ([] = r ++ r), ([] = r ++ gv3), ([] = r ++ l)
([] = gv3 ++ gv3), ([] = gv3 ++ l), ([] = l ++ r), ([] = l ++ gv3), ([] = l ++ l), (None = Some y), (None = Some x), ((y, r) = select y r), ((y, r) = select y gv3), ((y, r) = select y l)
((y, r) = select x gv3), ((y, r) = select x l), ((y, gv3) = select y r), ((y, gv3) = select y gv3), ((y, gv3) = select y l), ((y, gv3) = select x r), ((y, gv3) = select x gv3), ((y, gv3) = select x l), ((y, l) = select y r), ((y, l) = select y gv3)
((y, l) = select x r), ((y, l) = select x gv3), ((y, l) = select x l), ((x, r) = select y r), ((x, r) = select y gv3), ((x, r) = select y l), ((x, r) = select x r), ((x, r) = select x gv3), ((x, r) = select x l), ((x, gv3) = select y r)
((x, gv3) = select y l), ((x, gv3) = select x r), ((x, gv3) = select x gv3), ((x, gv3) = select x l), ((x, l) = select y r), ((x, l) = select y gv3), ((x, l) = select y l), ((x, l) = select x r), ((x, l) = select x gv3), ((x, l) = select x l)
(length r = x), (length gv3 = y), (length gv3 = x), (length l = y), (length l = x)

Label: 2 (4)
(x <=* l), (x <=* r), (y <=* l), (y <=* r), (gv0 <=* l), (gv0 <=* r), (sorted l), (sorted r), (Permutation l l), (Permutation l r)
(Permutation r r), (In x l), (In x r), (In y l), (In y r), (In gv0 l), (In gv0 r), (x < x), (x < y), (x < gv0)
(y < y), (y < gv0), (gv0 < x), (gv0 < y), (gv0 < gv0), (x <= x), (x <= y), (x <= gv0), (y <= x), (y <= y)
(gv0 <= x), (gv0 <= y), (gv0 <= gv0), (l = l), (l = r), (r = l), (r = r), (x = x), (x = y), (x = gv0)
(y = y), (y = gv0), (gv0 = x), (gv0 = y), (gv0 = gv0), (false = sorted_bool l), (false = sorted_bool r), (true = sorted_bool l), (true = sorted_bool r), (x <=* x :: l)
(x <=* y :: l), (x <=* y :: r), (x <=* gv0 :: l), (x <=* gv0 :: r), (x <=* selection_sort l), (x <=* selection_sort r), (x <=* selsort l x), (x <=* selsort l y), (x <=* selsort l gv0), (x <=* selsort r x)
(x <=* selsort r gv0), (x <=* l ++ l), (x <=* l ++ r), (x <=* r ++ l), (x <=* r ++ r), (x <=* []), (y <=* x :: l), (y <=* x :: r), (y <=* y :: l), (y <=* y :: r)
(y <=* gv0 :: r), (y <=* selection_sort l), (y <=* selection_sort r), (y <=* selsort l x), (y <=* selsort l y), (y <=* selsort l gv0), (y <=* selsort r x), (y <=* selsort r y), (y <=* selsort r gv0), (y <=* l ++ l)
(y <=* r ++ l), (y <=* r ++ r), (y <=* []), (gv0 <=* x :: l), (gv0 <=* x :: r), (gv0 <=* y :: l), (gv0 <=* y :: r), (gv0 <=* gv0 :: l), (gv0 <=* gv0 :: r), (gv0 <=* selection_sort l)
(gv0 <=* selsort l x), (gv0 <=* selsort l y), (gv0 <=* selsort l gv0), (gv0 <=* selsort r x), (gv0 <=* selsort r y), (gv0 <=* selsort r gv0), (gv0 <=* l ++ l), (gv0 <=* l ++ r), (gv0 <=* r ++ l), (gv0 <=* r ++ r)
(length l <=* l), (length l <=* r), (length l <=* x :: l), (length l <=* x :: r), (length l <=* y :: l), (length l <=* y :: r), (length l <=* gv0 :: l), (length l <=* gv0 :: r), (length l <=* selection_sort l), (length l <=* selection_sort r)
(length l <=* selsort l y), (length l <=* selsort l gv0), (length l <=* selsort r x), (length l <=* selsort r y), (length l <=* selsort r gv0), (length l <=* l ++ l), (length l <=* l ++ r), (length l <=* r ++ l), (length l <=* r ++ r), (length l <=* [])
(length r <=* r), (length r <=* x :: l), (length r <=* x :: r), (length r <=* y :: l), (length r <=* y :: r), (length r <=* gv0 :: l), (length r <=* gv0 :: r), (length r <=* selection_sort l), (length r <=* selection_sort r), (length r <=* selsort l x)
(length r <=* selsort l gv0), (length r <=* selsort r x), (length r <=* selsort r y), (length r <=* selsort r gv0), (length r <=* l ++ l), (length r <=* l ++ r), (length r <=* r ++ l), (length r <=* r ++ r), (length r <=* []), (sorted (x :: l))
(sorted (y :: l)), (sorted (y :: r)), (sorted (gv0 :: l)), (sorted (gv0 :: r)), (sorted (selection_sort l)), (sorted (selection_sort r)), (sorted (selsort l x)), (sorted (selsort l y)), (sorted (selsort l gv0)), (sorted (selsort r x))
(sorted (selsort r gv0)), (sorted (l ++ l)), (sorted (l ++ r)), (sorted (r ++ l)), (sorted (r ++ r)), (sorted []), (Permutation l (x :: l)), (Permutation l (x :: r)), (Permutation l (y :: l)), (Permutation l (y :: r))
(Permutation l (gv0 :: r)), (Permutation l (selection_sort l)), (Permutation l (selection_sort r)), (Permutation l (selsort l x)), (Permutation l (selsort l y)), (Permutation l (selsort l gv0)), (Permutation l (selsort r x)), (Permutation l (selsort r y)), (Permutation l (selsort r gv0)), (Permutation l (l ++ l))
(Permutation l (r ++ l)), (Permutation l (r ++ r)), (Permutation l []), (Permutation r (x :: l)), (Permutation r (x :: r)), (Permutation r (y :: l)), (Permutation r (y :: r)), (Permutation r (gv0 :: l)), (Permutation r (gv0 :: r)), (Permutation r (selection_sort l))
(Permutation r (selsort l x)), (Permutation r (selsort l y)), (Permutation r (selsort l gv0)), (Permutation r (selsort r x)), (Permutation r (selsort r y)), (Permutation r (selsort r gv0)), (Permutation r (l ++ l)), (Permutation r (l ++ r)), (Permutation r (r ++ l)), (Permutation r (r ++ r))
(Permutation (x :: l) l), (Permutation (x :: l) r), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (gv0 :: l)), (Permutation (x :: l) (gv0 :: r)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selsort l x))
(Permutation (x :: l) (selsort l gv0)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort r gv0)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) []), (Permutation (x :: r) l)
(Permutation (x :: r) (x :: l)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (gv0 :: l)), (Permutation (x :: r) (gv0 :: r)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l gv0))
(Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r gv0)), (Permutation (x :: r) (l ++ l)), (Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) []), (Permutation (y :: l) l), (Permutation (y :: l) r), (Permutation (y :: l) (x :: l))
(Permutation (y :: l) (y :: r)), (Permutation (y :: l) (gv0 :: l)), (Permutation (y :: l) (gv0 :: r)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort l gv0)), (Permutation (y :: l) (selsort r x)), (Permutation (y :: l) (selsort r y))
(Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ r)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) []), (Permutation (y :: r) l), (Permutation (y :: r) r), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (y :: l))
(Permutation (y :: r) (gv0 :: r)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l gv0)), (Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort r y)), (Permutation (y :: r) (selsort r gv0)), (Permutation (y :: r) (l ++ l))
(Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) []), (Permutation (gv0 :: l) l), (Permutation (gv0 :: l) r), (Permutation (gv0 :: l) (x :: l)), (Permutation (gv0 :: l) (x :: r)), (Permutation (gv0 :: l) (y :: l)), (Permutation (gv0 :: l) (y :: r)), (Permutation (gv0 :: l) (gv0 :: r))
(Permutation (gv0 :: l) (selection_sort r)), (Permutation (gv0 :: l) (selsort l x)), (Permutation (gv0 :: l) (selsort l y)), (Permutation (gv0 :: l) (selsort l gv0)), (Permutation (gv0 :: l) (selsort r x)), (Permutation (gv0 :: l) (selsort r y)), (Permutation (gv0 :: l) (selsort r gv0)), (Permutation (gv0 :: l) (l ++ l)), (Permutation (gv0 :: l) (l ++ r)), (Permutation (gv0 :: l) (r ++ l))
(Permutation (gv0 :: l) []), (Permutation (gv0 :: r) l), (Permutation (gv0 :: r) r), (Permutation (gv0 :: r) (x :: l)), (Permutation (gv0 :: r) (x :: r)), (Permutation (gv0 :: r) (y :: l)), (Permutation (gv0 :: r) (y :: r)), (Permutation (gv0 :: r) (gv0 :: l)), (Permutation (gv0 :: r) (selection_sort l)), (Permutation (gv0 :: r) (selection_sort r))
(Permutation (gv0 :: r) (selsort l y)), (Permutation (gv0 :: r) (selsort l gv0)), (Permutation (gv0 :: r) (selsort r x)), (Permutation (gv0 :: r) (selsort r y)), (Permutation (gv0 :: r) (selsort r gv0)), (Permutation (gv0 :: r) (l ++ l)), (Permutation (gv0 :: r) (l ++ r)), (Permutation (gv0 :: r) (r ++ l)), (Permutation (gv0 :: r) (r ++ r)), (Permutation (gv0 :: r) [])
(Permutation (selection_sort l) r), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: r)), (Permutation (selection_sort l) (gv0 :: l)), (Permutation (selection_sort l) (gv0 :: r)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r gv0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) []), (Permutation (selection_sort r) l), (Permutation (selection_sort r) r)
(Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (gv0 :: l)), (Permutation (selection_sort r) (gv0 :: r)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l gv0)), (Permutation (selection_sort r) (selsort r x))
(Permutation (selection_sort r) (selsort r gv0)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) []), (Permutation (selsort l x) l), (Permutation (selsort l x) r), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (x :: r))
(Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (gv0 :: l)), (Permutation (selsort l x) (gv0 :: r)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (selsort l gv0)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r gv0))
(Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (r ++ r)), (Permutation (selsort l x) []), (Permutation (selsort l y) l), (Permutation (selsort l y) r), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: r))
(Permutation (selsort l y) (gv0 :: r)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (selsort l gv0)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort r y)), (Permutation (selsort l y) (selsort r gv0)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ r))
(Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) []), (Permutation (selsort l gv0) l), (Permutation (selsort l gv0) r), (Permutation (selsort l gv0) (x :: l)), (Permutation (selsort l gv0) (x :: r)), (Permutation (selsort l gv0) (y :: l)), (Permutation (selsort l gv0) (y :: r)), (Permutation (selsort l gv0) (gv0 :: l)), (Permutation (selsort l gv0) (gv0 :: r))
(Permutation (selsort l gv0) (selection_sort r)), (Permutation (selsort l gv0) (selsort l x)), (Permutation (selsort l gv0) (selsort l y)), (Permutation (selsort l gv0) (selsort r x)), (Permutation (selsort l gv0) (selsort r y)), (Permutation (selsort l gv0) (selsort r gv0)), (Permutation (selsort l gv0) (l ++ l)), (Permutation (selsort l gv0) (l ++ r)), (Permutation (selsort l gv0) (r ++ l)), (Permutation (selsort l gv0) (r ++ r))
(Permutation (selsort r x) l), (Permutation (selsort r x) r), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (gv0 :: l)), (Permutation (selsort r x) (gv0 :: r)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selection_sort r))
(Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort l gv0)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort r gv0)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) []), (Permutation (selsort r y) l)
(Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (y :: l)), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (gv0 :: l)), (Permutation (selsort r y) (gv0 :: r)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (selsort l y))
(Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort r gv0)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) []), (Permutation (selsort r gv0) l), (Permutation (selsort r gv0) r), (Permutation (selsort r gv0) (x :: l))
(Permutation (selsort r gv0) (y :: l)), (Permutation (selsort r gv0) (y :: r)), (Permutation (selsort r gv0) (gv0 :: l)), (Permutation (selsort r gv0) (gv0 :: r)), (Permutation (selsort r gv0) (selection_sort l)), (Permutation (selsort r gv0) (selection_sort r)), (Permutation (selsort r gv0) (selsort l x)), (Permutation (selsort r gv0) (selsort l y)), (Permutation (selsort r gv0) (selsort l gv0)), (Permutation (selsort r gv0) (selsort r x))
(Permutation (selsort r gv0) (l ++ l)), (Permutation (selsort r gv0) (l ++ r)), (Permutation (selsort r gv0) (r ++ l)), (Permutation (selsort r gv0) (r ++ r)), (Permutation (selsort r gv0) []), (Permutation (l ++ l) l), (Permutation (l ++ l) r), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (y :: l))
(Permutation (l ++ l) (gv0 :: l)), (Permutation (l ++ l) (gv0 :: r)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selsort l x)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort l gv0)), (Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort r gv0))
(Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) []), (Permutation (l ++ r) l), (Permutation (l ++ r) r), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (gv0 :: l))
(Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort l gv0)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r gv0)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) (r ++ l))
(Permutation (l ++ r) []), (Permutation (r ++ l) l), (Permutation (r ++ l) r), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (gv0 :: l)), (Permutation (r ++ l) (gv0 :: r)), (Permutation (r ++ l) (selection_sort l))
(Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l gv0)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r gv0)), (Permutation (r ++ l) (l ++ l)), (Permutation (r ++ l) (l ++ r)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) [])
(Permutation (r ++ r) r), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (gv0 :: l)), (Permutation (r ++ r) (gv0 :: r)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selsort l x))
(Permutation (r ++ r) (selsort l gv0)), (Permutation (r ++ r) (selsort r x)), (Permutation (r ++ r) (selsort r y)), (Permutation (r ++ r) (selsort r gv0)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) []), (Permutation [] l), (Permutation [] r)
(Permutation [] (x :: r)), (Permutation [] (y :: l)), (Permutation [] (y :: r)), (Permutation [] (gv0 :: l)), (Permutation [] (gv0 :: r)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort r)), (Permutation [] (selsort l x)), (Permutation [] (selsort l y)), (Permutation [] (selsort l gv0))
(Permutation [] (selsort r y)), (Permutation [] (selsort r gv0)), (Permutation [] (l ++ l)), (Permutation [] (l ++ r)), (Permutation [] (r ++ l)), (Permutation [] (r ++ r)), (In x (x :: l)), (In x (x :: r)), (In x (y :: l)), (In x (y :: r))
(In x (gv0 :: r)), (In x (selection_sort l)), (In x (selection_sort r)), (In x (selsort l x)), (In x (selsort l y)), (In x (selsort l gv0)), (In x (selsort r x)), (In x (selsort r y)), (In x (selsort r gv0)), (In x (l ++ l))
(In x (r ++ l)), (In x (r ++ r)), (In y (x :: l)), (In y (x :: r)), (In y (y :: l)), (In y (y :: r)), (In y (gv0 :: l)), (In y (gv0 :: r)), (In y (selection_sort l)), (In y (selection_sort r))
(In y (selsort l y)), (In y (selsort l gv0)), (In y (selsort r x)), (In y (selsort r y)), (In y (selsort r gv0)), (In y (l ++ l)), (In y (l ++ r)), (In y (r ++ l)), (In y (r ++ r)), (In gv0 (x :: l))
(In gv0 (y :: l)), (In gv0 (y :: r)), (In gv0 (gv0 :: l)), (In gv0 (gv0 :: r)), (In gv0 (selection_sort l)), (In gv0 (selection_sort r)), (In gv0 (selsort l x)), (In gv0 (selsort l y)), (In gv0 (selsort l gv0)), (In gv0 (selsort r x))
(In gv0 (selsort r gv0)), (In gv0 (l ++ l)), (In gv0 (l ++ r)), (In gv0 (r ++ l)), (In gv0 (r ++ r)), (In (length l) l), (In (length l) r), (In (length l) (x :: l)), (In (length l) (x :: r)), (In (length l) (y :: l))
(In (length l) (gv0 :: l)), (In (length l) (gv0 :: r)), (In (length l) (selection_sort l)), (In (length l) (selection_sort r)), (In (length l) (selsort l x)), (In (length l) (selsort l y)), (In (length l) (selsort l gv0)), (In (length l) (selsort r x)), (In (length l) (selsort r y)), (In (length l) (selsort r gv0))
(In (length l) (l ++ r)), (In (length l) (r ++ l)), (In (length l) (r ++ r)), (In (length r) l), (In (length r) r), (In (length r) (x :: l)), (In (length r) (x :: r)), (In (length r) (y :: l)), (In (length r) (y :: r)), (In (length r) (gv0 :: l))
(In (length r) (selection_sort l)), (In (length r) (selection_sort r)), (In (length r) (selsort l x)), (In (length r) (selsort l y)), (In (length r) (selsort l gv0)), (In (length r) (selsort r x)), (In (length r) (selsort r y)), (In (length r) (selsort r gv0)), (In (length r) (l ++ l)), (In (length r) (l ++ r))
(In (length r) (r ++ r)), (x < length l), (x < length r), (y < length l), (y < length r), (gv0 < length l), (gv0 < length r), (length l < x), (length l < y), (length l < gv0)
(length r < x), (length r < y), (length r < gv0), (length r < length l), (x <= length l), (x <= length r), (y <= length l), (y <= length r), (gv0 <= length l), (gv0 <= length r)
(length l <= y), (length l <= gv0), (length l <= length r), (length r <= x), (length r <= y), (length r <= gv0), (length r <= length l), (~ x <=* l), (~ x <=* r), (~ y <=* l)
(~ gv0 <=* l), (~ gv0 <=* r), (~ sorted l), (~ sorted r), (~ Permutation l l), (~ Permutation l r), (~ Permutation r l), (~ Permutation r r), (~ In x l), (~ In x r)
(~ In y r), (~ In gv0 l), (~ In gv0 r), (~ x < x), (~ x < y), (~ x < gv0), (~ y < x), (~ y < y), (~ y < gv0), (~ gv0 < x)
(~ gv0 < gv0), (~ x <= x), (~ x <= y), (~ x <= gv0), (~ y <= x), (~ y <= y), (~ y <= gv0), (~ gv0 <= x), (~ gv0 <= y), (~ gv0 <= gv0)
(l <> r), (r <> l), (r <> r), (x <> x), (x <> y), (x <> gv0), (y <> x), (y <> y), (y <> gv0), (gv0 <> x)
(gv0 <> gv0), (None = Some l), (None = Some r), (x :: l = l), (x :: l = r), (x :: l = selection_sort l), (x :: l = selection_sort r), (x :: l = selsort l x), (x :: l = selsort l y), (x :: l = selsort l gv0)
(x :: l = selsort r y), (x :: l = selsort r gv0), (x :: l = l ++ l), (x :: l = l ++ r), (x :: l = r ++ l), (x :: l = r ++ r), (x :: l = []), (x :: r = l), (x :: r = r), (x :: r = selection_sort l)
(x :: r = selsort l x), (x :: r = selsort l y), (x :: r = selsort l gv0), (x :: r = selsort r x), (x :: r = selsort r y), (x :: r = selsort r gv0), (x :: r = l ++ l), (x :: r = l ++ r), (x :: r = r ++ l), (x :: r = r ++ r)
(y :: l = l), (y :: l = r), (y :: l = selection_sort l), (y :: l = selection_sort r), (y :: l = selsort l x), (y :: l = selsort l y), (y :: l = selsort l gv0), (y :: l = selsort r x), (y :: l = selsort r y), (y :: l = selsort r gv0)
(y :: l = l ++ r), (y :: l = r ++ l), (y :: l = r ++ r), (y :: l = []), (y :: r = l), (y :: r = r), (y :: r = selection_sort l), (y :: r = selection_sort r), (y :: r = selsort l x), (y :: r = selsort l y)
(y :: r = selsort r x), (y :: r = selsort r y), (y :: r = selsort r gv0), (y :: r = l ++ l), (y :: r = l ++ r), (y :: r = r ++ l), (y :: r = r ++ r), (y :: r = []), (gv0 :: l = l), (gv0 :: l = r)
(gv0 :: l = selection_sort r), (gv0 :: l = selsort l x), (gv0 :: l = selsort l y), (gv0 :: l = selsort l gv0), (gv0 :: l = selsort r x), (gv0 :: l = selsort r y), (gv0 :: l = selsort r gv0), (gv0 :: l = l ++ l), (gv0 :: l = l ++ r), (gv0 :: l = r ++ l)
(gv0 :: l = []), (gv0 :: r = l), (gv0 :: r = r), (gv0 :: r = selection_sort l), (gv0 :: r = selection_sort r), (gv0 :: r = selsort l x), (gv0 :: r = selsort l y), (gv0 :: r = selsort l gv0), (gv0 :: r = selsort r x), (gv0 :: r = selsort r y)
(gv0 :: r = l ++ l), (gv0 :: r = l ++ r), (gv0 :: r = r ++ l), (gv0 :: r = r ++ r), (gv0 :: r = []), (selection_sort l = l), (selection_sort l = r), (selection_sort l = l ++ l), (selection_sort l = l ++ r), (selection_sort l = r ++ l)
(selection_sort r = l), (selection_sort r = r), (selection_sort r = l ++ l), (selection_sort r = l ++ r), (selection_sort r = r ++ l), (selection_sort r = r ++ r), (selsort l x = l), (selsort l x = r), (selsort l x = selection_sort l), (selsort l x = selection_sort r)
(selsort l x = l ++ r), (selsort l x = r ++ l), (selsort l x = r ++ r), (selsort l y = l), (selsort l y = r), (selsort l y = selection_sort l), (selsort l y = selection_sort r), (selsort l y = l ++ l), (selsort l y = l ++ r), (selsort l y = r ++ l)
(selsort l gv0 = l), (selsort l gv0 = r), (selsort l gv0 = selection_sort l), (selsort l gv0 = selection_sort r), (selsort l gv0 = l ++ l), (selsort l gv0 = l ++ r), (selsort l gv0 = r ++ l), (selsort l gv0 = r ++ r), (selsort r x = l), (selsort r x = r)
(selsort r x = selection_sort r), (selsort r x = l ++ l), (selsort r x = l ++ r), (selsort r x = r ++ l), (selsort r x = r ++ r), (selsort r y = l), (selsort r y = r), (selsort r y = selection_sort l), (selsort r y = selection_sort r), (selsort r y = l ++ l)
(selsort r y = r ++ l), (selsort r y = r ++ r), (selsort r gv0 = l), (selsort r gv0 = r), (selsort r gv0 = selection_sort l), (selsort r gv0 = selection_sort r), (selsort r gv0 = l ++ l), (selsort r gv0 = l ++ r), (selsort r gv0 = r ++ l), (selsort r gv0 = r ++ r)
(l ++ l = r), (l ++ r = l), (l ++ r = r), (r ++ l = l), (r ++ l = r), (r ++ r = l), (r ++ r = r), ([] = l), ([] = r), ([] = selection_sort l)
([] = selsort l x), ([] = selsort l y), ([] = selsort l gv0), ([] = selsort r x), ([] = selsort r y), ([] = selsort r gv0), ([] = l ++ l), ([] = l ++ r), ([] = r ++ l), ([] = r ++ r)
(None = Some y), (None = Some gv0), ((x, l) = select x l), ((x, l) = select x r), ((x, l) = select y l), ((x, l) = select y r), ((x, l) = select gv0 l), ((x, l) = select gv0 r), ((x, r) = select x l), ((x, r) = select x r)
((x, r) = select y r), ((x, r) = select gv0 l), ((x, r) = select gv0 r), ((y, l) = select x l), ((y, l) = select x r), ((y, l) = select y l), ((y, l) = select y r), ((y, l) = select gv0 l), ((y, l) = select gv0 r), ((y, r) = select x l)
((y, r) = select y l), ((y, r) = select y r), ((y, r) = select gv0 l), ((y, r) = select gv0 r), ((gv0, l) = select x l), ((gv0, l) = select x r), ((gv0, l) = select y l), ((gv0, l) = select y r), ((gv0, l) = select gv0 l), ((gv0, l) = select gv0 r)
((gv0, r) = select x r), ((gv0, r) = select y l), ((gv0, r) = select y r), ((gv0, r) = select gv0 l), ((gv0, r) = select gv0 r), (length l = x), (length l = y), (length l = gv0), (length r = x), (length r = y)

Label: 2 (5)
(x <=* l), (x <=* r), (y <=* l), (y <=* r), (gv0 <=* l), (gv0 <=* r), (sorted l), (sorted r), (Permutation l l), (Permutation l r)
(Permutation r r), (In x l), (In x r), (In y l), (In y r), (In gv0 l), (In gv0 r), (x < x), (x < y), (x < gv0)
(y < y), (y < gv0), (gv0 < x), (gv0 < y), (gv0 < gv0), (x <= x), (x <= y), (x <= gv0), (y <= x), (y <= y)
(gv0 <= x), (gv0 <= y), (gv0 <= gv0), (l = l), (l = r), (r = l), (r = r), (x = x), (x = y), (x = gv0)
(y = y), (y = gv0), (gv0 = x), (gv0 = y), (gv0 = gv0), (false = sorted_bool l), (false = sorted_bool r), (true = sorted_bool l), (true = sorted_bool r), (x <=* x :: l)
(x <=* y :: l), (x <=* y :: r), (x <=* gv0 :: l), (x <=* gv0 :: r), (x <=* selection_sort l), (x <=* selection_sort r), (x <=* selsort l x), (x <=* selsort l y), (x <=* selsort l gv0), (x <=* selsort r x)
(x <=* selsort r gv0), (x <=* l ++ l), (x <=* l ++ r), (x <=* r ++ l), (x <=* r ++ r), (x <=* []), (y <=* x :: l), (y <=* x :: r), (y <=* y :: l), (y <=* y :: r)
(y <=* gv0 :: r), (y <=* selection_sort l), (y <=* selection_sort r), (y <=* selsort l x), (y <=* selsort l y), (y <=* selsort l gv0), (y <=* selsort r x), (y <=* selsort r y), (y <=* selsort r gv0), (y <=* l ++ l)
(y <=* r ++ l), (y <=* r ++ r), (y <=* []), (gv0 <=* x :: l), (gv0 <=* x :: r), (gv0 <=* y :: l), (gv0 <=* y :: r), (gv0 <=* gv0 :: l), (gv0 <=* gv0 :: r), (gv0 <=* selection_sort l)
(gv0 <=* selsort l x), (gv0 <=* selsort l y), (gv0 <=* selsort l gv0), (gv0 <=* selsort r x), (gv0 <=* selsort r y), (gv0 <=* selsort r gv0), (gv0 <=* l ++ l), (gv0 <=* l ++ r), (gv0 <=* r ++ l), (gv0 <=* r ++ r)
(length l <=* l), (length l <=* r), (length l <=* x :: l), (length l <=* x :: r), (length l <=* y :: l), (length l <=* y :: r), (length l <=* gv0 :: l), (length l <=* gv0 :: r), (length l <=* selection_sort l), (length l <=* selection_sort r)
(length l <=* selsort l y), (length l <=* selsort l gv0), (length l <=* selsort r x), (length l <=* selsort r y), (length l <=* selsort r gv0), (length l <=* l ++ l), (length l <=* l ++ r), (length l <=* r ++ l), (length l <=* r ++ r), (length l <=* [])
(length r <=* r), (length r <=* x :: l), (length r <=* x :: r), (length r <=* y :: l), (length r <=* y :: r), (length r <=* gv0 :: l), (length r <=* gv0 :: r), (length r <=* selection_sort l), (length r <=* selection_sort r), (length r <=* selsort l x)
(length r <=* selsort l gv0), (length r <=* selsort r x), (length r <=* selsort r y), (length r <=* selsort r gv0), (length r <=* l ++ l), (length r <=* l ++ r), (length r <=* r ++ l), (length r <=* r ++ r), (length r <=* []), (sorted (x :: l))
(sorted (y :: l)), (sorted (y :: r)), (sorted (gv0 :: l)), (sorted (gv0 :: r)), (sorted (selection_sort l)), (sorted (selection_sort r)), (sorted (selsort l x)), (sorted (selsort l y)), (sorted (selsort l gv0)), (sorted (selsort r x))
(sorted (selsort r gv0)), (sorted (l ++ l)), (sorted (l ++ r)), (sorted (r ++ l)), (sorted (r ++ r)), (sorted []), (Permutation l (x :: l)), (Permutation l (x :: r)), (Permutation l (y :: l)), (Permutation l (y :: r))
(Permutation l (gv0 :: r)), (Permutation l (selection_sort l)), (Permutation l (selection_sort r)), (Permutation l (selsort l x)), (Permutation l (selsort l y)), (Permutation l (selsort l gv0)), (Permutation l (selsort r x)), (Permutation l (selsort r y)), (Permutation l (selsort r gv0)), (Permutation l (l ++ l))
(Permutation l (r ++ l)), (Permutation l (r ++ r)), (Permutation l []), (Permutation r (x :: l)), (Permutation r (x :: r)), (Permutation r (y :: l)), (Permutation r (y :: r)), (Permutation r (gv0 :: l)), (Permutation r (gv0 :: r)), (Permutation r (selection_sort l))
(Permutation r (selsort l x)), (Permutation r (selsort l y)), (Permutation r (selsort l gv0)), (Permutation r (selsort r x)), (Permutation r (selsort r y)), (Permutation r (selsort r gv0)), (Permutation r (l ++ l)), (Permutation r (l ++ r)), (Permutation r (r ++ l)), (Permutation r (r ++ r))
(Permutation (x :: l) l), (Permutation (x :: l) r), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (gv0 :: l)), (Permutation (x :: l) (gv0 :: r)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selsort l x))
(Permutation (x :: l) (selsort l gv0)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort r gv0)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) []), (Permutation (x :: r) l)
(Permutation (x :: r) (x :: l)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (gv0 :: l)), (Permutation (x :: r) (gv0 :: r)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l gv0))
(Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r gv0)), (Permutation (x :: r) (l ++ l)), (Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) []), (Permutation (y :: l) l), (Permutation (y :: l) r), (Permutation (y :: l) (x :: l))
(Permutation (y :: l) (y :: r)), (Permutation (y :: l) (gv0 :: l)), (Permutation (y :: l) (gv0 :: r)), (Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort l gv0)), (Permutation (y :: l) (selsort r x)), (Permutation (y :: l) (selsort r y))
(Permutation (y :: l) (l ++ l)), (Permutation (y :: l) (l ++ r)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) []), (Permutation (y :: r) l), (Permutation (y :: r) r), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (y :: l))
(Permutation (y :: r) (gv0 :: r)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (selsort l y)), (Permutation (y :: r) (selsort l gv0)), (Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort r y)), (Permutation (y :: r) (selsort r gv0)), (Permutation (y :: r) (l ++ l))
(Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) []), (Permutation (gv0 :: l) l), (Permutation (gv0 :: l) r), (Permutation (gv0 :: l) (x :: l)), (Permutation (gv0 :: l) (x :: r)), (Permutation (gv0 :: l) (y :: l)), (Permutation (gv0 :: l) (y :: r)), (Permutation (gv0 :: l) (gv0 :: r))
(Permutation (gv0 :: l) (selection_sort r)), (Permutation (gv0 :: l) (selsort l x)), (Permutation (gv0 :: l) (selsort l y)), (Permutation (gv0 :: l) (selsort l gv0)), (Permutation (gv0 :: l) (selsort r x)), (Permutation (gv0 :: l) (selsort r y)), (Permutation (gv0 :: l) (selsort r gv0)), (Permutation (gv0 :: l) (l ++ l)), (Permutation (gv0 :: l) (l ++ r)), (Permutation (gv0 :: l) (r ++ l))
(Permutation (gv0 :: l) []), (Permutation (gv0 :: r) l), (Permutation (gv0 :: r) r), (Permutation (gv0 :: r) (x :: l)), (Permutation (gv0 :: r) (x :: r)), (Permutation (gv0 :: r) (y :: l)), (Permutation (gv0 :: r) (y :: r)), (Permutation (gv0 :: r) (gv0 :: l)), (Permutation (gv0 :: r) (selection_sort l)), (Permutation (gv0 :: r) (selection_sort r))
(Permutation (gv0 :: r) (selsort l y)), (Permutation (gv0 :: r) (selsort l gv0)), (Permutation (gv0 :: r) (selsort r x)), (Permutation (gv0 :: r) (selsort r y)), (Permutation (gv0 :: r) (selsort r gv0)), (Permutation (gv0 :: r) (l ++ l)), (Permutation (gv0 :: r) (l ++ r)), (Permutation (gv0 :: r) (r ++ l)), (Permutation (gv0 :: r) (r ++ r)), (Permutation (gv0 :: r) [])
(Permutation (selection_sort l) r), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: r)), (Permutation (selection_sort l) (gv0 :: l)), (Permutation (selection_sort l) (gv0 :: r)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (selsort l y))
(Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort r y)), (Permutation (selection_sort l) (selsort r gv0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) []), (Permutation (selection_sort r) l), (Permutation (selection_sort r) r)
(Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (gv0 :: l)), (Permutation (selection_sort r) (gv0 :: r)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l gv0)), (Permutation (selection_sort r) (selsort r x))
(Permutation (selection_sort r) (selsort r gv0)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (r ++ l)), (Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) []), (Permutation (selsort l x) l), (Permutation (selsort l x) r), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (x :: r))
(Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (gv0 :: l)), (Permutation (selsort l x) (gv0 :: r)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (selsort l gv0)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort r gv0))
(Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (r ++ r)), (Permutation (selsort l x) []), (Permutation (selsort l y) l), (Permutation (selsort l y) r), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: r))
(Permutation (selsort l y) (gv0 :: r)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (selsort l gv0)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort r y)), (Permutation (selsort l y) (selsort r gv0)), (Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ r))
(Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) []), (Permutation (selsort l gv0) l), (Permutation (selsort l gv0) r), (Permutation (selsort l gv0) (x :: l)), (Permutation (selsort l gv0) (x :: r)), (Permutation (selsort l gv0) (y :: l)), (Permutation (selsort l gv0) (y :: r)), (Permutation (selsort l gv0) (gv0 :: l)), (Permutation (selsort l gv0) (gv0 :: r))
(Permutation (selsort l gv0) (selection_sort r)), (Permutation (selsort l gv0) (selsort l x)), (Permutation (selsort l gv0) (selsort l y)), (Permutation (selsort l gv0) (selsort r x)), (Permutation (selsort l gv0) (selsort r y)), (Permutation (selsort l gv0) (selsort r gv0)), (Permutation (selsort l gv0) (l ++ l)), (Permutation (selsort l gv0) (l ++ r)), (Permutation (selsort l gv0) (r ++ l)), (Permutation (selsort l gv0) (r ++ r))
(Permutation (selsort r x) l), (Permutation (selsort r x) r), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (gv0 :: l)), (Permutation (selsort r x) (gv0 :: r)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selection_sort r))
(Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort l gv0)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort r gv0)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) []), (Permutation (selsort r y) l)
(Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (y :: l)), (Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (gv0 :: l)), (Permutation (selsort r y) (gv0 :: r)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (selsort l y))
(Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort r gv0)), (Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) []), (Permutation (selsort r gv0) l), (Permutation (selsort r gv0) r), (Permutation (selsort r gv0) (x :: l))
(Permutation (selsort r gv0) (y :: l)), (Permutation (selsort r gv0) (y :: r)), (Permutation (selsort r gv0) (gv0 :: l)), (Permutation (selsort r gv0) (gv0 :: r)), (Permutation (selsort r gv0) (selection_sort l)), (Permutation (selsort r gv0) (selection_sort r)), (Permutation (selsort r gv0) (selsort l x)), (Permutation (selsort r gv0) (selsort l y)), (Permutation (selsort r gv0) (selsort l gv0)), (Permutation (selsort r gv0) (selsort r x))
(Permutation (selsort r gv0) (l ++ l)), (Permutation (selsort r gv0) (l ++ r)), (Permutation (selsort r gv0) (r ++ l)), (Permutation (selsort r gv0) (r ++ r)), (Permutation (selsort r gv0) []), (Permutation (l ++ l) l), (Permutation (l ++ l) r), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (y :: l))
(Permutation (l ++ l) (gv0 :: l)), (Permutation (l ++ l) (gv0 :: r)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selsort l x)), (Permutation (l ++ l) (selsort l y)), (Permutation (l ++ l) (selsort l gv0)), (Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort r gv0))
(Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) []), (Permutation (l ++ r) l), (Permutation (l ++ r) r), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (gv0 :: l))
(Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort l gv0)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r gv0)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) (r ++ l))
(Permutation (l ++ r) []), (Permutation (r ++ l) l), (Permutation (r ++ l) r), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (gv0 :: l)), (Permutation (r ++ l) (gv0 :: r)), (Permutation (r ++ l) (selection_sort l))
(Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort l gv0)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r gv0)), (Permutation (r ++ l) (l ++ l)), (Permutation (r ++ l) (l ++ r)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) [])
(Permutation (r ++ r) r), (Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (x :: r)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (gv0 :: l)), (Permutation (r ++ r) (gv0 :: r)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selsort l x))
(Permutation (r ++ r) (selsort l gv0)), (Permutation (r ++ r) (selsort r x)), (Permutation (r ++ r) (selsort r y)), (Permutation (r ++ r) (selsort r gv0)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) []), (Permutation [] l), (Permutation [] r)
(Permutation [] (x :: r)), (Permutation [] (y :: l)), (Permutation [] (y :: r)), (Permutation [] (gv0 :: l)), (Permutation [] (gv0 :: r)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort r)), (Permutation [] (selsort l x)), (Permutation [] (selsort l y)), (Permutation [] (selsort l gv0))
(Permutation [] (selsort r y)), (Permutation [] (selsort r gv0)), (Permutation [] (l ++ l)), (Permutation [] (l ++ r)), (Permutation [] (r ++ l)), (Permutation [] (r ++ r)), (In x (x :: l)), (In x (x :: r)), (In x (y :: l)), (In x (y :: r))
(In x (gv0 :: r)), (In x (selection_sort l)), (In x (selection_sort r)), (In x (selsort l x)), (In x (selsort l y)), (In x (selsort l gv0)), (In x (selsort r x)), (In x (selsort r y)), (In x (selsort r gv0)), (In x (l ++ l))
(In x (r ++ l)), (In x (r ++ r)), (In y (x :: l)), (In y (x :: r)), (In y (y :: l)), (In y (y :: r)), (In y (gv0 :: l)), (In y (gv0 :: r)), (In y (selection_sort l)), (In y (selection_sort r))
(In y (selsort l y)), (In y (selsort l gv0)), (In y (selsort r x)), (In y (selsort r y)), (In y (selsort r gv0)), (In y (l ++ l)), (In y (l ++ r)), (In y (r ++ l)), (In y (r ++ r)), (In gv0 (x :: l))
(In gv0 (y :: l)), (In gv0 (y :: r)), (In gv0 (gv0 :: l)), (In gv0 (gv0 :: r)), (In gv0 (selection_sort l)), (In gv0 (selection_sort r)), (In gv0 (selsort l x)), (In gv0 (selsort l y)), (In gv0 (selsort l gv0)), (In gv0 (selsort r x))
(In gv0 (selsort r gv0)), (In gv0 (l ++ l)), (In gv0 (l ++ r)), (In gv0 (r ++ l)), (In gv0 (r ++ r)), (In (length l) l), (In (length l) r), (In (length l) (x :: l)), (In (length l) (x :: r)), (In (length l) (y :: l))
(In (length l) (gv0 :: l)), (In (length l) (gv0 :: r)), (In (length l) (selection_sort l)), (In (length l) (selection_sort r)), (In (length l) (selsort l x)), (In (length l) (selsort l y)), (In (length l) (selsort l gv0)), (In (length l) (selsort r x)), (In (length l) (selsort r y)), (In (length l) (selsort r gv0))
(In (length l) (l ++ r)), (In (length l) (r ++ l)), (In (length l) (r ++ r)), (In (length r) l), (In (length r) r), (In (length r) (x :: l)), (In (length r) (x :: r)), (In (length r) (y :: l)), (In (length r) (y :: r)), (In (length r) (gv0 :: l))
(In (length r) (selection_sort l)), (In (length r) (selection_sort r)), (In (length r) (selsort l x)), (In (length r) (selsort l y)), (In (length r) (selsort l gv0)), (In (length r) (selsort r x)), (In (length r) (selsort r y)), (In (length r) (selsort r gv0)), (In (length r) (l ++ l)), (In (length r) (l ++ r))
(In (length r) (r ++ r)), (x < length l), (x < length r), (y < length l), (y < length r), (gv0 < length l), (gv0 < length r), (length l < x), (length l < y), (length l < gv0)
(length r < x), (length r < y), (length r < gv0), (length r < length l), (x <= length l), (x <= length r), (y <= length l), (y <= length r), (gv0 <= length l), (gv0 <= length r)
(length l <= y), (length l <= gv0), (length l <= length r), (length r <= x), (length r <= y), (length r <= gv0), (length r <= length l), (~ x <=* l), (~ x <=* r), (~ y <=* l)
(~ gv0 <=* l), (~ gv0 <=* r), (~ sorted l), (~ sorted r), (~ Permutation l l), (~ Permutation l r), (~ Permutation r l), (~ Permutation r r), (~ In x l), (~ In x r)
(~ In y r), (~ In gv0 l), (~ In gv0 r), (~ x < x), (~ x < y), (~ x < gv0), (~ y < x), (~ y < y), (~ y < gv0), (~ gv0 < x)
(~ gv0 < gv0), (~ x <= x), (~ x <= y), (~ x <= gv0), (~ y <= x), (~ y <= y), (~ y <= gv0), (~ gv0 <= x), (~ gv0 <= y), (~ gv0 <= gv0)
(l <> r), (r <> l), (r <> r), (x <> x), (x <> y), (x <> gv0), (y <> x), (y <> y), (y <> gv0), (gv0 <> x)
(gv0 <> gv0), (None = Some l), (None = Some r), (x :: l = l), (x :: l = r), (x :: l = selection_sort l), (x :: l = selection_sort r), (x :: l = selsort l x), (x :: l = selsort l y), (x :: l = selsort l gv0)
(x :: l = selsort r y), (x :: l = selsort r gv0), (x :: l = l ++ l), (x :: l = l ++ r), (x :: l = r ++ l), (x :: l = r ++ r), (x :: l = []), (x :: r = l), (x :: r = r), (x :: r = selection_sort l)
(x :: r = selsort l x), (x :: r = selsort l y), (x :: r = selsort l gv0), (x :: r = selsort r x), (x :: r = selsort r y), (x :: r = selsort r gv0), (x :: r = l ++ l), (x :: r = l ++ r), (x :: r = r ++ l), (x :: r = r ++ r)
(y :: l = l), (y :: l = r), (y :: l = selection_sort l), (y :: l = selection_sort r), (y :: l = selsort l x), (y :: l = selsort l y), (y :: l = selsort l gv0), (y :: l = selsort r x), (y :: l = selsort r y), (y :: l = selsort r gv0)
(y :: l = l ++ r), (y :: l = r ++ l), (y :: l = r ++ r), (y :: l = []), (y :: r = l), (y :: r = r), (y :: r = selection_sort l), (y :: r = selection_sort r), (y :: r = selsort l x), (y :: r = selsort l y)
(y :: r = selsort r x), (y :: r = selsort r y), (y :: r = selsort r gv0), (y :: r = l ++ l), (y :: r = l ++ r), (y :: r = r ++ l), (y :: r = r ++ r), (y :: r = []), (gv0 :: l = l), (gv0 :: l = r)
(gv0 :: l = selection_sort r), (gv0 :: l = selsort l x), (gv0 :: l = selsort l y), (gv0 :: l = selsort l gv0), (gv0 :: l = selsort r x), (gv0 :: l = selsort r y), (gv0 :: l = selsort r gv0), (gv0 :: l = l ++ l), (gv0 :: l = l ++ r), (gv0 :: l = r ++ l)
(gv0 :: l = []), (gv0 :: r = l), (gv0 :: r = r), (gv0 :: r = selection_sort l), (gv0 :: r = selection_sort r), (gv0 :: r = selsort l x), (gv0 :: r = selsort l y), (gv0 :: r = selsort l gv0), (gv0 :: r = selsort r x), (gv0 :: r = selsort r y)
(gv0 :: r = l ++ l), (gv0 :: r = l ++ r), (gv0 :: r = r ++ l), (gv0 :: r = r ++ r), (gv0 :: r = []), (selection_sort l = l), (selection_sort l = r), (selection_sort l = l ++ l), (selection_sort l = l ++ r), (selection_sort l = r ++ l)
(selection_sort r = l), (selection_sort r = r), (selection_sort r = l ++ l), (selection_sort r = l ++ r), (selection_sort r = r ++ l), (selection_sort r = r ++ r), (selsort l x = l), (selsort l x = r), (selsort l x = selection_sort l), (selsort l x = selection_sort r)
(selsort l x = l ++ r), (selsort l x = r ++ l), (selsort l x = r ++ r), (selsort l y = l), (selsort l y = r), (selsort l y = selection_sort l), (selsort l y = selection_sort r), (selsort l y = l ++ l), (selsort l y = l ++ r), (selsort l y = r ++ l)
(selsort l gv0 = l), (selsort l gv0 = r), (selsort l gv0 = selection_sort l), (selsort l gv0 = selection_sort r), (selsort l gv0 = l ++ l), (selsort l gv0 = l ++ r), (selsort l gv0 = r ++ l), (selsort l gv0 = r ++ r), (selsort r x = l), (selsort r x = r)
(selsort r x = selection_sort r), (selsort r x = l ++ l), (selsort r x = l ++ r), (selsort r x = r ++ l), (selsort r x = r ++ r), (selsort r y = l), (selsort r y = r), (selsort r y = selection_sort l), (selsort r y = selection_sort r), (selsort r y = l ++ l)
(selsort r y = r ++ l), (selsort r y = r ++ r), (selsort r gv0 = l), (selsort r gv0 = r), (selsort r gv0 = selection_sort l), (selsort r gv0 = selection_sort r), (selsort r gv0 = l ++ l), (selsort r gv0 = l ++ r), (selsort r gv0 = r ++ l), (selsort r gv0 = r ++ r)
(l ++ l = r), (l ++ r = l), (l ++ r = r), (r ++ l = l), (r ++ l = r), (r ++ r = l), (r ++ r = r), ([] = l), ([] = r), ([] = selection_sort l)
([] = selsort l x), ([] = selsort l y), ([] = selsort l gv0), ([] = selsort r x), ([] = selsort r y), ([] = selsort r gv0), ([] = l ++ l), ([] = l ++ r), ([] = r ++ l), ([] = r ++ r)
(None = Some y), (None = Some gv0), ((x, l) = select x l), ((x, l) = select x r), ((x, l) = select y l), ((x, l) = select y r), ((x, l) = select gv0 l), ((x, l) = select gv0 r), ((x, r) = select x l), ((x, r) = select x r)
((x, r) = select y r), ((x, r) = select gv0 l), ((x, r) = select gv0 r), ((y, l) = select x l), ((y, l) = select x r), ((y, l) = select y l), ((y, l) = select y r), ((y, l) = select gv0 l), ((y, l) = select gv0 r), ((y, r) = select x l)
((y, r) = select y l), ((y, r) = select y r), ((y, r) = select gv0 l), ((y, r) = select gv0 r), ((gv0, l) = select x l), ((gv0, l) = select x r), ((gv0, l) = select y l), ((gv0, l) = select y r), ((gv0, l) = select gv0 l), ((gv0, l) = select gv0 r)
((gv0, r) = select x r), ((gv0, r) = select y l), ((gv0, r) = select y r), ((gv0, r) = select gv0 l), ((gv0, r) = select gv0 r), (length l = x), (length l = y), (length l = gv0), (length r = x), (length r = y)

Label: 3 (6)
(x <=* l), (x <=* r), (x <=* gv1), (y <=* l), (y <=* r), (y <=* gv1), (sorted l), (sorted r), (sorted gv1), (Permutation l l)
(Permutation l gv1), (Permutation r l), (Permutation r r), (Permutation r gv1), (Permutation gv1 l), (Permutation gv1 r), (Permutation gv1 gv1), (In x l), (In x r), (In x gv1)
(In y r), (In y gv1), (x < x), (x < y), (y < x), (y < y), (x <= x), (x <= y), (y <= x), (y <= y)
(x = y), (y = x), (y = y), (l = l), (l = r), (l = gv1), (r = l), (r = r), (r = gv1), (gv1 = l)
(gv1 = gv1), (false = sorted_bool l), (false = sorted_bool r), (false = sorted_bool gv1), (true = sorted_bool l), (true = sorted_bool r), (true = sorted_bool gv1), (x <=* x :: l), (x <=* x :: r), (x <=* x :: gv1)
(x <=* y :: r), (x <=* y :: gv1), (x <=* selection_sort l), (x <=* selection_sort r), (x <=* selection_sort gv1), (x <=* selsort l x), (x <=* selsort l y), (x <=* selsort r x), (x <=* selsort r y), (x <=* selsort gv1 x)
(x <=* l ++ l), (x <=* l ++ r), (x <=* l ++ gv1), (x <=* r ++ l), (x <=* r ++ r), (x <=* r ++ gv1), (x <=* gv1 ++ l), (x <=* gv1 ++ r), (x <=* gv1 ++ gv1), (x <=* [])
(y <=* x :: r), (y <=* x :: gv1), (y <=* y :: l), (y <=* y :: r), (y <=* y :: gv1), (y <=* selection_sort l), (y <=* selection_sort r), (y <=* selection_sort gv1), (y <=* selsort l x), (y <=* selsort l y)
(y <=* selsort r y), (y <=* selsort gv1 x), (y <=* selsort gv1 y), (y <=* l ++ l), (y <=* l ++ r), (y <=* l ++ gv1), (y <=* r ++ l), (y <=* r ++ r), (y <=* r ++ gv1), (y <=* gv1 ++ l)
(y <=* gv1 ++ gv1), (y <=* []), (length l <=* l), (length l <=* r), (length l <=* gv1), (length l <=* x :: l), (length l <=* x :: r), (length l <=* x :: gv1), (length l <=* y :: l), (length l <=* y :: r)
(length l <=* selection_sort l), (length l <=* selection_sort r), (length l <=* selection_sort gv1), (length l <=* selsort l x), (length l <=* selsort l y), (length l <=* selsort r x), (length l <=* selsort r y), (length l <=* selsort gv1 x), (length l <=* selsort gv1 y), (length l <=* l ++ l)
(length l <=* l ++ gv1), (length l <=* r ++ l), (length l <=* r ++ r), (length l <=* r ++ gv1), (length l <=* gv1 ++ l), (length l <=* gv1 ++ r), (length l <=* gv1 ++ gv1), (length l <=* []), (length r <=* l), (length r <=* r)
(length r <=* x :: l), (length r <=* x :: r), (length r <=* x :: gv1), (length r <=* y :: l), (length r <=* y :: r), (length r <=* y :: gv1), (length r <=* selection_sort l), (length r <=* selection_sort r), (length r <=* selection_sort gv1), (length r <=* selsort l x)
(length r <=* selsort r x), (length r <=* selsort r y), (length r <=* selsort gv1 x), (length r <=* selsort gv1 y), (length r <=* l ++ l), (length r <=* l ++ r), (length r <=* l ++ gv1), (length r <=* r ++ l), (length r <=* r ++ r), (length r <=* r ++ gv1)
(length r <=* gv1 ++ r), (length r <=* gv1 ++ gv1), (length r <=* []), (length gv1 <=* l), (length gv1 <=* r), (length gv1 <=* gv1), (length gv1 <=* x :: l), (length gv1 <=* x :: r), (length gv1 <=* x :: gv1), (length gv1 <=* y :: l)
(length gv1 <=* y :: gv1), (length gv1 <=* selection_sort l), (length gv1 <=* selection_sort r), (length gv1 <=* selection_sort gv1), (length gv1 <=* selsort l x), (length gv1 <=* selsort l y), (length gv1 <=* selsort r x), (length gv1 <=* selsort r y), (length gv1 <=* selsort gv1 x), (length gv1 <=* selsort gv1 y)
(length gv1 <=* l ++ r), (length gv1 <=* l ++ gv1), (length gv1 <=* r ++ l), (length gv1 <=* r ++ r), (length gv1 <=* r ++ gv1), (length gv1 <=* gv1 ++ l), (length gv1 <=* gv1 ++ r), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* []), (sorted (x :: l))
(sorted (x :: gv1)), (sorted (y :: l)), (sorted (y :: r)), (sorted (y :: gv1)), (sorted (selection_sort l)), (sorted (selection_sort r)), (sorted (selection_sort gv1)), (sorted (selsort l x)), (sorted (selsort l y)), (sorted (selsort r x))
(sorted (selsort gv1 x)), (sorted (selsort gv1 y)), (sorted (l ++ l)), (sorted (l ++ r)), (sorted (l ++ gv1)), (sorted (r ++ l)), (sorted (r ++ r)), (sorted (r ++ gv1)), (sorted (gv1 ++ l)), (sorted (gv1 ++ r))
(sorted []), (Permutation l (x :: l)), (Permutation l (x :: r)), (Permutation l (x :: gv1)), (Permutation l (y :: l)), (Permutation l (y :: r)), (Permutation l (y :: gv1)), (Permutation l (selection_sort l)), (Permutation l (selection_sort r)), (Permutation l (selection_sort gv1))
(Permutation l (selsort l y)), (Permutation l (selsort r x)), (Permutation l (selsort r y)), (Permutation l (selsort gv1 x)), (Permutation l (selsort gv1 y)), (Permutation l (l ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ gv1)), (Permutation l (r ++ l)), (Permutation l (r ++ r))
(Permutation l (gv1 ++ l)), (Permutation l (gv1 ++ r)), (Permutation l (gv1 ++ gv1)), (Permutation l []), (Permutation r (x :: l)), (Permutation r (x :: r)), (Permutation r (x :: gv1)), (Permutation r (y :: l)), (Permutation r (y :: r)), (Permutation r (y :: gv1))
(Permutation r (selection_sort r)), (Permutation r (selection_sort gv1)), (Permutation r (selsort l x)), (Permutation r (selsort l y)), (Permutation r (selsort r x)), (Permutation r (selsort r y)), (Permutation r (selsort gv1 x)), (Permutation r (selsort gv1 y)), (Permutation r (l ++ l)), (Permutation r (l ++ r))
(Permutation r (r ++ l)), (Permutation r (r ++ r)), (Permutation r (r ++ gv1)), (Permutation r (gv1 ++ l)), (Permutation r (gv1 ++ r)), (Permutation r (gv1 ++ gv1)), (Permutation r []), (Permutation gv1 (x :: l)), (Permutation gv1 (x :: r)), (Permutation gv1 (x :: gv1))
(Permutation gv1 (y :: r)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selection_sort r)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selsort l x)), (Permutation gv1 (selsort l y)), (Permutation gv1 (selsort r x)), (Permutation gv1 (selsort r y)), (Permutation gv1 (selsort gv1 x))
(Permutation gv1 (l ++ l)), (Permutation gv1 (l ++ r)), (Permutation gv1 (l ++ gv1)), (Permutation gv1 (r ++ l)), (Permutation gv1 (r ++ r)), (Permutation gv1 (r ++ gv1)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (gv1 ++ r)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 [])
(Permutation (x :: l) r), (Permutation (x :: l) gv1), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (x :: gv1)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: gv1)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selection_sort gv1))
(Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort gv1 x)), (Permutation (x :: l) (selsort gv1 y)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ gv1)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (r ++ r))
(Permutation (x :: l) (gv1 ++ l)), (Permutation (x :: l) (gv1 ++ r)), (Permutation (x :: l) (gv1 ++ gv1)), (Permutation (x :: l) []), (Permutation (x :: r) l), (Permutation (x :: r) r), (Permutation (x :: r) gv1), (Permutation (x :: r) (x :: l)), (Permutation (x :: r) (x :: gv1)), (Permutation (x :: r) (y :: l))
(Permutation (x :: r) (y :: gv1)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selection_sort gv1)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort gv1 x)), (Permutation (x :: r) (selsort gv1 y))
(Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (l ++ gv1)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) (r ++ gv1)), (Permutation (x :: r) (gv1 ++ l)), (Permutation (x :: r) (gv1 ++ r)), (Permutation (x :: r) (gv1 ++ gv1)), (Permutation (x :: r) []), (Permutation (x :: gv1) l)
(Permutation (x :: gv1) gv1), (Permutation (x :: gv1) (x :: l)), (Permutation (x :: gv1) (x :: r)), (Permutation (x :: gv1) (y :: l)), (Permutation (x :: gv1) (y :: r)), (Permutation (x :: gv1) (y :: gv1)), (Permutation (x :: gv1) (selection_sort l)), (Permutation (x :: gv1) (selection_sort r)), (Permutation (x :: gv1) (selection_sort gv1)), (Permutation (x :: gv1) (selsort l x))
(Permutation (x :: gv1) (selsort r x)), (Permutation (x :: gv1) (selsort r y)), (Permutation (x :: gv1) (selsort gv1 x)), (Permutation (x :: gv1) (selsort gv1 y)), (Permutation (x :: gv1) (l ++ l)), (Permutation (x :: gv1) (l ++ r)), (Permutation (x :: gv1) (l ++ gv1)), (Permutation (x :: gv1) (r ++ l)), (Permutation (x :: gv1) (r ++ r)), (Permutation (x :: gv1) (r ++ gv1))
(Permutation (x :: gv1) (gv1 ++ r)), (Permutation (x :: gv1) (gv1 ++ gv1)), (Permutation (x :: gv1) []), (Permutation (y :: l) l), (Permutation (y :: l) r), (Permutation (y :: l) gv1), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: gv1)), (Permutation (y :: l) (y :: r))
(Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort gv1)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort r x)), (Permutation (y :: l) (selsort r y)), (Permutation (y :: l) (selsort gv1 x)), (Permutation (y :: l) (selsort gv1 y)), (Permutation (y :: l) (l ++ l))
(Permutation (y :: l) (l ++ gv1)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ gv1)), (Permutation (y :: l) (gv1 ++ l)), (Permutation (y :: l) (gv1 ++ r)), (Permutation (y :: l) (gv1 ++ gv1)), (Permutation (y :: l) []), (Permutation (y :: r) l), (Permutation (y :: r) r)
(Permutation (y :: r) (x :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: gv1)), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (y :: gv1)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort gv1)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (selsort l y))
(Permutation (y :: r) (selsort r y)), (Permutation (y :: r) (selsort gv1 x)), (Permutation (y :: r) (selsort gv1 y)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ gv1)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ gv1)), (Permutation (y :: r) (gv1 ++ l))
(Permutation (y :: r) (gv1 ++ gv1)), (Permutation (y :: r) []), (Permutation (y :: gv1) l), (Permutation (y :: gv1) r), (Permutation (y :: gv1) gv1), (Permutation (y :: gv1) (x :: l)), (Permutation (y :: gv1) (x :: r)), (Permutation (y :: gv1) (x :: gv1)), (Permutation (y :: gv1) (y :: l)), (Permutation (y :: gv1) (y :: r))
(Permutation (y :: gv1) (selection_sort r)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selsort l x)), (Permutation (y :: gv1) (selsort l y)), (Permutation (y :: gv1) (selsort r x)), (Permutation (y :: gv1) (selsort r y)), (Permutation (y :: gv1) (selsort gv1 x)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (l ++ l)), (Permutation (y :: gv1) (l ++ r))
(Permutation (y :: gv1) (r ++ l)), (Permutation (y :: gv1) (r ++ r)), (Permutation (y :: gv1) (r ++ gv1)), (Permutation (y :: gv1) (gv1 ++ l)), (Permutation (y :: gv1) (gv1 ++ r)), (Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) r), (Permutation (selection_sort l) gv1)
(Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: gv1)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: r)), (Permutation (selection_sort l) (y :: gv1)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selection_sort gv1)), (Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort r x))
(Permutation (selection_sort l) (selsort gv1 x)), (Permutation (selection_sort l) (selsort gv1 y)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (gv1 ++ r))
(Permutation (selection_sort l) []), (Permutation (selection_sort r) l), (Permutation (selection_sort r) r), (Permutation (selection_sort r) gv1), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: gv1)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (y :: gv1))
(Permutation (selection_sort r) (selection_sort gv1)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort r x)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort gv1 x)), (Permutation (selection_sort r) (selsort gv1 y)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ gv1))
(Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ gv1)), (Permutation (selection_sort r) (gv1 ++ l)), (Permutation (selection_sort r) (gv1 ++ r)), (Permutation (selection_sort r) (gv1 ++ gv1)), (Permutation (selection_sort r) []), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) r), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) (x :: l))
(Permutation (selection_sort gv1) (x :: gv1)), (Permutation (selection_sort gv1) (y :: l)), (Permutation (selection_sort gv1) (y :: r)), (Permutation (selection_sort gv1) (y :: gv1)), (Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selection_sort r)), (Permutation (selection_sort gv1) (selsort l x)), (Permutation (selection_sort gv1) (selsort l y)), (Permutation (selection_sort gv1) (selsort r x)), (Permutation (selection_sort gv1) (selsort r y))
(Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) (l ++ r)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (r ++ l)), (Permutation (selection_sort gv1) (r ++ r)), (Permutation (selection_sort gv1) (r ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (gv1 ++ r)), (Permutation (selection_sort gv1) (gv1 ++ gv1))
(Permutation (selsort l x) l), (Permutation (selsort l x) r), (Permutation (selsort l x) gv1), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (x :: r)), (Permutation (selsort l x) (x :: gv1)), (Permutation (selsort l x) (y :: l)), (Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (y :: gv1)), (Permutation (selsort l x) (selection_sort l))
(Permutation (selsort l x) (selection_sort gv1)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort gv1 x)), (Permutation (selsort l x) (selsort gv1 y)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ gv1)), (Permutation (selsort l x) (r ++ l))
(Permutation (selsort l x) (r ++ gv1)), (Permutation (selsort l x) (gv1 ++ l)), (Permutation (selsort l x) (gv1 ++ r)), (Permutation (selsort l x) (gv1 ++ gv1)), (Permutation (selsort l x) []), (Permutation (selsort l y) l), (Permutation (selsort l y) r), (Permutation (selsort l y) gv1), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (x :: r))
(Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: gv1)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort gv1)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort r y)), (Permutation (selsort l y) (selsort gv1 x))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ r)), (Permutation (selsort l y) (l ++ gv1)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ gv1)), (Permutation (selsort l y) (gv1 ++ l)), (Permutation (selsort l y) (gv1 ++ r)), (Permutation (selsort l y) (gv1 ++ gv1)), (Permutation (selsort l y) [])
(Permutation (selsort r x) r), (Permutation (selsort r x) gv1), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: gv1)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: gv1)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selection_sort r))
(Permutation (selsort r x) (selsort l x)), (Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort gv1 x)), (Permutation (selsort r x) (selsort gv1 y)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ gv1)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (r ++ r))
(Permutation (selsort r x) (gv1 ++ l)), (Permutation (selsort r x) (gv1 ++ r)), (Permutation (selsort r x) (gv1 ++ gv1)), (Permutation (selsort r x) []), (Permutation (selsort r y) l), (Permutation (selsort r y) r), (Permutation (selsort r y) gv1), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: gv1))
(Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: gv1)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selection_sort gv1)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort gv1 x)), (Permutation (selsort r y) (selsort gv1 y))
(Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ gv1)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) (r ++ gv1)), (Permutation (selsort r y) (gv1 ++ l)), (Permutation (selsort r y) (gv1 ++ r)), (Permutation (selsort r y) (gv1 ++ gv1)), (Permutation (selsort r y) []), (Permutation (selsort gv1 x) l)
(Permutation (selsort gv1 x) gv1), (Permutation (selsort gv1 x) (x :: l)), (Permutation (selsort gv1 x) (x :: r)), (Permutation (selsort gv1 x) (x :: gv1)), (Permutation (selsort gv1 x) (y :: l)), (Permutation (selsort gv1 x) (y :: r)), (Permutation (selsort gv1 x) (y :: gv1)), (Permutation (selsort gv1 x) (selection_sort l)), (Permutation (selsort gv1 x) (selection_sort r)), (Permutation (selsort gv1 x) (selection_sort gv1))
(Permutation (selsort gv1 x) (selsort l y)), (Permutation (selsort gv1 x) (selsort r x)), (Permutation (selsort gv1 x) (selsort r y)), (Permutation (selsort gv1 x) (selsort gv1 y)), (Permutation (selsort gv1 x) (l ++ l)), (Permutation (selsort gv1 x) (l ++ r)), (Permutation (selsort gv1 x) (l ++ gv1)), (Permutation (selsort gv1 x) (r ++ l)), (Permutation (selsort gv1 x) (r ++ r)), (Permutation (selsort gv1 x) (r ++ gv1))
(Permutation (selsort gv1 x) (gv1 ++ r)), (Permutation (selsort gv1 x) (gv1 ++ gv1)), (Permutation (selsort gv1 x) []), (Permutation (selsort gv1 y) l), (Permutation (selsort gv1 y) r), (Permutation (selsort gv1 y) gv1), (Permutation (selsort gv1 y) (x :: l)), (Permutation (selsort gv1 y) (x :: r)), (Permutation (selsort gv1 y) (x :: gv1)), (Permutation (selsort gv1 y) (y :: l))
(Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (selection_sort l)), (Permutation (selsort gv1 y) (selection_sort r)), (Permutation (selsort gv1 y) (selection_sort gv1)), (Permutation (selsort gv1 y) (selsort l x)), (Permutation (selsort gv1 y) (selsort l y)), (Permutation (selsort gv1 y) (selsort r x)), (Permutation (selsort gv1 y) (selsort r y)), (Permutation (selsort gv1 y) (selsort gv1 x)), (Permutation (selsort gv1 y) (l ++ l))
(Permutation (selsort gv1 y) (l ++ gv1)), (Permutation (selsort gv1 y) (r ++ l)), (Permutation (selsort gv1 y) (r ++ r)), (Permutation (selsort gv1 y) (r ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ l)), (Permutation (selsort gv1 y) (gv1 ++ r)), (Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) []), (Permutation (l ++ l) l), (Permutation (l ++ l) r)
(Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (x :: gv1)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: gv1)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort l x))
(Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort gv1 x)), (Permutation (l ++ l) (selsort gv1 y)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) (l ++ gv1)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ gv1)), (Permutation (l ++ l) (gv1 ++ l))
(Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) []), (Permutation (l ++ r) l), (Permutation (l ++ r) r), (Permutation (l ++ r) gv1), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: gv1)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (y :: r))
(Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selection_sort gv1)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort gv1 x)), (Permutation (l ++ r) (selsort gv1 y)), (Permutation (l ++ r) (l ++ l))
(Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ gv1)), (Permutation (l ++ r) (gv1 ++ l)), (Permutation (l ++ r) (gv1 ++ r)), (Permutation (l ++ r) (gv1 ++ gv1)), (Permutation (l ++ r) []), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) r), (Permutation (l ++ gv1) gv1)
(Permutation (l ++ gv1) (x :: r)), (Permutation (l ++ gv1) (x :: gv1)), (Permutation (l ++ gv1) (y :: l)), (Permutation (l ++ gv1) (y :: r)), (Permutation (l ++ gv1) (y :: gv1)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selection_sort r)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selsort l x)), (Permutation (l ++ gv1) (selsort l y))
(Permutation (l ++ gv1) (selsort r y)), (Permutation (l ++ gv1) (selsort gv1 x)), (Permutation (l ++ gv1) (selsort gv1 y)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) (l ++ r)), (Permutation (l ++ gv1) (r ++ l)), (Permutation (l ++ gv1) (r ++ r)), (Permutation (l ++ gv1) (r ++ gv1)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (gv1 ++ r))
(Permutation (l ++ gv1) []), (Permutation (r ++ l) l), (Permutation (r ++ l) r), (Permutation (r ++ l) gv1), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (x :: gv1)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (y :: gv1))
(Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort gv1)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort gv1 x)), (Permutation (r ++ l) (selsort gv1 y)), (Permutation (r ++ l) (l ++ l)), (Permutation (r ++ l) (l ++ r))
(Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (r ++ gv1)), (Permutation (r ++ l) (gv1 ++ l)), (Permutation (r ++ l) (gv1 ++ r)), (Permutation (r ++ l) (gv1 ++ gv1)), (Permutation (r ++ l) []), (Permutation (r ++ r) l), (Permutation (r ++ r) r), (Permutation (r ++ r) gv1), (Permutation (r ++ r) (x :: l))
(Permutation (r ++ r) (x :: gv1)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: gv1)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort gv1)), (Permutation (r ++ r) (selsort l x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort r x))
(Permutation (r ++ r) (selsort gv1 x)), (Permutation (r ++ r) (selsort gv1 y)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ gv1)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (r ++ gv1)), (Permutation (r ++ r) (gv1 ++ l)), (Permutation (r ++ r) (gv1 ++ r)), (Permutation (r ++ r) (gv1 ++ gv1))
(Permutation (r ++ gv1) l), (Permutation (r ++ gv1) r), (Permutation (r ++ gv1) gv1), (Permutation (r ++ gv1) (x :: l)), (Permutation (r ++ gv1) (x :: r)), (Permutation (r ++ gv1) (x :: gv1)), (Permutation (r ++ gv1) (y :: l)), (Permutation (r ++ gv1) (y :: r)), (Permutation (r ++ gv1) (y :: gv1)), (Permutation (r ++ gv1) (selection_sort l))
(Permutation (r ++ gv1) (selection_sort gv1)), (Permutation (r ++ gv1) (selsort l x)), (Permutation (r ++ gv1) (selsort l y)), (Permutation (r ++ gv1) (selsort r x)), (Permutation (r ++ gv1) (selsort r y)), (Permutation (r ++ gv1) (selsort gv1 x)), (Permutation (r ++ gv1) (selsort gv1 y)), (Permutation (r ++ gv1) (l ++ l)), (Permutation (r ++ gv1) (l ++ r)), (Permutation (r ++ gv1) (l ++ gv1))
(Permutation (r ++ gv1) (r ++ r)), (Permutation (r ++ gv1) (gv1 ++ l)), (Permutation (r ++ gv1) (gv1 ++ r)), (Permutation (r ++ gv1) (gv1 ++ gv1)), (Permutation (r ++ gv1) []), (Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) r), (Permutation (gv1 ++ l) gv1), (Permutation (gv1 ++ l) (x :: l)), (Permutation (gv1 ++ l) (x :: r))
(Permutation (gv1 ++ l) (y :: l)), (Permutation (gv1 ++ l) (y :: r)), (Permutation (gv1 ++ l) (y :: gv1)), (Permutation (gv1 ++ l) (selection_sort l)), (Permutation (gv1 ++ l) (selection_sort r)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selsort l x)), (Permutation (gv1 ++ l) (selsort l y)), (Permutation (gv1 ++ l) (selsort r x)), (Permutation (gv1 ++ l) (selsort r y))
(Permutation (gv1 ++ l) (selsort gv1 y)), (Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) (l ++ r)), (Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (r ++ l)), (Permutation (gv1 ++ l) (r ++ r)), (Permutation (gv1 ++ l) (r ++ gv1)), (Permutation (gv1 ++ l) (gv1 ++ r)), (Permutation (gv1 ++ l) (gv1 ++ gv1)), (Permutation (gv1 ++ l) [])
(Permutation (gv1 ++ r) r), (Permutation (gv1 ++ r) gv1), (Permutation (gv1 ++ r) (x :: l)), (Permutation (gv1 ++ r) (x :: r)), (Permutation (gv1 ++ r) (x :: gv1)), (Permutation (gv1 ++ r) (y :: l)), (Permutation (gv1 ++ r) (y :: r)), (Permutation (gv1 ++ r) (y :: gv1)), (Permutation (gv1 ++ r) (selection_sort l)), (Permutation (gv1 ++ r) (selection_sort r))
(Permutation (gv1 ++ r) (selsort l x)), (Permutation (gv1 ++ r) (selsort l y)), (Permutation (gv1 ++ r) (selsort r x)), (Permutation (gv1 ++ r) (selsort r y)), (Permutation (gv1 ++ r) (selsort gv1 x)), (Permutation (gv1 ++ r) (selsort gv1 y)), (Permutation (gv1 ++ r) (l ++ l)), (Permutation (gv1 ++ r) (l ++ r)), (Permutation (gv1 ++ r) (l ++ gv1)), (Permutation (gv1 ++ r) (r ++ l))
(Permutation (gv1 ++ r) (r ++ gv1)), (Permutation (gv1 ++ r) (gv1 ++ l)), (Permutation (gv1 ++ r) (gv1 ++ gv1)), (Permutation (gv1 ++ r) []), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) r), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (x :: l)), (Permutation (gv1 ++ gv1) (x :: r)), (Permutation (gv1 ++ gv1) (x :: gv1))
(Permutation (gv1 ++ gv1) (y :: r)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selection_sort r)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selsort l x)), (Permutation (gv1 ++ gv1) (selsort l y)), (Permutation (gv1 ++ gv1) (selsort r x)), (Permutation (gv1 ++ gv1) (selsort r y)), (Permutation (gv1 ++ gv1) (selsort gv1 x))
(Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) (l ++ r)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (r ++ l)), (Permutation (gv1 ++ gv1) (r ++ r)), (Permutation (gv1 ++ gv1) (r ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) (gv1 ++ r)), (Permutation (gv1 ++ gv1) []), (Permutation [] l)
(Permutation [] gv1), (Permutation [] (x :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: gv1)), (Permutation [] (y :: l)), (Permutation [] (y :: r)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort gv1))
(Permutation [] (selsort l y)), (Permutation [] (selsort r x)), (Permutation [] (selsort r y)), (Permutation [] (selsort gv1 x)), (Permutation [] (selsort gv1 y)), (Permutation [] (l ++ l)), (Permutation [] (l ++ r)), (Permutation [] (l ++ gv1)), (Permutation [] (r ++ l)), (Permutation [] (r ++ r))
(Permutation [] (gv1 ++ l)), (Permutation [] (gv1 ++ r)), (Permutation [] (gv1 ++ gv1)), (In x (x :: l)), (In x (x :: r)), (In x (x :: gv1)), (In x (y :: l)), (In x (y :: r)), (In x (y :: gv1)), (In x (selection_sort l))
(In x (selection_sort gv1)), (In x (selsort l x)), (In x (selsort l y)), (In x (selsort r x)), (In x (selsort r y)), (In x (selsort gv1 x)), (In x (selsort gv1 y)), (In x (l ++ l)), (In x (l ++ r)), (In x (l ++ gv1))
(In x (r ++ r)), (In x (r ++ gv1)), (In x (gv1 ++ l)), (In x (gv1 ++ r)), (In x (gv1 ++ gv1)), (In y (x :: l)), (In y (x :: r)), (In y (x :: gv1)), (In y (y :: l)), (In y (y :: r))
(In y (selection_sort l)), (In y (selection_sort r)), (In y (selection_sort gv1)), (In y (selsort l x)), (In y (selsort l y)), (In y (selsort r x)), (In y (selsort r y)), (In y (selsort gv1 x)), (In y (selsort gv1 y)), (In y (l ++ l))
(In y (l ++ gv1)), (In y (r ++ l)), (In y (r ++ r)), (In y (r ++ gv1)), (In y (gv1 ++ l)), (In y (gv1 ++ r)), (In y (gv1 ++ gv1)), (In (length l) l), (In (length l) r), (In (length l) gv1)
(In (length l) (x :: r)), (In (length l) (x :: gv1)), (In (length l) (y :: l)), (In (length l) (y :: r)), (In (length l) (y :: gv1)), (In (length l) (selection_sort l)), (In (length l) (selection_sort r)), (In (length l) (selection_sort gv1)), (In (length l) (selsort l x)), (In (length l) (selsort l y))
(In (length l) (selsort r y)), (In (length l) (selsort gv1 x)), (In (length l) (selsort gv1 y)), (In (length l) (l ++ l)), (In (length l) (l ++ r)), (In (length l) (l ++ gv1)), (In (length l) (r ++ l)), (In (length l) (r ++ r)), (In (length l) (r ++ gv1)), (In (length l) (gv1 ++ l))
(In (length l) (gv1 ++ gv1)), (In (length r) l), (In (length r) r), (In (length r) gv1), (In (length r) (x :: l)), (In (length r) (x :: r)), (In (length r) (x :: gv1)), (In (length r) (y :: l)), (In (length r) (y :: r)), (In (length r) (y :: gv1))
(In (length r) (selection_sort r)), (In (length r) (selection_sort gv1)), (In (length r) (selsort l x)), (In (length r) (selsort l y)), (In (length r) (selsort r x)), (In (length r) (selsort r y)), (In (length r) (selsort gv1 x)), (In (length r) (selsort gv1 y)), (In (length r) (l ++ l)), (In (length r) (l ++ r))
(In (length r) (r ++ l)), (In (length r) (r ++ r)), (In (length r) (r ++ gv1)), (In (length r) (gv1 ++ l)), (In (length r) (gv1 ++ r)), (In (length r) (gv1 ++ gv1)), (In (length gv1) l), (In (length gv1) r), (In (length gv1) gv1), (In (length gv1) (x :: l))
(In (length gv1) (x :: gv1)), (In (length gv1) (y :: l)), (In (length gv1) (y :: r)), (In (length gv1) (y :: gv1)), (In (length gv1) (selection_sort l)), (In (length gv1) (selection_sort r)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selsort l x)), (In (length gv1) (selsort l y)), (In (length gv1) (selsort r x))
(In (length gv1) (selsort gv1 x)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (l ++ l)), (In (length gv1) (l ++ r)), (In (length gv1) (l ++ gv1)), (In (length gv1) (r ++ l)), (In (length gv1) (r ++ r)), (In (length gv1) (r ++ gv1)), (In (length gv1) (gv1 ++ l)), (In (length gv1) (gv1 ++ r))
(x < length l), (x < length r), (x < length gv1), (y < length l), (y < length r), (y < length gv1), (length l < x), (length l < y), (length l < length r), (length l < length gv1)
(length r < y), (length r < length l), (length r < length gv1), (length gv1 < x), (length gv1 < y), (length gv1 < length l), (length gv1 < length r), (x <= length l), (x <= length r), (x <= length gv1)
(y <= length r), (y <= length gv1), (length l <= x), (length l <= y), (length l <= length r), (length l <= length gv1), (length r <= x), (length r <= y), (length r <= length l), (length r <= length gv1)
(length gv1 <= y), (length gv1 <= length l), (length gv1 <= length r), (~ x <=* l), (~ x <=* r), (~ x <=* gv1), (~ y <=* l), (~ y <=* r), (~ y <=* gv1), (~ sorted l)
(~ sorted gv1), (~ Permutation l l), (~ Permutation l r), (~ Permutation l gv1), (~ Permutation r l), (~ Permutation r r), (~ Permutation r gv1), (~ Permutation gv1 l), (~ Permutation gv1 r), (~ Permutation gv1 gv1)
(~ In x r), (~ In x gv1), (~ In y l), (~ In y r), (~ In y gv1), (~ x < x), (~ x < y), (~ y < x), (~ y < y), (~ x <= x)
(~ y <= x), (~ y <= y), (x <> x), (x <> y), (y <> x), (y <> y), (l <> l), (l <> r), (l <> gv1), (r <> l)
(r <> gv1), (gv1 <> l), (gv1 <> r), (gv1 <> gv1), (None = Some l), (None = Some r), (None = Some gv1), (x :: l = l), (x :: l = r), (x :: l = gv1)
(x :: l = selection_sort r), (x :: l = selection_sort gv1), (x :: l = selsort l x), (x :: l = selsort l y), (x :: l = selsort r x), (x :: l = selsort r y), (x :: l = selsort gv1 x), (x :: l = selsort gv1 y), (x :: l = l ++ l), (x :: l = l ++ r)
(x :: l = r ++ l), (x :: l = r ++ r), (x :: l = r ++ gv1), (x :: l = gv1 ++ l), (x :: l = gv1 ++ r), (x :: l = gv1 ++ gv1), (x :: l = []), (x :: r = l), (x :: r = r), (x :: r = gv1)
(x :: r = selection_sort r), (x :: r = selection_sort gv1), (x :: r = selsort l x), (x :: r = selsort l y), (x :: r = selsort r x), (x :: r = selsort r y), (x :: r = selsort gv1 x), (x :: r = selsort gv1 y), (x :: r = l ++ l), (x :: r = l ++ r)
(x :: r = r ++ l), (x :: r = r ++ r), (x :: r = r ++ gv1), (x :: r = gv1 ++ l), (x :: r = gv1 ++ r), (x :: r = gv1 ++ gv1), (x :: r = []), (x :: gv1 = l), (x :: gv1 = r), (x :: gv1 = gv1)
(x :: gv1 = selection_sort r), (x :: gv1 = selection_sort gv1), (x :: gv1 = selsort l x), (x :: gv1 = selsort l y), (x :: gv1 = selsort r x), (x :: gv1 = selsort r y), (x :: gv1 = selsort gv1 x), (x :: gv1 = selsort gv1 y), (x :: gv1 = l ++ l), (x :: gv1 = l ++ r)
(x :: gv1 = r ++ l), (x :: gv1 = r ++ r), (x :: gv1 = r ++ gv1), (x :: gv1 = gv1 ++ l), (x :: gv1 = gv1 ++ r), (x :: gv1 = gv1 ++ gv1), (x :: gv1 = []), (y :: l = l), (y :: l = r), (y :: l = gv1)
(y :: l = selection_sort r), (y :: l = selection_sort gv1), (y :: l = selsort l x), (y :: l = selsort l y), (y :: l = selsort r x), (y :: l = selsort r y), (y :: l = selsort gv1 x), (y :: l = selsort gv1 y), (y :: l = l ++ l), (y :: l = l ++ r)
(y :: l = r ++ l), (y :: l = r ++ r), (y :: l = r ++ gv1), (y :: l = gv1 ++ l), (y :: l = gv1 ++ r), (y :: l = gv1 ++ gv1), (y :: l = []), (y :: r = l), (y :: r = r), (y :: r = gv1)
(y :: r = selection_sort r), (y :: r = selection_sort gv1), (y :: r = selsort l x), (y :: r = selsort l y), (y :: r = selsort r x), (y :: r = selsort r y), (y :: r = selsort gv1 x), (y :: r = selsort gv1 y), (y :: r = l ++ l), (y :: r = l ++ r)
(y :: r = r ++ l), (y :: r = r ++ r), (y :: r = r ++ gv1), (y :: r = gv1 ++ l), (y :: r = gv1 ++ r), (y :: r = gv1 ++ gv1), (y :: r = []), (y :: gv1 = l), (y :: gv1 = r), (y :: gv1 = gv1)
(y :: gv1 = selection_sort r), (y :: gv1 = selection_sort gv1), (y :: gv1 = selsort l x), (y :: gv1 = selsort l y), (y :: gv1 = selsort r x), (y :: gv1 = selsort r y), (y :: gv1 = selsort gv1 x), (y :: gv1 = selsort gv1 y), (y :: gv1 = l ++ l), (y :: gv1 = l ++ r)
(y :: gv1 = r ++ l), (y :: gv1 = r ++ r), (y :: gv1 = r ++ gv1), (y :: gv1 = gv1 ++ l), (y :: gv1 = gv1 ++ r), (y :: gv1 = gv1 ++ gv1), (y :: gv1 = []), (selection_sort l = l), (selection_sort l = r), (selection_sort l = gv1)
(selection_sort l = l ++ r), (selection_sort l = l ++ gv1), (selection_sort l = r ++ l), (selection_sort l = r ++ r), (selection_sort l = r ++ gv1), (selection_sort l = gv1 ++ l), (selection_sort l = gv1 ++ r), (selection_sort l = gv1 ++ gv1), (selection_sort r = l), (selection_sort r = r)
(selection_sort r = l ++ l), (selection_sort r = l ++ r), (selection_sort r = l ++ gv1), (selection_sort r = r ++ l), (selection_sort r = r ++ r), (selection_sort r = r ++ gv1), (selection_sort r = gv1 ++ l), (selection_sort r = gv1 ++ r), (selection_sort r = gv1 ++ gv1), (selection_sort gv1 = l)
(selection_sort gv1 = gv1), (selection_sort gv1 = l ++ l), (selection_sort gv1 = l ++ r), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = r ++ l), (selection_sort gv1 = r ++ r), (selection_sort gv1 = r ++ gv1), (selection_sort gv1 = gv1 ++ l), (selection_sort gv1 = gv1 ++ r), (selection_sort gv1 = gv1 ++ gv1)
(selsort l x = r), (selsort l x = gv1), (selsort l x = selection_sort l), (selsort l x = selection_sort r), (selsort l x = selection_sort gv1), (selsort l x = l ++ l), (selsort l x = l ++ r), (selsort l x = l ++ gv1), (selsort l x = r ++ l), (selsort l x = r ++ r)
(selsort l x = gv1 ++ l), (selsort l x = gv1 ++ r), (selsort l x = gv1 ++ gv1), (selsort l y = l), (selsort l y = r), (selsort l y = gv1), (selsort l y = selection_sort l), (selsort l y = selection_sort r), (selsort l y = selection_sort gv1), (selsort l y = l ++ l)
(selsort l y = l ++ gv1), (selsort l y = r ++ l), (selsort l y = r ++ r), (selsort l y = r ++ gv1), (selsort l y = gv1 ++ l), (selsort l y = gv1 ++ r), (selsort l y = gv1 ++ gv1), (selsort r x = l), (selsort r x = r), (selsort r x = gv1)
(selsort r x = selection_sort r), (selsort r x = selection_sort gv1), (selsort r x = l ++ l), (selsort r x = l ++ r), (selsort r x = l ++ gv1), (selsort r x = r ++ l), (selsort r x = r ++ r), (selsort r x = r ++ gv1), (selsort r x = gv1 ++ l), (selsort r x = gv1 ++ r)
(selsort r y = l), (selsort r y = r), (selsort r y = gv1), (selsort r y = selection_sort l), (selsort r y = selection_sort r), (selsort r y = selection_sort gv1), (selsort r y = l ++ l), (selsort r y = l ++ r), (selsort r y = l ++ gv1), (selsort r y = r ++ l)
(selsort r y = r ++ gv1), (selsort r y = gv1 ++ l), (selsort r y = gv1 ++ r), (selsort r y = gv1 ++ gv1), (selsort gv1 x = l), (selsort gv1 x = r), (selsort gv1 x = gv1), (selsort gv1 x = selection_sort l), (selsort gv1 x = selection_sort r), (selsort gv1 x = selection_sort gv1)
(selsort gv1 x = l ++ r), (selsort gv1 x = l ++ gv1), (selsort gv1 x = r ++ l), (selsort gv1 x = r ++ r), (selsort gv1 x = r ++ gv1), (selsort gv1 x = gv1 ++ l), (selsort gv1 x = gv1 ++ r), (selsort gv1 x = gv1 ++ gv1), (selsort gv1 y = l), (selsort gv1 y = r)
(selsort gv1 y = selection_sort l), (selsort gv1 y = selection_sort r), (selsort gv1 y = selection_sort gv1), (selsort gv1 y = l ++ l), (selsort gv1 y = l ++ r), (selsort gv1 y = l ++ gv1), (selsort gv1 y = r ++ l), (selsort gv1 y = r ++ r), (selsort gv1 y = r ++ gv1), (selsort gv1 y = gv1 ++ l)
(selsort gv1 y = gv1 ++ gv1), (l ++ l = l), (l ++ l = r), (l ++ l = gv1), (l ++ r = l), (l ++ r = r), (l ++ r = gv1), (l ++ gv1 = l), (l ++ gv1 = r), (l ++ gv1 = gv1)
(r ++ l = r), (r ++ l = gv1), (r ++ r = l), (r ++ r = r), (r ++ r = gv1), (r ++ gv1 = l), (r ++ gv1 = r), (r ++ gv1 = gv1), (gv1 ++ l = l), (gv1 ++ l = r)
(gv1 ++ r = l), (gv1 ++ r = r), (gv1 ++ r = gv1), (gv1 ++ gv1 = l), (gv1 ++ gv1 = r), (gv1 ++ gv1 = gv1), ([] = l), ([] = r), ([] = gv1), ([] = selection_sort l)
([] = selection_sort gv1), ([] = selsort l x), ([] = selsort l y), ([] = selsort r x), ([] = selsort r y), ([] = selsort gv1 x), ([] = selsort gv1 y), ([] = l ++ l), ([] = l ++ r), ([] = l ++ gv1)
([] = r ++ r), ([] = r ++ gv1), ([] = gv1 ++ l), ([] = gv1 ++ r), ([] = gv1 ++ gv1), (None = Some x), (None = Some y), ((x, l) = select x l), ((x, l) = select x r), ((x, l) = select x gv1)
((x, l) = select y r), ((x, l) = select y gv1), ((x, r) = select x l), ((x, r) = select x r), ((x, r) = select x gv1), ((x, r) = select y l), ((x, r) = select y r), ((x, r) = select y gv1), ((x, gv1) = select x l), ((x, gv1) = select x r)
((x, gv1) = select y l), ((x, gv1) = select y r), ((x, gv1) = select y gv1), ((y, l) = select x l), ((y, l) = select x r), ((y, l) = select x gv1), ((y, l) = select y l), ((y, l) = select y r), ((y, l) = select y gv1), ((y, r) = select x l)
((y, r) = select x gv1), ((y, r) = select y l), ((y, r) = select y r), ((y, r) = select y gv1), ((y, gv1) = select x l), ((y, gv1) = select x r), ((y, gv1) = select x gv1), ((y, gv1) = select y l), ((y, gv1) = select y r), ((y, gv1) = select y gv1)
(length l = y), (length r = x), (length r = y), (length gv1 = x), (length gv1 = y)

Label: 3 (7)
(x <=* l), (x <=* r), (x <=* gv1), (y <=* l), (y <=* r), (y <=* gv1), (sorted l), (sorted r), (sorted gv1), (Permutation l l)
(Permutation l gv1), (Permutation r l), (Permutation r r), (Permutation r gv1), (Permutation gv1 l), (Permutation gv1 r), (Permutation gv1 gv1), (In x l), (In x r), (In x gv1)
(In y r), (In y gv1), (x < x), (x < y), (y < x), (y < y), (x <= x), (x <= y), (y <= x), (y <= y)
(x = y), (y = x), (y = y), (l = l), (l = r), (l = gv1), (r = l), (r = r), (r = gv1), (gv1 = l)
(gv1 = gv1), (false = sorted_bool l), (false = sorted_bool r), (false = sorted_bool gv1), (true = sorted_bool l), (true = sorted_bool r), (true = sorted_bool gv1), (x <=* x :: l), (x <=* x :: r), (x <=* x :: gv1)
(x <=* y :: r), (x <=* y :: gv1), (x <=* selection_sort l), (x <=* selection_sort r), (x <=* selection_sort gv1), (x <=* selsort l x), (x <=* selsort l y), (x <=* selsort r x), (x <=* selsort r y), (x <=* selsort gv1 x)
(x <=* l ++ l), (x <=* l ++ r), (x <=* l ++ gv1), (x <=* r ++ l), (x <=* r ++ r), (x <=* r ++ gv1), (x <=* gv1 ++ l), (x <=* gv1 ++ r), (x <=* gv1 ++ gv1), (x <=* [])
(y <=* x :: r), (y <=* x :: gv1), (y <=* y :: l), (y <=* y :: r), (y <=* y :: gv1), (y <=* selection_sort l), (y <=* selection_sort r), (y <=* selection_sort gv1), (y <=* selsort l x), (y <=* selsort l y)
(y <=* selsort r y), (y <=* selsort gv1 x), (y <=* selsort gv1 y), (y <=* l ++ l), (y <=* l ++ r), (y <=* l ++ gv1), (y <=* r ++ l), (y <=* r ++ r), (y <=* r ++ gv1), (y <=* gv1 ++ l)
(y <=* gv1 ++ gv1), (y <=* []), (length l <=* l), (length l <=* r), (length l <=* gv1), (length l <=* x :: l), (length l <=* x :: r), (length l <=* x :: gv1), (length l <=* y :: l), (length l <=* y :: r)
(length l <=* selection_sort l), (length l <=* selection_sort r), (length l <=* selection_sort gv1), (length l <=* selsort l x), (length l <=* selsort l y), (length l <=* selsort r x), (length l <=* selsort r y), (length l <=* selsort gv1 x), (length l <=* selsort gv1 y), (length l <=* l ++ l)
(length l <=* l ++ gv1), (length l <=* r ++ l), (length l <=* r ++ r), (length l <=* r ++ gv1), (length l <=* gv1 ++ l), (length l <=* gv1 ++ r), (length l <=* gv1 ++ gv1), (length l <=* []), (length r <=* l), (length r <=* r)
(length r <=* x :: l), (length r <=* x :: r), (length r <=* x :: gv1), (length r <=* y :: l), (length r <=* y :: r), (length r <=* y :: gv1), (length r <=* selection_sort l), (length r <=* selection_sort r), (length r <=* selection_sort gv1), (length r <=* selsort l x)
(length r <=* selsort r x), (length r <=* selsort r y), (length r <=* selsort gv1 x), (length r <=* selsort gv1 y), (length r <=* l ++ l), (length r <=* l ++ r), (length r <=* l ++ gv1), (length r <=* r ++ l), (length r <=* r ++ r), (length r <=* r ++ gv1)
(length r <=* gv1 ++ r), (length r <=* gv1 ++ gv1), (length r <=* []), (length gv1 <=* l), (length gv1 <=* r), (length gv1 <=* gv1), (length gv1 <=* x :: l), (length gv1 <=* x :: r), (length gv1 <=* x :: gv1), (length gv1 <=* y :: l)
(length gv1 <=* y :: gv1), (length gv1 <=* selection_sort l), (length gv1 <=* selection_sort r), (length gv1 <=* selection_sort gv1), (length gv1 <=* selsort l x), (length gv1 <=* selsort l y), (length gv1 <=* selsort r x), (length gv1 <=* selsort r y), (length gv1 <=* selsort gv1 x), (length gv1 <=* selsort gv1 y)
(length gv1 <=* l ++ r), (length gv1 <=* l ++ gv1), (length gv1 <=* r ++ l), (length gv1 <=* r ++ r), (length gv1 <=* r ++ gv1), (length gv1 <=* gv1 ++ l), (length gv1 <=* gv1 ++ r), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* []), (sorted (x :: l))
(sorted (x :: gv1)), (sorted (y :: l)), (sorted (y :: r)), (sorted (y :: gv1)), (sorted (selection_sort l)), (sorted (selection_sort r)), (sorted (selection_sort gv1)), (sorted (selsort l x)), (sorted (selsort l y)), (sorted (selsort r x))
(sorted (selsort gv1 x)), (sorted (selsort gv1 y)), (sorted (l ++ l)), (sorted (l ++ r)), (sorted (l ++ gv1)), (sorted (r ++ l)), (sorted (r ++ r)), (sorted (r ++ gv1)), (sorted (gv1 ++ l)), (sorted (gv1 ++ r))
(sorted []), (Permutation l (x :: l)), (Permutation l (x :: r)), (Permutation l (x :: gv1)), (Permutation l (y :: l)), (Permutation l (y :: r)), (Permutation l (y :: gv1)), (Permutation l (selection_sort l)), (Permutation l (selection_sort r)), (Permutation l (selection_sort gv1))
(Permutation l (selsort l y)), (Permutation l (selsort r x)), (Permutation l (selsort r y)), (Permutation l (selsort gv1 x)), (Permutation l (selsort gv1 y)), (Permutation l (l ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ gv1)), (Permutation l (r ++ l)), (Permutation l (r ++ r))
(Permutation l (gv1 ++ l)), (Permutation l (gv1 ++ r)), (Permutation l (gv1 ++ gv1)), (Permutation l []), (Permutation r (x :: l)), (Permutation r (x :: r)), (Permutation r (x :: gv1)), (Permutation r (y :: l)), (Permutation r (y :: r)), (Permutation r (y :: gv1))
(Permutation r (selection_sort r)), (Permutation r (selection_sort gv1)), (Permutation r (selsort l x)), (Permutation r (selsort l y)), (Permutation r (selsort r x)), (Permutation r (selsort r y)), (Permutation r (selsort gv1 x)), (Permutation r (selsort gv1 y)), (Permutation r (l ++ l)), (Permutation r (l ++ r))
(Permutation r (r ++ l)), (Permutation r (r ++ r)), (Permutation r (r ++ gv1)), (Permutation r (gv1 ++ l)), (Permutation r (gv1 ++ r)), (Permutation r (gv1 ++ gv1)), (Permutation r []), (Permutation gv1 (x :: l)), (Permutation gv1 (x :: r)), (Permutation gv1 (x :: gv1))
(Permutation gv1 (y :: r)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selection_sort r)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selsort l x)), (Permutation gv1 (selsort l y)), (Permutation gv1 (selsort r x)), (Permutation gv1 (selsort r y)), (Permutation gv1 (selsort gv1 x))
(Permutation gv1 (l ++ l)), (Permutation gv1 (l ++ r)), (Permutation gv1 (l ++ gv1)), (Permutation gv1 (r ++ l)), (Permutation gv1 (r ++ r)), (Permutation gv1 (r ++ gv1)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (gv1 ++ r)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 [])
(Permutation (x :: l) r), (Permutation (x :: l) gv1), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (x :: gv1)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: gv1)), (Permutation (x :: l) (selection_sort l)), (Permutation (x :: l) (selection_sort r)), (Permutation (x :: l) (selection_sort gv1))
(Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort gv1 x)), (Permutation (x :: l) (selsort gv1 y)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ gv1)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (r ++ r))
(Permutation (x :: l) (gv1 ++ l)), (Permutation (x :: l) (gv1 ++ r)), (Permutation (x :: l) (gv1 ++ gv1)), (Permutation (x :: l) []), (Permutation (x :: r) l), (Permutation (x :: r) r), (Permutation (x :: r) gv1), (Permutation (x :: r) (x :: l)), (Permutation (x :: r) (x :: gv1)), (Permutation (x :: r) (y :: l))
(Permutation (x :: r) (y :: gv1)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selection_sort gv1)), (Permutation (x :: r) (selsort l x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort gv1 x)), (Permutation (x :: r) (selsort gv1 y))
(Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (l ++ gv1)), (Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (r ++ r)), (Permutation (x :: r) (r ++ gv1)), (Permutation (x :: r) (gv1 ++ l)), (Permutation (x :: r) (gv1 ++ r)), (Permutation (x :: r) (gv1 ++ gv1)), (Permutation (x :: r) []), (Permutation (x :: gv1) l)
(Permutation (x :: gv1) gv1), (Permutation (x :: gv1) (x :: l)), (Permutation (x :: gv1) (x :: r)), (Permutation (x :: gv1) (y :: l)), (Permutation (x :: gv1) (y :: r)), (Permutation (x :: gv1) (y :: gv1)), (Permutation (x :: gv1) (selection_sort l)), (Permutation (x :: gv1) (selection_sort r)), (Permutation (x :: gv1) (selection_sort gv1)), (Permutation (x :: gv1) (selsort l x))
(Permutation (x :: gv1) (selsort r x)), (Permutation (x :: gv1) (selsort r y)), (Permutation (x :: gv1) (selsort gv1 x)), (Permutation (x :: gv1) (selsort gv1 y)), (Permutation (x :: gv1) (l ++ l)), (Permutation (x :: gv1) (l ++ r)), (Permutation (x :: gv1) (l ++ gv1)), (Permutation (x :: gv1) (r ++ l)), (Permutation (x :: gv1) (r ++ r)), (Permutation (x :: gv1) (r ++ gv1))
(Permutation (x :: gv1) (gv1 ++ r)), (Permutation (x :: gv1) (gv1 ++ gv1)), (Permutation (x :: gv1) []), (Permutation (y :: l) l), (Permutation (y :: l) r), (Permutation (y :: l) gv1), (Permutation (y :: l) (x :: l)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: gv1)), (Permutation (y :: l) (y :: r))
(Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selection_sort r)), (Permutation (y :: l) (selection_sort gv1)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort r x)), (Permutation (y :: l) (selsort r y)), (Permutation (y :: l) (selsort gv1 x)), (Permutation (y :: l) (selsort gv1 y)), (Permutation (y :: l) (l ++ l))
(Permutation (y :: l) (l ++ gv1)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ gv1)), (Permutation (y :: l) (gv1 ++ l)), (Permutation (y :: l) (gv1 ++ r)), (Permutation (y :: l) (gv1 ++ gv1)), (Permutation (y :: l) []), (Permutation (y :: r) l), (Permutation (y :: r) r)
(Permutation (y :: r) (x :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: gv1)), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (y :: gv1)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort gv1)), (Permutation (y :: r) (selsort l x)), (Permutation (y :: r) (selsort l y))
(Permutation (y :: r) (selsort r y)), (Permutation (y :: r) (selsort gv1 x)), (Permutation (y :: r) (selsort gv1 y)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ gv1)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ gv1)), (Permutation (y :: r) (gv1 ++ l))
(Permutation (y :: r) (gv1 ++ gv1)), (Permutation (y :: r) []), (Permutation (y :: gv1) l), (Permutation (y :: gv1) r), (Permutation (y :: gv1) gv1), (Permutation (y :: gv1) (x :: l)), (Permutation (y :: gv1) (x :: r)), (Permutation (y :: gv1) (x :: gv1)), (Permutation (y :: gv1) (y :: l)), (Permutation (y :: gv1) (y :: r))
(Permutation (y :: gv1) (selection_sort r)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selsort l x)), (Permutation (y :: gv1) (selsort l y)), (Permutation (y :: gv1) (selsort r x)), (Permutation (y :: gv1) (selsort r y)), (Permutation (y :: gv1) (selsort gv1 x)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (l ++ l)), (Permutation (y :: gv1) (l ++ r))
(Permutation (y :: gv1) (r ++ l)), (Permutation (y :: gv1) (r ++ r)), (Permutation (y :: gv1) (r ++ gv1)), (Permutation (y :: gv1) (gv1 ++ l)), (Permutation (y :: gv1) (gv1 ++ r)), (Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) []), (Permutation (selection_sort l) l), (Permutation (selection_sort l) r), (Permutation (selection_sort l) gv1)
(Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: gv1)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (y :: r)), (Permutation (selection_sort l) (y :: gv1)), (Permutation (selection_sort l) (selection_sort r)), (Permutation (selection_sort l) (selection_sort gv1)), (Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort r x))
(Permutation (selection_sort l) (selsort gv1 x)), (Permutation (selection_sort l) (selsort gv1 y)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (gv1 ++ r))
(Permutation (selection_sort l) []), (Permutation (selection_sort r) l), (Permutation (selection_sort r) r), (Permutation (selection_sort r) gv1), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: gv1)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (y :: gv1))
(Permutation (selection_sort r) (selection_sort gv1)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort r x)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort gv1 x)), (Permutation (selection_sort r) (selsort gv1 y)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ gv1))
(Permutation (selection_sort r) (r ++ r)), (Permutation (selection_sort r) (r ++ gv1)), (Permutation (selection_sort r) (gv1 ++ l)), (Permutation (selection_sort r) (gv1 ++ r)), (Permutation (selection_sort r) (gv1 ++ gv1)), (Permutation (selection_sort r) []), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) r), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) (x :: l))
(Permutation (selection_sort gv1) (x :: gv1)), (Permutation (selection_sort gv1) (y :: l)), (Permutation (selection_sort gv1) (y :: r)), (Permutation (selection_sort gv1) (y :: gv1)), (Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selection_sort r)), (Permutation (selection_sort gv1) (selsort l x)), (Permutation (selection_sort gv1) (selsort l y)), (Permutation (selection_sort gv1) (selsort r x)), (Permutation (selection_sort gv1) (selsort r y))
(Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) (l ++ r)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (r ++ l)), (Permutation (selection_sort gv1) (r ++ r)), (Permutation (selection_sort gv1) (r ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (gv1 ++ r)), (Permutation (selection_sort gv1) (gv1 ++ gv1))
(Permutation (selsort l x) l), (Permutation (selsort l x) r), (Permutation (selsort l x) gv1), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (x :: r)), (Permutation (selsort l x) (x :: gv1)), (Permutation (selsort l x) (y :: l)), (Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (y :: gv1)), (Permutation (selsort l x) (selection_sort l))
(Permutation (selsort l x) (selection_sort gv1)), (Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (selsort r x)), (Permutation (selsort l x) (selsort r y)), (Permutation (selsort l x) (selsort gv1 x)), (Permutation (selsort l x) (selsort gv1 y)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ gv1)), (Permutation (selsort l x) (r ++ l))
(Permutation (selsort l x) (r ++ gv1)), (Permutation (selsort l x) (gv1 ++ l)), (Permutation (selsort l x) (gv1 ++ r)), (Permutation (selsort l x) (gv1 ++ gv1)), (Permutation (selsort l x) []), (Permutation (selsort l y) l), (Permutation (selsort l y) r), (Permutation (selsort l y) gv1), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (x :: r))
(Permutation (selsort l y) (y :: l)), (Permutation (selsort l y) (y :: r)), (Permutation (selsort l y) (y :: gv1)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort gv1)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort r y)), (Permutation (selsort l y) (selsort gv1 x))
(Permutation (selsort l y) (l ++ l)), (Permutation (selsort l y) (l ++ r)), (Permutation (selsort l y) (l ++ gv1)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ gv1)), (Permutation (selsort l y) (gv1 ++ l)), (Permutation (selsort l y) (gv1 ++ r)), (Permutation (selsort l y) (gv1 ++ gv1)), (Permutation (selsort l y) [])
(Permutation (selsort r x) r), (Permutation (selsort r x) gv1), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: gv1)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: gv1)), (Permutation (selsort r x) (selection_sort l)), (Permutation (selsort r x) (selection_sort r))
(Permutation (selsort r x) (selsort l x)), (Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort r y)), (Permutation (selsort r x) (selsort gv1 x)), (Permutation (selsort r x) (selsort gv1 y)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ gv1)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (r ++ r))
(Permutation (selsort r x) (gv1 ++ l)), (Permutation (selsort r x) (gv1 ++ r)), (Permutation (selsort r x) (gv1 ++ gv1)), (Permutation (selsort r x) []), (Permutation (selsort r y) l), (Permutation (selsort r y) r), (Permutation (selsort r y) gv1), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: gv1))
(Permutation (selsort r y) (y :: r)), (Permutation (selsort r y) (y :: gv1)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selection_sort gv1)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort gv1 x)), (Permutation (selsort r y) (selsort gv1 y))
(Permutation (selsort r y) (l ++ r)), (Permutation (selsort r y) (l ++ gv1)), (Permutation (selsort r y) (r ++ l)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) (r ++ gv1)), (Permutation (selsort r y) (gv1 ++ l)), (Permutation (selsort r y) (gv1 ++ r)), (Permutation (selsort r y) (gv1 ++ gv1)), (Permutation (selsort r y) []), (Permutation (selsort gv1 x) l)
(Permutation (selsort gv1 x) gv1), (Permutation (selsort gv1 x) (x :: l)), (Permutation (selsort gv1 x) (x :: r)), (Permutation (selsort gv1 x) (x :: gv1)), (Permutation (selsort gv1 x) (y :: l)), (Permutation (selsort gv1 x) (y :: r)), (Permutation (selsort gv1 x) (y :: gv1)), (Permutation (selsort gv1 x) (selection_sort l)), (Permutation (selsort gv1 x) (selection_sort r)), (Permutation (selsort gv1 x) (selection_sort gv1))
(Permutation (selsort gv1 x) (selsort l y)), (Permutation (selsort gv1 x) (selsort r x)), (Permutation (selsort gv1 x) (selsort r y)), (Permutation (selsort gv1 x) (selsort gv1 y)), (Permutation (selsort gv1 x) (l ++ l)), (Permutation (selsort gv1 x) (l ++ r)), (Permutation (selsort gv1 x) (l ++ gv1)), (Permutation (selsort gv1 x) (r ++ l)), (Permutation (selsort gv1 x) (r ++ r)), (Permutation (selsort gv1 x) (r ++ gv1))
(Permutation (selsort gv1 x) (gv1 ++ r)), (Permutation (selsort gv1 x) (gv1 ++ gv1)), (Permutation (selsort gv1 x) []), (Permutation (selsort gv1 y) l), (Permutation (selsort gv1 y) r), (Permutation (selsort gv1 y) gv1), (Permutation (selsort gv1 y) (x :: l)), (Permutation (selsort gv1 y) (x :: r)), (Permutation (selsort gv1 y) (x :: gv1)), (Permutation (selsort gv1 y) (y :: l))
(Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (selection_sort l)), (Permutation (selsort gv1 y) (selection_sort r)), (Permutation (selsort gv1 y) (selection_sort gv1)), (Permutation (selsort gv1 y) (selsort l x)), (Permutation (selsort gv1 y) (selsort l y)), (Permutation (selsort gv1 y) (selsort r x)), (Permutation (selsort gv1 y) (selsort r y)), (Permutation (selsort gv1 y) (selsort gv1 x)), (Permutation (selsort gv1 y) (l ++ l))
(Permutation (selsort gv1 y) (l ++ gv1)), (Permutation (selsort gv1 y) (r ++ l)), (Permutation (selsort gv1 y) (r ++ r)), (Permutation (selsort gv1 y) (r ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ l)), (Permutation (selsort gv1 y) (gv1 ++ r)), (Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) []), (Permutation (l ++ l) l), (Permutation (l ++ l) r)
(Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (x :: gv1)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: gv1)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort l x))
(Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort gv1 x)), (Permutation (l ++ l) (selsort gv1 y)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) (l ++ gv1)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ gv1)), (Permutation (l ++ l) (gv1 ++ l))
(Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) []), (Permutation (l ++ r) l), (Permutation (l ++ r) r), (Permutation (l ++ r) gv1), (Permutation (l ++ r) (x :: l)), (Permutation (l ++ r) (x :: r)), (Permutation (l ++ r) (x :: gv1)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (y :: r))
(Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selection_sort gv1)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort gv1 x)), (Permutation (l ++ r) (selsort gv1 y)), (Permutation (l ++ r) (l ++ l))
(Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ gv1)), (Permutation (l ++ r) (gv1 ++ l)), (Permutation (l ++ r) (gv1 ++ r)), (Permutation (l ++ r) (gv1 ++ gv1)), (Permutation (l ++ r) []), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) r), (Permutation (l ++ gv1) gv1)
(Permutation (l ++ gv1) (x :: r)), (Permutation (l ++ gv1) (x :: gv1)), (Permutation (l ++ gv1) (y :: l)), (Permutation (l ++ gv1) (y :: r)), (Permutation (l ++ gv1) (y :: gv1)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selection_sort r)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selsort l x)), (Permutation (l ++ gv1) (selsort l y))
(Permutation (l ++ gv1) (selsort r y)), (Permutation (l ++ gv1) (selsort gv1 x)), (Permutation (l ++ gv1) (selsort gv1 y)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) (l ++ r)), (Permutation (l ++ gv1) (r ++ l)), (Permutation (l ++ gv1) (r ++ r)), (Permutation (l ++ gv1) (r ++ gv1)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (gv1 ++ r))
(Permutation (l ++ gv1) []), (Permutation (r ++ l) l), (Permutation (r ++ l) r), (Permutation (r ++ l) gv1), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (x :: gv1)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (y :: gv1))
(Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort gv1)), (Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (selsort l y)), (Permutation (r ++ l) (selsort r x)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort gv1 x)), (Permutation (r ++ l) (selsort gv1 y)), (Permutation (r ++ l) (l ++ l)), (Permutation (r ++ l) (l ++ r))
(Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (r ++ gv1)), (Permutation (r ++ l) (gv1 ++ l)), (Permutation (r ++ l) (gv1 ++ r)), (Permutation (r ++ l) (gv1 ++ gv1)), (Permutation (r ++ l) []), (Permutation (r ++ r) l), (Permutation (r ++ r) r), (Permutation (r ++ r) gv1), (Permutation (r ++ r) (x :: l))
(Permutation (r ++ r) (x :: gv1)), (Permutation (r ++ r) (y :: l)), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: gv1)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort gv1)), (Permutation (r ++ r) (selsort l x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort r x))
(Permutation (r ++ r) (selsort gv1 x)), (Permutation (r ++ r) (selsort gv1 y)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ gv1)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (r ++ gv1)), (Permutation (r ++ r) (gv1 ++ l)), (Permutation (r ++ r) (gv1 ++ r)), (Permutation (r ++ r) (gv1 ++ gv1))
(Permutation (r ++ gv1) l), (Permutation (r ++ gv1) r), (Permutation (r ++ gv1) gv1), (Permutation (r ++ gv1) (x :: l)), (Permutation (r ++ gv1) (x :: r)), (Permutation (r ++ gv1) (x :: gv1)), (Permutation (r ++ gv1) (y :: l)), (Permutation (r ++ gv1) (y :: r)), (Permutation (r ++ gv1) (y :: gv1)), (Permutation (r ++ gv1) (selection_sort l))
(Permutation (r ++ gv1) (selection_sort gv1)), (Permutation (r ++ gv1) (selsort l x)), (Permutation (r ++ gv1) (selsort l y)), (Permutation (r ++ gv1) (selsort r x)), (Permutation (r ++ gv1) (selsort r y)), (Permutation (r ++ gv1) (selsort gv1 x)), (Permutation (r ++ gv1) (selsort gv1 y)), (Permutation (r ++ gv1) (l ++ l)), (Permutation (r ++ gv1) (l ++ r)), (Permutation (r ++ gv1) (l ++ gv1))
(Permutation (r ++ gv1) (r ++ r)), (Permutation (r ++ gv1) (gv1 ++ l)), (Permutation (r ++ gv1) (gv1 ++ r)), (Permutation (r ++ gv1) (gv1 ++ gv1)), (Permutation (r ++ gv1) []), (Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) r), (Permutation (gv1 ++ l) gv1), (Permutation (gv1 ++ l) (x :: l)), (Permutation (gv1 ++ l) (x :: r))
(Permutation (gv1 ++ l) (y :: l)), (Permutation (gv1 ++ l) (y :: r)), (Permutation (gv1 ++ l) (y :: gv1)), (Permutation (gv1 ++ l) (selection_sort l)), (Permutation (gv1 ++ l) (selection_sort r)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selsort l x)), (Permutation (gv1 ++ l) (selsort l y)), (Permutation (gv1 ++ l) (selsort r x)), (Permutation (gv1 ++ l) (selsort r y))
(Permutation (gv1 ++ l) (selsort gv1 y)), (Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) (l ++ r)), (Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (r ++ l)), (Permutation (gv1 ++ l) (r ++ r)), (Permutation (gv1 ++ l) (r ++ gv1)), (Permutation (gv1 ++ l) (gv1 ++ r)), (Permutation (gv1 ++ l) (gv1 ++ gv1)), (Permutation (gv1 ++ l) [])
(Permutation (gv1 ++ r) r), (Permutation (gv1 ++ r) gv1), (Permutation (gv1 ++ r) (x :: l)), (Permutation (gv1 ++ r) (x :: r)), (Permutation (gv1 ++ r) (x :: gv1)), (Permutation (gv1 ++ r) (y :: l)), (Permutation (gv1 ++ r) (y :: r)), (Permutation (gv1 ++ r) (y :: gv1)), (Permutation (gv1 ++ r) (selection_sort l)), (Permutation (gv1 ++ r) (selection_sort r))
(Permutation (gv1 ++ r) (selsort l x)), (Permutation (gv1 ++ r) (selsort l y)), (Permutation (gv1 ++ r) (selsort r x)), (Permutation (gv1 ++ r) (selsort r y)), (Permutation (gv1 ++ r) (selsort gv1 x)), (Permutation (gv1 ++ r) (selsort gv1 y)), (Permutation (gv1 ++ r) (l ++ l)), (Permutation (gv1 ++ r) (l ++ r)), (Permutation (gv1 ++ r) (l ++ gv1)), (Permutation (gv1 ++ r) (r ++ l))
(Permutation (gv1 ++ r) (r ++ gv1)), (Permutation (gv1 ++ r) (gv1 ++ l)), (Permutation (gv1 ++ r) (gv1 ++ gv1)), (Permutation (gv1 ++ r) []), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) r), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) (x :: l)), (Permutation (gv1 ++ gv1) (x :: r)), (Permutation (gv1 ++ gv1) (x :: gv1))
(Permutation (gv1 ++ gv1) (y :: r)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selection_sort r)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selsort l x)), (Permutation (gv1 ++ gv1) (selsort l y)), (Permutation (gv1 ++ gv1) (selsort r x)), (Permutation (gv1 ++ gv1) (selsort r y)), (Permutation (gv1 ++ gv1) (selsort gv1 x))
(Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) (l ++ r)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (r ++ l)), (Permutation (gv1 ++ gv1) (r ++ r)), (Permutation (gv1 ++ gv1) (r ++ gv1)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) (gv1 ++ r)), (Permutation (gv1 ++ gv1) []), (Permutation [] l)
(Permutation [] gv1), (Permutation [] (x :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: gv1)), (Permutation [] (y :: l)), (Permutation [] (y :: r)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort l)), (Permutation [] (selection_sort r)), (Permutation [] (selection_sort gv1))
(Permutation [] (selsort l y)), (Permutation [] (selsort r x)), (Permutation [] (selsort r y)), (Permutation [] (selsort gv1 x)), (Permutation [] (selsort gv1 y)), (Permutation [] (l ++ l)), (Permutation [] (l ++ r)), (Permutation [] (l ++ gv1)), (Permutation [] (r ++ l)), (Permutation [] (r ++ r))
(Permutation [] (gv1 ++ l)), (Permutation [] (gv1 ++ r)), (Permutation [] (gv1 ++ gv1)), (In x (x :: l)), (In x (x :: r)), (In x (x :: gv1)), (In x (y :: l)), (In x (y :: r)), (In x (y :: gv1)), (In x (selection_sort l))
(In x (selection_sort gv1)), (In x (selsort l x)), (In x (selsort l y)), (In x (selsort r x)), (In x (selsort r y)), (In x (selsort gv1 x)), (In x (selsort gv1 y)), (In x (l ++ l)), (In x (l ++ r)), (In x (l ++ gv1))
(In x (r ++ r)), (In x (r ++ gv1)), (In x (gv1 ++ l)), (In x (gv1 ++ r)), (In x (gv1 ++ gv1)), (In y (x :: l)), (In y (x :: r)), (In y (x :: gv1)), (In y (y :: l)), (In y (y :: r))
(In y (selection_sort l)), (In y (selection_sort r)), (In y (selection_sort gv1)), (In y (selsort l x)), (In y (selsort l y)), (In y (selsort r x)), (In y (selsort r y)), (In y (selsort gv1 x)), (In y (selsort gv1 y)), (In y (l ++ l))
(In y (l ++ gv1)), (In y (r ++ l)), (In y (r ++ r)), (In y (r ++ gv1)), (In y (gv1 ++ l)), (In y (gv1 ++ r)), (In y (gv1 ++ gv1)), (In (length l) l), (In (length l) r), (In (length l) gv1)
(In (length l) (x :: r)), (In (length l) (x :: gv1)), (In (length l) (y :: l)), (In (length l) (y :: r)), (In (length l) (y :: gv1)), (In (length l) (selection_sort l)), (In (length l) (selection_sort r)), (In (length l) (selection_sort gv1)), (In (length l) (selsort l x)), (In (length l) (selsort l y))
(In (length l) (selsort r y)), (In (length l) (selsort gv1 x)), (In (length l) (selsort gv1 y)), (In (length l) (l ++ l)), (In (length l) (l ++ r)), (In (length l) (l ++ gv1)), (In (length l) (r ++ l)), (In (length l) (r ++ r)), (In (length l) (r ++ gv1)), (In (length l) (gv1 ++ l))
(In (length l) (gv1 ++ gv1)), (In (length r) l), (In (length r) r), (In (length r) gv1), (In (length r) (x :: l)), (In (length r) (x :: r)), (In (length r) (x :: gv1)), (In (length r) (y :: l)), (In (length r) (y :: r)), (In (length r) (y :: gv1))
(In (length r) (selection_sort r)), (In (length r) (selection_sort gv1)), (In (length r) (selsort l x)), (In (length r) (selsort l y)), (In (length r) (selsort r x)), (In (length r) (selsort r y)), (In (length r) (selsort gv1 x)), (In (length r) (selsort gv1 y)), (In (length r) (l ++ l)), (In (length r) (l ++ r))
(In (length r) (r ++ l)), (In (length r) (r ++ r)), (In (length r) (r ++ gv1)), (In (length r) (gv1 ++ l)), (In (length r) (gv1 ++ r)), (In (length r) (gv1 ++ gv1)), (In (length gv1) l), (In (length gv1) r), (In (length gv1) gv1), (In (length gv1) (x :: l))
(In (length gv1) (x :: gv1)), (In (length gv1) (y :: l)), (In (length gv1) (y :: r)), (In (length gv1) (y :: gv1)), (In (length gv1) (selection_sort l)), (In (length gv1) (selection_sort r)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selsort l x)), (In (length gv1) (selsort l y)), (In (length gv1) (selsort r x))
(In (length gv1) (selsort gv1 x)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (l ++ l)), (In (length gv1) (l ++ r)), (In (length gv1) (l ++ gv1)), (In (length gv1) (r ++ l)), (In (length gv1) (r ++ r)), (In (length gv1) (r ++ gv1)), (In (length gv1) (gv1 ++ l)), (In (length gv1) (gv1 ++ r))
(x < length l), (x < length r), (x < length gv1), (y < length l), (y < length r), (y < length gv1), (length l < x), (length l < y), (length l < length r), (length l < length gv1)
(length r < y), (length r < length l), (length r < length gv1), (length gv1 < x), (length gv1 < y), (length gv1 < length l), (length gv1 < length r), (x <= length l), (x <= length r), (x <= length gv1)
(y <= length r), (y <= length gv1), (length l <= x), (length l <= y), (length l <= length r), (length l <= length gv1), (length r <= x), (length r <= y), (length r <= length l), (length r <= length gv1)
(length gv1 <= y), (length gv1 <= length l), (length gv1 <= length r), (~ x <=* l), (~ x <=* r), (~ x <=* gv1), (~ y <=* l), (~ y <=* r), (~ y <=* gv1), (~ sorted l)
(~ sorted gv1), (~ Permutation l l), (~ Permutation l r), (~ Permutation l gv1), (~ Permutation r l), (~ Permutation r r), (~ Permutation r gv1), (~ Permutation gv1 l), (~ Permutation gv1 r), (~ Permutation gv1 gv1)
(~ In x r), (~ In x gv1), (~ In y l), (~ In y r), (~ In y gv1), (~ x < x), (~ x < y), (~ y < x), (~ y < y), (~ x <= x)
(~ y <= x), (~ y <= y), (x <> x), (x <> y), (y <> x), (y <> y), (l <> l), (l <> r), (l <> gv1), (r <> l)
(r <> gv1), (gv1 <> l), (gv1 <> r), (gv1 <> gv1), (None = Some l), (None = Some r), (None = Some gv1), (x :: l = l), (x :: l = r), (x :: l = gv1)
(x :: l = selection_sort r), (x :: l = selection_sort gv1), (x :: l = selsort l x), (x :: l = selsort l y), (x :: l = selsort r x), (x :: l = selsort r y), (x :: l = selsort gv1 x), (x :: l = selsort gv1 y), (x :: l = l ++ l), (x :: l = l ++ r)
(x :: l = r ++ l), (x :: l = r ++ r), (x :: l = r ++ gv1), (x :: l = gv1 ++ l), (x :: l = gv1 ++ r), (x :: l = gv1 ++ gv1), (x :: l = []), (x :: r = l), (x :: r = r), (x :: r = gv1)
(x :: r = selection_sort r), (x :: r = selection_sort gv1), (x :: r = selsort l x), (x :: r = selsort l y), (x :: r = selsort r x), (x :: r = selsort r y), (x :: r = selsort gv1 x), (x :: r = selsort gv1 y), (x :: r = l ++ l), (x :: r = l ++ r)
(x :: r = r ++ l), (x :: r = r ++ r), (x :: r = r ++ gv1), (x :: r = gv1 ++ l), (x :: r = gv1 ++ r), (x :: r = gv1 ++ gv1), (x :: r = []), (x :: gv1 = l), (x :: gv1 = r), (x :: gv1 = gv1)
(x :: gv1 = selection_sort r), (x :: gv1 = selection_sort gv1), (x :: gv1 = selsort l x), (x :: gv1 = selsort l y), (x :: gv1 = selsort r x), (x :: gv1 = selsort r y), (x :: gv1 = selsort gv1 x), (x :: gv1 = selsort gv1 y), (x :: gv1 = l ++ l), (x :: gv1 = l ++ r)
(x :: gv1 = r ++ l), (x :: gv1 = r ++ r), (x :: gv1 = r ++ gv1), (x :: gv1 = gv1 ++ l), (x :: gv1 = gv1 ++ r), (x :: gv1 = gv1 ++ gv1), (x :: gv1 = []), (y :: l = l), (y :: l = r), (y :: l = gv1)
(y :: l = selection_sort r), (y :: l = selection_sort gv1), (y :: l = selsort l x), (y :: l = selsort l y), (y :: l = selsort r x), (y :: l = selsort r y), (y :: l = selsort gv1 x), (y :: l = selsort gv1 y), (y :: l = l ++ l), (y :: l = l ++ r)
(y :: l = r ++ l), (y :: l = r ++ r), (y :: l = r ++ gv1), (y :: l = gv1 ++ l), (y :: l = gv1 ++ r), (y :: l = gv1 ++ gv1), (y :: l = []), (y :: r = l), (y :: r = r), (y :: r = gv1)
(y :: r = selection_sort r), (y :: r = selection_sort gv1), (y :: r = selsort l x), (y :: r = selsort l y), (y :: r = selsort r x), (y :: r = selsort r y), (y :: r = selsort gv1 x), (y :: r = selsort gv1 y), (y :: r = l ++ l), (y :: r = l ++ r)
(y :: r = r ++ l), (y :: r = r ++ r), (y :: r = r ++ gv1), (y :: r = gv1 ++ l), (y :: r = gv1 ++ r), (y :: r = gv1 ++ gv1), (y :: r = []), (y :: gv1 = l), (y :: gv1 = r), (y :: gv1 = gv1)
(y :: gv1 = selection_sort r), (y :: gv1 = selection_sort gv1), (y :: gv1 = selsort l x), (y :: gv1 = selsort l y), (y :: gv1 = selsort r x), (y :: gv1 = selsort r y), (y :: gv1 = selsort gv1 x), (y :: gv1 = selsort gv1 y), (y :: gv1 = l ++ l), (y :: gv1 = l ++ r)
(y :: gv1 = r ++ l), (y :: gv1 = r ++ r), (y :: gv1 = r ++ gv1), (y :: gv1 = gv1 ++ l), (y :: gv1 = gv1 ++ r), (y :: gv1 = gv1 ++ gv1), (y :: gv1 = []), (selection_sort l = l), (selection_sort l = r), (selection_sort l = gv1)
(selection_sort l = l ++ r), (selection_sort l = l ++ gv1), (selection_sort l = r ++ l), (selection_sort l = r ++ r), (selection_sort l = r ++ gv1), (selection_sort l = gv1 ++ l), (selection_sort l = gv1 ++ r), (selection_sort l = gv1 ++ gv1), (selection_sort r = l), (selection_sort r = r)
(selection_sort r = l ++ l), (selection_sort r = l ++ r), (selection_sort r = l ++ gv1), (selection_sort r = r ++ l), (selection_sort r = r ++ r), (selection_sort r = r ++ gv1), (selection_sort r = gv1 ++ l), (selection_sort r = gv1 ++ r), (selection_sort r = gv1 ++ gv1), (selection_sort gv1 = l)
(selection_sort gv1 = gv1), (selection_sort gv1 = l ++ l), (selection_sort gv1 = l ++ r), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = r ++ l), (selection_sort gv1 = r ++ r), (selection_sort gv1 = r ++ gv1), (selection_sort gv1 = gv1 ++ l), (selection_sort gv1 = gv1 ++ r), (selection_sort gv1 = gv1 ++ gv1)
(selsort l x = r), (selsort l x = gv1), (selsort l x = selection_sort l), (selsort l x = selection_sort r), (selsort l x = selection_sort gv1), (selsort l x = l ++ l), (selsort l x = l ++ r), (selsort l x = l ++ gv1), (selsort l x = r ++ l), (selsort l x = r ++ r)
(selsort l x = gv1 ++ l), (selsort l x = gv1 ++ r), (selsort l x = gv1 ++ gv1), (selsort l y = l), (selsort l y = r), (selsort l y = gv1), (selsort l y = selection_sort l), (selsort l y = selection_sort r), (selsort l y = selection_sort gv1), (selsort l y = l ++ l)
(selsort l y = l ++ gv1), (selsort l y = r ++ l), (selsort l y = r ++ r), (selsort l y = r ++ gv1), (selsort l y = gv1 ++ l), (selsort l y = gv1 ++ r), (selsort l y = gv1 ++ gv1), (selsort r x = l), (selsort r x = r), (selsort r x = gv1)
(selsort r x = selection_sort r), (selsort r x = selection_sort gv1), (selsort r x = l ++ l), (selsort r x = l ++ r), (selsort r x = l ++ gv1), (selsort r x = r ++ l), (selsort r x = r ++ r), (selsort r x = r ++ gv1), (selsort r x = gv1 ++ l), (selsort r x = gv1 ++ r)
(selsort r y = l), (selsort r y = r), (selsort r y = gv1), (selsort r y = selection_sort l), (selsort r y = selection_sort r), (selsort r y = selection_sort gv1), (selsort r y = l ++ l), (selsort r y = l ++ r), (selsort r y = l ++ gv1), (selsort r y = r ++ l)
(selsort r y = r ++ gv1), (selsort r y = gv1 ++ l), (selsort r y = gv1 ++ r), (selsort r y = gv1 ++ gv1), (selsort gv1 x = l), (selsort gv1 x = r), (selsort gv1 x = gv1), (selsort gv1 x = selection_sort l), (selsort gv1 x = selection_sort r), (selsort gv1 x = selection_sort gv1)
(selsort gv1 x = l ++ r), (selsort gv1 x = l ++ gv1), (selsort gv1 x = r ++ l), (selsort gv1 x = r ++ r), (selsort gv1 x = r ++ gv1), (selsort gv1 x = gv1 ++ l), (selsort gv1 x = gv1 ++ r), (selsort gv1 x = gv1 ++ gv1), (selsort gv1 y = l), (selsort gv1 y = r)
(selsort gv1 y = selection_sort l), (selsort gv1 y = selection_sort r), (selsort gv1 y = selection_sort gv1), (selsort gv1 y = l ++ l), (selsort gv1 y = l ++ r), (selsort gv1 y = l ++ gv1), (selsort gv1 y = r ++ l), (selsort gv1 y = r ++ r), (selsort gv1 y = r ++ gv1), (selsort gv1 y = gv1 ++ l)
(selsort gv1 y = gv1 ++ gv1), (l ++ l = l), (l ++ l = r), (l ++ l = gv1), (l ++ r = l), (l ++ r = r), (l ++ r = gv1), (l ++ gv1 = l), (l ++ gv1 = r), (l ++ gv1 = gv1)
(r ++ l = r), (r ++ l = gv1), (r ++ r = l), (r ++ r = r), (r ++ r = gv1), (r ++ gv1 = l), (r ++ gv1 = r), (r ++ gv1 = gv1), (gv1 ++ l = l), (gv1 ++ l = r)
(gv1 ++ r = l), (gv1 ++ r = r), (gv1 ++ r = gv1), (gv1 ++ gv1 = l), (gv1 ++ gv1 = r), (gv1 ++ gv1 = gv1), ([] = l), ([] = r), ([] = gv1), ([] = selection_sort l)
([] = selection_sort gv1), ([] = selsort l x), ([] = selsort l y), ([] = selsort r x), ([] = selsort r y), ([] = selsort gv1 x), ([] = selsort gv1 y), ([] = l ++ l), ([] = l ++ r), ([] = l ++ gv1)
([] = r ++ r), ([] = r ++ gv1), ([] = gv1 ++ l), ([] = gv1 ++ r), ([] = gv1 ++ gv1), (None = Some x), (None = Some y), ((x, l) = select x l), ((x, l) = select x r), ((x, l) = select x gv1)
((x, l) = select y r), ((x, l) = select y gv1), ((x, r) = select x l), ((x, r) = select x r), ((x, r) = select x gv1), ((x, r) = select y l), ((x, r) = select y r), ((x, r) = select y gv1), ((x, gv1) = select x l), ((x, gv1) = select x r)
((x, gv1) = select y l), ((x, gv1) = select y r), ((x, gv1) = select y gv1), ((y, l) = select x l), ((y, l) = select x r), ((y, l) = select x gv1), ((y, l) = select y l), ((y, l) = select y r), ((y, l) = select y gv1), ((y, r) = select x l)
((y, r) = select x gv1), ((y, r) = select y l), ((y, r) = select y r), ((y, r) = select y gv1), ((y, gv1) = select x l), ((y, gv1) = select x r), ((y, gv1) = select x gv1), ((y, gv1) = select y l), ((y, gv1) = select y r), ((y, gv1) = select y gv1)
(length l = y), (length r = x), (length r = y), (length gv1 = x), (length gv1 = y)

Label: 4 (8)
(y <=* r), (y <=* l), (x <=* r), (x <=* l), (sorted r), (sorted l), (Permutation r r), (Permutation r l), (Permutation l r), (Permutation l l)
(In y l), (In x r), (In x l), (y < y), (y < x), (x < y), (x < x), (y <= y), (y <= x), (x <= y)
(r = r), (r = l), (l = r), (l = l), (y = y), (y = x), (x = y), (x = x), (false = sorted_bool r), (false = sorted_bool l)
(true = sorted_bool l), (y <=* y :: r), (y <=* y :: l), (y <=* x :: r), (y <=* x :: l), (y <=* selection_sort r), (y <=* selection_sort l), (y <=* selsort r y), (y <=* selsort r x), (y <=* selsort l y)
(y <=* r ++ r), (y <=* r ++ l), (y <=* l ++ r), (y <=* l ++ l), (y <=* []), (x <=* y :: r), (x <=* y :: l), (x <=* x :: r), (x <=* x :: l), (x <=* selection_sort r)
(x <=* selsort r y), (x <=* selsort r x), (x <=* selsort l y), (x <=* selsort l x), (x <=* r ++ r), (x <=* r ++ l), (x <=* l ++ r), (x <=* l ++ l), (x <=* []), (length r <=* r)
(length r <=* y :: r), (length r <=* y :: l), (length r <=* x :: r), (length r <=* x :: l), (length r <=* selection_sort r), (length r <=* selection_sort l), (length r <=* selsort r y), (length r <=* selsort r x), (length r <=* selsort l y), (length r <=* selsort l x)
(length r <=* r ++ l), (length r <=* l ++ r), (length r <=* l ++ l), (length r <=* []), (length l <=* r), (length l <=* l), (length l <=* y :: r), (length l <=* y :: l), (length l <=* x :: r), (length l <=* x :: l)
(length l <=* selection_sort l), (length l <=* selsort r y), (length l <=* selsort r x), (length l <=* selsort l y), (length l <=* selsort l x), (length l <=* r ++ r), (length l <=* r ++ l), (length l <=* l ++ r), (length l <=* l ++ l), (length l <=* [])
(sorted (y :: l)), (sorted (x :: r)), (sorted (x :: l)), (sorted (selection_sort r)), (sorted (selection_sort l)), (sorted (selsort r y)), (sorted (selsort r x)), (sorted (selsort l y)), (sorted (selsort l x)), (sorted (r ++ r))
(sorted (l ++ r)), (sorted (l ++ l)), (sorted []), (Permutation r (y :: r)), (Permutation r (y :: l)), (Permutation r (x :: r)), (Permutation r (x :: l)), (Permutation r (selection_sort r)), (Permutation r (selection_sort l)), (Permutation r (selsort r y))
(Permutation r (selsort l y)), (Permutation r (selsort l x)), (Permutation r (r ++ r)), (Permutation r (r ++ l)), (Permutation r (l ++ r)), (Permutation r (l ++ l)), (Permutation r []), (Permutation l (y :: r)), (Permutation l (y :: l)), (Permutation l (x :: r))
(Permutation l (selection_sort r)), (Permutation l (selection_sort l)), (Permutation l (selsort r y)), (Permutation l (selsort r x)), (Permutation l (selsort l y)), (Permutation l (selsort l x)), (Permutation l (r ++ r)), (Permutation l (r ++ l)), (Permutation l (l ++ r)), (Permutation l (l ++ l))
(Permutation (y :: r) r), (Permutation (y :: r) l), (Permutation (y :: r) (y :: l)), (Permutation (y :: r) (x :: r)), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort r)), (Permutation (y :: r) (selection_sort l)), (Permutation (y :: r) (selsort r y)), (Permutation (y :: r) (selsort r x)), (Permutation (y :: r) (selsort l y))
(Permutation (y :: r) (r ++ r)), (Permutation (y :: r) (r ++ l)), (Permutation (y :: r) (l ++ r)), (Permutation (y :: r) (l ++ l)), (Permutation (y :: r) []), (Permutation (y :: l) r), (Permutation (y :: l) l), (Permutation (y :: l) (y :: r)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (x :: l))
(Permutation (y :: l) (selection_sort l)), (Permutation (y :: l) (selsort r y)), (Permutation (y :: l) (selsort r x)), (Permutation (y :: l) (selsort l y)), (Permutation (y :: l) (selsort l x)), (Permutation (y :: l) (r ++ r)), (Permutation (y :: l) (r ++ l)), (Permutation (y :: l) (l ++ r)), (Permutation (y :: l) (l ++ l)), (Permutation (y :: l) [])
(Permutation (x :: r) l), (Permutation (x :: r) (y :: r)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (x :: l)), (Permutation (x :: r) (selection_sort r)), (Permutation (x :: r) (selection_sort l)), (Permutation (x :: r) (selsort r y)), (Permutation (x :: r) (selsort r x)), (Permutation (x :: r) (selsort l y)), (Permutation (x :: r) (selsort l x))
(Permutation (x :: r) (r ++ l)), (Permutation (x :: r) (l ++ r)), (Permutation (x :: r) (l ++ l)), (Permutation (x :: r) []), (Permutation (x :: l) r), (Permutation (x :: l) l), (Permutation (x :: l) (y :: r)), (Permutation (x :: l) (y :: l)), (Permutation (x :: l) (x :: r)), (Permutation (x :: l) (selection_sort r))
(Permutation (x :: l) (selsort r y)), (Permutation (x :: l) (selsort r x)), (Permutation (x :: l) (selsort l y)), (Permutation (x :: l) (selsort l x)), (Permutation (x :: l) (r ++ r)), (Permutation (x :: l) (r ++ l)), (Permutation (x :: l) (l ++ r)), (Permutation (x :: l) (l ++ l)), (Permutation (x :: l) []), (Permutation (selection_sort r) r)
(Permutation (selection_sort r) (y :: r)), (Permutation (selection_sort r) (y :: l)), (Permutation (selection_sort r) (x :: r)), (Permutation (selection_sort r) (x :: l)), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (selsort r y)), (Permutation (selection_sort r) (selsort r x)), (Permutation (selection_sort r) (selsort l y)), (Permutation (selection_sort r) (selsort l x)), (Permutation (selection_sort r) (r ++ r))
(Permutation (selection_sort r) (l ++ r)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort r) []), (Permutation (selection_sort l) r), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (y :: r)), (Permutation (selection_sort l) (y :: l)), (Permutation (selection_sort l) (x :: r)), (Permutation (selection_sort l) (x :: l)), (Permutation (selection_sort l) (selection_sort r))
(Permutation (selection_sort l) (selsort r x)), (Permutation (selection_sort l) (selsort l y)), (Permutation (selection_sort l) (selsort l x)), (Permutation (selection_sort l) (r ++ r)), (Permutation (selection_sort l) (r ++ l)), (Permutation (selection_sort l) (l ++ r)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort r y) r), (Permutation (selsort r y) l)
(Permutation (selsort r y) (y :: l)), (Permutation (selsort r y) (x :: r)), (Permutation (selsort r y) (x :: l)), (Permutation (selsort r y) (selection_sort r)), (Permutation (selsort r y) (selection_sort l)), (Permutation (selsort r y) (selsort r x)), (Permutation (selsort r y) (selsort l y)), (Permutation (selsort r y) (selsort l x)), (Permutation (selsort r y) (r ++ r)), (Permutation (selsort r y) (r ++ l))
(Permutation (selsort r y) (l ++ l)), (Permutation (selsort r y) []), (Permutation (selsort r x) r), (Permutation (selsort r x) l), (Permutation (selsort r x) (y :: r)), (Permutation (selsort r x) (y :: l)), (Permutation (selsort r x) (x :: r)), (Permutation (selsort r x) (x :: l)), (Permutation (selsort r x) (selection_sort r)), (Permutation (selsort r x) (selection_sort l))
(Permutation (selsort r x) (selsort l y)), (Permutation (selsort r x) (selsort l x)), (Permutation (selsort r x) (r ++ r)), (Permutation (selsort r x) (r ++ l)), (Permutation (selsort r x) (l ++ r)), (Permutation (selsort r x) (l ++ l)), (Permutation (selsort r x) []), (Permutation (selsort l y) r), (Permutation (selsort l y) l), (Permutation (selsort l y) (y :: r))
(Permutation (selsort l y) (x :: r)), (Permutation (selsort l y) (x :: l)), (Permutation (selsort l y) (selection_sort r)), (Permutation (selsort l y) (selection_sort l)), (Permutation (selsort l y) (selsort r y)), (Permutation (selsort l y) (selsort r x)), (Permutation (selsort l y) (selsort l x)), (Permutation (selsort l y) (r ++ r)), (Permutation (selsort l y) (r ++ l)), (Permutation (selsort l y) (l ++ r))
(Permutation (selsort l y) []), (Permutation (selsort l x) r), (Permutation (selsort l x) l), (Permutation (selsort l x) (y :: r)), (Permutation (selsort l x) (y :: l)), (Permutation (selsort l x) (x :: r)), (Permutation (selsort l x) (x :: l)), (Permutation (selsort l x) (selection_sort r)), (Permutation (selsort l x) (selection_sort l)), (Permutation (selsort l x) (selsort r y))
(Permutation (selsort l x) (selsort l y)), (Permutation (selsort l x) (r ++ r)), (Permutation (selsort l x) (r ++ l)), (Permutation (selsort l x) (l ++ r)), (Permutation (selsort l x) (l ++ l)), (Permutation (selsort l x) []), (Permutation (r ++ r) r), (Permutation (r ++ r) l), (Permutation (r ++ r) (y :: r)), (Permutation (r ++ r) (y :: l))
(Permutation (r ++ r) (x :: l)), (Permutation (r ++ r) (selection_sort r)), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (selsort r y)), (Permutation (r ++ r) (selsort r x)), (Permutation (r ++ r) (selsort l y)), (Permutation (r ++ r) (selsort l x)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ l))
(Permutation (r ++ l) r), (Permutation (r ++ l) l), (Permutation (r ++ l) (y :: r)), (Permutation (r ++ l) (y :: l)), (Permutation (r ++ l) (x :: r)), (Permutation (r ++ l) (x :: l)), (Permutation (r ++ l) (selection_sort r)), (Permutation (r ++ l) (selection_sort l)), (Permutation (r ++ l) (selsort r y)), (Permutation (r ++ l) (selsort r x))
(Permutation (r ++ l) (selsort l x)), (Permutation (r ++ l) (r ++ r)), (Permutation (r ++ l) (l ++ r)), (Permutation (r ++ l) (l ++ l)), (Permutation (r ++ l) []), (Permutation (l ++ r) r), (Permutation (l ++ r) l), (Permutation (l ++ r) (y :: r)), (Permutation (l ++ r) (y :: l)), (Permutation (l ++ r) (x :: r))
(Permutation (l ++ r) (selection_sort r)), (Permutation (l ++ r) (selection_sort l)), (Permutation (l ++ r) (selsort r y)), (Permutation (l ++ r) (selsort r x)), (Permutation (l ++ r) (selsort l y)), (Permutation (l ++ r) (selsort l x)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (r ++ l)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ l) l), (Permutation (l ++ l) (y :: r)), (Permutation (l ++ l) (y :: l)), (Permutation (l ++ l) (x :: r)), (Permutation (l ++ l) (x :: l)), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort r y)), (Permutation (l ++ l) (selsort r x)), (Permutation (l ++ l) (selsort l y))
(Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation (l ++ l) []), (Permutation [] r), (Permutation [] l), (Permutation [] (y :: r)), (Permutation [] (y :: l)), (Permutation [] (x :: r)), (Permutation [] (x :: l))
(Permutation [] (selection_sort l)), (Permutation [] (selsort r y)), (Permutation [] (selsort r x)), (Permutation [] (selsort l y)), (Permutation [] (selsort l x)), (Permutation [] (r ++ r)), (Permutation [] (r ++ l)), (Permutation [] (l ++ r)), (Permutation [] (l ++ l)), (In y (y :: r))
(In y (x :: r)), (In y (x :: l)), (In y (selection_sort r)), (In y (selection_sort l)), (In y (selsort r y)), (In y (selsort r x)), (In y (selsort l y)), (In y (selsort l x)), (In y (r ++ r)), (In y (r ++ l))
(In y (l ++ l)), (In x (y :: r)), (In x (y :: l)), (In x (x :: r)), (In x (x :: l)), (In x (selection_sort r)), (In x (selection_sort l)), (In x (selsort r y)), (In x (selsort r x)), (In x (selsort l y))
(In x (r ++ r)), (In x (r ++ l)), (In x (l ++ r)), (In x (l ++ l)), (In (length r) r), (In (length r) l), (In (length r) (y :: r)), (In (length r) (y :: l)), (In (length r) (x :: r)), (In (length r) (x :: l))
(In (length r) (selection_sort l)), (In (length r) (selsort r y)), (In (length r) (selsort r x)), (In (length r) (selsort l y)), (In (length r) (selsort l x)), (In (length r) (r ++ r)), (In (length r) (r ++ l)), (In (length r) (l ++ r)), (In (length r) (l ++ l)), (In (length l) r)
(In (length l) (y :: r)), (In (length l) (y :: l)), (In (length l) (x :: r)), (In (length l) (x :: l)), (In (length l) (selection_sort r)), (In (length l) (selection_sort l)), (In (length l) (selsort r y)), (In (length l) (selsort r x)), (In (length l) (selsort l y)), (In (length l) (selsort l x))
(In (length l) (r ++ l)), (In (length l) (l ++ r)), (In (length l) (l ++ l)), (y < length r), (y < length l), (x < length r), (x < length l), (length r < y), (length r < x), (length r < length l)
(length l < x), (length l < length r), (y <= length r), (y <= length l), (x <= length r), (x <= length l), (length r <= y), (length r <= x), (length r <= length l), (length l <= y)
(length l <= length r), (~ y <=* r), (~ y <=* l), (~ x <=* r), (~ x <=* l), (~ sorted r), (~ sorted l), (~ Permutation r r), (~ Permutation r l), (~ Permutation l r)
(~ In y r), (~ In y l), (~ In x r), (~ In x l), (~ y < y), (~ y < x), (~ x < y), (~ x < x), (~ y <= y), (~ y <= x)
(~ x <= x), (r <> r), (r <> l), (l <> r), (l <> l), (y <> y), (y <> x), (x <> y), (x <> x), (None = Some r)
(y :: r = r), (y :: r = l), (y :: r = selection_sort r), (y :: r = selection_sort l), (y :: r = selsort r y), (y :: r = selsort r x), (y :: r = selsort l y), (y :: r = selsort l x), (y :: r = r ++ r), (y :: r = r ++ l)
(y :: r = l ++ l), (y :: r = []), (y :: l = r), (y :: l = l), (y :: l = selection_sort r), (y :: l = selection_sort l), (y :: l = selsort r y), (y :: l = selsort r x), (y :: l = selsort l y), (y :: l = selsort l x)
(y :: l = r ++ l), (y :: l = l ++ r), (y :: l = l ++ l), (y :: l = []), (x :: r = r), (x :: r = l), (x :: r = selection_sort r), (x :: r = selection_sort l), (x :: r = selsort r y), (x :: r = selsort r x)
(x :: r = selsort l x), (x :: r = r ++ r), (x :: r = r ++ l), (x :: r = l ++ r), (x :: r = l ++ l), (x :: r = []), (x :: l = r), (x :: l = l), (x :: l = selection_sort r), (x :: l = selection_sort l)
(x :: l = selsort r x), (x :: l = selsort l y), (x :: l = selsort l x), (x :: l = r ++ r), (x :: l = r ++ l), (x :: l = l ++ r), (x :: l = l ++ l), (x :: l = []), (selection_sort r = r), (selection_sort r = l)
(selection_sort r = r ++ l), (selection_sort r = l ++ r), (selection_sort r = l ++ l), (selection_sort l = r), (selection_sort l = l), (selection_sort l = r ++ r), (selection_sort l = r ++ l), (selection_sort l = l ++ r), (selection_sort l = l ++ l), (selsort r y = r)
(selsort r y = selection_sort r), (selsort r y = selection_sort l), (selsort r y = r ++ r), (selsort r y = r ++ l), (selsort r y = l ++ r), (selsort r y = l ++ l), (selsort r x = r), (selsort r x = l), (selsort r x = selection_sort r), (selsort r x = selection_sort l)
(selsort r x = r ++ l), (selsort r x = l ++ r), (selsort r x = l ++ l), (selsort l y = r), (selsort l y = l), (selsort l y = selection_sort r), (selsort l y = selection_sort l), (selsort l y = r ++ r), (selsort l y = r ++ l), (selsort l y = l ++ r)
(selsort l x = r), (selsort l x = l), (selsort l x = selection_sort r), (selsort l x = selection_sort l), (selsort l x = r ++ r), (selsort l x = r ++ l), (selsort l x = l ++ r), (selsort l x = l ++ l), (r ++ r = r), (r ++ r = l)
(r ++ l = l), (l ++ r = r), (l ++ r = l), (l ++ l = r), (l ++ l = l), ([] = r), ([] = l), ([] = selection_sort r), ([] = selection_sort l), ([] = selsort r y)
([] = selsort l y), ([] = selsort l x), ([] = r ++ r), ([] = r ++ l), ([] = l ++ r), ([] = l ++ l), (None = Some y), (None = Some x), ((y, r) = select y r), ((y, r) = select y l)
((y, r) = select x l), ((y, l) = select y r), ((y, l) = select y l), ((y, l) = select x r), ((y, l) = select x l), ((x, r) = select y r), ((x, r) = select y l), ((x, r) = select x r), ((x, r) = select x l), ((x, l) = select y r)
((x, l) = select x r), ((x, l) = select x l), (length r = y), (length r = x), (length l = y), (length l = x)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 3680.477 seconds


Label: 0 (0)
(Permutation (y :: r) (x :: l)), (Permutation (x :: l) (y :: r)), ((y, r) = select x l)

Label: 0 (1)

Label: 1 (2)
(Permutation r l), (Permutation l r), (r = l), (l = r), (Permutation r (selection_sort l)), (Permutation r (l ++ l)), (Permutation gv3 (y :: l)), (Permutation gv3 (x :: l)), (Permutation l (selection_sort r)), (Permutation l (r ++ r))
(Permutation (y :: r) (x :: l)), (Permutation (y :: l) gv3), (Permutation (y :: l) (y :: r)), (Permutation (y :: l) (x :: r)), (Permutation (y :: l) (selection_sort gv3)), (Permutation (y :: l) (gv3 ++ r)), (Permutation (x :: r) (y :: l)), (Permutation (x :: r) (x :: l)), (Permutation (x :: l) gv3), (Permutation (x :: l) (y :: r))
(Permutation (x :: l) (selection_sort gv3)), (Permutation (x :: l) (r ++ gv3)), (Permutation (x :: l) (gv3 ++ r)), (Permutation (selection_sort r) l), (Permutation (selection_sort r) (selection_sort l)), (Permutation (selection_sort r) (l ++ l)), (Permutation (selection_sort gv3) (y :: l)), (Permutation (selection_sort gv3) (x :: l)), (Permutation (selection_sort l) r), (Permutation (selection_sort l) (selection_sort r))
(Permutation (r ++ r) l), (Permutation (r ++ r) (selection_sort l)), (Permutation (r ++ r) (r ++ l)), (Permutation (r ++ r) (l ++ r)), (Permutation (r ++ r) (l ++ l)), (Permutation (r ++ gv3) (y :: l)), (Permutation (r ++ gv3) (x :: l)), (Permutation (r ++ gv3) (gv3 ++ l)), (Permutation (r ++ gv3) (l ++ gv3)), (Permutation (r ++ l) (r ++ r))
(Permutation (r ++ l) []), (Permutation (gv3 ++ r) (y :: l)), (Permutation (gv3 ++ r) (x :: l)), (Permutation (gv3 ++ r) (gv3 ++ l)), (Permutation (gv3 ++ r) (l ++ gv3)), (Permutation (gv3 ++ l) (r ++ gv3)), (Permutation (gv3 ++ l) (gv3 ++ r)), (Permutation (l ++ r) (r ++ r)), (Permutation (l ++ r) (l ++ l)), (Permutation (l ++ r) [])
(Permutation (l ++ gv3) (gv3 ++ r)), (Permutation (l ++ l) r), (Permutation (l ++ l) (selection_sort r)), (Permutation (l ++ l) (r ++ r)), (Permutation (l ++ l) (r ++ l)), (Permutation (l ++ l) (l ++ r)), (Permutation [] (r ++ l)), (Permutation [] (l ++ r)), (y :: l = gv3), (y :: l = selection_sort gv3)
(y :: l = gv3 ++ r), (x :: l = gv3), (x :: l = selection_sort gv3), (x :: l = r ++ gv3), (x :: l = gv3 ++ r), (selection_sort r = l), (selection_sort r = l ++ l), (selection_sort l = r), (selection_sort l = r ++ r), (r ++ r = l)
([] = r ++ l), ([] = l ++ r), ((y, r) = select y l), ((y, r) = select x l), ((y, l) = select y r), ((y, l) = select x r), ((x, r) = select y l), ((x, r) = select x l), ((x, l) = select y r), ((x, l) = select x r)

Label: 1 (3)
(Permutation gv3 (y :: r)), (Permutation gv3 (y :: l)), (Permutation gv3 (x :: r)), (Permutation gv3 (x :: l)), (Permutation (y :: r) gv3), (Permutation (y :: r) (selection_sort gv3)), (Permutation (y :: l) gv3), (Permutation (y :: l) (selection_sort gv3)), (Permutation (x :: r) gv3), (Permutation (x :: r) (selection_sort gv3))
(Permutation (x :: l) (selection_sort gv3)), (Permutation (selection_sort gv3) (y :: r)), (Permutation (selection_sort gv3) (y :: l)), (Permutation (selection_sort gv3) (x :: r)), (Permutation (selection_sort gv3) (x :: l)), (y :: r = gv3), (y :: r = selection_sort gv3), (y :: l = gv3), (y :: l = selection_sort gv3), (x :: r = gv3)
(x :: l = gv3), (x :: l = selection_sort gv3)

Label: 2 (4)
(Permutation (y :: r) (x :: l)), ((y, r) = select x l)

Label: 2 (5)

Label: 3 (6)
(Permutation gv1 (y :: r)), (Permutation (x :: l) (y :: r)), (Permutation (y :: r) gv1), (Permutation (y :: r) (x :: l)), (Permutation (y :: r) (selection_sort gv1)), (Permutation (selection_sort gv1) (y :: r)), (y :: r = selection_sort gv1), ((y, r) = select x l)

Label: 3 (7)
(Permutation gv1 (x :: l)), (Permutation gv1 (y :: r)), (Permutation (x :: l) gv1), (Permutation (x :: l) (selection_sort gv1)), (Permutation (y :: r) gv1), (Permutation (y :: r) (selection_sort gv1)), (Permutation (selection_sort gv1) (x :: l)), (Permutation (selection_sort gv1) (y :: r)), (x :: l = gv1), (y :: r = selection_sort gv1)

Label: 4 (8)
(Permutation (y :: r) (x :: l)), ((y, r) = select x l)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 4035.773 seconds


(x :: l = gv1)
 - (x :: l = gv1)
 - (Permutation (x :: l) gv1)
 - (Permutation (y :: r) gv1)
 - (Permutation (x :: l) (selection_sort gv1))
 - (Permutation (y :: r) (selection_sort gv1))
 - (y :: r = selection_sort gv1)

(length (y :: r) = gv2)
 - (length (y :: r) = gv2)

(y :: r = gv3)
 - (y :: r = gv3)
 - (Permutation (x :: l) gv3)
 - (Permutation (y :: l) gv3)
 - (Permutation (x :: r) gv3)
 - (Permutation (y :: r) gv3)
 - (Permutation (x :: l) (selection_sort gv3))
 - (Permutation (y :: l) (selection_sort gv3))
 - (Permutation (x :: r) (selection_sort gv3))
 - (Permutation (y :: r) (selection_sort gv3))
 - (x :: l = gv3)
 - (y :: l = gv3)
 - (x :: r = gv3)
 - (x :: l = selection_sort gv3)
 - (y :: l = selection_sort gv3)
 - (x :: r = selection_sort gv3)
 - (y :: r = selection_sort gv3)

(length (x :: l) = gv0)
 - (length (x :: l) = gv0)

(select x l = (y, r))
 - (select x l = (y, r))
 - (Permutation (y :: r) (x :: l))


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 4035.775 seconds

Number of Result Pairs Returned: 6

(y :: r = gv3 -> Permutation (y :: r) gv3)
(Permutation (y :: r) gv3 ->  select x l = (y, r) -> length (x :: l) = length gv3)

(y :: r = gv3 -> Permutation (y :: r) (selection_sort gv3))
(Permutation (y :: r) (selection_sort gv3) ->  select x l = (y, r) -> length (x :: l) = length gv3)

(x :: l = gv1 -> Permutation (x :: l) gv1)
(Permutation (x :: l) gv1 ->  select x l = (y, r) -> length gv1 = length (y :: r))

(x :: l = gv1 -> Permutation (x :: l) (selection_sort gv1))
(Permutation (x :: l) (selection_sort gv1) ->  select x l = (y, r) -> length gv1 = length (y :: r))

(select x l = (y, r) -> length (x :: l) = length (y :: r))

(select x l = (y, r) -> Permutation (y :: r) (x :: l))
(Permutation (y :: r) (x :: l) -> length (x :: l) = length (y :: r))
