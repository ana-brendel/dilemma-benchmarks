Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (a :: x1 = bl)
 -- (select x al = (y, x1))
 -- (forall (y x : nat) (bl : list nat),
 select x al = (y, bl) -> Forall (fun y0 : nat => y <= y0) bl)
 -- (x <= a)
 -- ((x0, a :: x1) = (y, bl))
 -- (x0 = y)
 -- (Forall (fun y : nat => x0 <= y) x1)

----------------------------------
Goal: (y <= a)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds



------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 99.811 seconds

Label: Generalization #0
Assumptions: 
 -- (select x al = (y, x1))
 -- (x <= a)

----------------------------------
Goal: (y <= a)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 100.323 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (select x al = (y, x1))
Positive Examples:
   [a := 1; al := [2]; x := 1; x1 := [2]; y := 1]
   [a := 3; al := [3]; x := 0; x1 := [3]; y := 0]
   [a := 5; al := []; x := 0; x1 := []; y := 0]
   [a := 2; al := [0; 2]; x := 0; x1 := [0; 2]; y := 0]
   [a := 1; al := [0; 2]; x := 1; x1 := [1; 2]; y := 0]
   [a := 1; al := [0; 2]; x := 0; x1 := [0; 2]; y := 0]
   [a := 2; al := [1; 2]; x := 2; x1 := [2; 2]; y := 1]
   [a := 0; al := [2; 0]; x := 0; x1 := [2; 0]; y := 0]
   [a := 1; al := [2; 0]; x := 0; x1 := [2; 0]; y := 0]
   [a := 3; al := [0]; x := 2; x1 := [2]; y := 0]
   etc ...

Negative Examples:
   [a := 2; al := [4; 3; 3]; x := 2; x1 := [1]; y := 4]
   [a := 2; al := [2; 0]; x := 0; x1 := [1; 4; 1]; y := 3]
   [a := 3; al := [0; 3; 5; 2; 4; 5]; x := 3; x1 := [0]; y := 5]
   [a := 1; al := [4; 0; 3; 4]; x := 0; x1 := [5]; y := 5]
   [a := 0; al := [1; 0]; x := 0; x1 := [0; 1]; y := 2]
   [a := 0; al := [0; 0]; x := 0; x1 := []; y := 2]
   [a := 4; al := [4]; x := 1; x1 := [4; 0; 1]; y := 5]
   [a := 0; al := [1; 0; 1]; x := 0; x1 := [2]; y := 2]
   [a := 3; al := [4; 3; 6]; x := 3; x1 := [4; 2]; y := 5]
   [a := 0; al := []; x := 0; x1 := [1; 0]; y := 1]
   etc ...


Label: 0 (1)
Abducted Assumption: (x <= a)
Positive Examples:
   [a := 1; al := [2]; x := 1; x1 := [2]; y := 1]
   [a := 3; al := [3]; x := 0; x1 := [3]; y := 0]
   [a := 5; al := []; x := 0; x1 := []; y := 0]
   [a := 2; al := [0; 2]; x := 0; x1 := [0; 2]; y := 0]
   [a := 1; al := [0; 2]; x := 1; x1 := [1; 2]; y := 0]
   [a := 1; al := [0; 2]; x := 0; x1 := [0; 2]; y := 0]
   [a := 2; al := [1; 2]; x := 2; x1 := [2; 2]; y := 1]
   [a := 0; al := [2; 0]; x := 0; x1 := [2; 0]; y := 0]
   [a := 1; al := [2; 0]; x := 0; x1 := [2; 0]; y := 0]
   [a := 3; al := [0]; x := 2; x1 := [2]; y := 0]
   etc ...

Negative Examples:
   [a := 0; al := [3]; x := 1; x1 := [3]; y := 1]
   [a := 3; al := []; x := 4; x1 := []; y := 4]
   [a := 1; al := []; x := 3; x1 := []; y := 3]
   [a := 0; al := []; x := 4; x1 := []; y := 4]
   [a := 2; al := []; x := 3; x1 := []; y := 3]
   [a := 1; al := []; x := 2; x1 := []; y := 2]
   [a := 0; al := []; x := 3; x1 := []; y := 3]
   [a := 0; al := [2]; x := 2; x1 := [2]; y := 2]
   [a := 0; al := []; x := 2; x1 := []; y := 2]
   [a := 0; al := []; x := 1; x1 := []; y := 1]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 101.035 seconds


Label: 0 (0)
(x <=* x1), (x <=* al), (a <=* x1), (a <=* al), (y <=* x1), (y <=* al), (sorted x1), (sorted al), (Permutation x1 x1), (Permutation x1 al)
(Permutation al al), (In x x1), (In x al), (In a x1), (In a al), (In y x1), (In y al), (x < x), (x < a), (x < y)
(a < a), (a < y), (y < x), (y < a), (y < y), (x <= x), (x <= a), (x <= y), (a <= x), (a <= a)
(y <= x), (y <= a), (y <= y), (x1 = x1), (x1 = al), (al = x1), (al = al), (x = x), (x = a), (x = y)
(a = a), (a = y), (y = x), (y = a), (y = y), (false = sorted_bool x1), (false = sorted_bool al), (true = sorted_bool x1), (true = sorted_bool al), (x <=* x :: x1)
(x <=* a :: x1), (x <=* a :: al), (x <=* y :: x1), (x <=* y :: al), (x <=* selection_sort x1), (x <=* selection_sort al), (x <=* selsort x1 x), (x <=* selsort x1 a), (x <=* selsort x1 y), (x <=* selsort al x)
(x <=* selsort al y), (x <=* x1 ++ x1), (x <=* x1 ++ al), (x <=* al ++ x1), (x <=* al ++ al), (x <=* []), (a <=* x :: x1), (a <=* x :: al), (a <=* a :: x1), (a <=* a :: al)
(a <=* y :: al), (a <=* selection_sort x1), (a <=* selection_sort al), (a <=* selsort x1 x), (a <=* selsort x1 a), (a <=* selsort x1 y), (a <=* selsort al x), (a <=* selsort al a), (a <=* selsort al y), (a <=* x1 ++ x1)
(a <=* al ++ x1), (a <=* al ++ al), (a <=* []), (y <=* x :: x1), (y <=* x :: al), (y <=* a :: x1), (y <=* a :: al), (y <=* y :: x1), (y <=* y :: al), (y <=* selection_sort x1)
(y <=* selsort x1 x), (y <=* selsort x1 a), (y <=* selsort x1 y), (y <=* selsort al x), (y <=* selsort al a), (y <=* selsort al y), (y <=* x1 ++ x1), (y <=* x1 ++ al), (y <=* al ++ x1), (y <=* al ++ al)
(length x1 <=* x1), (length x1 <=* al), (length x1 <=* x :: x1), (length x1 <=* x :: al), (length x1 <=* a :: x1), (length x1 <=* a :: al), (length x1 <=* y :: x1), (length x1 <=* y :: al), (length x1 <=* selection_sort x1), (length x1 <=* selection_sort al)
(length x1 <=* selsort x1 a), (length x1 <=* selsort x1 y), (length x1 <=* selsort al x), (length x1 <=* selsort al a), (length x1 <=* selsort al y), (length x1 <=* x1 ++ x1), (length x1 <=* x1 ++ al), (length x1 <=* al ++ x1), (length x1 <=* al ++ al), (length x1 <=* [])
(length al <=* al), (length al <=* x :: x1), (length al <=* x :: al), (length al <=* a :: x1), (length al <=* a :: al), (length al <=* y :: x1), (length al <=* y :: al), (length al <=* selection_sort x1), (length al <=* selection_sort al), (length al <=* selsort x1 x)
(length al <=* selsort x1 y), (length al <=* selsort al x), (length al <=* selsort al a), (length al <=* selsort al y), (length al <=* x1 ++ x1), (length al <=* x1 ++ al), (length al <=* al ++ x1), (length al <=* al ++ al), (length al <=* []), (sorted (x :: x1))
(sorted (a :: x1)), (sorted (a :: al)), (sorted (y :: x1)), (sorted (y :: al)), (sorted (selection_sort x1)), (sorted (selection_sort al)), (sorted (selsort x1 x)), (sorted (selsort x1 a)), (sorted (selsort x1 y)), (sorted (selsort al x))
(sorted (selsort al y)), (sorted (x1 ++ x1)), (sorted (x1 ++ al)), (sorted (al ++ x1)), (sorted (al ++ al)), (sorted []), (Permutation x1 (x :: x1)), (Permutation x1 (x :: al)), (Permutation x1 (a :: x1)), (Permutation x1 (a :: al))
(Permutation x1 (y :: al)), (Permutation x1 (selection_sort x1)), (Permutation x1 (selection_sort al)), (Permutation x1 (selsort x1 x)), (Permutation x1 (selsort x1 a)), (Permutation x1 (selsort x1 y)), (Permutation x1 (selsort al x)), (Permutation x1 (selsort al a)), (Permutation x1 (selsort al y)), (Permutation x1 (x1 ++ x1))
(Permutation x1 (al ++ x1)), (Permutation x1 (al ++ al)), (Permutation x1 []), (Permutation al (x :: x1)), (Permutation al (x :: al)), (Permutation al (a :: x1)), (Permutation al (a :: al)), (Permutation al (y :: x1)), (Permutation al (y :: al)), (Permutation al (selection_sort x1))
(Permutation al (selsort x1 x)), (Permutation al (selsort x1 a)), (Permutation al (selsort x1 y)), (Permutation al (selsort al x)), (Permutation al (selsort al a)), (Permutation al (selsort al y)), (Permutation al (x1 ++ x1)), (Permutation al (x1 ++ al)), (Permutation al (al ++ x1)), (Permutation al (al ++ al))
(Permutation (x :: x1) x1), (Permutation (x :: x1) al), (Permutation (x :: x1) (x :: al)), (Permutation (x :: x1) (a :: x1)), (Permutation (x :: x1) (a :: al)), (Permutation (x :: x1) (y :: x1)), (Permutation (x :: x1) (y :: al)), (Permutation (x :: x1) (selection_sort x1)), (Permutation (x :: x1) (selection_sort al)), (Permutation (x :: x1) (selsort x1 x))
(Permutation (x :: x1) (selsort x1 y)), (Permutation (x :: x1) (selsort al x)), (Permutation (x :: x1) (selsort al a)), (Permutation (x :: x1) (selsort al y)), (Permutation (x :: x1) (x1 ++ x1)), (Permutation (x :: x1) (x1 ++ al)), (Permutation (x :: x1) (al ++ x1)), (Permutation (x :: x1) (al ++ al)), (Permutation (x :: x1) []), (Permutation (x :: al) x1)
(Permutation (x :: al) (x :: x1)), (Permutation (x :: al) (a :: x1)), (Permutation (x :: al) (a :: al)), (Permutation (x :: al) (y :: x1)), (Permutation (x :: al) (y :: al)), (Permutation (x :: al) (selection_sort x1)), (Permutation (x :: al) (selection_sort al)), (Permutation (x :: al) (selsort x1 x)), (Permutation (x :: al) (selsort x1 a)), (Permutation (x :: al) (selsort x1 y))
(Permutation (x :: al) (selsort al a)), (Permutation (x :: al) (selsort al y)), (Permutation (x :: al) (x1 ++ x1)), (Permutation (x :: al) (x1 ++ al)), (Permutation (x :: al) (al ++ x1)), (Permutation (x :: al) (al ++ al)), (Permutation (x :: al) []), (Permutation (a :: x1) x1), (Permutation (a :: x1) al), (Permutation (a :: x1) (x :: x1))
(Permutation (a :: x1) (a :: al)), (Permutation (a :: x1) (y :: x1)), (Permutation (a :: x1) (y :: al)), (Permutation (a :: x1) (selection_sort x1)), (Permutation (a :: x1) (selection_sort al)), (Permutation (a :: x1) (selsort x1 x)), (Permutation (a :: x1) (selsort x1 a)), (Permutation (a :: x1) (selsort x1 y)), (Permutation (a :: x1) (selsort al x)), (Permutation (a :: x1) (selsort al a))
(Permutation (a :: x1) (x1 ++ x1)), (Permutation (a :: x1) (x1 ++ al)), (Permutation (a :: x1) (al ++ x1)), (Permutation (a :: x1) (al ++ al)), (Permutation (a :: x1) []), (Permutation (a :: al) x1), (Permutation (a :: al) al), (Permutation (a :: al) (x :: x1)), (Permutation (a :: al) (x :: al)), (Permutation (a :: al) (a :: x1))
(Permutation (a :: al) (y :: al)), (Permutation (a :: al) (selection_sort x1)), (Permutation (a :: al) (selection_sort al)), (Permutation (a :: al) (selsort x1 x)), (Permutation (a :: al) (selsort x1 a)), (Permutation (a :: al) (selsort x1 y)), (Permutation (a :: al) (selsort al x)), (Permutation (a :: al) (selsort al a)), (Permutation (a :: al) (selsort al y)), (Permutation (a :: al) (x1 ++ x1))
(Permutation (a :: al) (al ++ x1)), (Permutation (a :: al) (al ++ al)), (Permutation (a :: al) []), (Permutation (y :: x1) x1), (Permutation (y :: x1) al), (Permutation (y :: x1) (x :: x1)), (Permutation (y :: x1) (x :: al)), (Permutation (y :: x1) (a :: x1)), (Permutation (y :: x1) (a :: al)), (Permutation (y :: x1) (y :: al))
(Permutation (y :: x1) (selection_sort al)), (Permutation (y :: x1) (selsort x1 x)), (Permutation (y :: x1) (selsort x1 a)), (Permutation (y :: x1) (selsort x1 y)), (Permutation (y :: x1) (selsort al x)), (Permutation (y :: x1) (selsort al a)), (Permutation (y :: x1) (selsort al y)), (Permutation (y :: x1) (x1 ++ x1)), (Permutation (y :: x1) (x1 ++ al)), (Permutation (y :: x1) (al ++ x1))
(Permutation (y :: x1) []), (Permutation (y :: al) x1), (Permutation (y :: al) al), (Permutation (y :: al) (x :: x1)), (Permutation (y :: al) (x :: al)), (Permutation (y :: al) (a :: x1)), (Permutation (y :: al) (a :: al)), (Permutation (y :: al) (y :: x1)), (Permutation (y :: al) (selection_sort x1)), (Permutation (y :: al) (selection_sort al))
(Permutation (y :: al) (selsort x1 a)), (Permutation (y :: al) (selsort x1 y)), (Permutation (y :: al) (selsort al x)), (Permutation (y :: al) (selsort al a)), (Permutation (y :: al) (selsort al y)), (Permutation (y :: al) (x1 ++ x1)), (Permutation (y :: al) (x1 ++ al)), (Permutation (y :: al) (al ++ x1)), (Permutation (y :: al) (al ++ al)), (Permutation (y :: al) [])
(Permutation (selection_sort x1) al), (Permutation (selection_sort x1) (x :: x1)), (Permutation (selection_sort x1) (x :: al)), (Permutation (selection_sort x1) (a :: x1)), (Permutation (selection_sort x1) (a :: al)), (Permutation (selection_sort x1) (y :: x1)), (Permutation (selection_sort x1) (y :: al)), (Permutation (selection_sort x1) (selection_sort al)), (Permutation (selection_sort x1) (selsort x1 x)), (Permutation (selection_sort x1) (selsort x1 a))
(Permutation (selection_sort x1) (selsort al x)), (Permutation (selection_sort x1) (selsort al a)), (Permutation (selection_sort x1) (selsort al y)), (Permutation (selection_sort x1) (x1 ++ x1)), (Permutation (selection_sort x1) (x1 ++ al)), (Permutation (selection_sort x1) (al ++ x1)), (Permutation (selection_sort x1) (al ++ al)), (Permutation (selection_sort x1) []), (Permutation (selection_sort al) x1), (Permutation (selection_sort al) al)
(Permutation (selection_sort al) (x :: al)), (Permutation (selection_sort al) (a :: x1)), (Permutation (selection_sort al) (a :: al)), (Permutation (selection_sort al) (y :: x1)), (Permutation (selection_sort al) (y :: al)), (Permutation (selection_sort al) (selection_sort x1)), (Permutation (selection_sort al) (selsort x1 x)), (Permutation (selection_sort al) (selsort x1 a)), (Permutation (selection_sort al) (selsort x1 y)), (Permutation (selection_sort al) (selsort al x))
(Permutation (selection_sort al) (selsort al y)), (Permutation (selection_sort al) (x1 ++ x1)), (Permutation (selection_sort al) (x1 ++ al)), (Permutation (selection_sort al) (al ++ x1)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) []), (Permutation (selsort x1 x) x1), (Permutation (selsort x1 x) al), (Permutation (selsort x1 x) (x :: x1)), (Permutation (selsort x1 x) (x :: al))
(Permutation (selsort x1 x) (a :: al)), (Permutation (selsort x1 x) (y :: x1)), (Permutation (selsort x1 x) (y :: al)), (Permutation (selsort x1 x) (selection_sort x1)), (Permutation (selsort x1 x) (selection_sort al)), (Permutation (selsort x1 x) (selsort x1 a)), (Permutation (selsort x1 x) (selsort x1 y)), (Permutation (selsort x1 x) (selsort al x)), (Permutation (selsort x1 x) (selsort al a)), (Permutation (selsort x1 x) (selsort al y))
(Permutation (selsort x1 x) (x1 ++ al)), (Permutation (selsort x1 x) (al ++ x1)), (Permutation (selsort x1 x) (al ++ al)), (Permutation (selsort x1 x) []), (Permutation (selsort x1 a) x1), (Permutation (selsort x1 a) al), (Permutation (selsort x1 a) (x :: x1)), (Permutation (selsort x1 a) (x :: al)), (Permutation (selsort x1 a) (a :: x1)), (Permutation (selsort x1 a) (a :: al))
(Permutation (selsort x1 a) (y :: al)), (Permutation (selsort x1 a) (selection_sort x1)), (Permutation (selsort x1 a) (selection_sort al)), (Permutation (selsort x1 a) (selsort x1 x)), (Permutation (selsort x1 a) (selsort x1 y)), (Permutation (selsort x1 a) (selsort al x)), (Permutation (selsort x1 a) (selsort al a)), (Permutation (selsort x1 a) (selsort al y)), (Permutation (selsort x1 a) (x1 ++ x1)), (Permutation (selsort x1 a) (x1 ++ al))
(Permutation (selsort x1 a) (al ++ al)), (Permutation (selsort x1 a) []), (Permutation (selsort x1 y) x1), (Permutation (selsort x1 y) al), (Permutation (selsort x1 y) (x :: x1)), (Permutation (selsort x1 y) (x :: al)), (Permutation (selsort x1 y) (a :: x1)), (Permutation (selsort x1 y) (a :: al)), (Permutation (selsort x1 y) (y :: x1)), (Permutation (selsort x1 y) (y :: al))
(Permutation (selsort x1 y) (selection_sort al)), (Permutation (selsort x1 y) (selsort x1 x)), (Permutation (selsort x1 y) (selsort x1 a)), (Permutation (selsort x1 y) (selsort al x)), (Permutation (selsort x1 y) (selsort al a)), (Permutation (selsort x1 y) (selsort al y)), (Permutation (selsort x1 y) (x1 ++ x1)), (Permutation (selsort x1 y) (x1 ++ al)), (Permutation (selsort x1 y) (al ++ x1)), (Permutation (selsort x1 y) (al ++ al))
(Permutation (selsort al x) x1), (Permutation (selsort al x) al), (Permutation (selsort al x) (x :: x1)), (Permutation (selsort al x) (x :: al)), (Permutation (selsort al x) (a :: x1)), (Permutation (selsort al x) (a :: al)), (Permutation (selsort al x) (y :: x1)), (Permutation (selsort al x) (y :: al)), (Permutation (selsort al x) (selection_sort x1)), (Permutation (selsort al x) (selection_sort al))
(Permutation (selsort al x) (selsort x1 a)), (Permutation (selsort al x) (selsort x1 y)), (Permutation (selsort al x) (selsort al a)), (Permutation (selsort al x) (selsort al y)), (Permutation (selsort al x) (x1 ++ x1)), (Permutation (selsort al x) (x1 ++ al)), (Permutation (selsort al x) (al ++ x1)), (Permutation (selsort al x) (al ++ al)), (Permutation (selsort al x) []), (Permutation (selsort al a) x1)
(Permutation (selsort al a) (x :: x1)), (Permutation (selsort al a) (x :: al)), (Permutation (selsort al a) (a :: x1)), (Permutation (selsort al a) (a :: al)), (Permutation (selsort al a) (y :: x1)), (Permutation (selsort al a) (y :: al)), (Permutation (selsort al a) (selection_sort x1)), (Permutation (selsort al a) (selection_sort al)), (Permutation (selsort al a) (selsort x1 x)), (Permutation (selsort al a) (selsort x1 a))
(Permutation (selsort al a) (selsort al x)), (Permutation (selsort al a) (selsort al y)), (Permutation (selsort al a) (x1 ++ x1)), (Permutation (selsort al a) (x1 ++ al)), (Permutation (selsort al a) (al ++ x1)), (Permutation (selsort al a) (al ++ al)), (Permutation (selsort al a) []), (Permutation (selsort al y) x1), (Permutation (selsort al y) al), (Permutation (selsort al y) (x :: x1))
(Permutation (selsort al y) (a :: x1)), (Permutation (selsort al y) (a :: al)), (Permutation (selsort al y) (y :: x1)), (Permutation (selsort al y) (y :: al)), (Permutation (selsort al y) (selection_sort x1)), (Permutation (selsort al y) (selection_sort al)), (Permutation (selsort al y) (selsort x1 x)), (Permutation (selsort al y) (selsort x1 a)), (Permutation (selsort al y) (selsort x1 y)), (Permutation (selsort al y) (selsort al x))
(Permutation (selsort al y) (x1 ++ x1)), (Permutation (selsort al y) (x1 ++ al)), (Permutation (selsort al y) (al ++ x1)), (Permutation (selsort al y) (al ++ al)), (Permutation (selsort al y) []), (Permutation (x1 ++ x1) x1), (Permutation (x1 ++ x1) al), (Permutation (x1 ++ x1) (x :: x1)), (Permutation (x1 ++ x1) (x :: al)), (Permutation (x1 ++ x1) (a :: x1))
(Permutation (x1 ++ x1) (y :: x1)), (Permutation (x1 ++ x1) (y :: al)), (Permutation (x1 ++ x1) (selection_sort x1)), (Permutation (x1 ++ x1) (selection_sort al)), (Permutation (x1 ++ x1) (selsort x1 x)), (Permutation (x1 ++ x1) (selsort x1 a)), (Permutation (x1 ++ x1) (selsort x1 y)), (Permutation (x1 ++ x1) (selsort al x)), (Permutation (x1 ++ x1) (selsort al a)), (Permutation (x1 ++ x1) (selsort al y))
(Permutation (x1 ++ x1) (al ++ x1)), (Permutation (x1 ++ x1) (al ++ al)), (Permutation (x1 ++ x1) []), (Permutation (x1 ++ al) x1), (Permutation (x1 ++ al) al), (Permutation (x1 ++ al) (x :: x1)), (Permutation (x1 ++ al) (x :: al)), (Permutation (x1 ++ al) (a :: x1)), (Permutation (x1 ++ al) (a :: al)), (Permutation (x1 ++ al) (y :: x1))
(Permutation (x1 ++ al) (selection_sort x1)), (Permutation (x1 ++ al) (selection_sort al)), (Permutation (x1 ++ al) (selsort x1 x)), (Permutation (x1 ++ al) (selsort x1 a)), (Permutation (x1 ++ al) (selsort x1 y)), (Permutation (x1 ++ al) (selsort al x)), (Permutation (x1 ++ al) (selsort al a)), (Permutation (x1 ++ al) (selsort al y)), (Permutation (x1 ++ al) (x1 ++ x1)), (Permutation (x1 ++ al) (al ++ x1))
(Permutation (x1 ++ al) []), (Permutation (al ++ x1) x1), (Permutation (al ++ x1) al), (Permutation (al ++ x1) (x :: x1)), (Permutation (al ++ x1) (x :: al)), (Permutation (al ++ x1) (a :: x1)), (Permutation (al ++ x1) (a :: al)), (Permutation (al ++ x1) (y :: x1)), (Permutation (al ++ x1) (y :: al)), (Permutation (al ++ x1) (selection_sort x1))
(Permutation (al ++ x1) (selsort x1 x)), (Permutation (al ++ x1) (selsort x1 a)), (Permutation (al ++ x1) (selsort x1 y)), (Permutation (al ++ x1) (selsort al x)), (Permutation (al ++ x1) (selsort al a)), (Permutation (al ++ x1) (selsort al y)), (Permutation (al ++ x1) (x1 ++ x1)), (Permutation (al ++ x1) (x1 ++ al)), (Permutation (al ++ x1) (al ++ al)), (Permutation (al ++ x1) [])
(Permutation (al ++ al) al), (Permutation (al ++ al) (x :: x1)), (Permutation (al ++ al) (x :: al)), (Permutation (al ++ al) (a :: x1)), (Permutation (al ++ al) (a :: al)), (Permutation (al ++ al) (y :: x1)), (Permutation (al ++ al) (y :: al)), (Permutation (al ++ al) (selection_sort x1)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selsort x1 x))
(Permutation (al ++ al) (selsort x1 y)), (Permutation (al ++ al) (selsort al x)), (Permutation (al ++ al) (selsort al a)), (Permutation (al ++ al) (selsort al y)), (Permutation (al ++ al) (x1 ++ x1)), (Permutation (al ++ al) (x1 ++ al)), (Permutation (al ++ al) (al ++ x1)), (Permutation (al ++ al) []), (Permutation [] x1), (Permutation [] al)
(Permutation [] (x :: al)), (Permutation [] (a :: x1)), (Permutation [] (a :: al)), (Permutation [] (y :: x1)), (Permutation [] (y :: al)), (Permutation [] (selection_sort x1)), (Permutation [] (selection_sort al)), (Permutation [] (selsort x1 x)), (Permutation [] (selsort x1 a)), (Permutation [] (selsort x1 y))
(Permutation [] (selsort al a)), (Permutation [] (selsort al y)), (Permutation [] (x1 ++ x1)), (Permutation [] (x1 ++ al)), (Permutation [] (al ++ x1)), (Permutation [] (al ++ al)), (In x (x :: x1)), (In x (x :: al)), (In x (a :: x1)), (In x (a :: al))
(In x (y :: al)), (In x (selection_sort x1)), (In x (selection_sort al)), (In x (selsort x1 x)), (In x (selsort x1 a)), (In x (selsort x1 y)), (In x (selsort al x)), (In x (selsort al a)), (In x (selsort al y)), (In x (x1 ++ x1))
(In x (al ++ x1)), (In x (al ++ al)), (In a (x :: x1)), (In a (x :: al)), (In a (a :: x1)), (In a (a :: al)), (In a (y :: x1)), (In a (y :: al)), (In a (selection_sort x1)), (In a (selection_sort al))
(In a (selsort x1 a)), (In a (selsort x1 y)), (In a (selsort al x)), (In a (selsort al a)), (In a (selsort al y)), (In a (x1 ++ x1)), (In a (x1 ++ al)), (In a (al ++ x1)), (In a (al ++ al)), (In y (x :: x1))
(In y (a :: x1)), (In y (a :: al)), (In y (y :: x1)), (In y (y :: al)), (In y (selection_sort x1)), (In y (selection_sort al)), (In y (selsort x1 x)), (In y (selsort x1 a)), (In y (selsort x1 y)), (In y (selsort al x))
(In y (selsort al y)), (In y (x1 ++ x1)), (In y (x1 ++ al)), (In y (al ++ x1)), (In y (al ++ al)), (In (length x1) x1), (In (length x1) al), (In (length x1) (x :: x1)), (In (length x1) (x :: al)), (In (length x1) (a :: x1))
(In (length x1) (y :: x1)), (In (length x1) (y :: al)), (In (length x1) (selection_sort x1)), (In (length x1) (selection_sort al)), (In (length x1) (selsort x1 x)), (In (length x1) (selsort x1 a)), (In (length x1) (selsort x1 y)), (In (length x1) (selsort al x)), (In (length x1) (selsort al a)), (In (length x1) (selsort al y))
(In (length x1) (x1 ++ al)), (In (length x1) (al ++ x1)), (In (length x1) (al ++ al)), (In (length al) x1), (In (length al) al), (In (length al) (x :: x1)), (In (length al) (x :: al)), (In (length al) (a :: x1)), (In (length al) (a :: al)), (In (length al) (y :: x1))
(In (length al) (selection_sort x1)), (In (length al) (selection_sort al)), (In (length al) (selsort x1 x)), (In (length al) (selsort x1 a)), (In (length al) (selsort x1 y)), (In (length al) (selsort al x)), (In (length al) (selsort al a)), (In (length al) (selsort al y)), (In (length al) (x1 ++ x1)), (In (length al) (x1 ++ al))
(In (length al) (al ++ al)), (x < length x1), (x < length al), (a < length x1), (a < length al), (y < length x1), (y < length al), (length x1 < x), (length x1 < a), (length x1 < y)
(length al < x), (length al < a), (length al < y), (length al < length x1), (x <= length x1), (x <= length al), (a <= length x1), (a <= length al), (y <= length x1), (y <= length al)
(length x1 <= a), (length x1 <= y), (length x1 <= length al), (length al <= x), (length al <= a), (length al <= y), (length al <= length x1), (~ x <=* x1), (~ x <=* al), (~ a <=* x1)
(~ y <=* x1), (~ y <=* al), (~ sorted x1), (~ sorted al), (~ Permutation x1 x1), (~ Permutation x1 al), (~ Permutation al x1), (~ Permutation al al), (~ In x x1), (~ In x al)
(~ In a al), (~ In y x1), (~ In y al), (~ x < x), (~ x < a), (~ x < y), (~ a < x), (~ a < a), (~ a < y), (~ y < x)
(~ y < y), (~ x <= x), (~ x <= a), (~ x <= y), (~ a <= x), (~ a <= a), (~ a <= y), (~ y <= x), (~ y <= a), (~ y <= y)
(x1 <> al), (al <> x1), (al <> al), (x <> x), (x <> a), (x <> y), (a <> x), (a <> a), (a <> y), (y <> x)
(y <> y), (None = Some x1), (None = Some al), (x :: x1 = x1), (x :: x1 = al), (x :: x1 = selection_sort x1), (x :: x1 = selection_sort al), (x :: x1 = selsort x1 x), (x :: x1 = selsort x1 a), (x :: x1 = selsort x1 y)
(x :: x1 = selsort al a), (x :: x1 = selsort al y), (x :: x1 = x1 ++ x1), (x :: x1 = x1 ++ al), (x :: x1 = al ++ x1), (x :: x1 = al ++ al), (x :: x1 = []), (x :: al = x1), (x :: al = al), (x :: al = selection_sort x1)
(x :: al = selsort x1 x), (x :: al = selsort x1 a), (x :: al = selsort x1 y), (x :: al = selsort al x), (x :: al = selsort al a), (x :: al = selsort al y), (x :: al = x1 ++ x1), (x :: al = x1 ++ al), (x :: al = al ++ x1), (x :: al = al ++ al)
(a :: x1 = x1), (a :: x1 = al), (a :: x1 = selection_sort x1), (a :: x1 = selection_sort al), (a :: x1 = selsort x1 x), (a :: x1 = selsort x1 a), (a :: x1 = selsort x1 y), (a :: x1 = selsort al x), (a :: x1 = selsort al a), (a :: x1 = selsort al y)
(a :: x1 = x1 ++ al), (a :: x1 = al ++ x1), (a :: x1 = al ++ al), (a :: x1 = []), (a :: al = x1), (a :: al = al), (a :: al = selection_sort x1), (a :: al = selection_sort al), (a :: al = selsort x1 x), (a :: al = selsort x1 a)
(a :: al = selsort al x), (a :: al = selsort al a), (a :: al = selsort al y), (a :: al = x1 ++ x1), (a :: al = x1 ++ al), (a :: al = al ++ x1), (a :: al = al ++ al), (a :: al = []), (y :: x1 = x1), (y :: x1 = al)
(y :: x1 = selection_sort al), (y :: x1 = selsort x1 x), (y :: x1 = selsort x1 a), (y :: x1 = selsort x1 y), (y :: x1 = selsort al x), (y :: x1 = selsort al a), (y :: x1 = selsort al y), (y :: x1 = x1 ++ x1), (y :: x1 = x1 ++ al), (y :: x1 = al ++ x1)
(y :: x1 = []), (y :: al = x1), (y :: al = al), (y :: al = selection_sort x1), (y :: al = selection_sort al), (y :: al = selsort x1 x), (y :: al = selsort x1 a), (y :: al = selsort x1 y), (y :: al = selsort al x), (y :: al = selsort al a)
(y :: al = x1 ++ x1), (y :: al = x1 ++ al), (y :: al = al ++ x1), (y :: al = al ++ al), (y :: al = []), (selection_sort x1 = x1), (selection_sort x1 = al), (selection_sort x1 = x1 ++ x1), (selection_sort x1 = x1 ++ al), (selection_sort x1 = al ++ x1)
(selection_sort al = x1), (selection_sort al = al), (selection_sort al = x1 ++ x1), (selection_sort al = x1 ++ al), (selection_sort al = al ++ x1), (selection_sort al = al ++ al), (selsort x1 x = x1), (selsort x1 x = al), (selsort x1 x = selection_sort x1), (selsort x1 x = selection_sort al)
(selsort x1 x = x1 ++ al), (selsort x1 x = al ++ x1), (selsort x1 x = al ++ al), (selsort x1 a = x1), (selsort x1 a = al), (selsort x1 a = selection_sort x1), (selsort x1 a = selection_sort al), (selsort x1 a = x1 ++ x1), (selsort x1 a = x1 ++ al), (selsort x1 a = al ++ x1)
(selsort x1 y = x1), (selsort x1 y = al), (selsort x1 y = selection_sort x1), (selsort x1 y = selection_sort al), (selsort x1 y = x1 ++ x1), (selsort x1 y = x1 ++ al), (selsort x1 y = al ++ x1), (selsort x1 y = al ++ al), (selsort al x = x1), (selsort al x = al)
(selsort al x = selection_sort al), (selsort al x = x1 ++ x1), (selsort al x = x1 ++ al), (selsort al x = al ++ x1), (selsort al x = al ++ al), (selsort al a = x1), (selsort al a = al), (selsort al a = selection_sort x1), (selsort al a = selection_sort al), (selsort al a = x1 ++ x1)
(selsort al a = al ++ x1), (selsort al a = al ++ al), (selsort al y = x1), (selsort al y = al), (selsort al y = selection_sort x1), (selsort al y = selection_sort al), (selsort al y = x1 ++ x1), (selsort al y = x1 ++ al), (selsort al y = al ++ x1), (selsort al y = al ++ al)
(x1 ++ x1 = al), (x1 ++ al = x1), (x1 ++ al = al), (al ++ x1 = x1), (al ++ x1 = al), (al ++ al = x1), (al ++ al = al), ([] = x1), ([] = al), ([] = selection_sort x1)
([] = selsort x1 x), ([] = selsort x1 a), ([] = selsort x1 y), ([] = selsort al x), ([] = selsort al a), ([] = selsort al y), ([] = x1 ++ x1), ([] = x1 ++ al), ([] = al ++ x1), ([] = al ++ al)
(None = Some a), (None = Some y), ((x, x1) = select x x1), ((x, x1) = select x al), ((x, x1) = select a x1), ((x, x1) = select a al), ((x, x1) = select y x1), ((x, x1) = select y al), ((x, al) = select x x1), ((x, al) = select x al)
((x, al) = select a al), ((x, al) = select y x1), ((x, al) = select y al), ((a, x1) = select x x1), ((a, x1) = select x al), ((a, x1) = select a x1), ((a, x1) = select a al), ((a, x1) = select y x1), ((a, x1) = select y al), ((a, al) = select x x1)
((a, al) = select a x1), ((a, al) = select a al), ((a, al) = select y x1), ((a, al) = select y al), ((y, x1) = select x x1), ((y, x1) = select x al), ((y, x1) = select a x1), ((y, x1) = select a al), ((y, x1) = select y x1), ((y, x1) = select y al)
((y, al) = select x al), ((y, al) = select a x1), ((y, al) = select a al), ((y, al) = select y x1), ((y, al) = select y al), (length x1 = x), (length x1 = a), (length x1 = y), (length al = x), (length al = a)

Label: 0 (1)
(x <=* x1), (x <=* al), (a <=* x1), (a <=* al), (y <=* x1), (y <=* al), (sorted x1), (sorted al), (Permutation x1 x1), (Permutation x1 al)
(Permutation al al), (In x x1), (In x al), (In a x1), (In a al), (In y x1), (In y al), (x < x), (x < a), (x < y)
(a < a), (a < y), (y < x), (y < a), (y < y), (x <= x), (x <= a), (x <= y), (a <= x), (a <= a)
(y <= x), (y <= a), (y <= y), (x1 = x1), (x1 = al), (al = x1), (al = al), (x = x), (x = a), (x = y)
(a = a), (a = y), (y = x), (y = a), (y = y), (false = sorted_bool x1), (false = sorted_bool al), (true = sorted_bool x1), (true = sorted_bool al), (x <=* x :: x1)
(x <=* a :: x1), (x <=* a :: al), (x <=* y :: x1), (x <=* y :: al), (x <=* selection_sort x1), (x <=* selection_sort al), (x <=* selsort x1 x), (x <=* selsort x1 a), (x <=* selsort x1 y), (x <=* selsort al x)
(x <=* selsort al y), (x <=* x1 ++ x1), (x <=* x1 ++ al), (x <=* al ++ x1), (x <=* al ++ al), (x <=* []), (a <=* x :: x1), (a <=* x :: al), (a <=* a :: x1), (a <=* a :: al)
(a <=* y :: al), (a <=* selection_sort x1), (a <=* selection_sort al), (a <=* selsort x1 x), (a <=* selsort x1 a), (a <=* selsort x1 y), (a <=* selsort al x), (a <=* selsort al a), (a <=* selsort al y), (a <=* x1 ++ x1)
(a <=* al ++ x1), (a <=* al ++ al), (a <=* []), (y <=* x :: x1), (y <=* x :: al), (y <=* a :: x1), (y <=* a :: al), (y <=* y :: x1), (y <=* y :: al), (y <=* selection_sort x1)
(y <=* selsort x1 x), (y <=* selsort x1 a), (y <=* selsort x1 y), (y <=* selsort al x), (y <=* selsort al a), (y <=* selsort al y), (y <=* x1 ++ x1), (y <=* x1 ++ al), (y <=* al ++ x1), (y <=* al ++ al)
(length x1 <=* x1), (length x1 <=* al), (length x1 <=* x :: x1), (length x1 <=* x :: al), (length x1 <=* a :: x1), (length x1 <=* a :: al), (length x1 <=* y :: x1), (length x1 <=* y :: al), (length x1 <=* selection_sort x1), (length x1 <=* selection_sort al)
(length x1 <=* selsort x1 a), (length x1 <=* selsort x1 y), (length x1 <=* selsort al x), (length x1 <=* selsort al a), (length x1 <=* selsort al y), (length x1 <=* x1 ++ x1), (length x1 <=* x1 ++ al), (length x1 <=* al ++ x1), (length x1 <=* al ++ al), (length x1 <=* [])
(length al <=* al), (length al <=* x :: x1), (length al <=* x :: al), (length al <=* a :: x1), (length al <=* a :: al), (length al <=* y :: x1), (length al <=* y :: al), (length al <=* selection_sort x1), (length al <=* selection_sort al), (length al <=* selsort x1 x)
(length al <=* selsort x1 y), (length al <=* selsort al x), (length al <=* selsort al a), (length al <=* selsort al y), (length al <=* x1 ++ x1), (length al <=* x1 ++ al), (length al <=* al ++ x1), (length al <=* al ++ al), (length al <=* []), (sorted (x :: x1))
(sorted (a :: x1)), (sorted (a :: al)), (sorted (y :: x1)), (sorted (y :: al)), (sorted (selection_sort x1)), (sorted (selection_sort al)), (sorted (selsort x1 x)), (sorted (selsort x1 a)), (sorted (selsort x1 y)), (sorted (selsort al x))
(sorted (selsort al y)), (sorted (x1 ++ x1)), (sorted (x1 ++ al)), (sorted (al ++ x1)), (sorted (al ++ al)), (sorted []), (Permutation x1 (x :: x1)), (Permutation x1 (x :: al)), (Permutation x1 (a :: x1)), (Permutation x1 (a :: al))
(Permutation x1 (y :: al)), (Permutation x1 (selection_sort x1)), (Permutation x1 (selection_sort al)), (Permutation x1 (selsort x1 x)), (Permutation x1 (selsort x1 a)), (Permutation x1 (selsort x1 y)), (Permutation x1 (selsort al x)), (Permutation x1 (selsort al a)), (Permutation x1 (selsort al y)), (Permutation x1 (x1 ++ x1))
(Permutation x1 (al ++ x1)), (Permutation x1 (al ++ al)), (Permutation x1 []), (Permutation al (x :: x1)), (Permutation al (x :: al)), (Permutation al (a :: x1)), (Permutation al (a :: al)), (Permutation al (y :: x1)), (Permutation al (y :: al)), (Permutation al (selection_sort x1))
(Permutation al (selsort x1 x)), (Permutation al (selsort x1 a)), (Permutation al (selsort x1 y)), (Permutation al (selsort al x)), (Permutation al (selsort al a)), (Permutation al (selsort al y)), (Permutation al (x1 ++ x1)), (Permutation al (x1 ++ al)), (Permutation al (al ++ x1)), (Permutation al (al ++ al))
(Permutation (x :: x1) x1), (Permutation (x :: x1) al), (Permutation (x :: x1) (x :: al)), (Permutation (x :: x1) (a :: x1)), (Permutation (x :: x1) (a :: al)), (Permutation (x :: x1) (y :: x1)), (Permutation (x :: x1) (y :: al)), (Permutation (x :: x1) (selection_sort x1)), (Permutation (x :: x1) (selection_sort al)), (Permutation (x :: x1) (selsort x1 x))
(Permutation (x :: x1) (selsort x1 y)), (Permutation (x :: x1) (selsort al x)), (Permutation (x :: x1) (selsort al a)), (Permutation (x :: x1) (selsort al y)), (Permutation (x :: x1) (x1 ++ x1)), (Permutation (x :: x1) (x1 ++ al)), (Permutation (x :: x1) (al ++ x1)), (Permutation (x :: x1) (al ++ al)), (Permutation (x :: x1) []), (Permutation (x :: al) x1)
(Permutation (x :: al) (x :: x1)), (Permutation (x :: al) (a :: x1)), (Permutation (x :: al) (a :: al)), (Permutation (x :: al) (y :: x1)), (Permutation (x :: al) (y :: al)), (Permutation (x :: al) (selection_sort x1)), (Permutation (x :: al) (selection_sort al)), (Permutation (x :: al) (selsort x1 x)), (Permutation (x :: al) (selsort x1 a)), (Permutation (x :: al) (selsort x1 y))
(Permutation (x :: al) (selsort al a)), (Permutation (x :: al) (selsort al y)), (Permutation (x :: al) (x1 ++ x1)), (Permutation (x :: al) (x1 ++ al)), (Permutation (x :: al) (al ++ x1)), (Permutation (x :: al) (al ++ al)), (Permutation (x :: al) []), (Permutation (a :: x1) x1), (Permutation (a :: x1) al), (Permutation (a :: x1) (x :: x1))
(Permutation (a :: x1) (a :: al)), (Permutation (a :: x1) (y :: x1)), (Permutation (a :: x1) (y :: al)), (Permutation (a :: x1) (selection_sort x1)), (Permutation (a :: x1) (selection_sort al)), (Permutation (a :: x1) (selsort x1 x)), (Permutation (a :: x1) (selsort x1 a)), (Permutation (a :: x1) (selsort x1 y)), (Permutation (a :: x1) (selsort al x)), (Permutation (a :: x1) (selsort al a))
(Permutation (a :: x1) (x1 ++ x1)), (Permutation (a :: x1) (x1 ++ al)), (Permutation (a :: x1) (al ++ x1)), (Permutation (a :: x1) (al ++ al)), (Permutation (a :: x1) []), (Permutation (a :: al) x1), (Permutation (a :: al) al), (Permutation (a :: al) (x :: x1)), (Permutation (a :: al) (x :: al)), (Permutation (a :: al) (a :: x1))
(Permutation (a :: al) (y :: al)), (Permutation (a :: al) (selection_sort x1)), (Permutation (a :: al) (selection_sort al)), (Permutation (a :: al) (selsort x1 x)), (Permutation (a :: al) (selsort x1 a)), (Permutation (a :: al) (selsort x1 y)), (Permutation (a :: al) (selsort al x)), (Permutation (a :: al) (selsort al a)), (Permutation (a :: al) (selsort al y)), (Permutation (a :: al) (x1 ++ x1))
(Permutation (a :: al) (al ++ x1)), (Permutation (a :: al) (al ++ al)), (Permutation (a :: al) []), (Permutation (y :: x1) x1), (Permutation (y :: x1) al), (Permutation (y :: x1) (x :: x1)), (Permutation (y :: x1) (x :: al)), (Permutation (y :: x1) (a :: x1)), (Permutation (y :: x1) (a :: al)), (Permutation (y :: x1) (y :: al))
(Permutation (y :: x1) (selection_sort al)), (Permutation (y :: x1) (selsort x1 x)), (Permutation (y :: x1) (selsort x1 a)), (Permutation (y :: x1) (selsort x1 y)), (Permutation (y :: x1) (selsort al x)), (Permutation (y :: x1) (selsort al a)), (Permutation (y :: x1) (selsort al y)), (Permutation (y :: x1) (x1 ++ x1)), (Permutation (y :: x1) (x1 ++ al)), (Permutation (y :: x1) (al ++ x1))
(Permutation (y :: x1) []), (Permutation (y :: al) x1), (Permutation (y :: al) al), (Permutation (y :: al) (x :: x1)), (Permutation (y :: al) (x :: al)), (Permutation (y :: al) (a :: x1)), (Permutation (y :: al) (a :: al)), (Permutation (y :: al) (y :: x1)), (Permutation (y :: al) (selection_sort x1)), (Permutation (y :: al) (selection_sort al))
(Permutation (y :: al) (selsort x1 a)), (Permutation (y :: al) (selsort x1 y)), (Permutation (y :: al) (selsort al x)), (Permutation (y :: al) (selsort al a)), (Permutation (y :: al) (selsort al y)), (Permutation (y :: al) (x1 ++ x1)), (Permutation (y :: al) (x1 ++ al)), (Permutation (y :: al) (al ++ x1)), (Permutation (y :: al) (al ++ al)), (Permutation (y :: al) [])
(Permutation (selection_sort x1) al), (Permutation (selection_sort x1) (x :: x1)), (Permutation (selection_sort x1) (x :: al)), (Permutation (selection_sort x1) (a :: x1)), (Permutation (selection_sort x1) (a :: al)), (Permutation (selection_sort x1) (y :: x1)), (Permutation (selection_sort x1) (y :: al)), (Permutation (selection_sort x1) (selection_sort al)), (Permutation (selection_sort x1) (selsort x1 x)), (Permutation (selection_sort x1) (selsort x1 a))
(Permutation (selection_sort x1) (selsort al x)), (Permutation (selection_sort x1) (selsort al a)), (Permutation (selection_sort x1) (selsort al y)), (Permutation (selection_sort x1) (x1 ++ x1)), (Permutation (selection_sort x1) (x1 ++ al)), (Permutation (selection_sort x1) (al ++ x1)), (Permutation (selection_sort x1) (al ++ al)), (Permutation (selection_sort x1) []), (Permutation (selection_sort al) x1), (Permutation (selection_sort al) al)
(Permutation (selection_sort al) (x :: al)), (Permutation (selection_sort al) (a :: x1)), (Permutation (selection_sort al) (a :: al)), (Permutation (selection_sort al) (y :: x1)), (Permutation (selection_sort al) (y :: al)), (Permutation (selection_sort al) (selection_sort x1)), (Permutation (selection_sort al) (selsort x1 x)), (Permutation (selection_sort al) (selsort x1 a)), (Permutation (selection_sort al) (selsort x1 y)), (Permutation (selection_sort al) (selsort al x))
(Permutation (selection_sort al) (selsort al y)), (Permutation (selection_sort al) (x1 ++ x1)), (Permutation (selection_sort al) (x1 ++ al)), (Permutation (selection_sort al) (al ++ x1)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) []), (Permutation (selsort x1 x) x1), (Permutation (selsort x1 x) al), (Permutation (selsort x1 x) (x :: x1)), (Permutation (selsort x1 x) (x :: al))
(Permutation (selsort x1 x) (a :: al)), (Permutation (selsort x1 x) (y :: x1)), (Permutation (selsort x1 x) (y :: al)), (Permutation (selsort x1 x) (selection_sort x1)), (Permutation (selsort x1 x) (selection_sort al)), (Permutation (selsort x1 x) (selsort x1 a)), (Permutation (selsort x1 x) (selsort x1 y)), (Permutation (selsort x1 x) (selsort al x)), (Permutation (selsort x1 x) (selsort al a)), (Permutation (selsort x1 x) (selsort al y))
(Permutation (selsort x1 x) (x1 ++ al)), (Permutation (selsort x1 x) (al ++ x1)), (Permutation (selsort x1 x) (al ++ al)), (Permutation (selsort x1 x) []), (Permutation (selsort x1 a) x1), (Permutation (selsort x1 a) al), (Permutation (selsort x1 a) (x :: x1)), (Permutation (selsort x1 a) (x :: al)), (Permutation (selsort x1 a) (a :: x1)), (Permutation (selsort x1 a) (a :: al))
(Permutation (selsort x1 a) (y :: al)), (Permutation (selsort x1 a) (selection_sort x1)), (Permutation (selsort x1 a) (selection_sort al)), (Permutation (selsort x1 a) (selsort x1 x)), (Permutation (selsort x1 a) (selsort x1 y)), (Permutation (selsort x1 a) (selsort al x)), (Permutation (selsort x1 a) (selsort al a)), (Permutation (selsort x1 a) (selsort al y)), (Permutation (selsort x1 a) (x1 ++ x1)), (Permutation (selsort x1 a) (x1 ++ al))
(Permutation (selsort x1 a) (al ++ al)), (Permutation (selsort x1 a) []), (Permutation (selsort x1 y) x1), (Permutation (selsort x1 y) al), (Permutation (selsort x1 y) (x :: x1)), (Permutation (selsort x1 y) (x :: al)), (Permutation (selsort x1 y) (a :: x1)), (Permutation (selsort x1 y) (a :: al)), (Permutation (selsort x1 y) (y :: x1)), (Permutation (selsort x1 y) (y :: al))
(Permutation (selsort x1 y) (selection_sort al)), (Permutation (selsort x1 y) (selsort x1 x)), (Permutation (selsort x1 y) (selsort x1 a)), (Permutation (selsort x1 y) (selsort al x)), (Permutation (selsort x1 y) (selsort al a)), (Permutation (selsort x1 y) (selsort al y)), (Permutation (selsort x1 y) (x1 ++ x1)), (Permutation (selsort x1 y) (x1 ++ al)), (Permutation (selsort x1 y) (al ++ x1)), (Permutation (selsort x1 y) (al ++ al))
(Permutation (selsort al x) x1), (Permutation (selsort al x) al), (Permutation (selsort al x) (x :: x1)), (Permutation (selsort al x) (x :: al)), (Permutation (selsort al x) (a :: x1)), (Permutation (selsort al x) (a :: al)), (Permutation (selsort al x) (y :: x1)), (Permutation (selsort al x) (y :: al)), (Permutation (selsort al x) (selection_sort x1)), (Permutation (selsort al x) (selection_sort al))
(Permutation (selsort al x) (selsort x1 a)), (Permutation (selsort al x) (selsort x1 y)), (Permutation (selsort al x) (selsort al a)), (Permutation (selsort al x) (selsort al y)), (Permutation (selsort al x) (x1 ++ x1)), (Permutation (selsort al x) (x1 ++ al)), (Permutation (selsort al x) (al ++ x1)), (Permutation (selsort al x) (al ++ al)), (Permutation (selsort al x) []), (Permutation (selsort al a) x1)
(Permutation (selsort al a) (x :: x1)), (Permutation (selsort al a) (x :: al)), (Permutation (selsort al a) (a :: x1)), (Permutation (selsort al a) (a :: al)), (Permutation (selsort al a) (y :: x1)), (Permutation (selsort al a) (y :: al)), (Permutation (selsort al a) (selection_sort x1)), (Permutation (selsort al a) (selection_sort al)), (Permutation (selsort al a) (selsort x1 x)), (Permutation (selsort al a) (selsort x1 a))
(Permutation (selsort al a) (selsort al x)), (Permutation (selsort al a) (selsort al y)), (Permutation (selsort al a) (x1 ++ x1)), (Permutation (selsort al a) (x1 ++ al)), (Permutation (selsort al a) (al ++ x1)), (Permutation (selsort al a) (al ++ al)), (Permutation (selsort al a) []), (Permutation (selsort al y) x1), (Permutation (selsort al y) al), (Permutation (selsort al y) (x :: x1))
(Permutation (selsort al y) (a :: x1)), (Permutation (selsort al y) (a :: al)), (Permutation (selsort al y) (y :: x1)), (Permutation (selsort al y) (y :: al)), (Permutation (selsort al y) (selection_sort x1)), (Permutation (selsort al y) (selection_sort al)), (Permutation (selsort al y) (selsort x1 x)), (Permutation (selsort al y) (selsort x1 a)), (Permutation (selsort al y) (selsort x1 y)), (Permutation (selsort al y) (selsort al x))
(Permutation (selsort al y) (x1 ++ x1)), (Permutation (selsort al y) (x1 ++ al)), (Permutation (selsort al y) (al ++ x1)), (Permutation (selsort al y) (al ++ al)), (Permutation (selsort al y) []), (Permutation (x1 ++ x1) x1), (Permutation (x1 ++ x1) al), (Permutation (x1 ++ x1) (x :: x1)), (Permutation (x1 ++ x1) (x :: al)), (Permutation (x1 ++ x1) (a :: x1))
(Permutation (x1 ++ x1) (y :: x1)), (Permutation (x1 ++ x1) (y :: al)), (Permutation (x1 ++ x1) (selection_sort x1)), (Permutation (x1 ++ x1) (selection_sort al)), (Permutation (x1 ++ x1) (selsort x1 x)), (Permutation (x1 ++ x1) (selsort x1 a)), (Permutation (x1 ++ x1) (selsort x1 y)), (Permutation (x1 ++ x1) (selsort al x)), (Permutation (x1 ++ x1) (selsort al a)), (Permutation (x1 ++ x1) (selsort al y))
(Permutation (x1 ++ x1) (al ++ x1)), (Permutation (x1 ++ x1) (al ++ al)), (Permutation (x1 ++ x1) []), (Permutation (x1 ++ al) x1), (Permutation (x1 ++ al) al), (Permutation (x1 ++ al) (x :: x1)), (Permutation (x1 ++ al) (x :: al)), (Permutation (x1 ++ al) (a :: x1)), (Permutation (x1 ++ al) (a :: al)), (Permutation (x1 ++ al) (y :: x1))
(Permutation (x1 ++ al) (selection_sort x1)), (Permutation (x1 ++ al) (selection_sort al)), (Permutation (x1 ++ al) (selsort x1 x)), (Permutation (x1 ++ al) (selsort x1 a)), (Permutation (x1 ++ al) (selsort x1 y)), (Permutation (x1 ++ al) (selsort al x)), (Permutation (x1 ++ al) (selsort al a)), (Permutation (x1 ++ al) (selsort al y)), (Permutation (x1 ++ al) (x1 ++ x1)), (Permutation (x1 ++ al) (al ++ x1))
(Permutation (x1 ++ al) []), (Permutation (al ++ x1) x1), (Permutation (al ++ x1) al), (Permutation (al ++ x1) (x :: x1)), (Permutation (al ++ x1) (x :: al)), (Permutation (al ++ x1) (a :: x1)), (Permutation (al ++ x1) (a :: al)), (Permutation (al ++ x1) (y :: x1)), (Permutation (al ++ x1) (y :: al)), (Permutation (al ++ x1) (selection_sort x1))
(Permutation (al ++ x1) (selsort x1 x)), (Permutation (al ++ x1) (selsort x1 a)), (Permutation (al ++ x1) (selsort x1 y)), (Permutation (al ++ x1) (selsort al x)), (Permutation (al ++ x1) (selsort al a)), (Permutation (al ++ x1) (selsort al y)), (Permutation (al ++ x1) (x1 ++ x1)), (Permutation (al ++ x1) (x1 ++ al)), (Permutation (al ++ x1) (al ++ al)), (Permutation (al ++ x1) [])
(Permutation (al ++ al) al), (Permutation (al ++ al) (x :: x1)), (Permutation (al ++ al) (x :: al)), (Permutation (al ++ al) (a :: x1)), (Permutation (al ++ al) (a :: al)), (Permutation (al ++ al) (y :: x1)), (Permutation (al ++ al) (y :: al)), (Permutation (al ++ al) (selection_sort x1)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selsort x1 x))
(Permutation (al ++ al) (selsort x1 y)), (Permutation (al ++ al) (selsort al x)), (Permutation (al ++ al) (selsort al a)), (Permutation (al ++ al) (selsort al y)), (Permutation (al ++ al) (x1 ++ x1)), (Permutation (al ++ al) (x1 ++ al)), (Permutation (al ++ al) (al ++ x1)), (Permutation (al ++ al) []), (Permutation [] x1), (Permutation [] al)
(Permutation [] (x :: al)), (Permutation [] (a :: x1)), (Permutation [] (a :: al)), (Permutation [] (y :: x1)), (Permutation [] (y :: al)), (Permutation [] (selection_sort x1)), (Permutation [] (selection_sort al)), (Permutation [] (selsort x1 x)), (Permutation [] (selsort x1 a)), (Permutation [] (selsort x1 y))
(Permutation [] (selsort al a)), (Permutation [] (selsort al y)), (Permutation [] (x1 ++ x1)), (Permutation [] (x1 ++ al)), (Permutation [] (al ++ x1)), (Permutation [] (al ++ al)), (In x (x :: x1)), (In x (x :: al)), (In x (a :: x1)), (In x (a :: al))
(In x (y :: al)), (In x (selection_sort x1)), (In x (selection_sort al)), (In x (selsort x1 x)), (In x (selsort x1 a)), (In x (selsort x1 y)), (In x (selsort al x)), (In x (selsort al a)), (In x (selsort al y)), (In x (x1 ++ x1))
(In x (al ++ x1)), (In x (al ++ al)), (In a (x :: x1)), (In a (x :: al)), (In a (a :: x1)), (In a (a :: al)), (In a (y :: x1)), (In a (y :: al)), (In a (selection_sort x1)), (In a (selection_sort al))
(In a (selsort x1 a)), (In a (selsort x1 y)), (In a (selsort al x)), (In a (selsort al a)), (In a (selsort al y)), (In a (x1 ++ x1)), (In a (x1 ++ al)), (In a (al ++ x1)), (In a (al ++ al)), (In y (x :: x1))
(In y (a :: x1)), (In y (a :: al)), (In y (y :: x1)), (In y (y :: al)), (In y (selection_sort x1)), (In y (selection_sort al)), (In y (selsort x1 x)), (In y (selsort x1 a)), (In y (selsort x1 y)), (In y (selsort al x))
(In y (selsort al y)), (In y (x1 ++ x1)), (In y (x1 ++ al)), (In y (al ++ x1)), (In y (al ++ al)), (In (length x1) x1), (In (length x1) al), (In (length x1) (x :: x1)), (In (length x1) (x :: al)), (In (length x1) (a :: x1))
(In (length x1) (y :: x1)), (In (length x1) (y :: al)), (In (length x1) (selection_sort x1)), (In (length x1) (selection_sort al)), (In (length x1) (selsort x1 x)), (In (length x1) (selsort x1 a)), (In (length x1) (selsort x1 y)), (In (length x1) (selsort al x)), (In (length x1) (selsort al a)), (In (length x1) (selsort al y))
(In (length x1) (x1 ++ al)), (In (length x1) (al ++ x1)), (In (length x1) (al ++ al)), (In (length al) x1), (In (length al) al), (In (length al) (x :: x1)), (In (length al) (x :: al)), (In (length al) (a :: x1)), (In (length al) (a :: al)), (In (length al) (y :: x1))
(In (length al) (selection_sort x1)), (In (length al) (selection_sort al)), (In (length al) (selsort x1 x)), (In (length al) (selsort x1 a)), (In (length al) (selsort x1 y)), (In (length al) (selsort al x)), (In (length al) (selsort al a)), (In (length al) (selsort al y)), (In (length al) (x1 ++ x1)), (In (length al) (x1 ++ al))
(In (length al) (al ++ al)), (x < length x1), (x < length al), (a < length x1), (a < length al), (y < length x1), (y < length al), (length x1 < x), (length x1 < a), (length x1 < y)
(length al < x), (length al < a), (length al < y), (length al < length x1), (x <= length x1), (x <= length al), (a <= length x1), (a <= length al), (y <= length x1), (y <= length al)
(length x1 <= a), (length x1 <= y), (length x1 <= length al), (length al <= x), (length al <= a), (length al <= y), (length al <= length x1), (~ x <=* x1), (~ x <=* al), (~ a <=* x1)
(~ y <=* x1), (~ y <=* al), (~ sorted x1), (~ sorted al), (~ Permutation x1 x1), (~ Permutation x1 al), (~ Permutation al x1), (~ Permutation al al), (~ In x x1), (~ In x al)
(~ In a al), (~ In y x1), (~ In y al), (~ x < x), (~ x < a), (~ x < y), (~ a < x), (~ a < a), (~ a < y), (~ y < x)
(~ y < y), (~ x <= x), (~ x <= a), (~ x <= y), (~ a <= x), (~ a <= a), (~ a <= y), (~ y <= x), (~ y <= a), (~ y <= y)
(x1 <> al), (al <> x1), (al <> al), (x <> x), (x <> a), (x <> y), (a <> x), (a <> a), (a <> y), (y <> x)
(y <> y), (None = Some x1), (None = Some al), (x :: x1 = x1), (x :: x1 = al), (x :: x1 = selection_sort x1), (x :: x1 = selection_sort al), (x :: x1 = selsort x1 x), (x :: x1 = selsort x1 a), (x :: x1 = selsort x1 y)
(x :: x1 = selsort al a), (x :: x1 = selsort al y), (x :: x1 = x1 ++ x1), (x :: x1 = x1 ++ al), (x :: x1 = al ++ x1), (x :: x1 = al ++ al), (x :: x1 = []), (x :: al = x1), (x :: al = al), (x :: al = selection_sort x1)
(x :: al = selsort x1 x), (x :: al = selsort x1 a), (x :: al = selsort x1 y), (x :: al = selsort al x), (x :: al = selsort al a), (x :: al = selsort al y), (x :: al = x1 ++ x1), (x :: al = x1 ++ al), (x :: al = al ++ x1), (x :: al = al ++ al)
(a :: x1 = x1), (a :: x1 = al), (a :: x1 = selection_sort x1), (a :: x1 = selection_sort al), (a :: x1 = selsort x1 x), (a :: x1 = selsort x1 a), (a :: x1 = selsort x1 y), (a :: x1 = selsort al x), (a :: x1 = selsort al a), (a :: x1 = selsort al y)
(a :: x1 = x1 ++ al), (a :: x1 = al ++ x1), (a :: x1 = al ++ al), (a :: x1 = []), (a :: al = x1), (a :: al = al), (a :: al = selection_sort x1), (a :: al = selection_sort al), (a :: al = selsort x1 x), (a :: al = selsort x1 a)
(a :: al = selsort al x), (a :: al = selsort al a), (a :: al = selsort al y), (a :: al = x1 ++ x1), (a :: al = x1 ++ al), (a :: al = al ++ x1), (a :: al = al ++ al), (a :: al = []), (y :: x1 = x1), (y :: x1 = al)
(y :: x1 = selection_sort al), (y :: x1 = selsort x1 x), (y :: x1 = selsort x1 a), (y :: x1 = selsort x1 y), (y :: x1 = selsort al x), (y :: x1 = selsort al a), (y :: x1 = selsort al y), (y :: x1 = x1 ++ x1), (y :: x1 = x1 ++ al), (y :: x1 = al ++ x1)
(y :: x1 = []), (y :: al = x1), (y :: al = al), (y :: al = selection_sort x1), (y :: al = selection_sort al), (y :: al = selsort x1 x), (y :: al = selsort x1 a), (y :: al = selsort x1 y), (y :: al = selsort al x), (y :: al = selsort al a)
(y :: al = x1 ++ x1), (y :: al = x1 ++ al), (y :: al = al ++ x1), (y :: al = al ++ al), (y :: al = []), (selection_sort x1 = x1), (selection_sort x1 = al), (selection_sort x1 = x1 ++ x1), (selection_sort x1 = x1 ++ al), (selection_sort x1 = al ++ x1)
(selection_sort al = x1), (selection_sort al = al), (selection_sort al = x1 ++ x1), (selection_sort al = x1 ++ al), (selection_sort al = al ++ x1), (selection_sort al = al ++ al), (selsort x1 x = x1), (selsort x1 x = al), (selsort x1 x = selection_sort x1), (selsort x1 x = selection_sort al)
(selsort x1 x = x1 ++ al), (selsort x1 x = al ++ x1), (selsort x1 x = al ++ al), (selsort x1 a = x1), (selsort x1 a = al), (selsort x1 a = selection_sort x1), (selsort x1 a = selection_sort al), (selsort x1 a = x1 ++ x1), (selsort x1 a = x1 ++ al), (selsort x1 a = al ++ x1)
(selsort x1 y = x1), (selsort x1 y = al), (selsort x1 y = selection_sort x1), (selsort x1 y = selection_sort al), (selsort x1 y = x1 ++ x1), (selsort x1 y = x1 ++ al), (selsort x1 y = al ++ x1), (selsort x1 y = al ++ al), (selsort al x = x1), (selsort al x = al)
(selsort al x = selection_sort al), (selsort al x = x1 ++ x1), (selsort al x = x1 ++ al), (selsort al x = al ++ x1), (selsort al x = al ++ al), (selsort al a = x1), (selsort al a = al), (selsort al a = selection_sort x1), (selsort al a = selection_sort al), (selsort al a = x1 ++ x1)
(selsort al a = al ++ x1), (selsort al a = al ++ al), (selsort al y = x1), (selsort al y = al), (selsort al y = selection_sort x1), (selsort al y = selection_sort al), (selsort al y = x1 ++ x1), (selsort al y = x1 ++ al), (selsort al y = al ++ x1), (selsort al y = al ++ al)
(x1 ++ x1 = al), (x1 ++ al = x1), (x1 ++ al = al), (al ++ x1 = x1), (al ++ x1 = al), (al ++ al = x1), (al ++ al = al), ([] = x1), ([] = al), ([] = selection_sort x1)
([] = selsort x1 x), ([] = selsort x1 a), ([] = selsort x1 y), ([] = selsort al x), ([] = selsort al a), ([] = selsort al y), ([] = x1 ++ x1), ([] = x1 ++ al), ([] = al ++ x1), ([] = al ++ al)
(None = Some a), (None = Some y), ((x, x1) = select x x1), ((x, x1) = select x al), ((x, x1) = select a x1), ((x, x1) = select a al), ((x, x1) = select y x1), ((x, x1) = select y al), ((x, al) = select x x1), ((x, al) = select x al)
((x, al) = select a al), ((x, al) = select y x1), ((x, al) = select y al), ((a, x1) = select x x1), ((a, x1) = select x al), ((a, x1) = select a x1), ((a, x1) = select a al), ((a, x1) = select y x1), ((a, x1) = select y al), ((a, al) = select x x1)
((a, al) = select a x1), ((a, al) = select a al), ((a, al) = select y x1), ((a, al) = select y al), ((y, x1) = select x x1), ((y, x1) = select x al), ((y, x1) = select a x1), ((y, x1) = select a al), ((y, x1) = select y x1), ((y, x1) = select y al)
((y, al) = select x al), ((y, al) = select a x1), ((y, al) = select a al), ((y, al) = select y x1), ((y, al) = select y al), (length x1 = x), (length x1 = a), (length x1 = y), (length al = x), (length al = a)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 586.088 seconds


Label: 0 (0)
(y <= a), (y <=* x :: x1), (y <=* a :: x1), (y <=* a :: al), (Permutation (x :: al) (y :: x1)), (Permutation (y :: x1) (x :: al)), (~ x < y), (~ a < y), ((y, x1) = select x al)

Label: 0 (1)
(x <= a), (y <= a), (y <=* a :: x1), (y <=* a :: al), (~ a < x), (~ a < y)


------------------------------ PROCESSED SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 618.725 seconds


(x <= a)
 - (x <= a)
 - (y <= a)
 - (y <=* a :: x1)
 - (y <=* a :: al)
 - (~ a < x)
 - (~ a < y)

(select x al = (y, x1))
 - (select x al = (y, x1))
 - (y <= a)
 - (y <=* x :: x1)
 - (y <=* a :: x1)
 - (y <=* a :: al)
 - (Permutation (x :: al) (y :: x1))
 - (Permutation (y :: x1) (x :: al))
 - (~ x < y)
 - (~ a < y)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 618.726 seconds

Number of Result Pairs Returned: 4

(select x al = (y, x1) -> x <= a -> y <= a)

(select x al = (y, x1) -> y <=* x :: x1)
(y <=* x :: x1 -> x <= a -> y <= a)

(select x al = (y, x1) -> ~ x < y)
(~ x < y -> x <= a -> y <= a)

(x <= a -> ~ a < x)
(~ a < x -> select x al = (y, x1) -> y <= a)
