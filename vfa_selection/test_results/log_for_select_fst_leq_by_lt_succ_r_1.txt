Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (x :: x1 = bl)
 -- ((x0, x :: x1) = (y, bl))
 -- (exists j : list nat, select a al = (x0, j))
 -- (a < x)
 -- (exists (i : nat) (j : list nat), select a al = (i, j))
 -- (forall (bl : list nat) (y x : nat), select x al = (y, bl) -> y <= x)
 -- (x0 = y)
 -- (x0 = a)
 -- (x0 <= a)

----------------------------------
Goal: (a <= x)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds



------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 65.642 seconds

Label: Generalization #0
Assumptions: 
 -- (a < x)

----------------------------------
Goal: (a <= x)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 66.048 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (a < x)
Positive Examples:
   [a := 4; x := 6]
   [a := 5; x := 6]
   [a := 0; x := 3]
   [a := 1; x := 4]
   [a := 4; x := 5]
   [a := 3; x := 6]
   [a := 0; x := 6]
   [a := 1; x := 5]
   [a := 2; x := 6]
   [a := 2; x := 5]
   etc ...

Negative Examples:
   [a := 6; x := 2]
   [a := 6; x := 4]
   [a := 6; x := 0]
   [a := 4; x := 0]
   [a := 6; x := 5]
   [a := 5; x := 2]
   [a := 5; x := 1]
   [a := 5; x := 3]
   [a := 6; x := 3]
   [a := 4; x := 2]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 66.526 seconds


Label: 0 (0)
(x <=* []), (a <=* []), (sorted []), (x < a), (a < x), (x <= a), (a <= x)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 78.982 seconds


Label: 0 (0)
(a < x), (a <= x)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 83.146 seconds

