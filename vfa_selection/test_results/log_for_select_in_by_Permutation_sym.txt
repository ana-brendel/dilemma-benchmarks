Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (forall (y x : nat) (bl : list nat), select x al = (y, bl) -> In y (x :: al))
 -- (x > a)
 -- ((let (j, l') := select a al in (j, x :: l')) = (y, bl))
 -- (select x (a :: al) = (y, bl))

----------------------------------
Goal: (Permutation (y :: bl) (x :: a :: al))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : (list nat) = (x :: a :: al)
gv2 : (list nat) = (a :: al)
gv0 : (list nat) = (y :: bl)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 128.172 seconds

Label: Generalization #0
Assumptions: 
 -- (gv0 = y :: bl)
 -- ((let (j, l') := select a al in (j, x :: l')) = (y, bl))

----------------------------------
Goal: (Permutation gv0 (x :: a :: al))
Case: 4

Label: Generalization #1
Assumptions: 
 -- (select x gv2 = (y, bl))

----------------------------------
Goal: (Permutation (y :: bl) (x :: gv2))
Case: 3

Label: Generalization #2
Assumptions: 
 -- (gv1 = x :: a :: al)
 -- ((let (j, l') := select a al in (j, x :: l')) = (y, bl))

----------------------------------
Goal: (Permutation (y :: bl) gv1)
Case: 3

Label: Generalization #3
Assumptions: 
 -- ((let (j, l') := select a al in (j, x :: l')) = (y, bl))

----------------------------------
Goal: (Permutation (y :: bl) (x :: a :: al))
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 128.792 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 1 (0)
Abducted Assumption: (select x gv2 = (y, bl))
Positive Examples:
   [a := 1; al := [0]; bl := [2]; gv2 := [2]; x := 1; y := 1]
   [a := 0; al := [4; 3; 6; 6; 1]; bl := []; gv2 := []; x := 6; y := 6]
   [a := 1; al := [0; 2]; bl := []; gv2 := []; x := 0; y := 0]
   [a := 6; al := [5; 2; 3; 6]; bl := []; gv2 := []; x := 6; y := 6]
   [a := 2; al := [1]; bl := []; gv2 := []; x := 0; y := 0]
   [a := 3; al := [0; 0; 2]; bl := []; gv2 := []; x := 2; y := 2]
   [a := 2; al := [0; 1]; bl := []; gv2 := []; x := 0; y := 0]
   [a := 0; al := [0; 0]; bl := [2]; gv2 := [1]; x := 2; y := 1]
   [a := 0; al := [0; 0]; bl := []; gv2 := []; x := 1; y := 1]
   [a := 4; al := [1]; bl := [1; 4; 4; 1]; gv2 := [1; 4; 4; 0]; x := 1; y := 0]
   etc ...

Negative Examples:
   [a := 3; al := [4; 0]; bl := [2; 1; 1]; gv2 := [4; 3; 1; 0]; x := 0; y := 1]
   [a := 2; al := [2; 0]; bl := []; gv2 := [0]; x := 0; y := 0]
   [a := 2; al := [2]; bl := [1; 1]; gv2 := [1; 0; 1]; x := 0; y := 3]
   [a := 2; al := [1; 5]; bl := [4; 5]; gv2 := [5; 4; 4; 4; 4]; x := 4; y := 2]
   [a := 0; al := [3; 4; 0; 2]; bl := [4; 0]; gv2 := [0; 0; 0]; x := 2; y := 4]
   [a := 2; al := [3; 2]; bl := [3; 3; 0]; gv2 := [1; 1; 3]; x := 3; y := 1]
   [a := 2; al := []; bl := [2; 1]; gv2 := [0]; x := 1; y := 0]
   [a := 6; al := [6]; bl := [5; 2; 4]; gv2 := []; x := 1; y := 2]
   [a := 0; al := [5; 4; 0; 3]; bl := []; gv2 := [2; 1; 2; 3; 1]; x := 3; y := 2]
   [a := 0; al := [0; 3; 0]; bl := [4; 0]; gv2 := [2; 0]; x := 0; y := 4]
   etc ...


Label: 2 (1)
Abducted Assumption: (gv1 = x :: a :: al)
Positive Examples:
   [a := 2; al := []; bl := [1]; gv1 := [1; 2]; x := 1; y := 2]

Negative Examples:
   [a := 2; al := []; bl := [0]; gv1 := [2]; x := 0; y := 2]
   [a := 1; al := []; bl := [1]; gv1 := [2]; x := 1; y := 1]
   [a := 1; al := [0]; bl := [1; 1]; gv1 := [1]; x := 1; y := 0]
   [a := 2; al := [0]; bl := [2; 2]; gv1 := [1]; x := 2; y := 0]
   [a := 1; al := []; bl := [1]; gv1 := [0]; x := 1; y := 1]
   [a := 2; al := []; bl := [0]; gv1 := []; x := 0; y := 2]
   [a := 2; al := [2]; bl := [0; 2]; gv1 := [1; 0]; x := 0; y := 2]
   [a := 2; al := []; bl := [1]; gv1 := [0; 0]; x := 1; y := 2]
   [a := 1; al := []; bl := [1]; gv1 := [1]; x := 1; y := 1]
   [a := 0; al := []; bl := [2]; gv1 := [1]; x := 2; y := 0]
   etc ...


Label: 2 (2)
Abducted Assumption: ((let (j, l') := select a al in (j, x :: l')) = (y, bl))
Positive Examples:
   [a := 2; al := []; bl := [1]; gv1 := [1; 2]; x := 1; y := 2]

Negative Examples:
   [a := 1; al := []; bl := [0; 1]; gv1 := [2; 1]; x := 2; y := 2]
   [a := 0; al := []; bl := [0]; gv1 := [2; 0]; x := 2; y := 0]
   [a := 2; al := []; bl := [1; 2]; gv1 := [2; 2]; x := 2; y := 1]
   [a := 0; al := []; bl := []; gv1 := [1; 0]; x := 1; y := 0]
   [a := 2; al := []; bl := [2; 1]; gv1 := [1; 2]; x := 1; y := 1]
   [a := 2; al := []; bl := [2; 2]; gv1 := [2; 2]; x := 2; y := 2]
   [a := 2; al := []; bl := [0]; gv1 := [2; 2]; x := 2; y := 0]
   [a := 4; al := []; bl := [0]; gv1 := [4; 4]; x := 4; y := 3]
   [a := 1; al := []; bl := [2; 2]; gv1 := [2; 1]; x := 2; y := 0]
   [a := 2; al := []; bl := []; gv1 := [0; 2]; x := 0; y := 1]
   etc ...


Label: 3 (3)
Abducted Assumption: ((let (j, l') := select a al in (j, x :: l')) = (y, bl))
Positive Examples:
   [a := 2; al := []; bl := [0]; x := 0; y := 2]
   [a := 2; al := []; bl := [1]; x := 1; y := 2]
   [a := 3; al := []; bl := [3]; x := 3; y := 3]
   [a := 0; al := [1]; bl := [0; 1]; x := 0; y := 0]
   [a := 1; al := []; bl := [2]; x := 2; y := 1]
   [a := 3; al := []; bl := [2]; x := 2; y := 3]
   [a := 1; al := []; bl := [3]; x := 3; y := 1]
   [a := 0; al := []; bl := [1]; x := 1; y := 0]
   [a := 1; al := []; bl := [1]; x := 1; y := 1]
   [a := 0; al := []; bl := [2]; x := 2; y := 0]
   etc ...

Negative Examples:
   [a := 2; al := [4; 0; 4; 1]; bl := [3]; x := 2; y := 4]
   [a := 2; al := [0]; bl := [2]; x := 0; y := 1]
   [a := 2; al := [5; 4; 3; 4]; bl := [3; 3; 0; 4; 6; 0]; x := 4; y := 5]
   [a := 4; al := [5; 5; 0; 3; 0]; bl := []; x := 4; y := 2]
   [a := 1; al := [3; 3; 1]; bl := [1; 1; 1; 1]; x := 0; y := 1]
   [a := 1; al := []; bl := [3; 1; 2]; x := 2; y := 2]
   [a := 3; al := []; bl := [1; 1; 1; 3; 6; 0]; x := 2; y := 5]
   [a := 2; al := [0; 4; 4]; bl := [4; 0; 5]; x := 1; y := 0]
   [a := 2; al := [4]; bl := [4; 1; 1]; x := 2; y := 3]
   [a := 3; al := [1; 3; 1]; bl := [3; 3]; x := 0; y := 3]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 130.578 seconds


Label: 1 (0)
(false = sorted_bool gv2), (true = sorted_bool gv2), (x <=* gv2), (x <=* x :: gv2), (x <=* y :: gv2), (x <=* selection_sort gv2), (x <=* selsort gv2 x), (x <=* selsort gv2 y), (x <=* gv2 ++ gv2), (x <=* gv2 ++ bl)
(y <=* gv2), (y <=* x :: gv2), (y <=* y :: gv2), (y <=* selection_sort gv2), (y <=* selsort gv2 x), (y <=* selsort gv2 y), (y <=* gv2 ++ gv2), (y <=* gv2 ++ bl), (y <=* bl ++ gv2), (length gv2 <=* gv2)
(length gv2 <=* x :: gv2), (length gv2 <=* x :: bl), (length gv2 <=* y :: gv2), (length gv2 <=* y :: bl), (length gv2 <=* selection_sort gv2), (length gv2 <=* selection_sort bl), (length gv2 <=* selsort gv2 x), (length gv2 <=* selsort gv2 y), (length gv2 <=* selsort bl x), (length gv2 <=* selsort bl y)
(length gv2 <=* gv2 ++ bl), (length gv2 <=* bl ++ gv2), (length gv2 <=* bl ++ bl), (length gv2 <=* []), (length bl <=* gv2), (length bl <=* x :: gv2), (length bl <=* y :: gv2), (length bl <=* selection_sort gv2), (length bl <=* selsort gv2 x), (length bl <=* selsort gv2 y)
(length bl <=* gv2 ++ bl), (length bl <=* bl ++ gv2), (sorted gv2), (sorted (x :: gv2)), (sorted (y :: gv2)), (sorted (selection_sort gv2)), (sorted (selsort gv2 x)), (sorted (selsort gv2 y)), (sorted (gv2 ++ gv2)), (sorted (gv2 ++ bl))
(Permutation gv2 bl), (Permutation gv2 (x :: gv2)), (Permutation gv2 (x :: bl)), (Permutation gv2 (y :: gv2)), (Permutation gv2 (y :: bl)), (Permutation gv2 (selection_sort gv2)), (Permutation gv2 (selection_sort bl)), (Permutation gv2 (selsort gv2 x)), (Permutation gv2 (selsort gv2 y)), (Permutation gv2 (selsort bl x))
(Permutation gv2 (gv2 ++ gv2)), (Permutation gv2 (gv2 ++ bl)), (Permutation gv2 (bl ++ gv2)), (Permutation gv2 (bl ++ bl)), (Permutation gv2 []), (Permutation bl gv2), (Permutation bl (x :: gv2)), (Permutation bl (y :: gv2)), (Permutation bl (selection_sort gv2)), (Permutation bl (selsort gv2 x))
(Permutation bl (gv2 ++ gv2)), (Permutation bl (gv2 ++ bl)), (Permutation bl (bl ++ gv2)), (Permutation (x :: gv2) gv2), (Permutation (x :: gv2) bl), (Permutation (x :: gv2) (x :: bl)), (Permutation (x :: gv2) (y :: gv2)), (Permutation (x :: gv2) (y :: bl)), (Permutation (x :: gv2) (selection_sort gv2)), (Permutation (x :: gv2) (selection_sort bl))
(Permutation (x :: gv2) (selsort gv2 y)), (Permutation (x :: gv2) (selsort bl x)), (Permutation (x :: gv2) (selsort bl y)), (Permutation (x :: gv2) (gv2 ++ gv2)), (Permutation (x :: gv2) (gv2 ++ bl)), (Permutation (x :: gv2) (bl ++ gv2)), (Permutation (x :: gv2) (bl ++ bl)), (Permutation (x :: gv2) []), (Permutation (x :: bl) gv2), (Permutation (x :: bl) (x :: gv2))
(Permutation (x :: bl) (selection_sort gv2)), (Permutation (x :: bl) (selsort gv2 x)), (Permutation (x :: bl) (selsort gv2 y)), (Permutation (x :: bl) (gv2 ++ gv2)), (Permutation (x :: bl) (gv2 ++ bl)), (Permutation (x :: bl) (bl ++ gv2)), (Permutation (y :: gv2) gv2), (Permutation (y :: gv2) bl), (Permutation (y :: gv2) (x :: gv2)), (Permutation (y :: gv2) (x :: bl))
(Permutation (y :: gv2) (selection_sort gv2)), (Permutation (y :: gv2) (selection_sort bl)), (Permutation (y :: gv2) (selsort gv2 x)), (Permutation (y :: gv2) (selsort gv2 y)), (Permutation (y :: gv2) (selsort bl x)), (Permutation (y :: gv2) (selsort bl y)), (Permutation (y :: gv2) (gv2 ++ gv2)), (Permutation (y :: gv2) (gv2 ++ bl)), (Permutation (y :: gv2) (bl ++ gv2)), (Permutation (y :: gv2) (bl ++ bl))
(Permutation (y :: bl) gv2), (Permutation (y :: bl) (x :: gv2)), (Permutation (y :: bl) (y :: gv2)), (Permutation (y :: bl) (selection_sort gv2)), (Permutation (y :: bl) (selsort gv2 x)), (Permutation (y :: bl) (selsort gv2 y)), (Permutation (y :: bl) (gv2 ++ gv2)), (Permutation (y :: bl) (gv2 ++ bl)), (Permutation (y :: bl) (bl ++ gv2)), (Permutation (selection_sort gv2) gv2)
(Permutation (selection_sort gv2) (x :: gv2)), (Permutation (selection_sort gv2) (x :: bl)), (Permutation (selection_sort gv2) (y :: gv2)), (Permutation (selection_sort gv2) (y :: bl)), (Permutation (selection_sort gv2) (selection_sort bl)), (Permutation (selection_sort gv2) (selsort gv2 x)), (Permutation (selection_sort gv2) (selsort gv2 y)), (Permutation (selection_sort gv2) (selsort bl x)), (Permutation (selection_sort gv2) (selsort bl y)), (Permutation (selection_sort gv2) (gv2 ++ gv2))
(Permutation (selection_sort gv2) (bl ++ gv2)), (Permutation (selection_sort gv2) (bl ++ bl)), (Permutation (selection_sort gv2) []), (Permutation (selection_sort bl) gv2), (Permutation (selection_sort bl) (x :: gv2)), (Permutation (selection_sort bl) (y :: gv2)), (Permutation (selection_sort bl) (selection_sort gv2)), (Permutation (selection_sort bl) (selsort gv2 x)), (Permutation (selection_sort bl) (selsort gv2 y)), (Permutation (selection_sort bl) (gv2 ++ gv2))
(Permutation (selection_sort bl) (bl ++ gv2)), (Permutation (selsort gv2 x) gv2), (Permutation (selsort gv2 x) bl), (Permutation (selsort gv2 x) (x :: gv2)), (Permutation (selsort gv2 x) (x :: bl)), (Permutation (selsort gv2 x) (y :: gv2)), (Permutation (selsort gv2 x) (y :: bl)), (Permutation (selsort gv2 x) (selection_sort gv2)), (Permutation (selsort gv2 x) (selection_sort bl)), (Permutation (selsort gv2 x) (selsort gv2 y))
(Permutation (selsort gv2 x) (selsort bl y)), (Permutation (selsort gv2 x) (gv2 ++ gv2)), (Permutation (selsort gv2 x) (gv2 ++ bl)), (Permutation (selsort gv2 x) (bl ++ gv2)), (Permutation (selsort gv2 x) (bl ++ bl)), (Permutation (selsort gv2 x) []), (Permutation (selsort gv2 y) gv2), (Permutation (selsort gv2 y) bl), (Permutation (selsort gv2 y) (x :: gv2)), (Permutation (selsort gv2 y) (x :: bl))
(Permutation (selsort gv2 y) (y :: bl)), (Permutation (selsort gv2 y) (selection_sort gv2)), (Permutation (selsort gv2 y) (selection_sort bl)), (Permutation (selsort gv2 y) (selsort gv2 x)), (Permutation (selsort gv2 y) (selsort bl x)), (Permutation (selsort gv2 y) (selsort bl y)), (Permutation (selsort gv2 y) (gv2 ++ gv2)), (Permutation (selsort gv2 y) (gv2 ++ bl)), (Permutation (selsort gv2 y) (bl ++ gv2)), (Permutation (selsort gv2 y) (bl ++ bl))
(Permutation (selsort bl x) gv2), (Permutation (selsort bl x) (x :: gv2)), (Permutation (selsort bl x) (y :: gv2)), (Permutation (selsort bl x) (selection_sort gv2)), (Permutation (selsort bl x) (selsort gv2 x)), (Permutation (selsort bl x) (selsort gv2 y)), (Permutation (selsort bl x) (gv2 ++ gv2)), (Permutation (selsort bl x) (gv2 ++ bl)), (Permutation (selsort bl x) (bl ++ gv2)), (Permutation (selsort bl y) gv2)
(Permutation (selsort bl y) (y :: gv2)), (Permutation (selsort bl y) (selection_sort gv2)), (Permutation (selsort bl y) (selsort gv2 x)), (Permutation (selsort bl y) (selsort gv2 y)), (Permutation (selsort bl y) (gv2 ++ gv2)), (Permutation (selsort bl y) (gv2 ++ bl)), (Permutation (selsort bl y) (bl ++ gv2)), (Permutation (gv2 ++ gv2) gv2), (Permutation (gv2 ++ gv2) bl), (Permutation (gv2 ++ gv2) (x :: gv2))
(Permutation (gv2 ++ gv2) (y :: gv2)), (Permutation (gv2 ++ gv2) (y :: bl)), (Permutation (gv2 ++ gv2) (selection_sort gv2)), (Permutation (gv2 ++ gv2) (selection_sort bl)), (Permutation (gv2 ++ gv2) (selsort gv2 x)), (Permutation (gv2 ++ gv2) (selsort gv2 y)), (Permutation (gv2 ++ gv2) (selsort bl x)), (Permutation (gv2 ++ gv2) (selsort bl y)), (Permutation (gv2 ++ gv2) (gv2 ++ bl)), (Permutation (gv2 ++ gv2) (bl ++ gv2))
(Permutation (gv2 ++ gv2) []), (Permutation (gv2 ++ bl) gv2), (Permutation (gv2 ++ bl) bl), (Permutation (gv2 ++ bl) (x :: gv2)), (Permutation (gv2 ++ bl) (x :: bl)), (Permutation (gv2 ++ bl) (y :: gv2)), (Permutation (gv2 ++ bl) (y :: bl)), (Permutation (gv2 ++ bl) (selection_sort gv2)), (Permutation (gv2 ++ bl) (selection_sort bl)), (Permutation (gv2 ++ bl) (selsort gv2 x))
(Permutation (gv2 ++ bl) (selsort bl x)), (Permutation (gv2 ++ bl) (selsort bl y)), (Permutation (gv2 ++ bl) (gv2 ++ gv2)), (Permutation (gv2 ++ bl) (bl ++ gv2)), (Permutation (gv2 ++ bl) (bl ++ bl)), (Permutation (gv2 ++ bl) []), (Permutation (bl ++ gv2) gv2), (Permutation (bl ++ gv2) bl), (Permutation (bl ++ gv2) (x :: gv2)), (Permutation (bl ++ gv2) (x :: bl))
(Permutation (bl ++ gv2) (y :: bl)), (Permutation (bl ++ gv2) (selection_sort gv2)), (Permutation (bl ++ gv2) (selection_sort bl)), (Permutation (bl ++ gv2) (selsort gv2 x)), (Permutation (bl ++ gv2) (selsort gv2 y)), (Permutation (bl ++ gv2) (selsort bl x)), (Permutation (bl ++ gv2) (selsort bl y)), (Permutation (bl ++ gv2) (gv2 ++ gv2)), (Permutation (bl ++ gv2) (gv2 ++ bl)), (Permutation (bl ++ gv2) (bl ++ bl))
(Permutation (bl ++ bl) gv2), (Permutation (bl ++ bl) (x :: gv2)), (Permutation (bl ++ bl) (y :: gv2)), (Permutation (bl ++ bl) (selection_sort gv2)), (Permutation (bl ++ bl) (selsort gv2 x)), (Permutation (bl ++ bl) (selsort gv2 y)), (Permutation (bl ++ bl) (gv2 ++ gv2)), (Permutation (bl ++ bl) (gv2 ++ bl)), (Permutation (bl ++ bl) (bl ++ gv2)), (Permutation [] gv2)
(Permutation [] (y :: gv2)), (Permutation [] (selection_sort gv2)), (Permutation [] (selsort gv2 x)), (Permutation [] (selsort gv2 y)), (Permutation [] (gv2 ++ gv2)), (Permutation [] (gv2 ++ bl)), (Permutation [] (bl ++ gv2)), (In x gv2), (In x (x :: gv2)), (In x (y :: gv2))
(In x (selsort gv2 x)), (In x (selsort gv2 y)), (In x (gv2 ++ gv2)), (In x (gv2 ++ bl)), (In x (bl ++ gv2)), (In y gv2), (In y (x :: gv2)), (In y (y :: gv2)), (In y (selection_sort gv2)), (In y (selsort gv2 x))
(In y (gv2 ++ gv2)), (In y (gv2 ++ bl)), (In y (bl ++ gv2)), (In (length gv2) gv2), (In (length gv2) bl), (In (length gv2) (x :: gv2)), (In (length gv2) (x :: bl)), (In (length gv2) (y :: gv2)), (In (length gv2) (y :: bl)), (In (length gv2) (selection_sort gv2))
(In (length gv2) (selsort gv2 x)), (In (length gv2) (selsort gv2 y)), (In (length gv2) (selsort bl x)), (In (length gv2) (selsort bl y)), (In (length gv2) (gv2 ++ gv2)), (In (length gv2) (gv2 ++ bl)), (In (length gv2) (bl ++ gv2)), (In (length gv2) (bl ++ bl)), (In (length bl) gv2), (In (length bl) (x :: gv2))
(In (length bl) (selection_sort gv2)), (In (length bl) (selsort gv2 x)), (In (length bl) (selsort gv2 y)), (In (length bl) (gv2 ++ gv2)), (In (length bl) (gv2 ++ bl)), (In (length bl) (bl ++ gv2)), (x < length gv2), (y < length gv2), (length gv2 < x), (length gv2 < y)
(length bl < length gv2), (x <= length gv2), (y <= length gv2), (length gv2 <= x), (length gv2 <= y), (length gv2 <= length bl), (length bl <= length gv2), (selection_sort gv2 = gv2), (selection_sort gv2 = bl), (selection_sort gv2 = gv2 ++ gv2)
(selection_sort gv2 = bl ++ gv2), (selection_sort gv2 = bl ++ bl), (selection_sort bl = gv2), (selection_sort bl = gv2 ++ gv2), (selection_sort bl = gv2 ++ bl), (selection_sort bl = bl ++ gv2), (selsort gv2 x = gv2), (selsort gv2 x = bl), (selsort gv2 x = selection_sort gv2), (selsort gv2 x = selection_sort bl)
(selsort gv2 x = gv2 ++ bl), (selsort gv2 x = bl ++ gv2), (selsort gv2 x = bl ++ bl), (selsort gv2 y = gv2), (selsort gv2 y = bl), (selsort gv2 y = selection_sort gv2), (selsort gv2 y = selection_sort bl), (selsort gv2 y = gv2 ++ gv2), (selsort gv2 y = gv2 ++ bl), (selsort gv2 y = bl ++ gv2)
(selsort bl x = gv2), (selsort bl x = selection_sort gv2), (selsort bl x = gv2 ++ gv2), (selsort bl x = gv2 ++ bl), (selsort bl x = bl ++ gv2), (selsort bl y = gv2), (selsort bl y = selection_sort gv2), (selsort bl y = gv2 ++ gv2), (selsort bl y = gv2 ++ bl), (selsort bl y = bl ++ gv2)
(gv2 ++ gv2 = bl), (gv2 ++ bl = gv2), (gv2 ++ bl = bl), (bl ++ gv2 = gv2), (bl ++ gv2 = bl), (bl ++ bl = gv2), (length gv2 = x), (length gv2 = y)

Label: 2 (1)
(false = sorted_bool gv1), (true = sorted_bool gv1), (x <=* gv1), (x <=* x :: gv1), (x <=* a :: gv1), (x <=* y :: gv1), (x <=* selection_sort gv1), (x <=* selsort gv1 x), (x <=* selsort gv1 a), (x <=* selsort gv1 y)
(x <=* gv1 ++ al), (x <=* gv1 ++ gv1), (x <=* gv1 ++ bl), (x <=* bl ++ gv1), (a <=* gv1), (a <=* x :: gv1), (a <=* a :: gv1), (a <=* y :: gv1), (a <=* selection_sort gv1), (a <=* selsort gv1 x)
(a <=* selsort gv1 y), (a <=* al ++ gv1), (a <=* gv1 ++ al), (a <=* gv1 ++ gv1), (a <=* gv1 ++ bl), (a <=* bl ++ gv1), (y <=* gv1), (y <=* x :: gv1), (y <=* a :: gv1), (y <=* y :: gv1)
(y <=* selsort gv1 x), (y <=* selsort gv1 a), (y <=* selsort gv1 y), (y <=* al ++ gv1), (y <=* gv1 ++ al), (y <=* gv1 ++ gv1), (y <=* gv1 ++ bl), (y <=* bl ++ gv1), (length al <=* gv1), (length al <=* x :: gv1)
(length al <=* y :: gv1), (length al <=* selection_sort gv1), (length al <=* selsort gv1 x), (length al <=* selsort gv1 a), (length al <=* selsort gv1 y), (length al <=* al ++ gv1), (length al <=* gv1 ++ al), (length al <=* gv1 ++ gv1), (length al <=* gv1 ++ bl), (length al <=* bl ++ gv1)
(length gv1 <=* gv1), (length gv1 <=* bl), (length gv1 <=* x :: al), (length gv1 <=* x :: gv1), (length gv1 <=* x :: bl), (length gv1 <=* a :: al), (length gv1 <=* a :: gv1), (length gv1 <=* a :: bl), (length gv1 <=* y :: al), (length gv1 <=* y :: gv1)
(length gv1 <=* selection_sort al), (length gv1 <=* selection_sort gv1), (length gv1 <=* selection_sort bl), (length gv1 <=* selsort al x), (length gv1 <=* selsort al a), (length gv1 <=* selsort al y), (length gv1 <=* selsort gv1 x), (length gv1 <=* selsort gv1 a), (length gv1 <=* selsort gv1 y), (length gv1 <=* selsort bl x)
(length gv1 <=* selsort bl y), (length gv1 <=* al ++ al), (length gv1 <=* al ++ gv1), (length gv1 <=* al ++ bl), (length gv1 <=* gv1 ++ al), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* gv1 ++ bl), (length gv1 <=* bl ++ al), (length gv1 <=* bl ++ gv1), (length gv1 <=* bl ++ bl)
(length bl <=* gv1), (length bl <=* x :: gv1), (length bl <=* a :: gv1), (length bl <=* y :: gv1), (length bl <=* selection_sort gv1), (length bl <=* selsort gv1 x), (length bl <=* selsort gv1 a), (length bl <=* selsort gv1 y), (length bl <=* al ++ gv1), (length bl <=* gv1 ++ al)
(length bl <=* gv1 ++ bl), (length bl <=* bl ++ gv1), (sorted gv1), (sorted (x :: gv1)), (sorted (a :: gv1)), (sorted (y :: gv1)), (sorted (selection_sort gv1)), (sorted (selsort gv1 x)), (sorted (selsort gv1 a)), (sorted (selsort gv1 y))
(sorted (gv1 ++ al)), (sorted (gv1 ++ gv1)), (sorted (gv1 ++ bl)), (sorted (bl ++ gv1)), (Permutation al gv1), (Permutation al (x :: gv1)), (Permutation al (a :: gv1)), (Permutation al (y :: gv1)), (Permutation al (selection_sort gv1)), (Permutation al (selsort gv1 x))
(Permutation al (selsort gv1 y)), (Permutation al (al ++ gv1)), (Permutation al (gv1 ++ al)), (Permutation al (gv1 ++ gv1)), (Permutation al (gv1 ++ bl)), (Permutation al (bl ++ gv1)), (Permutation gv1 al), (Permutation gv1 bl), (Permutation gv1 (x :: al)), (Permutation gv1 (x :: gv1))
(Permutation gv1 (a :: al)), (Permutation gv1 (a :: gv1)), (Permutation gv1 (a :: bl)), (Permutation gv1 (y :: al)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (y :: bl)), (Permutation gv1 (selection_sort al)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selection_sort bl)), (Permutation gv1 (selsort al x))
(Permutation gv1 (selsort al y)), (Permutation gv1 (selsort gv1 x)), (Permutation gv1 (selsort gv1 a)), (Permutation gv1 (selsort gv1 y)), (Permutation gv1 (selsort bl x)), (Permutation gv1 (selsort bl a)), (Permutation gv1 (selsort bl y)), (Permutation gv1 (al ++ al)), (Permutation gv1 (al ++ gv1)), (Permutation gv1 (al ++ bl))
(Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ bl)), (Permutation gv1 (bl ++ al)), (Permutation gv1 (bl ++ gv1)), (Permutation gv1 (bl ++ bl)), (Permutation gv1 []), (Permutation bl gv1), (Permutation bl (x :: gv1)), (Permutation bl (a :: gv1)), (Permutation bl (y :: gv1))
(Permutation bl (selsort gv1 x)), (Permutation bl (selsort gv1 a)), (Permutation bl (selsort gv1 y)), (Permutation bl (al ++ gv1)), (Permutation bl (gv1 ++ al)), (Permutation bl (gv1 ++ gv1)), (Permutation bl (gv1 ++ bl)), (Permutation bl (bl ++ gv1)), (Permutation (x :: al) gv1), (Permutation (x :: al) (x :: gv1))
(Permutation (x :: al) (y :: gv1)), (Permutation (x :: al) (selection_sort gv1)), (Permutation (x :: al) (selsort gv1 x)), (Permutation (x :: al) (selsort gv1 a)), (Permutation (x :: al) (selsort gv1 y)), (Permutation (x :: al) (al ++ gv1)), (Permutation (x :: al) (gv1 ++ al)), (Permutation (x :: al) (gv1 ++ gv1)), (Permutation (x :: al) (gv1 ++ bl)), (Permutation (x :: al) (bl ++ gv1))
(Permutation (x :: gv1) gv1), (Permutation (x :: gv1) bl), (Permutation (x :: gv1) (x :: al)), (Permutation (x :: gv1) (x :: bl)), (Permutation (x :: gv1) (a :: al)), (Permutation (x :: gv1) (a :: gv1)), (Permutation (x :: gv1) (a :: bl)), (Permutation (x :: gv1) (y :: al)), (Permutation (x :: gv1) (y :: gv1)), (Permutation (x :: gv1) (y :: bl))
(Permutation (x :: gv1) (selection_sort gv1)), (Permutation (x :: gv1) (selection_sort bl)), (Permutation (x :: gv1) (selsort al x)), (Permutation (x :: gv1) (selsort al a)), (Permutation (x :: gv1) (selsort al y)), (Permutation (x :: gv1) (selsort gv1 x)), (Permutation (x :: gv1) (selsort gv1 a)), (Permutation (x :: gv1) (selsort gv1 y)), (Permutation (x :: gv1) (selsort bl x)), (Permutation (x :: gv1) (selsort bl a))
(Permutation (x :: gv1) (al ++ al)), (Permutation (x :: gv1) (al ++ gv1)), (Permutation (x :: gv1) (al ++ bl)), (Permutation (x :: gv1) (gv1 ++ al)), (Permutation (x :: gv1) (gv1 ++ gv1)), (Permutation (x :: gv1) (gv1 ++ bl)), (Permutation (x :: gv1) (bl ++ al)), (Permutation (x :: gv1) (bl ++ gv1)), (Permutation (x :: gv1) (bl ++ bl)), (Permutation (x :: gv1) [])
(Permutation (x :: bl) (x :: gv1)), (Permutation (x :: bl) (a :: gv1)), (Permutation (x :: bl) (y :: gv1)), (Permutation (x :: bl) (selection_sort gv1)), (Permutation (x :: bl) (selsort gv1 x)), (Permutation (x :: bl) (selsort gv1 a)), (Permutation (x :: bl) (selsort gv1 y)), (Permutation (x :: bl) (al ++ gv1)), (Permutation (x :: bl) (gv1 ++ al)), (Permutation (x :: bl) (gv1 ++ gv1))
(Permutation (x :: bl) (bl ++ gv1)), (Permutation (a :: al) gv1), (Permutation (a :: al) (x :: gv1)), (Permutation (a :: al) (a :: gv1)), (Permutation (a :: al) (y :: gv1)), (Permutation (a :: al) (selection_sort gv1)), (Permutation (a :: al) (selsort gv1 x)), (Permutation (a :: al) (selsort gv1 a)), (Permutation (a :: al) (selsort gv1 y)), (Permutation (a :: al) (al ++ gv1))
(Permutation (a :: al) (gv1 ++ gv1)), (Permutation (a :: al) (gv1 ++ bl)), (Permutation (a :: al) (bl ++ gv1)), (Permutation (a :: gv1) al), (Permutation (a :: gv1) gv1), (Permutation (a :: gv1) bl), (Permutation (a :: gv1) (x :: al)), (Permutation (a :: gv1) (x :: gv1)), (Permutation (a :: gv1) (x :: bl)), (Permutation (a :: gv1) (a :: al))
(Permutation (a :: gv1) (y :: al)), (Permutation (a :: gv1) (y :: gv1)), (Permutation (a :: gv1) (y :: bl)), (Permutation (a :: gv1) (selection_sort al)), (Permutation (a :: gv1) (selection_sort gv1)), (Permutation (a :: gv1) (selection_sort bl)), (Permutation (a :: gv1) (selsort al x)), (Permutation (a :: gv1) (selsort al a)), (Permutation (a :: gv1) (selsort al y)), (Permutation (a :: gv1) (selsort gv1 x))
(Permutation (a :: gv1) (selsort gv1 y)), (Permutation (a :: gv1) (selsort bl x)), (Permutation (a :: gv1) (selsort bl a)), (Permutation (a :: gv1) (selsort bl y)), (Permutation (a :: gv1) (al ++ al)), (Permutation (a :: gv1) (al ++ gv1)), (Permutation (a :: gv1) (al ++ bl)), (Permutation (a :: gv1) (gv1 ++ al)), (Permutation (a :: gv1) (gv1 ++ gv1)), (Permutation (a :: gv1) (gv1 ++ bl))
(Permutation (a :: gv1) (bl ++ gv1)), (Permutation (a :: gv1) (bl ++ bl)), (Permutation (a :: gv1) []), (Permutation (a :: bl) gv1), (Permutation (a :: bl) (x :: gv1)), (Permutation (a :: bl) (a :: gv1)), (Permutation (a :: bl) (y :: gv1)), (Permutation (a :: bl) (selection_sort gv1)), (Permutation (a :: bl) (selsort gv1 x)), (Permutation (a :: bl) (selsort gv1 a))
(Permutation (a :: bl) (al ++ gv1)), (Permutation (a :: bl) (gv1 ++ al)), (Permutation (a :: bl) (gv1 ++ gv1)), (Permutation (a :: bl) (gv1 ++ bl)), (Permutation (a :: bl) (bl ++ gv1)), (Permutation (y :: al) gv1), (Permutation (y :: al) (x :: gv1)), (Permutation (y :: al) (a :: gv1)), (Permutation (y :: al) (y :: gv1)), (Permutation (y :: al) (selection_sort gv1))
(Permutation (y :: al) (selsort gv1 a)), (Permutation (y :: al) (selsort gv1 y)), (Permutation (y :: al) (al ++ gv1)), (Permutation (y :: al) (gv1 ++ al)), (Permutation (y :: al) (gv1 ++ gv1)), (Permutation (y :: al) (gv1 ++ bl)), (Permutation (y :: al) (bl ++ gv1)), (Permutation (y :: gv1) al), (Permutation (y :: gv1) gv1), (Permutation (y :: gv1) bl)
(Permutation (y :: gv1) (x :: gv1)), (Permutation (y :: gv1) (x :: bl)), (Permutation (y :: gv1) (a :: al)), (Permutation (y :: gv1) (a :: gv1)), (Permutation (y :: gv1) (a :: bl)), (Permutation (y :: gv1) (y :: al)), (Permutation (y :: gv1) (y :: bl)), (Permutation (y :: gv1) (selection_sort al)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selection_sort bl))
(Permutation (y :: gv1) (selsort al a)), (Permutation (y :: gv1) (selsort al y)), (Permutation (y :: gv1) (selsort gv1 x)), (Permutation (y :: gv1) (selsort gv1 a)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (selsort bl x)), (Permutation (y :: gv1) (selsort bl a)), (Permutation (y :: gv1) (selsort bl y)), (Permutation (y :: gv1) (al ++ al)), (Permutation (y :: gv1) (al ++ gv1))
(Permutation (y :: gv1) (gv1 ++ al)), (Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) (gv1 ++ bl)), (Permutation (y :: gv1) (bl ++ al)), (Permutation (y :: gv1) (bl ++ gv1)), (Permutation (y :: gv1) (bl ++ bl)), (Permutation (y :: gv1) []), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (x :: gv1)), (Permutation (y :: bl) (a :: gv1))
(Permutation (y :: bl) (selection_sort gv1)), (Permutation (y :: bl) (selsort gv1 x)), (Permutation (y :: bl) (selsort gv1 a)), (Permutation (y :: bl) (selsort gv1 y)), (Permutation (y :: bl) (al ++ gv1)), (Permutation (y :: bl) (gv1 ++ al)), (Permutation (y :: bl) (gv1 ++ gv1)), (Permutation (y :: bl) (gv1 ++ bl)), (Permutation (y :: bl) (bl ++ gv1)), (Permutation (selection_sort al) gv1)
(Permutation (selection_sort al) (a :: gv1)), (Permutation (selection_sort al) (y :: gv1)), (Permutation (selection_sort al) (selection_sort gv1)), (Permutation (selection_sort al) (selsort gv1 x)), (Permutation (selection_sort al) (selsort gv1 a)), (Permutation (selection_sort al) (selsort gv1 y)), (Permutation (selection_sort al) (al ++ gv1)), (Permutation (selection_sort al) (gv1 ++ al)), (Permutation (selection_sort al) (gv1 ++ gv1)), (Permutation (selection_sort al) (gv1 ++ bl))
(Permutation (selection_sort gv1) al), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) bl), (Permutation (selection_sort gv1) (x :: al)), (Permutation (selection_sort gv1) (x :: gv1)), (Permutation (selection_sort gv1) (x :: bl)), (Permutation (selection_sort gv1) (a :: al)), (Permutation (selection_sort gv1) (a :: gv1)), (Permutation (selection_sort gv1) (a :: bl)), (Permutation (selection_sort gv1) (y :: al))
(Permutation (selection_sort gv1) (y :: bl)), (Permutation (selection_sort gv1) (selection_sort al)), (Permutation (selection_sort gv1) (selection_sort bl)), (Permutation (selection_sort gv1) (selsort al x)), (Permutation (selection_sort gv1) (selsort al a)), (Permutation (selection_sort gv1) (selsort al y)), (Permutation (selection_sort gv1) (selsort gv1 x)), (Permutation (selection_sort gv1) (selsort gv1 a)), (Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (selsort bl x))
(Permutation (selection_sort gv1) (selsort bl y)), (Permutation (selection_sort gv1) (al ++ al)), (Permutation (selection_sort gv1) (al ++ gv1)), (Permutation (selection_sort gv1) (al ++ bl)), (Permutation (selection_sort gv1) (gv1 ++ al)), (Permutation (selection_sort gv1) (gv1 ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ bl)), (Permutation (selection_sort gv1) (bl ++ al)), (Permutation (selection_sort gv1) (bl ++ gv1)), (Permutation (selection_sort gv1) (bl ++ bl))
(Permutation (selection_sort bl) gv1), (Permutation (selection_sort bl) (x :: gv1)), (Permutation (selection_sort bl) (a :: gv1)), (Permutation (selection_sort bl) (y :: gv1)), (Permutation (selection_sort bl) (selection_sort gv1)), (Permutation (selection_sort bl) (selsort gv1 x)), (Permutation (selection_sort bl) (selsort gv1 a)), (Permutation (selection_sort bl) (selsort gv1 y)), (Permutation (selection_sort bl) (al ++ gv1)), (Permutation (selection_sort bl) (gv1 ++ al))
(Permutation (selection_sort bl) (gv1 ++ bl)), (Permutation (selection_sort bl) (bl ++ gv1)), (Permutation (selsort al x) gv1), (Permutation (selsort al x) (x :: gv1)), (Permutation (selsort al x) (a :: gv1)), (Permutation (selsort al x) (y :: gv1)), (Permutation (selsort al x) (selection_sort gv1)), (Permutation (selsort al x) (selsort gv1 x)), (Permutation (selsort al x) (selsort gv1 a)), (Permutation (selsort al x) (selsort gv1 y))
(Permutation (selsort al x) (gv1 ++ al)), (Permutation (selsort al x) (gv1 ++ gv1)), (Permutation (selsort al x) (gv1 ++ bl)), (Permutation (selsort al x) (bl ++ gv1)), (Permutation (selsort al a) gv1), (Permutation (selsort al a) (x :: gv1)), (Permutation (selsort al a) (a :: gv1)), (Permutation (selsort al a) (y :: gv1)), (Permutation (selsort al a) (selection_sort gv1)), (Permutation (selsort al a) (selsort gv1 x))
(Permutation (selsort al a) (selsort gv1 y)), (Permutation (selsort al a) (al ++ gv1)), (Permutation (selsort al a) (gv1 ++ al)), (Permutation (selsort al a) (gv1 ++ gv1)), (Permutation (selsort al a) (gv1 ++ bl)), (Permutation (selsort al a) (bl ++ gv1)), (Permutation (selsort al y) gv1), (Permutation (selsort al y) (x :: gv1)), (Permutation (selsort al y) (a :: gv1)), (Permutation (selsort al y) (y :: gv1))
(Permutation (selsort al y) (selsort gv1 x)), (Permutation (selsort al y) (selsort gv1 a)), (Permutation (selsort al y) (selsort gv1 y)), (Permutation (selsort al y) (al ++ gv1)), (Permutation (selsort al y) (gv1 ++ al)), (Permutation (selsort al y) (gv1 ++ gv1)), (Permutation (selsort al y) (gv1 ++ bl)), (Permutation (selsort al y) (bl ++ gv1)), (Permutation (selsort gv1 x) al), (Permutation (selsort gv1 x) gv1)
(Permutation (selsort gv1 x) (x :: al)), (Permutation (selsort gv1 x) (x :: gv1)), (Permutation (selsort gv1 x) (x :: bl)), (Permutation (selsort gv1 x) (a :: al)), (Permutation (selsort gv1 x) (a :: gv1)), (Permutation (selsort gv1 x) (a :: bl)), (Permutation (selsort gv1 x) (y :: al)), (Permutation (selsort gv1 x) (y :: gv1)), (Permutation (selsort gv1 x) (y :: bl)), (Permutation (selsort gv1 x) (selection_sort al))
(Permutation (selsort gv1 x) (selection_sort bl)), (Permutation (selsort gv1 x) (selsort al x)), (Permutation (selsort gv1 x) (selsort al a)), (Permutation (selsort gv1 x) (selsort al y)), (Permutation (selsort gv1 x) (selsort gv1 a)), (Permutation (selsort gv1 x) (selsort gv1 y)), (Permutation (selsort gv1 x) (selsort bl x)), (Permutation (selsort gv1 x) (selsort bl a)), (Permutation (selsort gv1 x) (selsort bl y)), (Permutation (selsort gv1 x) (al ++ al))
(Permutation (selsort gv1 x) (al ++ bl)), (Permutation (selsort gv1 x) (gv1 ++ al)), (Permutation (selsort gv1 x) (gv1 ++ gv1)), (Permutation (selsort gv1 x) (gv1 ++ bl)), (Permutation (selsort gv1 x) (bl ++ al)), (Permutation (selsort gv1 x) (bl ++ gv1)), (Permutation (selsort gv1 x) (bl ++ bl)), (Permutation (selsort gv1 x) []), (Permutation (selsort gv1 a) al), (Permutation (selsort gv1 a) gv1)
(Permutation (selsort gv1 a) (x :: al)), (Permutation (selsort gv1 a) (x :: gv1)), (Permutation (selsort gv1 a) (x :: bl)), (Permutation (selsort gv1 a) (a :: al)), (Permutation (selsort gv1 a) (a :: gv1)), (Permutation (selsort gv1 a) (a :: bl)), (Permutation (selsort gv1 a) (y :: al)), (Permutation (selsort gv1 a) (y :: gv1)), (Permutation (selsort gv1 a) (y :: bl)), (Permutation (selsort gv1 a) (selection_sort al))
(Permutation (selsort gv1 a) (selection_sort bl)), (Permutation (selsort gv1 a) (selsort al x)), (Permutation (selsort gv1 a) (selsort al a)), (Permutation (selsort gv1 a) (selsort al y)), (Permutation (selsort gv1 a) (selsort gv1 x)), (Permutation (selsort gv1 a) (selsort gv1 y)), (Permutation (selsort gv1 a) (selsort bl x)), (Permutation (selsort gv1 a) (selsort bl a)), (Permutation (selsort gv1 a) (selsort bl y)), (Permutation (selsort gv1 a) (al ++ al))
(Permutation (selsort gv1 a) (al ++ bl)), (Permutation (selsort gv1 a) (gv1 ++ al)), (Permutation (selsort gv1 a) (gv1 ++ gv1)), (Permutation (selsort gv1 a) (gv1 ++ bl)), (Permutation (selsort gv1 a) (bl ++ al)), (Permutation (selsort gv1 a) (bl ++ gv1)), (Permutation (selsort gv1 a) (bl ++ bl)), (Permutation (selsort gv1 a) []), (Permutation (selsort gv1 y) al), (Permutation (selsort gv1 y) gv1)
(Permutation (selsort gv1 y) (x :: al)), (Permutation (selsort gv1 y) (x :: gv1)), (Permutation (selsort gv1 y) (x :: bl)), (Permutation (selsort gv1 y) (a :: al)), (Permutation (selsort gv1 y) (a :: gv1)), (Permutation (selsort gv1 y) (a :: bl)), (Permutation (selsort gv1 y) (y :: al)), (Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (y :: bl)), (Permutation (selsort gv1 y) (selection_sort al))
(Permutation (selsort gv1 y) (selection_sort bl)), (Permutation (selsort gv1 y) (selsort al x)), (Permutation (selsort gv1 y) (selsort al a)), (Permutation (selsort gv1 y) (selsort al y)), (Permutation (selsort gv1 y) (selsort gv1 x)), (Permutation (selsort gv1 y) (selsort gv1 a)), (Permutation (selsort gv1 y) (selsort bl x)), (Permutation (selsort gv1 y) (selsort bl a)), (Permutation (selsort gv1 y) (selsort bl y)), (Permutation (selsort gv1 y) (al ++ al))
(Permutation (selsort gv1 y) (al ++ bl)), (Permutation (selsort gv1 y) (gv1 ++ al)), (Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ bl)), (Permutation (selsort gv1 y) (bl ++ al)), (Permutation (selsort gv1 y) (bl ++ gv1)), (Permutation (selsort gv1 y) (bl ++ bl)), (Permutation (selsort gv1 y) []), (Permutation (selsort bl x) gv1), (Permutation (selsort bl x) (x :: gv1))
(Permutation (selsort bl x) (y :: gv1)), (Permutation (selsort bl x) (selection_sort gv1)), (Permutation (selsort bl x) (selsort gv1 x)), (Permutation (selsort bl x) (selsort gv1 a)), (Permutation (selsort bl x) (selsort gv1 y)), (Permutation (selsort bl x) (al ++ gv1)), (Permutation (selsort bl x) (gv1 ++ al)), (Permutation (selsort bl x) (gv1 ++ gv1)), (Permutation (selsort bl x) (gv1 ++ bl)), (Permutation (selsort bl x) (bl ++ gv1))
(Permutation (selsort bl a) (x :: gv1)), (Permutation (selsort bl a) (a :: gv1)), (Permutation (selsort bl a) (y :: gv1)), (Permutation (selsort bl a) (selection_sort gv1)), (Permutation (selsort bl a) (selsort gv1 x)), (Permutation (selsort bl a) (selsort gv1 a)), (Permutation (selsort bl a) (selsort gv1 y)), (Permutation (selsort bl a) (al ++ gv1)), (Permutation (selsort bl a) (gv1 ++ al)), (Permutation (selsort bl a) (gv1 ++ gv1))
(Permutation (selsort bl a) (bl ++ gv1)), (Permutation (selsort bl y) gv1), (Permutation (selsort bl y) (x :: gv1)), (Permutation (selsort bl y) (a :: gv1)), (Permutation (selsort bl y) (y :: gv1)), (Permutation (selsort bl y) (selection_sort gv1)), (Permutation (selsort bl y) (selsort gv1 x)), (Permutation (selsort bl y) (selsort gv1 a)), (Permutation (selsort bl y) (selsort gv1 y)), (Permutation (selsort bl y) (al ++ gv1))
(Permutation (selsort bl y) (gv1 ++ gv1)), (Permutation (selsort bl y) (gv1 ++ bl)), (Permutation (selsort bl y) (bl ++ gv1)), (Permutation (al ++ al) gv1), (Permutation (al ++ al) (x :: gv1)), (Permutation (al ++ al) (a :: gv1)), (Permutation (al ++ al) (y :: gv1)), (Permutation (al ++ al) (selection_sort gv1)), (Permutation (al ++ al) (selsort gv1 x)), (Permutation (al ++ al) (selsort gv1 a))
(Permutation (al ++ al) (al ++ gv1)), (Permutation (al ++ al) (gv1 ++ al)), (Permutation (al ++ al) (gv1 ++ gv1)), (Permutation (al ++ al) (gv1 ++ bl)), (Permutation (al ++ al) (bl ++ gv1)), (Permutation (al ++ gv1) al), (Permutation (al ++ gv1) gv1), (Permutation (al ++ gv1) bl), (Permutation (al ++ gv1) (x :: al)), (Permutation (al ++ gv1) (x :: gv1))
(Permutation (al ++ gv1) (a :: al)), (Permutation (al ++ gv1) (a :: gv1)), (Permutation (al ++ gv1) (a :: bl)), (Permutation (al ++ gv1) (y :: al)), (Permutation (al ++ gv1) (y :: gv1)), (Permutation (al ++ gv1) (y :: bl)), (Permutation (al ++ gv1) (selection_sort al)), (Permutation (al ++ gv1) (selection_sort gv1)), (Permutation (al ++ gv1) (selection_sort bl)), (Permutation (al ++ gv1) (selsort al x))
(Permutation (al ++ gv1) (selsort al y)), (Permutation (al ++ gv1) (selsort gv1 x)), (Permutation (al ++ gv1) (selsort gv1 a)), (Permutation (al ++ gv1) (selsort gv1 y)), (Permutation (al ++ gv1) (selsort bl x)), (Permutation (al ++ gv1) (selsort bl a)), (Permutation (al ++ gv1) (selsort bl y)), (Permutation (al ++ gv1) (al ++ al)), (Permutation (al ++ gv1) (al ++ bl)), (Permutation (al ++ gv1) (gv1 ++ al))
(Permutation (al ++ gv1) (gv1 ++ bl)), (Permutation (al ++ gv1) (bl ++ al)), (Permutation (al ++ gv1) (bl ++ gv1)), (Permutation (al ++ gv1) (bl ++ bl)), (Permutation (al ++ gv1) []), (Permutation (al ++ bl) gv1), (Permutation (al ++ bl) (x :: gv1)), (Permutation (al ++ bl) (a :: gv1)), (Permutation (al ++ bl) (y :: gv1)), (Permutation (al ++ bl) (selection_sort gv1))
(Permutation (al ++ bl) (selsort gv1 a)), (Permutation (al ++ bl) (selsort gv1 y)), (Permutation (al ++ bl) (al ++ gv1)), (Permutation (al ++ bl) (gv1 ++ al)), (Permutation (al ++ bl) (gv1 ++ gv1)), (Permutation (al ++ bl) (gv1 ++ bl)), (Permutation (al ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ al) al), (Permutation (gv1 ++ al) gv1), (Permutation (gv1 ++ al) bl)
(Permutation (gv1 ++ al) (x :: gv1)), (Permutation (gv1 ++ al) (x :: bl)), (Permutation (gv1 ++ al) (a :: al)), (Permutation (gv1 ++ al) (a :: gv1)), (Permutation (gv1 ++ al) (a :: bl)), (Permutation (gv1 ++ al) (y :: al)), (Permutation (gv1 ++ al) (y :: gv1)), (Permutation (gv1 ++ al) (y :: bl)), (Permutation (gv1 ++ al) (selection_sort al)), (Permutation (gv1 ++ al) (selection_sort gv1))
(Permutation (gv1 ++ al) (selsort al x)), (Permutation (gv1 ++ al) (selsort al a)), (Permutation (gv1 ++ al) (selsort al y)), (Permutation (gv1 ++ al) (selsort gv1 x)), (Permutation (gv1 ++ al) (selsort gv1 a)), (Permutation (gv1 ++ al) (selsort gv1 y)), (Permutation (gv1 ++ al) (selsort bl x)), (Permutation (gv1 ++ al) (selsort bl a)), (Permutation (gv1 ++ al) (selsort bl y)), (Permutation (gv1 ++ al) (al ++ al))
(Permutation (gv1 ++ al) (al ++ bl)), (Permutation (gv1 ++ al) (gv1 ++ gv1)), (Permutation (gv1 ++ al) (gv1 ++ bl)), (Permutation (gv1 ++ al) (bl ++ al)), (Permutation (gv1 ++ al) (bl ++ gv1)), (Permutation (gv1 ++ al) (bl ++ bl)), (Permutation (gv1 ++ al) []), (Permutation (gv1 ++ gv1) al), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) bl)
(Permutation (gv1 ++ gv1) (x :: gv1)), (Permutation (gv1 ++ gv1) (x :: bl)), (Permutation (gv1 ++ gv1) (a :: al)), (Permutation (gv1 ++ gv1) (a :: gv1)), (Permutation (gv1 ++ gv1) (a :: bl)), (Permutation (gv1 ++ gv1) (y :: al)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (y :: bl)), (Permutation (gv1 ++ gv1) (selection_sort al)), (Permutation (gv1 ++ gv1) (selection_sort gv1))
(Permutation (gv1 ++ gv1) (selsort al x)), (Permutation (gv1 ++ gv1) (selsort al a)), (Permutation (gv1 ++ gv1) (selsort al y)), (Permutation (gv1 ++ gv1) (selsort gv1 x)), (Permutation (gv1 ++ gv1) (selsort gv1 a)), (Permutation (gv1 ++ gv1) (selsort gv1 y)), (Permutation (gv1 ++ gv1) (selsort bl x)), (Permutation (gv1 ++ gv1) (selsort bl a)), (Permutation (gv1 ++ gv1) (selsort bl y)), (Permutation (gv1 ++ gv1) (al ++ al))
(Permutation (gv1 ++ gv1) (al ++ bl)), (Permutation (gv1 ++ gv1) (gv1 ++ al)), (Permutation (gv1 ++ gv1) (gv1 ++ bl)), (Permutation (gv1 ++ gv1) (bl ++ al)), (Permutation (gv1 ++ gv1) (bl ++ gv1)), (Permutation (gv1 ++ gv1) (bl ++ bl)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ bl) al), (Permutation (gv1 ++ bl) gv1), (Permutation (gv1 ++ bl) bl)
(Permutation (gv1 ++ bl) (x :: gv1)), (Permutation (gv1 ++ bl) (x :: bl)), (Permutation (gv1 ++ bl) (a :: al)), (Permutation (gv1 ++ bl) (a :: gv1)), (Permutation (gv1 ++ bl) (a :: bl)), (Permutation (gv1 ++ bl) (y :: al)), (Permutation (gv1 ++ bl) (y :: gv1)), (Permutation (gv1 ++ bl) (y :: bl)), (Permutation (gv1 ++ bl) (selection_sort al)), (Permutation (gv1 ++ bl) (selection_sort gv1))
(Permutation (gv1 ++ bl) (selsort al x)), (Permutation (gv1 ++ bl) (selsort al a)), (Permutation (gv1 ++ bl) (selsort al y)), (Permutation (gv1 ++ bl) (selsort gv1 x)), (Permutation (gv1 ++ bl) (selsort gv1 a)), (Permutation (gv1 ++ bl) (selsort gv1 y)), (Permutation (gv1 ++ bl) (selsort bl x)), (Permutation (gv1 ++ bl) (selsort bl a)), (Permutation (gv1 ++ bl) (selsort bl y)), (Permutation (gv1 ++ bl) (al ++ al))
(Permutation (gv1 ++ bl) (al ++ bl)), (Permutation (gv1 ++ bl) (gv1 ++ al)), (Permutation (gv1 ++ bl) (gv1 ++ gv1)), (Permutation (gv1 ++ bl) (bl ++ al)), (Permutation (gv1 ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ bl) (bl ++ bl)), (Permutation (gv1 ++ bl) []), (Permutation (bl ++ al) gv1), (Permutation (bl ++ al) (x :: gv1)), (Permutation (bl ++ al) (a :: gv1))
(Permutation (bl ++ al) (selection_sort gv1)), (Permutation (bl ++ al) (selsort gv1 x)), (Permutation (bl ++ al) (selsort gv1 a)), (Permutation (bl ++ al) (selsort gv1 y)), (Permutation (bl ++ al) (al ++ gv1)), (Permutation (bl ++ al) (gv1 ++ al)), (Permutation (bl ++ al) (gv1 ++ gv1)), (Permutation (bl ++ al) (gv1 ++ bl)), (Permutation (bl ++ al) (bl ++ gv1)), (Permutation (bl ++ gv1) al)
(Permutation (bl ++ gv1) bl), (Permutation (bl ++ gv1) (x :: al)), (Permutation (bl ++ gv1) (x :: gv1)), (Permutation (bl ++ gv1) (x :: bl)), (Permutation (bl ++ gv1) (a :: al)), (Permutation (bl ++ gv1) (a :: gv1)), (Permutation (bl ++ gv1) (a :: bl)), (Permutation (bl ++ gv1) (y :: al)), (Permutation (bl ++ gv1) (y :: gv1)), (Permutation (bl ++ gv1) (y :: bl))
(Permutation (bl ++ gv1) (selection_sort gv1)), (Permutation (bl ++ gv1) (selection_sort bl)), (Permutation (bl ++ gv1) (selsort al x)), (Permutation (bl ++ gv1) (selsort al a)), (Permutation (bl ++ gv1) (selsort al y)), (Permutation (bl ++ gv1) (selsort gv1 x)), (Permutation (bl ++ gv1) (selsort gv1 a)), (Permutation (bl ++ gv1) (selsort gv1 y)), (Permutation (bl ++ gv1) (selsort bl x)), (Permutation (bl ++ gv1) (selsort bl a))
(Permutation (bl ++ gv1) (al ++ al)), (Permutation (bl ++ gv1) (al ++ gv1)), (Permutation (bl ++ gv1) (al ++ bl)), (Permutation (bl ++ gv1) (gv1 ++ al)), (Permutation (bl ++ gv1) (gv1 ++ gv1)), (Permutation (bl ++ gv1) (gv1 ++ bl)), (Permutation (bl ++ gv1) (bl ++ al)), (Permutation (bl ++ gv1) (bl ++ bl)), (Permutation (bl ++ gv1) []), (Permutation (bl ++ bl) gv1)
(Permutation (bl ++ bl) (a :: gv1)), (Permutation (bl ++ bl) (y :: gv1)), (Permutation (bl ++ bl) (selection_sort gv1)), (Permutation (bl ++ bl) (selsort gv1 x)), (Permutation (bl ++ bl) (selsort gv1 a)), (Permutation (bl ++ bl) (selsort gv1 y)), (Permutation (bl ++ bl) (al ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ al)), (Permutation (bl ++ bl) (gv1 ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ bl))
(Permutation [] gv1), (Permutation [] (x :: gv1)), (Permutation [] (a :: gv1)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort gv1)), (Permutation [] (selsort gv1 x)), (Permutation [] (selsort gv1 a)), (Permutation [] (selsort gv1 y)), (Permutation [] (al ++ gv1)), (Permutation [] (gv1 ++ al))
(Permutation [] (gv1 ++ bl)), (Permutation [] (bl ++ gv1)), (In x gv1), (In x (x :: gv1)), (In x (a :: gv1)), (In x (y :: gv1)), (In x (selection_sort gv1)), (In x (selsort gv1 x)), (In x (selsort gv1 a)), (In x (selsort gv1 y))
(In x (gv1 ++ al)), (In x (gv1 ++ gv1)), (In x (gv1 ++ bl)), (In x (bl ++ gv1)), (In a gv1), (In a (x :: gv1)), (In a (a :: gv1)), (In a (y :: gv1)), (In a (selection_sort gv1)), (In a (selsort gv1 x))
(In a (selsort gv1 y)), (In a (al ++ gv1)), (In a (gv1 ++ al)), (In a (gv1 ++ gv1)), (In a (gv1 ++ bl)), (In a (bl ++ gv1)), (In y gv1), (In y (x :: gv1)), (In y (a :: gv1)), (In y (y :: gv1))
(In y (selsort gv1 x)), (In y (selsort gv1 a)), (In y (selsort gv1 y)), (In y (al ++ gv1)), (In y (gv1 ++ al)), (In y (gv1 ++ gv1)), (In y (gv1 ++ bl)), (In y (bl ++ gv1)), (In (length al) gv1), (In (length al) (x :: gv1))
(In (length al) (y :: gv1)), (In (length al) (selection_sort gv1)), (In (length al) (selsort gv1 x)), (In (length al) (selsort gv1 a)), (In (length al) (selsort gv1 y)), (In (length al) (al ++ gv1)), (In (length al) (gv1 ++ al)), (In (length al) (gv1 ++ gv1)), (In (length al) (gv1 ++ bl)), (In (length al) (bl ++ gv1))
(In (length gv1) gv1), (In (length gv1) bl), (In (length gv1) (x :: al)), (In (length gv1) (x :: gv1)), (In (length gv1) (x :: bl)), (In (length gv1) (a :: al)), (In (length gv1) (a :: gv1)), (In (length gv1) (a :: bl)), (In (length gv1) (y :: al)), (In (length gv1) (y :: gv1))
(In (length gv1) (selection_sort al)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selection_sort bl)), (In (length gv1) (selsort al x)), (In (length gv1) (selsort al a)), (In (length gv1) (selsort al y)), (In (length gv1) (selsort gv1 x)), (In (length gv1) (selsort gv1 a)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (selsort bl x))
(In (length gv1) (selsort bl y)), (In (length gv1) (al ++ al)), (In (length gv1) (al ++ gv1)), (In (length gv1) (al ++ bl)), (In (length gv1) (gv1 ++ al)), (In (length gv1) (gv1 ++ gv1)), (In (length gv1) (gv1 ++ bl)), (In (length gv1) (bl ++ al)), (In (length gv1) (bl ++ gv1)), (In (length gv1) (bl ++ bl))
(In (length bl) (x :: gv1)), (In (length bl) (a :: gv1)), (In (length bl) (y :: gv1)), (In (length bl) (selection_sort gv1)), (In (length bl) (selsort gv1 x)), (In (length bl) (selsort gv1 a)), (In (length bl) (selsort gv1 y)), (In (length bl) (al ++ gv1)), (In (length bl) (gv1 ++ al)), (In (length bl) (gv1 ++ gv1))
(In (length bl) (bl ++ gv1)), (x < length gv1), (a < length gv1), (y < length gv1), (length al < length gv1), (length gv1 < x), (length gv1 < a), (length gv1 < y), (length gv1 < length al), (length gv1 < length bl)
(x <= length gv1), (a <= length gv1), (y <= length gv1), (length al <= length gv1), (length gv1 <= x), (length gv1 <= a), (length gv1 <= y), (length gv1 <= length al), (length gv1 <= length bl), (length bl <= length gv1)
(selection_sort al = al ++ gv1), (selection_sort al = gv1 ++ al), (selection_sort al = gv1 ++ gv1), (selection_sort al = gv1 ++ bl), (selection_sort al = bl ++ gv1), (selection_sort gv1 = al), (selection_sort gv1 = gv1), (selection_sort gv1 = bl), (selection_sort gv1 = al ++ al), (selection_sort gv1 = al ++ gv1)
(selection_sort gv1 = gv1 ++ al), (selection_sort gv1 = gv1 ++ gv1), (selection_sort gv1 = gv1 ++ bl), (selection_sort gv1 = bl ++ al), (selection_sort gv1 = bl ++ gv1), (selection_sort gv1 = bl ++ bl), (selection_sort bl = gv1), (selection_sort bl = al ++ gv1), (selection_sort bl = gv1 ++ al), (selection_sort bl = gv1 ++ gv1)
(selection_sort bl = bl ++ gv1), (selsort al x = gv1), (selsort al x = selection_sort gv1), (selsort al x = al ++ gv1), (selsort al x = gv1 ++ al), (selsort al x = gv1 ++ gv1), (selsort al x = gv1 ++ bl), (selsort al x = bl ++ gv1), (selsort al a = gv1), (selsort al a = selection_sort gv1)
(selsort al a = gv1 ++ al), (selsort al a = gv1 ++ gv1), (selsort al a = gv1 ++ bl), (selsort al a = bl ++ gv1), (selsort al y = gv1), (selsort al y = selection_sort gv1), (selsort al y = al ++ gv1), (selsort al y = gv1 ++ al), (selsort al y = gv1 ++ gv1), (selsort al y = gv1 ++ bl)
(selsort gv1 x = al), (selsort gv1 x = gv1), (selsort gv1 x = bl), (selsort gv1 x = selection_sort al), (selsort gv1 x = selection_sort gv1), (selsort gv1 x = selection_sort bl), (selsort gv1 x = al ++ al), (selsort gv1 x = al ++ gv1), (selsort gv1 x = al ++ bl), (selsort gv1 x = gv1 ++ al)
(selsort gv1 x = gv1 ++ bl), (selsort gv1 x = bl ++ al), (selsort gv1 x = bl ++ gv1), (selsort gv1 x = bl ++ bl), (selsort gv1 a = al), (selsort gv1 a = gv1), (selsort gv1 a = bl), (selsort gv1 a = selection_sort al), (selsort gv1 a = selection_sort gv1), (selsort gv1 a = selection_sort bl)
(selsort gv1 a = al ++ gv1), (selsort gv1 a = al ++ bl), (selsort gv1 a = gv1 ++ al), (selsort gv1 a = gv1 ++ gv1), (selsort gv1 a = gv1 ++ bl), (selsort gv1 a = bl ++ al), (selsort gv1 a = bl ++ gv1), (selsort gv1 a = bl ++ bl), (selsort gv1 y = al), (selsort gv1 y = gv1)
(selsort gv1 y = selection_sort al), (selsort gv1 y = selection_sort gv1), (selsort gv1 y = selection_sort bl), (selsort gv1 y = al ++ al), (selsort gv1 y = al ++ gv1), (selsort gv1 y = al ++ bl), (selsort gv1 y = gv1 ++ al), (selsort gv1 y = gv1 ++ gv1), (selsort gv1 y = gv1 ++ bl), (selsort gv1 y = bl ++ al)
(selsort gv1 y = bl ++ bl), (selsort bl x = gv1), (selsort bl x = selection_sort gv1), (selsort bl x = al ++ gv1), (selsort bl x = gv1 ++ al), (selsort bl x = gv1 ++ gv1), (selsort bl x = gv1 ++ bl), (selsort bl x = bl ++ gv1), (selsort bl a = gv1), (selsort bl a = selection_sort gv1)
(selsort bl a = gv1 ++ al), (selsort bl a = gv1 ++ gv1), (selsort bl a = gv1 ++ bl), (selsort bl a = bl ++ gv1), (selsort bl y = gv1), (selsort bl y = selection_sort gv1), (selsort bl y = al ++ gv1), (selsort bl y = gv1 ++ al), (selsort bl y = gv1 ++ gv1), (selsort bl y = gv1 ++ bl)
(al ++ al = gv1), (al ++ gv1 = al), (al ++ gv1 = gv1), (al ++ gv1 = bl), (al ++ bl = gv1), (gv1 ++ al = al), (gv1 ++ al = gv1), (gv1 ++ al = bl), (gv1 ++ gv1 = al), (gv1 ++ gv1 = gv1)
(gv1 ++ bl = al), (gv1 ++ bl = gv1), (gv1 ++ bl = bl), (bl ++ al = gv1), (bl ++ gv1 = al), (bl ++ gv1 = gv1), (bl ++ gv1 = bl), (bl ++ bl = gv1), (length gv1 = x), (length gv1 = a)

Label: 2 (2)
(false = sorted_bool gv1), (true = sorted_bool gv1), (x <=* gv1), (x <=* x :: gv1), (x <=* a :: gv1), (x <=* y :: gv1), (x <=* selection_sort gv1), (x <=* selsort gv1 x), (x <=* selsort gv1 a), (x <=* selsort gv1 y)
(x <=* gv1 ++ al), (x <=* gv1 ++ gv1), (x <=* gv1 ++ bl), (x <=* bl ++ gv1), (a <=* gv1), (a <=* x :: gv1), (a <=* a :: gv1), (a <=* y :: gv1), (a <=* selection_sort gv1), (a <=* selsort gv1 x)
(a <=* selsort gv1 y), (a <=* al ++ gv1), (a <=* gv1 ++ al), (a <=* gv1 ++ gv1), (a <=* gv1 ++ bl), (a <=* bl ++ gv1), (y <=* gv1), (y <=* x :: gv1), (y <=* a :: gv1), (y <=* y :: gv1)
(y <=* selsort gv1 x), (y <=* selsort gv1 a), (y <=* selsort gv1 y), (y <=* al ++ gv1), (y <=* gv1 ++ al), (y <=* gv1 ++ gv1), (y <=* gv1 ++ bl), (y <=* bl ++ gv1), (length al <=* gv1), (length al <=* x :: gv1)
(length al <=* y :: gv1), (length al <=* selection_sort gv1), (length al <=* selsort gv1 x), (length al <=* selsort gv1 a), (length al <=* selsort gv1 y), (length al <=* al ++ gv1), (length al <=* gv1 ++ al), (length al <=* gv1 ++ gv1), (length al <=* gv1 ++ bl), (length al <=* bl ++ gv1)
(length gv1 <=* gv1), (length gv1 <=* bl), (length gv1 <=* x :: al), (length gv1 <=* x :: gv1), (length gv1 <=* x :: bl), (length gv1 <=* a :: al), (length gv1 <=* a :: gv1), (length gv1 <=* a :: bl), (length gv1 <=* y :: al), (length gv1 <=* y :: gv1)
(length gv1 <=* selection_sort al), (length gv1 <=* selection_sort gv1), (length gv1 <=* selection_sort bl), (length gv1 <=* selsort al x), (length gv1 <=* selsort al a), (length gv1 <=* selsort al y), (length gv1 <=* selsort gv1 x), (length gv1 <=* selsort gv1 a), (length gv1 <=* selsort gv1 y), (length gv1 <=* selsort bl x)
(length gv1 <=* selsort bl y), (length gv1 <=* al ++ al), (length gv1 <=* al ++ gv1), (length gv1 <=* al ++ bl), (length gv1 <=* gv1 ++ al), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* gv1 ++ bl), (length gv1 <=* bl ++ al), (length gv1 <=* bl ++ gv1), (length gv1 <=* bl ++ bl)
(length bl <=* gv1), (length bl <=* x :: gv1), (length bl <=* a :: gv1), (length bl <=* y :: gv1), (length bl <=* selection_sort gv1), (length bl <=* selsort gv1 x), (length bl <=* selsort gv1 a), (length bl <=* selsort gv1 y), (length bl <=* al ++ gv1), (length bl <=* gv1 ++ al)
(length bl <=* gv1 ++ bl), (length bl <=* bl ++ gv1), (sorted gv1), (sorted (x :: gv1)), (sorted (a :: gv1)), (sorted (y :: gv1)), (sorted (selection_sort gv1)), (sorted (selsort gv1 x)), (sorted (selsort gv1 a)), (sorted (selsort gv1 y))
(sorted (gv1 ++ al)), (sorted (gv1 ++ gv1)), (sorted (gv1 ++ bl)), (sorted (bl ++ gv1)), (Permutation al gv1), (Permutation al (x :: gv1)), (Permutation al (a :: gv1)), (Permutation al (y :: gv1)), (Permutation al (selection_sort gv1)), (Permutation al (selsort gv1 x))
(Permutation al (selsort gv1 y)), (Permutation al (al ++ gv1)), (Permutation al (gv1 ++ al)), (Permutation al (gv1 ++ gv1)), (Permutation al (gv1 ++ bl)), (Permutation al (bl ++ gv1)), (Permutation gv1 al), (Permutation gv1 bl), (Permutation gv1 (x :: al)), (Permutation gv1 (x :: gv1))
(Permutation gv1 (a :: al)), (Permutation gv1 (a :: gv1)), (Permutation gv1 (a :: bl)), (Permutation gv1 (y :: al)), (Permutation gv1 (y :: gv1)), (Permutation gv1 (y :: bl)), (Permutation gv1 (selection_sort al)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selection_sort bl)), (Permutation gv1 (selsort al x))
(Permutation gv1 (selsort al y)), (Permutation gv1 (selsort gv1 x)), (Permutation gv1 (selsort gv1 a)), (Permutation gv1 (selsort gv1 y)), (Permutation gv1 (selsort bl x)), (Permutation gv1 (selsort bl a)), (Permutation gv1 (selsort bl y)), (Permutation gv1 (al ++ al)), (Permutation gv1 (al ++ gv1)), (Permutation gv1 (al ++ bl))
(Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ bl)), (Permutation gv1 (bl ++ al)), (Permutation gv1 (bl ++ gv1)), (Permutation gv1 (bl ++ bl)), (Permutation gv1 []), (Permutation bl gv1), (Permutation bl (x :: gv1)), (Permutation bl (a :: gv1)), (Permutation bl (y :: gv1))
(Permutation bl (selsort gv1 x)), (Permutation bl (selsort gv1 a)), (Permutation bl (selsort gv1 y)), (Permutation bl (al ++ gv1)), (Permutation bl (gv1 ++ al)), (Permutation bl (gv1 ++ gv1)), (Permutation bl (gv1 ++ bl)), (Permutation bl (bl ++ gv1)), (Permutation (x :: al) gv1), (Permutation (x :: al) (x :: gv1))
(Permutation (x :: al) (y :: gv1)), (Permutation (x :: al) (selection_sort gv1)), (Permutation (x :: al) (selsort gv1 x)), (Permutation (x :: al) (selsort gv1 a)), (Permutation (x :: al) (selsort gv1 y)), (Permutation (x :: al) (al ++ gv1)), (Permutation (x :: al) (gv1 ++ al)), (Permutation (x :: al) (gv1 ++ gv1)), (Permutation (x :: al) (gv1 ++ bl)), (Permutation (x :: al) (bl ++ gv1))
(Permutation (x :: gv1) gv1), (Permutation (x :: gv1) bl), (Permutation (x :: gv1) (x :: al)), (Permutation (x :: gv1) (x :: bl)), (Permutation (x :: gv1) (a :: al)), (Permutation (x :: gv1) (a :: gv1)), (Permutation (x :: gv1) (a :: bl)), (Permutation (x :: gv1) (y :: al)), (Permutation (x :: gv1) (y :: gv1)), (Permutation (x :: gv1) (y :: bl))
(Permutation (x :: gv1) (selection_sort gv1)), (Permutation (x :: gv1) (selection_sort bl)), (Permutation (x :: gv1) (selsort al x)), (Permutation (x :: gv1) (selsort al a)), (Permutation (x :: gv1) (selsort al y)), (Permutation (x :: gv1) (selsort gv1 x)), (Permutation (x :: gv1) (selsort gv1 a)), (Permutation (x :: gv1) (selsort gv1 y)), (Permutation (x :: gv1) (selsort bl x)), (Permutation (x :: gv1) (selsort bl a))
(Permutation (x :: gv1) (al ++ al)), (Permutation (x :: gv1) (al ++ gv1)), (Permutation (x :: gv1) (al ++ bl)), (Permutation (x :: gv1) (gv1 ++ al)), (Permutation (x :: gv1) (gv1 ++ gv1)), (Permutation (x :: gv1) (gv1 ++ bl)), (Permutation (x :: gv1) (bl ++ al)), (Permutation (x :: gv1) (bl ++ gv1)), (Permutation (x :: gv1) (bl ++ bl)), (Permutation (x :: gv1) [])
(Permutation (x :: bl) (x :: gv1)), (Permutation (x :: bl) (a :: gv1)), (Permutation (x :: bl) (y :: gv1)), (Permutation (x :: bl) (selection_sort gv1)), (Permutation (x :: bl) (selsort gv1 x)), (Permutation (x :: bl) (selsort gv1 a)), (Permutation (x :: bl) (selsort gv1 y)), (Permutation (x :: bl) (al ++ gv1)), (Permutation (x :: bl) (gv1 ++ al)), (Permutation (x :: bl) (gv1 ++ gv1))
(Permutation (x :: bl) (bl ++ gv1)), (Permutation (a :: al) gv1), (Permutation (a :: al) (x :: gv1)), (Permutation (a :: al) (a :: gv1)), (Permutation (a :: al) (y :: gv1)), (Permutation (a :: al) (selection_sort gv1)), (Permutation (a :: al) (selsort gv1 x)), (Permutation (a :: al) (selsort gv1 a)), (Permutation (a :: al) (selsort gv1 y)), (Permutation (a :: al) (al ++ gv1))
(Permutation (a :: al) (gv1 ++ gv1)), (Permutation (a :: al) (gv1 ++ bl)), (Permutation (a :: al) (bl ++ gv1)), (Permutation (a :: gv1) al), (Permutation (a :: gv1) gv1), (Permutation (a :: gv1) bl), (Permutation (a :: gv1) (x :: al)), (Permutation (a :: gv1) (x :: gv1)), (Permutation (a :: gv1) (x :: bl)), (Permutation (a :: gv1) (a :: al))
(Permutation (a :: gv1) (y :: al)), (Permutation (a :: gv1) (y :: gv1)), (Permutation (a :: gv1) (y :: bl)), (Permutation (a :: gv1) (selection_sort al)), (Permutation (a :: gv1) (selection_sort gv1)), (Permutation (a :: gv1) (selection_sort bl)), (Permutation (a :: gv1) (selsort al x)), (Permutation (a :: gv1) (selsort al a)), (Permutation (a :: gv1) (selsort al y)), (Permutation (a :: gv1) (selsort gv1 x))
(Permutation (a :: gv1) (selsort gv1 y)), (Permutation (a :: gv1) (selsort bl x)), (Permutation (a :: gv1) (selsort bl a)), (Permutation (a :: gv1) (selsort bl y)), (Permutation (a :: gv1) (al ++ al)), (Permutation (a :: gv1) (al ++ gv1)), (Permutation (a :: gv1) (al ++ bl)), (Permutation (a :: gv1) (gv1 ++ al)), (Permutation (a :: gv1) (gv1 ++ gv1)), (Permutation (a :: gv1) (gv1 ++ bl))
(Permutation (a :: gv1) (bl ++ gv1)), (Permutation (a :: gv1) (bl ++ bl)), (Permutation (a :: gv1) []), (Permutation (a :: bl) gv1), (Permutation (a :: bl) (x :: gv1)), (Permutation (a :: bl) (a :: gv1)), (Permutation (a :: bl) (y :: gv1)), (Permutation (a :: bl) (selection_sort gv1)), (Permutation (a :: bl) (selsort gv1 x)), (Permutation (a :: bl) (selsort gv1 a))
(Permutation (a :: bl) (al ++ gv1)), (Permutation (a :: bl) (gv1 ++ al)), (Permutation (a :: bl) (gv1 ++ gv1)), (Permutation (a :: bl) (gv1 ++ bl)), (Permutation (a :: bl) (bl ++ gv1)), (Permutation (y :: al) gv1), (Permutation (y :: al) (x :: gv1)), (Permutation (y :: al) (a :: gv1)), (Permutation (y :: al) (y :: gv1)), (Permutation (y :: al) (selection_sort gv1))
(Permutation (y :: al) (selsort gv1 a)), (Permutation (y :: al) (selsort gv1 y)), (Permutation (y :: al) (al ++ gv1)), (Permutation (y :: al) (gv1 ++ al)), (Permutation (y :: al) (gv1 ++ gv1)), (Permutation (y :: al) (gv1 ++ bl)), (Permutation (y :: al) (bl ++ gv1)), (Permutation (y :: gv1) al), (Permutation (y :: gv1) gv1), (Permutation (y :: gv1) bl)
(Permutation (y :: gv1) (x :: gv1)), (Permutation (y :: gv1) (x :: bl)), (Permutation (y :: gv1) (a :: al)), (Permutation (y :: gv1) (a :: gv1)), (Permutation (y :: gv1) (a :: bl)), (Permutation (y :: gv1) (y :: al)), (Permutation (y :: gv1) (y :: bl)), (Permutation (y :: gv1) (selection_sort al)), (Permutation (y :: gv1) (selection_sort gv1)), (Permutation (y :: gv1) (selection_sort bl))
(Permutation (y :: gv1) (selsort al a)), (Permutation (y :: gv1) (selsort al y)), (Permutation (y :: gv1) (selsort gv1 x)), (Permutation (y :: gv1) (selsort gv1 a)), (Permutation (y :: gv1) (selsort gv1 y)), (Permutation (y :: gv1) (selsort bl x)), (Permutation (y :: gv1) (selsort bl a)), (Permutation (y :: gv1) (selsort bl y)), (Permutation (y :: gv1) (al ++ al)), (Permutation (y :: gv1) (al ++ gv1))
(Permutation (y :: gv1) (gv1 ++ al)), (Permutation (y :: gv1) (gv1 ++ gv1)), (Permutation (y :: gv1) (gv1 ++ bl)), (Permutation (y :: gv1) (bl ++ al)), (Permutation (y :: gv1) (bl ++ gv1)), (Permutation (y :: gv1) (bl ++ bl)), (Permutation (y :: gv1) []), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (x :: gv1)), (Permutation (y :: bl) (a :: gv1))
(Permutation (y :: bl) (selection_sort gv1)), (Permutation (y :: bl) (selsort gv1 x)), (Permutation (y :: bl) (selsort gv1 a)), (Permutation (y :: bl) (selsort gv1 y)), (Permutation (y :: bl) (al ++ gv1)), (Permutation (y :: bl) (gv1 ++ al)), (Permutation (y :: bl) (gv1 ++ gv1)), (Permutation (y :: bl) (gv1 ++ bl)), (Permutation (y :: bl) (bl ++ gv1)), (Permutation (selection_sort al) gv1)
(Permutation (selection_sort al) (a :: gv1)), (Permutation (selection_sort al) (y :: gv1)), (Permutation (selection_sort al) (selection_sort gv1)), (Permutation (selection_sort al) (selsort gv1 x)), (Permutation (selection_sort al) (selsort gv1 a)), (Permutation (selection_sort al) (selsort gv1 y)), (Permutation (selection_sort al) (al ++ gv1)), (Permutation (selection_sort al) (gv1 ++ al)), (Permutation (selection_sort al) (gv1 ++ gv1)), (Permutation (selection_sort al) (gv1 ++ bl))
(Permutation (selection_sort gv1) al), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) bl), (Permutation (selection_sort gv1) (x :: al)), (Permutation (selection_sort gv1) (x :: gv1)), (Permutation (selection_sort gv1) (x :: bl)), (Permutation (selection_sort gv1) (a :: al)), (Permutation (selection_sort gv1) (a :: gv1)), (Permutation (selection_sort gv1) (a :: bl)), (Permutation (selection_sort gv1) (y :: al))
(Permutation (selection_sort gv1) (y :: bl)), (Permutation (selection_sort gv1) (selection_sort al)), (Permutation (selection_sort gv1) (selection_sort bl)), (Permutation (selection_sort gv1) (selsort al x)), (Permutation (selection_sort gv1) (selsort al a)), (Permutation (selection_sort gv1) (selsort al y)), (Permutation (selection_sort gv1) (selsort gv1 x)), (Permutation (selection_sort gv1) (selsort gv1 a)), (Permutation (selection_sort gv1) (selsort gv1 y)), (Permutation (selection_sort gv1) (selsort bl x))
(Permutation (selection_sort gv1) (selsort bl y)), (Permutation (selection_sort gv1) (al ++ al)), (Permutation (selection_sort gv1) (al ++ gv1)), (Permutation (selection_sort gv1) (al ++ bl)), (Permutation (selection_sort gv1) (gv1 ++ al)), (Permutation (selection_sort gv1) (gv1 ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ bl)), (Permutation (selection_sort gv1) (bl ++ al)), (Permutation (selection_sort gv1) (bl ++ gv1)), (Permutation (selection_sort gv1) (bl ++ bl))
(Permutation (selection_sort bl) gv1), (Permutation (selection_sort bl) (x :: gv1)), (Permutation (selection_sort bl) (a :: gv1)), (Permutation (selection_sort bl) (y :: gv1)), (Permutation (selection_sort bl) (selection_sort gv1)), (Permutation (selection_sort bl) (selsort gv1 x)), (Permutation (selection_sort bl) (selsort gv1 a)), (Permutation (selection_sort bl) (selsort gv1 y)), (Permutation (selection_sort bl) (al ++ gv1)), (Permutation (selection_sort bl) (gv1 ++ al))
(Permutation (selection_sort bl) (gv1 ++ bl)), (Permutation (selection_sort bl) (bl ++ gv1)), (Permutation (selsort al x) gv1), (Permutation (selsort al x) (x :: gv1)), (Permutation (selsort al x) (a :: gv1)), (Permutation (selsort al x) (y :: gv1)), (Permutation (selsort al x) (selection_sort gv1)), (Permutation (selsort al x) (selsort gv1 x)), (Permutation (selsort al x) (selsort gv1 a)), (Permutation (selsort al x) (selsort gv1 y))
(Permutation (selsort al x) (gv1 ++ al)), (Permutation (selsort al x) (gv1 ++ gv1)), (Permutation (selsort al x) (gv1 ++ bl)), (Permutation (selsort al x) (bl ++ gv1)), (Permutation (selsort al a) gv1), (Permutation (selsort al a) (x :: gv1)), (Permutation (selsort al a) (a :: gv1)), (Permutation (selsort al a) (y :: gv1)), (Permutation (selsort al a) (selection_sort gv1)), (Permutation (selsort al a) (selsort gv1 x))
(Permutation (selsort al a) (selsort gv1 y)), (Permutation (selsort al a) (al ++ gv1)), (Permutation (selsort al a) (gv1 ++ al)), (Permutation (selsort al a) (gv1 ++ gv1)), (Permutation (selsort al a) (gv1 ++ bl)), (Permutation (selsort al a) (bl ++ gv1)), (Permutation (selsort al y) gv1), (Permutation (selsort al y) (x :: gv1)), (Permutation (selsort al y) (a :: gv1)), (Permutation (selsort al y) (y :: gv1))
(Permutation (selsort al y) (selsort gv1 x)), (Permutation (selsort al y) (selsort gv1 a)), (Permutation (selsort al y) (selsort gv1 y)), (Permutation (selsort al y) (al ++ gv1)), (Permutation (selsort al y) (gv1 ++ al)), (Permutation (selsort al y) (gv1 ++ gv1)), (Permutation (selsort al y) (gv1 ++ bl)), (Permutation (selsort al y) (bl ++ gv1)), (Permutation (selsort gv1 x) al), (Permutation (selsort gv1 x) gv1)
(Permutation (selsort gv1 x) (x :: al)), (Permutation (selsort gv1 x) (x :: gv1)), (Permutation (selsort gv1 x) (x :: bl)), (Permutation (selsort gv1 x) (a :: al)), (Permutation (selsort gv1 x) (a :: gv1)), (Permutation (selsort gv1 x) (a :: bl)), (Permutation (selsort gv1 x) (y :: al)), (Permutation (selsort gv1 x) (y :: gv1)), (Permutation (selsort gv1 x) (y :: bl)), (Permutation (selsort gv1 x) (selection_sort al))
(Permutation (selsort gv1 x) (selection_sort bl)), (Permutation (selsort gv1 x) (selsort al x)), (Permutation (selsort gv1 x) (selsort al a)), (Permutation (selsort gv1 x) (selsort al y)), (Permutation (selsort gv1 x) (selsort gv1 a)), (Permutation (selsort gv1 x) (selsort gv1 y)), (Permutation (selsort gv1 x) (selsort bl x)), (Permutation (selsort gv1 x) (selsort bl a)), (Permutation (selsort gv1 x) (selsort bl y)), (Permutation (selsort gv1 x) (al ++ al))
(Permutation (selsort gv1 x) (al ++ bl)), (Permutation (selsort gv1 x) (gv1 ++ al)), (Permutation (selsort gv1 x) (gv1 ++ gv1)), (Permutation (selsort gv1 x) (gv1 ++ bl)), (Permutation (selsort gv1 x) (bl ++ al)), (Permutation (selsort gv1 x) (bl ++ gv1)), (Permutation (selsort gv1 x) (bl ++ bl)), (Permutation (selsort gv1 x) []), (Permutation (selsort gv1 a) al), (Permutation (selsort gv1 a) gv1)
(Permutation (selsort gv1 a) (x :: al)), (Permutation (selsort gv1 a) (x :: gv1)), (Permutation (selsort gv1 a) (x :: bl)), (Permutation (selsort gv1 a) (a :: al)), (Permutation (selsort gv1 a) (a :: gv1)), (Permutation (selsort gv1 a) (a :: bl)), (Permutation (selsort gv1 a) (y :: al)), (Permutation (selsort gv1 a) (y :: gv1)), (Permutation (selsort gv1 a) (y :: bl)), (Permutation (selsort gv1 a) (selection_sort al))
(Permutation (selsort gv1 a) (selection_sort bl)), (Permutation (selsort gv1 a) (selsort al x)), (Permutation (selsort gv1 a) (selsort al a)), (Permutation (selsort gv1 a) (selsort al y)), (Permutation (selsort gv1 a) (selsort gv1 x)), (Permutation (selsort gv1 a) (selsort gv1 y)), (Permutation (selsort gv1 a) (selsort bl x)), (Permutation (selsort gv1 a) (selsort bl a)), (Permutation (selsort gv1 a) (selsort bl y)), (Permutation (selsort gv1 a) (al ++ al))
(Permutation (selsort gv1 a) (al ++ bl)), (Permutation (selsort gv1 a) (gv1 ++ al)), (Permutation (selsort gv1 a) (gv1 ++ gv1)), (Permutation (selsort gv1 a) (gv1 ++ bl)), (Permutation (selsort gv1 a) (bl ++ al)), (Permutation (selsort gv1 a) (bl ++ gv1)), (Permutation (selsort gv1 a) (bl ++ bl)), (Permutation (selsort gv1 a) []), (Permutation (selsort gv1 y) al), (Permutation (selsort gv1 y) gv1)
(Permutation (selsort gv1 y) (x :: al)), (Permutation (selsort gv1 y) (x :: gv1)), (Permutation (selsort gv1 y) (x :: bl)), (Permutation (selsort gv1 y) (a :: al)), (Permutation (selsort gv1 y) (a :: gv1)), (Permutation (selsort gv1 y) (a :: bl)), (Permutation (selsort gv1 y) (y :: al)), (Permutation (selsort gv1 y) (y :: gv1)), (Permutation (selsort gv1 y) (y :: bl)), (Permutation (selsort gv1 y) (selection_sort al))
(Permutation (selsort gv1 y) (selection_sort bl)), (Permutation (selsort gv1 y) (selsort al x)), (Permutation (selsort gv1 y) (selsort al a)), (Permutation (selsort gv1 y) (selsort al y)), (Permutation (selsort gv1 y) (selsort gv1 x)), (Permutation (selsort gv1 y) (selsort gv1 a)), (Permutation (selsort gv1 y) (selsort bl x)), (Permutation (selsort gv1 y) (selsort bl a)), (Permutation (selsort gv1 y) (selsort bl y)), (Permutation (selsort gv1 y) (al ++ al))
(Permutation (selsort gv1 y) (al ++ bl)), (Permutation (selsort gv1 y) (gv1 ++ al)), (Permutation (selsort gv1 y) (gv1 ++ gv1)), (Permutation (selsort gv1 y) (gv1 ++ bl)), (Permutation (selsort gv1 y) (bl ++ al)), (Permutation (selsort gv1 y) (bl ++ gv1)), (Permutation (selsort gv1 y) (bl ++ bl)), (Permutation (selsort gv1 y) []), (Permutation (selsort bl x) gv1), (Permutation (selsort bl x) (x :: gv1))
(Permutation (selsort bl x) (y :: gv1)), (Permutation (selsort bl x) (selection_sort gv1)), (Permutation (selsort bl x) (selsort gv1 x)), (Permutation (selsort bl x) (selsort gv1 a)), (Permutation (selsort bl x) (selsort gv1 y)), (Permutation (selsort bl x) (al ++ gv1)), (Permutation (selsort bl x) (gv1 ++ al)), (Permutation (selsort bl x) (gv1 ++ gv1)), (Permutation (selsort bl x) (gv1 ++ bl)), (Permutation (selsort bl x) (bl ++ gv1))
(Permutation (selsort bl a) (x :: gv1)), (Permutation (selsort bl a) (a :: gv1)), (Permutation (selsort bl a) (y :: gv1)), (Permutation (selsort bl a) (selection_sort gv1)), (Permutation (selsort bl a) (selsort gv1 x)), (Permutation (selsort bl a) (selsort gv1 a)), (Permutation (selsort bl a) (selsort gv1 y)), (Permutation (selsort bl a) (al ++ gv1)), (Permutation (selsort bl a) (gv1 ++ al)), (Permutation (selsort bl a) (gv1 ++ gv1))
(Permutation (selsort bl a) (bl ++ gv1)), (Permutation (selsort bl y) gv1), (Permutation (selsort bl y) (x :: gv1)), (Permutation (selsort bl y) (a :: gv1)), (Permutation (selsort bl y) (y :: gv1)), (Permutation (selsort bl y) (selection_sort gv1)), (Permutation (selsort bl y) (selsort gv1 x)), (Permutation (selsort bl y) (selsort gv1 a)), (Permutation (selsort bl y) (selsort gv1 y)), (Permutation (selsort bl y) (al ++ gv1))
(Permutation (selsort bl y) (gv1 ++ gv1)), (Permutation (selsort bl y) (gv1 ++ bl)), (Permutation (selsort bl y) (bl ++ gv1)), (Permutation (al ++ al) gv1), (Permutation (al ++ al) (x :: gv1)), (Permutation (al ++ al) (a :: gv1)), (Permutation (al ++ al) (y :: gv1)), (Permutation (al ++ al) (selection_sort gv1)), (Permutation (al ++ al) (selsort gv1 x)), (Permutation (al ++ al) (selsort gv1 a))
(Permutation (al ++ al) (al ++ gv1)), (Permutation (al ++ al) (gv1 ++ al)), (Permutation (al ++ al) (gv1 ++ gv1)), (Permutation (al ++ al) (gv1 ++ bl)), (Permutation (al ++ al) (bl ++ gv1)), (Permutation (al ++ gv1) al), (Permutation (al ++ gv1) gv1), (Permutation (al ++ gv1) bl), (Permutation (al ++ gv1) (x :: al)), (Permutation (al ++ gv1) (x :: gv1))
(Permutation (al ++ gv1) (a :: al)), (Permutation (al ++ gv1) (a :: gv1)), (Permutation (al ++ gv1) (a :: bl)), (Permutation (al ++ gv1) (y :: al)), (Permutation (al ++ gv1) (y :: gv1)), (Permutation (al ++ gv1) (y :: bl)), (Permutation (al ++ gv1) (selection_sort al)), (Permutation (al ++ gv1) (selection_sort gv1)), (Permutation (al ++ gv1) (selection_sort bl)), (Permutation (al ++ gv1) (selsort al x))
(Permutation (al ++ gv1) (selsort al y)), (Permutation (al ++ gv1) (selsort gv1 x)), (Permutation (al ++ gv1) (selsort gv1 a)), (Permutation (al ++ gv1) (selsort gv1 y)), (Permutation (al ++ gv1) (selsort bl x)), (Permutation (al ++ gv1) (selsort bl a)), (Permutation (al ++ gv1) (selsort bl y)), (Permutation (al ++ gv1) (al ++ al)), (Permutation (al ++ gv1) (al ++ bl)), (Permutation (al ++ gv1) (gv1 ++ al))
(Permutation (al ++ gv1) (gv1 ++ bl)), (Permutation (al ++ gv1) (bl ++ al)), (Permutation (al ++ gv1) (bl ++ gv1)), (Permutation (al ++ gv1) (bl ++ bl)), (Permutation (al ++ gv1) []), (Permutation (al ++ bl) gv1), (Permutation (al ++ bl) (x :: gv1)), (Permutation (al ++ bl) (a :: gv1)), (Permutation (al ++ bl) (y :: gv1)), (Permutation (al ++ bl) (selection_sort gv1))
(Permutation (al ++ bl) (selsort gv1 a)), (Permutation (al ++ bl) (selsort gv1 y)), (Permutation (al ++ bl) (al ++ gv1)), (Permutation (al ++ bl) (gv1 ++ al)), (Permutation (al ++ bl) (gv1 ++ gv1)), (Permutation (al ++ bl) (gv1 ++ bl)), (Permutation (al ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ al) al), (Permutation (gv1 ++ al) gv1), (Permutation (gv1 ++ al) bl)
(Permutation (gv1 ++ al) (x :: gv1)), (Permutation (gv1 ++ al) (x :: bl)), (Permutation (gv1 ++ al) (a :: al)), (Permutation (gv1 ++ al) (a :: gv1)), (Permutation (gv1 ++ al) (a :: bl)), (Permutation (gv1 ++ al) (y :: al)), (Permutation (gv1 ++ al) (y :: gv1)), (Permutation (gv1 ++ al) (y :: bl)), (Permutation (gv1 ++ al) (selection_sort al)), (Permutation (gv1 ++ al) (selection_sort gv1))
(Permutation (gv1 ++ al) (selsort al x)), (Permutation (gv1 ++ al) (selsort al a)), (Permutation (gv1 ++ al) (selsort al y)), (Permutation (gv1 ++ al) (selsort gv1 x)), (Permutation (gv1 ++ al) (selsort gv1 a)), (Permutation (gv1 ++ al) (selsort gv1 y)), (Permutation (gv1 ++ al) (selsort bl x)), (Permutation (gv1 ++ al) (selsort bl a)), (Permutation (gv1 ++ al) (selsort bl y)), (Permutation (gv1 ++ al) (al ++ al))
(Permutation (gv1 ++ al) (al ++ bl)), (Permutation (gv1 ++ al) (gv1 ++ gv1)), (Permutation (gv1 ++ al) (gv1 ++ bl)), (Permutation (gv1 ++ al) (bl ++ al)), (Permutation (gv1 ++ al) (bl ++ gv1)), (Permutation (gv1 ++ al) (bl ++ bl)), (Permutation (gv1 ++ al) []), (Permutation (gv1 ++ gv1) al), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) bl)
(Permutation (gv1 ++ gv1) (x :: gv1)), (Permutation (gv1 ++ gv1) (x :: bl)), (Permutation (gv1 ++ gv1) (a :: al)), (Permutation (gv1 ++ gv1) (a :: gv1)), (Permutation (gv1 ++ gv1) (a :: bl)), (Permutation (gv1 ++ gv1) (y :: al)), (Permutation (gv1 ++ gv1) (y :: gv1)), (Permutation (gv1 ++ gv1) (y :: bl)), (Permutation (gv1 ++ gv1) (selection_sort al)), (Permutation (gv1 ++ gv1) (selection_sort gv1))
(Permutation (gv1 ++ gv1) (selsort al x)), (Permutation (gv1 ++ gv1) (selsort al a)), (Permutation (gv1 ++ gv1) (selsort al y)), (Permutation (gv1 ++ gv1) (selsort gv1 x)), (Permutation (gv1 ++ gv1) (selsort gv1 a)), (Permutation (gv1 ++ gv1) (selsort gv1 y)), (Permutation (gv1 ++ gv1) (selsort bl x)), (Permutation (gv1 ++ gv1) (selsort bl a)), (Permutation (gv1 ++ gv1) (selsort bl y)), (Permutation (gv1 ++ gv1) (al ++ al))
(Permutation (gv1 ++ gv1) (al ++ bl)), (Permutation (gv1 ++ gv1) (gv1 ++ al)), (Permutation (gv1 ++ gv1) (gv1 ++ bl)), (Permutation (gv1 ++ gv1) (bl ++ al)), (Permutation (gv1 ++ gv1) (bl ++ gv1)), (Permutation (gv1 ++ gv1) (bl ++ bl)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ bl) al), (Permutation (gv1 ++ bl) gv1), (Permutation (gv1 ++ bl) bl)
(Permutation (gv1 ++ bl) (x :: gv1)), (Permutation (gv1 ++ bl) (x :: bl)), (Permutation (gv1 ++ bl) (a :: al)), (Permutation (gv1 ++ bl) (a :: gv1)), (Permutation (gv1 ++ bl) (a :: bl)), (Permutation (gv1 ++ bl) (y :: al)), (Permutation (gv1 ++ bl) (y :: gv1)), (Permutation (gv1 ++ bl) (y :: bl)), (Permutation (gv1 ++ bl) (selection_sort al)), (Permutation (gv1 ++ bl) (selection_sort gv1))
(Permutation (gv1 ++ bl) (selsort al x)), (Permutation (gv1 ++ bl) (selsort al a)), (Permutation (gv1 ++ bl) (selsort al y)), (Permutation (gv1 ++ bl) (selsort gv1 x)), (Permutation (gv1 ++ bl) (selsort gv1 a)), (Permutation (gv1 ++ bl) (selsort gv1 y)), (Permutation (gv1 ++ bl) (selsort bl x)), (Permutation (gv1 ++ bl) (selsort bl a)), (Permutation (gv1 ++ bl) (selsort bl y)), (Permutation (gv1 ++ bl) (al ++ al))
(Permutation (gv1 ++ bl) (al ++ bl)), (Permutation (gv1 ++ bl) (gv1 ++ al)), (Permutation (gv1 ++ bl) (gv1 ++ gv1)), (Permutation (gv1 ++ bl) (bl ++ al)), (Permutation (gv1 ++ bl) (bl ++ gv1)), (Permutation (gv1 ++ bl) (bl ++ bl)), (Permutation (gv1 ++ bl) []), (Permutation (bl ++ al) gv1), (Permutation (bl ++ al) (x :: gv1)), (Permutation (bl ++ al) (a :: gv1))
(Permutation (bl ++ al) (selection_sort gv1)), (Permutation (bl ++ al) (selsort gv1 x)), (Permutation (bl ++ al) (selsort gv1 a)), (Permutation (bl ++ al) (selsort gv1 y)), (Permutation (bl ++ al) (al ++ gv1)), (Permutation (bl ++ al) (gv1 ++ al)), (Permutation (bl ++ al) (gv1 ++ gv1)), (Permutation (bl ++ al) (gv1 ++ bl)), (Permutation (bl ++ al) (bl ++ gv1)), (Permutation (bl ++ gv1) al)
(Permutation (bl ++ gv1) bl), (Permutation (bl ++ gv1) (x :: al)), (Permutation (bl ++ gv1) (x :: gv1)), (Permutation (bl ++ gv1) (x :: bl)), (Permutation (bl ++ gv1) (a :: al)), (Permutation (bl ++ gv1) (a :: gv1)), (Permutation (bl ++ gv1) (a :: bl)), (Permutation (bl ++ gv1) (y :: al)), (Permutation (bl ++ gv1) (y :: gv1)), (Permutation (bl ++ gv1) (y :: bl))
(Permutation (bl ++ gv1) (selection_sort gv1)), (Permutation (bl ++ gv1) (selection_sort bl)), (Permutation (bl ++ gv1) (selsort al x)), (Permutation (bl ++ gv1) (selsort al a)), (Permutation (bl ++ gv1) (selsort al y)), (Permutation (bl ++ gv1) (selsort gv1 x)), (Permutation (bl ++ gv1) (selsort gv1 a)), (Permutation (bl ++ gv1) (selsort gv1 y)), (Permutation (bl ++ gv1) (selsort bl x)), (Permutation (bl ++ gv1) (selsort bl a))
(Permutation (bl ++ gv1) (al ++ al)), (Permutation (bl ++ gv1) (al ++ gv1)), (Permutation (bl ++ gv1) (al ++ bl)), (Permutation (bl ++ gv1) (gv1 ++ al)), (Permutation (bl ++ gv1) (gv1 ++ gv1)), (Permutation (bl ++ gv1) (gv1 ++ bl)), (Permutation (bl ++ gv1) (bl ++ al)), (Permutation (bl ++ gv1) (bl ++ bl)), (Permutation (bl ++ gv1) []), (Permutation (bl ++ bl) gv1)
(Permutation (bl ++ bl) (a :: gv1)), (Permutation (bl ++ bl) (y :: gv1)), (Permutation (bl ++ bl) (selection_sort gv1)), (Permutation (bl ++ bl) (selsort gv1 x)), (Permutation (bl ++ bl) (selsort gv1 a)), (Permutation (bl ++ bl) (selsort gv1 y)), (Permutation (bl ++ bl) (al ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ al)), (Permutation (bl ++ bl) (gv1 ++ gv1)), (Permutation (bl ++ bl) (gv1 ++ bl))
(Permutation [] gv1), (Permutation [] (x :: gv1)), (Permutation [] (a :: gv1)), (Permutation [] (y :: gv1)), (Permutation [] (selection_sort gv1)), (Permutation [] (selsort gv1 x)), (Permutation [] (selsort gv1 a)), (Permutation [] (selsort gv1 y)), (Permutation [] (al ++ gv1)), (Permutation [] (gv1 ++ al))
(Permutation [] (gv1 ++ bl)), (Permutation [] (bl ++ gv1)), (In x gv1), (In x (x :: gv1)), (In x (a :: gv1)), (In x (y :: gv1)), (In x (selection_sort gv1)), (In x (selsort gv1 x)), (In x (selsort gv1 a)), (In x (selsort gv1 y))
(In x (gv1 ++ al)), (In x (gv1 ++ gv1)), (In x (gv1 ++ bl)), (In x (bl ++ gv1)), (In a gv1), (In a (x :: gv1)), (In a (a :: gv1)), (In a (y :: gv1)), (In a (selection_sort gv1)), (In a (selsort gv1 x))
(In a (selsort gv1 y)), (In a (al ++ gv1)), (In a (gv1 ++ al)), (In a (gv1 ++ gv1)), (In a (gv1 ++ bl)), (In a (bl ++ gv1)), (In y gv1), (In y (x :: gv1)), (In y (a :: gv1)), (In y (y :: gv1))
(In y (selsort gv1 x)), (In y (selsort gv1 a)), (In y (selsort gv1 y)), (In y (al ++ gv1)), (In y (gv1 ++ al)), (In y (gv1 ++ gv1)), (In y (gv1 ++ bl)), (In y (bl ++ gv1)), (In (length al) gv1), (In (length al) (x :: gv1))
(In (length al) (y :: gv1)), (In (length al) (selection_sort gv1)), (In (length al) (selsort gv1 x)), (In (length al) (selsort gv1 a)), (In (length al) (selsort gv1 y)), (In (length al) (al ++ gv1)), (In (length al) (gv1 ++ al)), (In (length al) (gv1 ++ gv1)), (In (length al) (gv1 ++ bl)), (In (length al) (bl ++ gv1))
(In (length gv1) gv1), (In (length gv1) bl), (In (length gv1) (x :: al)), (In (length gv1) (x :: gv1)), (In (length gv1) (x :: bl)), (In (length gv1) (a :: al)), (In (length gv1) (a :: gv1)), (In (length gv1) (a :: bl)), (In (length gv1) (y :: al)), (In (length gv1) (y :: gv1))
(In (length gv1) (selection_sort al)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selection_sort bl)), (In (length gv1) (selsort al x)), (In (length gv1) (selsort al a)), (In (length gv1) (selsort al y)), (In (length gv1) (selsort gv1 x)), (In (length gv1) (selsort gv1 a)), (In (length gv1) (selsort gv1 y)), (In (length gv1) (selsort bl x))
(In (length gv1) (selsort bl y)), (In (length gv1) (al ++ al)), (In (length gv1) (al ++ gv1)), (In (length gv1) (al ++ bl)), (In (length gv1) (gv1 ++ al)), (In (length gv1) (gv1 ++ gv1)), (In (length gv1) (gv1 ++ bl)), (In (length gv1) (bl ++ al)), (In (length gv1) (bl ++ gv1)), (In (length gv1) (bl ++ bl))
(In (length bl) (x :: gv1)), (In (length bl) (a :: gv1)), (In (length bl) (y :: gv1)), (In (length bl) (selection_sort gv1)), (In (length bl) (selsort gv1 x)), (In (length bl) (selsort gv1 a)), (In (length bl) (selsort gv1 y)), (In (length bl) (al ++ gv1)), (In (length bl) (gv1 ++ al)), (In (length bl) (gv1 ++ gv1))
(In (length bl) (bl ++ gv1)), (x < length gv1), (a < length gv1), (y < length gv1), (length al < length gv1), (length gv1 < x), (length gv1 < a), (length gv1 < y), (length gv1 < length al), (length gv1 < length bl)
(x <= length gv1), (a <= length gv1), (y <= length gv1), (length al <= length gv1), (length gv1 <= x), (length gv1 <= a), (length gv1 <= y), (length gv1 <= length al), (length gv1 <= length bl), (length bl <= length gv1)
(selection_sort al = al ++ gv1), (selection_sort al = gv1 ++ al), (selection_sort al = gv1 ++ gv1), (selection_sort al = gv1 ++ bl), (selection_sort al = bl ++ gv1), (selection_sort gv1 = al), (selection_sort gv1 = gv1), (selection_sort gv1 = bl), (selection_sort gv1 = al ++ al), (selection_sort gv1 = al ++ gv1)
(selection_sort gv1 = gv1 ++ al), (selection_sort gv1 = gv1 ++ gv1), (selection_sort gv1 = gv1 ++ bl), (selection_sort gv1 = bl ++ al), (selection_sort gv1 = bl ++ gv1), (selection_sort gv1 = bl ++ bl), (selection_sort bl = gv1), (selection_sort bl = al ++ gv1), (selection_sort bl = gv1 ++ al), (selection_sort bl = gv1 ++ gv1)
(selection_sort bl = bl ++ gv1), (selsort al x = gv1), (selsort al x = selection_sort gv1), (selsort al x = al ++ gv1), (selsort al x = gv1 ++ al), (selsort al x = gv1 ++ gv1), (selsort al x = gv1 ++ bl), (selsort al x = bl ++ gv1), (selsort al a = gv1), (selsort al a = selection_sort gv1)
(selsort al a = gv1 ++ al), (selsort al a = gv1 ++ gv1), (selsort al a = gv1 ++ bl), (selsort al a = bl ++ gv1), (selsort al y = gv1), (selsort al y = selection_sort gv1), (selsort al y = al ++ gv1), (selsort al y = gv1 ++ al), (selsort al y = gv1 ++ gv1), (selsort al y = gv1 ++ bl)
(selsort gv1 x = al), (selsort gv1 x = gv1), (selsort gv1 x = bl), (selsort gv1 x = selection_sort al), (selsort gv1 x = selection_sort gv1), (selsort gv1 x = selection_sort bl), (selsort gv1 x = al ++ al), (selsort gv1 x = al ++ gv1), (selsort gv1 x = al ++ bl), (selsort gv1 x = gv1 ++ al)
(selsort gv1 x = gv1 ++ bl), (selsort gv1 x = bl ++ al), (selsort gv1 x = bl ++ gv1), (selsort gv1 x = bl ++ bl), (selsort gv1 a = al), (selsort gv1 a = gv1), (selsort gv1 a = bl), (selsort gv1 a = selection_sort al), (selsort gv1 a = selection_sort gv1), (selsort gv1 a = selection_sort bl)
(selsort gv1 a = al ++ gv1), (selsort gv1 a = al ++ bl), (selsort gv1 a = gv1 ++ al), (selsort gv1 a = gv1 ++ gv1), (selsort gv1 a = gv1 ++ bl), (selsort gv1 a = bl ++ al), (selsort gv1 a = bl ++ gv1), (selsort gv1 a = bl ++ bl), (selsort gv1 y = al), (selsort gv1 y = gv1)
(selsort gv1 y = selection_sort al), (selsort gv1 y = selection_sort gv1), (selsort gv1 y = selection_sort bl), (selsort gv1 y = al ++ al), (selsort gv1 y = al ++ gv1), (selsort gv1 y = al ++ bl), (selsort gv1 y = gv1 ++ al), (selsort gv1 y = gv1 ++ gv1), (selsort gv1 y = gv1 ++ bl), (selsort gv1 y = bl ++ al)
(selsort gv1 y = bl ++ bl), (selsort bl x = gv1), (selsort bl x = selection_sort gv1), (selsort bl x = al ++ gv1), (selsort bl x = gv1 ++ al), (selsort bl x = gv1 ++ gv1), (selsort bl x = gv1 ++ bl), (selsort bl x = bl ++ gv1), (selsort bl a = gv1), (selsort bl a = selection_sort gv1)
(selsort bl a = gv1 ++ al), (selsort bl a = gv1 ++ gv1), (selsort bl a = gv1 ++ bl), (selsort bl a = bl ++ gv1), (selsort bl y = gv1), (selsort bl y = selection_sort gv1), (selsort bl y = al ++ gv1), (selsort bl y = gv1 ++ al), (selsort bl y = gv1 ++ gv1), (selsort bl y = gv1 ++ bl)
(al ++ al = gv1), (al ++ gv1 = al), (al ++ gv1 = gv1), (al ++ gv1 = bl), (al ++ bl = gv1), (gv1 ++ al = al), (gv1 ++ al = gv1), (gv1 ++ al = bl), (gv1 ++ gv1 = al), (gv1 ++ gv1 = gv1)
(gv1 ++ bl = al), (gv1 ++ bl = gv1), (gv1 ++ bl = bl), (bl ++ al = gv1), (bl ++ gv1 = al), (bl ++ gv1 = gv1), (bl ++ gv1 = bl), (bl ++ bl = gv1), (length gv1 = x), (length gv1 = a)

Label: 3 (3)
(false = sorted_bool al), (false = sorted_bool bl), (true = sorted_bool al), (true = sorted_bool bl), (a <=* al), (a <=* bl), (a <=* a :: al), (a <=* a :: bl), (a <=* x :: al), (a <=* x :: bl)
(a <=* y :: bl), (a <=* selection_sort al), (a <=* selection_sort bl), (a <=* selsort al a), (a <=* selsort al x), (a <=* selsort al y), (a <=* selsort bl a), (a <=* selsort bl x), (a <=* selsort bl y), (a <=* al ++ al)
(a <=* bl ++ al), (a <=* bl ++ bl), (a <=* []), (x <=* al), (x <=* bl), (x <=* a :: al), (x <=* a :: bl), (x <=* x :: al), (x <=* x :: bl), (x <=* y :: al)
(x <=* selection_sort al), (x <=* selection_sort bl), (x <=* selsort al a), (x <=* selsort al x), (x <=* selsort al y), (x <=* selsort bl a), (x <=* selsort bl x), (x <=* selsort bl y), (x <=* al ++ al), (x <=* al ++ bl)
(x <=* bl ++ bl), (x <=* []), (y <=* al), (y <=* bl), (y <=* a :: al), (y <=* a :: bl), (y <=* x :: al), (y <=* x :: bl), (y <=* y :: al), (y <=* y :: bl)
(y <=* selection_sort bl), (y <=* selsort al a), (y <=* selsort al x), (y <=* selsort al y), (y <=* selsort bl a), (y <=* selsort bl x), (y <=* selsort bl y), (y <=* al ++ al), (y <=* al ++ bl), (y <=* bl ++ al)
(y <=* []), (length al <=* al), (length al <=* bl), (length al <=* a :: al), (length al <=* a :: bl), (length al <=* x :: al), (length al <=* x :: bl), (length al <=* y :: al), (length al <=* y :: bl), (length al <=* selection_sort al)
(length al <=* selsort al a), (length al <=* selsort al x), (length al <=* selsort al y), (length al <=* selsort bl a), (length al <=* selsort bl x), (length al <=* selsort bl y), (length al <=* al ++ al), (length al <=* al ++ bl), (length al <=* bl ++ al), (length al <=* bl ++ bl)
(length bl <=* al), (length bl <=* bl), (length bl <=* a :: al), (length bl <=* a :: bl), (length bl <=* x :: al), (length bl <=* x :: bl), (length bl <=* y :: al), (length bl <=* y :: bl), (length bl <=* selection_sort al), (length bl <=* selection_sort bl)
(length bl <=* selsort al x), (length bl <=* selsort al y), (length bl <=* selsort bl a), (length bl <=* selsort bl x), (length bl <=* selsort bl y), (length bl <=* al ++ al), (length bl <=* al ++ bl), (length bl <=* bl ++ al), (length bl <=* bl ++ bl), (length bl <=* [])
(sorted bl), (sorted (a :: al)), (sorted (a :: bl)), (sorted (x :: al)), (sorted (x :: bl)), (sorted (y :: al)), (sorted (y :: bl)), (sorted (selection_sort al)), (sorted (selection_sort bl)), (sorted (selsort al a))
(sorted (selsort al y)), (sorted (selsort bl a)), (sorted (selsort bl x)), (sorted (selsort bl y)), (sorted (al ++ al)), (sorted (al ++ bl)), (sorted (bl ++ al)), (sorted (bl ++ bl)), (sorted []), (Permutation al bl)
(Permutation al (a :: bl)), (Permutation al (x :: al)), (Permutation al (x :: bl)), (Permutation al (y :: al)), (Permutation al (y :: bl)), (Permutation al (selection_sort al)), (Permutation al (selection_sort bl)), (Permutation al (selsort al a)), (Permutation al (selsort al x)), (Permutation al (selsort al y))
(Permutation al (selsort bl x)), (Permutation al (selsort bl y)), (Permutation al (al ++ al)), (Permutation al (al ++ bl)), (Permutation al (bl ++ al)), (Permutation al (bl ++ bl)), (Permutation al []), (Permutation bl al), (Permutation bl (a :: al)), (Permutation bl (a :: bl))
(Permutation bl (x :: bl)), (Permutation bl (y :: al)), (Permutation bl (y :: bl)), (Permutation bl (selection_sort al)), (Permutation bl (selection_sort bl)), (Permutation bl (selsort al a)), (Permutation bl (selsort al x)), (Permutation bl (selsort al y)), (Permutation bl (selsort bl a)), (Permutation bl (selsort bl x))
(Permutation bl (al ++ al)), (Permutation bl (al ++ bl)), (Permutation bl (bl ++ al)), (Permutation bl (bl ++ bl)), (Permutation bl []), (Permutation (a :: al) al), (Permutation (a :: al) bl), (Permutation (a :: al) (a :: bl)), (Permutation (a :: al) (x :: al)), (Permutation (a :: al) (x :: bl))
(Permutation (a :: al) (y :: bl)), (Permutation (a :: al) (selection_sort al)), (Permutation (a :: al) (selection_sort bl)), (Permutation (a :: al) (selsort al a)), (Permutation (a :: al) (selsort al x)), (Permutation (a :: al) (selsort al y)), (Permutation (a :: al) (selsort bl a)), (Permutation (a :: al) (selsort bl x)), (Permutation (a :: al) (selsort bl y)), (Permutation (a :: al) (al ++ al))
(Permutation (a :: al) (bl ++ al)), (Permutation (a :: al) (bl ++ bl)), (Permutation (a :: al) []), (Permutation (a :: bl) al), (Permutation (a :: bl) bl), (Permutation (a :: bl) (a :: al)), (Permutation (a :: bl) (x :: al)), (Permutation (a :: bl) (x :: bl)), (Permutation (a :: bl) (y :: al)), (Permutation (a :: bl) (y :: bl))
(Permutation (a :: bl) (selection_sort bl)), (Permutation (a :: bl) (selsort al a)), (Permutation (a :: bl) (selsort al x)), (Permutation (a :: bl) (selsort al y)), (Permutation (a :: bl) (selsort bl a)), (Permutation (a :: bl) (selsort bl x)), (Permutation (a :: bl) (selsort bl y)), (Permutation (a :: bl) (al ++ al)), (Permutation (a :: bl) (al ++ bl)), (Permutation (a :: bl) (bl ++ al))
(Permutation (a :: bl) []), (Permutation (x :: al) al), (Permutation (x :: al) bl), (Permutation (x :: al) (a :: al)), (Permutation (x :: al) (a :: bl)), (Permutation (x :: al) (x :: bl)), (Permutation (x :: al) (y :: al)), (Permutation (x :: al) (y :: bl)), (Permutation (x :: al) (selection_sort al)), (Permutation (x :: al) (selection_sort bl))
(Permutation (x :: al) (selsort al x)), (Permutation (x :: al) (selsort al y)), (Permutation (x :: al) (selsort bl a)), (Permutation (x :: al) (selsort bl x)), (Permutation (x :: al) (selsort bl y)), (Permutation (x :: al) (al ++ al)), (Permutation (x :: al) (al ++ bl)), (Permutation (x :: al) (bl ++ al)), (Permutation (x :: al) (bl ++ bl)), (Permutation (x :: al) [])
(Permutation (x :: bl) bl), (Permutation (x :: bl) (a :: al)), (Permutation (x :: bl) (a :: bl)), (Permutation (x :: bl) (x :: al)), (Permutation (x :: bl) (y :: al)), (Permutation (x :: bl) (y :: bl)), (Permutation (x :: bl) (selection_sort al)), (Permutation (x :: bl) (selection_sort bl)), (Permutation (x :: bl) (selsort al a)), (Permutation (x :: bl) (selsort al x))
(Permutation (x :: bl) (selsort bl a)), (Permutation (x :: bl) (selsort bl x)), (Permutation (x :: bl) (selsort bl y)), (Permutation (x :: bl) (al ++ al)), (Permutation (x :: bl) (al ++ bl)), (Permutation (x :: bl) (bl ++ al)), (Permutation (x :: bl) (bl ++ bl)), (Permutation (x :: bl) []), (Permutation (y :: al) al), (Permutation (y :: al) bl)
(Permutation (y :: al) (a :: bl)), (Permutation (y :: al) (x :: al)), (Permutation (y :: al) (x :: bl)), (Permutation (y :: al) (y :: bl)), (Permutation (y :: al) (selection_sort al)), (Permutation (y :: al) (selection_sort bl)), (Permutation (y :: al) (selsort al a)), (Permutation (y :: al) (selsort al x)), (Permutation (y :: al) (selsort al y)), (Permutation (y :: al) (selsort bl a))
(Permutation (y :: al) (selsort bl y)), (Permutation (y :: al) (al ++ al)), (Permutation (y :: al) (al ++ bl)), (Permutation (y :: al) (bl ++ al)), (Permutation (y :: al) (bl ++ bl)), (Permutation (y :: al) []), (Permutation (y :: bl) al), (Permutation (y :: bl) bl), (Permutation (y :: bl) (a :: al)), (Permutation (y :: bl) (a :: bl))
(Permutation (y :: bl) (x :: bl)), (Permutation (y :: bl) (y :: al)), (Permutation (y :: bl) (selection_sort al)), (Permutation (y :: bl) (selection_sort bl)), (Permutation (y :: bl) (selsort al a)), (Permutation (y :: bl) (selsort al x)), (Permutation (y :: bl) (selsort al y)), (Permutation (y :: bl) (selsort bl a)), (Permutation (y :: bl) (selsort bl x)), (Permutation (y :: bl) (selsort bl y))
(Permutation (y :: bl) (al ++ bl)), (Permutation (y :: bl) (bl ++ al)), (Permutation (y :: bl) (bl ++ bl)), (Permutation (y :: bl) []), (Permutation (selection_sort al) al), (Permutation (selection_sort al) bl), (Permutation (selection_sort al) (a :: al)), (Permutation (selection_sort al) (a :: bl)), (Permutation (selection_sort al) (x :: al)), (Permutation (selection_sort al) (x :: bl))
(Permutation (selection_sort al) (y :: bl)), (Permutation (selection_sort al) (selection_sort bl)), (Permutation (selection_sort al) (selsort al a)), (Permutation (selection_sort al) (selsort al x)), (Permutation (selection_sort al) (selsort al y)), (Permutation (selection_sort al) (selsort bl a)), (Permutation (selection_sort al) (selsort bl x)), (Permutation (selection_sort al) (selsort bl y)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) (al ++ bl))
(Permutation (selection_sort al) (bl ++ bl)), (Permutation (selection_sort al) []), (Permutation (selection_sort bl) al), (Permutation (selection_sort bl) bl), (Permutation (selection_sort bl) (a :: al)), (Permutation (selection_sort bl) (a :: bl)), (Permutation (selection_sort bl) (x :: al)), (Permutation (selection_sort bl) (x :: bl)), (Permutation (selection_sort bl) (y :: al)), (Permutation (selection_sort bl) (y :: bl))
(Permutation (selection_sort bl) (selsort al a)), (Permutation (selection_sort bl) (selsort al x)), (Permutation (selection_sort bl) (selsort al y)), (Permutation (selection_sort bl) (selsort bl a)), (Permutation (selection_sort bl) (selsort bl x)), (Permutation (selection_sort bl) (selsort bl y)), (Permutation (selection_sort bl) (al ++ al)), (Permutation (selection_sort bl) (al ++ bl)), (Permutation (selection_sort bl) (bl ++ al)), (Permutation (selection_sort bl) (bl ++ bl))
(Permutation (selsort al a) al), (Permutation (selsort al a) bl), (Permutation (selsort al a) (a :: al)), (Permutation (selsort al a) (a :: bl)), (Permutation (selsort al a) (x :: al)), (Permutation (selsort al a) (x :: bl)), (Permutation (selsort al a) (y :: al)), (Permutation (selsort al a) (y :: bl)), (Permutation (selsort al a) (selection_sort al)), (Permutation (selsort al a) (selection_sort bl))
(Permutation (selsort al a) (selsort al y)), (Permutation (selsort al a) (selsort bl a)), (Permutation (selsort al a) (selsort bl x)), (Permutation (selsort al a) (selsort bl y)), (Permutation (selsort al a) (al ++ al)), (Permutation (selsort al a) (al ++ bl)), (Permutation (selsort al a) (bl ++ al)), (Permutation (selsort al a) (bl ++ bl)), (Permutation (selsort al a) []), (Permutation (selsort al x) al)
(Permutation (selsort al x) (a :: al)), (Permutation (selsort al x) (a :: bl)), (Permutation (selsort al x) (x :: al)), (Permutation (selsort al x) (x :: bl)), (Permutation (selsort al x) (y :: al)), (Permutation (selsort al x) (y :: bl)), (Permutation (selsort al x) (selection_sort al)), (Permutation (selsort al x) (selection_sort bl)), (Permutation (selsort al x) (selsort al a)), (Permutation (selsort al x) (selsort al y))
(Permutation (selsort al x) (selsort bl x)), (Permutation (selsort al x) (selsort bl y)), (Permutation (selsort al x) (al ++ al)), (Permutation (selsort al x) (al ++ bl)), (Permutation (selsort al x) (bl ++ al)), (Permutation (selsort al x) (bl ++ bl)), (Permutation (selsort al x) []), (Permutation (selsort al y) al), (Permutation (selsort al y) bl), (Permutation (selsort al y) (a :: al))
(Permutation (selsort al y) (x :: al)), (Permutation (selsort al y) (x :: bl)), (Permutation (selsort al y) (y :: al)), (Permutation (selsort al y) (y :: bl)), (Permutation (selsort al y) (selection_sort al)), (Permutation (selsort al y) (selection_sort bl)), (Permutation (selsort al y) (selsort al a)), (Permutation (selsort al y) (selsort al x)), (Permutation (selsort al y) (selsort bl a)), (Permutation (selsort al y) (selsort bl x))
(Permutation (selsort al y) (al ++ al)), (Permutation (selsort al y) (al ++ bl)), (Permutation (selsort al y) (bl ++ al)), (Permutation (selsort al y) (bl ++ bl)), (Permutation (selsort al y) []), (Permutation (selsort bl a) al), (Permutation (selsort bl a) bl), (Permutation (selsort bl a) (a :: al)), (Permutation (selsort bl a) (a :: bl)), (Permutation (selsort bl a) (x :: al))
(Permutation (selsort bl a) (y :: al)), (Permutation (selsort bl a) (y :: bl)), (Permutation (selsort bl a) (selection_sort al)), (Permutation (selsort bl a) (selection_sort bl)), (Permutation (selsort bl a) (selsort al a)), (Permutation (selsort bl a) (selsort al x)), (Permutation (selsort bl a) (selsort al y)), (Permutation (selsort bl a) (selsort bl x)), (Permutation (selsort bl a) (selsort bl y)), (Permutation (selsort bl a) (al ++ al))
(Permutation (selsort bl a) (bl ++ al)), (Permutation (selsort bl a) (bl ++ bl)), (Permutation (selsort bl a) []), (Permutation (selsort bl x) al), (Permutation (selsort bl x) bl), (Permutation (selsort bl x) (a :: al)), (Permutation (selsort bl x) (a :: bl)), (Permutation (selsort bl x) (x :: al)), (Permutation (selsort bl x) (x :: bl)), (Permutation (selsort bl x) (y :: al))
(Permutation (selsort bl x) (selection_sort al)), (Permutation (selsort bl x) (selection_sort bl)), (Permutation (selsort bl x) (selsort al a)), (Permutation (selsort bl x) (selsort al x)), (Permutation (selsort bl x) (selsort al y)), (Permutation (selsort bl x) (selsort bl a)), (Permutation (selsort bl x) (selsort bl y)), (Permutation (selsort bl x) (al ++ al)), (Permutation (selsort bl x) (al ++ bl)), (Permutation (selsort bl x) (bl ++ al))
(Permutation (selsort bl x) []), (Permutation (selsort bl y) al), (Permutation (selsort bl y) bl), (Permutation (selsort bl y) (a :: al)), (Permutation (selsort bl y) (a :: bl)), (Permutation (selsort bl y) (x :: al)), (Permutation (selsort bl y) (x :: bl)), (Permutation (selsort bl y) (y :: al)), (Permutation (selsort bl y) (y :: bl)), (Permutation (selsort bl y) (selection_sort al))
(Permutation (selsort bl y) (selsort al a)), (Permutation (selsort bl y) (selsort al x)), (Permutation (selsort bl y) (selsort al y)), (Permutation (selsort bl y) (selsort bl a)), (Permutation (selsort bl y) (selsort bl x)), (Permutation (selsort bl y) (al ++ al)), (Permutation (selsort bl y) (al ++ bl)), (Permutation (selsort bl y) (bl ++ al)), (Permutation (selsort bl y) (bl ++ bl)), (Permutation (selsort bl y) [])
(Permutation (al ++ al) bl), (Permutation (al ++ al) (a :: al)), (Permutation (al ++ al) (a :: bl)), (Permutation (al ++ al) (x :: al)), (Permutation (al ++ al) (x :: bl)), (Permutation (al ++ al) (y :: al)), (Permutation (al ++ al) (y :: bl)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selection_sort bl)), (Permutation (al ++ al) (selsort al a))
(Permutation (al ++ al) (selsort al y)), (Permutation (al ++ al) (selsort bl a)), (Permutation (al ++ al) (selsort bl x)), (Permutation (al ++ al) (selsort bl y)), (Permutation (al ++ al) (al ++ bl)), (Permutation (al ++ al) (bl ++ al)), (Permutation (al ++ al) (bl ++ bl)), (Permutation (al ++ al) []), (Permutation (al ++ bl) al), (Permutation (al ++ bl) bl)
(Permutation (al ++ bl) (a :: bl)), (Permutation (al ++ bl) (x :: al)), (Permutation (al ++ bl) (x :: bl)), (Permutation (al ++ bl) (y :: al)), (Permutation (al ++ bl) (y :: bl)), (Permutation (al ++ bl) (selection_sort al)), (Permutation (al ++ bl) (selection_sort bl)), (Permutation (al ++ bl) (selsort al a)), (Permutation (al ++ bl) (selsort al x)), (Permutation (al ++ bl) (selsort al y))
(Permutation (al ++ bl) (selsort bl x)), (Permutation (al ++ bl) (selsort bl y)), (Permutation (al ++ bl) (al ++ al)), (Permutation (al ++ bl) (bl ++ al)), (Permutation (al ++ bl) (bl ++ bl)), (Permutation (al ++ bl) []), (Permutation (bl ++ al) al), (Permutation (bl ++ al) bl), (Permutation (bl ++ al) (a :: al)), (Permutation (bl ++ al) (a :: bl))
(Permutation (bl ++ al) (x :: bl)), (Permutation (bl ++ al) (y :: al)), (Permutation (bl ++ al) (y :: bl)), (Permutation (bl ++ al) (selection_sort al)), (Permutation (bl ++ al) (selection_sort bl)), (Permutation (bl ++ al) (selsort al a)), (Permutation (bl ++ al) (selsort al x)), (Permutation (bl ++ al) (selsort al y)), (Permutation (bl ++ al) (selsort bl a)), (Permutation (bl ++ al) (selsort bl x))
(Permutation (bl ++ al) (al ++ al)), (Permutation (bl ++ al) (al ++ bl)), (Permutation (bl ++ al) (bl ++ bl)), (Permutation (bl ++ al) []), (Permutation (bl ++ bl) al), (Permutation (bl ++ bl) bl), (Permutation (bl ++ bl) (a :: al)), (Permutation (bl ++ bl) (a :: bl)), (Permutation (bl ++ bl) (x :: al)), (Permutation (bl ++ bl) (x :: bl))
(Permutation (bl ++ bl) (y :: bl)), (Permutation (bl ++ bl) (selection_sort al)), (Permutation (bl ++ bl) (selection_sort bl)), (Permutation (bl ++ bl) (selsort al a)), (Permutation (bl ++ bl) (selsort al x)), (Permutation (bl ++ bl) (selsort al y)), (Permutation (bl ++ bl) (selsort bl a)), (Permutation (bl ++ bl) (selsort bl x)), (Permutation (bl ++ bl) (selsort bl y)), (Permutation (bl ++ bl) (al ++ al))
(Permutation (bl ++ bl) (bl ++ al)), (Permutation (bl ++ bl) []), (Permutation [] al), (Permutation [] bl), (Permutation [] (a :: al)), (Permutation [] (a :: bl)), (Permutation [] (x :: al)), (Permutation [] (x :: bl)), (Permutation [] (y :: al)), (Permutation [] (y :: bl))
(Permutation [] (selection_sort bl)), (Permutation [] (selsort al a)), (Permutation [] (selsort al x)), (Permutation [] (selsort al y)), (Permutation [] (selsort bl a)), (Permutation [] (selsort bl x)), (Permutation [] (selsort bl y)), (Permutation [] (al ++ al)), (Permutation [] (al ++ bl)), (Permutation [] (bl ++ al))
(In a al), (In a bl), (In a (a :: al)), (In a (a :: bl)), (In a (x :: al)), (In a (x :: bl)), (In a (y :: al)), (In a (y :: bl)), (In a (selection_sort al)), (In a (selection_sort bl))
(In a (selsort al x)), (In a (selsort al y)), (In a (selsort bl a)), (In a (selsort bl x)), (In a (selsort bl y)), (In a (al ++ al)), (In a (al ++ bl)), (In a (bl ++ al)), (In a (bl ++ bl)), (In x al)
(In x (a :: al)), (In x (a :: bl)), (In x (x :: al)), (In x (x :: bl)), (In x (y :: al)), (In x (y :: bl)), (In x (selection_sort al)), (In x (selection_sort bl)), (In x (selsort al a)), (In x (selsort al x))
(In x (selsort bl a)), (In x (selsort bl x)), (In x (selsort bl y)), (In x (al ++ al)), (In x (al ++ bl)), (In x (bl ++ al)), (In x (bl ++ bl)), (In y al), (In y bl), (In y (a :: al))
(In y (x :: al)), (In y (x :: bl)), (In y (y :: al)), (In y (y :: bl)), (In y (selection_sort al)), (In y (selection_sort bl)), (In y (selsort al a)), (In y (selsort al x)), (In y (selsort al y)), (In y (selsort bl a))
(In y (selsort bl y)), (In y (al ++ al)), (In y (al ++ bl)), (In y (bl ++ al)), (In y (bl ++ bl)), (In (length al) al), (In (length al) bl), (In (length al) (a :: al)), (In (length al) (a :: bl)), (In (length al) (x :: al))
(In (length al) (y :: al)), (In (length al) (y :: bl)), (In (length al) (selection_sort al)), (In (length al) (selection_sort bl)), (In (length al) (selsort al a)), (In (length al) (selsort al x)), (In (length al) (selsort al y)), (In (length al) (selsort bl a)), (In (length al) (selsort bl x)), (In (length al) (selsort bl y))
(In (length al) (al ++ bl)), (In (length al) (bl ++ al)), (In (length al) (bl ++ bl)), (In (length bl) al), (In (length bl) bl), (In (length bl) (a :: al)), (In (length bl) (a :: bl)), (In (length bl) (x :: al)), (In (length bl) (x :: bl)), (In (length bl) (y :: al))
(In (length bl) (selection_sort al)), (In (length bl) (selection_sort bl)), (In (length bl) (selsort al a)), (In (length bl) (selsort al x)), (In (length bl) (selsort al y)), (In (length bl) (selsort bl a)), (In (length bl) (selsort bl x)), (In (length bl) (selsort bl y)), (In (length bl) (al ++ al)), (In (length bl) (al ++ bl))
(In (length bl) (bl ++ bl)), (a < x), (a < y), (a < length al), (a < length bl), (x < a), (x < y), (x < length al), (x < length bl), (y < a)
(y < length al), (y < length bl), (length al < a), (length al < x), (length al < y), (length al < length bl), (length bl < a), (length bl < x), (length bl < y), (length bl < length al)
(a <= y), (a <= length al), (a <= length bl), (x <= a), (x <= y), (x <= length al), (x <= length bl), (y <= a), (y <= x), (y <= length al)
(length al <= a), (length al <= x), (length al <= y), (length al <= length bl), (length bl <= a), (length bl <= x), (length bl <= y), (length bl <= length al), (selection_sort al = al), (selection_sort al = bl)
(selection_sort al = al ++ bl), (selection_sort al = bl ++ al), (selection_sort al = bl ++ bl), (selection_sort bl = al), (selection_sort bl = bl), (selection_sort bl = al ++ al), (selection_sort bl = al ++ bl), (selection_sort bl = bl ++ al), (selection_sort bl = bl ++ bl), (selsort al a = al)
(selsort al a = selection_sort al), (selsort al a = selection_sort bl), (selsort al a = al ++ al), (selsort al a = al ++ bl), (selsort al a = bl ++ al), (selsort al a = bl ++ bl), (selsort al x = al), (selsort al x = bl), (selsort al x = selection_sort al), (selsort al x = selection_sort bl)
(selsort al x = al ++ bl), (selsort al x = bl ++ al), (selsort al x = bl ++ bl), (selsort al y = al), (selsort al y = bl), (selsort al y = selection_sort al), (selsort al y = selection_sort bl), (selsort al y = al ++ al), (selsort al y = al ++ bl), (selsort al y = bl ++ al)
(selsort bl a = al), (selsort bl a = bl), (selsort bl a = selection_sort al), (selsort bl a = selection_sort bl), (selsort bl a = al ++ al), (selsort bl a = al ++ bl), (selsort bl a = bl ++ al), (selsort bl a = bl ++ bl), (selsort bl x = al), (selsort bl x = bl)
(selsort bl x = selection_sort bl), (selsort bl x = al ++ al), (selsort bl x = al ++ bl), (selsort bl x = bl ++ al), (selsort bl x = bl ++ bl), (selsort bl y = al), (selsort bl y = bl), (selsort bl y = selection_sort al), (selsort bl y = selection_sort bl), (selsort bl y = al ++ al)
(selsort bl y = bl ++ al), (selsort bl y = bl ++ bl), (al ++ al = al), (al ++ al = bl), (al ++ bl = al), (al ++ bl = bl), (bl ++ al = al), (bl ++ al = bl), (bl ++ bl = al), (bl ++ bl = bl)
(length al = x), (length al = y), (length bl = a), (length bl = x), (length bl = y)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 1019.254 seconds


Label: 1 (0)
(Permutation (x :: gv2) (y :: bl)), (Permutation (y :: bl) (x :: gv2))

Label: 2 (1)
(Permutation gv1 (a :: bl)), (Permutation gv1 (y :: bl)), (Permutation (a :: bl) gv1), (Permutation (a :: bl) (selection_sort gv1)), (Permutation (a :: bl) (selsort gv1 a)), (Permutation (a :: bl) (selsort gv1 y)), (Permutation (a :: bl) (al ++ gv1)), (Permutation (a :: bl) (gv1 ++ al)), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (selection_sort gv1))
(Permutation (y :: bl) (selsort gv1 y)), (Permutation (y :: bl) (al ++ gv1)), (Permutation (y :: bl) (gv1 ++ al)), (Permutation (selection_sort gv1) (a :: bl)), (Permutation (selsort gv1 a) (a :: bl)), (Permutation (selsort gv1 a) (y :: bl)), (Permutation (selsort gv1 y) (y :: bl)), (Permutation (al ++ gv1) (a :: bl)), (Permutation (al ++ gv1) (y :: bl)), (Permutation (gv1 ++ al) (a :: bl))

Label: 2 (2)
(Permutation gv1 (a :: bl)), (Permutation gv1 (y :: bl)), (Permutation (x :: gv1) (gv1 ++ bl)), (Permutation (x :: gv1) (bl ++ gv1)), (Permutation (a :: bl) gv1), (Permutation (a :: bl) (selection_sort gv1)), (Permutation (a :: bl) (al ++ gv1)), (Permutation (a :: bl) (gv1 ++ al)), (Permutation (y :: bl) gv1), (Permutation (y :: bl) (selection_sort gv1))
(Permutation (y :: bl) (gv1 ++ al)), (Permutation (selection_sort gv1) (a :: bl)), (Permutation (al ++ gv1) (a :: bl)), (Permutation (al ++ gv1) (y :: bl)), (Permutation (gv1 ++ al) (a :: bl)), (Permutation (gv1 ++ al) (y :: bl)), (Permutation (gv1 ++ bl) (x :: gv1)), (Permutation (bl ++ gv1) (x :: gv1))

Label: 3 (3)
(Permutation bl (x :: al)), (Permutation (x :: al) bl), (Permutation (x :: al) (selection_sort bl))


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 1227.463 seconds

Number of Lemmas Returned: 21

(select x gv2 = (y, bl) -> Permutation (y :: bl) (x :: gv2))
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  gv1 = x :: a :: al -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  gv1 = x :: a :: al -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) (gv1 ++ al) ->  gv1 = x :: a :: al -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) gv1 ->  Permutation (y :: bl) (gv1 ++ al) -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  Permutation (y :: bl) (selsort gv1 y) -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) (gv1 ++ al) ->  Permutation (y :: bl) (selsort gv1 y) -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) gv1 ->  Permutation (y :: bl) (selsort gv1 y) -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (y :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  Permutation (y :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) (gv1 ++ al) ->  Permutation (y :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
(Permutation (x :: gv1) (gv1 ++ bl) ->  Permutation (y :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
(Permutation (a :: bl) gv1 ->  Permutation (y :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (a :: bl) (gv1 ++ al) -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (a :: bl) (selsort gv1 y) -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  Permutation (a :: bl) (selsort gv1 y) -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (a :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  Permutation (a :: bl) (selsort gv1 a) -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (a :: bl) gv1 -> Permutation (y :: bl) gv1)
(Permutation (y :: bl) (gv1 ++ al) ->  Permutation (a :: bl) gv1 -> Permutation (y :: bl) gv1)
((let (j, l') := select a al in (j, x :: l')) = (y, bl) ->  Permutation (y :: bl) (x :: a :: al))