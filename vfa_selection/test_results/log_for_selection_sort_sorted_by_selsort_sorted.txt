Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 

----------------------------------
Goal: (sorted (selsort al (length al)))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : nat = (length al)
gv0 : (list nat) = (selsort al (length al))


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 23.352 seconds

Label: Generalization #0
Assumptions: 
 -- (gv0 = selsort al (length al))

----------------------------------
Goal: (sorted gv0)
Case: 3

Label: Generalization #1
Assumptions: 
 -- (gv1 = length al)

----------------------------------
Goal: (sorted (selsort al gv1))
Case: 1

Label: Generalization #2
Assumptions: 

----------------------------------
Goal: (sorted (selsort al (length al)))
Case: 1



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 23.754 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (gv0 = selsort al (length al))
Positive Examples:
   [al := [2; 0]; gv0 := [0; 2]]
   [al := [6]; gv0 := [6]]
   [al := [1; 2]; gv0 := [1; 2]]
   [al := [1; 0]; gv0 := [0; 1]]
   [al := [1; 4]; gv0 := [1; 4]]
   [al := [1; 1]; gv0 := [1; 1]]
   [al := [0; 0]; gv0 := [0; 0]]
   [al := [0; 2; 2]; gv0 := [0; 2; 2]]
   [al := [5]; gv0 := [5]]
   [al := [0; 2]; gv0 := [0; 2]]
   etc ...

Negative Examples:
   [al := [4; 0; 5; 0; 4; 5]; gv0 := [1; 6; 3]]
   [al := [0; 0; 1; 5; 2]; gv0 := [4; 5; 4; 2]]
   [al := [3; 3]; gv0 := [2; 0; 5; 3; 1]]
   [al := [5; 2]; gv0 := [1; 5; 0; 0]]
   [al := [3; 0; 0; 0]; gv0 := [4; 1]]
   [al := [3; 4; 1]; gv0 := [3; 1; 1]]
   [al := [4; 6]; gv0 := [3; 5; 3; 1; 5]]
   [al := []; gv0 := [5; 3; 6; 6; 4; 3]]
   [al := [1]; gv0 := [3; 1; 4]]
   [al := [0; 5; 3; 6; 2]; gv0 := [5; 3]]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 24.361 seconds


Label: 0 (0)
(false = sorted_bool gv0), (true = sorted_bool gv0), (sorted gv0), (sorted (selection_sort gv0)), (Permutation al gv0), (Permutation al (selection_sort gv0)), (Permutation gv0 al), (Permutation gv0 (selection_sort al)), (Permutation gv0 (selection_sort gv0)), (Permutation (selection_sort al) gv0)
(Permutation (selection_sort gv0) al), (Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (selection_sort al)), (selection_sort al = gv0), (selection_sort gv0 = al), (selection_sort gv0 = gv0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 55.13 seconds


Label: 0 (0)
(true = sorted_bool gv0), (sorted gv0), (Permutation al gv0), (Permutation al (selection_sort gv0)), (Permutation gv0 al), (Permutation gv0 (selection_sort al)), (Permutation (selection_sort al) gv0), (Permutation (selection_sort al) (selection_sort gv0)), (Permutation (selection_sort gv0) al), (Permutation (selection_sort gv0) (selection_sort al))
(selection_sort gv0 = gv0)


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 84.319 seconds

Number of Lemmas Returned: 2

(selection_sort al = gv0 -> sorted gv0)
(gv0 = selsort al (length al) -> sorted gv0)