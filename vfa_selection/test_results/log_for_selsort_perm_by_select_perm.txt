Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (select n0 l = (n1, l0))
 -- (forall l : list nat, length l = n -> Permutation l (selsort l n))
 -- (length (n0 :: l) = S n)

----------------------------------
Goal: (Permutation (n0 :: l) (n1 :: l0))


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv1 : (list nat) = (n1 :: l0)
gv0 : (list nat) = (n0 :: l)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 75.008 seconds

Label: Generalization #0
Assumptions: 
 -- (gv0 = n0 :: l)
 -- (select n0 l = (n1, l0))

----------------------------------
Goal: (Permutation gv0 (n1 :: l0))
Case: 3

Label: Generalization #1
Assumptions: 
 -- (gv1 = n1 :: l0)
 -- (select n0 l = (n1, l0))

----------------------------------
Goal: (Permutation (n0 :: l) gv1)
Case: 3

Label: Generalization #2
Assumptions: 
 -- (select n0 l = (n1, l0))

----------------------------------
Goal: (Permutation (n0 :: l) (n1 :: l0))
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 75.92 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: (gv0 = n0 :: l)
Positive Examples:
   [gv0 := [3]; l := []; l0 := []; n0 := 3; n1 := 3]
   [gv0 := [0]; l := []; l0 := []; n0 := 0; n1 := 0]
   [gv0 := [2]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv0 := [1]; l := []; l0 := []; n0 := 1; n1 := 1]

Negative Examples:
   [gv0 := [2; 1]; l := []; l0 := []; n0 := 3; n1 := 3]
   [gv0 := [1; 0]; l := [0]; l0 := [2]; n0 := 2; n1 := 0]
   [gv0 := [2]; l := [1; 3]; l0 := [2; 3]; n0 := 2; n1 := 1]
   [gv0 := [0; 2; 4; 4]; l := []; l0 := []; n0 := 3; n1 := 3]
   [gv0 := [1; 3]; l := [3]; l0 := [3]; n0 := 0; n1 := 0]
   [gv0 := [2; 1]; l := [3]; l0 := [3]; n0 := 0; n1 := 0]
   [gv0 := [1; 0]; l := [2; 0]; l0 := [2; 1]; n0 := 1; n1 := 0]
   [gv0 := []; l := [4]; l0 := [5]; n0 := 5; n1 := 4]
   [gv0 := [4]; l := []; l0 := []; n0 := 1; n1 := 1]
   [gv0 := []; l := [2]; l0 := [2]; n0 := 2; n1 := 2]
   etc ...


Label: 0 (1)
Abducted Assumption: (select n0 l = (n1, l0))
Positive Examples:
   [gv0 := [3]; l := []; l0 := []; n0 := 3; n1 := 3]
   [gv0 := [0]; l := []; l0 := []; n0 := 0; n1 := 0]
   [gv0 := [2]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv0 := [1]; l := []; l0 := []; n0 := 1; n1 := 1]

Negative Examples:
   [gv0 := [0]; l := []; l0 := [1; 0]; n0 := 0; n1 := 2]
   [gv0 := [2]; l := []; l0 := [4; 2]; n0 := 2; n1 := 2]
   [gv0 := [0; 0]; l := [0]; l0 := [1; 3; 0]; n0 := 0; n1 := 1]
   [gv0 := [5]; l := []; l0 := [3; 3; 5]; n0 := 5; n1 := 2]
   [gv0 := [2]; l := []; l0 := [2; 5; 0; 1]; n0 := 2; n1 := 4]
   [gv0 := [4]; l := []; l0 := [4; 4]; n0 := 4; n1 := 0]
   [gv0 := [1]; l := []; l0 := [0; 0]; n0 := 1; n1 := 2]
   [gv0 := [3]; l := []; l0 := [2; 1; 4; 0; 5; 0]; n0 := 3; n1 := 1]
   [gv0 := [0]; l := []; l0 := [0]; n0 := 0; n1 := 2]
   [gv0 := [3]; l := []; l0 := [2; 0]; n0 := 3; n1 := 2]
   etc ...


Label: 1 (2)
Abducted Assumption: (gv1 = n1 :: l0)
Positive Examples:
   [gv1 := [4]; l := []; l0 := []; n0 := 4; n1 := 4]
   [gv1 := [2]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [0]; l := []; l0 := []; n0 := 0; n1 := 0]
   [gv1 := [1]; l := []; l0 := []; n0 := 1; n1 := 1]

Negative Examples:
   [gv1 := [2; 0]; l := [2]; l0 := [2]; n0 := 1; n1 := 1]
   [gv1 := [0; 0]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [3]; l := []; l0 := []; n0 := 4; n1 := 4]
   [gv1 := [3]; l := []; l0 := []; n0 := 0; n1 := 0]
   [gv1 := [1]; l := [2; 0]; l0 := [2; 2]; n0 := 2; n1 := 0]
   [gv1 := [1; 2]; l := []; l0 := []; n0 := 1; n1 := 1]
   [gv1 := [1; 1; 0]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [1; 0]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [0]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [4]; l := []; l0 := []; n0 := 2; n1 := 2]
   etc ...


Label: 1 (3)
Abducted Assumption: (select n0 l = (n1, l0))
Positive Examples:
   [gv1 := [4]; l := []; l0 := []; n0 := 4; n1 := 4]
   [gv1 := [2]; l := []; l0 := []; n0 := 2; n1 := 2]
   [gv1 := [0]; l := []; l0 := []; n0 := 0; n1 := 0]
   [gv1 := [1]; l := []; l0 := []; n0 := 1; n1 := 1]

Negative Examples:
   [gv1 := [2]; l := [0]; l0 := []; n0 := 1; n1 := 2]
   [gv1 := [0]; l := [2; 1; 0]; l0 := []; n0 := 2; n1 := 0]
   [gv1 := [0; 2]; l := [0]; l0 := [2]; n0 := 1; n1 := 0]
   [gv1 := [1]; l := [0; 4; 3]; l0 := []; n0 := 2; n1 := 1]
   [gv1 := [2]; l := [3; 4]; l0 := []; n0 := 4; n1 := 2]
   [gv1 := [1; 1]; l := []; l0 := [1]; n0 := 1; n1 := 1]
   [gv1 := [1; 1]; l := [0; 0]; l0 := [1]; n0 := 1; n1 := 1]
   [gv1 := [0]; l := [2; 1; 0]; l0 := []; n0 := 4; n1 := 0]
   [gv1 := [1]; l := [1; 2]; l0 := []; n0 := 1; n1 := 1]
   [gv1 := [2]; l := [4; 3]; l0 := []; n0 := 2; n1 := 2]
   etc ...


Label: 2 (4)
Abducted Assumption: (select n0 l = (n1, l0))
Positive Examples:
   [l := [0; 2]; l0 := [0; 2]; n0 := 0; n1 := 0]
   [l := [3]; l0 := [3]; n0 := 1; n1 := 1]
   [l := [2]; l0 := [2]; n0 := 2; n1 := 2]
   [l := [2; 0]; l0 := [2; 1]; n0 := 1; n1 := 0]
   [l := [1; 2]; l0 := [1; 2]; n0 := 0; n1 := 0]
   [l := [1; 0]; l0 := [1; 1]; n0 := 1; n1 := 0]
   [l := []; l0 := []; n0 := 4; n1 := 4]
   [l := [2]; l0 := [3]; n0 := 3; n1 := 2]
   [l := [1]; l0 := [2]; n0 := 2; n1 := 1]
   [l := []; l0 := []; n0 := 2; n1 := 2]
   etc ...

Negative Examples:
   [l := [1; 0; 2; 0]; l0 := [4; 2; 2]; n0 := 1; n1 := 4]
   [l := [2]; l0 := [1; 0]; n0 := 1; n1 := 2]
   [l := [3; 2; 2]; l0 := [2; 2; 5; 3]; n0 := 4; n1 := 2]
   [l := [5]; l0 := [4; 3; 0; 0]; n0 := 0; n1 := 2]
   [l := [3; 1]; l0 := [2; 1; 2; 0]; n0 := 3; n1 := 1]
   [l := [1; 0; 0]; l0 := [0; 2]; n0 := 0; n1 := 1]
   [l := []; l0 := [4; 1]; n0 := 1; n1 := 2]
   [l := [3; 2]; l0 := [2; 3; 5; 3; 5]; n0 := 1; n1 := 0]
   [l := []; l0 := [2; 4; 3]; n0 := 4; n1 := 4]
   [l := [3; 1]; l0 := [2; 0]; n0 := 1; n1 := 2]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 77.044 seconds


Label: 0 (0)
(false = sorted_bool gv0), (true = sorted_bool gv0), (n0 <=* gv0), (n0 <=* n0 :: gv0), (n0 <=* n1 :: gv0), (n0 <=* selection_sort gv0), (n0 <=* selsort gv0 n0), (n0 <=* selsort gv0 n1), (n0 <=* l ++ gv0), (n0 <=* l0 ++ gv0)
(n0 <=* gv0 ++ l0), (n0 <=* gv0 ++ gv0), (n1 <=* gv0), (n1 <=* n0 :: gv0), (n1 <=* n1 :: gv0), (n1 <=* selection_sort gv0), (n1 <=* selsort gv0 n0), (n1 <=* selsort gv0 n1), (n1 <=* l ++ gv0), (n1 <=* l0 ++ gv0)
(n1 <=* gv0 ++ l0), (n1 <=* gv0 ++ gv0), (length l <=* gv0), (length l <=* n0 :: gv0), (length l <=* n1 :: gv0), (length l <=* selection_sort gv0), (length l <=* selsort gv0 n0), (length l <=* selsort gv0 n1), (length l <=* l ++ gv0), (length l <=* l0 ++ gv0)
(length l <=* gv0 ++ l0), (length l <=* gv0 ++ gv0), (length l0 <=* gv0), (length l0 <=* n0 :: gv0), (length l0 <=* n1 :: gv0), (length l0 <=* selection_sort gv0), (length l0 <=* selsort gv0 n0), (length l0 <=* selsort gv0 n1), (length l0 <=* l ++ gv0), (length l0 <=* l0 ++ gv0)
(length l0 <=* gv0 ++ l0), (length l0 <=* gv0 ++ gv0), (length gv0 <=* l), (length gv0 <=* l0), (length gv0 <=* gv0), (length gv0 <=* n0 :: l), (length gv0 <=* n0 :: l0), (length gv0 <=* n0 :: gv0), (length gv0 <=* n1 :: l), (length gv0 <=* n1 :: l0)
(length gv0 <=* selection_sort l), (length gv0 <=* selection_sort l0), (length gv0 <=* selection_sort gv0), (length gv0 <=* selsort l n0), (length gv0 <=* selsort l n1), (length gv0 <=* selsort l0 n0), (length gv0 <=* selsort l0 n1), (length gv0 <=* selsort gv0 n0), (length gv0 <=* selsort gv0 n1), (length gv0 <=* l ++ l)
(length gv0 <=* l ++ gv0), (length gv0 <=* l0 ++ l), (length gv0 <=* l0 ++ l0), (length gv0 <=* l0 ++ gv0), (length gv0 <=* gv0 ++ l), (length gv0 <=* gv0 ++ l0), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted gv0), (sorted (n0 :: gv0))
(sorted (selection_sort gv0)), (sorted (selsort gv0 n0)), (sorted (selsort gv0 n1)), (sorted (l ++ gv0)), (sorted (l0 ++ gv0)), (sorted (gv0 ++ l)), (sorted (gv0 ++ l0)), (sorted (gv0 ++ gv0)), (Permutation l gv0), (Permutation l (n0 :: gv0))
(Permutation l (selection_sort gv0)), (Permutation l (selsort gv0 n0)), (Permutation l (selsort gv0 n1)), (Permutation l (l ++ gv0)), (Permutation l (l0 ++ gv0)), (Permutation l (gv0 ++ l)), (Permutation l (gv0 ++ l0)), (Permutation l (gv0 ++ gv0)), (Permutation l0 gv0), (Permutation l0 (n0 :: gv0))
(Permutation l0 (selection_sort gv0)), (Permutation l0 (selsort gv0 n0)), (Permutation l0 (selsort gv0 n1)), (Permutation l0 (l ++ gv0)), (Permutation l0 (l0 ++ gv0)), (Permutation l0 (gv0 ++ l)), (Permutation l0 (gv0 ++ l0)), (Permutation l0 (gv0 ++ gv0)), (Permutation gv0 l), (Permutation gv0 l0)
(Permutation gv0 (n0 :: l0)), (Permutation gv0 (n0 :: gv0)), (Permutation gv0 (n1 :: l)), (Permutation gv0 (n1 :: l0)), (Permutation gv0 (n1 :: gv0)), (Permutation gv0 (selection_sort l)), (Permutation gv0 (selection_sort l0)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (selsort l n0)), (Permutation gv0 (selsort l n1))
(Permutation gv0 (selsort l0 n1)), (Permutation gv0 (selsort gv0 n0)), (Permutation gv0 (selsort gv0 n1)), (Permutation gv0 (l ++ l)), (Permutation gv0 (l ++ l0)), (Permutation gv0 (l ++ gv0)), (Permutation gv0 (l0 ++ l)), (Permutation gv0 (l0 ++ l0)), (Permutation gv0 (l0 ++ gv0)), (Permutation gv0 (gv0 ++ l))
(Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (n0 :: gv0)), (Permutation (n0 :: l) (n1 :: gv0)), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l) (selsort gv0 n0)), (Permutation (n0 :: l) (selsort gv0 n1)), (Permutation (n0 :: l) (l ++ gv0)), (Permutation (n0 :: l) (l0 ++ gv0))
(Permutation (n0 :: l) (gv0 ++ l0)), (Permutation (n0 :: l) (gv0 ++ gv0)), (Permutation (n0 :: l0) gv0), (Permutation (n0 :: l0) (n0 :: gv0)), (Permutation (n0 :: l0) (n1 :: gv0)), (Permutation (n0 :: l0) (selection_sort gv0)), (Permutation (n0 :: l0) (selsort gv0 n0)), (Permutation (n0 :: l0) (selsort gv0 n1)), (Permutation (n0 :: l0) (l ++ gv0)), (Permutation (n0 :: l0) (l0 ++ gv0))
(Permutation (n0 :: l0) (gv0 ++ l0)), (Permutation (n0 :: l0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) l), (Permutation (n0 :: gv0) l0), (Permutation (n0 :: gv0) gv0), (Permutation (n0 :: gv0) (n0 :: l)), (Permutation (n0 :: gv0) (n0 :: l0)), (Permutation (n0 :: gv0) (n1 :: l)), (Permutation (n0 :: gv0) (n1 :: l0)), (Permutation (n0 :: gv0) (n1 :: gv0))
(Permutation (n0 :: gv0) (selection_sort l0)), (Permutation (n0 :: gv0) (selection_sort gv0)), (Permutation (n0 :: gv0) (selsort l n0)), (Permutation (n0 :: gv0) (selsort l n1)), (Permutation (n0 :: gv0) (selsort l0 n0)), (Permutation (n0 :: gv0) (selsort l0 n1)), (Permutation (n0 :: gv0) (selsort gv0 n0)), (Permutation (n0 :: gv0) (selsort gv0 n1)), (Permutation (n0 :: gv0) (l ++ l)), (Permutation (n0 :: gv0) (l ++ l0))
(Permutation (n0 :: gv0) (l0 ++ l)), (Permutation (n0 :: gv0) (l0 ++ l0)), (Permutation (n0 :: gv0) (l0 ++ gv0)), (Permutation (n0 :: gv0) (gv0 ++ l)), (Permutation (n0 :: gv0) (gv0 ++ l0)), (Permutation (n0 :: gv0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) []), (Permutation (n1 :: l) gv0), (Permutation (n1 :: l) (n0 :: gv0)), (Permutation (n1 :: l) (n1 :: gv0))
(Permutation (n1 :: l) (selsort gv0 n0)), (Permutation (n1 :: l) (selsort gv0 n1)), (Permutation (n1 :: l) (l ++ gv0)), (Permutation (n1 :: l) (l0 ++ gv0)), (Permutation (n1 :: l) (gv0 ++ l)), (Permutation (n1 :: l) (gv0 ++ l0)), (Permutation (n1 :: l) (gv0 ++ gv0)), (Permutation (n1 :: l0) gv0), (Permutation (n1 :: l0) (n0 :: gv0)), (Permutation (n1 :: l0) (n1 :: gv0))
(Permutation (n1 :: l0) (selsort gv0 n0)), (Permutation (n1 :: l0) (selsort gv0 n1)), (Permutation (n1 :: l0) (l ++ gv0)), (Permutation (n1 :: l0) (l0 ++ gv0)), (Permutation (n1 :: l0) (gv0 ++ l)), (Permutation (n1 :: l0) (gv0 ++ l0)), (Permutation (n1 :: l0) (gv0 ++ gv0)), (Permutation (n1 :: gv0) l), (Permutation (n1 :: gv0) l0), (Permutation (n1 :: gv0) gv0)
(Permutation (n1 :: gv0) (n0 :: l0)), (Permutation (n1 :: gv0) (n0 :: gv0)), (Permutation (n1 :: gv0) (n1 :: l)), (Permutation (n1 :: gv0) (n1 :: l0)), (Permutation (n1 :: gv0) (selection_sort l)), (Permutation (n1 :: gv0) (selection_sort l0)), (Permutation (n1 :: gv0) (selection_sort gv0)), (Permutation (n1 :: gv0) (selsort l n0)), (Permutation (n1 :: gv0) (selsort l n1)), (Permutation (n1 :: gv0) (selsort l0 n0))
(Permutation (n1 :: gv0) (selsort gv0 n0)), (Permutation (n1 :: gv0) (selsort gv0 n1)), (Permutation (n1 :: gv0) (l ++ l)), (Permutation (n1 :: gv0) (l ++ l0)), (Permutation (n1 :: gv0) (l ++ gv0)), (Permutation (n1 :: gv0) (l0 ++ l)), (Permutation (n1 :: gv0) (l0 ++ l0)), (Permutation (n1 :: gv0) (l0 ++ gv0)), (Permutation (n1 :: gv0) (gv0 ++ l)), (Permutation (n1 :: gv0) (gv0 ++ l0))
(Permutation (n1 :: gv0) []), (Permutation (selection_sort l) gv0), (Permutation (selection_sort l) (n0 :: gv0)), (Permutation (selection_sort l) (n1 :: gv0)), (Permutation (selection_sort l) (selection_sort gv0)), (Permutation (selection_sort l) (selsort gv0 n0)), (Permutation (selection_sort l) (selsort gv0 n1)), (Permutation (selection_sort l) (l ++ gv0)), (Permutation (selection_sort l) (l0 ++ gv0)), (Permutation (selection_sort l) (gv0 ++ l))
(Permutation (selection_sort l) (gv0 ++ gv0)), (Permutation (selection_sort l0) gv0), (Permutation (selection_sort l0) (n0 :: gv0)), (Permutation (selection_sort l0) (n1 :: gv0)), (Permutation (selection_sort l0) (selection_sort gv0)), (Permutation (selection_sort l0) (selsort gv0 n0)), (Permutation (selection_sort l0) (selsort gv0 n1)), (Permutation (selection_sort l0) (l ++ gv0)), (Permutation (selection_sort l0) (l0 ++ gv0)), (Permutation (selection_sort l0) (gv0 ++ l))
(Permutation (selection_sort l0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) l), (Permutation (selection_sort gv0) l0), (Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (n0 :: l)), (Permutation (selection_sort gv0) (n0 :: l0)), (Permutation (selection_sort gv0) (n0 :: gv0)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: l0)), (Permutation (selection_sort gv0) (n1 :: gv0))
(Permutation (selection_sort gv0) (selection_sort l0)), (Permutation (selection_sort gv0) (selsort l n0)), (Permutation (selection_sort gv0) (selsort l n1)), (Permutation (selection_sort gv0) (selsort l0 n0)), (Permutation (selection_sort gv0) (selsort l0 n1)), (Permutation (selection_sort gv0) (selsort gv0 n0)), (Permutation (selection_sort gv0) (selsort gv0 n1)), (Permutation (selection_sort gv0) (l ++ l)), (Permutation (selection_sort gv0) (l ++ l0)), (Permutation (selection_sort gv0) (l ++ gv0))
(Permutation (selection_sort gv0) (l0 ++ l0)), (Permutation (selection_sort gv0) (l0 ++ gv0)), (Permutation (selection_sort gv0) (gv0 ++ l)), (Permutation (selection_sort gv0) (gv0 ++ l0)), (Permutation (selection_sort gv0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) []), (Permutation (selsort l n0) gv0), (Permutation (selsort l n0) (n0 :: gv0)), (Permutation (selsort l n0) (n1 :: gv0)), (Permutation (selsort l n0) (selection_sort gv0))
(Permutation (selsort l n0) (selsort gv0 n1)), (Permutation (selsort l n0) (l ++ gv0)), (Permutation (selsort l n0) (l0 ++ gv0)), (Permutation (selsort l n0) (gv0 ++ l)), (Permutation (selsort l n0) (gv0 ++ l0)), (Permutation (selsort l n0) (gv0 ++ gv0)), (Permutation (selsort l n1) gv0), (Permutation (selsort l n1) (n0 :: gv0)), (Permutation (selsort l n1) (n1 :: gv0)), (Permutation (selsort l n1) (selection_sort gv0))
(Permutation (selsort l n1) (selsort gv0 n1)), (Permutation (selsort l n1) (l ++ gv0)), (Permutation (selsort l n1) (l0 ++ gv0)), (Permutation (selsort l n1) (gv0 ++ l)), (Permutation (selsort l n1) (gv0 ++ l0)), (Permutation (selsort l n1) (gv0 ++ gv0)), (Permutation (selsort l0 n0) gv0), (Permutation (selsort l0 n0) (n0 :: gv0)), (Permutation (selsort l0 n0) (n1 :: gv0)), (Permutation (selsort l0 n0) (selection_sort gv0))
(Permutation (selsort l0 n0) (selsort gv0 n1)), (Permutation (selsort l0 n0) (l ++ gv0)), (Permutation (selsort l0 n0) (l0 ++ gv0)), (Permutation (selsort l0 n0) (gv0 ++ l)), (Permutation (selsort l0 n0) (gv0 ++ l0)), (Permutation (selsort l0 n0) (gv0 ++ gv0)), (Permutation (selsort l0 n1) gv0), (Permutation (selsort l0 n1) (n0 :: gv0)), (Permutation (selsort l0 n1) (n1 :: gv0)), (Permutation (selsort l0 n1) (selection_sort gv0))
(Permutation (selsort l0 n1) (selsort gv0 n1)), (Permutation (selsort l0 n1) (l ++ gv0)), (Permutation (selsort l0 n1) (l0 ++ gv0)), (Permutation (selsort l0 n1) (gv0 ++ l)), (Permutation (selsort l0 n1) (gv0 ++ l0)), (Permutation (selsort l0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n0) l), (Permutation (selsort gv0 n0) l0), (Permutation (selsort gv0 n0) gv0), (Permutation (selsort gv0 n0) (n0 :: l))
(Permutation (selsort gv0 n0) (n0 :: gv0)), (Permutation (selsort gv0 n0) (n1 :: l)), (Permutation (selsort gv0 n0) (n1 :: l0)), (Permutation (selsort gv0 n0) (n1 :: gv0)), (Permutation (selsort gv0 n0) (selection_sort l)), (Permutation (selsort gv0 n0) (selection_sort l0)), (Permutation (selsort gv0 n0) (selection_sort gv0)), (Permutation (selsort gv0 n0) (selsort l n0)), (Permutation (selsort gv0 n0) (selsort l n1)), (Permutation (selsort gv0 n0) (selsort l0 n0))
(Permutation (selsort gv0 n0) (selsort gv0 n1)), (Permutation (selsort gv0 n0) (l ++ l)), (Permutation (selsort gv0 n0) (l ++ l0)), (Permutation (selsort gv0 n0) (l ++ gv0)), (Permutation (selsort gv0 n0) (l0 ++ l)), (Permutation (selsort gv0 n0) (l0 ++ l0)), (Permutation (selsort gv0 n0) (l0 ++ gv0)), (Permutation (selsort gv0 n0) (gv0 ++ l)), (Permutation (selsort gv0 n0) (gv0 ++ l0)), (Permutation (selsort gv0 n0) (gv0 ++ gv0))
(Permutation (selsort gv0 n1) l), (Permutation (selsort gv0 n1) l0), (Permutation (selsort gv0 n1) gv0), (Permutation (selsort gv0 n1) (n0 :: l)), (Permutation (selsort gv0 n1) (n0 :: l0)), (Permutation (selsort gv0 n1) (n0 :: gv0)), (Permutation (selsort gv0 n1) (n1 :: l)), (Permutation (selsort gv0 n1) (n1 :: l0)), (Permutation (selsort gv0 n1) (n1 :: gv0)), (Permutation (selsort gv0 n1) (selection_sort l))
(Permutation (selsort gv0 n1) (selection_sort gv0)), (Permutation (selsort gv0 n1) (selsort l n0)), (Permutation (selsort gv0 n1) (selsort l n1)), (Permutation (selsort gv0 n1) (selsort l0 n0)), (Permutation (selsort gv0 n1) (selsort l0 n1)), (Permutation (selsort gv0 n1) (selsort gv0 n0)), (Permutation (selsort gv0 n1) (l ++ l)), (Permutation (selsort gv0 n1) (l ++ l0)), (Permutation (selsort gv0 n1) (l ++ gv0)), (Permutation (selsort gv0 n1) (l0 ++ l))
(Permutation (selsort gv0 n1) (l0 ++ gv0)), (Permutation (selsort gv0 n1) (gv0 ++ l)), (Permutation (selsort gv0 n1) (gv0 ++ l0)), (Permutation (selsort gv0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n1) []), (Permutation (l ++ l) gv0), (Permutation (l ++ l) (n0 :: gv0)), (Permutation (l ++ l) (n1 :: gv0)), (Permutation (l ++ l) (selection_sort gv0)), (Permutation (l ++ l) (selsort gv0 n0))
(Permutation (l ++ l) (l ++ gv0)), (Permutation (l ++ l) (l0 ++ gv0)), (Permutation (l ++ l) (gv0 ++ l)), (Permutation (l ++ l) (gv0 ++ l0)), (Permutation (l ++ l) (gv0 ++ gv0)), (Permutation (l ++ l0) gv0), (Permutation (l ++ l0) (n0 :: gv0)), (Permutation (l ++ l0) (n1 :: gv0)), (Permutation (l ++ l0) (selection_sort gv0)), (Permutation (l ++ l0) (selsort gv0 n0))
(Permutation (l ++ l0) (l ++ gv0)), (Permutation (l ++ l0) (l0 ++ gv0)), (Permutation (l ++ l0) (gv0 ++ l)), (Permutation (l ++ l0) (gv0 ++ l0)), (Permutation (l ++ l0) (gv0 ++ gv0)), (Permutation (l ++ gv0) l), (Permutation (l ++ gv0) l0), (Permutation (l ++ gv0) gv0), (Permutation (l ++ gv0) (n0 :: l)), (Permutation (l ++ gv0) (n0 :: l0))
(Permutation (l ++ gv0) (n1 :: l)), (Permutation (l ++ gv0) (n1 :: l0)), (Permutation (l ++ gv0) (n1 :: gv0)), (Permutation (l ++ gv0) (selection_sort l)), (Permutation (l ++ gv0) (selection_sort l0)), (Permutation (l ++ gv0) (selection_sort gv0)), (Permutation (l ++ gv0) (selsort l n0)), (Permutation (l ++ gv0) (selsort l n1)), (Permutation (l ++ gv0) (selsort l0 n0)), (Permutation (l ++ gv0) (selsort l0 n1))
(Permutation (l ++ gv0) (selsort gv0 n1)), (Permutation (l ++ gv0) (l ++ l)), (Permutation (l ++ gv0) (l ++ l0)), (Permutation (l ++ gv0) (l0 ++ l)), (Permutation (l ++ gv0) (l0 ++ l0)), (Permutation (l ++ gv0) (l0 ++ gv0)), (Permutation (l ++ gv0) (gv0 ++ l)), (Permutation (l ++ gv0) (gv0 ++ l0)), (Permutation (l ++ gv0) (gv0 ++ gv0)), (Permutation (l ++ gv0) [])
(Permutation (l0 ++ l) (n0 :: gv0)), (Permutation (l0 ++ l) (n1 :: gv0)), (Permutation (l0 ++ l) (selection_sort gv0)), (Permutation (l0 ++ l) (selsort gv0 n0)), (Permutation (l0 ++ l) (selsort gv0 n1)), (Permutation (l0 ++ l) (l ++ gv0)), (Permutation (l0 ++ l) (l0 ++ gv0)), (Permutation (l0 ++ l) (gv0 ++ l)), (Permutation (l0 ++ l) (gv0 ++ l0)), (Permutation (l0 ++ l) (gv0 ++ gv0))
(Permutation (l0 ++ l0) (n0 :: gv0)), (Permutation (l0 ++ l0) (n1 :: gv0)), (Permutation (l0 ++ l0) (selection_sort gv0)), (Permutation (l0 ++ l0) (selsort gv0 n0)), (Permutation (l0 ++ l0) (selsort gv0 n1)), (Permutation (l0 ++ l0) (l ++ gv0)), (Permutation (l0 ++ l0) (l0 ++ gv0)), (Permutation (l0 ++ l0) (gv0 ++ l)), (Permutation (l0 ++ l0) (gv0 ++ l0)), (Permutation (l0 ++ l0) (gv0 ++ gv0))
(Permutation (l0 ++ gv0) l0), (Permutation (l0 ++ gv0) gv0), (Permutation (l0 ++ gv0) (n0 :: l)), (Permutation (l0 ++ gv0) (n0 :: l0)), (Permutation (l0 ++ gv0) (n0 :: gv0)), (Permutation (l0 ++ gv0) (n1 :: l)), (Permutation (l0 ++ gv0) (n1 :: l0)), (Permutation (l0 ++ gv0) (n1 :: gv0)), (Permutation (l0 ++ gv0) (selection_sort l)), (Permutation (l0 ++ gv0) (selection_sort l0))
(Permutation (l0 ++ gv0) (selsort l n0)), (Permutation (l0 ++ gv0) (selsort l n1)), (Permutation (l0 ++ gv0) (selsort l0 n0)), (Permutation (l0 ++ gv0) (selsort l0 n1)), (Permutation (l0 ++ gv0) (selsort gv0 n0)), (Permutation (l0 ++ gv0) (selsort gv0 n1)), (Permutation (l0 ++ gv0) (l ++ l)), (Permutation (l0 ++ gv0) (l ++ l0)), (Permutation (l0 ++ gv0) (l ++ gv0)), (Permutation (l0 ++ gv0) (l0 ++ l))
(Permutation (l0 ++ gv0) (gv0 ++ l)), (Permutation (l0 ++ gv0) (gv0 ++ l0)), (Permutation (l0 ++ gv0) (gv0 ++ gv0)), (Permutation (l0 ++ gv0) []), (Permutation (gv0 ++ l) l), (Permutation (gv0 ++ l) l0), (Permutation (gv0 ++ l) gv0), (Permutation (gv0 ++ l) (n0 :: l)), (Permutation (gv0 ++ l) (n0 :: l0)), (Permutation (gv0 ++ l) (n0 :: gv0))
(Permutation (gv0 ++ l) (n1 :: l0)), (Permutation (gv0 ++ l) (n1 :: gv0)), (Permutation (gv0 ++ l) (selection_sort l)), (Permutation (gv0 ++ l) (selection_sort l0)), (Permutation (gv0 ++ l) (selection_sort gv0)), (Permutation (gv0 ++ l) (selsort l n0)), (Permutation (gv0 ++ l) (selsort l n1)), (Permutation (gv0 ++ l) (selsort l0 n0)), (Permutation (gv0 ++ l) (selsort l0 n1)), (Permutation (gv0 ++ l) (selsort gv0 n0))
(Permutation (gv0 ++ l) (l ++ l)), (Permutation (gv0 ++ l) (l ++ l0)), (Permutation (gv0 ++ l) (l ++ gv0)), (Permutation (gv0 ++ l) (l0 ++ l)), (Permutation (gv0 ++ l) (l0 ++ l0)), (Permutation (gv0 ++ l) (l0 ++ gv0)), (Permutation (gv0 ++ l) (gv0 ++ l0)), (Permutation (gv0 ++ l) (gv0 ++ gv0)), (Permutation (gv0 ++ l) []), (Permutation (gv0 ++ l0) l)
(Permutation (gv0 ++ l0) gv0), (Permutation (gv0 ++ l0) (n0 :: l)), (Permutation (gv0 ++ l0) (n0 :: l0)), (Permutation (gv0 ++ l0) (n0 :: gv0)), (Permutation (gv0 ++ l0) (n1 :: l)), (Permutation (gv0 ++ l0) (n1 :: l0)), (Permutation (gv0 ++ l0) (n1 :: gv0)), (Permutation (gv0 ++ l0) (selection_sort l)), (Permutation (gv0 ++ l0) (selection_sort l0)), (Permutation (gv0 ++ l0) (selection_sort gv0))
(Permutation (gv0 ++ l0) (selsort l n1)), (Permutation (gv0 ++ l0) (selsort l0 n0)), (Permutation (gv0 ++ l0) (selsort l0 n1)), (Permutation (gv0 ++ l0) (selsort gv0 n0)), (Permutation (gv0 ++ l0) (selsort gv0 n1)), (Permutation (gv0 ++ l0) (l ++ l)), (Permutation (gv0 ++ l0) (l ++ l0)), (Permutation (gv0 ++ l0) (l ++ gv0)), (Permutation (gv0 ++ l0) (l0 ++ l)), (Permutation (gv0 ++ l0) (l0 ++ l0))
(Permutation (gv0 ++ l0) (gv0 ++ l)), (Permutation (gv0 ++ l0) (gv0 ++ gv0)), (Permutation (gv0 ++ l0) []), (Permutation (gv0 ++ gv0) l), (Permutation (gv0 ++ gv0) l0), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (n0 :: l)), (Permutation (gv0 ++ gv0) (n0 :: l0)), (Permutation (gv0 ++ gv0) (n0 :: gv0)), (Permutation (gv0 ++ gv0) (n1 :: l))
(Permutation (gv0 ++ gv0) (n1 :: gv0)), (Permutation (gv0 ++ gv0) (selection_sort l)), (Permutation (gv0 ++ gv0) (selection_sort l0)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (selsort l n0)), (Permutation (gv0 ++ gv0) (selsort l n1)), (Permutation (gv0 ++ gv0) (selsort l0 n0)), (Permutation (gv0 ++ gv0) (selsort l0 n1)), (Permutation (gv0 ++ gv0) (selsort gv0 n0)), (Permutation (gv0 ++ gv0) (selsort gv0 n1))
(Permutation (gv0 ++ gv0) (l ++ l0)), (Permutation (gv0 ++ gv0) (l ++ gv0)), (Permutation (gv0 ++ gv0) (l0 ++ l)), (Permutation (gv0 ++ gv0) (l0 ++ l0)), (Permutation (gv0 ++ gv0) (l0 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l)), (Permutation (gv0 ++ gv0) (gv0 ++ l0)), (Permutation (gv0 ++ gv0) []), (Permutation [] gv0), (Permutation [] (n0 :: gv0))
(Permutation [] (selection_sort gv0)), (Permutation [] (selsort gv0 n0)), (Permutation [] (selsort gv0 n1)), (Permutation [] (l ++ gv0)), (Permutation [] (l0 ++ gv0)), (Permutation [] (gv0 ++ l)), (Permutation [] (gv0 ++ l0)), (Permutation [] (gv0 ++ gv0)), (In n0 gv0), (In n0 (n0 :: gv0))
(In n0 (selection_sort gv0)), (In n0 (selsort gv0 n0)), (In n0 (selsort gv0 n1)), (In n0 (l ++ gv0)), (In n0 (l0 ++ gv0)), (In n0 (gv0 ++ l)), (In n0 (gv0 ++ l0)), (In n0 (gv0 ++ gv0)), (In n1 gv0), (In n1 (n0 :: gv0))
(In n1 (selection_sort gv0)), (In n1 (selsort gv0 n0)), (In n1 (selsort gv0 n1)), (In n1 (l ++ gv0)), (In n1 (l0 ++ gv0)), (In n1 (gv0 ++ l)), (In n1 (gv0 ++ l0)), (In n1 (gv0 ++ gv0)), (In (length l) gv0), (In (length l) (n0 :: gv0))
(In (length l) (selection_sort gv0)), (In (length l) (selsort gv0 n0)), (In (length l) (selsort gv0 n1)), (In (length l) (l ++ gv0)), (In (length l) (l0 ++ gv0)), (In (length l) (gv0 ++ l)), (In (length l) (gv0 ++ l0)), (In (length l) (gv0 ++ gv0)), (In (length l0) gv0), (In (length l0) (n0 :: gv0))
(In (length l0) (selection_sort gv0)), (In (length l0) (selsort gv0 n0)), (In (length l0) (selsort gv0 n1)), (In (length l0) (l ++ gv0)), (In (length l0) (l0 ++ gv0)), (In (length l0) (gv0 ++ l)), (In (length l0) (gv0 ++ l0)), (In (length l0) (gv0 ++ gv0)), (In (length gv0) l), (In (length gv0) l0)
(In (length gv0) (n0 :: l)), (In (length gv0) (n0 :: l0)), (In (length gv0) (n0 :: gv0)), (In (length gv0) (n1 :: l)), (In (length gv0) (n1 :: l0)), (In (length gv0) (n1 :: gv0)), (In (length gv0) (selection_sort l)), (In (length gv0) (selection_sort l0)), (In (length gv0) (selection_sort gv0)), (In (length gv0) (selsort l n0))
(In (length gv0) (selsort l0 n0)), (In (length gv0) (selsort l0 n1)), (In (length gv0) (selsort gv0 n0)), (In (length gv0) (selsort gv0 n1)), (In (length gv0) (l ++ l)), (In (length gv0) (l ++ l0)), (In (length gv0) (l ++ gv0)), (In (length gv0) (l0 ++ l)), (In (length gv0) (l0 ++ l0)), (In (length gv0) (l0 ++ gv0))
(In (length gv0) (gv0 ++ l0)), (In (length gv0) (gv0 ++ gv0)), (n0 < length gv0), (n1 < length gv0), (length l < length gv0), (length l0 < length gv0), (length gv0 < n0), (length gv0 < n1), (length gv0 < length l), (length gv0 < length l0)
(n1 <= length gv0), (length l <= length gv0), (length l0 <= length gv0), (length gv0 <= n0), (length gv0 <= n1), (length gv0 <= length l), (length gv0 <= length l0), (selection_sort l = gv0), (selection_sort l = l ++ gv0), (selection_sort l = l0 ++ gv0)
(selection_sort l = gv0 ++ l0), (selection_sort l = gv0 ++ gv0), (selection_sort l0 = gv0), (selection_sort l0 = l ++ gv0), (selection_sort l0 = l0 ++ gv0), (selection_sort l0 = gv0 ++ l), (selection_sort l0 = gv0 ++ l0), (selection_sort l0 = gv0 ++ gv0), (selection_sort gv0 = l), (selection_sort gv0 = l0)
(selection_sort gv0 = l ++ l), (selection_sort gv0 = l ++ l0), (selection_sort gv0 = l ++ gv0), (selection_sort gv0 = l0 ++ l), (selection_sort gv0 = l0 ++ l0), (selection_sort gv0 = l0 ++ gv0), (selection_sort gv0 = gv0 ++ l), (selection_sort gv0 = gv0 ++ l0), (selection_sort gv0 = gv0 ++ gv0), (selsort l n0 = gv0)
(selsort l n0 = l ++ gv0), (selsort l n0 = l0 ++ gv0), (selsort l n0 = gv0 ++ l), (selsort l n0 = gv0 ++ l0), (selsort l n0 = gv0 ++ gv0), (selsort l n1 = gv0), (selsort l n1 = selection_sort gv0), (selsort l n1 = l ++ gv0), (selsort l n1 = l0 ++ gv0), (selsort l n1 = gv0 ++ l)
(selsort l n1 = gv0 ++ gv0), (selsort l0 n0 = gv0), (selsort l0 n0 = selection_sort gv0), (selsort l0 n0 = l ++ gv0), (selsort l0 n0 = l0 ++ gv0), (selsort l0 n0 = gv0 ++ l), (selsort l0 n0 = gv0 ++ l0), (selsort l0 n0 = gv0 ++ gv0), (selsort l0 n1 = gv0), (selsort l0 n1 = selection_sort gv0)
(selsort l0 n1 = l0 ++ gv0), (selsort l0 n1 = gv0 ++ l), (selsort l0 n1 = gv0 ++ l0), (selsort l0 n1 = gv0 ++ gv0), (selsort gv0 n0 = l), (selsort gv0 n0 = l0), (selsort gv0 n0 = gv0), (selsort gv0 n0 = selection_sort l), (selsort gv0 n0 = selection_sort l0), (selsort gv0 n0 = selection_sort gv0)
(selsort gv0 n0 = l ++ l0), (selsort gv0 n0 = l ++ gv0), (selsort gv0 n0 = l0 ++ l), (selsort gv0 n0 = l0 ++ l0), (selsort gv0 n0 = l0 ++ gv0), (selsort gv0 n0 = gv0 ++ l), (selsort gv0 n0 = gv0 ++ l0), (selsort gv0 n0 = gv0 ++ gv0), (selsort gv0 n1 = l), (selsort gv0 n1 = l0)
(selsort gv0 n1 = selection_sort l), (selsort gv0 n1 = selection_sort l0), (selsort gv0 n1 = selection_sort gv0), (selsort gv0 n1 = l ++ l), (selsort gv0 n1 = l ++ l0), (selsort gv0 n1 = l ++ gv0), (selsort gv0 n1 = l0 ++ l), (selsort gv0 n1 = l0 ++ l0), (selsort gv0 n1 = l0 ++ gv0), (selsort gv0 n1 = gv0 ++ l)
(selsort gv0 n1 = gv0 ++ gv0), (l ++ l = gv0), (l ++ l0 = gv0), (l ++ gv0 = l), (l ++ gv0 = l0), (l ++ gv0 = gv0), (l0 ++ l = gv0), (l0 ++ l0 = gv0), (l0 ++ gv0 = l), (l0 ++ gv0 = l0)
(gv0 ++ l = l), (gv0 ++ l = l0), (gv0 ++ l = gv0), (gv0 ++ l0 = l), (gv0 ++ l0 = l0), (gv0 ++ l0 = gv0), (gv0 ++ gv0 = l), (gv0 ++ gv0 = l0), (gv0 ++ gv0 = gv0), (length gv0 = n0)

Label: 0 (1)
(false = sorted_bool gv0), (true = sorted_bool gv0), (n0 <=* gv0), (n0 <=* n0 :: gv0), (n0 <=* n1 :: gv0), (n0 <=* selection_sort gv0), (n0 <=* selsort gv0 n0), (n0 <=* selsort gv0 n1), (n0 <=* l ++ gv0), (n0 <=* l0 ++ gv0)
(n0 <=* gv0 ++ l0), (n0 <=* gv0 ++ gv0), (n1 <=* gv0), (n1 <=* n0 :: gv0), (n1 <=* n1 :: gv0), (n1 <=* selection_sort gv0), (n1 <=* selsort gv0 n0), (n1 <=* selsort gv0 n1), (n1 <=* l ++ gv0), (n1 <=* l0 ++ gv0)
(n1 <=* gv0 ++ l0), (n1 <=* gv0 ++ gv0), (length l <=* gv0), (length l <=* n0 :: gv0), (length l <=* n1 :: gv0), (length l <=* selection_sort gv0), (length l <=* selsort gv0 n0), (length l <=* selsort gv0 n1), (length l <=* l ++ gv0), (length l <=* l0 ++ gv0)
(length l <=* gv0 ++ l0), (length l <=* gv0 ++ gv0), (length l0 <=* gv0), (length l0 <=* n0 :: gv0), (length l0 <=* n1 :: gv0), (length l0 <=* selection_sort gv0), (length l0 <=* selsort gv0 n0), (length l0 <=* selsort gv0 n1), (length l0 <=* l ++ gv0), (length l0 <=* l0 ++ gv0)
(length l0 <=* gv0 ++ l0), (length l0 <=* gv0 ++ gv0), (length gv0 <=* l), (length gv0 <=* l0), (length gv0 <=* gv0), (length gv0 <=* n0 :: l), (length gv0 <=* n0 :: l0), (length gv0 <=* n0 :: gv0), (length gv0 <=* n1 :: l), (length gv0 <=* n1 :: l0)
(length gv0 <=* selection_sort l), (length gv0 <=* selection_sort l0), (length gv0 <=* selection_sort gv0), (length gv0 <=* selsort l n0), (length gv0 <=* selsort l n1), (length gv0 <=* selsort l0 n0), (length gv0 <=* selsort l0 n1), (length gv0 <=* selsort gv0 n0), (length gv0 <=* selsort gv0 n1), (length gv0 <=* l ++ l)
(length gv0 <=* l ++ gv0), (length gv0 <=* l0 ++ l), (length gv0 <=* l0 ++ l0), (length gv0 <=* l0 ++ gv0), (length gv0 <=* gv0 ++ l), (length gv0 <=* gv0 ++ l0), (length gv0 <=* gv0 ++ gv0), (length gv0 <=* []), (sorted gv0), (sorted (n0 :: gv0))
(sorted (selection_sort gv0)), (sorted (selsort gv0 n0)), (sorted (selsort gv0 n1)), (sorted (l ++ gv0)), (sorted (l0 ++ gv0)), (sorted (gv0 ++ l)), (sorted (gv0 ++ l0)), (sorted (gv0 ++ gv0)), (Permutation l gv0), (Permutation l (n0 :: gv0))
(Permutation l (selection_sort gv0)), (Permutation l (selsort gv0 n0)), (Permutation l (selsort gv0 n1)), (Permutation l (l ++ gv0)), (Permutation l (l0 ++ gv0)), (Permutation l (gv0 ++ l)), (Permutation l (gv0 ++ l0)), (Permutation l (gv0 ++ gv0)), (Permutation l0 gv0), (Permutation l0 (n0 :: gv0))
(Permutation l0 (selection_sort gv0)), (Permutation l0 (selsort gv0 n0)), (Permutation l0 (selsort gv0 n1)), (Permutation l0 (l ++ gv0)), (Permutation l0 (l0 ++ gv0)), (Permutation l0 (gv0 ++ l)), (Permutation l0 (gv0 ++ l0)), (Permutation l0 (gv0 ++ gv0)), (Permutation gv0 l), (Permutation gv0 l0)
(Permutation gv0 (n0 :: l0)), (Permutation gv0 (n0 :: gv0)), (Permutation gv0 (n1 :: l)), (Permutation gv0 (n1 :: l0)), (Permutation gv0 (n1 :: gv0)), (Permutation gv0 (selection_sort l)), (Permutation gv0 (selection_sort l0)), (Permutation gv0 (selection_sort gv0)), (Permutation gv0 (selsort l n0)), (Permutation gv0 (selsort l n1))
(Permutation gv0 (selsort l0 n1)), (Permutation gv0 (selsort gv0 n0)), (Permutation gv0 (selsort gv0 n1)), (Permutation gv0 (l ++ l)), (Permutation gv0 (l ++ l0)), (Permutation gv0 (l ++ gv0)), (Permutation gv0 (l0 ++ l)), (Permutation gv0 (l0 ++ l0)), (Permutation gv0 (l0 ++ gv0)), (Permutation gv0 (gv0 ++ l))
(Permutation gv0 (gv0 ++ gv0)), (Permutation gv0 []), (Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (n0 :: gv0)), (Permutation (n0 :: l) (n1 :: gv0)), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l) (selsort gv0 n0)), (Permutation (n0 :: l) (selsort gv0 n1)), (Permutation (n0 :: l) (l ++ gv0)), (Permutation (n0 :: l) (l0 ++ gv0))
(Permutation (n0 :: l) (gv0 ++ l0)), (Permutation (n0 :: l) (gv0 ++ gv0)), (Permutation (n0 :: l0) gv0), (Permutation (n0 :: l0) (n0 :: gv0)), (Permutation (n0 :: l0) (n1 :: gv0)), (Permutation (n0 :: l0) (selection_sort gv0)), (Permutation (n0 :: l0) (selsort gv0 n0)), (Permutation (n0 :: l0) (selsort gv0 n1)), (Permutation (n0 :: l0) (l ++ gv0)), (Permutation (n0 :: l0) (l0 ++ gv0))
(Permutation (n0 :: l0) (gv0 ++ l0)), (Permutation (n0 :: l0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) l), (Permutation (n0 :: gv0) l0), (Permutation (n0 :: gv0) gv0), (Permutation (n0 :: gv0) (n0 :: l)), (Permutation (n0 :: gv0) (n0 :: l0)), (Permutation (n0 :: gv0) (n1 :: l)), (Permutation (n0 :: gv0) (n1 :: l0)), (Permutation (n0 :: gv0) (n1 :: gv0))
(Permutation (n0 :: gv0) (selection_sort l0)), (Permutation (n0 :: gv0) (selection_sort gv0)), (Permutation (n0 :: gv0) (selsort l n0)), (Permutation (n0 :: gv0) (selsort l n1)), (Permutation (n0 :: gv0) (selsort l0 n0)), (Permutation (n0 :: gv0) (selsort l0 n1)), (Permutation (n0 :: gv0) (selsort gv0 n0)), (Permutation (n0 :: gv0) (selsort gv0 n1)), (Permutation (n0 :: gv0) (l ++ l)), (Permutation (n0 :: gv0) (l ++ l0))
(Permutation (n0 :: gv0) (l0 ++ l)), (Permutation (n0 :: gv0) (l0 ++ l0)), (Permutation (n0 :: gv0) (l0 ++ gv0)), (Permutation (n0 :: gv0) (gv0 ++ l)), (Permutation (n0 :: gv0) (gv0 ++ l0)), (Permutation (n0 :: gv0) (gv0 ++ gv0)), (Permutation (n0 :: gv0) []), (Permutation (n1 :: l) gv0), (Permutation (n1 :: l) (n0 :: gv0)), (Permutation (n1 :: l) (n1 :: gv0))
(Permutation (n1 :: l) (selsort gv0 n0)), (Permutation (n1 :: l) (selsort gv0 n1)), (Permutation (n1 :: l) (l ++ gv0)), (Permutation (n1 :: l) (l0 ++ gv0)), (Permutation (n1 :: l) (gv0 ++ l)), (Permutation (n1 :: l) (gv0 ++ l0)), (Permutation (n1 :: l) (gv0 ++ gv0)), (Permutation (n1 :: l0) gv0), (Permutation (n1 :: l0) (n0 :: gv0)), (Permutation (n1 :: l0) (n1 :: gv0))
(Permutation (n1 :: l0) (selsort gv0 n0)), (Permutation (n1 :: l0) (selsort gv0 n1)), (Permutation (n1 :: l0) (l ++ gv0)), (Permutation (n1 :: l0) (l0 ++ gv0)), (Permutation (n1 :: l0) (gv0 ++ l)), (Permutation (n1 :: l0) (gv0 ++ l0)), (Permutation (n1 :: l0) (gv0 ++ gv0)), (Permutation (n1 :: gv0) l), (Permutation (n1 :: gv0) l0), (Permutation (n1 :: gv0) gv0)
(Permutation (n1 :: gv0) (n0 :: l0)), (Permutation (n1 :: gv0) (n0 :: gv0)), (Permutation (n1 :: gv0) (n1 :: l)), (Permutation (n1 :: gv0) (n1 :: l0)), (Permutation (n1 :: gv0) (selection_sort l)), (Permutation (n1 :: gv0) (selection_sort l0)), (Permutation (n1 :: gv0) (selection_sort gv0)), (Permutation (n1 :: gv0) (selsort l n0)), (Permutation (n1 :: gv0) (selsort l n1)), (Permutation (n1 :: gv0) (selsort l0 n0))
(Permutation (n1 :: gv0) (selsort gv0 n0)), (Permutation (n1 :: gv0) (selsort gv0 n1)), (Permutation (n1 :: gv0) (l ++ l)), (Permutation (n1 :: gv0) (l ++ l0)), (Permutation (n1 :: gv0) (l ++ gv0)), (Permutation (n1 :: gv0) (l0 ++ l)), (Permutation (n1 :: gv0) (l0 ++ l0)), (Permutation (n1 :: gv0) (l0 ++ gv0)), (Permutation (n1 :: gv0) (gv0 ++ l)), (Permutation (n1 :: gv0) (gv0 ++ l0))
(Permutation (n1 :: gv0) []), (Permutation (selection_sort l) gv0), (Permutation (selection_sort l) (n0 :: gv0)), (Permutation (selection_sort l) (n1 :: gv0)), (Permutation (selection_sort l) (selection_sort gv0)), (Permutation (selection_sort l) (selsort gv0 n0)), (Permutation (selection_sort l) (selsort gv0 n1)), (Permutation (selection_sort l) (l ++ gv0)), (Permutation (selection_sort l) (l0 ++ gv0)), (Permutation (selection_sort l) (gv0 ++ l))
(Permutation (selection_sort l) (gv0 ++ gv0)), (Permutation (selection_sort l0) gv0), (Permutation (selection_sort l0) (n0 :: gv0)), (Permutation (selection_sort l0) (n1 :: gv0)), (Permutation (selection_sort l0) (selection_sort gv0)), (Permutation (selection_sort l0) (selsort gv0 n0)), (Permutation (selection_sort l0) (selsort gv0 n1)), (Permutation (selection_sort l0) (l ++ gv0)), (Permutation (selection_sort l0) (l0 ++ gv0)), (Permutation (selection_sort l0) (gv0 ++ l))
(Permutation (selection_sort l0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) l), (Permutation (selection_sort gv0) l0), (Permutation (selection_sort gv0) gv0), (Permutation (selection_sort gv0) (n0 :: l)), (Permutation (selection_sort gv0) (n0 :: l0)), (Permutation (selection_sort gv0) (n0 :: gv0)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: l0)), (Permutation (selection_sort gv0) (n1 :: gv0))
(Permutation (selection_sort gv0) (selection_sort l0)), (Permutation (selection_sort gv0) (selsort l n0)), (Permutation (selection_sort gv0) (selsort l n1)), (Permutation (selection_sort gv0) (selsort l0 n0)), (Permutation (selection_sort gv0) (selsort l0 n1)), (Permutation (selection_sort gv0) (selsort gv0 n0)), (Permutation (selection_sort gv0) (selsort gv0 n1)), (Permutation (selection_sort gv0) (l ++ l)), (Permutation (selection_sort gv0) (l ++ l0)), (Permutation (selection_sort gv0) (l ++ gv0))
(Permutation (selection_sort gv0) (l0 ++ l0)), (Permutation (selection_sort gv0) (l0 ++ gv0)), (Permutation (selection_sort gv0) (gv0 ++ l)), (Permutation (selection_sort gv0) (gv0 ++ l0)), (Permutation (selection_sort gv0) (gv0 ++ gv0)), (Permutation (selection_sort gv0) []), (Permutation (selsort l n0) gv0), (Permutation (selsort l n0) (n0 :: gv0)), (Permutation (selsort l n0) (n1 :: gv0)), (Permutation (selsort l n0) (selection_sort gv0))
(Permutation (selsort l n0) (selsort gv0 n1)), (Permutation (selsort l n0) (l ++ gv0)), (Permutation (selsort l n0) (l0 ++ gv0)), (Permutation (selsort l n0) (gv0 ++ l)), (Permutation (selsort l n0) (gv0 ++ l0)), (Permutation (selsort l n0) (gv0 ++ gv0)), (Permutation (selsort l n1) gv0), (Permutation (selsort l n1) (n0 :: gv0)), (Permutation (selsort l n1) (n1 :: gv0)), (Permutation (selsort l n1) (selection_sort gv0))
(Permutation (selsort l n1) (selsort gv0 n1)), (Permutation (selsort l n1) (l ++ gv0)), (Permutation (selsort l n1) (l0 ++ gv0)), (Permutation (selsort l n1) (gv0 ++ l)), (Permutation (selsort l n1) (gv0 ++ l0)), (Permutation (selsort l n1) (gv0 ++ gv0)), (Permutation (selsort l0 n0) gv0), (Permutation (selsort l0 n0) (n0 :: gv0)), (Permutation (selsort l0 n0) (n1 :: gv0)), (Permutation (selsort l0 n0) (selection_sort gv0))
(Permutation (selsort l0 n0) (selsort gv0 n1)), (Permutation (selsort l0 n0) (l ++ gv0)), (Permutation (selsort l0 n0) (l0 ++ gv0)), (Permutation (selsort l0 n0) (gv0 ++ l)), (Permutation (selsort l0 n0) (gv0 ++ l0)), (Permutation (selsort l0 n0) (gv0 ++ gv0)), (Permutation (selsort l0 n1) gv0), (Permutation (selsort l0 n1) (n0 :: gv0)), (Permutation (selsort l0 n1) (n1 :: gv0)), (Permutation (selsort l0 n1) (selection_sort gv0))
(Permutation (selsort l0 n1) (selsort gv0 n1)), (Permutation (selsort l0 n1) (l ++ gv0)), (Permutation (selsort l0 n1) (l0 ++ gv0)), (Permutation (selsort l0 n1) (gv0 ++ l)), (Permutation (selsort l0 n1) (gv0 ++ l0)), (Permutation (selsort l0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n0) l), (Permutation (selsort gv0 n0) l0), (Permutation (selsort gv0 n0) gv0), (Permutation (selsort gv0 n0) (n0 :: l))
(Permutation (selsort gv0 n0) (n0 :: gv0)), (Permutation (selsort gv0 n0) (n1 :: l)), (Permutation (selsort gv0 n0) (n1 :: l0)), (Permutation (selsort gv0 n0) (n1 :: gv0)), (Permutation (selsort gv0 n0) (selection_sort l)), (Permutation (selsort gv0 n0) (selection_sort l0)), (Permutation (selsort gv0 n0) (selection_sort gv0)), (Permutation (selsort gv0 n0) (selsort l n0)), (Permutation (selsort gv0 n0) (selsort l n1)), (Permutation (selsort gv0 n0) (selsort l0 n0))
(Permutation (selsort gv0 n0) (selsort gv0 n1)), (Permutation (selsort gv0 n0) (l ++ l)), (Permutation (selsort gv0 n0) (l ++ l0)), (Permutation (selsort gv0 n0) (l ++ gv0)), (Permutation (selsort gv0 n0) (l0 ++ l)), (Permutation (selsort gv0 n0) (l0 ++ l0)), (Permutation (selsort gv0 n0) (l0 ++ gv0)), (Permutation (selsort gv0 n0) (gv0 ++ l)), (Permutation (selsort gv0 n0) (gv0 ++ l0)), (Permutation (selsort gv0 n0) (gv0 ++ gv0))
(Permutation (selsort gv0 n1) l), (Permutation (selsort gv0 n1) l0), (Permutation (selsort gv0 n1) gv0), (Permutation (selsort gv0 n1) (n0 :: l)), (Permutation (selsort gv0 n1) (n0 :: l0)), (Permutation (selsort gv0 n1) (n0 :: gv0)), (Permutation (selsort gv0 n1) (n1 :: l)), (Permutation (selsort gv0 n1) (n1 :: l0)), (Permutation (selsort gv0 n1) (n1 :: gv0)), (Permutation (selsort gv0 n1) (selection_sort l))
(Permutation (selsort gv0 n1) (selection_sort gv0)), (Permutation (selsort gv0 n1) (selsort l n0)), (Permutation (selsort gv0 n1) (selsort l n1)), (Permutation (selsort gv0 n1) (selsort l0 n0)), (Permutation (selsort gv0 n1) (selsort l0 n1)), (Permutation (selsort gv0 n1) (selsort gv0 n0)), (Permutation (selsort gv0 n1) (l ++ l)), (Permutation (selsort gv0 n1) (l ++ l0)), (Permutation (selsort gv0 n1) (l ++ gv0)), (Permutation (selsort gv0 n1) (l0 ++ l))
(Permutation (selsort gv0 n1) (l0 ++ gv0)), (Permutation (selsort gv0 n1) (gv0 ++ l)), (Permutation (selsort gv0 n1) (gv0 ++ l0)), (Permutation (selsort gv0 n1) (gv0 ++ gv0)), (Permutation (selsort gv0 n1) []), (Permutation (l ++ l) gv0), (Permutation (l ++ l) (n0 :: gv0)), (Permutation (l ++ l) (n1 :: gv0)), (Permutation (l ++ l) (selection_sort gv0)), (Permutation (l ++ l) (selsort gv0 n0))
(Permutation (l ++ l) (l ++ gv0)), (Permutation (l ++ l) (l0 ++ gv0)), (Permutation (l ++ l) (gv0 ++ l)), (Permutation (l ++ l) (gv0 ++ l0)), (Permutation (l ++ l) (gv0 ++ gv0)), (Permutation (l ++ l0) gv0), (Permutation (l ++ l0) (n0 :: gv0)), (Permutation (l ++ l0) (n1 :: gv0)), (Permutation (l ++ l0) (selection_sort gv0)), (Permutation (l ++ l0) (selsort gv0 n0))
(Permutation (l ++ l0) (l ++ gv0)), (Permutation (l ++ l0) (l0 ++ gv0)), (Permutation (l ++ l0) (gv0 ++ l)), (Permutation (l ++ l0) (gv0 ++ l0)), (Permutation (l ++ l0) (gv0 ++ gv0)), (Permutation (l ++ gv0) l), (Permutation (l ++ gv0) l0), (Permutation (l ++ gv0) gv0), (Permutation (l ++ gv0) (n0 :: l)), (Permutation (l ++ gv0) (n0 :: l0))
(Permutation (l ++ gv0) (n1 :: l)), (Permutation (l ++ gv0) (n1 :: l0)), (Permutation (l ++ gv0) (n1 :: gv0)), (Permutation (l ++ gv0) (selection_sort l)), (Permutation (l ++ gv0) (selection_sort l0)), (Permutation (l ++ gv0) (selection_sort gv0)), (Permutation (l ++ gv0) (selsort l n0)), (Permutation (l ++ gv0) (selsort l n1)), (Permutation (l ++ gv0) (selsort l0 n0)), (Permutation (l ++ gv0) (selsort l0 n1))
(Permutation (l ++ gv0) (selsort gv0 n1)), (Permutation (l ++ gv0) (l ++ l)), (Permutation (l ++ gv0) (l ++ l0)), (Permutation (l ++ gv0) (l0 ++ l)), (Permutation (l ++ gv0) (l0 ++ l0)), (Permutation (l ++ gv0) (l0 ++ gv0)), (Permutation (l ++ gv0) (gv0 ++ l)), (Permutation (l ++ gv0) (gv0 ++ l0)), (Permutation (l ++ gv0) (gv0 ++ gv0)), (Permutation (l ++ gv0) [])
(Permutation (l0 ++ l) (n0 :: gv0)), (Permutation (l0 ++ l) (n1 :: gv0)), (Permutation (l0 ++ l) (selection_sort gv0)), (Permutation (l0 ++ l) (selsort gv0 n0)), (Permutation (l0 ++ l) (selsort gv0 n1)), (Permutation (l0 ++ l) (l ++ gv0)), (Permutation (l0 ++ l) (l0 ++ gv0)), (Permutation (l0 ++ l) (gv0 ++ l)), (Permutation (l0 ++ l) (gv0 ++ l0)), (Permutation (l0 ++ l) (gv0 ++ gv0))
(Permutation (l0 ++ l0) (n0 :: gv0)), (Permutation (l0 ++ l0) (n1 :: gv0)), (Permutation (l0 ++ l0) (selection_sort gv0)), (Permutation (l0 ++ l0) (selsort gv0 n0)), (Permutation (l0 ++ l0) (selsort gv0 n1)), (Permutation (l0 ++ l0) (l ++ gv0)), (Permutation (l0 ++ l0) (l0 ++ gv0)), (Permutation (l0 ++ l0) (gv0 ++ l)), (Permutation (l0 ++ l0) (gv0 ++ l0)), (Permutation (l0 ++ l0) (gv0 ++ gv0))
(Permutation (l0 ++ gv0) l0), (Permutation (l0 ++ gv0) gv0), (Permutation (l0 ++ gv0) (n0 :: l)), (Permutation (l0 ++ gv0) (n0 :: l0)), (Permutation (l0 ++ gv0) (n0 :: gv0)), (Permutation (l0 ++ gv0) (n1 :: l)), (Permutation (l0 ++ gv0) (n1 :: l0)), (Permutation (l0 ++ gv0) (n1 :: gv0)), (Permutation (l0 ++ gv0) (selection_sort l)), (Permutation (l0 ++ gv0) (selection_sort l0))
(Permutation (l0 ++ gv0) (selsort l n0)), (Permutation (l0 ++ gv0) (selsort l n1)), (Permutation (l0 ++ gv0) (selsort l0 n0)), (Permutation (l0 ++ gv0) (selsort l0 n1)), (Permutation (l0 ++ gv0) (selsort gv0 n0)), (Permutation (l0 ++ gv0) (selsort gv0 n1)), (Permutation (l0 ++ gv0) (l ++ l)), (Permutation (l0 ++ gv0) (l ++ l0)), (Permutation (l0 ++ gv0) (l ++ gv0)), (Permutation (l0 ++ gv0) (l0 ++ l))
(Permutation (l0 ++ gv0) (gv0 ++ l)), (Permutation (l0 ++ gv0) (gv0 ++ l0)), (Permutation (l0 ++ gv0) (gv0 ++ gv0)), (Permutation (l0 ++ gv0) []), (Permutation (gv0 ++ l) l), (Permutation (gv0 ++ l) l0), (Permutation (gv0 ++ l) gv0), (Permutation (gv0 ++ l) (n0 :: l)), (Permutation (gv0 ++ l) (n0 :: l0)), (Permutation (gv0 ++ l) (n0 :: gv0))
(Permutation (gv0 ++ l) (n1 :: l0)), (Permutation (gv0 ++ l) (n1 :: gv0)), (Permutation (gv0 ++ l) (selection_sort l)), (Permutation (gv0 ++ l) (selection_sort l0)), (Permutation (gv0 ++ l) (selection_sort gv0)), (Permutation (gv0 ++ l) (selsort l n0)), (Permutation (gv0 ++ l) (selsort l n1)), (Permutation (gv0 ++ l) (selsort l0 n0)), (Permutation (gv0 ++ l) (selsort l0 n1)), (Permutation (gv0 ++ l) (selsort gv0 n0))
(Permutation (gv0 ++ l) (l ++ l)), (Permutation (gv0 ++ l) (l ++ l0)), (Permutation (gv0 ++ l) (l ++ gv0)), (Permutation (gv0 ++ l) (l0 ++ l)), (Permutation (gv0 ++ l) (l0 ++ l0)), (Permutation (gv0 ++ l) (l0 ++ gv0)), (Permutation (gv0 ++ l) (gv0 ++ l0)), (Permutation (gv0 ++ l) (gv0 ++ gv0)), (Permutation (gv0 ++ l) []), (Permutation (gv0 ++ l0) l)
(Permutation (gv0 ++ l0) gv0), (Permutation (gv0 ++ l0) (n0 :: l)), (Permutation (gv0 ++ l0) (n0 :: l0)), (Permutation (gv0 ++ l0) (n0 :: gv0)), (Permutation (gv0 ++ l0) (n1 :: l)), (Permutation (gv0 ++ l0) (n1 :: l0)), (Permutation (gv0 ++ l0) (n1 :: gv0)), (Permutation (gv0 ++ l0) (selection_sort l)), (Permutation (gv0 ++ l0) (selection_sort l0)), (Permutation (gv0 ++ l0) (selection_sort gv0))
(Permutation (gv0 ++ l0) (selsort l n1)), (Permutation (gv0 ++ l0) (selsort l0 n0)), (Permutation (gv0 ++ l0) (selsort l0 n1)), (Permutation (gv0 ++ l0) (selsort gv0 n0)), (Permutation (gv0 ++ l0) (selsort gv0 n1)), (Permutation (gv0 ++ l0) (l ++ l)), (Permutation (gv0 ++ l0) (l ++ l0)), (Permutation (gv0 ++ l0) (l ++ gv0)), (Permutation (gv0 ++ l0) (l0 ++ l)), (Permutation (gv0 ++ l0) (l0 ++ l0))
(Permutation (gv0 ++ l0) (gv0 ++ l)), (Permutation (gv0 ++ l0) (gv0 ++ gv0)), (Permutation (gv0 ++ l0) []), (Permutation (gv0 ++ gv0) l), (Permutation (gv0 ++ gv0) l0), (Permutation (gv0 ++ gv0) gv0), (Permutation (gv0 ++ gv0) (n0 :: l)), (Permutation (gv0 ++ gv0) (n0 :: l0)), (Permutation (gv0 ++ gv0) (n0 :: gv0)), (Permutation (gv0 ++ gv0) (n1 :: l))
(Permutation (gv0 ++ gv0) (n1 :: gv0)), (Permutation (gv0 ++ gv0) (selection_sort l)), (Permutation (gv0 ++ gv0) (selection_sort l0)), (Permutation (gv0 ++ gv0) (selection_sort gv0)), (Permutation (gv0 ++ gv0) (selsort l n0)), (Permutation (gv0 ++ gv0) (selsort l n1)), (Permutation (gv0 ++ gv0) (selsort l0 n0)), (Permutation (gv0 ++ gv0) (selsort l0 n1)), (Permutation (gv0 ++ gv0) (selsort gv0 n0)), (Permutation (gv0 ++ gv0) (selsort gv0 n1))
(Permutation (gv0 ++ gv0) (l ++ l0)), (Permutation (gv0 ++ gv0) (l ++ gv0)), (Permutation (gv0 ++ gv0) (l0 ++ l)), (Permutation (gv0 ++ gv0) (l0 ++ l0)), (Permutation (gv0 ++ gv0) (l0 ++ gv0)), (Permutation (gv0 ++ gv0) (gv0 ++ l)), (Permutation (gv0 ++ gv0) (gv0 ++ l0)), (Permutation (gv0 ++ gv0) []), (Permutation [] gv0), (Permutation [] (n0 :: gv0))
(Permutation [] (selection_sort gv0)), (Permutation [] (selsort gv0 n0)), (Permutation [] (selsort gv0 n1)), (Permutation [] (l ++ gv0)), (Permutation [] (l0 ++ gv0)), (Permutation [] (gv0 ++ l)), (Permutation [] (gv0 ++ l0)), (Permutation [] (gv0 ++ gv0)), (In n0 gv0), (In n0 (n0 :: gv0))
(In n0 (selection_sort gv0)), (In n0 (selsort gv0 n0)), (In n0 (selsort gv0 n1)), (In n0 (l ++ gv0)), (In n0 (l0 ++ gv0)), (In n0 (gv0 ++ l)), (In n0 (gv0 ++ l0)), (In n0 (gv0 ++ gv0)), (In n1 gv0), (In n1 (n0 :: gv0))
(In n1 (selection_sort gv0)), (In n1 (selsort gv0 n0)), (In n1 (selsort gv0 n1)), (In n1 (l ++ gv0)), (In n1 (l0 ++ gv0)), (In n1 (gv0 ++ l)), (In n1 (gv0 ++ l0)), (In n1 (gv0 ++ gv0)), (In (length l) gv0), (In (length l) (n0 :: gv0))
(In (length l) (selection_sort gv0)), (In (length l) (selsort gv0 n0)), (In (length l) (selsort gv0 n1)), (In (length l) (l ++ gv0)), (In (length l) (l0 ++ gv0)), (In (length l) (gv0 ++ l)), (In (length l) (gv0 ++ l0)), (In (length l) (gv0 ++ gv0)), (In (length l0) gv0), (In (length l0) (n0 :: gv0))
(In (length l0) (selection_sort gv0)), (In (length l0) (selsort gv0 n0)), (In (length l0) (selsort gv0 n1)), (In (length l0) (l ++ gv0)), (In (length l0) (l0 ++ gv0)), (In (length l0) (gv0 ++ l)), (In (length l0) (gv0 ++ l0)), (In (length l0) (gv0 ++ gv0)), (In (length gv0) l), (In (length gv0) l0)
(In (length gv0) (n0 :: l)), (In (length gv0) (n0 :: l0)), (In (length gv0) (n0 :: gv0)), (In (length gv0) (n1 :: l)), (In (length gv0) (n1 :: l0)), (In (length gv0) (n1 :: gv0)), (In (length gv0) (selection_sort l)), (In (length gv0) (selection_sort l0)), (In (length gv0) (selection_sort gv0)), (In (length gv0) (selsort l n0))
(In (length gv0) (selsort l0 n0)), (In (length gv0) (selsort l0 n1)), (In (length gv0) (selsort gv0 n0)), (In (length gv0) (selsort gv0 n1)), (In (length gv0) (l ++ l)), (In (length gv0) (l ++ l0)), (In (length gv0) (l ++ gv0)), (In (length gv0) (l0 ++ l)), (In (length gv0) (l0 ++ l0)), (In (length gv0) (l0 ++ gv0))
(In (length gv0) (gv0 ++ l0)), (In (length gv0) (gv0 ++ gv0)), (n0 < length gv0), (n1 < length gv0), (length l < length gv0), (length l0 < length gv0), (length gv0 < n0), (length gv0 < n1), (length gv0 < length l), (length gv0 < length l0)
(n1 <= length gv0), (length l <= length gv0), (length l0 <= length gv0), (length gv0 <= n0), (length gv0 <= n1), (length gv0 <= length l), (length gv0 <= length l0), (selection_sort l = gv0), (selection_sort l = l ++ gv0), (selection_sort l = l0 ++ gv0)
(selection_sort l = gv0 ++ l0), (selection_sort l = gv0 ++ gv0), (selection_sort l0 = gv0), (selection_sort l0 = l ++ gv0), (selection_sort l0 = l0 ++ gv0), (selection_sort l0 = gv0 ++ l), (selection_sort l0 = gv0 ++ l0), (selection_sort l0 = gv0 ++ gv0), (selection_sort gv0 = l), (selection_sort gv0 = l0)
(selection_sort gv0 = l ++ l), (selection_sort gv0 = l ++ l0), (selection_sort gv0 = l ++ gv0), (selection_sort gv0 = l0 ++ l), (selection_sort gv0 = l0 ++ l0), (selection_sort gv0 = l0 ++ gv0), (selection_sort gv0 = gv0 ++ l), (selection_sort gv0 = gv0 ++ l0), (selection_sort gv0 = gv0 ++ gv0), (selsort l n0 = gv0)
(selsort l n0 = l ++ gv0), (selsort l n0 = l0 ++ gv0), (selsort l n0 = gv0 ++ l), (selsort l n0 = gv0 ++ l0), (selsort l n0 = gv0 ++ gv0), (selsort l n1 = gv0), (selsort l n1 = selection_sort gv0), (selsort l n1 = l ++ gv0), (selsort l n1 = l0 ++ gv0), (selsort l n1 = gv0 ++ l)
(selsort l n1 = gv0 ++ gv0), (selsort l0 n0 = gv0), (selsort l0 n0 = selection_sort gv0), (selsort l0 n0 = l ++ gv0), (selsort l0 n0 = l0 ++ gv0), (selsort l0 n0 = gv0 ++ l), (selsort l0 n0 = gv0 ++ l0), (selsort l0 n0 = gv0 ++ gv0), (selsort l0 n1 = gv0), (selsort l0 n1 = selection_sort gv0)
(selsort l0 n1 = l0 ++ gv0), (selsort l0 n1 = gv0 ++ l), (selsort l0 n1 = gv0 ++ l0), (selsort l0 n1 = gv0 ++ gv0), (selsort gv0 n0 = l), (selsort gv0 n0 = l0), (selsort gv0 n0 = gv0), (selsort gv0 n0 = selection_sort l), (selsort gv0 n0 = selection_sort l0), (selsort gv0 n0 = selection_sort gv0)
(selsort gv0 n0 = l ++ l0), (selsort gv0 n0 = l ++ gv0), (selsort gv0 n0 = l0 ++ l), (selsort gv0 n0 = l0 ++ l0), (selsort gv0 n0 = l0 ++ gv0), (selsort gv0 n0 = gv0 ++ l), (selsort gv0 n0 = gv0 ++ l0), (selsort gv0 n0 = gv0 ++ gv0), (selsort gv0 n1 = l), (selsort gv0 n1 = l0)
(selsort gv0 n1 = selection_sort l), (selsort gv0 n1 = selection_sort l0), (selsort gv0 n1 = selection_sort gv0), (selsort gv0 n1 = l ++ l), (selsort gv0 n1 = l ++ l0), (selsort gv0 n1 = l ++ gv0), (selsort gv0 n1 = l0 ++ l), (selsort gv0 n1 = l0 ++ l0), (selsort gv0 n1 = l0 ++ gv0), (selsort gv0 n1 = gv0 ++ l)
(selsort gv0 n1 = gv0 ++ gv0), (l ++ l = gv0), (l ++ l0 = gv0), (l ++ gv0 = l), (l ++ gv0 = l0), (l ++ gv0 = gv0), (l0 ++ l = gv0), (l0 ++ l0 = gv0), (l0 ++ gv0 = l), (l0 ++ gv0 = l0)
(gv0 ++ l = l), (gv0 ++ l = l0), (gv0 ++ l = gv0), (gv0 ++ l0 = l), (gv0 ++ l0 = l0), (gv0 ++ l0 = gv0), (gv0 ++ gv0 = l), (gv0 ++ gv0 = l0), (gv0 ++ gv0 = gv0), (length gv0 = n0)

Label: 1 (2)
(false = sorted_bool gv1), (true = sorted_bool gv1), (n1 <=* gv1), (n1 <=* n1 :: gv1), (n1 <=* n0 :: gv1), (n1 <=* selection_sort gv1), (n1 <=* selsort gv1 n1), (n1 <=* selsort gv1 n0), (n1 <=* l0 ++ gv1), (n1 <=* gv1 ++ l0)
(n1 <=* gv1 ++ l), (n1 <=* l ++ gv1), (n0 <=* gv1), (n0 <=* n1 :: gv1), (n0 <=* n0 :: gv1), (n0 <=* selection_sort gv1), (n0 <=* selsort gv1 n1), (n0 <=* selsort gv1 n0), (n0 <=* l0 ++ gv1), (n0 <=* gv1 ++ l0)
(n0 <=* gv1 ++ l), (n0 <=* l ++ gv1), (length l0 <=* gv1), (length l0 <=* n1 :: gv1), (length l0 <=* n0 :: gv1), (length l0 <=* selection_sort gv1), (length l0 <=* selsort gv1 n1), (length l0 <=* selsort gv1 n0), (length l0 <=* l0 ++ gv1), (length l0 <=* gv1 ++ l0)
(length l0 <=* gv1 ++ l), (length l0 <=* l ++ gv1), (length gv1 <=* l0), (length gv1 <=* gv1), (length gv1 <=* l), (length gv1 <=* n1 :: l0), (length gv1 <=* n1 :: gv1), (length gv1 <=* n1 :: l), (length gv1 <=* n0 :: l0), (length gv1 <=* n0 :: gv1)
(length gv1 <=* selection_sort l0), (length gv1 <=* selection_sort gv1), (length gv1 <=* selection_sort l), (length gv1 <=* selsort l0 n1), (length gv1 <=* selsort l0 n0), (length gv1 <=* selsort gv1 n1), (length gv1 <=* selsort gv1 n0), (length gv1 <=* selsort l n1), (length gv1 <=* selsort l n0), (length gv1 <=* l0 ++ l0)
(length gv1 <=* l0 ++ l), (length gv1 <=* gv1 ++ l0), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* gv1 ++ l), (length gv1 <=* l ++ l0), (length gv1 <=* l ++ gv1), (length gv1 <=* l ++ l), (length gv1 <=* []), (length l <=* gv1), (length l <=* n1 :: gv1)
(length l <=* selection_sort gv1), (length l <=* selsort gv1 n1), (length l <=* selsort gv1 n0), (length l <=* l0 ++ gv1), (length l <=* gv1 ++ l0), (length l <=* gv1 ++ gv1), (length l <=* gv1 ++ l), (length l <=* l ++ gv1), (sorted gv1), (sorted (n1 :: gv1))
(sorted (selection_sort gv1)), (sorted (selsort gv1 n1)), (sorted (selsort gv1 n0)), (sorted (l0 ++ gv1)), (sorted (gv1 ++ l0)), (sorted (gv1 ++ gv1)), (sorted (gv1 ++ l)), (sorted (l ++ gv1)), (Permutation l0 gv1), (Permutation l0 (n1 :: gv1))
(Permutation l0 (selection_sort gv1)), (Permutation l0 (selsort gv1 n1)), (Permutation l0 (selsort gv1 n0)), (Permutation l0 (l0 ++ gv1)), (Permutation l0 (gv1 ++ l0)), (Permutation l0 (gv1 ++ gv1)), (Permutation l0 (gv1 ++ l)), (Permutation l0 (l ++ gv1)), (Permutation gv1 l0), (Permutation gv1 l)
(Permutation gv1 (n1 :: gv1)), (Permutation gv1 (n1 :: l)), (Permutation gv1 (n0 :: l0)), (Permutation gv1 (n0 :: gv1)), (Permutation gv1 (n0 :: l)), (Permutation gv1 (selection_sort l0)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selsort l0 n1)), (Permutation gv1 (selsort l0 n0))
(Permutation gv1 (selsort gv1 n0)), (Permutation gv1 (selsort l n1)), (Permutation gv1 (selsort l n0)), (Permutation gv1 (l0 ++ l0)), (Permutation gv1 (l0 ++ gv1)), (Permutation gv1 (l0 ++ l)), (Permutation gv1 (gv1 ++ l0)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (l ++ l0))
(Permutation gv1 (l ++ l)), (Permutation gv1 []), (Permutation l gv1), (Permutation l (n1 :: gv1)), (Permutation l (n0 :: gv1)), (Permutation l (selection_sort gv1)), (Permutation l (selsort gv1 n1)), (Permutation l (selsort gv1 n0)), (Permutation l (l0 ++ gv1)), (Permutation l (gv1 ++ l0))
(Permutation l (gv1 ++ l)), (Permutation l (l ++ gv1)), (Permutation (n1 :: l0) gv1), (Permutation (n1 :: l0) (n1 :: gv1)), (Permutation (n1 :: l0) (n0 :: gv1)), (Permutation (n1 :: l0) (selection_sort gv1)), (Permutation (n1 :: l0) (selsort gv1 n1)), (Permutation (n1 :: l0) (selsort gv1 n0)), (Permutation (n1 :: l0) (l0 ++ gv1)), (Permutation (n1 :: l0) (gv1 ++ l0))
(Permutation (n1 :: l0) (gv1 ++ l)), (Permutation (n1 :: l0) (l ++ gv1)), (Permutation (n1 :: gv1) l0), (Permutation (n1 :: gv1) gv1), (Permutation (n1 :: gv1) l), (Permutation (n1 :: gv1) (n1 :: l0)), (Permutation (n1 :: gv1) (n1 :: l)), (Permutation (n1 :: gv1) (n0 :: l0)), (Permutation (n1 :: gv1) (n0 :: gv1)), (Permutation (n1 :: gv1) (n0 :: l))
(Permutation (n1 :: gv1) (selection_sort gv1)), (Permutation (n1 :: gv1) (selection_sort l)), (Permutation (n1 :: gv1) (selsort l0 n1)), (Permutation (n1 :: gv1) (selsort l0 n0)), (Permutation (n1 :: gv1) (selsort gv1 n1)), (Permutation (n1 :: gv1) (selsort gv1 n0)), (Permutation (n1 :: gv1) (selsort l n1)), (Permutation (n1 :: gv1) (selsort l n0)), (Permutation (n1 :: gv1) (l0 ++ l0)), (Permutation (n1 :: gv1) (l0 ++ gv1))
(Permutation (n1 :: gv1) (gv1 ++ l0)), (Permutation (n1 :: gv1) (gv1 ++ gv1)), (Permutation (n1 :: gv1) (gv1 ++ l)), (Permutation (n1 :: gv1) (l ++ l0)), (Permutation (n1 :: gv1) (l ++ gv1)), (Permutation (n1 :: gv1) (l ++ l)), (Permutation (n1 :: gv1) []), (Permutation (n1 :: l) gv1), (Permutation (n1 :: l) (n1 :: gv1)), (Permutation (n1 :: l) (n0 :: gv1))
(Permutation (n1 :: l) (selsort gv1 n1)), (Permutation (n1 :: l) (selsort gv1 n0)), (Permutation (n1 :: l) (l0 ++ gv1)), (Permutation (n1 :: l) (gv1 ++ l0)), (Permutation (n1 :: l) (gv1 ++ gv1)), (Permutation (n1 :: l) (gv1 ++ l)), (Permutation (n1 :: l) (l ++ gv1)), (Permutation (n0 :: l0) gv1), (Permutation (n0 :: l0) (n1 :: gv1)), (Permutation (n0 :: l0) (n0 :: gv1))
(Permutation (n0 :: l0) (selsort gv1 n1)), (Permutation (n0 :: l0) (selsort gv1 n0)), (Permutation (n0 :: l0) (l0 ++ gv1)), (Permutation (n0 :: l0) (gv1 ++ l0)), (Permutation (n0 :: l0) (gv1 ++ gv1)), (Permutation (n0 :: l0) (gv1 ++ l)), (Permutation (n0 :: l0) (l ++ gv1)), (Permutation (n0 :: gv1) l0), (Permutation (n0 :: gv1) gv1), (Permutation (n0 :: gv1) l)
(Permutation (n0 :: gv1) (n1 :: gv1)), (Permutation (n0 :: gv1) (n1 :: l)), (Permutation (n0 :: gv1) (n0 :: l0)), (Permutation (n0 :: gv1) (n0 :: l)), (Permutation (n0 :: gv1) (selection_sort l0)), (Permutation (n0 :: gv1) (selection_sort gv1)), (Permutation (n0 :: gv1) (selection_sort l)), (Permutation (n0 :: gv1) (selsort l0 n1)), (Permutation (n0 :: gv1) (selsort l0 n0)), (Permutation (n0 :: gv1) (selsort gv1 n1))
(Permutation (n0 :: gv1) (selsort l n1)), (Permutation (n0 :: gv1) (selsort l n0)), (Permutation (n0 :: gv1) (l0 ++ l0)), (Permutation (n0 :: gv1) (l0 ++ gv1)), (Permutation (n0 :: gv1) (l0 ++ l)), (Permutation (n0 :: gv1) (gv1 ++ l0)), (Permutation (n0 :: gv1) (gv1 ++ gv1)), (Permutation (n0 :: gv1) (gv1 ++ l)), (Permutation (n0 :: gv1) (l ++ l0)), (Permutation (n0 :: gv1) (l ++ gv1))
(Permutation (n0 :: gv1) []), (Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (n1 :: gv1)), (Permutation (n0 :: l) (n0 :: gv1)), (Permutation (n0 :: l) (selection_sort gv1)), (Permutation (n0 :: l) (selsort gv1 n1)), (Permutation (n0 :: l) (selsort gv1 n0)), (Permutation (n0 :: l) (l0 ++ gv1)), (Permutation (n0 :: l) (gv1 ++ l0)), (Permutation (n0 :: l) (gv1 ++ gv1))
(Permutation (n0 :: l) (l ++ gv1)), (Permutation (selection_sort l0) gv1), (Permutation (selection_sort l0) (n1 :: gv1)), (Permutation (selection_sort l0) (n0 :: gv1)), (Permutation (selection_sort l0) (selection_sort gv1)), (Permutation (selection_sort l0) (selsort gv1 n1)), (Permutation (selection_sort l0) (selsort gv1 n0)), (Permutation (selection_sort l0) (l0 ++ gv1)), (Permutation (selection_sort l0) (gv1 ++ l0)), (Permutation (selection_sort l0) (gv1 ++ gv1))
(Permutation (selection_sort l0) (l ++ gv1)), (Permutation (selection_sort gv1) l0), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) (n1 :: l0)), (Permutation (selection_sort gv1) (n1 :: gv1)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n0 :: l0)), (Permutation (selection_sort gv1) (n0 :: gv1)), (Permutation (selection_sort gv1) (n0 :: l))
(Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selsort l0 n1)), (Permutation (selection_sort gv1) (selsort l0 n0)), (Permutation (selection_sort gv1) (selsort gv1 n1)), (Permutation (selection_sort gv1) (selsort gv1 n0)), (Permutation (selection_sort gv1) (selsort l n1)), (Permutation (selection_sort gv1) (selsort l n0)), (Permutation (selection_sort gv1) (l0 ++ l0)), (Permutation (selection_sort gv1) (l0 ++ gv1)), (Permutation (selection_sort gv1) (l0 ++ l))
(Permutation (selection_sort gv1) (gv1 ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (l ++ l0)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) []), (Permutation (selection_sort l) gv1), (Permutation (selection_sort l) (n1 :: gv1)), (Permutation (selection_sort l) (n0 :: gv1)), (Permutation (selection_sort l) (selection_sort gv1))
(Permutation (selection_sort l) (selsort gv1 n0)), (Permutation (selection_sort l) (l0 ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l0)), (Permutation (selection_sort l) (gv1 ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selsort l0 n1) gv1), (Permutation (selsort l0 n1) (n1 :: gv1)), (Permutation (selsort l0 n1) (n0 :: gv1)), (Permutation (selsort l0 n1) (selection_sort gv1))
(Permutation (selsort l0 n1) (selsort gv1 n0)), (Permutation (selsort l0 n1) (l0 ++ gv1)), (Permutation (selsort l0 n1) (gv1 ++ l0)), (Permutation (selsort l0 n1) (gv1 ++ gv1)), (Permutation (selsort l0 n1) (gv1 ++ l)), (Permutation (selsort l0 n1) (l ++ gv1)), (Permutation (selsort l0 n0) gv1), (Permutation (selsort l0 n0) (n1 :: gv1)), (Permutation (selsort l0 n0) (n0 :: gv1)), (Permutation (selsort l0 n0) (selection_sort gv1))
(Permutation (selsort l0 n0) (selsort gv1 n0)), (Permutation (selsort l0 n0) (l0 ++ gv1)), (Permutation (selsort l0 n0) (gv1 ++ l0)), (Permutation (selsort l0 n0) (gv1 ++ gv1)), (Permutation (selsort l0 n0) (gv1 ++ l)), (Permutation (selsort l0 n0) (l ++ gv1)), (Permutation (selsort gv1 n1) l0), (Permutation (selsort gv1 n1) gv1), (Permutation (selsort gv1 n1) l), (Permutation (selsort gv1 n1) (n1 :: l0))
(Permutation (selsort gv1 n1) (n1 :: l)), (Permutation (selsort gv1 n1) (n0 :: l0)), (Permutation (selsort gv1 n1) (n0 :: gv1)), (Permutation (selsort gv1 n1) (n0 :: l)), (Permutation (selsort gv1 n1) (selection_sort l0)), (Permutation (selsort gv1 n1) (selection_sort gv1)), (Permutation (selsort gv1 n1) (selection_sort l)), (Permutation (selsort gv1 n1) (selsort l0 n1)), (Permutation (selsort gv1 n1) (selsort l0 n0)), (Permutation (selsort gv1 n1) (selsort gv1 n0))
(Permutation (selsort gv1 n1) (selsort l n0)), (Permutation (selsort gv1 n1) (l0 ++ l0)), (Permutation (selsort gv1 n1) (l0 ++ gv1)), (Permutation (selsort gv1 n1) (l0 ++ l)), (Permutation (selsort gv1 n1) (gv1 ++ l0)), (Permutation (selsort gv1 n1) (gv1 ++ gv1)), (Permutation (selsort gv1 n1) (gv1 ++ l)), (Permutation (selsort gv1 n1) (l ++ l0)), (Permutation (selsort gv1 n1) (l ++ gv1)), (Permutation (selsort gv1 n1) (l ++ l))
(Permutation (selsort gv1 n0) l0), (Permutation (selsort gv1 n0) gv1), (Permutation (selsort gv1 n0) l), (Permutation (selsort gv1 n0) (n1 :: l0)), (Permutation (selsort gv1 n0) (n1 :: gv1)), (Permutation (selsort gv1 n0) (n1 :: l)), (Permutation (selsort gv1 n0) (n0 :: l0)), (Permutation (selsort gv1 n0) (n0 :: gv1)), (Permutation (selsort gv1 n0) (n0 :: l)), (Permutation (selsort gv1 n0) (selection_sort l0))
(Permutation (selsort gv1 n0) (selection_sort l)), (Permutation (selsort gv1 n0) (selsort l0 n1)), (Permutation (selsort gv1 n0) (selsort l0 n0)), (Permutation (selsort gv1 n0) (selsort gv1 n1)), (Permutation (selsort gv1 n0) (selsort l n1)), (Permutation (selsort gv1 n0) (selsort l n0)), (Permutation (selsort gv1 n0) (l0 ++ l0)), (Permutation (selsort gv1 n0) (l0 ++ gv1)), (Permutation (selsort gv1 n0) (l0 ++ l)), (Permutation (selsort gv1 n0) (gv1 ++ l0))
(Permutation (selsort gv1 n0) (gv1 ++ l)), (Permutation (selsort gv1 n0) (l ++ l0)), (Permutation (selsort gv1 n0) (l ++ gv1)), (Permutation (selsort gv1 n0) (l ++ l)), (Permutation (selsort gv1 n0) []), (Permutation (selsort l n1) gv1), (Permutation (selsort l n1) (n1 :: gv1)), (Permutation (selsort l n1) (n0 :: gv1)), (Permutation (selsort l n1) (selection_sort gv1)), (Permutation (selsort l n1) (selsort gv1 n1))
(Permutation (selsort l n1) (l0 ++ gv1)), (Permutation (selsort l n1) (gv1 ++ l0)), (Permutation (selsort l n1) (gv1 ++ gv1)), (Permutation (selsort l n1) (gv1 ++ l)), (Permutation (selsort l n1) (l ++ gv1)), (Permutation (selsort l n0) gv1), (Permutation (selsort l n0) (n1 :: gv1)), (Permutation (selsort l n0) (n0 :: gv1)), (Permutation (selsort l n0) (selection_sort gv1)), (Permutation (selsort l n0) (selsort gv1 n1))
(Permutation (selsort l n0) (l0 ++ gv1)), (Permutation (selsort l n0) (gv1 ++ l0)), (Permutation (selsort l n0) (gv1 ++ gv1)), (Permutation (selsort l n0) (gv1 ++ l)), (Permutation (selsort l n0) (l ++ gv1)), (Permutation (l0 ++ l0) gv1), (Permutation (l0 ++ l0) (n1 :: gv1)), (Permutation (l0 ++ l0) (n0 :: gv1)), (Permutation (l0 ++ l0) (selection_sort gv1)), (Permutation (l0 ++ l0) (selsort gv1 n1))
(Permutation (l0 ++ l0) (l0 ++ gv1)), (Permutation (l0 ++ l0) (gv1 ++ l0)), (Permutation (l0 ++ l0) (gv1 ++ gv1)), (Permutation (l0 ++ l0) (gv1 ++ l)), (Permutation (l0 ++ l0) (l ++ gv1)), (Permutation (l0 ++ gv1) l0), (Permutation (l0 ++ gv1) gv1), (Permutation (l0 ++ gv1) l), (Permutation (l0 ++ gv1) (n1 :: l0)), (Permutation (l0 ++ gv1) (n1 :: gv1))
(Permutation (l0 ++ gv1) (n0 :: l0)), (Permutation (l0 ++ gv1) (n0 :: gv1)), (Permutation (l0 ++ gv1) (n0 :: l)), (Permutation (l0 ++ gv1) (selection_sort l0)), (Permutation (l0 ++ gv1) (selection_sort gv1)), (Permutation (l0 ++ gv1) (selection_sort l)), (Permutation (l0 ++ gv1) (selsort l0 n1)), (Permutation (l0 ++ gv1) (selsort l0 n0)), (Permutation (l0 ++ gv1) (selsort gv1 n1)), (Permutation (l0 ++ gv1) (selsort gv1 n0))
(Permutation (l0 ++ gv1) (selsort l n0)), (Permutation (l0 ++ gv1) (l0 ++ l0)), (Permutation (l0 ++ gv1) (l0 ++ l)), (Permutation (l0 ++ gv1) (gv1 ++ l0)), (Permutation (l0 ++ gv1) (gv1 ++ gv1)), (Permutation (l0 ++ gv1) (gv1 ++ l)), (Permutation (l0 ++ gv1) (l ++ l0)), (Permutation (l0 ++ gv1) (l ++ gv1)), (Permutation (l0 ++ gv1) (l ++ l)), (Permutation (l0 ++ gv1) [])
(Permutation (l0 ++ l) (n1 :: gv1)), (Permutation (l0 ++ l) (n0 :: gv1)), (Permutation (l0 ++ l) (selection_sort gv1)), (Permutation (l0 ++ l) (selsort gv1 n1)), (Permutation (l0 ++ l) (selsort gv1 n0)), (Permutation (l0 ++ l) (l0 ++ gv1)), (Permutation (l0 ++ l) (gv1 ++ l0)), (Permutation (l0 ++ l) (gv1 ++ gv1)), (Permutation (l0 ++ l) (gv1 ++ l)), (Permutation (l0 ++ l) (l ++ gv1))
(Permutation (gv1 ++ l0) gv1), (Permutation (gv1 ++ l0) l), (Permutation (gv1 ++ l0) (n1 :: l0)), (Permutation (gv1 ++ l0) (n1 :: gv1)), (Permutation (gv1 ++ l0) (n1 :: l)), (Permutation (gv1 ++ l0) (n0 :: l0)), (Permutation (gv1 ++ l0) (n0 :: gv1)), (Permutation (gv1 ++ l0) (n0 :: l)), (Permutation (gv1 ++ l0) (selection_sort l0)), (Permutation (gv1 ++ l0) (selection_sort gv1))
(Permutation (gv1 ++ l0) (selsort l0 n1)), (Permutation (gv1 ++ l0) (selsort l0 n0)), (Permutation (gv1 ++ l0) (selsort gv1 n1)), (Permutation (gv1 ++ l0) (selsort gv1 n0)), (Permutation (gv1 ++ l0) (selsort l n1)), (Permutation (gv1 ++ l0) (selsort l n0)), (Permutation (gv1 ++ l0) (l0 ++ l0)), (Permutation (gv1 ++ l0) (l0 ++ gv1)), (Permutation (gv1 ++ l0) (l0 ++ l)), (Permutation (gv1 ++ l0) (gv1 ++ gv1))
(Permutation (gv1 ++ l0) (l ++ l0)), (Permutation (gv1 ++ l0) (l ++ gv1)), (Permutation (gv1 ++ l0) (l ++ l)), (Permutation (gv1 ++ l0) []), (Permutation (gv1 ++ gv1) l0), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) (n1 :: l0)), (Permutation (gv1 ++ gv1) (n1 :: gv1)), (Permutation (gv1 ++ gv1) (n1 :: l))
(Permutation (gv1 ++ gv1) (n0 :: gv1)), (Permutation (gv1 ++ gv1) (n0 :: l)), (Permutation (gv1 ++ gv1) (selection_sort l0)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selsort l0 n1)), (Permutation (gv1 ++ gv1) (selsort l0 n0)), (Permutation (gv1 ++ gv1) (selsort gv1 n1)), (Permutation (gv1 ++ gv1) (selsort gv1 n0)), (Permutation (gv1 ++ gv1) (selsort l n1))
(Permutation (gv1 ++ gv1) (l0 ++ l0)), (Permutation (gv1 ++ gv1) (l0 ++ gv1)), (Permutation (gv1 ++ gv1) (l0 ++ l)), (Permutation (gv1 ++ gv1) (gv1 ++ l0)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) (l ++ l0)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ l) l0)
(Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) (n1 :: l0)), (Permutation (gv1 ++ l) (n1 :: gv1)), (Permutation (gv1 ++ l) (n1 :: l)), (Permutation (gv1 ++ l) (n0 :: l0)), (Permutation (gv1 ++ l) (n0 :: gv1)), (Permutation (gv1 ++ l) (n0 :: l)), (Permutation (gv1 ++ l) (selection_sort l0)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selection_sort l))
(Permutation (gv1 ++ l) (selsort l0 n0)), (Permutation (gv1 ++ l) (selsort gv1 n1)), (Permutation (gv1 ++ l) (selsort gv1 n0)), (Permutation (gv1 ++ l) (selsort l n1)), (Permutation (gv1 ++ l) (selsort l n0)), (Permutation (gv1 ++ l) (l0 ++ l0)), (Permutation (gv1 ++ l) (l0 ++ gv1)), (Permutation (gv1 ++ l) (l0 ++ l)), (Permutation (gv1 ++ l) (gv1 ++ l0)), (Permutation (gv1 ++ l) (gv1 ++ gv1))
(Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) []), (Permutation (l ++ l0) gv1), (Permutation (l ++ l0) (n1 :: gv1)), (Permutation (l ++ l0) (n0 :: gv1)), (Permutation (l ++ l0) (selection_sort gv1)), (Permutation (l ++ l0) (selsort gv1 n1)), (Permutation (l ++ l0) (selsort gv1 n0)), (Permutation (l ++ l0) (l0 ++ gv1))
(Permutation (l ++ l0) (gv1 ++ gv1)), (Permutation (l ++ l0) (gv1 ++ l)), (Permutation (l ++ l0) (l ++ gv1)), (Permutation (l ++ gv1) l0), (Permutation (l ++ gv1) gv1), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) (n1 :: l0)), (Permutation (l ++ gv1) (n1 :: gv1)), (Permutation (l ++ gv1) (n1 :: l)), (Permutation (l ++ gv1) (n0 :: l0))
(Permutation (l ++ gv1) (n0 :: l)), (Permutation (l ++ gv1) (selection_sort l0)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selsort l0 n1)), (Permutation (l ++ gv1) (selsort l0 n0)), (Permutation (l ++ gv1) (selsort gv1 n1)), (Permutation (l ++ gv1) (selsort gv1 n0)), (Permutation (l ++ gv1) (selsort l n1)), (Permutation (l ++ gv1) (selsort l n0))
(Permutation (l ++ gv1) (l0 ++ gv1)), (Permutation (l ++ gv1) (l0 ++ l)), (Permutation (l ++ gv1) (gv1 ++ l0)), (Permutation (l ++ gv1) (gv1 ++ gv1)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (l ++ l0)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) []), (Permutation (l ++ l) gv1), (Permutation (l ++ l) (n1 :: gv1))
(Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort gv1 n1)), (Permutation (l ++ l) (selsort gv1 n0)), (Permutation (l ++ l) (l0 ++ gv1)), (Permutation (l ++ l) (gv1 ++ l0)), (Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) (gv1 ++ l)), (Permutation (l ++ l) (l ++ gv1)), (Permutation [] gv1), (Permutation [] (n1 :: gv1))
(Permutation [] (selection_sort gv1)), (Permutation [] (selsort gv1 n1)), (Permutation [] (selsort gv1 n0)), (Permutation [] (l0 ++ gv1)), (Permutation [] (gv1 ++ l0)), (Permutation [] (gv1 ++ gv1)), (Permutation [] (gv1 ++ l)), (Permutation [] (l ++ gv1)), (In n1 gv1), (In n1 (n1 :: gv1))
(In n1 (selection_sort gv1)), (In n1 (selsort gv1 n1)), (In n1 (selsort gv1 n0)), (In n1 (l0 ++ gv1)), (In n1 (gv1 ++ l0)), (In n1 (gv1 ++ gv1)), (In n1 (gv1 ++ l)), (In n1 (l ++ gv1)), (In n0 gv1), (In n0 (n1 :: gv1))
(In n0 (selection_sort gv1)), (In n0 (selsort gv1 n1)), (In n0 (selsort gv1 n0)), (In n0 (l0 ++ gv1)), (In n0 (gv1 ++ l0)), (In n0 (gv1 ++ gv1)), (In n0 (gv1 ++ l)), (In n0 (l ++ gv1)), (In (length l0) gv1), (In (length l0) (n1 :: gv1))
(In (length l0) (selection_sort gv1)), (In (length l0) (selsort gv1 n1)), (In (length l0) (selsort gv1 n0)), (In (length l0) (l0 ++ gv1)), (In (length l0) (gv1 ++ l0)), (In (length l0) (gv1 ++ gv1)), (In (length l0) (gv1 ++ l)), (In (length l0) (l ++ gv1)), (In (length gv1) l0), (In (length gv1) gv1)
(In (length gv1) (n1 :: l0)), (In (length gv1) (n1 :: gv1)), (In (length gv1) (n1 :: l)), (In (length gv1) (n0 :: l0)), (In (length gv1) (n0 :: gv1)), (In (length gv1) (n0 :: l)), (In (length gv1) (selection_sort l0)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selection_sort l)), (In (length gv1) (selsort l0 n1))
(In (length gv1) (selsort gv1 n1)), (In (length gv1) (selsort gv1 n0)), (In (length gv1) (selsort l n1)), (In (length gv1) (selsort l n0)), (In (length gv1) (l0 ++ l0)), (In (length gv1) (l0 ++ gv1)), (In (length gv1) (l0 ++ l)), (In (length gv1) (gv1 ++ l0)), (In (length gv1) (gv1 ++ gv1)), (In (length gv1) (gv1 ++ l))
(In (length gv1) (l ++ gv1)), (In (length gv1) (l ++ l)), (In (length l) gv1), (In (length l) (n1 :: gv1)), (In (length l) (n0 :: gv1)), (In (length l) (selection_sort gv1)), (In (length l) (selsort gv1 n1)), (In (length l) (selsort gv1 n0)), (In (length l) (l0 ++ gv1)), (In (length l) (gv1 ++ l0))
(In (length l) (gv1 ++ l)), (In (length l) (l ++ gv1)), (n1 < length gv1), (n0 < length gv1), (length l0 < length gv1), (length gv1 < n1), (length gv1 < n0), (length gv1 < length l0), (length gv1 < length l), (length l < length gv1)
(n0 <= length gv1), (length l0 <= length gv1), (length gv1 <= n1), (length gv1 <= n0), (length gv1 <= length l0), (length gv1 <= length l), (length l <= length gv1), (selection_sort l0 = gv1), (selection_sort l0 = l0 ++ gv1), (selection_sort l0 = gv1 ++ l0)
(selection_sort l0 = gv1 ++ l), (selection_sort l0 = l ++ gv1), (selection_sort gv1 = l0), (selection_sort gv1 = gv1), (selection_sort gv1 = l), (selection_sort gv1 = l0 ++ l0), (selection_sort gv1 = l0 ++ gv1), (selection_sort gv1 = l0 ++ l), (selection_sort gv1 = gv1 ++ l0), (selection_sort gv1 = gv1 ++ gv1)
(selection_sort gv1 = l ++ l0), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = l ++ l), (selection_sort l = gv1), (selection_sort l = l0 ++ gv1), (selection_sort l = gv1 ++ l0), (selection_sort l = gv1 ++ gv1), (selection_sort l = gv1 ++ l), (selection_sort l = l ++ gv1), (selsort l0 n1 = gv1)
(selsort l0 n1 = l0 ++ gv1), (selsort l0 n1 = gv1 ++ l0), (selsort l0 n1 = gv1 ++ gv1), (selsort l0 n1 = gv1 ++ l), (selsort l0 n1 = l ++ gv1), (selsort l0 n0 = gv1), (selsort l0 n0 = selection_sort gv1), (selsort l0 n0 = l0 ++ gv1), (selsort l0 n0 = gv1 ++ l0), (selsort l0 n0 = gv1 ++ gv1)
(selsort l0 n0 = l ++ gv1), (selsort gv1 n1 = l0), (selsort gv1 n1 = gv1), (selsort gv1 n1 = l), (selsort gv1 n1 = selection_sort l0), (selsort gv1 n1 = selection_sort gv1), (selsort gv1 n1 = selection_sort l), (selsort gv1 n1 = l0 ++ l0), (selsort gv1 n1 = l0 ++ gv1), (selsort gv1 n1 = l0 ++ l)
(selsort gv1 n1 = gv1 ++ gv1), (selsort gv1 n1 = gv1 ++ l), (selsort gv1 n1 = l ++ l0), (selsort gv1 n1 = l ++ gv1), (selsort gv1 n1 = l ++ l), (selsort gv1 n0 = l0), (selsort gv1 n0 = gv1), (selsort gv1 n0 = l), (selsort gv1 n0 = selection_sort l0), (selsort gv1 n0 = selection_sort gv1)
(selsort gv1 n0 = l0 ++ l0), (selsort gv1 n0 = l0 ++ gv1), (selsort gv1 n0 = l0 ++ l), (selsort gv1 n0 = gv1 ++ l0), (selsort gv1 n0 = gv1 ++ gv1), (selsort gv1 n0 = gv1 ++ l), (selsort gv1 n0 = l ++ l0), (selsort gv1 n0 = l ++ gv1), (selsort gv1 n0 = l ++ l), (selsort l n1 = gv1)
(selsort l n1 = l0 ++ gv1), (selsort l n1 = gv1 ++ l0), (selsort l n1 = gv1 ++ gv1), (selsort l n1 = gv1 ++ l), (selsort l n1 = l ++ gv1), (selsort l n0 = gv1), (selsort l n0 = selection_sort gv1), (selsort l n0 = l0 ++ gv1), (selsort l n0 = gv1 ++ l0), (selsort l n0 = gv1 ++ gv1)
(selsort l n0 = l ++ gv1), (l0 ++ l0 = gv1), (l0 ++ gv1 = l0), (l0 ++ gv1 = gv1), (l0 ++ gv1 = l), (l0 ++ l = gv1), (gv1 ++ l0 = l0), (gv1 ++ l0 = gv1), (gv1 ++ l0 = l), (gv1 ++ gv1 = l0)
(gv1 ++ gv1 = l), (gv1 ++ l = l0), (gv1 ++ l = gv1), (gv1 ++ l = l), (l ++ l0 = gv1), (l ++ gv1 = l0), (l ++ gv1 = gv1), (l ++ gv1 = l), (l ++ l = gv1), (length gv1 = n1)

Label: 1 (3)
(false = sorted_bool gv1), (true = sorted_bool gv1), (n1 <=* gv1), (n1 <=* n1 :: gv1), (n1 <=* n0 :: gv1), (n1 <=* selection_sort gv1), (n1 <=* selsort gv1 n1), (n1 <=* selsort gv1 n0), (n1 <=* l0 ++ gv1), (n1 <=* gv1 ++ l0)
(n1 <=* gv1 ++ l), (n1 <=* l ++ gv1), (n0 <=* gv1), (n0 <=* n1 :: gv1), (n0 <=* n0 :: gv1), (n0 <=* selection_sort gv1), (n0 <=* selsort gv1 n1), (n0 <=* selsort gv1 n0), (n0 <=* l0 ++ gv1), (n0 <=* gv1 ++ l0)
(n0 <=* gv1 ++ l), (n0 <=* l ++ gv1), (length l0 <=* gv1), (length l0 <=* n1 :: gv1), (length l0 <=* n0 :: gv1), (length l0 <=* selection_sort gv1), (length l0 <=* selsort gv1 n1), (length l0 <=* selsort gv1 n0), (length l0 <=* l0 ++ gv1), (length l0 <=* gv1 ++ l0)
(length l0 <=* gv1 ++ l), (length l0 <=* l ++ gv1), (length gv1 <=* l0), (length gv1 <=* gv1), (length gv1 <=* l), (length gv1 <=* n1 :: l0), (length gv1 <=* n1 :: gv1), (length gv1 <=* n1 :: l), (length gv1 <=* n0 :: l0), (length gv1 <=* n0 :: gv1)
(length gv1 <=* selection_sort l0), (length gv1 <=* selection_sort gv1), (length gv1 <=* selection_sort l), (length gv1 <=* selsort l0 n1), (length gv1 <=* selsort l0 n0), (length gv1 <=* selsort gv1 n1), (length gv1 <=* selsort gv1 n0), (length gv1 <=* selsort l n1), (length gv1 <=* selsort l n0), (length gv1 <=* l0 ++ l0)
(length gv1 <=* l0 ++ l), (length gv1 <=* gv1 ++ l0), (length gv1 <=* gv1 ++ gv1), (length gv1 <=* gv1 ++ l), (length gv1 <=* l ++ l0), (length gv1 <=* l ++ gv1), (length gv1 <=* l ++ l), (length gv1 <=* []), (length l <=* gv1), (length l <=* n1 :: gv1)
(length l <=* selection_sort gv1), (length l <=* selsort gv1 n1), (length l <=* selsort gv1 n0), (length l <=* l0 ++ gv1), (length l <=* gv1 ++ l0), (length l <=* gv1 ++ gv1), (length l <=* gv1 ++ l), (length l <=* l ++ gv1), (sorted gv1), (sorted (n1 :: gv1))
(sorted (selection_sort gv1)), (sorted (selsort gv1 n1)), (sorted (selsort gv1 n0)), (sorted (l0 ++ gv1)), (sorted (gv1 ++ l0)), (sorted (gv1 ++ gv1)), (sorted (gv1 ++ l)), (sorted (l ++ gv1)), (Permutation l0 gv1), (Permutation l0 (n1 :: gv1))
(Permutation l0 (selection_sort gv1)), (Permutation l0 (selsort gv1 n1)), (Permutation l0 (selsort gv1 n0)), (Permutation l0 (l0 ++ gv1)), (Permutation l0 (gv1 ++ l0)), (Permutation l0 (gv1 ++ gv1)), (Permutation l0 (gv1 ++ l)), (Permutation l0 (l ++ gv1)), (Permutation gv1 l0), (Permutation gv1 l)
(Permutation gv1 (n1 :: gv1)), (Permutation gv1 (n1 :: l)), (Permutation gv1 (n0 :: l0)), (Permutation gv1 (n0 :: gv1)), (Permutation gv1 (n0 :: l)), (Permutation gv1 (selection_sort l0)), (Permutation gv1 (selection_sort gv1)), (Permutation gv1 (selection_sort l)), (Permutation gv1 (selsort l0 n1)), (Permutation gv1 (selsort l0 n0))
(Permutation gv1 (selsort gv1 n0)), (Permutation gv1 (selsort l n1)), (Permutation gv1 (selsort l n0)), (Permutation gv1 (l0 ++ l0)), (Permutation gv1 (l0 ++ gv1)), (Permutation gv1 (l0 ++ l)), (Permutation gv1 (gv1 ++ l0)), (Permutation gv1 (gv1 ++ gv1)), (Permutation gv1 (gv1 ++ l)), (Permutation gv1 (l ++ l0))
(Permutation gv1 (l ++ l)), (Permutation gv1 []), (Permutation l gv1), (Permutation l (n1 :: gv1)), (Permutation l (n0 :: gv1)), (Permutation l (selection_sort gv1)), (Permutation l (selsort gv1 n1)), (Permutation l (selsort gv1 n0)), (Permutation l (l0 ++ gv1)), (Permutation l (gv1 ++ l0))
(Permutation l (gv1 ++ l)), (Permutation l (l ++ gv1)), (Permutation (n1 :: l0) gv1), (Permutation (n1 :: l0) (n1 :: gv1)), (Permutation (n1 :: l0) (n0 :: gv1)), (Permutation (n1 :: l0) (selection_sort gv1)), (Permutation (n1 :: l0) (selsort gv1 n1)), (Permutation (n1 :: l0) (selsort gv1 n0)), (Permutation (n1 :: l0) (l0 ++ gv1)), (Permutation (n1 :: l0) (gv1 ++ l0))
(Permutation (n1 :: l0) (gv1 ++ l)), (Permutation (n1 :: l0) (l ++ gv1)), (Permutation (n1 :: gv1) l0), (Permutation (n1 :: gv1) gv1), (Permutation (n1 :: gv1) l), (Permutation (n1 :: gv1) (n1 :: l0)), (Permutation (n1 :: gv1) (n1 :: l)), (Permutation (n1 :: gv1) (n0 :: l0)), (Permutation (n1 :: gv1) (n0 :: gv1)), (Permutation (n1 :: gv1) (n0 :: l))
(Permutation (n1 :: gv1) (selection_sort gv1)), (Permutation (n1 :: gv1) (selection_sort l)), (Permutation (n1 :: gv1) (selsort l0 n1)), (Permutation (n1 :: gv1) (selsort l0 n0)), (Permutation (n1 :: gv1) (selsort gv1 n1)), (Permutation (n1 :: gv1) (selsort gv1 n0)), (Permutation (n1 :: gv1) (selsort l n1)), (Permutation (n1 :: gv1) (selsort l n0)), (Permutation (n1 :: gv1) (l0 ++ l0)), (Permutation (n1 :: gv1) (l0 ++ gv1))
(Permutation (n1 :: gv1) (gv1 ++ l0)), (Permutation (n1 :: gv1) (gv1 ++ gv1)), (Permutation (n1 :: gv1) (gv1 ++ l)), (Permutation (n1 :: gv1) (l ++ l0)), (Permutation (n1 :: gv1) (l ++ gv1)), (Permutation (n1 :: gv1) (l ++ l)), (Permutation (n1 :: gv1) []), (Permutation (n1 :: l) gv1), (Permutation (n1 :: l) (n1 :: gv1)), (Permutation (n1 :: l) (n0 :: gv1))
(Permutation (n1 :: l) (selsort gv1 n1)), (Permutation (n1 :: l) (selsort gv1 n0)), (Permutation (n1 :: l) (l0 ++ gv1)), (Permutation (n1 :: l) (gv1 ++ l0)), (Permutation (n1 :: l) (gv1 ++ gv1)), (Permutation (n1 :: l) (gv1 ++ l)), (Permutation (n1 :: l) (l ++ gv1)), (Permutation (n0 :: l0) gv1), (Permutation (n0 :: l0) (n1 :: gv1)), (Permutation (n0 :: l0) (n0 :: gv1))
(Permutation (n0 :: l0) (selsort gv1 n1)), (Permutation (n0 :: l0) (selsort gv1 n0)), (Permutation (n0 :: l0) (l0 ++ gv1)), (Permutation (n0 :: l0) (gv1 ++ l0)), (Permutation (n0 :: l0) (gv1 ++ gv1)), (Permutation (n0 :: l0) (gv1 ++ l)), (Permutation (n0 :: l0) (l ++ gv1)), (Permutation (n0 :: gv1) l0), (Permutation (n0 :: gv1) gv1), (Permutation (n0 :: gv1) l)
(Permutation (n0 :: gv1) (n1 :: gv1)), (Permutation (n0 :: gv1) (n1 :: l)), (Permutation (n0 :: gv1) (n0 :: l0)), (Permutation (n0 :: gv1) (n0 :: l)), (Permutation (n0 :: gv1) (selection_sort l0)), (Permutation (n0 :: gv1) (selection_sort gv1)), (Permutation (n0 :: gv1) (selection_sort l)), (Permutation (n0 :: gv1) (selsort l0 n1)), (Permutation (n0 :: gv1) (selsort l0 n0)), (Permutation (n0 :: gv1) (selsort gv1 n1))
(Permutation (n0 :: gv1) (selsort l n1)), (Permutation (n0 :: gv1) (selsort l n0)), (Permutation (n0 :: gv1) (l0 ++ l0)), (Permutation (n0 :: gv1) (l0 ++ gv1)), (Permutation (n0 :: gv1) (l0 ++ l)), (Permutation (n0 :: gv1) (gv1 ++ l0)), (Permutation (n0 :: gv1) (gv1 ++ gv1)), (Permutation (n0 :: gv1) (gv1 ++ l)), (Permutation (n0 :: gv1) (l ++ l0)), (Permutation (n0 :: gv1) (l ++ gv1))
(Permutation (n0 :: gv1) []), (Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (n1 :: gv1)), (Permutation (n0 :: l) (n0 :: gv1)), (Permutation (n0 :: l) (selection_sort gv1)), (Permutation (n0 :: l) (selsort gv1 n1)), (Permutation (n0 :: l) (selsort gv1 n0)), (Permutation (n0 :: l) (l0 ++ gv1)), (Permutation (n0 :: l) (gv1 ++ l0)), (Permutation (n0 :: l) (gv1 ++ gv1))
(Permutation (n0 :: l) (l ++ gv1)), (Permutation (selection_sort l0) gv1), (Permutation (selection_sort l0) (n1 :: gv1)), (Permutation (selection_sort l0) (n0 :: gv1)), (Permutation (selection_sort l0) (selection_sort gv1)), (Permutation (selection_sort l0) (selsort gv1 n1)), (Permutation (selection_sort l0) (selsort gv1 n0)), (Permutation (selection_sort l0) (l0 ++ gv1)), (Permutation (selection_sort l0) (gv1 ++ l0)), (Permutation (selection_sort l0) (gv1 ++ gv1))
(Permutation (selection_sort l0) (l ++ gv1)), (Permutation (selection_sort gv1) l0), (Permutation (selection_sort gv1) gv1), (Permutation (selection_sort gv1) l), (Permutation (selection_sort gv1) (n1 :: l0)), (Permutation (selection_sort gv1) (n1 :: gv1)), (Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n0 :: l0)), (Permutation (selection_sort gv1) (n0 :: gv1)), (Permutation (selection_sort gv1) (n0 :: l))
(Permutation (selection_sort gv1) (selection_sort l)), (Permutation (selection_sort gv1) (selsort l0 n1)), (Permutation (selection_sort gv1) (selsort l0 n0)), (Permutation (selection_sort gv1) (selsort gv1 n1)), (Permutation (selection_sort gv1) (selsort gv1 n0)), (Permutation (selection_sort gv1) (selsort l n1)), (Permutation (selection_sort gv1) (selsort l n0)), (Permutation (selection_sort gv1) (l0 ++ l0)), (Permutation (selection_sort gv1) (l0 ++ gv1)), (Permutation (selection_sort gv1) (l0 ++ l))
(Permutation (selection_sort gv1) (gv1 ++ gv1)), (Permutation (selection_sort gv1) (gv1 ++ l)), (Permutation (selection_sort gv1) (l ++ l0)), (Permutation (selection_sort gv1) (l ++ gv1)), (Permutation (selection_sort gv1) (l ++ l)), (Permutation (selection_sort gv1) []), (Permutation (selection_sort l) gv1), (Permutation (selection_sort l) (n1 :: gv1)), (Permutation (selection_sort l) (n0 :: gv1)), (Permutation (selection_sort l) (selection_sort gv1))
(Permutation (selection_sort l) (selsort gv1 n0)), (Permutation (selection_sort l) (l0 ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l0)), (Permutation (selection_sort l) (gv1 ++ gv1)), (Permutation (selection_sort l) (gv1 ++ l)), (Permutation (selection_sort l) (l ++ gv1)), (Permutation (selsort l0 n1) gv1), (Permutation (selsort l0 n1) (n1 :: gv1)), (Permutation (selsort l0 n1) (n0 :: gv1)), (Permutation (selsort l0 n1) (selection_sort gv1))
(Permutation (selsort l0 n1) (selsort gv1 n0)), (Permutation (selsort l0 n1) (l0 ++ gv1)), (Permutation (selsort l0 n1) (gv1 ++ l0)), (Permutation (selsort l0 n1) (gv1 ++ gv1)), (Permutation (selsort l0 n1) (gv1 ++ l)), (Permutation (selsort l0 n1) (l ++ gv1)), (Permutation (selsort l0 n0) gv1), (Permutation (selsort l0 n0) (n1 :: gv1)), (Permutation (selsort l0 n0) (n0 :: gv1)), (Permutation (selsort l0 n0) (selection_sort gv1))
(Permutation (selsort l0 n0) (selsort gv1 n0)), (Permutation (selsort l0 n0) (l0 ++ gv1)), (Permutation (selsort l0 n0) (gv1 ++ l0)), (Permutation (selsort l0 n0) (gv1 ++ gv1)), (Permutation (selsort l0 n0) (gv1 ++ l)), (Permutation (selsort l0 n0) (l ++ gv1)), (Permutation (selsort gv1 n1) l0), (Permutation (selsort gv1 n1) gv1), (Permutation (selsort gv1 n1) l), (Permutation (selsort gv1 n1) (n1 :: l0))
(Permutation (selsort gv1 n1) (n1 :: l)), (Permutation (selsort gv1 n1) (n0 :: l0)), (Permutation (selsort gv1 n1) (n0 :: gv1)), (Permutation (selsort gv1 n1) (n0 :: l)), (Permutation (selsort gv1 n1) (selection_sort l0)), (Permutation (selsort gv1 n1) (selection_sort gv1)), (Permutation (selsort gv1 n1) (selection_sort l)), (Permutation (selsort gv1 n1) (selsort l0 n1)), (Permutation (selsort gv1 n1) (selsort l0 n0)), (Permutation (selsort gv1 n1) (selsort gv1 n0))
(Permutation (selsort gv1 n1) (selsort l n0)), (Permutation (selsort gv1 n1) (l0 ++ l0)), (Permutation (selsort gv1 n1) (l0 ++ gv1)), (Permutation (selsort gv1 n1) (l0 ++ l)), (Permutation (selsort gv1 n1) (gv1 ++ l0)), (Permutation (selsort gv1 n1) (gv1 ++ gv1)), (Permutation (selsort gv1 n1) (gv1 ++ l)), (Permutation (selsort gv1 n1) (l ++ l0)), (Permutation (selsort gv1 n1) (l ++ gv1)), (Permutation (selsort gv1 n1) (l ++ l))
(Permutation (selsort gv1 n0) l0), (Permutation (selsort gv1 n0) gv1), (Permutation (selsort gv1 n0) l), (Permutation (selsort gv1 n0) (n1 :: l0)), (Permutation (selsort gv1 n0) (n1 :: gv1)), (Permutation (selsort gv1 n0) (n1 :: l)), (Permutation (selsort gv1 n0) (n0 :: l0)), (Permutation (selsort gv1 n0) (n0 :: gv1)), (Permutation (selsort gv1 n0) (n0 :: l)), (Permutation (selsort gv1 n0) (selection_sort l0))
(Permutation (selsort gv1 n0) (selection_sort l)), (Permutation (selsort gv1 n0) (selsort l0 n1)), (Permutation (selsort gv1 n0) (selsort l0 n0)), (Permutation (selsort gv1 n0) (selsort gv1 n1)), (Permutation (selsort gv1 n0) (selsort l n1)), (Permutation (selsort gv1 n0) (selsort l n0)), (Permutation (selsort gv1 n0) (l0 ++ l0)), (Permutation (selsort gv1 n0) (l0 ++ gv1)), (Permutation (selsort gv1 n0) (l0 ++ l)), (Permutation (selsort gv1 n0) (gv1 ++ l0))
(Permutation (selsort gv1 n0) (gv1 ++ l)), (Permutation (selsort gv1 n0) (l ++ l0)), (Permutation (selsort gv1 n0) (l ++ gv1)), (Permutation (selsort gv1 n0) (l ++ l)), (Permutation (selsort gv1 n0) []), (Permutation (selsort l n1) gv1), (Permutation (selsort l n1) (n1 :: gv1)), (Permutation (selsort l n1) (n0 :: gv1)), (Permutation (selsort l n1) (selection_sort gv1)), (Permutation (selsort l n1) (selsort gv1 n1))
(Permutation (selsort l n1) (l0 ++ gv1)), (Permutation (selsort l n1) (gv1 ++ l0)), (Permutation (selsort l n1) (gv1 ++ gv1)), (Permutation (selsort l n1) (gv1 ++ l)), (Permutation (selsort l n1) (l ++ gv1)), (Permutation (selsort l n0) gv1), (Permutation (selsort l n0) (n1 :: gv1)), (Permutation (selsort l n0) (n0 :: gv1)), (Permutation (selsort l n0) (selection_sort gv1)), (Permutation (selsort l n0) (selsort gv1 n1))
(Permutation (selsort l n0) (l0 ++ gv1)), (Permutation (selsort l n0) (gv1 ++ l0)), (Permutation (selsort l n0) (gv1 ++ gv1)), (Permutation (selsort l n0) (gv1 ++ l)), (Permutation (selsort l n0) (l ++ gv1)), (Permutation (l0 ++ l0) gv1), (Permutation (l0 ++ l0) (n1 :: gv1)), (Permutation (l0 ++ l0) (n0 :: gv1)), (Permutation (l0 ++ l0) (selection_sort gv1)), (Permutation (l0 ++ l0) (selsort gv1 n1))
(Permutation (l0 ++ l0) (l0 ++ gv1)), (Permutation (l0 ++ l0) (gv1 ++ l0)), (Permutation (l0 ++ l0) (gv1 ++ gv1)), (Permutation (l0 ++ l0) (gv1 ++ l)), (Permutation (l0 ++ l0) (l ++ gv1)), (Permutation (l0 ++ gv1) l0), (Permutation (l0 ++ gv1) gv1), (Permutation (l0 ++ gv1) l), (Permutation (l0 ++ gv1) (n1 :: l0)), (Permutation (l0 ++ gv1) (n1 :: gv1))
(Permutation (l0 ++ gv1) (n0 :: l0)), (Permutation (l0 ++ gv1) (n0 :: gv1)), (Permutation (l0 ++ gv1) (n0 :: l)), (Permutation (l0 ++ gv1) (selection_sort l0)), (Permutation (l0 ++ gv1) (selection_sort gv1)), (Permutation (l0 ++ gv1) (selection_sort l)), (Permutation (l0 ++ gv1) (selsort l0 n1)), (Permutation (l0 ++ gv1) (selsort l0 n0)), (Permutation (l0 ++ gv1) (selsort gv1 n1)), (Permutation (l0 ++ gv1) (selsort gv1 n0))
(Permutation (l0 ++ gv1) (selsort l n0)), (Permutation (l0 ++ gv1) (l0 ++ l0)), (Permutation (l0 ++ gv1) (l0 ++ l)), (Permutation (l0 ++ gv1) (gv1 ++ l0)), (Permutation (l0 ++ gv1) (gv1 ++ gv1)), (Permutation (l0 ++ gv1) (gv1 ++ l)), (Permutation (l0 ++ gv1) (l ++ l0)), (Permutation (l0 ++ gv1) (l ++ gv1)), (Permutation (l0 ++ gv1) (l ++ l)), (Permutation (l0 ++ gv1) [])
(Permutation (l0 ++ l) (n1 :: gv1)), (Permutation (l0 ++ l) (n0 :: gv1)), (Permutation (l0 ++ l) (selection_sort gv1)), (Permutation (l0 ++ l) (selsort gv1 n1)), (Permutation (l0 ++ l) (selsort gv1 n0)), (Permutation (l0 ++ l) (l0 ++ gv1)), (Permutation (l0 ++ l) (gv1 ++ l0)), (Permutation (l0 ++ l) (gv1 ++ gv1)), (Permutation (l0 ++ l) (gv1 ++ l)), (Permutation (l0 ++ l) (l ++ gv1))
(Permutation (gv1 ++ l0) gv1), (Permutation (gv1 ++ l0) l), (Permutation (gv1 ++ l0) (n1 :: l0)), (Permutation (gv1 ++ l0) (n1 :: gv1)), (Permutation (gv1 ++ l0) (n1 :: l)), (Permutation (gv1 ++ l0) (n0 :: l0)), (Permutation (gv1 ++ l0) (n0 :: gv1)), (Permutation (gv1 ++ l0) (n0 :: l)), (Permutation (gv1 ++ l0) (selection_sort l0)), (Permutation (gv1 ++ l0) (selection_sort gv1))
(Permutation (gv1 ++ l0) (selsort l0 n1)), (Permutation (gv1 ++ l0) (selsort l0 n0)), (Permutation (gv1 ++ l0) (selsort gv1 n1)), (Permutation (gv1 ++ l0) (selsort gv1 n0)), (Permutation (gv1 ++ l0) (selsort l n1)), (Permutation (gv1 ++ l0) (selsort l n0)), (Permutation (gv1 ++ l0) (l0 ++ l0)), (Permutation (gv1 ++ l0) (l0 ++ gv1)), (Permutation (gv1 ++ l0) (l0 ++ l)), (Permutation (gv1 ++ l0) (gv1 ++ gv1))
(Permutation (gv1 ++ l0) (l ++ l0)), (Permutation (gv1 ++ l0) (l ++ gv1)), (Permutation (gv1 ++ l0) (l ++ l)), (Permutation (gv1 ++ l0) []), (Permutation (gv1 ++ gv1) l0), (Permutation (gv1 ++ gv1) gv1), (Permutation (gv1 ++ gv1) l), (Permutation (gv1 ++ gv1) (n1 :: l0)), (Permutation (gv1 ++ gv1) (n1 :: gv1)), (Permutation (gv1 ++ gv1) (n1 :: l))
(Permutation (gv1 ++ gv1) (n0 :: gv1)), (Permutation (gv1 ++ gv1) (n0 :: l)), (Permutation (gv1 ++ gv1) (selection_sort l0)), (Permutation (gv1 ++ gv1) (selection_sort gv1)), (Permutation (gv1 ++ gv1) (selection_sort l)), (Permutation (gv1 ++ gv1) (selsort l0 n1)), (Permutation (gv1 ++ gv1) (selsort l0 n0)), (Permutation (gv1 ++ gv1) (selsort gv1 n1)), (Permutation (gv1 ++ gv1) (selsort gv1 n0)), (Permutation (gv1 ++ gv1) (selsort l n1))
(Permutation (gv1 ++ gv1) (l0 ++ l0)), (Permutation (gv1 ++ gv1) (l0 ++ gv1)), (Permutation (gv1 ++ gv1) (l0 ++ l)), (Permutation (gv1 ++ gv1) (gv1 ++ l0)), (Permutation (gv1 ++ gv1) (gv1 ++ l)), (Permutation (gv1 ++ gv1) (l ++ l0)), (Permutation (gv1 ++ gv1) (l ++ gv1)), (Permutation (gv1 ++ gv1) (l ++ l)), (Permutation (gv1 ++ gv1) []), (Permutation (gv1 ++ l) l0)
(Permutation (gv1 ++ l) l), (Permutation (gv1 ++ l) (n1 :: l0)), (Permutation (gv1 ++ l) (n1 :: gv1)), (Permutation (gv1 ++ l) (n1 :: l)), (Permutation (gv1 ++ l) (n0 :: l0)), (Permutation (gv1 ++ l) (n0 :: gv1)), (Permutation (gv1 ++ l) (n0 :: l)), (Permutation (gv1 ++ l) (selection_sort l0)), (Permutation (gv1 ++ l) (selection_sort gv1)), (Permutation (gv1 ++ l) (selection_sort l))
(Permutation (gv1 ++ l) (selsort l0 n0)), (Permutation (gv1 ++ l) (selsort gv1 n1)), (Permutation (gv1 ++ l) (selsort gv1 n0)), (Permutation (gv1 ++ l) (selsort l n1)), (Permutation (gv1 ++ l) (selsort l n0)), (Permutation (gv1 ++ l) (l0 ++ l0)), (Permutation (gv1 ++ l) (l0 ++ gv1)), (Permutation (gv1 ++ l) (l0 ++ l)), (Permutation (gv1 ++ l) (gv1 ++ l0)), (Permutation (gv1 ++ l) (gv1 ++ gv1))
(Permutation (gv1 ++ l) (l ++ gv1)), (Permutation (gv1 ++ l) (l ++ l)), (Permutation (gv1 ++ l) []), (Permutation (l ++ l0) gv1), (Permutation (l ++ l0) (n1 :: gv1)), (Permutation (l ++ l0) (n0 :: gv1)), (Permutation (l ++ l0) (selection_sort gv1)), (Permutation (l ++ l0) (selsort gv1 n1)), (Permutation (l ++ l0) (selsort gv1 n0)), (Permutation (l ++ l0) (l0 ++ gv1))
(Permutation (l ++ l0) (gv1 ++ gv1)), (Permutation (l ++ l0) (gv1 ++ l)), (Permutation (l ++ l0) (l ++ gv1)), (Permutation (l ++ gv1) l0), (Permutation (l ++ gv1) gv1), (Permutation (l ++ gv1) l), (Permutation (l ++ gv1) (n1 :: l0)), (Permutation (l ++ gv1) (n1 :: gv1)), (Permutation (l ++ gv1) (n1 :: l)), (Permutation (l ++ gv1) (n0 :: l0))
(Permutation (l ++ gv1) (n0 :: l)), (Permutation (l ++ gv1) (selection_sort l0)), (Permutation (l ++ gv1) (selection_sort gv1)), (Permutation (l ++ gv1) (selection_sort l)), (Permutation (l ++ gv1) (selsort l0 n1)), (Permutation (l ++ gv1) (selsort l0 n0)), (Permutation (l ++ gv1) (selsort gv1 n1)), (Permutation (l ++ gv1) (selsort gv1 n0)), (Permutation (l ++ gv1) (selsort l n1)), (Permutation (l ++ gv1) (selsort l n0))
(Permutation (l ++ gv1) (l0 ++ gv1)), (Permutation (l ++ gv1) (l0 ++ l)), (Permutation (l ++ gv1) (gv1 ++ l0)), (Permutation (l ++ gv1) (gv1 ++ gv1)), (Permutation (l ++ gv1) (gv1 ++ l)), (Permutation (l ++ gv1) (l ++ l0)), (Permutation (l ++ gv1) (l ++ l)), (Permutation (l ++ gv1) []), (Permutation (l ++ l) gv1), (Permutation (l ++ l) (n1 :: gv1))
(Permutation (l ++ l) (selection_sort gv1)), (Permutation (l ++ l) (selsort gv1 n1)), (Permutation (l ++ l) (selsort gv1 n0)), (Permutation (l ++ l) (l0 ++ gv1)), (Permutation (l ++ l) (gv1 ++ l0)), (Permutation (l ++ l) (gv1 ++ gv1)), (Permutation (l ++ l) (gv1 ++ l)), (Permutation (l ++ l) (l ++ gv1)), (Permutation [] gv1), (Permutation [] (n1 :: gv1))
(Permutation [] (selection_sort gv1)), (Permutation [] (selsort gv1 n1)), (Permutation [] (selsort gv1 n0)), (Permutation [] (l0 ++ gv1)), (Permutation [] (gv1 ++ l0)), (Permutation [] (gv1 ++ gv1)), (Permutation [] (gv1 ++ l)), (Permutation [] (l ++ gv1)), (In n1 gv1), (In n1 (n1 :: gv1))
(In n1 (selection_sort gv1)), (In n1 (selsort gv1 n1)), (In n1 (selsort gv1 n0)), (In n1 (l0 ++ gv1)), (In n1 (gv1 ++ l0)), (In n1 (gv1 ++ gv1)), (In n1 (gv1 ++ l)), (In n1 (l ++ gv1)), (In n0 gv1), (In n0 (n1 :: gv1))
(In n0 (selection_sort gv1)), (In n0 (selsort gv1 n1)), (In n0 (selsort gv1 n0)), (In n0 (l0 ++ gv1)), (In n0 (gv1 ++ l0)), (In n0 (gv1 ++ gv1)), (In n0 (gv1 ++ l)), (In n0 (l ++ gv1)), (In (length l0) gv1), (In (length l0) (n1 :: gv1))
(In (length l0) (selection_sort gv1)), (In (length l0) (selsort gv1 n1)), (In (length l0) (selsort gv1 n0)), (In (length l0) (l0 ++ gv1)), (In (length l0) (gv1 ++ l0)), (In (length l0) (gv1 ++ gv1)), (In (length l0) (gv1 ++ l)), (In (length l0) (l ++ gv1)), (In (length gv1) l0), (In (length gv1) gv1)
(In (length gv1) (n1 :: l0)), (In (length gv1) (n1 :: gv1)), (In (length gv1) (n1 :: l)), (In (length gv1) (n0 :: l0)), (In (length gv1) (n0 :: gv1)), (In (length gv1) (n0 :: l)), (In (length gv1) (selection_sort l0)), (In (length gv1) (selection_sort gv1)), (In (length gv1) (selection_sort l)), (In (length gv1) (selsort l0 n1))
(In (length gv1) (selsort gv1 n1)), (In (length gv1) (selsort gv1 n0)), (In (length gv1) (selsort l n1)), (In (length gv1) (selsort l n0)), (In (length gv1) (l0 ++ l0)), (In (length gv1) (l0 ++ gv1)), (In (length gv1) (l0 ++ l)), (In (length gv1) (gv1 ++ l0)), (In (length gv1) (gv1 ++ gv1)), (In (length gv1) (gv1 ++ l))
(In (length gv1) (l ++ gv1)), (In (length gv1) (l ++ l)), (In (length l) gv1), (In (length l) (n1 :: gv1)), (In (length l) (n0 :: gv1)), (In (length l) (selection_sort gv1)), (In (length l) (selsort gv1 n1)), (In (length l) (selsort gv1 n0)), (In (length l) (l0 ++ gv1)), (In (length l) (gv1 ++ l0))
(In (length l) (gv1 ++ l)), (In (length l) (l ++ gv1)), (n1 < length gv1), (n0 < length gv1), (length l0 < length gv1), (length gv1 < n1), (length gv1 < n0), (length gv1 < length l0), (length gv1 < length l), (length l < length gv1)
(n0 <= length gv1), (length l0 <= length gv1), (length gv1 <= n1), (length gv1 <= n0), (length gv1 <= length l0), (length gv1 <= length l), (length l <= length gv1), (selection_sort l0 = gv1), (selection_sort l0 = l0 ++ gv1), (selection_sort l0 = gv1 ++ l0)
(selection_sort l0 = gv1 ++ l), (selection_sort l0 = l ++ gv1), (selection_sort gv1 = l0), (selection_sort gv1 = gv1), (selection_sort gv1 = l), (selection_sort gv1 = l0 ++ l0), (selection_sort gv1 = l0 ++ gv1), (selection_sort gv1 = l0 ++ l), (selection_sort gv1 = gv1 ++ l0), (selection_sort gv1 = gv1 ++ gv1)
(selection_sort gv1 = l ++ l0), (selection_sort gv1 = l ++ gv1), (selection_sort gv1 = l ++ l), (selection_sort l = gv1), (selection_sort l = l0 ++ gv1), (selection_sort l = gv1 ++ l0), (selection_sort l = gv1 ++ gv1), (selection_sort l = gv1 ++ l), (selection_sort l = l ++ gv1), (selsort l0 n1 = gv1)
(selsort l0 n1 = l0 ++ gv1), (selsort l0 n1 = gv1 ++ l0), (selsort l0 n1 = gv1 ++ gv1), (selsort l0 n1 = gv1 ++ l), (selsort l0 n1 = l ++ gv1), (selsort l0 n0 = gv1), (selsort l0 n0 = selection_sort gv1), (selsort l0 n0 = l0 ++ gv1), (selsort l0 n0 = gv1 ++ l0), (selsort l0 n0 = gv1 ++ gv1)
(selsort l0 n0 = l ++ gv1), (selsort gv1 n1 = l0), (selsort gv1 n1 = gv1), (selsort gv1 n1 = l), (selsort gv1 n1 = selection_sort l0), (selsort gv1 n1 = selection_sort gv1), (selsort gv1 n1 = selection_sort l), (selsort gv1 n1 = l0 ++ l0), (selsort gv1 n1 = l0 ++ gv1), (selsort gv1 n1 = l0 ++ l)
(selsort gv1 n1 = gv1 ++ gv1), (selsort gv1 n1 = gv1 ++ l), (selsort gv1 n1 = l ++ l0), (selsort gv1 n1 = l ++ gv1), (selsort gv1 n1 = l ++ l), (selsort gv1 n0 = l0), (selsort gv1 n0 = gv1), (selsort gv1 n0 = l), (selsort gv1 n0 = selection_sort l0), (selsort gv1 n0 = selection_sort gv1)
(selsort gv1 n0 = l0 ++ l0), (selsort gv1 n0 = l0 ++ gv1), (selsort gv1 n0 = l0 ++ l), (selsort gv1 n0 = gv1 ++ l0), (selsort gv1 n0 = gv1 ++ gv1), (selsort gv1 n0 = gv1 ++ l), (selsort gv1 n0 = l ++ l0), (selsort gv1 n0 = l ++ gv1), (selsort gv1 n0 = l ++ l), (selsort l n1 = gv1)
(selsort l n1 = l0 ++ gv1), (selsort l n1 = gv1 ++ l0), (selsort l n1 = gv1 ++ gv1), (selsort l n1 = gv1 ++ l), (selsort l n1 = l ++ gv1), (selsort l n0 = gv1), (selsort l n0 = selection_sort gv1), (selsort l n0 = l0 ++ gv1), (selsort l n0 = gv1 ++ l0), (selsort l n0 = gv1 ++ gv1)
(selsort l n0 = l ++ gv1), (l0 ++ l0 = gv1), (l0 ++ gv1 = l0), (l0 ++ gv1 = gv1), (l0 ++ gv1 = l), (l0 ++ l = gv1), (gv1 ++ l0 = l0), (gv1 ++ l0 = gv1), (gv1 ++ l0 = l), (gv1 ++ gv1 = l0)
(gv1 ++ gv1 = l), (gv1 ++ l = l0), (gv1 ++ l = gv1), (gv1 ++ l = l), (l ++ l0 = gv1), (l ++ gv1 = l0), (l ++ gv1 = gv1), (l ++ gv1 = l), (l ++ l = gv1), (length gv1 = n1)

Label: 2 (4)
(false = sorted_bool l0), (false = sorted_bool l), (true = sorted_bool l0), (true = sorted_bool l), (n1 <=* l0), (n1 <=* l), (n1 <=* n1 :: l0), (n1 <=* n1 :: l), (n1 <=* n0 :: l0), (n1 <=* n0 :: l)
(n1 <=* selection_sort l), (n1 <=* selsort l0 n1), (n1 <=* selsort l0 n0), (n1 <=* selsort l n1), (n1 <=* selsort l n0), (n1 <=* l0 ++ l0), (n1 <=* l0 ++ l), (n1 <=* l ++ l0), (n1 <=* l ++ l), (n1 <=* [])
(n0 <=* l), (n0 <=* n1 :: l0), (n0 <=* n1 :: l), (n0 <=* n0 :: l0), (n0 <=* n0 :: l), (n0 <=* selection_sort l0), (n0 <=* selection_sort l), (n0 <=* selsort l0 n1), (n0 <=* selsort l0 n0), (n0 <=* selsort l n1)
(n0 <=* l0 ++ l0), (n0 <=* l0 ++ l), (n0 <=* l ++ l0), (n0 <=* l ++ l), (n0 <=* []), (length l0 <=* l0), (length l0 <=* l), (length l0 <=* n1 :: l0), (length l0 <=* n1 :: l), (length l0 <=* n0 :: l0)
(length l0 <=* selection_sort l0), (length l0 <=* selection_sort l), (length l0 <=* selsort l0 n1), (length l0 <=* selsort l0 n0), (length l0 <=* selsort l n1), (length l0 <=* selsort l n0), (length l0 <=* l0 ++ l0), (length l0 <=* l0 ++ l), (length l0 <=* l ++ l0), (length l0 <=* l ++ l)
(length l <=* l0), (length l <=* l), (length l <=* n1 :: l0), (length l <=* n1 :: l), (length l <=* n0 :: l0), (length l <=* n0 :: l), (length l <=* selection_sort l0), (length l <=* selection_sort l), (length l <=* selsort l0 n1), (length l <=* selsort l0 n0)
(length l <=* selsort l n0), (length l <=* l0 ++ l0), (length l <=* l0 ++ l), (length l <=* l ++ l0), (length l <=* l ++ l), (length l <=* []), (sorted l0), (sorted l), (sorted (n1 :: l0)), (sorted (n1 :: l))
(sorted (n0 :: l)), (sorted (selection_sort l0)), (sorted (selection_sort l)), (sorted (selsort l0 n1)), (sorted (selsort l0 n0)), (sorted (selsort l n1)), (sorted (selsort l n0)), (sorted (l0 ++ l0)), (sorted (l0 ++ l)), (sorted (l ++ l0))
(sorted []), (Permutation l0 l), (Permutation l0 (n1 :: l0)), (Permutation l0 (n1 :: l)), (Permutation l0 (n0 :: l0)), (Permutation l0 (n0 :: l)), (Permutation l0 (selection_sort l0)), (Permutation l0 (selection_sort l)), (Permutation l0 (selsort l0 n1)), (Permutation l0 (selsort l0 n0))
(Permutation l0 (selsort l n0)), (Permutation l0 (l0 ++ l0)), (Permutation l0 (l0 ++ l)), (Permutation l0 (l ++ l0)), (Permutation l0 (l ++ l)), (Permutation l0 []), (Permutation l l0), (Permutation l (n1 :: l0)), (Permutation l (n1 :: l)), (Permutation l (n0 :: l0))
(Permutation l (selection_sort l0)), (Permutation l (selection_sort l)), (Permutation l (selsort l0 n1)), (Permutation l (selsort l0 n0)), (Permutation l (selsort l n1)), (Permutation l (selsort l n0)), (Permutation l (l0 ++ l0)), (Permutation l (l0 ++ l)), (Permutation l (l ++ l0)), (Permutation l (l ++ l))
(Permutation (n1 :: l0) l0), (Permutation (n1 :: l0) l), (Permutation (n1 :: l0) (n1 :: l)), (Permutation (n1 :: l0) (n0 :: l0)), (Permutation (n1 :: l0) (n0 :: l)), (Permutation (n1 :: l0) (selection_sort l0)), (Permutation (n1 :: l0) (selection_sort l)), (Permutation (n1 :: l0) (selsort l0 n1)), (Permutation (n1 :: l0) (selsort l0 n0)), (Permutation (n1 :: l0) (selsort l n1))
(Permutation (n1 :: l0) (l0 ++ l0)), (Permutation (n1 :: l0) (l0 ++ l)), (Permutation (n1 :: l0) (l ++ l0)), (Permutation (n1 :: l0) (l ++ l)), (Permutation (n1 :: l0) []), (Permutation (n1 :: l) l0), (Permutation (n1 :: l) l), (Permutation (n1 :: l) (n1 :: l0)), (Permutation (n1 :: l) (n0 :: l0)), (Permutation (n1 :: l) (n0 :: l))
(Permutation (n1 :: l) (selection_sort l)), (Permutation (n1 :: l) (selsort l0 n1)), (Permutation (n1 :: l) (selsort l0 n0)), (Permutation (n1 :: l) (selsort l n1)), (Permutation (n1 :: l) (selsort l n0)), (Permutation (n1 :: l) (l0 ++ l0)), (Permutation (n1 :: l) (l0 ++ l)), (Permutation (n1 :: l) (l ++ l0)), (Permutation (n1 :: l) (l ++ l)), (Permutation (n1 :: l) [])
(Permutation (n0 :: l0) l), (Permutation (n0 :: l0) (n1 :: l0)), (Permutation (n0 :: l0) (n1 :: l)), (Permutation (n0 :: l0) (n0 :: l)), (Permutation (n0 :: l0) (selection_sort l0)), (Permutation (n0 :: l0) (selection_sort l)), (Permutation (n0 :: l0) (selsort l0 n1)), (Permutation (n0 :: l0) (selsort l0 n0)), (Permutation (n0 :: l0) (selsort l n1)), (Permutation (n0 :: l0) (selsort l n0))
(Permutation (n0 :: l0) (l0 ++ l)), (Permutation (n0 :: l0) (l ++ l0)), (Permutation (n0 :: l0) (l ++ l)), (Permutation (n0 :: l0) []), (Permutation (n0 :: l) l0), (Permutation (n0 :: l) l), (Permutation (n0 :: l) (n1 :: l0)), (Permutation (n0 :: l) (n1 :: l)), (Permutation (n0 :: l) (n0 :: l0)), (Permutation (n0 :: l) (selection_sort l0))
(Permutation (n0 :: l) (selsort l0 n1)), (Permutation (n0 :: l) (selsort l0 n0)), (Permutation (n0 :: l) (selsort l n1)), (Permutation (n0 :: l) (selsort l n0)), (Permutation (n0 :: l) (l0 ++ l0)), (Permutation (n0 :: l) (l0 ++ l)), (Permutation (n0 :: l) (l ++ l0)), (Permutation (n0 :: l) (l ++ l)), (Permutation (n0 :: l) []), (Permutation (selection_sort l0) l0)
(Permutation (selection_sort l0) (n1 :: l0)), (Permutation (selection_sort l0) (n1 :: l)), (Permutation (selection_sort l0) (n0 :: l0)), (Permutation (selection_sort l0) (n0 :: l)), (Permutation (selection_sort l0) (selection_sort l)), (Permutation (selection_sort l0) (selsort l0 n1)), (Permutation (selection_sort l0) (selsort l0 n0)), (Permutation (selection_sort l0) (selsort l n1)), (Permutation (selection_sort l0) (selsort l n0)), (Permutation (selection_sort l0) (l0 ++ l0))
(Permutation (selection_sort l0) (l ++ l0)), (Permutation (selection_sort l0) (l ++ l)), (Permutation (selection_sort l0) []), (Permutation (selection_sort l) l0), (Permutation (selection_sort l) l), (Permutation (selection_sort l) (n1 :: l0)), (Permutation (selection_sort l) (n1 :: l)), (Permutation (selection_sort l) (n0 :: l0)), (Permutation (selection_sort l) (n0 :: l)), (Permutation (selection_sort l) (selection_sort l0))
(Permutation (selection_sort l) (selsort l0 n0)), (Permutation (selection_sort l) (selsort l n1)), (Permutation (selection_sort l) (selsort l n0)), (Permutation (selection_sort l) (l0 ++ l0)), (Permutation (selection_sort l) (l0 ++ l)), (Permutation (selection_sort l) (l ++ l0)), (Permutation (selection_sort l) (l ++ l)), (Permutation (selection_sort l) []), (Permutation (selsort l0 n1) l0), (Permutation (selsort l0 n1) l)
(Permutation (selsort l0 n1) (n1 :: l)), (Permutation (selsort l0 n1) (n0 :: l0)), (Permutation (selsort l0 n1) (n0 :: l)), (Permutation (selsort l0 n1) (selection_sort l0)), (Permutation (selsort l0 n1) (selection_sort l)), (Permutation (selsort l0 n1) (selsort l0 n0)), (Permutation (selsort l0 n1) (selsort l n1)), (Permutation (selsort l0 n1) (selsort l n0)), (Permutation (selsort l0 n1) (l0 ++ l0)), (Permutation (selsort l0 n1) (l0 ++ l))
(Permutation (selsort l0 n1) (l ++ l)), (Permutation (selsort l0 n1) []), (Permutation (selsort l0 n0) l0), (Permutation (selsort l0 n0) l), (Permutation (selsort l0 n0) (n1 :: l0)), (Permutation (selsort l0 n0) (n1 :: l)), (Permutation (selsort l0 n0) (n0 :: l0)), (Permutation (selsort l0 n0) (n0 :: l)), (Permutation (selsort l0 n0) (selection_sort l0)), (Permutation (selsort l0 n0) (selection_sort l))
(Permutation (selsort l0 n0) (selsort l n1)), (Permutation (selsort l0 n0) (selsort l n0)), (Permutation (selsort l0 n0) (l0 ++ l0)), (Permutation (selsort l0 n0) (l0 ++ l)), (Permutation (selsort l0 n0) (l ++ l0)), (Permutation (selsort l0 n0) (l ++ l)), (Permutation (selsort l0 n0) []), (Permutation (selsort l n1) l0), (Permutation (selsort l n1) l), (Permutation (selsort l n1) (n1 :: l0))
(Permutation (selsort l n1) (n0 :: l0)), (Permutation (selsort l n1) (n0 :: l)), (Permutation (selsort l n1) (selection_sort l0)), (Permutation (selsort l n1) (selection_sort l)), (Permutation (selsort l n1) (selsort l0 n1)), (Permutation (selsort l n1) (selsort l0 n0)), (Permutation (selsort l n1) (selsort l n0)), (Permutation (selsort l n1) (l0 ++ l0)), (Permutation (selsort l n1) (l0 ++ l)), (Permutation (selsort l n1) (l ++ l0))
(Permutation (selsort l n1) []), (Permutation (selsort l n0) l0), (Permutation (selsort l n0) l), (Permutation (selsort l n0) (n1 :: l0)), (Permutation (selsort l n0) (n1 :: l)), (Permutation (selsort l n0) (n0 :: l0)), (Permutation (selsort l n0) (n0 :: l)), (Permutation (selsort l n0) (selection_sort l0)), (Permutation (selsort l n0) (selection_sort l)), (Permutation (selsort l n0) (selsort l0 n1))
(Permutation (selsort l n0) (selsort l n1)), (Permutation (selsort l n0) (l0 ++ l0)), (Permutation (selsort l n0) (l0 ++ l)), (Permutation (selsort l n0) (l ++ l0)), (Permutation (selsort l n0) (l ++ l)), (Permutation (selsort l n0) []), (Permutation (l0 ++ l0) l0), (Permutation (l0 ++ l0) l), (Permutation (l0 ++ l0) (n1 :: l0)), (Permutation (l0 ++ l0) (n1 :: l))
(Permutation (l0 ++ l0) (n0 :: l)), (Permutation (l0 ++ l0) (selection_sort l0)), (Permutation (l0 ++ l0) (selection_sort l)), (Permutation (l0 ++ l0) (selsort l0 n1)), (Permutation (l0 ++ l0) (selsort l0 n0)), (Permutation (l0 ++ l0) (selsort l n1)), (Permutation (l0 ++ l0) (selsort l n0)), (Permutation (l0 ++ l0) (l0 ++ l)), (Permutation (l0 ++ l0) (l ++ l0)), (Permutation (l0 ++ l0) (l ++ l))
(Permutation (l0 ++ l) l0), (Permutation (l0 ++ l) l), (Permutation (l0 ++ l) (n1 :: l0)), (Permutation (l0 ++ l) (n1 :: l)), (Permutation (l0 ++ l) (n0 :: l0)), (Permutation (l0 ++ l) (n0 :: l)), (Permutation (l0 ++ l) (selection_sort l0)), (Permutation (l0 ++ l) (selection_sort l)), (Permutation (l0 ++ l) (selsort l0 n1)), (Permutation (l0 ++ l) (selsort l0 n0))
(Permutation (l0 ++ l) (selsort l n0)), (Permutation (l0 ++ l) (l0 ++ l0)), (Permutation (l0 ++ l) (l ++ l0)), (Permutation (l0 ++ l) (l ++ l)), (Permutation (l0 ++ l) []), (Permutation (l ++ l0) l0), (Permutation (l ++ l0) l), (Permutation (l ++ l0) (n1 :: l0)), (Permutation (l ++ l0) (n1 :: l)), (Permutation (l ++ l0) (n0 :: l0))
(Permutation (l ++ l0) (selection_sort l0)), (Permutation (l ++ l0) (selection_sort l)), (Permutation (l ++ l0) (selsort l0 n1)), (Permutation (l ++ l0) (selsort l0 n0)), (Permutation (l ++ l0) (selsort l n1)), (Permutation (l ++ l0) (selsort l n0)), (Permutation (l ++ l0) (l0 ++ l0)), (Permutation (l ++ l0) (l0 ++ l)), (Permutation (l ++ l0) (l ++ l)), (Permutation (l ++ l0) [])
(Permutation (l ++ l) l), (Permutation (l ++ l) (n1 :: l0)), (Permutation (l ++ l) (n1 :: l)), (Permutation (l ++ l) (n0 :: l0)), (Permutation (l ++ l) (n0 :: l)), (Permutation (l ++ l) (selection_sort l0)), (Permutation (l ++ l) (selection_sort l)), (Permutation (l ++ l) (selsort l0 n1)), (Permutation (l ++ l) (selsort l0 n0)), (Permutation (l ++ l) (selsort l n1))
(Permutation (l ++ l) (l0 ++ l0)), (Permutation (l ++ l) (l0 ++ l)), (Permutation (l ++ l) (l ++ l0)), (Permutation (l ++ l) []), (Permutation [] l0), (Permutation [] l), (Permutation [] (n1 :: l0)), (Permutation [] (n1 :: l)), (Permutation [] (n0 :: l0)), (Permutation [] (n0 :: l))
(Permutation [] (selection_sort l)), (Permutation [] (selsort l0 n1)), (Permutation [] (selsort l0 n0)), (Permutation [] (selsort l n1)), (Permutation [] (selsort l n0)), (Permutation [] (l0 ++ l0)), (Permutation [] (l0 ++ l)), (Permutation [] (l ++ l0)), (Permutation [] (l ++ l)), (In n1 l0)
(In n1 (n1 :: l0)), (In n1 (n1 :: l)), (In n1 (n0 :: l0)), (In n1 (n0 :: l)), (In n1 (selection_sort l0)), (In n1 (selection_sort l)), (In n1 (selsort l0 n1)), (In n1 (selsort l0 n0)), (In n1 (selsort l n1)), (In n1 (selsort l n0))
(In n1 (l0 ++ l)), (In n1 (l ++ l0)), (In n1 (l ++ l)), (In n0 l0), (In n0 l), (In n0 (n1 :: l0)), (In n0 (n1 :: l)), (In n0 (n0 :: l0)), (In n0 (n0 :: l)), (In n0 (selection_sort l0))
(In n0 (selsort l0 n1)), (In n0 (selsort l0 n0)), (In n0 (selsort l n1)), (In n0 (selsort l n0)), (In n0 (l0 ++ l0)), (In n0 (l0 ++ l)), (In n0 (l ++ l0)), (In n0 (l ++ l)), (In (length l0) l0), (In (length l0) l)
(In (length l0) (n1 :: l)), (In (length l0) (n0 :: l0)), (In (length l0) (n0 :: l)), (In (length l0) (selection_sort l0)), (In (length l0) (selection_sort l)), (In (length l0) (selsort l0 n1)), (In (length l0) (selsort l0 n0)), (In (length l0) (selsort l n1)), (In (length l0) (selsort l n0)), (In (length l0) (l0 ++ l0))
(In (length l0) (l ++ l0)), (In (length l0) (l ++ l)), (In (length l) l0), (In (length l) l), (In (length l) (n1 :: l0)), (In (length l) (n1 :: l)), (In (length l) (n0 :: l0)), (In (length l) (n0 :: l)), (In (length l) (selection_sort l0)), (In (length l) (selection_sort l))
(In (length l) (selsort l0 n0)), (In (length l) (selsort l n1)), (In (length l) (selsort l n0)), (In (length l) (l0 ++ l0)), (In (length l) (l0 ++ l)), (In (length l) (l ++ l0)), (In (length l) (l ++ l)), (n1 < n0), (n1 < length l0), (n1 < length l)
(n0 < length l0), (n0 < length l), (length l0 < n1), (length l0 < n0), (length l0 < length l), (length l < n1), (length l < n0), (length l < length l0), (n1 <= n0), (n1 <= length l0)
(n0 <= n1), (n0 <= length l0), (n0 <= length l), (length l0 <= n1), (length l0 <= n0), (length l0 <= length l), (length l <= n1), (length l <= n0), (length l <= length l0), (selection_sort l0 = l0)
(selection_sort l0 = l0 ++ l0), (selection_sort l0 = l0 ++ l), (selection_sort l0 = l ++ l0), (selection_sort l0 = l ++ l), (selection_sort l = l0), (selection_sort l = l), (selection_sort l = l0 ++ l0), (selection_sort l = l0 ++ l), (selection_sort l = l ++ l0), (selection_sort l = l ++ l)
(selsort l0 n1 = l), (selsort l0 n1 = selection_sort l0), (selsort l0 n1 = selection_sort l), (selsort l0 n1 = l0 ++ l0), (selsort l0 n1 = l0 ++ l), (selsort l0 n1 = l ++ l0), (selsort l0 n1 = l ++ l), (selsort l0 n0 = l0), (selsort l0 n0 = l), (selsort l0 n0 = selection_sort l0)
(selsort l0 n0 = l0 ++ l0), (selsort l0 n0 = l0 ++ l), (selsort l0 n0 = l ++ l0), (selsort l0 n0 = l ++ l), (selsort l n1 = l0), (selsort l n1 = l), (selsort l n1 = selection_sort l0), (selsort l n1 = selection_sort l), (selsort l n1 = l0 ++ l0), (selsort l n1 = l0 ++ l)
(selsort l n1 = l ++ l), (selsort l n0 = l0), (selsort l n0 = l), (selsort l n0 = selection_sort l0), (selsort l n0 = selection_sort l), (selsort l n0 = l0 ++ l0), (selsort l n0 = l0 ++ l), (selsort l n0 = l ++ l0), (selsort l n0 = l ++ l), (l0 ++ l0 = l0)
(l0 ++ l = l0), (l0 ++ l = l), (l ++ l0 = l0), (l ++ l0 = l), (l ++ l = l0), (l ++ l = l), (length l0 = n1), (length l0 = n0), (length l = n1), (length l = n0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 1168.824 seconds


Label: 0 (0)
(Permutation gv0 (n0 :: l)), (Permutation gv0 (n1 :: l)), (Permutation gv0 (n1 :: l0)), (Permutation (n0 :: l) gv0), (Permutation (n0 :: l) (selection_sort gv0)), (Permutation (n0 :: l0) gv0), (Permutation (n0 :: l0) (selection_sort gv0)), (Permutation (n1 :: l) gv0), (Permutation (n1 :: l0) gv0), (Permutation (n1 :: l0) (selection_sort gv0))
(Permutation (selection_sort gv0) (n0 :: l0)), (Permutation (selection_sort gv0) (n1 :: l)), (Permutation (selection_sort gv0) (n1 :: l0))

Label: 0 (1)
(Permutation gv0 (n1 :: l0)), (Permutation (n1 :: l) (l0 ++ gv0)), (Permutation (n1 :: l) (gv0 ++ l0)), (Permutation (n1 :: l0) gv0), (Permutation (n1 :: l0) (selection_sort gv0)), (Permutation (n1 :: l0) (l ++ gv0)), (Permutation (n1 :: l0) (gv0 ++ l)), (Permutation (selection_sort gv0) (n1 :: l0)), (Permutation (l ++ gv0) (n1 :: l0)), (Permutation (l0 ++ gv0) (n1 :: l))
(Permutation (gv0 ++ l0) (n1 :: l))

Label: 1 (2)
(Permutation gv1 (n1 :: l)), (Permutation gv1 (n0 :: l0)), (Permutation gv1 (n0 :: l)), (Permutation (n1 :: l0) gv1), (Permutation (n1 :: l0) (selection_sort gv1)), (Permutation (n1 :: l) gv1), (Permutation (n1 :: l) (selection_sort gv1)), (Permutation (n0 :: l0) (selection_sort gv1)), (Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (selection_sort gv1))
(Permutation (selection_sort gv1) (n1 :: l)), (Permutation (selection_sort gv1) (n0 :: l0))

Label: 1 (3)
(Permutation gv1 (n0 :: l)), (Permutation (n0 :: l) gv1), (Permutation (n0 :: l) (selection_sort gv1))

Label: 2 (4)
(Permutation (n0 :: l) (n1 :: l0))


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 1249.946 seconds

Number of Lemmas Returned: 13

(select n0 l = (n1, l0) -> gv0 = n0 :: l -> Permutation gv0 (n1 :: l0))
(Permutation (n1 :: l0) (l ++ gv0) ->  gv0 = n0 :: l -> Permutation gv0 (n1 :: l0))
(select n0 l = (n1, l0) ->  Permutation (n0 :: l0) gv0 -> Permutation gv0 (n1 :: l0))
(Permutation (n1 :: l0) (l ++ gv0) ->  Permutation (n0 :: l0) gv0 -> Permutation gv0 (n1 :: l0))
(Permutation (n1 :: l) (l0 ++ gv0) ->  Permutation (n0 :: l0) gv0 -> Permutation gv0 (n1 :: l0))
(select n0 l = (n1, l0) ->  Permutation (n1 :: l) gv0 -> Permutation gv0 (n1 :: l0))
(select n0 l = (n1, l0) ->  Permutation (n0 :: l) gv0 -> Permutation gv0 (n1 :: l0))
(Permutation (n1 :: l0) (l ++ gv0) ->  Permutation (n0 :: l) gv0 -> Permutation gv0 (n1 :: l0))
(select n0 l = (n1, l0) -> gv1 = n1 :: l0 -> Permutation (n0 :: l) gv1)
(select n0 l = (n1, l0) ->  Permutation (n1 :: l0) gv1 -> Permutation (n0 :: l) gv1)
(select n0 l = (n1, l0) ->  Permutation (n0 :: l0) (selection_sort gv1) -> Permutation (n0 :: l) gv1)
(select n0 l = (n1, l0) ->  Permutation (n1 :: l) gv1 -> Permutation (n0 :: l) gv1)
(select n0 l = (n1, l0) -> Permutation (n0 :: l) (n1 :: l0))