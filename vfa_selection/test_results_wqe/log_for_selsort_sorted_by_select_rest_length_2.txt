Lemma Synthesis Execution Log and Results
--------------------------------------------------------------------
--------------------------------------------------------------------

Label: Initial State
Assumptions: 
 -- (forall al : list nat, length al = n -> sorted (selsort al n))
 -- (exists j : list nat, select n0 al = (x, j))
 -- (S (length al) = S n)
 -- (select n0 al = (x, x0))
 -- (exists (i : nat) (j : list nat), select n0 al = (i, j))
 -- (length al = n)

----------------------------------
Goal: (length al = length x0)


------------------------------ GENERALIZED VARIABLES ------------------------------
Time Elapsed From Start: 0. seconds

gv0 : nat = (length al)
gv1 : nat = (length x0)


------------------------------ GENERALIZATIONS ------------------------------
  NOTE: The assumptions have been restricted to be only the necessary assumptions.
Time Elapsed From Start: 149.557 seconds

Label: Generalization #0
Assumptions: 
 -- (S (length al) = S n)
 -- (select n0 al = (x, x0))
 -- (length al = n)

----------------------------------
Goal: (length al = gv1)
Case: 2

Label: Generalization #1
Assumptions: 
 -- (S gv0 = S n)
 -- (select n0 al = (x, x0))
 -- (gv0 = n)

----------------------------------
Goal: (gv0 = length x0)
Case: 2

Label: Generalization #2
Assumptions: 
 -- (select n0 al = (x, x0))

----------------------------------
Goal: (length al = length x0)
Case: 3



------------------------------ SYNTHESIS PROBLEMS ------------------------------
Time Elapsed From Start: 150.283 seconds

 -- functions to consider -- 
@eq : (forall A : Type, A -> A -> Prop)
not : (Prop -> Prop)
@fst : (forall A B : Type, A * B -> A)
@snd : (forall A B : Type, A * B -> B)
length : (forall A : Type, list A -> nat)
app : (forall A : Type, list A -> list A -> list A)
le : (nat -> nat -> Prop)
lt : (nat -> nat -> Prop)
In : (forall A : Type, A -> list A -> Prop)
existsb : (forall A : Type, (A -> bool) -> list A -> bool)
forallb : (forall A : Type, (A -> bool) -> list A -> bool)
Forall : (forall A : Type, (A -> Prop) -> list A -> Prop)
nodup : (forall A : Type, (forall x y : A, {x = y} + {x <> y}) -> list A -> list A)
Permutation : (forall A : Type, list A -> list A -> Prop)
sorted : (list nat -> Prop)
is_a_sorting_algorithm : ((list nat -> list nat) -> Prop)
select : (nat -> list nat -> nat * list nat)
selsort : (list nat -> nat -> list nat)
selection_sort : (list nat -> list nat)
le_all : (nat -> list nat -> Prop)
sorted_bool : (list nat -> bool)

Label: 0 (0)
Abducted Assumption: n/a
Positive Examples:
   [al := [2; 0]; gv1 := 2; n := 2; n0 := 0; x := 0; x0 := [2; 0]]
   [al := [0]; gv1 := 1; n := 1; n0 := 0; x := 0; x0 := [0]]
   [al := [1]; gv1 := 1; n := 1; n0 := 0; x := 0; x0 := [1]]
   [al := []; gv1 := 0; n := 0; n0 := 2; x := 2; x0 := []]
   [al := [0]; gv1 := 1; n := 1; n0 := 1; x := 0; x0 := [1]]
   [al := [1]; gv1 := 1; n := 1; n0 := 1; x := 1; x0 := [1]]
   [al := []; gv1 := 0; n := 0; n0 := 1; x := 1; x0 := []]
   [al := []; gv1 := 0; n := 0; n0 := 0; x := 0; x0 := []]

Negative Examples:
   [al := []; gv1 := 4; n := 0; n0 := 0; x := 0; x0 := []]
   [al := []; gv1 := 3; n := 0; n0 := 0; x := 0; x0 := []]
   [al := [1]; gv1 := 2; n := 1; n0 := 2; x := 1; x0 := [2]]
   [al := [1]; gv1 := 2; n := 1; n0 := 1; x := 1; x0 := [1]]
   [al := []; gv1 := 2; n := 0; n0 := 2; x := 2; x0 := []]
   [al := []; gv1 := 1; n := 0; n0 := 3; x := 3; x0 := []]
   [al := [2]; gv1 := 3; n := 1; n0 := 1; x := 1; x0 := [2]]
   [al := []; gv1 := 2; n := 0; n0 := 0; x := 0; x0 := []]
   [al := [0]; gv1 := 0; n := 1; n0 := 0; x := 0; x0 := [0]]
   [al := []; gv1 := 2; n := 0; n0 := 1; x := 1; x0 := []]
   etc ...


Label: 1 (1)
Abducted Assumption: n/a
Positive Examples:
   [al := []; gv0 := 0; n := 0; n0 := 2; x := 2; x0 := []]
   [al := [0; 2]; gv0 := 2; n := 2; n0 := 1; x := 0; x0 := [1; 2]]
   [al := [0]; gv0 := 1; n := 1; n0 := 1; x := 0; x0 := [1]]
   [al := [0]; gv0 := 1; n := 1; n0 := 0; x := 0; x0 := [0]]
   [al := [1]; gv0 := 1; n := 1; n0 := 0; x := 0; x0 := [1]]
   [al := []; gv0 := 0; n := 0; n0 := 1; x := 1; x0 := []]
   [al := [1]; gv0 := 1; n := 1; n0 := 1; x := 1; x0 := [1]]
   [al := []; gv0 := 0; n := 0; n0 := 0; x := 0; x0 := []]

Negative Examples:
   [al := [2]; gv0 := 3; n := 3; n0 := 3; x := 2; x0 := [3]]
   [al := [1]; gv0 := 2; n := 2; n0 := 1; x := 1; x0 := [1]]
   [al := []; gv0 := 3; n := 3; n0 := 2; x := 2; x0 := []]
   [al := []; gv0 := 4; n := 4; n0 := 0; x := 0; x0 := []]
   [al := [2]; gv0 := 2; n := 2; n0 := 2; x := 2; x0 := [2]]
   [al := [1]; gv0 := 0; n := 0; n0 := 0; x := 0; x0 := [1]]
   [al := [1]; gv0 := 0; n := 0; n0 := 1; x := 1; x0 := [1]]
   [al := [3]; gv0 := 2; n := 2; n0 := 2; x := 2; x0 := [3]]
   [al := [1]; gv0 := 2; n := 2; n0 := 2; x := 1; x0 := [2]]
   [al := []; gv0 := 5; n := 5; n0 := 4; x := 4; x0 := []]
   etc ...


Label: 2 (2)
Abducted Assumption: (select n0 al = (x, x0))
Positive Examples:
   [al := [1]; n0 := 3; x := 1; x0 := [3]]
   [al := [3]; n0 := 3; x := 3; x0 := [3]]
   [al := [0]; n0 := 2; x := 0; x0 := [2]]
   [al := [2]; n0 := 1; x := 1; x0 := [2]]
   [al := [5]; n0 := 1; x := 1; x0 := [5]]
   [al := [2; 1]; n0 := 1; x := 1; x0 := [2; 1]]
   [al := []; n0 := 4; x := 4; x0 := []]
   [al := []; n0 := 5; x := 5; x0 := []]
   [al := [2]; n0 := 0; x := 0; x0 := [2]]
   [al := [0]; n0 := 0; x := 0; x0 := [0]]
   etc ...

Negative Examples:
   [al := [2]; n0 := 1; x := 2; x0 := [3; 4; 0]]
   [al := [1; 2; 0; 1]; n0 := 2; x := 1; x0 := [4; 6; 6]]
   [al := [3]; n0 := 4; x := 3; x0 := [0; 4; 2]]
   [al := [2; 4; 0; 3]; n0 := 0; x := 3; x0 := [4]]
   [al := [4; 0; 1; 2]; n0 := 0; x := 1; x0 := [0]]
   [al := [1; 2]; n0 := 0; x := 5; x0 := [4; 3; 1; 1]]
   [al := [1]; n0 := 1; x := 2; x0 := [0; 2; 1]]
   [al := [5; 3]; n0 := 5; x := 0; x0 := [0]]
   [al := [0; 5; 5; 4; 2]; n0 := 5; x := 4; x0 := [2; 3; 0]]
   [al := [0; 1; 1; 6]; n0 := 5; x := 4; x0 := [2]]
   etc ...



------------------------------ TERMS CONSIDERED IN SYNTHESIS ------------------------------
Time Elapsed From Start: 151.92 seconds


Label: 0 (0)
(x <=* gv1 :: x0), (x <=* gv1 :: al), (x <=* selsort x0 gv1), (x <=* selsort al gv1), (n0 <=* gv1 :: x0), (n0 <=* gv1 :: al), (n0 <=* selsort x0 gv1), (n0 <=* selsort al gv1), (n <=* gv1 :: x0), (n <=* gv1 :: al)
(n <=* selsort al gv1), (gv1 <=* x0), (gv1 <=* al), (gv1 <=* x :: x0), (gv1 <=* x :: al), (gv1 <=* n0 :: x0), (gv1 <=* n0 :: al), (gv1 <=* n :: x0), (gv1 <=* n :: al), (gv1 <=* gv1 :: x0)
(gv1 <=* selection_sort x0), (gv1 <=* selection_sort al), (gv1 <=* selsort x0 x), (gv1 <=* selsort x0 n0), (gv1 <=* selsort x0 n), (gv1 <=* selsort x0 gv1), (gv1 <=* selsort al x), (gv1 <=* selsort al n0), (gv1 <=* selsort al n), (gv1 <=* selsort al gv1)
(gv1 <=* x0 ++ al), (gv1 <=* al ++ x0), (gv1 <=* al ++ al), (gv1 <=* []), (length x0 <=* gv1 :: x0), (length x0 <=* gv1 :: al), (length x0 <=* selsort x0 gv1), (length x0 <=* selsort al gv1), (length al <=* gv1 :: x0), (length al <=* gv1 :: al)
(length al <=* selsort al gv1), (sorted (gv1 :: x0)), (sorted (gv1 :: al)), (sorted (selsort x0 gv1)), (sorted (selsort al gv1)), (Permutation x0 (gv1 :: x0)), (Permutation x0 (gv1 :: al)), (Permutation x0 (selsort x0 gv1)), (Permutation x0 (selsort al gv1)), (Permutation al (gv1 :: x0))
(Permutation al (selsort x0 gv1)), (Permutation al (selsort al gv1)), (Permutation (x :: x0) (gv1 :: x0)), (Permutation (x :: x0) (gv1 :: al)), (Permutation (x :: x0) (selsort x0 gv1)), (Permutation (x :: x0) (selsort al gv1)), (Permutation (x :: al) (gv1 :: x0)), (Permutation (x :: al) (gv1 :: al)), (Permutation (x :: al) (selsort x0 gv1)), (Permutation (x :: al) (selsort al gv1))
(Permutation (n0 :: x0) (gv1 :: al)), (Permutation (n0 :: x0) (selsort x0 gv1)), (Permutation (n0 :: x0) (selsort al gv1)), (Permutation (n0 :: al) (gv1 :: x0)), (Permutation (n0 :: al) (gv1 :: al)), (Permutation (n0 :: al) (selsort x0 gv1)), (Permutation (n0 :: al) (selsort al gv1)), (Permutation (n :: x0) (gv1 :: x0)), (Permutation (n :: x0) (gv1 :: al)), (Permutation (n :: x0) (selsort x0 gv1))
(Permutation (n :: al) (gv1 :: x0)), (Permutation (n :: al) (gv1 :: al)), (Permutation (n :: al) (selsort x0 gv1)), (Permutation (n :: al) (selsort al gv1)), (Permutation (gv1 :: x0) x0), (Permutation (gv1 :: x0) al), (Permutation (gv1 :: x0) (x :: x0)), (Permutation (gv1 :: x0) (x :: al)), (Permutation (gv1 :: x0) (n0 :: x0)), (Permutation (gv1 :: x0) (n0 :: al))
(Permutation (gv1 :: x0) (n :: al)), (Permutation (gv1 :: x0) (gv1 :: al)), (Permutation (gv1 :: x0) (selection_sort x0)), (Permutation (gv1 :: x0) (selection_sort al)), (Permutation (gv1 :: x0) (selsort x0 x)), (Permutation (gv1 :: x0) (selsort x0 n0)), (Permutation (gv1 :: x0) (selsort x0 n)), (Permutation (gv1 :: x0) (selsort x0 gv1)), (Permutation (gv1 :: x0) (selsort al x)), (Permutation (gv1 :: x0) (selsort al n0))
(Permutation (gv1 :: x0) (selsort al gv1)), (Permutation (gv1 :: x0) (x0 ++ x0)), (Permutation (gv1 :: x0) (x0 ++ al)), (Permutation (gv1 :: x0) (al ++ x0)), (Permutation (gv1 :: x0) (al ++ al)), (Permutation (gv1 :: x0) []), (Permutation (gv1 :: al) x0), (Permutation (gv1 :: al) al), (Permutation (gv1 :: al) (x :: x0)), (Permutation (gv1 :: al) (x :: al))
(Permutation (gv1 :: al) (n0 :: al)), (Permutation (gv1 :: al) (n :: x0)), (Permutation (gv1 :: al) (n :: al)), (Permutation (gv1 :: al) (gv1 :: x0)), (Permutation (gv1 :: al) (selection_sort x0)), (Permutation (gv1 :: al) (selection_sort al)), (Permutation (gv1 :: al) (selsort x0 x)), (Permutation (gv1 :: al) (selsort x0 n0)), (Permutation (gv1 :: al) (selsort x0 n)), (Permutation (gv1 :: al) (selsort x0 gv1))
(Permutation (gv1 :: al) (selsort al n0)), (Permutation (gv1 :: al) (selsort al n)), (Permutation (gv1 :: al) (selsort al gv1)), (Permutation (gv1 :: al) (x0 ++ x0)), (Permutation (gv1 :: al) (x0 ++ al)), (Permutation (gv1 :: al) (al ++ x0)), (Permutation (gv1 :: al) (al ++ al)), (Permutation (gv1 :: al) []), (Permutation (selection_sort x0) (gv1 :: x0)), (Permutation (selection_sort x0) (gv1 :: al))
(Permutation (selection_sort x0) (selsort al gv1)), (Permutation (selection_sort al) (gv1 :: x0)), (Permutation (selection_sort al) (gv1 :: al)), (Permutation (selection_sort al) (selsort x0 gv1)), (Permutation (selection_sort al) (selsort al gv1)), (Permutation (selsort x0 x) (gv1 :: x0)), (Permutation (selsort x0 x) (gv1 :: al)), (Permutation (selsort x0 x) (selsort x0 gv1)), (Permutation (selsort x0 x) (selsort al gv1)), (Permutation (selsort x0 n0) (gv1 :: x0))
(Permutation (selsort x0 n0) (selsort x0 gv1)), (Permutation (selsort x0 n0) (selsort al gv1)), (Permutation (selsort x0 n) (gv1 :: x0)), (Permutation (selsort x0 n) (gv1 :: al)), (Permutation (selsort x0 n) (selsort x0 gv1)), (Permutation (selsort x0 n) (selsort al gv1)), (Permutation (selsort x0 gv1) x0), (Permutation (selsort x0 gv1) al), (Permutation (selsort x0 gv1) (x :: x0)), (Permutation (selsort x0 gv1) (x :: al))
(Permutation (selsort x0 gv1) (n0 :: al)), (Permutation (selsort x0 gv1) (n :: x0)), (Permutation (selsort x0 gv1) (n :: al)), (Permutation (selsort x0 gv1) (gv1 :: x0)), (Permutation (selsort x0 gv1) (gv1 :: al)), (Permutation (selsort x0 gv1) (selection_sort x0)), (Permutation (selsort x0 gv1) (selection_sort al)), (Permutation (selsort x0 gv1) (selsort x0 x)), (Permutation (selsort x0 gv1) (selsort x0 n0)), (Permutation (selsort x0 gv1) (selsort x0 n))
(Permutation (selsort x0 gv1) (selsort al n0)), (Permutation (selsort x0 gv1) (selsort al n)), (Permutation (selsort x0 gv1) (selsort al gv1)), (Permutation (selsort x0 gv1) (x0 ++ x0)), (Permutation (selsort x0 gv1) (x0 ++ al)), (Permutation (selsort x0 gv1) (al ++ x0)), (Permutation (selsort x0 gv1) (al ++ al)), (Permutation (selsort x0 gv1) []), (Permutation (selsort al x) (gv1 :: x0)), (Permutation (selsort al x) (gv1 :: al))
(Permutation (selsort al x) (selsort al gv1)), (Permutation (selsort al n0) (gv1 :: x0)), (Permutation (selsort al n0) (gv1 :: al)), (Permutation (selsort al n0) (selsort x0 gv1)), (Permutation (selsort al n0) (selsort al gv1)), (Permutation (selsort al n) (gv1 :: x0)), (Permutation (selsort al n) (gv1 :: al)), (Permutation (selsort al n) (selsort x0 gv1)), (Permutation (selsort al n) (selsort al gv1)), (Permutation (selsort al gv1) x0)
(Permutation (selsort al gv1) (x :: x0)), (Permutation (selsort al gv1) (x :: al)), (Permutation (selsort al gv1) (n0 :: x0)), (Permutation (selsort al gv1) (n0 :: al)), (Permutation (selsort al gv1) (n :: x0)), (Permutation (selsort al gv1) (n :: al)), (Permutation (selsort al gv1) (gv1 :: x0)), (Permutation (selsort al gv1) (gv1 :: al)), (Permutation (selsort al gv1) (selection_sort x0)), (Permutation (selsort al gv1) (selection_sort al))
(Permutation (selsort al gv1) (selsort x0 n0)), (Permutation (selsort al gv1) (selsort x0 n)), (Permutation (selsort al gv1) (selsort x0 gv1)), (Permutation (selsort al gv1) (selsort al x)), (Permutation (selsort al gv1) (selsort al n0)), (Permutation (selsort al gv1) (selsort al n)), (Permutation (selsort al gv1) (x0 ++ x0)), (Permutation (selsort al gv1) (x0 ++ al)), (Permutation (selsort al gv1) (al ++ x0)), (Permutation (selsort al gv1) (al ++ al))
(Permutation (x0 ++ x0) (gv1 :: x0)), (Permutation (x0 ++ x0) (gv1 :: al)), (Permutation (x0 ++ x0) (selsort x0 gv1)), (Permutation (x0 ++ x0) (selsort al gv1)), (Permutation (x0 ++ al) (gv1 :: x0)), (Permutation (x0 ++ al) (gv1 :: al)), (Permutation (x0 ++ al) (selsort x0 gv1)), (Permutation (x0 ++ al) (selsort al gv1)), (Permutation (al ++ x0) (gv1 :: x0)), (Permutation (al ++ x0) (gv1 :: al))
(Permutation (al ++ x0) (selsort al gv1)), (Permutation (al ++ al) (gv1 :: x0)), (Permutation (al ++ al) (gv1 :: al)), (Permutation (al ++ al) (selsort x0 gv1)), (Permutation (al ++ al) (selsort al gv1)), (Permutation [] (gv1 :: x0)), (Permutation [] (gv1 :: al)), (Permutation [] (selsort x0 gv1)), (Permutation [] (selsort al gv1)), (In x (gv1 :: x0))
(In x (selsort x0 gv1)), (In x (selsort al gv1)), (In n0 (gv1 :: x0)), (In n0 (gv1 :: al)), (In n0 (selsort x0 gv1)), (In n0 (selsort al gv1)), (In n (gv1 :: x0)), (In n (gv1 :: al)), (In n (selsort x0 gv1)), (In n (selsort al gv1))
(In gv1 al), (In gv1 (x :: x0)), (In gv1 (x :: al)), (In gv1 (n0 :: x0)), (In gv1 (n0 :: al)), (In gv1 (n :: x0)), (In gv1 (n :: al)), (In gv1 (gv1 :: x0)), (In gv1 (gv1 :: al)), (In gv1 (selection_sort x0))
(In gv1 (selsort x0 x)), (In gv1 (selsort x0 n0)), (In gv1 (selsort x0 n)), (In gv1 (selsort x0 gv1)), (In gv1 (selsort al x)), (In gv1 (selsort al n0)), (In gv1 (selsort al n)), (In gv1 (selsort al gv1)), (In gv1 (x0 ++ x0)), (In gv1 (x0 ++ al))
(In gv1 (al ++ al)), (In (length x0) (gv1 :: x0)), (In (length x0) (gv1 :: al)), (In (length x0) (selsort x0 gv1)), (In (length x0) (selsort al gv1)), (In (length al) (gv1 :: x0)), (In (length al) (gv1 :: al)), (In (length al) (selsort x0 gv1)), (In (length al) (selsort al gv1)), (x < gv1)
(n < gv1), (gv1 < x), (gv1 < n0), (gv1 < n), (gv1 < length x0), (gv1 < length al), (length x0 < gv1), (length al < gv1), (x <= gv1), (n0 <= gv1)
(gv1 <= x), (gv1 <= n0), (gv1 <= n), (gv1 <= length x0), (gv1 <= length al), (length x0 <= gv1), (length al <= gv1), (selsort x0 gv1 = x0), (selsort x0 gv1 = al), (selsort x0 gv1 = selection_sort x0)
(selsort x0 gv1 = x0 ++ x0), (selsort x0 gv1 = x0 ++ al), (selsort x0 gv1 = al ++ x0), (selsort x0 gv1 = al ++ al), (selsort al gv1 = x0), (selsort al gv1 = al), (selsort al gv1 = selection_sort x0), (selsort al gv1 = selection_sort al), (selsort al gv1 = x0 ++ x0), (selsort al gv1 = x0 ++ al)
(selsort al gv1 = al ++ al), (length x0 = gv1), (length al = gv1)

Label: 1 (1)
(x <=* gv0 :: al), (x <=* gv0 :: x0), (x <=* selsort al gv0), (x <=* selsort x0 gv0), (n0 <=* gv0 :: al), (n0 <=* gv0 :: x0), (n0 <=* selsort al gv0), (n0 <=* selsort x0 gv0), (n <=* gv0 :: al), (n <=* gv0 :: x0)
(n <=* selsort x0 gv0), (gv0 <=* al), (gv0 <=* x0), (gv0 <=* x :: al), (gv0 <=* x :: x0), (gv0 <=* n0 :: al), (gv0 <=* n0 :: x0), (gv0 <=* n :: al), (gv0 <=* n :: x0), (gv0 <=* gv0 :: al)
(gv0 <=* selection_sort al), (gv0 <=* selection_sort x0), (gv0 <=* selsort al x), (gv0 <=* selsort al n0), (gv0 <=* selsort al n), (gv0 <=* selsort al gv0), (gv0 <=* selsort x0 x), (gv0 <=* selsort x0 n0), (gv0 <=* selsort x0 n), (gv0 <=* selsort x0 gv0)
(gv0 <=* al ++ x0), (gv0 <=* x0 ++ al), (gv0 <=* x0 ++ x0), (gv0 <=* []), (length al <=* gv0 :: al), (length al <=* gv0 :: x0), (length al <=* selsort al gv0), (length al <=* selsort x0 gv0), (length x0 <=* gv0 :: al), (length x0 <=* gv0 :: x0)
(length x0 <=* selsort x0 gv0), (sorted (gv0 :: al)), (sorted (gv0 :: x0)), (sorted (selsort al gv0)), (sorted (selsort x0 gv0)), (Permutation al (gv0 :: al)), (Permutation al (gv0 :: x0)), (Permutation al (selsort al gv0)), (Permutation al (selsort x0 gv0)), (Permutation x0 (gv0 :: al))
(Permutation x0 (selsort al gv0)), (Permutation x0 (selsort x0 gv0)), (Permutation (x :: al) (gv0 :: al)), (Permutation (x :: al) (gv0 :: x0)), (Permutation (x :: al) (selsort al gv0)), (Permutation (x :: al) (selsort x0 gv0)), (Permutation (x :: x0) (gv0 :: al)), (Permutation (x :: x0) (gv0 :: x0)), (Permutation (x :: x0) (selsort al gv0)), (Permutation (x :: x0) (selsort x0 gv0))
(Permutation (n0 :: al) (gv0 :: x0)), (Permutation (n0 :: al) (selsort al gv0)), (Permutation (n0 :: al) (selsort x0 gv0)), (Permutation (n0 :: x0) (gv0 :: al)), (Permutation (n0 :: x0) (gv0 :: x0)), (Permutation (n0 :: x0) (selsort al gv0)), (Permutation (n0 :: x0) (selsort x0 gv0)), (Permutation (n :: al) (gv0 :: al)), (Permutation (n :: al) (gv0 :: x0)), (Permutation (n :: al) (selsort al gv0))
(Permutation (n :: x0) (gv0 :: al)), (Permutation (n :: x0) (gv0 :: x0)), (Permutation (n :: x0) (selsort al gv0)), (Permutation (n :: x0) (selsort x0 gv0)), (Permutation (gv0 :: al) al), (Permutation (gv0 :: al) x0), (Permutation (gv0 :: al) (x :: al)), (Permutation (gv0 :: al) (x :: x0)), (Permutation (gv0 :: al) (n0 :: al)), (Permutation (gv0 :: al) (n0 :: x0))
(Permutation (gv0 :: al) (n :: x0)), (Permutation (gv0 :: al) (gv0 :: x0)), (Permutation (gv0 :: al) (selection_sort al)), (Permutation (gv0 :: al) (selection_sort x0)), (Permutation (gv0 :: al) (selsort al x)), (Permutation (gv0 :: al) (selsort al n0)), (Permutation (gv0 :: al) (selsort al n)), (Permutation (gv0 :: al) (selsort al gv0)), (Permutation (gv0 :: al) (selsort x0 x)), (Permutation (gv0 :: al) (selsort x0 n0))
(Permutation (gv0 :: al) (selsort x0 gv0)), (Permutation (gv0 :: al) (al ++ al)), (Permutation (gv0 :: al) (al ++ x0)), (Permutation (gv0 :: al) (x0 ++ al)), (Permutation (gv0 :: al) (x0 ++ x0)), (Permutation (gv0 :: al) []), (Permutation (gv0 :: x0) al), (Permutation (gv0 :: x0) x0), (Permutation (gv0 :: x0) (x :: al)), (Permutation (gv0 :: x0) (x :: x0))
(Permutation (gv0 :: x0) (n0 :: x0)), (Permutation (gv0 :: x0) (n :: al)), (Permutation (gv0 :: x0) (n :: x0)), (Permutation (gv0 :: x0) (gv0 :: al)), (Permutation (gv0 :: x0) (selection_sort al)), (Permutation (gv0 :: x0) (selection_sort x0)), (Permutation (gv0 :: x0) (selsort al x)), (Permutation (gv0 :: x0) (selsort al n0)), (Permutation (gv0 :: x0) (selsort al n)), (Permutation (gv0 :: x0) (selsort al gv0))
(Permutation (gv0 :: x0) (selsort x0 n0)), (Permutation (gv0 :: x0) (selsort x0 n)), (Permutation (gv0 :: x0) (selsort x0 gv0)), (Permutation (gv0 :: x0) (al ++ al)), (Permutation (gv0 :: x0) (al ++ x0)), (Permutation (gv0 :: x0) (x0 ++ al)), (Permutation (gv0 :: x0) (x0 ++ x0)), (Permutation (gv0 :: x0) []), (Permutation (selection_sort al) (gv0 :: al)), (Permutation (selection_sort al) (gv0 :: x0))
(Permutation (selection_sort al) (selsort x0 gv0)), (Permutation (selection_sort x0) (gv0 :: al)), (Permutation (selection_sort x0) (gv0 :: x0)), (Permutation (selection_sort x0) (selsort al gv0)), (Permutation (selection_sort x0) (selsort x0 gv0)), (Permutation (selsort al x) (gv0 :: al)), (Permutation (selsort al x) (gv0 :: x0)), (Permutation (selsort al x) (selsort al gv0)), (Permutation (selsort al x) (selsort x0 gv0)), (Permutation (selsort al n0) (gv0 :: al))
(Permutation (selsort al n0) (selsort al gv0)), (Permutation (selsort al n0) (selsort x0 gv0)), (Permutation (selsort al n) (gv0 :: al)), (Permutation (selsort al n) (gv0 :: x0)), (Permutation (selsort al n) (selsort al gv0)), (Permutation (selsort al n) (selsort x0 gv0)), (Permutation (selsort al gv0) al), (Permutation (selsort al gv0) x0), (Permutation (selsort al gv0) (x :: al)), (Permutation (selsort al gv0) (x :: x0))
(Permutation (selsort al gv0) (n0 :: x0)), (Permutation (selsort al gv0) (n :: al)), (Permutation (selsort al gv0) (n :: x0)), (Permutation (selsort al gv0) (gv0 :: al)), (Permutation (selsort al gv0) (gv0 :: x0)), (Permutation (selsort al gv0) (selection_sort al)), (Permutation (selsort al gv0) (selection_sort x0)), (Permutation (selsort al gv0) (selsort al x)), (Permutation (selsort al gv0) (selsort al n0)), (Permutation (selsort al gv0) (selsort al n))
(Permutation (selsort al gv0) (selsort x0 n0)), (Permutation (selsort al gv0) (selsort x0 n)), (Permutation (selsort al gv0) (selsort x0 gv0)), (Permutation (selsort al gv0) (al ++ al)), (Permutation (selsort al gv0) (al ++ x0)), (Permutation (selsort al gv0) (x0 ++ al)), (Permutation (selsort al gv0) (x0 ++ x0)), (Permutation (selsort al gv0) []), (Permutation (selsort x0 x) (gv0 :: al)), (Permutation (selsort x0 x) (gv0 :: x0))
(Permutation (selsort x0 x) (selsort x0 gv0)), (Permutation (selsort x0 n0) (gv0 :: al)), (Permutation (selsort x0 n0) (gv0 :: x0)), (Permutation (selsort x0 n0) (selsort al gv0)), (Permutation (selsort x0 n0) (selsort x0 gv0)), (Permutation (selsort x0 n) (gv0 :: al)), (Permutation (selsort x0 n) (gv0 :: x0)), (Permutation (selsort x0 n) (selsort al gv0)), (Permutation (selsort x0 n) (selsort x0 gv0)), (Permutation (selsort x0 gv0) al)
(Permutation (selsort x0 gv0) (x :: al)), (Permutation (selsort x0 gv0) (x :: x0)), (Permutation (selsort x0 gv0) (n0 :: al)), (Permutation (selsort x0 gv0) (n0 :: x0)), (Permutation (selsort x0 gv0) (n :: al)), (Permutation (selsort x0 gv0) (n :: x0)), (Permutation (selsort x0 gv0) (gv0 :: al)), (Permutation (selsort x0 gv0) (gv0 :: x0)), (Permutation (selsort x0 gv0) (selection_sort al)), (Permutation (selsort x0 gv0) (selection_sort x0))
(Permutation (selsort x0 gv0) (selsort al n0)), (Permutation (selsort x0 gv0) (selsort al n)), (Permutation (selsort x0 gv0) (selsort al gv0)), (Permutation (selsort x0 gv0) (selsort x0 x)), (Permutation (selsort x0 gv0) (selsort x0 n0)), (Permutation (selsort x0 gv0) (selsort x0 n)), (Permutation (selsort x0 gv0) (al ++ al)), (Permutation (selsort x0 gv0) (al ++ x0)), (Permutation (selsort x0 gv0) (x0 ++ al)), (Permutation (selsort x0 gv0) (x0 ++ x0))
(Permutation (al ++ al) (gv0 :: al)), (Permutation (al ++ al) (gv0 :: x0)), (Permutation (al ++ al) (selsort al gv0)), (Permutation (al ++ al) (selsort x0 gv0)), (Permutation (al ++ x0) (gv0 :: al)), (Permutation (al ++ x0) (gv0 :: x0)), (Permutation (al ++ x0) (selsort al gv0)), (Permutation (al ++ x0) (selsort x0 gv0)), (Permutation (x0 ++ al) (gv0 :: al)), (Permutation (x0 ++ al) (gv0 :: x0))
(Permutation (x0 ++ al) (selsort x0 gv0)), (Permutation (x0 ++ x0) (gv0 :: al)), (Permutation (x0 ++ x0) (gv0 :: x0)), (Permutation (x0 ++ x0) (selsort al gv0)), (Permutation (x0 ++ x0) (selsort x0 gv0)), (Permutation [] (gv0 :: al)), (Permutation [] (gv0 :: x0)), (Permutation [] (selsort al gv0)), (Permutation [] (selsort x0 gv0)), (In x (gv0 :: al))
(In x (selsort al gv0)), (In x (selsort x0 gv0)), (In n0 (gv0 :: al)), (In n0 (gv0 :: x0)), (In n0 (selsort al gv0)), (In n0 (selsort x0 gv0)), (In n (gv0 :: al)), (In n (gv0 :: x0)), (In n (selsort al gv0)), (In n (selsort x0 gv0))
(In gv0 x0), (In gv0 (x :: al)), (In gv0 (x :: x0)), (In gv0 (n0 :: al)), (In gv0 (n0 :: x0)), (In gv0 (n :: al)), (In gv0 (n :: x0)), (In gv0 (gv0 :: al)), (In gv0 (gv0 :: x0)), (In gv0 (selection_sort al))
(In gv0 (selsort al x)), (In gv0 (selsort al n0)), (In gv0 (selsort al n)), (In gv0 (selsort al gv0)), (In gv0 (selsort x0 x)), (In gv0 (selsort x0 n0)), (In gv0 (selsort x0 n)), (In gv0 (selsort x0 gv0)), (In gv0 (al ++ al)), (In gv0 (al ++ x0))
(In gv0 (x0 ++ x0)), (In (length al) (gv0 :: al)), (In (length al) (gv0 :: x0)), (In (length al) (selsort al gv0)), (In (length al) (selsort x0 gv0)), (In (length x0) (gv0 :: al)), (In (length x0) (gv0 :: x0)), (In (length x0) (selsort al gv0)), (In (length x0) (selsort x0 gv0)), (x < gv0)
(n < gv0), (gv0 < x), (gv0 < n0), (gv0 < n), (gv0 < length al), (gv0 < length x0), (length al < gv0), (length x0 < gv0), (x <= gv0), (n0 <= gv0)
(gv0 <= x), (gv0 <= n0), (gv0 <= n), (gv0 <= length al), (gv0 <= length x0), (length al <= gv0), (length x0 <= gv0), (selsort al gv0 = al), (selsort al gv0 = x0), (selsort al gv0 = selection_sort al)
(selsort al gv0 = al ++ al), (selsort al gv0 = al ++ x0), (selsort al gv0 = x0 ++ al), (selsort al gv0 = x0 ++ x0), (selsort x0 gv0 = al), (selsort x0 gv0 = x0), (selsort x0 gv0 = selection_sort al), (selsort x0 gv0 = selection_sort x0), (selsort x0 gv0 = al ++ al), (selsort x0 gv0 = al ++ x0)
(selsort x0 gv0 = x0 ++ x0), (length al = gv0), (length x0 = gv0)

Label: 2 (2)
(false = sorted_bool x0), (false = sorted_bool al), (true = sorted_bool x0), (true = sorted_bool al), (x <=* x0), (x <=* al), (x <=* x :: x0), (x <=* x :: al), (x <=* n0 :: x0), (x <=* n0 :: al)
(x <=* selection_sort al), (x <=* selsort x0 x), (x <=* selsort x0 n0), (x <=* selsort al x), (x <=* selsort al n0), (x <=* x0 ++ x0), (x <=* x0 ++ al), (x <=* al ++ x0), (x <=* al ++ al), (x <=* [])
(n0 <=* al), (n0 <=* x :: x0), (n0 <=* x :: al), (n0 <=* n0 :: x0), (n0 <=* n0 :: al), (n0 <=* selection_sort x0), (n0 <=* selection_sort al), (n0 <=* selsort x0 x), (n0 <=* selsort x0 n0), (n0 <=* selsort al x)
(n0 <=* x0 ++ x0), (n0 <=* x0 ++ al), (n0 <=* al ++ x0), (n0 <=* al ++ al), (n0 <=* []), (length x0 <=* x0), (length x0 <=* al), (length x0 <=* x :: x0), (length x0 <=* x :: al), (length x0 <=* n0 :: x0)
(length x0 <=* selection_sort x0), (length x0 <=* selection_sort al), (length x0 <=* selsort x0 x), (length x0 <=* selsort x0 n0), (length x0 <=* selsort al x), (length x0 <=* selsort al n0), (length x0 <=* x0 ++ x0), (length x0 <=* x0 ++ al), (length x0 <=* al ++ x0), (length x0 <=* al ++ al)
(length al <=* x0), (length al <=* al), (length al <=* x :: x0), (length al <=* x :: al), (length al <=* n0 :: x0), (length al <=* n0 :: al), (length al <=* selection_sort x0), (length al <=* selection_sort al), (length al <=* selsort x0 x), (length al <=* selsort x0 n0)
(length al <=* selsort al n0), (length al <=* x0 ++ x0), (length al <=* x0 ++ al), (length al <=* al ++ x0), (length al <=* al ++ al), (length al <=* []), (sorted x0), (sorted al), (sorted (x :: x0)), (sorted (x :: al))
(sorted (n0 :: al)), (sorted (selection_sort x0)), (sorted (selection_sort al)), (sorted (selsort x0 x)), (sorted (selsort x0 n0)), (sorted (selsort al x)), (sorted (selsort al n0)), (sorted (x0 ++ x0)), (sorted (x0 ++ al)), (sorted (al ++ x0))
(sorted []), (Permutation x0 al), (Permutation x0 (x :: x0)), (Permutation x0 (x :: al)), (Permutation x0 (n0 :: x0)), (Permutation x0 (n0 :: al)), (Permutation x0 (selection_sort x0)), (Permutation x0 (selection_sort al)), (Permutation x0 (selsort x0 x)), (Permutation x0 (selsort x0 n0))
(Permutation x0 (selsort al n0)), (Permutation x0 (x0 ++ x0)), (Permutation x0 (x0 ++ al)), (Permutation x0 (al ++ x0)), (Permutation x0 (al ++ al)), (Permutation x0 []), (Permutation al x0), (Permutation al (x :: x0)), (Permutation al (x :: al)), (Permutation al (n0 :: x0))
(Permutation al (selection_sort x0)), (Permutation al (selection_sort al)), (Permutation al (selsort x0 x)), (Permutation al (selsort x0 n0)), (Permutation al (selsort al x)), (Permutation al (selsort al n0)), (Permutation al (x0 ++ x0)), (Permutation al (x0 ++ al)), (Permutation al (al ++ x0)), (Permutation al (al ++ al))
(Permutation (x :: x0) x0), (Permutation (x :: x0) al), (Permutation (x :: x0) (x :: al)), (Permutation (x :: x0) (n0 :: x0)), (Permutation (x :: x0) (n0 :: al)), (Permutation (x :: x0) (selection_sort x0)), (Permutation (x :: x0) (selection_sort al)), (Permutation (x :: x0) (selsort x0 x)), (Permutation (x :: x0) (selsort x0 n0)), (Permutation (x :: x0) (selsort al x))
(Permutation (x :: x0) (x0 ++ x0)), (Permutation (x :: x0) (x0 ++ al)), (Permutation (x :: x0) (al ++ x0)), (Permutation (x :: x0) (al ++ al)), (Permutation (x :: x0) []), (Permutation (x :: al) x0), (Permutation (x :: al) al), (Permutation (x :: al) (x :: x0)), (Permutation (x :: al) (n0 :: x0)), (Permutation (x :: al) (n0 :: al))
(Permutation (x :: al) (selection_sort al)), (Permutation (x :: al) (selsort x0 x)), (Permutation (x :: al) (selsort x0 n0)), (Permutation (x :: al) (selsort al x)), (Permutation (x :: al) (selsort al n0)), (Permutation (x :: al) (x0 ++ x0)), (Permutation (x :: al) (x0 ++ al)), (Permutation (x :: al) (al ++ x0)), (Permutation (x :: al) (al ++ al)), (Permutation (x :: al) [])
(Permutation (n0 :: x0) al), (Permutation (n0 :: x0) (x :: x0)), (Permutation (n0 :: x0) (x :: al)), (Permutation (n0 :: x0) (n0 :: al)), (Permutation (n0 :: x0) (selection_sort x0)), (Permutation (n0 :: x0) (selection_sort al)), (Permutation (n0 :: x0) (selsort x0 x)), (Permutation (n0 :: x0) (selsort x0 n0)), (Permutation (n0 :: x0) (selsort al x)), (Permutation (n0 :: x0) (selsort al n0))
(Permutation (n0 :: x0) (x0 ++ al)), (Permutation (n0 :: x0) (al ++ x0)), (Permutation (n0 :: x0) (al ++ al)), (Permutation (n0 :: x0) []), (Permutation (n0 :: al) x0), (Permutation (n0 :: al) al), (Permutation (n0 :: al) (x :: x0)), (Permutation (n0 :: al) (x :: al)), (Permutation (n0 :: al) (n0 :: x0)), (Permutation (n0 :: al) (selection_sort x0))
(Permutation (n0 :: al) (selsort x0 x)), (Permutation (n0 :: al) (selsort x0 n0)), (Permutation (n0 :: al) (selsort al x)), (Permutation (n0 :: al) (selsort al n0)), (Permutation (n0 :: al) (x0 ++ x0)), (Permutation (n0 :: al) (x0 ++ al)), (Permutation (n0 :: al) (al ++ x0)), (Permutation (n0 :: al) (al ++ al)), (Permutation (n0 :: al) []), (Permutation (selection_sort x0) x0)
(Permutation (selection_sort x0) (x :: x0)), (Permutation (selection_sort x0) (x :: al)), (Permutation (selection_sort x0) (n0 :: x0)), (Permutation (selection_sort x0) (n0 :: al)), (Permutation (selection_sort x0) (selection_sort al)), (Permutation (selection_sort x0) (selsort x0 x)), (Permutation (selection_sort x0) (selsort x0 n0)), (Permutation (selection_sort x0) (selsort al x)), (Permutation (selection_sort x0) (selsort al n0)), (Permutation (selection_sort x0) (x0 ++ x0))
(Permutation (selection_sort x0) (al ++ x0)), (Permutation (selection_sort x0) (al ++ al)), (Permutation (selection_sort x0) []), (Permutation (selection_sort al) x0), (Permutation (selection_sort al) al), (Permutation (selection_sort al) (x :: x0)), (Permutation (selection_sort al) (x :: al)), (Permutation (selection_sort al) (n0 :: x0)), (Permutation (selection_sort al) (n0 :: al)), (Permutation (selection_sort al) (selection_sort x0))
(Permutation (selection_sort al) (selsort x0 n0)), (Permutation (selection_sort al) (selsort al x)), (Permutation (selection_sort al) (selsort al n0)), (Permutation (selection_sort al) (x0 ++ x0)), (Permutation (selection_sort al) (x0 ++ al)), (Permutation (selection_sort al) (al ++ x0)), (Permutation (selection_sort al) (al ++ al)), (Permutation (selection_sort al) []), (Permutation (selsort x0 x) x0), (Permutation (selsort x0 x) al)
(Permutation (selsort x0 x) (x :: al)), (Permutation (selsort x0 x) (n0 :: x0)), (Permutation (selsort x0 x) (n0 :: al)), (Permutation (selsort x0 x) (selection_sort x0)), (Permutation (selsort x0 x) (selection_sort al)), (Permutation (selsort x0 x) (selsort x0 n0)), (Permutation (selsort x0 x) (selsort al x)), (Permutation (selsort x0 x) (selsort al n0)), (Permutation (selsort x0 x) (x0 ++ x0)), (Permutation (selsort x0 x) (x0 ++ al))
(Permutation (selsort x0 x) (al ++ al)), (Permutation (selsort x0 x) []), (Permutation (selsort x0 n0) x0), (Permutation (selsort x0 n0) al), (Permutation (selsort x0 n0) (x :: x0)), (Permutation (selsort x0 n0) (x :: al)), (Permutation (selsort x0 n0) (n0 :: x0)), (Permutation (selsort x0 n0) (n0 :: al)), (Permutation (selsort x0 n0) (selection_sort x0)), (Permutation (selsort x0 n0) (selection_sort al))
(Permutation (selsort x0 n0) (selsort al x)), (Permutation (selsort x0 n0) (selsort al n0)), (Permutation (selsort x0 n0) (x0 ++ x0)), (Permutation (selsort x0 n0) (x0 ++ al)), (Permutation (selsort x0 n0) (al ++ x0)), (Permutation (selsort x0 n0) (al ++ al)), (Permutation (selsort x0 n0) []), (Permutation (selsort al x) x0), (Permutation (selsort al x) al), (Permutation (selsort al x) (x :: x0))
(Permutation (selsort al x) (n0 :: x0)), (Permutation (selsort al x) (n0 :: al)), (Permutation (selsort al x) (selection_sort x0)), (Permutation (selsort al x) (selection_sort al)), (Permutation (selsort al x) (selsort x0 x)), (Permutation (selsort al x) (selsort x0 n0)), (Permutation (selsort al x) (selsort al n0)), (Permutation (selsort al x) (x0 ++ x0)), (Permutation (selsort al x) (x0 ++ al)), (Permutation (selsort al x) (al ++ x0))
(Permutation (selsort al x) []), (Permutation (selsort al n0) x0), (Permutation (selsort al n0) al), (Permutation (selsort al n0) (x :: x0)), (Permutation (selsort al n0) (x :: al)), (Permutation (selsort al n0) (n0 :: x0)), (Permutation (selsort al n0) (n0 :: al)), (Permutation (selsort al n0) (selection_sort x0)), (Permutation (selsort al n0) (selection_sort al)), (Permutation (selsort al n0) (selsort x0 x))
(Permutation (selsort al n0) (selsort al x)), (Permutation (selsort al n0) (x0 ++ x0)), (Permutation (selsort al n0) (x0 ++ al)), (Permutation (selsort al n0) (al ++ x0)), (Permutation (selsort al n0) (al ++ al)), (Permutation (selsort al n0) []), (Permutation (x0 ++ x0) x0), (Permutation (x0 ++ x0) al), (Permutation (x0 ++ x0) (x :: x0)), (Permutation (x0 ++ x0) (x :: al))
(Permutation (x0 ++ x0) (n0 :: al)), (Permutation (x0 ++ x0) (selection_sort x0)), (Permutation (x0 ++ x0) (selection_sort al)), (Permutation (x0 ++ x0) (selsort x0 x)), (Permutation (x0 ++ x0) (selsort x0 n0)), (Permutation (x0 ++ x0) (selsort al x)), (Permutation (x0 ++ x0) (selsort al n0)), (Permutation (x0 ++ x0) (x0 ++ al)), (Permutation (x0 ++ x0) (al ++ x0)), (Permutation (x0 ++ x0) (al ++ al))
(Permutation (x0 ++ al) x0), (Permutation (x0 ++ al) al), (Permutation (x0 ++ al) (x :: x0)), (Permutation (x0 ++ al) (x :: al)), (Permutation (x0 ++ al) (n0 :: x0)), (Permutation (x0 ++ al) (n0 :: al)), (Permutation (x0 ++ al) (selection_sort x0)), (Permutation (x0 ++ al) (selection_sort al)), (Permutation (x0 ++ al) (selsort x0 x)), (Permutation (x0 ++ al) (selsort x0 n0))
(Permutation (x0 ++ al) (selsort al n0)), (Permutation (x0 ++ al) (x0 ++ x0)), (Permutation (x0 ++ al) (al ++ x0)), (Permutation (x0 ++ al) (al ++ al)), (Permutation (x0 ++ al) []), (Permutation (al ++ x0) x0), (Permutation (al ++ x0) al), (Permutation (al ++ x0) (x :: x0)), (Permutation (al ++ x0) (x :: al)), (Permutation (al ++ x0) (n0 :: x0))
(Permutation (al ++ x0) (selection_sort x0)), (Permutation (al ++ x0) (selection_sort al)), (Permutation (al ++ x0) (selsort x0 x)), (Permutation (al ++ x0) (selsort x0 n0)), (Permutation (al ++ x0) (selsort al x)), (Permutation (al ++ x0) (selsort al n0)), (Permutation (al ++ x0) (x0 ++ x0)), (Permutation (al ++ x0) (x0 ++ al)), (Permutation (al ++ x0) (al ++ al)), (Permutation (al ++ x0) [])
(Permutation (al ++ al) al), (Permutation (al ++ al) (x :: x0)), (Permutation (al ++ al) (x :: al)), (Permutation (al ++ al) (n0 :: x0)), (Permutation (al ++ al) (n0 :: al)), (Permutation (al ++ al) (selection_sort x0)), (Permutation (al ++ al) (selection_sort al)), (Permutation (al ++ al) (selsort x0 x)), (Permutation (al ++ al) (selsort x0 n0)), (Permutation (al ++ al) (selsort al x))
(Permutation (al ++ al) (x0 ++ x0)), (Permutation (al ++ al) (x0 ++ al)), (Permutation (al ++ al) (al ++ x0)), (Permutation (al ++ al) []), (Permutation [] x0), (Permutation [] al), (Permutation [] (x :: x0)), (Permutation [] (x :: al)), (Permutation [] (n0 :: x0)), (Permutation [] (n0 :: al))
(Permutation [] (selection_sort al)), (Permutation [] (selsort x0 x)), (Permutation [] (selsort x0 n0)), (Permutation [] (selsort al x)), (Permutation [] (selsort al n0)), (Permutation [] (x0 ++ x0)), (Permutation [] (x0 ++ al)), (Permutation [] (al ++ x0)), (Permutation [] (al ++ al)), (In x x0)
(In x (x :: x0)), (In x (x :: al)), (In x (n0 :: x0)), (In x (n0 :: al)), (In x (selection_sort x0)), (In x (selection_sort al)), (In x (selsort x0 x)), (In x (selsort x0 n0)), (In x (selsort al x)), (In x (selsort al n0))
(In x (x0 ++ al)), (In x (al ++ x0)), (In x (al ++ al)), (In n0 x0), (In n0 al), (In n0 (x :: x0)), (In n0 (x :: al)), (In n0 (n0 :: x0)), (In n0 (n0 :: al)), (In n0 (selection_sort x0))
(In n0 (selsort x0 x)), (In n0 (selsort x0 n0)), (In n0 (selsort al x)), (In n0 (selsort al n0)), (In n0 (x0 ++ x0)), (In n0 (x0 ++ al)), (In n0 (al ++ x0)), (In n0 (al ++ al)), (In (length x0) x0), (In (length x0) al)
(In (length x0) (x :: al)), (In (length x0) (n0 :: x0)), (In (length x0) (n0 :: al)), (In (length x0) (selection_sort x0)), (In (length x0) (selection_sort al)), (In (length x0) (selsort x0 x)), (In (length x0) (selsort x0 n0)), (In (length x0) (selsort al x)), (In (length x0) (selsort al n0)), (In (length x0) (x0 ++ x0))
(In (length x0) (al ++ x0)), (In (length x0) (al ++ al)), (In (length al) x0), (In (length al) al), (In (length al) (x :: x0)), (In (length al) (x :: al)), (In (length al) (n0 :: x0)), (In (length al) (n0 :: al)), (In (length al) (selection_sort x0)), (In (length al) (selection_sort al))
(In (length al) (selsort x0 n0)), (In (length al) (selsort al x)), (In (length al) (selsort al n0)), (In (length al) (x0 ++ x0)), (In (length al) (x0 ++ al)), (In (length al) (al ++ x0)), (In (length al) (al ++ al)), (x < n0), (x < length x0), (x < length al)
(n0 < length x0), (n0 < length al), (length x0 < x), (length x0 < n0), (length x0 < length al), (length al < x), (length al < n0), (length al < length x0), (x <= n0), (x <= length x0)
(n0 <= x), (n0 <= length x0), (n0 <= length al), (length x0 <= x), (length x0 <= n0), (length x0 <= length al), (length al <= x), (length al <= n0), (length al <= length x0), (selection_sort x0 = x0)
(selection_sort x0 = x0 ++ x0), (selection_sort x0 = x0 ++ al), (selection_sort x0 = al ++ x0), (selection_sort x0 = al ++ al), (selection_sort al = x0), (selection_sort al = al), (selection_sort al = x0 ++ x0), (selection_sort al = x0 ++ al), (selection_sort al = al ++ x0), (selection_sort al = al ++ al)
(selsort x0 x = al), (selsort x0 x = selection_sort x0), (selsort x0 x = selection_sort al), (selsort x0 x = x0 ++ x0), (selsort x0 x = x0 ++ al), (selsort x0 x = al ++ x0), (selsort x0 x = al ++ al), (selsort x0 n0 = x0), (selsort x0 n0 = al), (selsort x0 n0 = selection_sort x0)
(selsort x0 n0 = x0 ++ x0), (selsort x0 n0 = x0 ++ al), (selsort x0 n0 = al ++ x0), (selsort x0 n0 = al ++ al), (selsort al x = x0), (selsort al x = al), (selsort al x = selection_sort x0), (selsort al x = selection_sort al), (selsort al x = x0 ++ x0), (selsort al x = x0 ++ al)
(selsort al x = al ++ al), (selsort al n0 = x0), (selsort al n0 = al), (selsort al n0 = selection_sort x0), (selsort al n0 = selection_sort al), (selsort al n0 = x0 ++ x0), (selsort al n0 = x0 ++ al), (selsort al n0 = al ++ x0), (selsort al n0 = al ++ al), (x0 ++ x0 = x0)
(x0 ++ al = x0), (x0 ++ al = al), (al ++ x0 = x0), (al ++ x0 = al), (al ++ al = x0), (al ++ al = al), (length x0 = x), (length x0 = n0), (length al = x), (length al = n0)


------------------------------ SYNTHESIS RESULTS ------------------------------
Time Elapsed From Start: 527.28 seconds


Label: 0 (0)
(Permutation (n :: x0) (gv1 :: x0)), (Permutation (n :: al) (gv1 :: al)), (Permutation (gv1 :: x0) (n :: x0)), (Permutation (gv1 :: al) (n :: al)), (length x0 = gv1), (length al = gv1)

Label: 1 (1)
(length al = gv0), (length x0 = gv0)

Label: 2 (2)
(Permutation (n0 :: al) (x :: x0))


------------------------------ FINAL RESULTS ------------------------------
Time Elapsed From Start: 549.733 seconds


(S (length al) = S n -> Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(select n0 al = (x, x0) ->
 S (length al) = S n -> Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(length al = n -> Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(length al = n ->
 S (length al) = S n -> Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(length al = n ->
 select n0 al = (x, x0) ->
 Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(length al = n ->
 select n0 al = (x, x0) ->
 S (length al) = S n -> Permutation (n :: al) (gv1 :: al) -> length al = gv1)
(select n0 al = (x, x0) -> Permutation (n0 :: al) (x :: x0))
(Permutation (n0 :: al) (x :: x0) -> length al = length x0)